; ModuleID = 'build/adafruit_feather_stm32f405/drivers/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235213 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235193 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235183 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235283 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235273 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235263 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235253 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235243 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235233 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235223 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236960 to i8*), void (i8*)* inttoptr (i32 134235203 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !456
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !485
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !505
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.109 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.105 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.106 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.107 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.108 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.99 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.98 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !517
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !664
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !523
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !673
@.str.121 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !709
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), %struct.ctr_params { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i32 0, i32 0), %struct.ctr_params { i32 285933600 } }], align 4, !dbg !719
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !724
@.str.137 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !744
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !897
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !882
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !855
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !871
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !913
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !915
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !917
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !919
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !921
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !923
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !925
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !927
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !929
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !931
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !941
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !970
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1062
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1051
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1103
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1169
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !965
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1207
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1205
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1178
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1194
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1335
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !961
@.str.169 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1351
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1637
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1603
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1589
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1528
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !959
@.str.1.170 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1639
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1607
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1605
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1545
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !957
@.str.2.171 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1652
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1611
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1609
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1551
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !955
@.str.3.172 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1654
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1613
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1557
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !953
@.str.4.173 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1656
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1619
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1617
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1563
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !951
@.str.5.174 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1658
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1623
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1621
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1569
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !949
@.str.6.175 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1660
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1625
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1575
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.7.176 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1662
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1631
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1629
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1581
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !945
@.str.8.177 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1664
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1635
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1633
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1587
@.str.181 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1666
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !963
@.str.1.184 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1822
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1877
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1820
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1879
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.184, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1811
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1813
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1866
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1869
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1871
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1874
@.str.2.186 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.192 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1035
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1890
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1999
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2001
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1997
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1968
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !2003
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1526
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1543
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1549
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.172, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1555
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.173, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1561
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1567
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1573
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1579
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.177, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1585
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2093
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2133
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2136
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2140
@.str.229 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.233 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.234 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.235 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.239 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.240 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.241 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.242 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.243 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.238 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.237 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.239, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.240, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.241, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.242, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.243, i32 0, i32 0)], align 4
@.str.245 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2147
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2370
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2356
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2365
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2377
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2382
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.254 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.262, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.264, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.265, i32 0, i32 0)], align 4, !dbg !2410
@.str.259 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.260 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.261 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.262 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.263 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.264 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.258 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.265 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2522
@.str.8.257 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2535
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2643
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2646
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2648
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2375
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2367
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2650
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2686
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2234
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2684
@.str.318 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3298 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3356, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3406, !srcloc !3407
  ret void, !dbg !3408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3413, metadata !DIExpression()), !dbg !3415
  call void @llvm.dbg.value(metadata i32 0, metadata !3414, metadata !DIExpression()), !dbg !3415
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3416
  call void @llvm.dbg.value(metadata i32 %2, metadata !3414, metadata !DIExpression()), !dbg !3415
  %3 = and i32 %2, 2, !dbg !3417
  %4 = icmp eq i32 %3, 0, !dbg !3419
  br i1 %4, label %5, label %8, !dbg !3420

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3421
  %7 = zext i8 %6 to i32, !dbg !3421
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3421
  br label %21, !dbg !3427

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3428
  %10 = icmp eq i32 %9, 0, !dbg !3430
  br i1 %10, label %11, label %14, !dbg !3431

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3432
  %13 = zext i8 %12 to i32, !dbg !3432
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3432
  br label %21, !dbg !3438

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3439
  %16 = icmp eq i32 %15, 0, !dbg !3441
  br i1 %16, label %17, label %20, !dbg !3442

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3443
  %19 = zext i8 %18 to i32, !dbg !3443
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3443
  br label %21, !dbg !3449

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3450
  br label %21, !dbg !3451

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3415
  ret i32 %22, !dbg !3452
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3455, metadata !DIExpression()), !dbg !3458
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3459
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3459
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3459
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3456, metadata !DIExpression()), !dbg !3458
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3460
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3460
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3461
  call void @llvm.dbg.value(metadata i32 %7, metadata !3457, metadata !DIExpression()), !dbg !3458
  ret i32 %7, !dbg !3462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3468, metadata !DIExpression()), !dbg !3469
  %2 = add i32 %0, -1, !dbg !3470
  %3 = icmp ult i32 %2, 3, !dbg !3470
  %4 = trunc i32 %2 to i24, !dbg !3470
  %5 = shl i24 %4, 3, !dbg !3470
  %6 = lshr i24 4806469, %5, !dbg !3470
  %7 = trunc i24 %6 to i8, !dbg !3470
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3470
  ret i8 %8, !dbg !3471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3472 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3474, metadata !DIExpression()), !dbg !3484
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3485
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3485
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3475, metadata !DIExpression()), !dbg !3486
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3486
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3487
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3487
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3476, metadata !DIExpression()), !dbg !3488
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3488
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3489
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3489
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3477, metadata !DIExpression()), !dbg !3490
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3490
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3491
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3491
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3478, metadata !DIExpression()), !dbg !3492
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3492
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3493
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3493
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3479, metadata !DIExpression()), !dbg !3494
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3494
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3495
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3495
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3480, metadata !DIExpression()), !dbg !3496
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3496
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3497
  store i8* %10, i8** %16, align 4, !dbg !3497
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3498
  store i16 16, i16* %17, align 4, !dbg !3498
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3498
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3499
  %20 = trunc i32 %19 to i16, !dbg !3499
  store i16 %20, i16* %18, align 2, !dbg !3498
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3500
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3500
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3481, metadata !DIExpression()), !dbg !3501
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3502
  store i8* %11, i8** %22, align 4, !dbg !3502
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3502
  store i32 16, i32* %23, align 4, !dbg !3502
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3502
  store i8* %13, i8** %24, align 4, !dbg !3502
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3502
  store i32 16, i32* %25, align 4, !dbg !3502
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3502
  store i32 0, i32* %26, align 4, !dbg !3502
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3502
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3502
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3503
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3503
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3482, metadata !DIExpression()), !dbg !3504
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3505
  store i8* %13, i8** %29, align 4, !dbg !3505
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3505
  store i32 16, i32* %30, align 4, !dbg !3505
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3505
  store i8* %14, i8** %31, align 4, !dbg !3505
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3505
  store i32 16, i32* %32, align 4, !dbg !3505
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3505
  store i32 0, i32* %33, align 4, !dbg !3505
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3505
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3505
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3506
  %36 = icmp eq i32 %35, 0, !dbg !3506
  br i1 %36, label %37, label %74, !dbg !3508

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3509
  %39 = icmp eq i32 %38, 0, !dbg !3509
  br i1 %39, label %43, label %40, !dbg !3511

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3512
  %42 = zext i8 %41 to i32, !dbg !3512
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3512
  br label %73, !dbg !3518

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3519
  %45 = zext i8 %44 to i32, !dbg !3519
  %46 = load i32, i32* %26, align 4, !dbg !3519
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3519
  %47 = load i8*, i8** %24, align 4, !dbg !3524
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3526
  %49 = icmp eq i32 %48, 0, !dbg !3526
  br i1 %49, label %54, label %50, !dbg !3527

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3528
  %52 = zext i8 %51 to i32, !dbg !3528
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3528
  %53 = load i8*, i8** %24, align 4, !dbg !3534
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3535
  br label %73, !dbg !3536

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3537
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3542
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3543
  %56 = icmp eq i32 %55, 0, !dbg !3543
  br i1 %56, label %57, label %74, !dbg !3545

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3546
  %59 = icmp eq i32 %58, 0, !dbg !3546
  br i1 %59, label %63, label %60, !dbg !3548

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3549
  %62 = zext i8 %61 to i32, !dbg !3549
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3549
  br label %73, !dbg !3555

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3556
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3556
  %65 = load i8*, i8** %31, align 4, !dbg !3561
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3563
  %67 = icmp eq i32 %66, 0, !dbg !3563
  br i1 %67, label %72, label %68, !dbg !3564

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3565
  %70 = zext i8 %69 to i32, !dbg !3565
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3565
  %71 = load i8*, i8** %31, align 4, !dbg !3571
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3572
  br label %73, !dbg !3573

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3574
  br label %73, !dbg !3579

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3483), !dbg !3580
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3581
  br label %74, !dbg !3582

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3582
  ret void, !dbg !3582
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3585, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3586, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 1, metadata !3587, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %2, metadata !3588, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %3, metadata !3589, metadata !DIExpression()), !dbg !3592
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3593
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3593
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3593
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3590, metadata !DIExpression()), !dbg !3592
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3594
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3595
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3596
  store i32 %2, i32* %9, align 4, !dbg !3597
  call void @llvm.dbg.value(metadata i16 undef, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3592
  call void @llvm.dbg.value(metadata i16 undef, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3592
  call void @llvm.dbg.value(metadata i16 undef, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3592
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3598
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3598
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3599
  ret i32 %12, !dbg !3600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3601 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3603, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3604, metadata !DIExpression()), !dbg !3605
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3606
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3607
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3608
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3608
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3609
  ret i32 %6, !dbg !3610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3615, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %1, metadata !3616, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 %2, metadata !3617, metadata !DIExpression()), !dbg !3620
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3621
  call void @llvm.dbg.value(metadata i32 0, metadata !3618, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 1, metadata !3619, metadata !DIExpression()), !dbg !3620
  %4 = icmp eq i32 %2, 0, !dbg !3622
  br i1 %4, label %5, label %6, !dbg !3625

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3626
  call void @llvm.dbg.value(metadata i32 0, metadata !3618, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 1, metadata !3619, metadata !DIExpression()), !dbg !3620
  br label %33, !dbg !3627

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 %8, metadata !3618, metadata !DIExpression()), !dbg !3620
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3629
  %10 = load i8, i8* %9, align 1, !dbg !3629
  %11 = zext i8 %10 to i32, !dbg !3629
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3631
  %12 = icmp eq i32 %7, 10, !dbg !3632
  br i1 %12, label %13, label %14, !dbg !3634

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3635
  call void @llvm.dbg.value(metadata i32 0, metadata !3619, metadata !DIExpression()), !dbg !3620
  br label %14, !dbg !3637

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3638
  call void @llvm.dbg.value(metadata i32 %15, metadata !3619, metadata !DIExpression()), !dbg !3620
  %16 = add nuw i32 %8, 1, !dbg !3639
  call void @llvm.dbg.value(metadata i32 %16, metadata !3618, metadata !DIExpression()), !dbg !3620
  %17 = add nsw i32 %15, 1, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %17, metadata !3619, metadata !DIExpression()), !dbg !3620
  %18 = icmp eq i32 %16, %2, !dbg !3622
  br i1 %18, label %19, label %6, !dbg !3625, !llvm.loop !3641

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3626
  call void @llvm.dbg.value(metadata i32 0, metadata !3618, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 1, metadata !3619, metadata !DIExpression()), !dbg !3620
  br i1 %4, label %33, label %20, !dbg !3627

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 %22, metadata !3618, metadata !DIExpression()), !dbg !3620
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3643
  %24 = load i8, i8* %23, align 1, !dbg !3643
  %25 = zext i8 %24 to i32, !dbg !3643
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3646
  %26 = icmp eq i32 %21, 10, !dbg !3647
  br i1 %26, label %27, label %28, !dbg !3649

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3650
  call void @llvm.dbg.value(metadata i32 0, metadata !3619, metadata !DIExpression()), !dbg !3620
  br label %28, !dbg !3652

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3653
  call void @llvm.dbg.value(metadata i32 %29, metadata !3619, metadata !DIExpression()), !dbg !3620
  %30 = add nuw i32 %22, 1, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %30, metadata !3618, metadata !DIExpression()), !dbg !3620
  %31 = add nsw i32 %29, 1, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %31, metadata !3619, metadata !DIExpression()), !dbg !3620
  %32 = icmp eq i32 %30, %2, !dbg !3656
  br i1 %32, label %33, label %20, !dbg !3627, !llvm.loop !3657

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3659
  ret void, !dbg !3660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3661 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3663, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3664, metadata !DIExpression()), !dbg !3666
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3667
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3667
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3667
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3665, metadata !DIExpression()), !dbg !3666
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3668
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3668
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3669
  ret void, !dbg !3670
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3671
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3672
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3672
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3673
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3673
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3674
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3674
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3675
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3675
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3676
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3676
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3677
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3677
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3678
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3678
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3679
  store i16 16, i16* %11, align 4, !dbg !3679
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3679
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3680
  %14 = trunc i32 %13 to i16, !dbg !3680
  store i16 %14, i16* %12, align 2, !dbg !3679
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3681
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3681
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3682
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3683
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3683
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3683
  store i32 64, i32* %17, align 4, !dbg !3683
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3683
  store i8* %7, i8** %18, align 4, !dbg !3683
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3683
  store i32 80, i32* %19, align 4, !dbg !3683
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3683
  store i32 0, i32* %20, align 4, !dbg !3683
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3683
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3683
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3684
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3684
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3685
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3686
  store i8* %7, i8** %23, align 4, !dbg !3686
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3686
  store i32 80, i32* %24, align 4, !dbg !3686
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3686
  store i8* %8, i8** %25, align 4, !dbg !3686
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3686
  store i32 64, i32* %26, align 4, !dbg !3686
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3686
  store i32 0, i32* %27, align 4, !dbg !3686
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3686
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3686
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3687
  %30 = icmp eq i32 %29, 0, !dbg !3687
  br i1 %30, label %31, label %68, !dbg !3689

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3690
  %33 = icmp eq i32 %32, 0, !dbg !3690
  br i1 %33, label %37, label %34, !dbg !3692

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3693
  %36 = zext i8 %35 to i32, !dbg !3693
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3693
  br label %67, !dbg !3699

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3700
  %39 = zext i8 %38 to i32, !dbg !3700
  %40 = load i32, i32* %20, align 4, !dbg !3700
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3700
  %41 = load i8*, i8** %18, align 4, !dbg !3705
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3707
  %43 = icmp eq i32 %42, 0, !dbg !3707
  br i1 %43, label %48, label %44, !dbg !3708

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3709
  %46 = zext i8 %45 to i32, !dbg !3709
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3709
  %47 = load i8*, i8** %18, align 4, !dbg !3715
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3716
  br label %67, !dbg !3717

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3718
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3723
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3724
  %50 = icmp eq i32 %49, 0, !dbg !3724
  br i1 %50, label %51, label %68, !dbg !3726

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3727
  %53 = icmp eq i32 %52, 0, !dbg !3727
  br i1 %53, label %57, label %54, !dbg !3729

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3730
  %56 = zext i8 %55 to i32, !dbg !3730
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3730
  br label %67, !dbg !3736

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3737
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3737
  %59 = load i8*, i8** %25, align 4, !dbg !3742
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3744
  %61 = icmp eq i32 %60, 0, !dbg !3744
  br i1 %61, label %66, label %62, !dbg !3745

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3746
  %64 = zext i8 %63 to i32, !dbg !3746
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3746
  %65 = load i8*, i8** %25, align 4, !dbg !3752
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3753
  br label %67, !dbg !3754

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3755
  br label %67, !dbg !3760

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3761
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3762
  br label %68, !dbg !3763

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3763
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3763
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3763
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3763
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3763
  ret void, !dbg !3763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3764 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3766, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3767, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.value(metadata i8* %2, metadata !3768, metadata !DIExpression()), !dbg !3769
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3770
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3771
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3772
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3772
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3772
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3773
  ret i32 %8, !dbg !3774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3775 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3777, metadata !DIExpression()), !dbg !3785
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3786
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3786
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3778, metadata !DIExpression()), !dbg !3787
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3787
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3788
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3788
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3779, metadata !DIExpression()), !dbg !3789
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3789
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3790
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3790
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3780, metadata !DIExpression()), !dbg !3791
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3792
  store i64 0, i64* %11, align 8, !dbg !3792
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3793
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3793
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3792
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3792
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3792
  store i8* null, i8** %14, align 8, !dbg !3792
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3792
  store i8* null, i8** %15, align 4, !dbg !3792
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3794
  store i32 32, i32* %16, align 8, !dbg !3794
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3792
  store i16 16, i16* %17, align 4, !dbg !3792
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3792
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3795
  %20 = trunc i32 %19 to i16, !dbg !3795
  store i16 %20, i16* %18, align 2, !dbg !3792
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3796
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3796
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3781, metadata !DIExpression()), !dbg !3797
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3798
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3798
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3798
  store i32 64, i32* %23, align 4, !dbg !3798
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3798
  store i8* %8, i8** %24, align 4, !dbg !3798
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3798
  store i32 64, i32* %25, align 4, !dbg !3798
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3798
  store i32 0, i32* %26, align 4, !dbg !3798
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3798
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3798
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3799
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3799
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3782, metadata !DIExpression()), !dbg !3800
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3801
  store i8* %8, i8** %29, align 4, !dbg !3801
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3801
  store i32 64, i32* %30, align 4, !dbg !3801
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3801
  store i8* %9, i8** %31, align 4, !dbg !3801
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3801
  store i32 64, i32* %32, align 4, !dbg !3801
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3801
  store i32 0, i32* %33, align 4, !dbg !3801
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3801
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3801
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3802
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3802
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3783, metadata !DIExpression()), !dbg !3803
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3803
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3804
  %37 = icmp eq i32 %36, 0, !dbg !3804
  br i1 %37, label %38, label %75, !dbg !3806

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3807
  %40 = icmp eq i32 %39, 0, !dbg !3807
  br i1 %40, label %44, label %41, !dbg !3809

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3810
  %43 = zext i8 %42 to i32, !dbg !3810
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3810
  br label %74, !dbg !3816

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3817
  %46 = zext i8 %45 to i32, !dbg !3817
  %47 = load i32, i32* %26, align 4, !dbg !3817
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3817
  %48 = load i8*, i8** %24, align 4, !dbg !3822
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3824
  %50 = icmp eq i32 %49, 0, !dbg !3824
  br i1 %50, label %55, label %51, !dbg !3825

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3826
  %53 = zext i8 %52 to i32, !dbg !3826
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3826
  %54 = load i8*, i8** %24, align 4, !dbg !3832
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3833
  br label %74, !dbg !3834

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3835
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3840
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3841
  %57 = icmp eq i32 %56, 0, !dbg !3841
  br i1 %57, label %58, label %75, !dbg !3843

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3844
  %60 = icmp eq i32 %59, 0, !dbg !3844
  br i1 %60, label %64, label %61, !dbg !3846

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3847
  %63 = zext i8 %62 to i32, !dbg !3847
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3847
  br label %74, !dbg !3853

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3854
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3854
  %66 = load i8*, i8** %31, align 4, !dbg !3859
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3861
  %68 = icmp eq i32 %67, 0, !dbg !3861
  br i1 %68, label %73, label %69, !dbg !3862

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3863
  %71 = zext i8 %70 to i32, !dbg !3863
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !3863
  %72 = load i8*, i8** %31, align 4, !dbg !3869
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !3870
  br label %74, !dbg !3871

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !3872
  br label %74, !dbg !3877

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3784), !dbg !3878
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3879
  br label %75, !dbg !3880

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3880
  ret void, !dbg !3880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3881 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3883, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i8* %2, metadata !3885, metadata !DIExpression()), !dbg !3886
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3887
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3888
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3889
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3889
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3889
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3890
  ret i32 %8, !dbg !3891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3892 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3894, metadata !DIExpression()), !dbg !3908
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3909
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3909
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3895, metadata !DIExpression()), !dbg !3910
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3911
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3911
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3899, metadata !DIExpression()), !dbg !3912
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3913
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3913
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3903, metadata !DIExpression()), !dbg !3914
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3915
  store i64 0, i64* %11, align 8, !dbg !3915
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3916
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3916
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3915
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3915
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3915
  store i8* null, i8** %14, align 8, !dbg !3915
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3915
  store i8* null, i8** %15, align 4, !dbg !3915
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3915
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3917
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3918
  store i16 8, i16* %18, align 8, !dbg !3918
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3918
  store i16 13, i16* %19, align 2, !dbg !3918
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3915
  store i16 16, i16* %20, align 4, !dbg !3915
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3915
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3919
  %23 = trunc i32 %22 to i16, !dbg !3919
  store i16 %23, i16* %21, align 2, !dbg !3915
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3920
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3920
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3904, metadata !DIExpression()), !dbg !3921
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3922
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3922
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3922
  store i32 23, i32* %26, align 4, !dbg !3922
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3922
  store i8* %8, i8** %27, align 4, !dbg !3922
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3922
  store i32 50, i32* %28, align 4, !dbg !3922
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3922
  store i32 0, i32* %29, align 4, !dbg !3922
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3922
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3922
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3923
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3923
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3905, metadata !DIExpression()), !dbg !3924
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3925
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3925
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3925
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3925
  store i32 8, i32* %34, align 4, !dbg !3925
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3925
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3926
  store i8* %36, i8** %35, align 4, !dbg !3925
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3927
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3927
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3906, metadata !DIExpression()), !dbg !3928
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3929
  store i8* %8, i8** %38, align 4, !dbg !3929
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3929
  store i32 23, i32* %39, align 4, !dbg !3929
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3929
  store i8* %9, i8** %40, align 4, !dbg !3929
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3929
  store i32 25, i32* %41, align 4, !dbg !3929
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3929
  store i32 0, i32* %42, align 4, !dbg !3929
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3929
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3929
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !3930
  %45 = icmp eq i32 %44, 0, !dbg !3930
  br i1 %45, label %46, label %83, !dbg !3932

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3933
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3934
  %48 = icmp eq i32 %47, 0, !dbg !3934
  br i1 %48, label %52, label %49, !dbg !3936

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3937
  %51 = zext i8 %50 to i32, !dbg !3937
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !3937
  br label %82, !dbg !3943

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3944
  %54 = zext i8 %53 to i32, !dbg !3944
  %55 = load i32, i32* %29, align 4, !dbg !3944
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !3944
  %56 = load i8*, i8** %27, align 4, !dbg !3949
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !3951
  %58 = icmp eq i32 %57, 0, !dbg !3951
  br i1 %58, label %63, label %59, !dbg !3952

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3953
  %61 = zext i8 %60 to i32, !dbg !3953
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !3953
  %62 = load i8*, i8** %27, align 4, !dbg !3959
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !3960
  br label %82, !dbg !3961

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !3962
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3967
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !3968
  %65 = icmp eq i32 %64, 0, !dbg !3968
  br i1 %65, label %66, label %83, !dbg !3970

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3971
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3972
  %68 = icmp eq i32 %67, 0, !dbg !3972
  br i1 %68, label %72, label %69, !dbg !3974

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3975
  %71 = zext i8 %70 to i32, !dbg !3975
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !3975
  br label %82, !dbg !3981

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !3982
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !3982
  %74 = load i8*, i8** %40, align 4, !dbg !3987
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !3989
  %76 = icmp eq i32 %75, 0, !dbg !3989
  br i1 %76, label %81, label %77, !dbg !3990

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3991
  %79 = zext i8 %78 to i32, !dbg !3991
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !3991
  %80 = load i8*, i8** %40, align 4, !dbg !3997
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !3998
  br label %82, !dbg !3999

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !4000
  br label %82, !dbg !4005

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3907), !dbg !4006
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4007
  br label %83, !dbg !4008

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4008
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4008
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4008
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4008
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !4008
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !4008
  ret void, !dbg !4008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4009 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4011, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4012, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !4013, metadata !DIExpression()), !dbg !4014
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4015
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4015
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4016
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4017
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4018
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4018
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4018
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !4019
  ret i32 %9, !dbg !4020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !4021 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4023, metadata !DIExpression()), !dbg !4035
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4036
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4036
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4024, metadata !DIExpression()), !dbg !4037
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4037
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4038
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4038
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4028, metadata !DIExpression()), !dbg !4039
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4039
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4040
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4040
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4030, metadata !DIExpression()), !dbg !4041
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4042
  store i64 0, i64* %11, align 8, !dbg !4042
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4043
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4043
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4042
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4042
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4042
  store i8* null, i8** %14, align 8, !dbg !4042
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4042
  store i8* null, i8** %15, align 4, !dbg !4042
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4042
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4044
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4045
  store i16 16, i16* %18, align 8, !dbg !4045
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4045
  store i16 12, i16* %19, align 2, !dbg !4045
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4042
  store i16 16, i16* %20, align 4, !dbg !4042
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4042
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4046
  %23 = trunc i32 %22 to i16, !dbg !4046
  store i16 %23, i16* %21, align 2, !dbg !4042
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4047
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4047
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4031, metadata !DIExpression()), !dbg !4048
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4049
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4049
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4049
  store i32 42, i32* %26, align 4, !dbg !4049
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4049
  store i8* %8, i8** %27, align 4, !dbg !4049
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4049
  store i32 60, i32* %28, align 4, !dbg !4049
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4049
  store i32 0, i32* %29, align 4, !dbg !4049
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4049
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4049
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4050
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4050
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4032, metadata !DIExpression()), !dbg !4051
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4052
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4052
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4052
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4052
  store i32 20, i32* %34, align 4, !dbg !4052
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4052
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4053
  store i8* %36, i8** %35, align 4, !dbg !4052
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4054
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4054
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4033, metadata !DIExpression()), !dbg !4055
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4056
  store i8* %8, i8** %38, align 4, !dbg !4056
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4056
  store i32 42, i32* %39, align 4, !dbg !4056
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4056
  store i8* %9, i8** %40, align 4, !dbg !4056
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4056
  store i32 44, i32* %41, align 4, !dbg !4056
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4056
  store i32 0, i32* %42, align 4, !dbg !4056
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4056
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4056
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4057
  %45 = icmp eq i32 %44, 0, !dbg !4057
  br i1 %45, label %46, label %83, !dbg !4059

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4060
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4061
  %48 = icmp eq i32 %47, 0, !dbg !4061
  br i1 %48, label %52, label %49, !dbg !4063

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4064
  %51 = zext i8 %50 to i32, !dbg !4064
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4064
  br label %82, !dbg !4070

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4071
  %54 = zext i8 %53 to i32, !dbg !4071
  %55 = load i32, i32* %29, align 4, !dbg !4071
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4071
  %56 = load i8*, i8** %27, align 4, !dbg !4076
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4078
  %58 = icmp eq i32 %57, 0, !dbg !4078
  br i1 %58, label %63, label %59, !dbg !4079

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4080
  %61 = zext i8 %60 to i32, !dbg !4080
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4080
  %62 = load i8*, i8** %27, align 4, !dbg !4086
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4087
  br label %82, !dbg !4088

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4089
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4094
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4095
  %65 = icmp eq i32 %64, 0, !dbg !4095
  br i1 %65, label %66, label %83, !dbg !4097

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4098
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4099
  %68 = icmp eq i32 %67, 0, !dbg !4099
  br i1 %68, label %72, label %69, !dbg !4101

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4102
  %71 = zext i8 %70 to i32, !dbg !4102
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4102
  br label %82, !dbg !4108

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4109
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4109
  %74 = load i8*, i8** %40, align 4, !dbg !4114
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4116
  %76 = icmp eq i32 %75, 0, !dbg !4116
  br i1 %76, label %81, label %77, !dbg !4117

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4118
  %79 = zext i8 %78 to i32, !dbg !4118
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4118
  %80 = load i8*, i8** %40, align 4, !dbg !4124
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4125
  br label %82, !dbg !4126

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4127
  br label %82, !dbg !4132

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4034), !dbg !4133
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4134
  br label %83, !dbg !4135

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4135
  ret void, !dbg !4135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4136 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4138, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4139, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4140, metadata !DIExpression()), !dbg !4141
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4142
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4142
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4143
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4144
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4145
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4145
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4145
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4146
  ret i32 %9, !dbg !4147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4148 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4160
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4150, metadata !DIExpression()), !dbg !4161
  %2 = icmp eq %struct.device* %1, null, !dbg !4162
  br i1 %2, label %3, label %6, !dbg !4164

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4165
  %5 = zext i8 %4 to i32, !dbg !4165
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4165
  br label %23, !dbg !4171

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4151, metadata !DIExpression()), !dbg !4172
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4173
  %8 = icmp eq i32 %7, 0, !dbg !4173
  br i1 %8, label %12, label %9, !dbg !4175

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4176
  %11 = zext i8 %10 to i32, !dbg !4176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4176
  br label %23, !dbg !4182

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4183
  %14 = zext i8 %13 to i32, !dbg !4183
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4183
  call void @llvm.dbg.value(metadata i32 0, metadata !4159, metadata !DIExpression()), !dbg !4161
  br label %15, !dbg !4188

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4159, metadata !DIExpression()), !dbg !4161
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4190
  %18 = load i8*, i8** %17, align 4, !dbg !4192
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4192
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4198
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4198
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4199
  %21 = add nuw nsw i32 %16, 1, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %21, metadata !4159, metadata !DIExpression()), !dbg !4161
  %22 = icmp eq i32 %21, 5, !dbg !4188
  br i1 %22, label %23, label %15, !dbg !4188, !llvm.loop !4201

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4204 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4209, metadata !DIExpression()), !dbg !4210
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4211, !srcloc !4213
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4214
  ret %struct.device* %1, !dbg !4215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4216 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %0, metadata !4227, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %1, metadata !4228, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %2, metadata !4229, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %3, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %0, metadata !4232, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %0, metadata !4233, metadata !DIExpression()), !dbg !4293
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4294
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4294
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4236, metadata !DIExpression()), !dbg !4295
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4296
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4296
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4237, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i32 0, metadata !4238, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 0, metadata !4239, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 0, metadata !4240, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 -1, metadata !4241, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 0, metadata !4244, metadata !DIExpression()), !dbg !4293
  %12 = and i32 %2, 4, !dbg !4298
  %13 = icmp eq i32 %12, 0, !dbg !4299
  call void @llvm.dbg.value(metadata i1 %13, metadata !4245, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4293
  %14 = lshr i32 %2, 3, !dbg !4300
  %15 = and i32 %14, 7, !dbg !4300
  %16 = add nuw nsw i32 %15, 1, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %16, metadata !4246, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 0, metadata !4247, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %0, metadata !4248, metadata !DIExpression()), !dbg !4293
  %17 = ptrtoint i8* %0 to i32, !dbg !4302
  %18 = and i32 %17, 3, !dbg !4304
  %19 = icmp eq i32 %18, 0, !dbg !4304
  br i1 %19, label %20, label %316, !dbg !4305

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4306
  call void @llvm.dbg.value(metadata i8* %21, metadata !4233, metadata !DIExpression()), !dbg !4293
  %22 = icmp eq i8* %0, null, !dbg !4307
  %23 = and i32 %1, 7, !dbg !4309
  %24 = sub nuw nsw i32 8, %23, !dbg !4309
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4309
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4309
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %27, metadata !4228, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %26, metadata !4233, metadata !DIExpression()), !dbg !4293
  br i1 %22, label %33, label %28, !dbg !4310

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4312
  %30 = sub i32 4, %17, !dbg !4312
  %31 = add i32 %30, %29, !dbg !4313
  %32 = icmp ugt i32 %31, %27, !dbg !4314
  br i1 %32, label %316, label %33, !dbg !4315

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4316
  call void @llvm.dbg.value(metadata i8* %34, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %3, metadata !4243, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 4, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 4, metadata !4234, metadata !DIExpression()), !dbg !4293
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4317

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %42, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %43, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %44, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %45, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %72, metadata !4241, metadata !DIExpression()), !dbg !4293
  br i1 %46, label %73, label %47, !dbg !4318

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4319
  %49 = zext i1 %48 to i32, !dbg !4323
  %50 = add nsw i32 %72, %49, !dbg !4323
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4323
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %52, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %51, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %50, metadata !4241, metadata !DIExpression()), !dbg !4293
  br label %53, !dbg !4324

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %40, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %58, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %57, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %56, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %54, metadata !4241, metadata !DIExpression()), !dbg !4293
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %60, metadata !4230, metadata !DIExpression()), !dbg !4293
  %61 = load i8, i8* %60, align 1, !dbg !4327
  %62 = icmp eq i8 %61, 0, !dbg !4328
  br i1 %62, label %223, label %63, !dbg !4329, !llvm.loop !4330

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4318

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4333

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4244, metadata !DIExpression()), !dbg !4293
  %75 = add nsw i32 %72, -1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %75, metadata !4241, metadata !DIExpression()), !dbg !4293
  br label %53, !dbg !4335

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4336

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 4, metadata !4234, metadata !DIExpression()), !dbg !4293
  br label %53, !dbg !4337

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 4, metadata !4234, metadata !DIExpression()), !dbg !4293
  br label %53, !dbg !4338

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4339
  %81 = icmp eq i8 %80, 108, !dbg !4341
  br i1 %81, label %82, label %109, !dbg !4342

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4343
  %84 = load i8, i8* %83, align 1, !dbg !4343
  %85 = icmp eq i8 %84, 108, !dbg !4346
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4347
  %89 = add i32 %88, 7, !dbg !4347
  %90 = and i32 %89, -8, !dbg !4347
  %91 = inttoptr i32 %90 to i8*, !dbg !4347
  %92 = inttoptr i32 %90 to double*, !dbg !4347
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4347
  %94 = load double, double* %92, align 8, !dbg !4347
  call void @llvm.dbg.value(metadata i8* %93, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 8, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 8, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata double %94, metadata !4261, metadata !DIExpression()), !dbg !4349
  %95 = ptrtoint i8* %43 to i32, !dbg !4350
  %96 = add i32 %95, 7, !dbg !4350
  %97 = and i32 %96, -8, !dbg !4350
  %98 = inttoptr i32 %97 to i8*, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %98, metadata !4233, metadata !DIExpression()), !dbg !4293
  br i1 %22, label %104, label %99, !dbg !4352

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4353
  %101 = icmp ugt i32 %100, %194, !dbg !4357
  br i1 %101, label %316, label %102, !dbg !4358

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4359
  store double %94, double* %103, align 8, !dbg !4359
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4362
  call void @llvm.dbg.value(metadata i8* %105, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4244, metadata !DIExpression()), !dbg !4293
  br label %53, !dbg !4363

107:                                              ; preds = %73, %73
  br label %109, !dbg !4364

108:                                              ; preds = %73
  br label %109, !dbg !4364

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4293
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4293
  call void @llvm.dbg.value(metadata i32 %113, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %112, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4247, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  %114 = ptrtoint i8* %43 to i32, !dbg !4364
  %115 = add i32 %114, -1, !dbg !4364
  %116 = add i32 %115, %112, !dbg !4364
  %117 = sub i32 0, %112, !dbg !4364
  %118 = and i32 %116, %117, !dbg !4364
  %119 = inttoptr i32 %118 to i8*, !dbg !4365
  call void @llvm.dbg.value(metadata i8* %119, metadata !4233, metadata !DIExpression()), !dbg !4293
  br i1 %22, label %124, label %120, !dbg !4366

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4368
  %122 = add i32 %121, %118, !dbg !4369
  %123 = icmp ugt i32 %122, %194, !dbg !4370
  br i1 %123, label %316, label %124, !dbg !4371

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4372

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4365
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %127, metadata !4231, metadata !DIExpression()), !dbg !4293
  %128 = bitcast i8* %41 to i8**, !dbg !4373
  %129 = load i8*, i8** %128, align 4, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %129, metadata !4243, metadata !DIExpression()), !dbg !4293
  br label %130, !dbg !4374

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4375
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4376
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4293
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4377
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4293
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4378
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4293
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4293
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4293
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4293
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4379
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %142, metadata !4228, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %141, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %140, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %139, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %138, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %137, metadata !4238, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %136, metadata !4246, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %135, metadata !4239, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %133, metadata !4243, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %132, metadata !4241, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %131, metadata !4240, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.label(metadata !4292), !dbg !4381
  br i1 %22, label %146, label %144, !dbg !4382

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4383
  store i8* %133, i8** %145, align 4, !dbg !4386
  br label %146, !dbg !4387

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %147, metadata !4246, metadata !DIExpression()), !dbg !4293
  %148 = icmp sgt i32 %136, 0, !dbg !4389
  br i1 %148, label %152, label %149, !dbg !4390

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4391
  %151 = zext i1 %150 to i32, !dbg !4391
  br label %152, !dbg !4390

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4390
  %154 = icmp eq i32 %153, 0, !dbg !4390
  call void @llvm.dbg.value(metadata i1 %154, metadata !4270, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4392
  call void @llvm.dbg.value(metadata i1 %36, metadata !4273, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4392
  %155 = or i1 %36, %154, !dbg !4393
  br i1 %155, label %156, label %190, !dbg !4393

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4394
  %158 = sub i32 %157, %17, !dbg !4394
  %159 = lshr i32 %158, 2, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %159, metadata !4274, metadata !DIExpression()), !dbg !4396
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4397
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4397
  br i1 %163, label %316, label %164, !dbg !4397

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4399

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4400
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4403
  store i8 %166, i8* %167, align 1, !dbg !4404
  %168 = trunc i32 %132 to i8, !dbg !4405
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4406
  store i8 %168, i8* %169, align 1, !dbg !4407
  br i1 %154, label %173, label %170, !dbg !4408

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4409
  store i8 %171, i8* %167, align 1, !dbg !4409
  %172 = add i32 %131, 1, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %172, metadata !4240, metadata !DIExpression()), !dbg !4293
  br label %185, !dbg !4413

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %174, metadata !4239, metadata !DIExpression()), !dbg !4293
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4416

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %177, metadata !4228, metadata !DIExpression()), !dbg !4293
  br label %185, !dbg !4420

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4421

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %180, metadata !4228, metadata !DIExpression()), !dbg !4293
  br label %185, !dbg !4425

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4426
  %183 = add i32 %142, 2, !dbg !4428
  %184 = add i32 %183, %182, !dbg !4429
  call void @llvm.dbg.value(metadata i32 %184, metadata !4228, metadata !DIExpression()), !dbg !4293
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4293
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4293
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4293
  call void @llvm.dbg.value(metadata i32 %188, metadata !4228, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %187, metadata !4239, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %186, metadata !4240, metadata !DIExpression()), !dbg !4293
  %189 = add nuw nsw i32 %137, 1, !dbg !4430
  call void @llvm.dbg.value(metadata i32 undef, metadata !4228, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 undef, metadata !4238, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 undef, metadata !4239, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 undef, metadata !4240, metadata !DIExpression()), !dbg !4293
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4375
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4377
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4378
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4379
  call void @llvm.dbg.value(metadata i32 %194, metadata !4228, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %193, metadata !4238, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %192, metadata !4239, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %191, metadata !4240, metadata !DIExpression()), !dbg !4293
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4431
  call void @llvm.dbg.value(metadata i8* %195, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %143, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %141, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %139, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %138, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4247, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %132, metadata !4241, metadata !DIExpression()), !dbg !4293
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %196, metadata !4230, metadata !DIExpression()), !dbg !4293
  %197 = load i8, i8* %196, align 1, !dbg !4327
  %198 = icmp eq i8 %197, 0, !dbg !4328
  br i1 %198, label %223, label %63, !dbg !4329

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4432

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4433
  call void @llvm.dbg.value(metadata i8* %201, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 undef, metadata !4277, metadata !DIExpression()), !dbg !4434
  br i1 %22, label %216, label %202, !dbg !4435

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4433
  %204 = load i32, i32* %203, align 4, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %204, metadata !4277, metadata !DIExpression()), !dbg !4434
  %205 = inttoptr i32 %118 to i32*, !dbg !4436
  store i32 %204, i32* %205, align 4, !dbg !4439
  br label %216, !dbg !4440

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4441
  %208 = add i32 %207, 7, !dbg !4441
  %209 = and i32 %208, -8, !dbg !4441
  %210 = inttoptr i32 %209 to i8*, !dbg !4441
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4441
  call void @llvm.dbg.value(metadata i8* %211, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i64 undef, metadata !4283, metadata !DIExpression()), !dbg !4442
  br i1 %22, label %216, label %212, !dbg !4443

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4441
  %214 = load i64, i64* %213, align 8, !dbg !4441
  call void @llvm.dbg.value(metadata i64 %214, metadata !4283, metadata !DIExpression()), !dbg !4442
  %215 = inttoptr i32 %118 to i64*, !dbg !4444
  store i64 %214, i64* %215, align 8, !dbg !4449
  br label %216, !dbg !4450

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4451
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %218, metadata !4231, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %40, metadata !4230, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %219, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %113, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %112, metadata !4235, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4247, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %72, metadata !4241, metadata !DIExpression()), !dbg !4293
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %220, metadata !4230, metadata !DIExpression()), !dbg !4293
  %221 = load i8, i8* %220, align 1, !dbg !4327
  %222 = icmp eq i8 %221, 0, !dbg !4328
  br i1 %222, label %223, label %38, !dbg !4329

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4452
  %225 = ptrtoint i8* %224 to i32, !dbg !4453
  %226 = sub i32 %225, %17, !dbg !4453
  %227 = lshr i32 %226, 2, !dbg !4455
  %228 = icmp ugt i32 %226, 1023, !dbg !4456
  br i1 %228, label %316, label %229, !dbg !4457

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4458

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4459
  %232 = add i32 %231, %226, !dbg !4462
  br label %316, !dbg !4463

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4464
  store i8 %234, i8* %0, align 1, !dbg !4465
  %235 = trunc i32 %192 to i8, !dbg !4466
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4468
  store i8 %236, i8* %238, align 1, !dbg !4470
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4471
  store i8 %237, i8* %239, align 1, !dbg !4472
  %240 = trunc i32 %191 to i8, !dbg !4473
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4474
  store i8 %240, i8* %241, align 1, !dbg !4475
  %242 = icmp eq i32 %191, 0, !dbg !4476
  %243 = xor i1 %242, true, !dbg !4477
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4477
  call void @llvm.dbg.value(metadata i8* %224, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 0, metadata !4242, metadata !DIExpression()), !dbg !4293
  br i1 %245, label %246, label %265, !dbg !4477

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4478

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %250, metadata !4242, metadata !DIExpression()), !dbg !4293
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4479
  %252 = load i8, i8* %251, align 1, !dbg !4479
  %253 = icmp sgt i8 %252, -1, !dbg !4481
  br i1 %253, label %261, label %254, !dbg !4482

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4286, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4483
  %255 = ptrtoint i8* %249 to i32, !dbg !4484
  %256 = add i32 %247, %255, !dbg !4486
  %257 = icmp ugt i32 %256, %194, !dbg !4487
  br i1 %257, label %316, label %258, !dbg !4488

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4489
  call void @llvm.dbg.value(metadata i8 %259, metadata !4286, metadata !DIExpression()), !dbg !4483
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4490
  call void @llvm.dbg.value(metadata i8* %260, metadata !4233, metadata !DIExpression()), !dbg !4293
  store i8 %259, i8* %249, align 1, !dbg !4491
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4431
  call void @llvm.dbg.value(metadata i8* %262, metadata !4233, metadata !DIExpression()), !dbg !4293
  %263 = add nuw i32 %250, 1, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %263, metadata !4242, metadata !DIExpression()), !dbg !4293
  %264 = icmp eq i32 %263, %193, !dbg !4493
  br i1 %264, label %265, label %248, !dbg !4478, !llvm.loop !4494

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4431
  call void @llvm.dbg.value(metadata i8* %266, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 0, metadata !4242, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %133, metadata !4243, metadata !DIExpression()), !dbg !4293
  %267 = icmp eq i32 %193, 0, !dbg !4496
  br i1 %267, label %312, label %268, !dbg !4499

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4499

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %272, metadata !4243, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %273, metadata !4242, metadata !DIExpression()), !dbg !4293
  br i1 %242, label %278, label %274, !dbg !4500

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4503
  %276 = load i8, i8* %275, align 1, !dbg !4503
  %277 = icmp sgt i8 %276, -1, !dbg !4504
  br i1 %277, label %278, label %307, !dbg !4505

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4506

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4234, metadata !DIExpression()), !dbg !4293
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4507
  %281 = load i8, i8* %280, align 1, !dbg !4507
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4510
  call void @llvm.dbg.value(metadata i8* %282, metadata !4233, metadata !DIExpression()), !dbg !4293
  store i8 %281, i8* %271, align 1, !dbg !4511
  br label %293, !dbg !4512

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4513
  %285 = load i8, i8* %284, align 1, !dbg !4513
  %286 = zext i8 %285 to i32, !dbg !4513
  %287 = shl nuw nsw i32 %286, 2, !dbg !4515
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4516
  %289 = bitcast i8* %288 to i8**, !dbg !4517
  %290 = load i8*, i8** %289, align 4, !dbg !4517
  call void @llvm.dbg.value(metadata i8* %290, metadata !4243, metadata !DIExpression()), !dbg !4293
  store i8* null, i8** %289, align 4, !dbg !4518
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4519
  %292 = add i32 %291, 1, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %292, metadata !4234, metadata !DIExpression()), !dbg !4293
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4293
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4521
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4293
  call void @llvm.dbg.value(metadata i8* %296, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 %295, metadata !4234, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %294, metadata !4243, metadata !DIExpression()), !dbg !4293
  %297 = ptrtoint i8* %296 to i32, !dbg !4522
  %298 = add i32 %269, %295, !dbg !4524
  %299 = add i32 %298, %297, !dbg !4525
  %300 = icmp ugt i32 %299, %194, !dbg !4526
  br i1 %300, label %316, label %301, !dbg !4527

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4528
  %303 = load i8, i8* %302, align 1, !dbg !4528
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4529
  call void @llvm.dbg.value(metadata i8* %304, metadata !4233, metadata !DIExpression()), !dbg !4293
  store i8 %303, i8* %296, align 1, !dbg !4530
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4531
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4532
  call void @llvm.dbg.value(metadata i8* %306, metadata !4233, metadata !DIExpression()), !dbg !4293
  br label %307, !dbg !4533

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4534
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4293
  call void @llvm.dbg.value(metadata i8* %309, metadata !4233, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i8* %308, metadata !4243, metadata !DIExpression()), !dbg !4293
  %310 = add nuw i32 %273, 1, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %310, metadata !4242, metadata !DIExpression()), !dbg !4293
  %311 = icmp eq i32 %310, %193, !dbg !4496
  br i1 %311, label %312, label %270, !dbg !4499, !llvm.loop !4536

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4431
  %314 = ptrtoint i8* %313 to i32, !dbg !4538
  %315 = sub i32 %314, %17, !dbg !4538
  br label %316, !dbg !4539

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4293
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4540
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4540
  ret i32 %317, !dbg !4540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4541 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4545, metadata !DIExpression()), !dbg !4546
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4547
  ret i1 %2, !dbg !4548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4549 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4554, metadata !DIExpression()), !dbg !4555
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4556
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4557
  %4 = and i1 %2, %3, !dbg !4557
  ret i1 %4, !dbg !4558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4559 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4563, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %1, metadata !4564, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %2, metadata !4565, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %3, metadata !4566, metadata !DIExpression()), !dbg !4569
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4570
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4567, metadata !DIExpression()), !dbg !4571
  call void @llvm.va_start(i8* nonnull %6), !dbg !4572
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4573
  %8 = load i32, i32* %7, align 4, !dbg !4573
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4573
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4573
  call void @llvm.dbg.value(metadata i32 %10, metadata !4568, metadata !DIExpression()), !dbg !4569
  call void @llvm.va_end(i8* nonnull %6), !dbg !4574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4575
  ret i32 %10, !dbg !4576
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4577 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4589, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4590, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %2, metadata !4591, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %3, metadata !4592, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %3, metadata !4593, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* %3, metadata !4594, metadata !DIExpression()), !dbg !4608
  %5 = icmp eq i8* %3, null, !dbg !4609
  br i1 %5, label %45, label %6, !dbg !4611

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4603, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4608
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4612
  %8 = load i8, i8* %7, align 1, !dbg !4612
  %9 = zext i8 %8 to i32, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %9, metadata !4604, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8 undef, metadata !4605, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata i8 undef, metadata !4606, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata i32 0, metadata !4602, metadata !DIExpression()), !dbg !4608
  %10 = icmp eq i8 %8, 0, !dbg !4614
  br i1 %10, label %39, label %11, !dbg !4617

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4618
  call void @llvm.dbg.value(metadata i8 %12, metadata !4603, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %13 = zext i8 %12 to i32, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %13, metadata !4603, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %14 = shl nuw nsw i32 %13, 2, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %14, metadata !4603, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4621
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4622
  %17 = load i8, i8* %16, align 1, !dbg !4622
  call void @llvm.dbg.value(metadata i8 %17, metadata !4605, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %18 = zext i8 %17 to i32, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %18, metadata !4605, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4624
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4625
  %21 = load i8, i8* %20, align 1, !dbg !4625
  call void @llvm.dbg.value(metadata i8 %21, metadata !4606, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %22 = zext i8 %21 to i32, !dbg !4626
  call void @llvm.dbg.value(metadata i32 %22, metadata !4606, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %23 = shl nuw nsw i32 %22, 1, !dbg !4627
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4608
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %24, metadata !4600, metadata !DIExpression()), !dbg !4608
  br label %25, !dbg !4617

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4600, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i32 %27, metadata !4602, metadata !DIExpression()), !dbg !4608
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %28, metadata !4600, metadata !DIExpression()), !dbg !4608
  %29 = load i8, i8* %26, align 1, !dbg !4631
  %30 = zext i8 %29 to i32, !dbg !4631
  call void @llvm.dbg.value(metadata i32 %30, metadata !4607, metadata !DIExpression()), !dbg !4608
  %31 = shl nuw nsw i32 %30, 2, !dbg !4632
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4633
  %33 = bitcast i8* %32 to i8**, !dbg !4634
  call void @llvm.dbg.value(metadata i8** %33, metadata !4601, metadata !DIExpression()), !dbg !4608
  store i8* %28, i8** %33, align 4, !dbg !4635
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4636
  %35 = add i32 %34, 1, !dbg !4637
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %36, metadata !4600, metadata !DIExpression()), !dbg !4608
  %37 = add nuw nsw i32 %27, 1, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %37, metadata !4602, metadata !DIExpression()), !dbg !4608
  %38 = icmp eq i32 %37, %9, !dbg !4614
  br i1 %38, label %39, label %25, !dbg !4617, !llvm.loop !4640

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4642
  call void @llvm.dbg.value(metadata i8* %40, metadata !4593, metadata !DIExpression()), !dbg !4608
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4643
  %42 = bitcast i8* %41 to i8**, !dbg !4643
  %43 = load i8*, i8** %42, align 1, !dbg !4643
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4644
  br label %45, !dbg !4645

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4608
  ret i32 %46, !dbg !4646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4647 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4651, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4652, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8* %2, metadata !4653, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8* %3, metadata !4654, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8* %4, metadata !4655, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8* %4, metadata !4656, metadata !DIExpression()), !dbg !4661
  %6 = ptrtoint i8* %4 to i32, !dbg !4662
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4662
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4662
  ret i32 %8, !dbg !4663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4668, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i32 %1, metadata !4669, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i8 0, metadata !4671, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i32 0, metadata !4672, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i8 poison, metadata !4671, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i8* %0, metadata !4668, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4673
  %3 = load i8, i8* %0, align 1, !dbg !4674
  call void @llvm.dbg.value(metadata i8 %3, metadata !4670, metadata !DIExpression()), !dbg !4673
  %4 = icmp eq i8 %3, 0, !dbg !4675
  br i1 %4, label %29, label %5, !dbg !4676

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %8, metadata !4672, metadata !DIExpression()), !dbg !4673
  br i1 %9, label %11, label %22, !dbg !4678

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4680
  br i1 %12, label %13, label %17, !dbg !4684

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4685
  br i1 %14, label %29, label %15, !dbg !4688

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4689
  br i1 %16, label %29, label %22, !dbg !4691

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4692
  %19 = xor i1 %18, true, !dbg !4694
  %20 = zext i1 %18 to i32, !dbg !4694
  %21 = add nsw i32 %8, %20, !dbg !4694
  br label %22, !dbg !4694

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4673
  call void @llvm.dbg.value(metadata i32 %24, metadata !4672, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i8 poison, metadata !4671, metadata !DIExpression()), !dbg !4673
  %25 = icmp eq i8 %6, 37, !dbg !4695
  %26 = xor i1 %25, %23, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %10, metadata !4668, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i8* %10, metadata !4668, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4673
  %27 = load i8, i8* %10, align 1, !dbg !4674
  call void @llvm.dbg.value(metadata i8 %27, metadata !4670, metadata !DIExpression()), !dbg !4673
  %28 = icmp eq i8 %27, 0, !dbg !4675
  br i1 %28, label %29, label %5, !dbg !4676, !llvm.loop !4698

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4673
  ret i1 %30, !dbg !4700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4701 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4705, metadata !DIExpression()), !dbg !4706
  %2 = add i8 %0, -64, !dbg !4707
  %3 = icmp ult i8 %2, 59, !dbg !4707
  ret i1 %3, !dbg !4708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4709 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4717, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %1, metadata !4718, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4719, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %3, metadata !4720, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %4, metadata !4721, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i16* %5, metadata !4722, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %6, metadata !4723, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %0, metadata !4724, metadata !DIExpression()), !dbg !4786
  %11 = bitcast i8* %0 to i32*, !dbg !4787
  call void @llvm.dbg.value(metadata i32* %11, metadata !4725, metadata !DIExpression()), !dbg !4786
  %12 = and i32 %4, 8, !dbg !4788
  %13 = icmp eq i32 %12, 0, !dbg !4789
  call void @llvm.dbg.value(metadata i1 %13, metadata !4729, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %0, metadata !4732, metadata !DIExpression()), !dbg !4786
  %14 = icmp eq i32 %1, 0, !dbg !4790
  br i1 %14, label %15, label %17, !dbg !4791

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4792
  br label %17, !dbg !4791

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4791
  call void @llvm.dbg.value(metadata i32 %18, metadata !4718, metadata !DIExpression()), !dbg !4786
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4793
  %20 = load i8, i8* %19, align 1, !dbg !4793
  %21 = zext i8 %20 to i32, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %21, metadata !4727, metadata !DIExpression()), !dbg !4786
  %22 = icmp ne i8 %20, 0, !dbg !4795
  %23 = and i32 %4, 1, !dbg !4796
  %24 = icmp ne i32 %23, 0, !dbg !4796
  %25 = and i1 %24, %22, !dbg !4796
  call void @llvm.dbg.value(metadata i1 %25, metadata !4731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4786
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4797
  %27 = load i8, i8* %26, align 1, !dbg !4797
  %28 = zext i8 %27 to i32, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %28, metadata !4728, metadata !DIExpression()), !dbg !4786
  %29 = icmp ne i8 %27, 0, !dbg !4799
  %30 = and i32 %4, 2, !dbg !4800
  %31 = icmp ne i32 %30, 0, !dbg !4800
  %32 = and i1 %31, %29, !dbg !4800
  call void @llvm.dbg.value(metadata i1 %32, metadata !4730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4786
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4801
  br i1 %33, label %38, label %34, !dbg !4801

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4803
  br i1 %35, label %267, label %36, !dbg !4806

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4807
  br label %267, !dbg !4809

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4810
  %40 = zext i8 %39 to i32, !dbg !4811
  %41 = shl nuw nsw i32 %40, 2, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %41, metadata !4726, metadata !DIExpression()), !dbg !4786
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4813
  %43 = bitcast i8* %42 to i8**, !dbg !4814
  %44 = load i8*, i8** %43, align 4, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %44, metadata !4735, metadata !DIExpression()), !dbg !4786
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %45, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 0, metadata !4737, metadata !DIExpression()), !dbg !4786
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4816
  br i1 %46, label %47, label %132, !dbg !4817

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4734, metadata !DIExpression()), !dbg !4786
  br i1 %25, label %48, label %73, !dbg !4818

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %45, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 0, metadata !4737, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 0, metadata !4738, metadata !DIExpression()), !dbg !4819
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4820

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %52, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %53, metadata !4737, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %54, metadata !4738, metadata !DIExpression()), !dbg !4819
  %55 = load i8, i8* %52, align 1, !dbg !4821
  %56 = zext i8 %55 to i32, !dbg !4822
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4822
  %58 = bitcast i32* %57 to i8**, !dbg !4823
  %59 = load i8*, i8** %58, align 4, !dbg !4823
  call void @llvm.dbg.value(metadata i8* %59, metadata !4744, metadata !DIExpression()), !dbg !4824
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %60, metadata !4747, metadata !DIExpression()), !dbg !4824
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4826
  br i1 %62, label %63, label %67, !dbg !4826

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4828
  %65 = add nuw i32 %53, 1, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %65, metadata !4737, metadata !DIExpression()), !dbg !4786
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4831
  store i16 %64, i16* %66, align 2, !dbg !4832
  br label %67, !dbg !4833

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4786
  call void @llvm.dbg.value(metadata i32 %68, metadata !4737, metadata !DIExpression()), !dbg !4786
  %69 = add nsw i32 %60, %51, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %69, metadata !4734, metadata !DIExpression()), !dbg !4786
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %70, metadata !4736, metadata !DIExpression()), !dbg !4786
  %71 = add nuw nsw i32 %54, 1, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %71, metadata !4738, metadata !DIExpression()), !dbg !4819
  %72 = icmp eq i32 %71, %21, !dbg !4837
  br i1 %72, label %79, label %50, !dbg !4820, !llvm.loop !4838

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4840
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4840
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4840
  br label %79, !dbg !4840

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4843
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4786
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4844
  call void @llvm.dbg.value(metadata i1 undef, metadata !4748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4845
  call void @llvm.dbg.value(metadata i32 0, metadata !4749, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i32 %82, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %81, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %80, metadata !4737, metadata !DIExpression()), !dbg !4786
  %83 = icmp eq i8 %27, 0, !dbg !4847
  br i1 %83, label %267, label %84, !dbg !4848

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4849
  %86 = icmp eq i32 %85, 0, !dbg !4850
  call void @llvm.dbg.value(metadata i1 %86, metadata !4748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4845
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4848

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %93, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %94, metadata !4737, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %95, metadata !4749, metadata !DIExpression()), !dbg !4846
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %96, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 undef, metadata !4751, metadata !DIExpression()), !dbg !4852
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %97, metadata !4736, metadata !DIExpression()), !dbg !4786
  %98 = load i8, i8* %96, align 1, !dbg !4854
  call void @llvm.dbg.value(metadata i8 %98, metadata !4754, metadata !DIExpression()), !dbg !4852
  %99 = zext i8 %98 to i32, !dbg !4855
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4855
  %101 = bitcast i32* %100 to i8**, !dbg !4856
  %102 = load i8*, i8** %101, align 4, !dbg !4856
  call void @llvm.dbg.value(metadata i8* %102, metadata !4755, metadata !DIExpression()), !dbg !4852
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4857
  call void @llvm.dbg.value(metadata i1 %103, metadata !4756, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4852
  br i1 %13, label %110, label %104, !dbg !4858

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4860
  call void @llvm.dbg.value(metadata i8 %105, metadata !4751, metadata !DIExpression()), !dbg !4852
  %106 = zext i8 %105 to i32, !dbg !4861
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4862
  br i1 %107, label %108, label %110, !dbg !4863

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4864
  %109 = add nsw i32 %92, -2, !dbg !4870
  call void @llvm.dbg.value(metadata i32 %109, metadata !4734, metadata !DIExpression()), !dbg !4786
  br label %127, !dbg !4871

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4872

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4873

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %113, metadata !4734, metadata !DIExpression()), !dbg !4786
  br label %127, !dbg !4878

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4879

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4782), !dbg !4880
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %116, metadata !4757, metadata !DIExpression()), !dbg !4852
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4882
  br i1 %118, label %119, label %123, !dbg !4882

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4884
  %121 = add nuw i32 %94, 1, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %121, metadata !4737, metadata !DIExpression()), !dbg !4786
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4887
  store i16 %120, i16* %122, align 2, !dbg !4888
  br label %123, !dbg !4889

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4786
  call void @llvm.dbg.value(metadata i32 %124, metadata !4737, metadata !DIExpression()), !dbg !4786
  %125 = add i32 %92, -1, !dbg !4890
  %126 = add i32 %125, %116, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %126, metadata !4734, metadata !DIExpression()), !dbg !4786
  br label %127, !dbg !4892

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4786
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4852
  call void @llvm.dbg.value(metadata i32 %129, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %128, metadata !4737, metadata !DIExpression()), !dbg !4786
  %130 = add nuw nsw i32 %95, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %97, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %130, metadata !4749, metadata !DIExpression()), !dbg !4846
  %131 = icmp eq i32 %130, %28, !dbg !4847
  br i1 %131, label %267, label %91, !dbg !4848, !llvm.loop !4894

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4759, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4760, metadata !DIExpression()), !dbg !4897
  br i1 %25, label %133, label %135, !dbg !4898

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4761, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 0, metadata !4762, metadata !DIExpression()), !dbg !4786
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %134, metadata !4763, metadata !DIExpression()), !dbg !4786
  br label %140, !dbg !4902

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4903
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4903

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4763, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 undef, metadata !4762, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 0, metadata !4761, metadata !DIExpression()), !dbg !4786
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4905
  br label %145, !dbg !4908

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4909
  call void @llvm.dbg.value(metadata i8* %148, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 0, metadata !4765, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8 %146, metadata !4762, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 %147, metadata !4761, metadata !DIExpression()), !dbg !4786
  %149 = icmp eq i8 %27, 0, !dbg !4911
  br i1 %149, label %150, label %152, !dbg !4912

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4913
  br label %157, !dbg !4912

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4912

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4913
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4914
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4915
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4786
  call void @llvm.dbg.value(metadata i8 undef, metadata !4758, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4786
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4916
  %163 = load i8, i8* %162, align 1, !dbg !4916
  %164 = zext i8 %159 to i32, !dbg !4917
  %165 = add i8 %163, %159, !dbg !4918
  call void @llvm.dbg.value(metadata i8 %165, metadata !4758, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4786
  %166 = icmp eq i32 %30, 0, !dbg !4919
  %167 = lshr i8 %160, 1, !dbg !4920
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4920
  call void @llvm.dbg.value(metadata i8 %168, metadata !4758, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4786
  %169 = icmp eq i32 %23, 0, !dbg !4921
  %170 = icmp eq i32 %158, 0, !dbg !4913
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4913
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4913
  call void @llvm.dbg.value(metadata i8 %172, metadata !4758, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4786
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4773, metadata !DIExpression()), !dbg !4922
  %173 = load i32, i32* %11, align 1, !dbg !4923
  store i8 %165, i8* %162, align 1, !dbg !4924
  store i8 %172, i8* %19, align 1, !dbg !4924
  store i8 %168, i8* %26, align 1, !dbg !4924
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %174, metadata !4764, metadata !DIExpression()), !dbg !4786
  %175 = icmp slt i32 %174, 0, !dbg !4926
  br i1 %175, label %267, label %220, !dbg !4928

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %178, metadata !4765, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8 %179, metadata !4762, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 %180, metadata !4761, metadata !DIExpression()), !dbg !4786
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4929
  call void @llvm.dbg.value(metadata i8* %181, metadata !4736, metadata !DIExpression()), !dbg !4786
  %182 = load i8, i8* %177, align 1, !dbg !4930
  call void @llvm.dbg.value(metadata i8 %182, metadata !4767, metadata !DIExpression()), !dbg !4931
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %183, metadata !4736, metadata !DIExpression()), !dbg !4786
  %184 = load i8, i8* %181, align 1, !dbg !4933
  call void @llvm.dbg.value(metadata i8 %184, metadata !4770, metadata !DIExpression()), !dbg !4931
  %185 = zext i8 %184 to i32, !dbg !4934
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4934
  %187 = bitcast i32* %186 to i8**, !dbg !4935
  %188 = load i8*, i8** %187, align 4, !dbg !4935
  call void @llvm.dbg.value(metadata i8* %188, metadata !4771, metadata !DIExpression()), !dbg !4931
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4936
  call void @llvm.dbg.value(metadata i1 %189, metadata !4772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4931
  br i1 %13, label %193, label %190, !dbg !4937

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4939
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4940
  br i1 %192, label %215, label %193, !dbg !4941

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4942

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4943

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4946
  call void @llvm.dbg.value(metadata i8 %196, metadata !4761, metadata !DIExpression()), !dbg !4786
  br label %208, !dbg !4949

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4950

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4951
  call void @llvm.dbg.value(metadata i8 %199, metadata !4762, metadata !DIExpression()), !dbg !4786
  br label %208, !dbg !4954

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4955

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4957
  call void @llvm.dbg.value(metadata i8 %202, metadata !4761, metadata !DIExpression()), !dbg !4786
  br label %208, !dbg !4960

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4961
  call void @llvm.dbg.value(metadata i8 %204, metadata !4762, metadata !DIExpression()), !dbg !4786
  %205 = zext i8 %179 to i32, !dbg !4963
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4963
  store i8 %182, i8* %206, align 1, !dbg !4964
  %207 = add i8 %179, 2, !dbg !4965
  call void @llvm.dbg.value(metadata i8 %207, metadata !4762, metadata !DIExpression()), !dbg !4786
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4966
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4966
  store i8 %184, i8* %214, align 1, !dbg !4966
  br label %215, !dbg !4967

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4786
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4915
  call void @llvm.dbg.value(metadata i8 %217, metadata !4762, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 %216, metadata !4761, metadata !DIExpression()), !dbg !4786
  %218 = add nuw nsw i32 %178, 1, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %183, metadata !4736, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %218, metadata !4765, metadata !DIExpression()), !dbg !4910
  %219 = icmp eq i32 %218, %28, !dbg !4911
  br i1 %219, label %157, label %176, !dbg !4912, !llvm.loop !4968

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %174, metadata !4734, metadata !DIExpression()), !dbg !4786
  store i32 %173, i32* %11, align 1, !dbg !4970
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4971
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %223, metadata !4764, metadata !DIExpression()), !dbg !4786
  %224 = icmp slt i32 %223, 0, !dbg !4973
  br i1 %224, label %267, label %225, !dbg !4975

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4734, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4976
  %228 = add nuw nsw i32 %41, %21, !dbg !4976
  %229 = sub i32 %227, %228, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %229, metadata !4774, metadata !DIExpression()), !dbg !4786
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %230, metadata !4764, metadata !DIExpression()), !dbg !4786
  %231 = icmp slt i32 %230, 0, !dbg !4978
  br i1 %231, label %267, label %232, !dbg !4980

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %233, metadata !4734, metadata !DIExpression()), !dbg !4786
  %234 = add nuw nsw i32 %233, %230, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %234, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 0, metadata !4775, metadata !DIExpression()), !dbg !4983
  %235 = icmp eq i8 %159, 0, !dbg !4984
  br i1 %235, label %264, label %236, !dbg !4985

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4985

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4775, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i32 %240, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4986
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4987
  %242 = load i8, i8* %241, align 1, !dbg !4987
  call void @llvm.dbg.value(metadata i8 %242, metadata !4777, metadata !DIExpression()), !dbg !4988
  store i8 %242, i8* %10, align 1, !dbg !4989
  %243 = zext i8 %242 to i32, !dbg !4990
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4990
  %245 = bitcast i32* %244 to i8**, !dbg !4991
  %246 = load i8*, i8** %245, align 4, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %246, metadata !4780, metadata !DIExpression()), !dbg !4988
  br i1 %237, label %250, label %247, !dbg !4992

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4993
  %249 = load i16, i16* %248, align 2, !dbg !4993
  br label %250, !dbg !4992

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4992
  call void @llvm.dbg.value(metadata i32 undef, metadata !4781, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4988
  call void @llvm.dbg.value(metadata i8* %10, metadata !4777, metadata !DIExpression(DW_OP_deref)), !dbg !4988
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %252, metadata !4764, metadata !DIExpression()), !dbg !4786
  %253 = icmp slt i32 %252, 0, !dbg !4995
  br i1 %253, label %257, label %254, !dbg !4997

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4781, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4734, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %255, metadata !4764, metadata !DIExpression()), !dbg !4786
  %256 = icmp slt i32 %255, 0, !dbg !4999
  br i1 %256, label %257, label %259, !dbg !5001

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5002
  call void @llvm.dbg.value(metadata i32 undef, metadata !4734, metadata !DIExpression()), !dbg !4786
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5003
  call void @llvm.dbg.value(metadata i32 %260, metadata !4734, metadata !DIExpression()), !dbg !4786
  %261 = add nsw i32 %260, %255, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %261, metadata !4734, metadata !DIExpression()), !dbg !4786
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5002
  %262 = add nuw nsw i32 %239, 1, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %262, metadata !4775, metadata !DIExpression()), !dbg !4983
  %263 = icmp eq i32 %262, %164, !dbg !4984
  br i1 %263, label %264, label %238, !dbg !4985, !llvm.loop !5006

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4982
  call void @llvm.dbg.value(metadata i32 %265, metadata !4734, metadata !DIExpression()), !dbg !4786
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !5008
  br label %267, !dbg !5009

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4786
  ret i32 %268, !dbg !5010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5015, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i8* %0, metadata !5016, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i8* %0, metadata !5017, metadata !DIExpression()), !dbg !5023
  %2 = load i8, i8* %0, align 1, !dbg !5024
  %3 = zext i8 %2 to i32, !dbg !5024
  %4 = shl nuw nsw i32 %3, 2, !dbg !5025
  call void @llvm.dbg.value(metadata i32 %4, metadata !5018, metadata !DIExpression()), !dbg !5023
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5026
  %6 = load i8, i8* %5, align 1, !dbg !5026
  %7 = zext i8 %6 to i32, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %7, metadata !5019, metadata !DIExpression()), !dbg !5023
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5027
  %9 = load i8, i8* %8, align 1, !dbg !5027
  %10 = zext i8 %9 to i32, !dbg !5027
  call void @llvm.dbg.value(metadata i32 %10, metadata !5020, metadata !DIExpression()), !dbg !5023
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %11, metadata !5016, metadata !DIExpression()), !dbg !5023
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5029
  call void @llvm.dbg.value(metadata i8* %12, metadata !5016, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i32 0, metadata !5021, metadata !DIExpression()), !dbg !5030
  %13 = icmp eq i8 %6, 0, !dbg !5031
  br i1 %13, label %14, label %19, !dbg !5033

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5023
  %16 = ptrtoint i8* %15 to i32, !dbg !5034
  %17 = ptrtoint i8* %0 to i32, !dbg !5034
  %18 = sub i32 %16, %17, !dbg !5034
  ret i32 %18, !dbg !5035

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5021, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %21, metadata !5016, metadata !DIExpression()), !dbg !5023
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %22, metadata !5016, metadata !DIExpression()), !dbg !5023
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5038
  %24 = add i32 %23, 1, !dbg !5039
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %25, metadata !5016, metadata !DIExpression()), !dbg !5023
  %26 = add nuw nsw i32 %20, 1, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %26, metadata !5021, metadata !DIExpression()), !dbg !5030
  %27 = icmp eq i32 %26, %7, !dbg !5031
  br i1 %27, label %14, label %19, !dbg !5033, !llvm.loop !5042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5044 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5048, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8* %1, metadata !5049, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8* %2, metadata !5050, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i16 %3, metadata !5051, metadata !DIExpression()), !dbg !5052
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5053
  br i1 %5, label %6, label %9, !dbg !5055

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5056
  %8 = add i32 %7, 1, !dbg !5058
  br label %20, !dbg !5059

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5060
  br i1 %10, label %13, label %11, !dbg !5061

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5061
  br label %16, !dbg !5061

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5062
  %15 = add i32 %14, 1, !dbg !5063
  br label %16, !dbg !5061

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5061
  %18 = and i32 %17, 65535, !dbg !5064
  call void @llvm.dbg.value(metadata i32 %17, metadata !5051, metadata !DIExpression()), !dbg !5052
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5065
  br label %20, !dbg !5066

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5052
  ret i32 %21, !dbg !5067
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5070, metadata !DIExpression()), !dbg !5071
  ret i32 0, !dbg !5072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5073 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5077, metadata !DIExpression()), !dbg !5078
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5079
  ret void, !dbg !5080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5081 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5084
  ret i8* %1, !dbg !5085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5086 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5097, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata i8* %0, metadata !5096, metadata !DIExpression()), !dbg !5108
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5109
  ret void, !dbg !5111
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5116, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5117, metadata !DIExpression()), !dbg !5118
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5119
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5119
  ret i32 %4, !dbg !5120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5121 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5128, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5125, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %1, metadata !5126, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %2, metadata !5127, metadata !DIExpression()), !dbg !5129
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5130
  ret void, !dbg !5131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5136, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i32 %1, metadata !5137, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i32 0, metadata !5138, metadata !DIExpression()), !dbg !5139
  %3 = icmp eq i32 %1, 0, !dbg !5140
  br i1 %3, label %13, label %4, !dbg !5143

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5138, metadata !DIExpression()), !dbg !5139
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5144
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5146
  %8 = load i8, i8* %7, align 1, !dbg !5146
  %9 = zext i8 %8 to i32, !dbg !5146
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5144
  %11 = add nuw i32 %5, 1, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %11, metadata !5138, metadata !DIExpression()), !dbg !5139
  %12 = icmp eq i32 %11, %1, !dbg !5140
  br i1 %12, label %13, label %4, !dbg !5143, !llvm.loop !5148

13:                                               ; preds = %4, %2
  ret void, !dbg !5150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5151 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5155, metadata !DIExpression()), !dbg !5157
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5158
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5156, metadata !DIExpression()), !dbg !5159
  call void @llvm.va_start(i8* nonnull %3), !dbg !5160
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5161
  %5 = load i32, i32* %4, align 4, !dbg !5161
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5161
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5161
  call void @llvm.va_end(i8* nonnull %3), !dbg !5162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5163
  ret void, !dbg !5163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5164 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5168, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 %1, metadata !5169, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8* %2, metadata !5170, metadata !DIExpression()), !dbg !5173
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5174
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5171, metadata !DIExpression()), !dbg !5175
  call void @llvm.va_start(i8* nonnull %5), !dbg !5176
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5177
  %7 = load i32, i32* %6, align 4, !dbg !5177
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5177
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %9, metadata !5172, metadata !DIExpression()), !dbg !5173
  call void @llvm.va_end(i8* nonnull %5), !dbg !5178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5179
  ret i32 %9, !dbg !5180
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5181 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5188, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %0, metadata !5185, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 %1, metadata !5186, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %2, metadata !5187, metadata !DIExpression()), !dbg !5195
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5196
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5196
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5189, metadata !DIExpression()), !dbg !5197
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5198
  store i8* %0, i8** %7, align 4, !dbg !5198
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5198
  store i32 %1, i32* %8, align 4, !dbg !5198
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5198
  store i32 0, i32* %9, align 4, !dbg !5198
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5199
  %10 = load i32, i32* %9, align 4, !dbg !5200
  %11 = load i32, i32* %8, align 4, !dbg !5202
  %12 = icmp slt i32 %10, %11, !dbg !5203
  br i1 %12, label %13, label %15, !dbg !5204

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5205
  store i8 0, i8* %14, align 1, !dbg !5207
  br label %15, !dbg !5208

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5209
  ret i32 %10, !dbg !5210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5216, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5217, metadata !DIExpression()), !dbg !5218
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5219
  %4 = load i8*, i8** %3, align 4, !dbg !5219
  %5 = icmp eq i8* %4, null, !dbg !5221
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5222
  br i1 %5, label %12, label %8, !dbg !5223

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5224
  %10 = load i32, i32* %9, align 4, !dbg !5224
  %11 = icmp slt i32 %7, %10, !dbg !5225
  br i1 %11, label %15, label %12, !dbg !5226

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5227
  %14 = add nsw i32 %7, 1, !dbg !5229
  store i32 %14, i32* %13, align 4, !dbg !5229
  br label %25, !dbg !5230

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5231
  %17 = icmp eq i32 %7, %16, !dbg !5233
  br i1 %17, label %18, label %21, !dbg !5234

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5235
  store i32 %19, i32* %6, align 4, !dbg !5235
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5237
  store i8 0, i8* %20, align 1, !dbg !5238
  br label %25, !dbg !5239

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5240
  %23 = add nsw i32 %7, 1, !dbg !5242
  store i32 %23, i32* %6, align 4, !dbg !5242
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5243
  store i8 %22, i8* %24, align 1, !dbg !5244
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5245
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5246 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5256, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %1, metadata !5257, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %2, metadata !5258, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %3, metadata !5259, metadata !DIExpression()), !dbg !5260
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5261
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5262
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5263
  unreachable, !dbg !5264
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5265 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5369
  ret %struct.k_thread* %1, !dbg !5370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5376, metadata !DIExpression()), !dbg !5377
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5378, !srcloc !5380
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5381
  ret void, !dbg !5382
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5383 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5384, !srcloc !5386
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5387
  ret %struct.k_thread* %1, !dbg !5388
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5389 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5402, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5399, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %1, metadata !5400, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %2, metadata !5401, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %4, metadata !5403, metadata !DIExpression()), !dbg !5528
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5529
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5529
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5404, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata i32 0, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i1 undef, metadata !5410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5528
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5531

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5531

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5532
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5402, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %30, metadata !5401, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %29, metadata !5408, metadata !DIExpression()), !dbg !5528
  %31 = load i8, i8* %30, align 1, !dbg !5533
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5531

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5533
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5534
  call void @llvm.dbg.value(metadata i8* %34, metadata !5401, metadata !DIExpression()), !dbg !5528
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %35, metadata !5412, metadata !DIExpression()), !dbg !5535
  %36 = icmp slt i32 %35, 0, !dbg !5536
  %37 = add i32 %29, 1, !dbg !5534
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %36, label %365, label %28, !llvm.loop !5538

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5540
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5417, metadata !DIExpression()), !dbg !5541
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5541
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5460, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5463, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8* %30, metadata !5466, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i32 -1, metadata !5467, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i32 -1, metadata !5468, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8* null, metadata !5469, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8* %14, metadata !5470, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8 0, metadata !5471, metadata !DIExpression()), !dbg !5542
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5543
  call void @llvm.dbg.value(metadata i8* %39, metadata !5401, metadata !DIExpression()), !dbg !5528
  %40 = load i24, i24* %15, align 8, !dbg !5544
  %41 = and i24 %40, 256, !dbg !5544
  %42 = icmp eq i24 %41, 0, !dbg !5544
  br i1 %42, label %51, label %43, !dbg !5546

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5547
  call void @llvm.dbg.value(metadata i8* %44, metadata !5402, metadata !DIExpression()), !dbg !5528
  %45 = bitcast i8* %27 to i32*, !dbg !5547
  %46 = load i32, i32* %45, align 4, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %46, metadata !5467, metadata !DIExpression()), !dbg !5542
  %47 = icmp slt i32 %46, 0, !dbg !5549
  br i1 %47, label %48, label %56, !dbg !5551

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5552
  store i24 %49, i24* %15, align 8, !dbg !5552
  %50 = sub nsw i32 0, %46, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %50, metadata !5467, metadata !DIExpression()), !dbg !5542
  br label %56, !dbg !5555

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5556
  %53 = icmp eq i24 %52, 0, !dbg !5556
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5558
  br label %56, !dbg !5558

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5559
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5542
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5402, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %58, metadata !5467, metadata !DIExpression()), !dbg !5542
  %60 = and i24 %57, 1024, !dbg !5559
  %61 = icmp eq i24 %60, 0, !dbg !5559
  br i1 %61, label %69, label %62, !dbg !5560

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5561
  call void @llvm.dbg.value(metadata i8* %63, metadata !5402, metadata !DIExpression()), !dbg !5528
  %64 = bitcast i8* %59 to i32*, !dbg !5561
  %65 = load i32, i32* %64, align 4, !dbg !5561
  call void @llvm.dbg.value(metadata i32 %65, metadata !5472, metadata !DIExpression()), !dbg !5562
  %66 = icmp slt i32 %65, 0, !dbg !5563
  br i1 %66, label %67, label %74, !dbg !5565

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5566
  store i24 %68, i24* %15, align 8, !dbg !5566
  br label %74, !dbg !5568

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5569
  %71 = icmp eq i24 %70, 0, !dbg !5569
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5571
  br label %74, !dbg !5571

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5572
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5542
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5542
  call void @llvm.dbg.value(metadata i8* %77, metadata !5402, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %76, metadata !5468, metadata !DIExpression()), !dbg !5542
  store i32 0, i32* %16, align 4, !dbg !5573
  store i32 0, i32* %17, align 8, !dbg !5574
  %78 = lshr i24 %75, 16, !dbg !5572
  call void @llvm.dbg.value(metadata i24 %78, metadata !5475, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5542
  %79 = lshr i24 %75, 11, !dbg !5575
  %80 = and i24 %79, 15, !dbg !5575
  %81 = zext i24 %80 to i32, !dbg !5575
  call void @llvm.dbg.value(metadata i32 %81, metadata !5476, metadata !DIExpression()), !dbg !5542
  %82 = trunc i24 %78 to i3, !dbg !5576
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5576

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5577

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5580
  call void @llvm.dbg.value(metadata i8* %85, metadata !5402, metadata !DIExpression()), !dbg !5528
  %86 = bitcast i8* %77 to i32*, !dbg !5580
  %87 = load i32, i32* %86, align 4, !dbg !5580
  %88 = sext i32 %87 to i64, !dbg !5580
  store i64 %88, i64* %20, align 8, !dbg !5582
  br label %115, !dbg !5583

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5584
  call void @llvm.dbg.value(metadata i8* %90, metadata !5402, metadata !DIExpression()), !dbg !5528
  %91 = bitcast i8* %77 to i32*, !dbg !5584
  %92 = load i32, i32* %91, align 4, !dbg !5584
  %93 = sext i32 %92 to i64, !dbg !5584
  store i64 %93, i64* %20, align 8, !dbg !5587
  br label %115, !dbg !5588

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5589
  %96 = add i32 %95, 7, !dbg !5589
  %97 = and i32 %96, -8, !dbg !5589
  %98 = inttoptr i32 %97 to i8*, !dbg !5589
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5589
  call void @llvm.dbg.value(metadata i8* %99, metadata !5402, metadata !DIExpression()), !dbg !5528
  %100 = inttoptr i32 %97 to i64*, !dbg !5589
  %101 = load i64, i64* %100, align 8, !dbg !5589
  store i64 %101, i64* %20, align 8, !dbg !5590
  br label %115, !dbg !5591

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5592
  %104 = add i32 %103, 7, !dbg !5592
  %105 = and i32 %104, -8, !dbg !5592
  %106 = inttoptr i32 %105 to i8*, !dbg !5592
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %107, metadata !5402, metadata !DIExpression()), !dbg !5528
  %108 = inttoptr i32 %105 to i64*, !dbg !5592
  %109 = load i64, i64* %108, align 8, !dbg !5592
  store i64 %109, i64* %20, align 8, !dbg !5593
  br label %115, !dbg !5594

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5595
  call void @llvm.dbg.value(metadata i8* %111, metadata !5402, metadata !DIExpression()), !dbg !5528
  %112 = bitcast i8* %77 to i32*, !dbg !5595
  %113 = load i32, i32* %112, align 4, !dbg !5595
  %114 = sext i32 %113 to i64, !dbg !5596
  store i64 %114, i64* %20, align 8, !dbg !5597
  br label %115, !dbg !5598

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5599
  call void @llvm.dbg.value(metadata i8* %117, metadata !5402, metadata !DIExpression()), !dbg !5528
  %118 = trunc i24 %79 to i4, !dbg !5600
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5600

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5601
  %121 = ashr exact i64 %120, 56, !dbg !5601
  store i64 %121, i64* %20, align 8, !dbg !5604
  br label %177, !dbg !5605

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5606
  %124 = ashr exact i64 %123, 48, !dbg !5606
  store i64 %124, i64* %20, align 8, !dbg !5609
  br label %177, !dbg !5610

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5611

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5614
  call void @llvm.dbg.value(metadata i8* %127, metadata !5402, metadata !DIExpression()), !dbg !5528
  %128 = bitcast i8* %77 to i32*, !dbg !5614
  %129 = load i32, i32* %128, align 4, !dbg !5614
  %130 = zext i32 %129 to i64, !dbg !5614
  store i64 %130, i64* %20, align 8, !dbg !5616
  br label %157, !dbg !5617

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5618
  call void @llvm.dbg.value(metadata i8* %132, metadata !5402, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %132, metadata !5402, metadata !DIExpression()), !dbg !5528
  %133 = bitcast i8* %77 to i32*, !dbg !5618
  %134 = load i32, i32* %133, align 4, !dbg !5618
  %135 = zext i32 %134 to i64, !dbg !5618
  store i64 %135, i64* %20, align 8, !dbg !5618
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5620
  %138 = add i32 %137, 7, !dbg !5620
  %139 = and i32 %138, -8, !dbg !5620
  %140 = inttoptr i32 %139 to i8*, !dbg !5620
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5620
  call void @llvm.dbg.value(metadata i8* %141, metadata !5402, metadata !DIExpression()), !dbg !5528
  %142 = inttoptr i32 %139 to i64*, !dbg !5620
  %143 = load i64, i64* %142, align 8, !dbg !5620
  store i64 %143, i64* %20, align 8, !dbg !5621
  br label %157, !dbg !5622

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5623
  %146 = add i32 %145, 7, !dbg !5623
  %147 = and i32 %146, -8, !dbg !5623
  %148 = inttoptr i32 %147 to i8*, !dbg !5623
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5623
  call void @llvm.dbg.value(metadata i8* %149, metadata !5402, metadata !DIExpression()), !dbg !5528
  %150 = inttoptr i32 %147 to i64*, !dbg !5623
  %151 = load i64, i64* %150, align 8, !dbg !5623
  store i64 %151, i64* %20, align 8, !dbg !5624
  br label %157, !dbg !5625

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5626
  call void @llvm.dbg.value(metadata i8* %153, metadata !5402, metadata !DIExpression()), !dbg !5528
  %154 = bitcast i8* %77 to i32*, !dbg !5626
  %155 = load i32, i32* %154, align 4, !dbg !5626
  %156 = zext i32 %155 to i64, !dbg !5627
  store i64 %156, i64* %20, align 8, !dbg !5628
  br label %157, !dbg !5629

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5630
  call void @llvm.dbg.value(metadata i8* %159, metadata !5402, metadata !DIExpression()), !dbg !5528
  %160 = trunc i24 %79 to i4, !dbg !5631
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5631

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5632
  store i64 %162, i64* %20, align 8, !dbg !5635
  br label %177, !dbg !5636

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5637
  store i64 %164, i64* %20, align 8, !dbg !5640
  br label %177, !dbg !5641

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5642
  %167 = add i32 %166, 7, !dbg !5642
  %168 = and i32 %167, -8, !dbg !5642
  %169 = inttoptr i32 %168 to i8*, !dbg !5642
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5642
  call void @llvm.dbg.value(metadata i8* %170, metadata !5402, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %170, metadata !5402, metadata !DIExpression()), !dbg !5528
  %171 = inttoptr i32 %168 to double*, !dbg !5642
  %172 = load double, double* %171, align 8, !dbg !5642
  store double %172, double* %19, align 8, !dbg !5642
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5646
  call void @llvm.dbg.value(metadata i8* %174, metadata !5402, metadata !DIExpression()), !dbg !5528
  %175 = bitcast i8* %77 to i8**, !dbg !5646
  %176 = load i8*, i8** %175, align 4, !dbg !5646
  store i8* %176, i8** %18, align 8, !dbg !5649
  br label %177, !dbg !5650

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5542
  call void @llvm.dbg.value(metadata i8* %178, metadata !5402, metadata !DIExpression()), !dbg !5528
  %179 = and i24 %75, 3, !dbg !5651
  %180 = icmp eq i24 %179, 0, !dbg !5651
  br i1 %180, label %185, label %181, !dbg !5651

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5652
  call void @llvm.dbg.value(metadata i32 %182, metadata !5477, metadata !DIExpression()), !dbg !5653
  %183 = icmp slt i32 %182, 0, !dbg !5654
  %184 = add i32 %182, %29, !dbg !5652
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5656
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5657

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %188, metadata !5481, metadata !DIExpression()), !dbg !5659
  %189 = icmp slt i32 %188, 0, !dbg !5660
  %190 = add i32 %29, 1, !dbg !5658
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5662
  call void @llvm.dbg.value(metadata i8* %192, metadata !5469, metadata !DIExpression()), !dbg !5542
  %193 = icmp sgt i32 %76, -1, !dbg !5663
  br i1 %193, label %194, label %196, !dbg !5665

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %195, metadata !5484, metadata !DIExpression()), !dbg !5668
  br label %241, !dbg !5669

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5670
  call void @llvm.dbg.value(metadata i32 %197, metadata !5484, metadata !DIExpression()), !dbg !5668
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5469, metadata !DIExpression()), !dbg !5542
  %199 = load i64, i64* %20, align 8, !dbg !5672
  %200 = trunc i64 %199 to i8, !dbg !5673
  store i8 %200, i8* %10, align 1, !dbg !5674
  call void @llvm.dbg.value(metadata i8* %23, metadata !5470, metadata !DIExpression()), !dbg !5542
  br label %245, !dbg !5675

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5676
  %203 = icmp eq i24 %202, 0, !dbg !5676
  %204 = trunc i24 %75 to i8, !dbg !5678
  %205 = shl i8 %204, 1, !dbg !5678
  %206 = and i8 %205, 32, !dbg !5678
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5678
  call void @llvm.dbg.value(metadata i8 %207, metadata !5471, metadata !DIExpression()), !dbg !5542
  %208 = load i64, i64* %20, align 8, !dbg !5679
  call void @llvm.dbg.value(metadata i64 %208, metadata !5409, metadata !DIExpression()), !dbg !5528
  %209 = icmp slt i64 %208, 0, !dbg !5680
  br i1 %209, label %210, label %212, !dbg !5682

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5471, metadata !DIExpression()), !dbg !5542
  %211 = sub nsw i64 0, %208, !dbg !5683
  store i64 %211, i64* %20, align 8, !dbg !5685
  br label %212, !dbg !5686

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5542
  call void @llvm.dbg.value(metadata i8 %213, metadata !5471, metadata !DIExpression()), !dbg !5542
  %214 = load i64, i64* %20, align 8, !dbg !5687
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5688
  call void @llvm.dbg.value(metadata i8* %215, metadata !5469, metadata !DIExpression()), !dbg !5542
  br label %216, !dbg !5689

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5690
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5691
  call void @llvm.dbg.value(metadata i8* %218, metadata !5469, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8 %217, metadata !5471, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.label(metadata !5527), !dbg !5692
  %219 = icmp sgt i32 %76, -1, !dbg !5693
  br i1 %219, label %222, label %220, !dbg !5694

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5695
  br label %245, !dbg !5694

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5697
  %224 = sub i32 %22, %223, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %224, metadata !5486, metadata !DIExpression()), !dbg !5698
  %225 = load i24, i24* %15, align 8, !dbg !5699
  %226 = and i24 %225, -65, !dbg !5699
  store i24 %226, i24* %15, align 8, !dbg !5699
  %227 = icmp ugt i32 %76, %224, !dbg !5700
  br i1 %227, label %228, label %245, !dbg !5702

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5703
  store i32 %229, i32* %16, align 4, !dbg !5705
  br label %245, !dbg !5706

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5707
  %232 = icmp eq i8* %231, null, !dbg !5709
  br i1 %232, label %245, label %233, !dbg !5710

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5711
  %235 = zext i32 %234 to i64, !dbg !5711
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5713
  call void @llvm.dbg.value(metadata i8* %236, metadata !5469, metadata !DIExpression()), !dbg !5542
  %237 = load i24, i24* %15, align 8, !dbg !5714
  %238 = or i24 %237, 1048576, !dbg !5714
  store i24 %238, i24* %15, align 8, !dbg !5714
  store i8 120, i8* %21, align 1, !dbg !5715
  br label %216, !dbg !5716

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5717
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5720
  br label %363, !dbg !5721

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5722
  call void @llvm.dbg.value(metadata i32 %242, metadata !5484, metadata !DIExpression()), !dbg !5668
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5723
  call void @llvm.dbg.value(metadata i32 -1, metadata !5468, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i32 %29, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8* %192, metadata !5469, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8* %243, metadata !5470, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8 0, metadata !5471, metadata !DIExpression()), !dbg !5542
  %244 = icmp eq i8* %192, null, !dbg !5724
  br i1 %244, label %363, label %245, !dbg !5726, !llvm.loop !5538

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5695
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5542
  call void @llvm.dbg.value(metadata i32 0, metadata !5490, metadata !DIExpression()), !dbg !5542
  %250 = zext i8 %249 to i32, !dbg !5727
  %251 = icmp eq i8 %249, 0, !dbg !5729
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  call void @llvm.dbg.value(metadata i32 undef, metadata !5489, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  call void @llvm.dbg.value(metadata i32 undef, metadata !5489, metadata !DIExpression()), !dbg !5542
  %252 = icmp sgt i32 %58, 0, !dbg !5730
  br i1 %252, label %253, label %302, !dbg !5731

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5695
  %255 = icmp eq i24 %254, 0, !dbg !5695
  %256 = ptrtoint i8* %248 to i32, !dbg !5732
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  %257 = ptrtoint i8* %247 to i32, !dbg !5732
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  %258 = xor i1 %251, true, !dbg !5733
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  %259 = sext i1 %258 to i32, !dbg !5733
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  %260 = lshr i24 %246, 19, !dbg !5734
  %261 = and i24 %260, 1, !dbg !5734
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5734
  %263 = zext i24 %262 to i32, !dbg !5734
  %264 = add i32 %257, %259, !dbg !5734
  %265 = add i32 %256, %263, !dbg !5734
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  %266 = and i24 %246, 4194304, !dbg !5735
  %267 = icmp eq i24 %266, 0, !dbg !5735
  %268 = load i32, i32* %16, align 4, !dbg !5737
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5542
  call void @llvm.dbg.value(metadata i32 undef, metadata !5489, metadata !DIExpression()), !dbg !5542
  %269 = load i32, i32* %17, align 8, !dbg !5738
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5738
  call void @llvm.dbg.value(metadata i32 undef, metadata !5489, metadata !DIExpression()), !dbg !5542
  %271 = add i32 %264, %58, !dbg !5738
  %272 = add i32 %265, %268, !dbg !5738
  %273 = add i32 %272, %270, !dbg !5739
  %274 = sub i32 %271, %273, !dbg !5739
  call void @llvm.dbg.value(metadata i32 %274, metadata !5467, metadata !DIExpression()), !dbg !5542
  %275 = and i24 %246, 4, !dbg !5740
  %276 = icmp eq i24 %275, 0, !dbg !5740
  br i1 %276, label %277, label %302, !dbg !5741

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5491, metadata !DIExpression()), !dbg !5742
  %278 = and i24 %246, 64, !dbg !5743
  %279 = icmp eq i24 %278, 0, !dbg !5743
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5744
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5744
  %282 = select i1 %279, i32 32, i32 48, !dbg !5744
  br i1 %280, label %287, label %283, !dbg !5744

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5745
  call void @llvm.dbg.value(metadata i32 %284, metadata !5496, metadata !DIExpression()), !dbg !5746
  %285 = icmp slt i32 %284, 0, !dbg !5747
  %286 = add i32 %29, 1, !dbg !5745
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5542
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %290, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i8 undef, metadata !5491, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i8 %288, metadata !5471, metadata !DIExpression()), !dbg !5542
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5749
  %292 = add i32 %291, -1, !dbg !5749
  br label %293, !dbg !5749

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5750
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %295, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %294, metadata !5467, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i32 %294, metadata !5467, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5542
  %296 = icmp sgt i32 %294, 0, !dbg !5751
  br i1 %296, label %297, label %302, !dbg !5749

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %298, metadata !5467, metadata !DIExpression()), !dbg !5542
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %299, metadata !5502, metadata !DIExpression()), !dbg !5754
  %300 = icmp slt i32 %299, 0, !dbg !5755
  %301 = add i32 %295, 1, !dbg !5753
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %300, label %361, label %293, !llvm.loop !5757

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5542
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5542
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %305, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %304, metadata !5467, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.value(metadata i8 %303, metadata !5471, metadata !DIExpression()), !dbg !5542
  %306 = icmp eq i8 %303, 0, !dbg !5759
  br i1 %306, label %312, label %307, !dbg !5760

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5761
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5762
  call void @llvm.dbg.value(metadata i32 %309, metadata !5505, metadata !DIExpression()), !dbg !5763
  %310 = icmp slt i32 %309, 0, !dbg !5764
  %311 = add i32 %305, 1, !dbg !5762
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %313, metadata !5408, metadata !DIExpression()), !dbg !5528
  %314 = lshr i24 %246, 20, !dbg !5766
  %315 = lshr i24 %246, 19, !dbg !5767
  %316 = or i24 %314, %315, !dbg !5768
  %317 = and i24 %316, 1, !dbg !5768
  %318 = icmp eq i24 %317, 0, !dbg !5768
  br i1 %318, label %323, label %319, !dbg !5769

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5770
  call void @llvm.dbg.value(metadata i32 %320, metadata !5509, metadata !DIExpression()), !dbg !5771
  %321 = icmp slt i32 %320, 0, !dbg !5772
  %322 = add i32 %313, 1, !dbg !5770
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %324, metadata !5408, metadata !DIExpression()), !dbg !5528
  %325 = and i24 %246, 1048576, !dbg !5774
  %326 = icmp eq i24 %325, 0, !dbg !5774
  br i1 %326, label %333, label %327, !dbg !5775

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5776
  %329 = zext i8 %328 to i32, !dbg !5776
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5776
  call void @llvm.dbg.value(metadata i32 %330, metadata !5515, metadata !DIExpression()), !dbg !5777
  %331 = icmp slt i32 %330, 0, !dbg !5778
  %332 = add i32 %324, 1, !dbg !5776
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %334, metadata !5408, metadata !DIExpression()), !dbg !5528
  %335 = load i32, i32* %16, align 4, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %335, metadata !5490, metadata !DIExpression()), !dbg !5542
  br label %336, !dbg !5781

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5782
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %338, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %337, metadata !5490, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5542
  %339 = icmp sgt i32 %337, 0, !dbg !5783
  br i1 %339, label %340, label %345, !dbg !5781

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5784
  call void @llvm.dbg.value(metadata i32 %341, metadata !5490, metadata !DIExpression()), !dbg !5542
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5785
  call void @llvm.dbg.value(metadata i32 %342, metadata !5519, metadata !DIExpression()), !dbg !5786
  %343 = icmp slt i32 %342, 0, !dbg !5787
  %344 = add i32 %338, 1, !dbg !5785
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %343, label %361, label %336, !llvm.loop !5789

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %346, metadata !5522, metadata !DIExpression()), !dbg !5792
  %347 = icmp slt i32 %346, 0, !dbg !5793
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %349, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %304, metadata !5467, metadata !DIExpression()), !dbg !5542
  %350 = icmp sgt i32 %304, 0, !dbg !5795
  br i1 %350, label %351, label %363, !dbg !5796

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5796
  %353 = add i32 %352, %338, !dbg !5796
  br label %354, !dbg !5796

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %355, metadata !5467, metadata !DIExpression()), !dbg !5542
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %356, metadata !5524, metadata !DIExpression()), !dbg !5798
  %357 = icmp slt i32 %356, 0, !dbg !5799
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5801
  call void @llvm.dbg.value(metadata i32 undef, metadata !5408, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5528
  call void @llvm.dbg.value(metadata i32 %359, metadata !5467, metadata !DIExpression()), !dbg !5542
  %360 = icmp sgt i32 %355, 1, !dbg !5795
  br i1 %360, label %354, label %363, !dbg !5796, !llvm.loop !5802

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5539
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %364, metadata !5408, metadata !DIExpression()), !dbg !5528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5539
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5528
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5804
  ret i32 %366, !dbg !5804
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5805 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5809, metadata !DIExpression()), !dbg !5811
  call void @llvm.dbg.value(metadata i8* %1, metadata !5810, metadata !DIExpression()), !dbg !5811
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5812
  store i24 0, i24* %3, align 4, !dbg !5812
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5812
  store i8 0, i8* %4, align 1, !dbg !5812
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5812
  store i32 0, i32* %5, align 4, !dbg !5812
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5812
  store i32 0, i32* %6, align 4, !dbg !5812
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %7, metadata !5810, metadata !DIExpression()), !dbg !5811
  %8 = load i8, i8* %7, align 1, !dbg !5814
  %9 = icmp eq i8 %8, 37, !dbg !5816
  br i1 %9, label %10, label %12, !dbg !5817

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5818
  call void @llvm.dbg.value(metadata i8* %11, metadata !5810, metadata !DIExpression()), !dbg !5811
  store i8 37, i8* %4, align 1, !dbg !5820
  br label %18, !dbg !5821

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5822
  call void @llvm.dbg.value(metadata i8* %13, metadata !5810, metadata !DIExpression()), !dbg !5811
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5823
  call void @llvm.dbg.value(metadata i8* %14, metadata !5810, metadata !DIExpression()), !dbg !5811
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5824
  call void @llvm.dbg.value(metadata i8* %15, metadata !5810, metadata !DIExpression()), !dbg !5811
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5825
  call void @llvm.dbg.value(metadata i8* %16, metadata !5810, metadata !DIExpression()), !dbg !5811
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5826
  call void @llvm.dbg.value(metadata i8* %17, metadata !5810, metadata !DIExpression()), !dbg !5811
  br label %18, !dbg !5827

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5811
  ret i8* %19, !dbg !5828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5829 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5833, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8* %1, metadata !5834, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8* %2, metadata !5835, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8* %3, metadata !5836, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i32 0, metadata !5837, metadata !DIExpression()), !dbg !5840
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5841

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %9, metadata !5837, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8* %8, metadata !5835, metadata !DIExpression()), !dbg !5840
  %10 = icmp ult i8* %8, %3, !dbg !5843
  br i1 %10, label %11, label %13, !dbg !5844

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5845
  br label %17, !dbg !5844

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5846

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5847
  %16 = icmp eq i8 %15, 0, !dbg !5846
  br i1 %16, label %24, label %17, !dbg !5841

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5845
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5848
  call void @llvm.dbg.value(metadata i8* %19, metadata !5835, metadata !DIExpression()), !dbg !5840
  %20 = zext i8 %18 to i32, !dbg !5849
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %21, metadata !5838, metadata !DIExpression()), !dbg !5851
  %22 = icmp slt i32 %21, 0, !dbg !5852
  %23 = add i32 %9, 1, !dbg !5854
  call void @llvm.dbg.value(metadata i32 undef, metadata !5837, metadata !DIExpression()), !dbg !5840
  br i1 %22, label %24, label %7, !llvm.loop !5855

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5840
  ret i32 %25, !dbg !5857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5858 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5862, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5863, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i8* %2, metadata !5864, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i8* %3, metadata !5865, metadata !DIExpression()), !dbg !5872
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5873
  %6 = load i8, i8* %5, align 1, !dbg !5873
  %7 = zext i8 %6 to i32, !dbg !5874
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5875
  %9 = icmp eq i32 %8, 0, !dbg !5875
  call void @llvm.dbg.value(metadata i1 %9, metadata !5866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5872
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5876
  call void @llvm.dbg.value(metadata i32 %10, metadata !5867, metadata !DIExpression()), !dbg !5872
  %11 = ptrtoint i8* %3 to i32, !dbg !5877
  %12 = ptrtoint i8* %2 to i32, !dbg !5877
  %13 = sub i32 %11, %12, !dbg !5877
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5878
  call void @llvm.dbg.value(metadata i8* %14, metadata !5869, metadata !DIExpression()), !dbg !5872
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5879

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5872
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5862, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i8* %18, metadata !5869, metadata !DIExpression()), !dbg !5872
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5880
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %25, metadata !5870, metadata !DIExpression()), !dbg !5882
  %26 = icmp ult i32 %25, 10, !dbg !5883
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5884
  %28 = add i32 %27, %25, !dbg !5882
  %29 = trunc i32 %28 to i8, !dbg !5884
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5885
  call void @llvm.dbg.value(metadata i8* %30, metadata !5869, metadata !DIExpression()), !dbg !5872
  store i8 %29, i8* %30, align 1, !dbg !5886
  call void @llvm.dbg.value(metadata i64 %22, metadata !5862, metadata !DIExpression()), !dbg !5872
  %31 = icmp uge i64 %19, %15, !dbg !5887
  %32 = icmp ugt i8* %30, %2, !dbg !5888
  %33 = and i1 %31, %32, !dbg !5888
  br i1 %33, label %17, label %34, !dbg !5889, !llvm.loop !5890

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5892
  %36 = load i24, i24* %35, align 4, !dbg !5892
  %37 = and i24 %36, 32, !dbg !5892
  %38 = icmp eq i24 %37, 0, !dbg !5892
  br i1 %38, label %44, label %39, !dbg !5894

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5895

40:                                               ; preds = %39
  br label %41, !dbg !5897

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5901
  store i24 %43, i24* %35, align 4, !dbg !5901
  br label %44, !dbg !5902

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5903 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5909, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.value(metadata i8* %1, metadata !5910, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.value(metadata i32 %2, metadata !5911, metadata !DIExpression()), !dbg !5912
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5913
  %5 = load i24, i24* %4, align 4, !dbg !5913
  %6 = lshr i24 %5, 11, !dbg !5913
  %7 = and i24 %6, 15, !dbg !5913
  %8 = zext i24 %7 to i32, !dbg !5913
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5914

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5915
  store i32 %2, i32* %10, align 4, !dbg !5917
  br label %28, !dbg !5918

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5919
  store i8 %12, i8* %1, align 1, !dbg !5920
  br label %28, !dbg !5921

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5922
  %15 = bitcast i8* %1 to i16*, !dbg !5923
  store i16 %14, i16* %15, align 2, !dbg !5924
  br label %28, !dbg !5925

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5926
  store i32 %2, i32* %17, align 4, !dbg !5927
  br label %28, !dbg !5928

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5929
  %20 = bitcast i8* %1 to i64*, !dbg !5930
  store i64 %19, i64* %20, align 8, !dbg !5931
  br label %28, !dbg !5932

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5933
  %23 = bitcast i8* %1 to i64*, !dbg !5934
  store i64 %22, i64* %23, align 8, !dbg !5935
  br label %28, !dbg !5936

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5937
  store i32 %2, i32* %25, align 4, !dbg !5938
  br label %28, !dbg !5939

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5940
  store i32 %2, i32* %27, align 4, !dbg !5941
  br label %28, !dbg !5942

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5943
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5947, metadata !DIExpression()), !dbg !5948
  %2 = add i32 %0, -65, !dbg !5949
  %3 = icmp ult i32 %2, 26, !dbg !5950
  %4 = zext i1 %3 to i32, !dbg !5950
  ret i32 %4, !dbg !5951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5952 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5956, metadata !DIExpression()), !dbg !5957
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5958

2:                                                ; preds = %1
  br label %4, !dbg !5959

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5961

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5962
  ret i32 %5, !dbg !5963
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5964 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5966, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8* %1, metadata !5967, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8 1, metadata !5968, metadata !DIExpression()), !dbg !5969
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5970

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8* %5, metadata !5967, metadata !DIExpression()), !dbg !5969
  %6 = load i8, i8* %5, align 1, !dbg !5971
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5973

7:                                                ; preds = %4
  br label %11, !dbg !5974

8:                                                ; preds = %4
  br label %11, !dbg !5976

9:                                                ; preds = %4
  br label %11, !dbg !5977

10:                                               ; preds = %4
  br label %11, !dbg !5978

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5979
  %14 = or i24 %13, %12, !dbg !5979
  store i24 %14, i24* %3, align 4, !dbg !5979
  call void @llvm.dbg.value(metadata i8 poison, metadata !5968, metadata !DIExpression()), !dbg !5969
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5967, metadata !DIExpression()), !dbg !5969
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i8* %15, metadata !5967, metadata !DIExpression()), !dbg !5969
  %17 = load i24, i24* %3, align 4, !dbg !5980
  %18 = and i24 %17, 68, !dbg !5982
  %19 = icmp eq i24 %18, 68, !dbg !5982
  br i1 %19, label %20, label %22, !dbg !5982

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5983
  store i24 %21, i24* %3, align 4, !dbg !5983
  br label %22, !dbg !5985

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5987 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5989, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8* %1, metadata !5990, metadata !DIExpression()), !dbg !5993
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5994
  %5 = load i24, i24* %4, align 4, !dbg !5995
  %6 = or i24 %5, 128, !dbg !5995
  store i24 %6, i24* %4, align 4, !dbg !5995
  call void @llvm.dbg.value(metadata i8* %1, metadata !5990, metadata !DIExpression()), !dbg !5993
  %7 = load i8, i8* %1, align 1, !dbg !5996
  %8 = icmp eq i8 %7, 42, !dbg !5998
  br i1 %8, label %9, label %12, !dbg !5999

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6000
  store i24 %10, i24* %4, align 4, !dbg !6000
  call void @llvm.dbg.value(metadata i8* %1, metadata !5990, metadata !DIExpression()), !dbg !5993
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6002
  call void @llvm.dbg.value(metadata i8* %11, metadata !5990, metadata !DIExpression()), !dbg !5993
  store i8* %11, i8** %3, align 4, !dbg !6002
  br label %29, !dbg !6003

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5991, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8** %3, metadata !5990, metadata !DIExpression(DW_OP_deref)), !dbg !5993
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %13, metadata !5992, metadata !DIExpression()), !dbg !5993
  %14 = load i8*, i8** %3, align 4, !dbg !6005
  call void @llvm.dbg.value(metadata i8* %14, metadata !5990, metadata !DIExpression()), !dbg !5993
  %15 = icmp eq i8* %14, %1, !dbg !6007
  br i1 %15, label %29, label %16, !dbg !6008

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6009
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6011
  store i32 %13, i32* %18, align 4, !dbg !6012
  %19 = lshr i32 %13, 31, !dbg !6013
  %20 = lshr i24 %17, 1, !dbg !6014
  %21 = and i24 %20, 1, !dbg !6014
  %22 = zext i24 %21 to i32, !dbg !6014
  %23 = or i32 %19, %22, !dbg !6014
  %24 = trunc i32 %23 to i24, !dbg !6014
  %25 = shl nuw nsw i24 %24, 1, !dbg !6014
  %26 = and i24 %17, -131, !dbg !6014
  %27 = or i24 %26, 128, !dbg !6014
  %28 = or i24 %25, %27, !dbg !6014
  store i24 %28, i24* %4, align 4, !dbg !6014
  br label %29, !dbg !6015

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5993
  ret i8* %30, !dbg !6016
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6017 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6019, metadata !DIExpression()), !dbg !6022
  call void @llvm.dbg.value(metadata i8* %1, metadata !6020, metadata !DIExpression()), !dbg !6022
  %4 = load i8, i8* %1, align 1, !dbg !6023
  %5 = icmp eq i8 %4, 46, !dbg !6024
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6025
  %7 = load i24, i24* %6, align 4, !dbg !6026
  %8 = select i1 %5, i24 512, i24 0, !dbg !6026
  %9 = and i24 %7, -513, !dbg !6026
  %10 = or i24 %9, %8, !dbg !6026
  store i24 %10, i24* %6, align 4, !dbg !6026
  br i1 %5, label %11, label %32, !dbg !6027

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6020, metadata !DIExpression()), !dbg !6022
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6028
  call void @llvm.dbg.value(metadata i8* %12, metadata !6020, metadata !DIExpression()), !dbg !6022
  store i8* %12, i8** %3, align 4, !dbg !6028
  %13 = load i8, i8* %12, align 1, !dbg !6029
  %14 = icmp eq i8 %13, 42, !dbg !6031
  br i1 %14, label %15, label %18, !dbg !6032

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6033
  store i24 %16, i24* %6, align 4, !dbg !6033
  call void @llvm.dbg.value(metadata i8* %12, metadata !6020, metadata !DIExpression()), !dbg !6022
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6035
  call void @llvm.dbg.value(metadata i8* %17, metadata !6020, metadata !DIExpression()), !dbg !6022
  store i8* %17, i8** %3, align 4, !dbg !6035
  br label %32, !dbg !6036

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6020, metadata !DIExpression(DW_OP_deref)), !dbg !6022
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %19, metadata !6021, metadata !DIExpression()), !dbg !6022
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6038
  store i32 %19, i32* %20, align 4, !dbg !6039
  %21 = lshr i32 %19, 31, !dbg !6040
  %22 = load i24, i24* %6, align 4, !dbg !6041
  %23 = lshr i24 %22, 1, !dbg !6041
  %24 = and i24 %23, 1, !dbg !6041
  %25 = zext i24 %24 to i32, !dbg !6041
  %26 = or i32 %21, %25, !dbg !6041
  %27 = trunc i32 %26 to i24, !dbg !6041
  %28 = shl nuw nsw i24 %27, 1, !dbg !6041
  %29 = and i24 %22, -3, !dbg !6041
  %30 = or i24 %28, %29, !dbg !6041
  store i24 %30, i24* %6, align 4, !dbg !6041
  %31 = load i8*, i8** %3, align 4, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %31, metadata !6020, metadata !DIExpression()), !dbg !6022
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6022
  ret i8* %33, !dbg !6043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6044 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6046, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata i8* %1, metadata !6047, metadata !DIExpression()), !dbg !6048
  %3 = load i8, i8* %1, align 1, !dbg !6049
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6050

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6051
  call void @llvm.dbg.value(metadata i8* %5, metadata !6047, metadata !DIExpression()), !dbg !6048
  %6 = load i8, i8* %5, align 1, !dbg !6054
  %7 = icmp eq i8 %6, 104, !dbg !6055
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6056
  %9 = load i24, i24* %8, align 4, !dbg !6056
  %10 = and i24 %9, -30721, !dbg !6056
  br i1 %7, label %11, label %14, !dbg !6057

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6058
  store i24 %12, i24* %8, align 4, !dbg !6058
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6060
  call void @llvm.dbg.value(metadata i8* %13, metadata !6047, metadata !DIExpression()), !dbg !6048
  br label %56, !dbg !6061

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6062
  store i24 %15, i24* %8, align 4, !dbg !6062
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6064
  call void @llvm.dbg.value(metadata i8* %17, metadata !6047, metadata !DIExpression()), !dbg !6048
  %18 = load i8, i8* %17, align 1, !dbg !6066
  %19 = icmp eq i8 %18, 108, !dbg !6067
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6068
  %21 = load i24, i24* %20, align 4, !dbg !6068
  %22 = and i24 %21, -30721, !dbg !6068
  br i1 %19, label %23, label %26, !dbg !6069

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6070
  store i24 %24, i24* %20, align 4, !dbg !6070
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6072
  call void @llvm.dbg.value(metadata i8* %25, metadata !6047, metadata !DIExpression()), !dbg !6048
  br label %56, !dbg !6073

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6074
  store i24 %27, i24* %20, align 4, !dbg !6074
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6076
  %30 = load i24, i24* %29, align 4, !dbg !6077
  %31 = and i24 %30, -30721, !dbg !6077
  %32 = or i24 %31, 10240, !dbg !6077
  store i24 %32, i24* %29, align 4, !dbg !6077
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6078
  call void @llvm.dbg.value(metadata i8* %33, metadata !6047, metadata !DIExpression()), !dbg !6048
  br label %56, !dbg !6079

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6080
  %36 = load i24, i24* %35, align 4, !dbg !6081
  %37 = and i24 %36, -30721, !dbg !6081
  %38 = or i24 %37, 12288, !dbg !6081
  store i24 %38, i24* %35, align 4, !dbg !6081
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6082
  call void @llvm.dbg.value(metadata i8* %39, metadata !6047, metadata !DIExpression()), !dbg !6048
  br label %56, !dbg !6083

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6084
  %42 = load i24, i24* %41, align 4, !dbg !6085
  %43 = and i24 %42, -30721, !dbg !6085
  %44 = or i24 %43, 14336, !dbg !6085
  store i24 %44, i24* %41, align 4, !dbg !6085
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6086
  call void @llvm.dbg.value(metadata i8* %45, metadata !6047, metadata !DIExpression()), !dbg !6048
  br label %56, !dbg !6087

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6088
  %48 = load i24, i24* %47, align 4, !dbg !6089
  %49 = and i24 %48, -30723, !dbg !6089
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6090
  call void @llvm.dbg.value(metadata i8* %50, metadata !6047, metadata !DIExpression()), !dbg !6048
  %51 = or i24 %49, 16386, !dbg !6091
  store i24 %51, i24* %47, align 4, !dbg !6091
  br label %56, !dbg !6092

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6093
  %54 = load i24, i24* %53, align 4, !dbg !6094
  %55 = and i24 %54, -30721, !dbg !6094
  store i24 %55, i24* %53, align 4, !dbg !6094
  br label %56, !dbg !6095

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6047, metadata !DIExpression()), !dbg !6048
  ret i8* %57, !dbg !6096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6097 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %1, metadata !6100, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8 0, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %1, metadata !6100, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6104
  %3 = load i8, i8* %1, align 1, !dbg !6105
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6106
  store i8 %3, i8* %4, align 1, !dbg !6107
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6108

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6109

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6110
  %9 = load i24, i24* %8, align 4, !dbg !6110
  %10 = and i24 %9, -458753, !dbg !6110
  %11 = or i24 %10, %7, !dbg !6110
  call void @llvm.dbg.label(metadata !6102), !dbg !6111
  %12 = and i24 %9, 30720, !dbg !6112
  %13 = icmp eq i24 %12, 16384, !dbg !6112
  %14 = zext i1 %13 to i24, !dbg !6114
  %15 = or i24 %11, %14, !dbg !6114
  %16 = icmp eq i8 %3, 99, !dbg !6115
  br i1 %16, label %17, label %43, !dbg !6117

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6118
  %19 = icmp ne i24 %18, 0, !dbg !6118
  call void @llvm.dbg.value(metadata i1 %19, metadata !6101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6104
  br label %43, !dbg !6120

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6121
  %22 = load i24, i24* %21, align 4, !dbg !6122
  %23 = and i24 %22, -458753, !dbg !6122
  %24 = or i24 %23, 262144, !dbg !6122
  call void @llvm.dbg.value(metadata i8 1, metadata !6101, metadata !DIExpression()), !dbg !6104
  br label %43, !dbg !6123

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6126
  %27 = load i24, i24* %26, align 4, !dbg !6127
  %28 = and i24 %27, -458753, !dbg !6127
  %29 = or i24 %28, 196608, !dbg !6127
  %30 = and i24 %27, 30720, !dbg !6128
  %31 = icmp eq i24 %30, 16384, !dbg !6128
  br label %43, !dbg !6130

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6131
  %34 = load i24, i24* %33, align 4, !dbg !6132
  %35 = and i24 %34, -458753, !dbg !6132
  %36 = or i24 %35, 196608, !dbg !6132
  %37 = and i24 %34, 30720, !dbg !6133
  %38 = icmp ne i24 %37, 0, !dbg !6133
  br label %43, !dbg !6135

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6136
  %41 = load i24, i24* %40, align 4, !dbg !6137
  %42 = or i24 %41, 1, !dbg !6137
  br label %43, !dbg !6138

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6139
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6140
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6141
  call void @llvm.dbg.value(metadata i8* %48, metadata !6100, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8 poison, metadata !6101, metadata !DIExpression()), !dbg !6104
  %49 = lshr i24 %44, 1, !dbg !6139
  %50 = and i24 %49, 1, !dbg !6139
  %51 = zext i24 %50 to i32, !dbg !6139
  %52 = or i32 %51, %47, !dbg !6139
  %53 = trunc i32 %52 to i24, !dbg !6139
  %54 = shl nuw nsw i24 %53, 1, !dbg !6139
  %55 = and i24 %44, -3, !dbg !6139
  %56 = or i24 %54, %55, !dbg !6139
  store i24 %56, i24* %46, align 4, !dbg !6139
  ret i8* %48, !dbg !6142
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6143 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6147, metadata !DIExpression()), !dbg !6150
  %2 = load i8*, i8** %0, align 4, !dbg !6151
  call void @llvm.dbg.value(metadata i8* %2, metadata !6148, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 0, metadata !6149, metadata !DIExpression()), !dbg !6150
  %3 = load i8, i8* %2, align 1, !dbg !6152
  %4 = zext i8 %3 to i32, !dbg !6153
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6154
  %6 = icmp eq i32 %5, 0, !dbg !6155
  br i1 %6, label %19, label %7, !dbg !6155

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %10, metadata !6148, metadata !DIExpression()), !dbg !6150
  %11 = mul i32 %9, 10, !dbg !6156
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6158
  call void @llvm.dbg.value(metadata i8* %12, metadata !6148, metadata !DIExpression()), !dbg !6150
  %13 = add i32 %11, -48, !dbg !6159
  %14 = add i32 %13, %8, !dbg !6160
  call void @llvm.dbg.value(metadata i32 %14, metadata !6149, metadata !DIExpression()), !dbg !6150
  %15 = load i8, i8* %12, align 1, !dbg !6152
  %16 = zext i8 %15 to i32, !dbg !6153
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6154
  %18 = icmp eq i32 %17, 0, !dbg !6155
  br i1 %18, label %19, label %7, !dbg !6155, !llvm.loop !6161

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6150
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6150
  store i8* %20, i8** %0, align 4, !dbg !6163
  ret i32 %21, !dbg !6164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6167, metadata !DIExpression()), !dbg !6168
  %2 = add i32 %0, -48, !dbg !6169
  %3 = icmp ult i32 %2, 10, !dbg !6170
  %4 = zext i1 %3 to i32, !dbg !6170
  ret i32 %4, !dbg !6171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6172 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #25, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #25, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6826, !srcloc !6827
  ret void, !dbg !6828
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6831, metadata !DIExpression()), !dbg !6833
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6834
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6835
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6836, !srcloc !6845
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6836
  call void @llvm.dbg.value(metadata i32 %3, metadata !6842, metadata !DIExpression()) #25, !dbg !6846
  call void @llvm.dbg.value(metadata i32 undef, metadata !6843, metadata !DIExpression()) #25, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %3, metadata !6832, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i32 %3, metadata !6847, metadata !DIExpression()) #25, !dbg !6852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6854, !srcloc !6855
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6856
  ret i32 0, !dbg !6857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6858 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6860
  %2 = or i32 %1, 512, !dbg !6860
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6860
  ret void, !dbg !6861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6862 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6863
  %2 = or i32 %1, 1024, !dbg !6863
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6863
  ret void, !dbg !6864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6867, metadata !DIExpression()), !dbg !6868
  ret i32 0, !dbg !6869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6870 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6873, metadata !DIExpression()), !dbg !6881
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6882
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6882
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6874, metadata !DIExpression()), !dbg !6883
  call void @llvm.va_start(i8* nonnull %3), !dbg !6884
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6885
  %5 = load i32, i32* %4, align 4, !dbg !6885
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6885
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6885
  call void @llvm.va_end(i8* nonnull %3), !dbg !6886
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6887
  ret void, !dbg !6887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6888 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i8* %0, metadata !6892, metadata !DIExpression()), !dbg !6894
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !6895
  ret void, !dbg !6896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6901, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i8* %1, metadata !6902, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i32 %2, metadata !6903, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i8* %1, metadata !6904, metadata !DIExpression()), !dbg !6905
  %4 = icmp eq i32 %2, 0, !dbg !6906
  br i1 %4, label %14, label %5, !dbg !6907

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !6905
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6907

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6904, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i32 %10, metadata !6903, metadata !DIExpression()), !dbg !6905
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !6908
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !6910
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %11, metadata !6903, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i8* %12, metadata !6904, metadata !DIExpression()), !dbg !6905
  br i1 %13, label %14, label %8, !dbg !6911, !llvm.loop !6912

14:                                               ; preds = %8, %3
  ret void, !dbg !6914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !6915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6917, metadata !DIExpression()), !dbg !6918
  %2 = add i32 %0, -1, !dbg !6919
  %3 = icmp ult i32 %2, 4, !dbg !6919
  %4 = shl i32 %2, 3, !dbg !6919
  %5 = lshr i32 1145657157, %4, !dbg !6919
  %6 = trunc i32 %5 to i8, !dbg !6919
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6919
  ret i8 %7, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6921 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6925, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.value(metadata i32 %1, metadata !6926, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.value(metadata i32 0, metadata !6927, metadata !DIExpression()), !dbg !6937
  br label %4, !dbg !6938

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !6939
  call void @llvm.dbg.value(metadata i32 0, metadata !6929, metadata !DIExpression()), !dbg !6940
  br label %16, !dbg !6941

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6927, metadata !DIExpression()), !dbg !6937
  %6 = icmp ult i32 %5, %1, !dbg !6942
  br i1 %6, label %7, label %11, !dbg !6946

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6947
  %9 = load i8, i8* %8, align 1, !dbg !6947
  %10 = zext i8 %9 to i32, !dbg !6949
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !6950
  br label %12, !dbg !6951

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !6952
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6954
  call void @llvm.dbg.value(metadata i32 %13, metadata !6927, metadata !DIExpression()), !dbg !6937
  %14 = icmp eq i32 %13, 8, !dbg !6955
  br i1 %14, label %3, label %4, !dbg !6938, !llvm.loop !6956

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !6958
  ret void, !dbg !6959

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6929, metadata !DIExpression()), !dbg !6940
  %18 = icmp ult i32 %17, %1, !dbg !6960
  br i1 %18, label %19, label %26, !dbg !6961

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6962
  %21 = load i8, i8* %20, align 1, !dbg !6962
  call void @llvm.dbg.value(metadata i8 %21, metadata !6931, metadata !DIExpression()), !dbg !6963
  %22 = zext i8 %21 to i32, !dbg !6964
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !6965
  %24 = icmp eq i32 %23, 0, !dbg !6966
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6965
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !6967
  br label %27, !dbg !6968

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !6969
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6971
  call void @llvm.dbg.value(metadata i32 %28, metadata !6929, metadata !DIExpression()), !dbg !6940
  %29 = icmp eq i32 %28, 8, !dbg !6972
  br i1 %29, label %15, label %16, !dbg !6941, !llvm.loop !6973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6977, metadata !DIExpression()), !dbg !6978
  %2 = add i32 %0, -32, !dbg !6979
  %3 = icmp ult i32 %2, 95, !dbg !6979
  %4 = zext i1 %3 to i32, !dbg !6979
  ret i32 %4, !dbg !6980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6986, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i32 %1, metadata !6987, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i8* %2, metadata !6988, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i32 %3, metadata !6989, metadata !DIExpression()), !dbg !6990
  %5 = icmp ugt i32 %3, %1, !dbg !6991
  br i1 %5, label %8, label %6, !dbg !6993

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !6994
  br label %8, !dbg !6996

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !6997
  ret i32 %9, !dbg !6998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7003, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8 %1, metadata !7004, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 %2, metadata !7005, metadata !DIExpression()), !dbg !7006
  %4 = zext i8 %1 to i32, !dbg !7007
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !7008
  ret void, !dbg !7009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !7010 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7014, metadata !DIExpression()), !dbg !7015
  %2 = shl i8 %0, 1, !dbg !7016
  %3 = icmp slt i8 %0, 0, !dbg !7017
  %4 = select i1 %3, i8 27, i8 0, !dbg !7017
  %5 = xor i8 %4, %2, !dbg !7018
  ret i8 %5, !dbg !7019
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7024, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i8* %1, metadata !7025, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 %2, metadata !7026, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i8* %0, metadata !7027, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i8 0, metadata !7029, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 0, metadata !7030, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8 undef, metadata !7029, metadata !DIExpression()), !dbg !7032
  %4 = icmp eq i32 %2, 0, !dbg !7034
  br i1 %4, label %5, label %7, !dbg !7036

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7037

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7030, metadata !DIExpression()), !dbg !7033
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7038
  %11 = load i8, i8* %10, align 1, !dbg !7038
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7040
  %13 = load i8, i8* %12, align 1, !dbg !7040
  %14 = xor i8 %13, %11, !dbg !7041
  %15 = zext i8 %14 to i32, !dbg !7041
  %16 = or i32 %9, %15, !dbg !7042
  call void @llvm.dbg.value(metadata i32 %16, metadata !7029, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7032
  %17 = add nuw i32 %8, 1, !dbg !7043
  call void @llvm.dbg.value(metadata i32 %17, metadata !7030, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8 undef, metadata !7029, metadata !DIExpression()), !dbg !7032
  %18 = icmp eq i32 %17, %2, !dbg !7034
  br i1 %18, label %5, label %7, !dbg !7036, !llvm.loop !7044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7046 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7050, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.value(metadata i8* %1, metadata !7051, metadata !DIExpression()), !dbg !7052
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7053
  ret i32 %3, !dbg !7054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7055 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7060, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i8* %1, metadata !7061, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7062, metadata !DIExpression()), !dbg !7065
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7066
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7066
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7063, metadata !DIExpression()), !dbg !7067
  %6 = icmp eq i8* %0, null, !dbg !7068
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7070
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7070
  br i1 %10, label %23, label %11, !dbg !7070

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7071
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7072
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7073
  call void @llvm.dbg.value(metadata i32 9, metadata !7064, metadata !DIExpression()), !dbg !7065
  br label %14, !dbg !7074

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7064, metadata !DIExpression()), !dbg !7065
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7076
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7079
  %16 = shl i32 %15, 2, !dbg !7080
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7081
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7082
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7083
  %18 = add nsw i32 %15, -1, !dbg !7084
  call void @llvm.dbg.value(metadata i32 %18, metadata !7064, metadata !DIExpression()), !dbg !7065
  %19 = icmp eq i32 %18, 0, !dbg !7085
  br i1 %19, label %20, label %14, !dbg !7074, !llvm.loop !7086

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7088
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7089
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7090
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7091
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7092
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7093
  br label %23, !dbg !7094

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7065
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7095
  ret i32 %24, !dbg !7095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7101, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32* %1, metadata !7102, metadata !DIExpression()), !dbg !7103
  %3 = load i32, i32* %1, align 4, !dbg !7104
  %4 = lshr i32 %3, 24, !dbg !7105
  %5 = load i8, i8* %0, align 1, !dbg !7106
  %6 = trunc i32 %4 to i8, !dbg !7106
  %7 = xor i8 %5, %6, !dbg !7106
  store i8 %7, i8* %0, align 1, !dbg !7106
  %8 = load i32, i32* %1, align 4, !dbg !7107
  %9 = lshr i32 %8, 16, !dbg !7108
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7109
  %11 = load i8, i8* %10, align 1, !dbg !7110
  %12 = trunc i32 %9 to i8, !dbg !7110
  %13 = xor i8 %11, %12, !dbg !7110
  store i8 %13, i8* %10, align 1, !dbg !7110
  %14 = load i32, i32* %1, align 4, !dbg !7111
  %15 = lshr i32 %14, 8, !dbg !7112
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7113
  %17 = load i8, i8* %16, align 1, !dbg !7114
  %18 = trunc i32 %15 to i8, !dbg !7114
  %19 = xor i8 %17, %18, !dbg !7114
  store i8 %19, i8* %16, align 1, !dbg !7114
  %20 = load i32, i32* %1, align 4, !dbg !7115
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7116
  %22 = load i8, i8* %21, align 1, !dbg !7117
  %23 = trunc i32 %20 to i8, !dbg !7117
  %24 = xor i8 %22, %23, !dbg !7117
  store i8 %24, i8* %21, align 1, !dbg !7117
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7118
  %26 = load i32, i32* %25, align 4, !dbg !7118
  %27 = lshr i32 %26, 24, !dbg !7119
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7120
  %29 = load i8, i8* %28, align 1, !dbg !7121
  %30 = trunc i32 %27 to i8, !dbg !7121
  %31 = xor i8 %29, %30, !dbg !7121
  store i8 %31, i8* %28, align 1, !dbg !7121
  %32 = load i32, i32* %25, align 4, !dbg !7122
  %33 = lshr i32 %32, 16, !dbg !7123
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7124
  %35 = load i8, i8* %34, align 1, !dbg !7125
  %36 = trunc i32 %33 to i8, !dbg !7125
  %37 = xor i8 %35, %36, !dbg !7125
  store i8 %37, i8* %34, align 1, !dbg !7125
  %38 = load i32, i32* %25, align 4, !dbg !7126
  %39 = lshr i32 %38, 8, !dbg !7127
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7128
  %41 = load i8, i8* %40, align 1, !dbg !7129
  %42 = trunc i32 %39 to i8, !dbg !7129
  %43 = xor i8 %41, %42, !dbg !7129
  store i8 %43, i8* %40, align 1, !dbg !7129
  %44 = load i32, i32* %25, align 4, !dbg !7130
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7131
  %46 = load i8, i8* %45, align 1, !dbg !7132
  %47 = trunc i32 %44 to i8, !dbg !7132
  %48 = xor i8 %46, %47, !dbg !7132
  store i8 %48, i8* %45, align 1, !dbg !7132
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7133
  %50 = load i32, i32* %49, align 4, !dbg !7133
  %51 = lshr i32 %50, 24, !dbg !7134
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7135
  %53 = load i8, i8* %52, align 1, !dbg !7136
  %54 = trunc i32 %51 to i8, !dbg !7136
  %55 = xor i8 %53, %54, !dbg !7136
  store i8 %55, i8* %52, align 1, !dbg !7136
  %56 = load i32, i32* %49, align 4, !dbg !7137
  %57 = lshr i32 %56, 16, !dbg !7138
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7139
  %59 = load i8, i8* %58, align 1, !dbg !7140
  %60 = trunc i32 %57 to i8, !dbg !7140
  %61 = xor i8 %59, %60, !dbg !7140
  store i8 %61, i8* %58, align 1, !dbg !7140
  %62 = load i32, i32* %49, align 4, !dbg !7141
  %63 = lshr i32 %62, 8, !dbg !7142
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7143
  %65 = load i8, i8* %64, align 1, !dbg !7144
  %66 = trunc i32 %63 to i8, !dbg !7144
  %67 = xor i8 %65, %66, !dbg !7144
  store i8 %67, i8* %64, align 1, !dbg !7144
  %68 = load i32, i32* %49, align 4, !dbg !7145
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7146
  %70 = load i8, i8* %69, align 1, !dbg !7147
  %71 = trunc i32 %68 to i8, !dbg !7147
  %72 = xor i8 %70, %71, !dbg !7147
  store i8 %72, i8* %69, align 1, !dbg !7147
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7148
  %74 = load i32, i32* %73, align 4, !dbg !7148
  %75 = lshr i32 %74, 24, !dbg !7149
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7150
  %77 = load i8, i8* %76, align 1, !dbg !7151
  %78 = trunc i32 %75 to i8, !dbg !7151
  %79 = xor i8 %77, %78, !dbg !7151
  store i8 %79, i8* %76, align 1, !dbg !7151
  %80 = load i32, i32* %73, align 4, !dbg !7152
  %81 = lshr i32 %80, 16, !dbg !7153
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7154
  %83 = load i8, i8* %82, align 1, !dbg !7155
  %84 = trunc i32 %81 to i8, !dbg !7155
  %85 = xor i8 %83, %84, !dbg !7155
  store i8 %85, i8* %82, align 1, !dbg !7155
  %86 = load i32, i32* %73, align 4, !dbg !7156
  %87 = lshr i32 %86, 8, !dbg !7157
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7158
  %89 = load i8, i8* %88, align 1, !dbg !7159
  %90 = trunc i32 %87 to i8, !dbg !7159
  %91 = xor i8 %89, %90, !dbg !7159
  store i8 %91, i8* %88, align 1, !dbg !7159
  %92 = load i32, i32* %73, align 4, !dbg !7160
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7161
  %94 = load i8, i8* %93, align 1, !dbg !7162
  %95 = trunc i32 %92 to i8, !dbg !7162
  %96 = xor i8 %94, %95, !dbg !7162
  store i8 %96, i8* %93, align 1, !dbg !7162
  ret void, !dbg !7163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7164 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7168, metadata !DIExpression()), !dbg !7170
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7171
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7171
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7169, metadata !DIExpression()), !dbg !7172
  %4 = load i8, i8* %0, align 1, !dbg !7173
  store i8 %4, i8* %3, align 1, !dbg !7174
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7175
  %6 = load i8, i8* %5, align 1, !dbg !7175
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7176
  store i8 %6, i8* %7, align 1, !dbg !7177
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7178
  %9 = load i8, i8* %8, align 1, !dbg !7178
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7179
  store i8 %9, i8* %10, align 1, !dbg !7180
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7181
  %12 = load i8, i8* %11, align 1, !dbg !7181
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7182
  store i8 %12, i8* %13, align 1, !dbg !7183
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7184
  %15 = load i8, i8* %14, align 1, !dbg !7184
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7185
  store i8 %15, i8* %16, align 1, !dbg !7186
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7187
  %18 = load i8, i8* %17, align 1, !dbg !7187
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7188
  store i8 %18, i8* %19, align 1, !dbg !7189
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7190
  %21 = load i8, i8* %20, align 1, !dbg !7190
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7191
  store i8 %21, i8* %22, align 1, !dbg !7192
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7193
  %24 = load i8, i8* %23, align 1, !dbg !7193
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7194
  store i8 %24, i8* %25, align 1, !dbg !7195
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7196
  %27 = load i8, i8* %26, align 1, !dbg !7196
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7197
  store i8 %27, i8* %28, align 1, !dbg !7198
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7199
  %30 = load i8, i8* %29, align 1, !dbg !7199
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7200
  store i8 %30, i8* %31, align 1, !dbg !7201
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7202
  %33 = load i8, i8* %32, align 1, !dbg !7202
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7203
  store i8 %33, i8* %34, align 1, !dbg !7204
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7205
  %36 = load i8, i8* %35, align 1, !dbg !7205
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7206
  store i8 %36, i8* %37, align 1, !dbg !7207
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7208
  %39 = load i8, i8* %38, align 1, !dbg !7208
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7209
  store i8 %39, i8* %40, align 1, !dbg !7210
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7211
  %42 = load i8, i8* %41, align 1, !dbg !7211
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7212
  store i8 %42, i8* %43, align 1, !dbg !7213
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7214
  %45 = load i8, i8* %44, align 1, !dbg !7214
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7215
  store i8 %45, i8* %46, align 1, !dbg !7216
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7217
  %48 = load i8, i8* %47, align 1, !dbg !7217
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7218
  store i8 %48, i8* %49, align 1, !dbg !7219
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7220
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7221
  ret void, !dbg !7221
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7224, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 0, metadata !7225, metadata !DIExpression()), !dbg !7226
  br label %2, !dbg !7227

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7225, metadata !DIExpression()), !dbg !7226
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7229
  %5 = load i8, i8* %4, align 1, !dbg !7229
  %6 = zext i8 %5 to i32, !dbg !7232
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7232
  %8 = load i8, i8* %7, align 1, !dbg !7232
  store i8 %8, i8* %4, align 1, !dbg !7233
  %9 = add nuw nsw i32 %3, 1, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %9, metadata !7225, metadata !DIExpression()), !dbg !7226
  %10 = icmp eq i32 %9, 16, !dbg !7235
  br i1 %10, label %11, label %2, !dbg !7227, !llvm.loop !7236

11:                                               ; preds = %2
  ret void, !dbg !7238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7239 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7241, metadata !DIExpression()), !dbg !7243
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7244
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7244
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7242, metadata !DIExpression()), !dbg !7245
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7246
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7247
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7248
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7249
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7250
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7251
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7252
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7253
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7254
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7255
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7256
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7257
  ret void, !dbg !7257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i8* %1, metadata !7263, metadata !DIExpression()), !dbg !7264
  %3 = load i8, i8* %1, align 1, !dbg !7265
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7265
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7265
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7265
  %7 = load i8, i8* %1, align 1, !dbg !7265
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7265
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7265
  %10 = load i8, i8* %1, align 1, !dbg !7265
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7265
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7266
  %13 = load i8, i8* %12, align 1, !dbg !7266
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7266
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7266
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7266
  %17 = load i8, i8* %12, align 1, !dbg !7266
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7266
  %19 = load i8, i8* %12, align 1, !dbg !7266
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7267
  %21 = load i8, i8* %20, align 1, !dbg !7267
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7267
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7267
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7267
  %25 = load i8, i8* %20, align 1, !dbg !7267
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7267
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7267
  %28 = load i8, i8* %20, align 1, !dbg !7267
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7268
  %30 = load i8, i8* %29, align 1, !dbg !7268
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7268
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7268
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7268
  %34 = load i8, i8* %29, align 1, !dbg !7268
  %35 = xor i8 %9, %6, !dbg !7268
  %36 = xor i8 %35, %11, !dbg !7267
  %37 = xor i8 %36, %16, !dbg !7267
  %38 = xor i8 %37, %18, !dbg !7266
  %39 = xor i8 %38, %19, !dbg !7266
  %40 = xor i8 %39, %24, !dbg !7265
  %41 = xor i8 %40, %27, !dbg !7265
  %42 = xor i8 %41, %28, !dbg !7269
  %43 = xor i8 %42, %33, !dbg !7270
  %44 = xor i8 %43, %34, !dbg !7271
  store i8 %44, i8* %0, align 1, !dbg !7272
  %45 = load i8, i8* %1, align 1, !dbg !7273
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7273
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7273
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7273
  %49 = load i8, i8* %1, align 1, !dbg !7273
  %50 = load i8, i8* %12, align 1, !dbg !7274
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7274
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7274
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7274
  %54 = load i8, i8* %12, align 1, !dbg !7274
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7274
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7274
  %57 = load i8, i8* %12, align 1, !dbg !7274
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7274
  %59 = load i8, i8* %20, align 1, !dbg !7275
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7275
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7275
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7275
  %63 = load i8, i8* %20, align 1, !dbg !7275
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7275
  %65 = load i8, i8* %20, align 1, !dbg !7275
  %66 = load i8, i8* %29, align 1, !dbg !7276
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7276
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7276
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7276
  %70 = load i8, i8* %29, align 1, !dbg !7276
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7276
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7276
  %73 = load i8, i8* %29, align 1, !dbg !7276
  %74 = xor i8 %49, %48, !dbg !7276
  %75 = xor i8 %74, %53, !dbg !7276
  %76 = xor i8 %75, %56, !dbg !7275
  %77 = xor i8 %76, %58, !dbg !7275
  %78 = xor i8 %77, %62, !dbg !7274
  %79 = xor i8 %78, %64, !dbg !7274
  %80 = xor i8 %79, %65, !dbg !7273
  %81 = xor i8 %80, %69, !dbg !7277
  %82 = xor i8 %81, %72, !dbg !7278
  %83 = xor i8 %82, %73, !dbg !7279
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7280
  store i8 %83, i8* %84, align 1, !dbg !7281
  %85 = load i8, i8* %1, align 1, !dbg !7282
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7282
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7282
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7282
  %89 = load i8, i8* %1, align 1, !dbg !7282
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7282
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7282
  %92 = load i8, i8* %1, align 1, !dbg !7282
  %93 = load i8, i8* %12, align 1, !dbg !7283
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7283
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7283
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7283
  %97 = load i8, i8* %12, align 1, !dbg !7283
  %98 = load i8, i8* %20, align 1, !dbg !7284
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7284
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7284
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7284
  %102 = load i8, i8* %20, align 1, !dbg !7284
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7284
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7284
  %105 = load i8, i8* %20, align 1, !dbg !7284
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7284
  %107 = load i8, i8* %29, align 1, !dbg !7285
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7285
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7285
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7285
  %111 = load i8, i8* %29, align 1, !dbg !7285
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7285
  %113 = load i8, i8* %29, align 1, !dbg !7285
  %114 = xor i8 %91, %88, !dbg !7285
  %115 = xor i8 %114, %92, !dbg !7285
  %116 = xor i8 %115, %96, !dbg !7284
  %117 = xor i8 %116, %97, !dbg !7284
  %118 = xor i8 %117, %101, !dbg !7283
  %119 = xor i8 %118, %104, !dbg !7282
  %120 = xor i8 %119, %106, !dbg !7282
  %121 = xor i8 %120, %110, !dbg !7286
  %122 = xor i8 %121, %112, !dbg !7287
  %123 = xor i8 %122, %113, !dbg !7288
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7289
  store i8 %123, i8* %124, align 1, !dbg !7290
  %125 = load i8, i8* %1, align 1, !dbg !7291
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7291
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7291
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7291
  %129 = load i8, i8* %1, align 1, !dbg !7291
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7291
  %131 = load i8, i8* %1, align 1, !dbg !7291
  %132 = load i8, i8* %12, align 1, !dbg !7292
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7292
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7292
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7292
  %136 = load i8, i8* %12, align 1, !dbg !7292
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7292
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7292
  %139 = load i8, i8* %12, align 1, !dbg !7292
  %140 = load i8, i8* %20, align 1, !dbg !7293
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7293
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7293
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7293
  %144 = load i8, i8* %20, align 1, !dbg !7293
  %145 = load i8, i8* %29, align 1, !dbg !7294
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7294
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7294
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7294
  %149 = load i8, i8* %29, align 1, !dbg !7294
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7294
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7294
  %152 = load i8, i8* %29, align 1, !dbg !7294
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7294
  %154 = xor i8 %130, %128, !dbg !7294
  %155 = xor i8 %154, %131, !dbg !7294
  %156 = xor i8 %155, %135, !dbg !7293
  %157 = xor i8 %156, %138, !dbg !7292
  %158 = xor i8 %157, %139, !dbg !7292
  %159 = xor i8 %158, %143, !dbg !7291
  %160 = xor i8 %159, %144, !dbg !7291
  %161 = xor i8 %160, %148, !dbg !7295
  %162 = xor i8 %161, %151, !dbg !7296
  %163 = xor i8 %162, %153, !dbg !7297
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7298
  store i8 %163, i8* %164, align 1, !dbg !7299
  ret void, !dbg !7300
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7301 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7305, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i8* %1, metadata !7306, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7307, metadata !DIExpression()), !dbg !7312
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7313
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7315
  br i1 %5, label %80, label %9, !dbg !7315

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7309, metadata !DIExpression()), !dbg !7311
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7316
  br label %36, !dbg !7320

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7309, metadata !DIExpression()), !dbg !7311
  %11 = shl nuw nsw i32 %10, 2, !dbg !7321
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7325
  %13 = load i8, i8* %12, align 1, !dbg !7325
  %14 = zext i8 %13 to i32, !dbg !7325
  %15 = shl nuw i32 %14, 24, !dbg !7326
  %16 = or i32 %11, 1, !dbg !7327
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7328
  %18 = load i8, i8* %17, align 1, !dbg !7328
  %19 = zext i8 %18 to i32, !dbg !7328
  %20 = shl nuw nsw i32 %19, 16, !dbg !7329
  %21 = or i32 %20, %15, !dbg !7330
  %22 = or i32 %11, 2, !dbg !7331
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7332
  %24 = load i8, i8* %23, align 1, !dbg !7332
  %25 = zext i8 %24 to i32, !dbg !7332
  %26 = shl nuw nsw i32 %25, 8, !dbg !7333
  %27 = or i32 %21, %26, !dbg !7334
  %28 = or i32 %11, 3, !dbg !7335
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7336
  %30 = load i8, i8* %29, align 1, !dbg !7336
  %31 = zext i8 %30 to i32, !dbg !7337
  %32 = or i32 %27, %31, !dbg !7338
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7339
  store i32 %32, i32* %33, align 4, !dbg !7340
  %34 = add nuw nsw i32 %10, 1, !dbg !7341
  call void @llvm.dbg.value(metadata i32 %34, metadata !7309, metadata !DIExpression()), !dbg !7311
  %35 = icmp eq i32 %34, 4, !dbg !7342
  br i1 %35, label %6, label %9, !dbg !7343, !llvm.loop !7344

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7316
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7309, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i32 %37, metadata !7310, metadata !DIExpression()), !dbg !7311
  %39 = and i32 %38, 3, !dbg !7346
  %40 = icmp eq i32 %39, 0, !dbg !7348
  br i1 %40, label %41, label %71, !dbg !7349

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7350
  %43 = lshr i32 %42, 24, !dbg !7350
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7350
  %45 = load i8, i8* %44, align 1, !dbg !7350
  %46 = zext i8 %45 to i32, !dbg !7350
  %47 = shl nuw i32 %46, 24, !dbg !7350
  %48 = lshr i32 %42, 16, !dbg !7350
  %49 = and i32 %48, 255, !dbg !7350
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7350
  %51 = load i8, i8* %50, align 1, !dbg !7350
  %52 = zext i8 %51 to i32, !dbg !7350
  %53 = shl nuw nsw i32 %52, 16, !dbg !7350
  %54 = or i32 %53, %47, !dbg !7350
  %55 = lshr i32 %42, 8, !dbg !7350
  %56 = and i32 %55, 255, !dbg !7350
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7350
  %58 = load i8, i8* %57, align 1, !dbg !7350
  %59 = zext i8 %58 to i32, !dbg !7350
  %60 = shl nuw nsw i32 %59, 8, !dbg !7350
  %61 = or i32 %54, %60, !dbg !7350
  %62 = and i32 %42, 255, !dbg !7350
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7350
  %64 = load i8, i8* %63, align 1, !dbg !7350
  %65 = zext i8 %64 to i32, !dbg !7350
  %66 = or i32 %61, %65, !dbg !7350
  %67 = lshr i32 %38, 2, !dbg !7352
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7353
  %69 = load i32, i32* %68, align 4, !dbg !7353
  %70 = xor i32 %66, %69, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %70, metadata !7310, metadata !DIExpression()), !dbg !7311
  br label %71, !dbg !7355

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7356
  call void @llvm.dbg.value(metadata i32 %72, metadata !7310, metadata !DIExpression()), !dbg !7311
  %73 = add nsw i32 %38, -4, !dbg !7357
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7358
  %75 = load i32, i32* %74, align 4, !dbg !7358
  %76 = xor i32 %75, %72, !dbg !7359
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7360
  store i32 %76, i32* %77, align 4, !dbg !7361
  %78 = add nuw nsw i32 %38, 1, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %78, metadata !7309, metadata !DIExpression()), !dbg !7311
  %79 = icmp eq i32 %78, 44, !dbg !7363
  br i1 %79, label %80, label %36, !dbg !7320, !llvm.loop !7364

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7311
  ret i32 %81, !dbg !7366
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7371, metadata !DIExpression()), !dbg !7372
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7373
  ret i32 %2, !dbg !7374
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7375 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7380, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8* %1, metadata !7381, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7382, metadata !DIExpression()), !dbg !7385
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7386
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7386
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7383, metadata !DIExpression()), !dbg !7387
  %6 = icmp eq i8* %0, null, !dbg !7388
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7390
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7390
  br i1 %10, label %23, label %11, !dbg !7390

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7391
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7392
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7393
  call void @llvm.dbg.value(metadata i32 0, metadata !7384, metadata !DIExpression()), !dbg !7385
  br label %14, !dbg !7394

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7384, metadata !DIExpression()), !dbg !7385
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7396
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7399
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7400
  %16 = add nuw nsw i32 %15, 1, !dbg !7401
  %17 = shl nuw nsw i32 %16, 2, !dbg !7402
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7403
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %16, metadata !7384, metadata !DIExpression()), !dbg !7385
  %19 = icmp eq i32 %16, 9, !dbg !7405
  br i1 %19, label %20, label %14, !dbg !7394, !llvm.loop !7406

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7408
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7409
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7410
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7411
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7412
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7413
  br label %23, !dbg !7414

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7385
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7415
  ret i32 %24, !dbg !7415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7416 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7418, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i32* %1, metadata !7419, metadata !DIExpression()), !dbg !7420
  %3 = load i32, i32* %1, align 4, !dbg !7421
  %4 = lshr i32 %3, 24, !dbg !7422
  %5 = load i8, i8* %0, align 1, !dbg !7423
  %6 = trunc i32 %4 to i8, !dbg !7423
  %7 = xor i8 %5, %6, !dbg !7423
  store i8 %7, i8* %0, align 1, !dbg !7423
  %8 = load i32, i32* %1, align 4, !dbg !7424
  %9 = lshr i32 %8, 16, !dbg !7425
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7426
  %11 = load i8, i8* %10, align 1, !dbg !7427
  %12 = trunc i32 %9 to i8, !dbg !7427
  %13 = xor i8 %11, %12, !dbg !7427
  store i8 %13, i8* %10, align 1, !dbg !7427
  %14 = load i32, i32* %1, align 4, !dbg !7428
  %15 = lshr i32 %14, 8, !dbg !7429
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7430
  %17 = load i8, i8* %16, align 1, !dbg !7431
  %18 = trunc i32 %15 to i8, !dbg !7431
  %19 = xor i8 %17, %18, !dbg !7431
  store i8 %19, i8* %16, align 1, !dbg !7431
  %20 = load i32, i32* %1, align 4, !dbg !7432
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7433
  %22 = load i8, i8* %21, align 1, !dbg !7434
  %23 = trunc i32 %20 to i8, !dbg !7434
  %24 = xor i8 %22, %23, !dbg !7434
  store i8 %24, i8* %21, align 1, !dbg !7434
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7435
  %26 = load i32, i32* %25, align 4, !dbg !7435
  %27 = lshr i32 %26, 24, !dbg !7436
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7437
  %29 = load i8, i8* %28, align 1, !dbg !7438
  %30 = trunc i32 %27 to i8, !dbg !7438
  %31 = xor i8 %29, %30, !dbg !7438
  store i8 %31, i8* %28, align 1, !dbg !7438
  %32 = load i32, i32* %25, align 4, !dbg !7439
  %33 = lshr i32 %32, 16, !dbg !7440
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7441
  %35 = load i8, i8* %34, align 1, !dbg !7442
  %36 = trunc i32 %33 to i8, !dbg !7442
  %37 = xor i8 %35, %36, !dbg !7442
  store i8 %37, i8* %34, align 1, !dbg !7442
  %38 = load i32, i32* %25, align 4, !dbg !7443
  %39 = lshr i32 %38, 8, !dbg !7444
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7445
  %41 = load i8, i8* %40, align 1, !dbg !7446
  %42 = trunc i32 %39 to i8, !dbg !7446
  %43 = xor i8 %41, %42, !dbg !7446
  store i8 %43, i8* %40, align 1, !dbg !7446
  %44 = load i32, i32* %25, align 4, !dbg !7447
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7448
  %46 = load i8, i8* %45, align 1, !dbg !7449
  %47 = trunc i32 %44 to i8, !dbg !7449
  %48 = xor i8 %46, %47, !dbg !7449
  store i8 %48, i8* %45, align 1, !dbg !7449
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7450
  %50 = load i32, i32* %49, align 4, !dbg !7450
  %51 = lshr i32 %50, 24, !dbg !7451
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7452
  %53 = load i8, i8* %52, align 1, !dbg !7453
  %54 = trunc i32 %51 to i8, !dbg !7453
  %55 = xor i8 %53, %54, !dbg !7453
  store i8 %55, i8* %52, align 1, !dbg !7453
  %56 = load i32, i32* %49, align 4, !dbg !7454
  %57 = lshr i32 %56, 16, !dbg !7455
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7456
  %59 = load i8, i8* %58, align 1, !dbg !7457
  %60 = trunc i32 %57 to i8, !dbg !7457
  %61 = xor i8 %59, %60, !dbg !7457
  store i8 %61, i8* %58, align 1, !dbg !7457
  %62 = load i32, i32* %49, align 4, !dbg !7458
  %63 = lshr i32 %62, 8, !dbg !7459
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7460
  %65 = load i8, i8* %64, align 1, !dbg !7461
  %66 = trunc i32 %63 to i8, !dbg !7461
  %67 = xor i8 %65, %66, !dbg !7461
  store i8 %67, i8* %64, align 1, !dbg !7461
  %68 = load i32, i32* %49, align 4, !dbg !7462
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7463
  %70 = load i8, i8* %69, align 1, !dbg !7464
  %71 = trunc i32 %68 to i8, !dbg !7464
  %72 = xor i8 %70, %71, !dbg !7464
  store i8 %72, i8* %69, align 1, !dbg !7464
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7465
  %74 = load i32, i32* %73, align 4, !dbg !7465
  %75 = lshr i32 %74, 24, !dbg !7466
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7467
  %77 = load i8, i8* %76, align 1, !dbg !7468
  %78 = trunc i32 %75 to i8, !dbg !7468
  %79 = xor i8 %77, %78, !dbg !7468
  store i8 %79, i8* %76, align 1, !dbg !7468
  %80 = load i32, i32* %73, align 4, !dbg !7469
  %81 = lshr i32 %80, 16, !dbg !7470
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7471
  %83 = load i8, i8* %82, align 1, !dbg !7472
  %84 = trunc i32 %81 to i8, !dbg !7472
  %85 = xor i8 %83, %84, !dbg !7472
  store i8 %85, i8* %82, align 1, !dbg !7472
  %86 = load i32, i32* %73, align 4, !dbg !7473
  %87 = lshr i32 %86, 8, !dbg !7474
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7475
  %89 = load i8, i8* %88, align 1, !dbg !7476
  %90 = trunc i32 %87 to i8, !dbg !7476
  %91 = xor i8 %89, %90, !dbg !7476
  store i8 %91, i8* %88, align 1, !dbg !7476
  %92 = load i32, i32* %73, align 4, !dbg !7477
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7478
  %94 = load i8, i8* %93, align 1, !dbg !7479
  %95 = trunc i32 %92 to i8, !dbg !7479
  %96 = xor i8 %94, %95, !dbg !7479
  store i8 %96, i8* %93, align 1, !dbg !7479
  ret void, !dbg !7480
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7481 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7483, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i32 0, metadata !7484, metadata !DIExpression()), !dbg !7485
  br label %2, !dbg !7486

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7484, metadata !DIExpression()), !dbg !7485
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7488
  %5 = load i8, i8* %4, align 1, !dbg !7488
  %6 = zext i8 %5 to i32, !dbg !7491
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7491
  %8 = load i8, i8* %7, align 1, !dbg !7491
  store i8 %8, i8* %4, align 1, !dbg !7492
  %9 = add nuw nsw i32 %3, 1, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %9, metadata !7484, metadata !DIExpression()), !dbg !7485
  %10 = icmp eq i32 %9, 16, !dbg !7494
  br i1 %10, label %11, label %2, !dbg !7486, !llvm.loop !7495

11:                                               ; preds = %2
  ret void, !dbg !7497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7498 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7500, metadata !DIExpression()), !dbg !7502
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7503
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7503
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7501, metadata !DIExpression()), !dbg !7504
  %4 = load i8, i8* %0, align 1, !dbg !7505
  store i8 %4, i8* %3, align 1, !dbg !7506
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7507
  %6 = load i8, i8* %5, align 1, !dbg !7507
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7508
  store i8 %6, i8* %7, align 1, !dbg !7509
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7510
  %9 = load i8, i8* %8, align 1, !dbg !7510
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7511
  store i8 %9, i8* %10, align 1, !dbg !7512
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7513
  %12 = load i8, i8* %11, align 1, !dbg !7513
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7514
  store i8 %12, i8* %13, align 1, !dbg !7515
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7516
  %15 = load i8, i8* %14, align 1, !dbg !7516
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7517
  store i8 %15, i8* %16, align 1, !dbg !7518
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7519
  %18 = load i8, i8* %17, align 1, !dbg !7519
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7520
  store i8 %18, i8* %19, align 1, !dbg !7521
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7522
  %21 = load i8, i8* %20, align 1, !dbg !7522
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7523
  store i8 %21, i8* %22, align 1, !dbg !7524
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7525
  %24 = load i8, i8* %23, align 1, !dbg !7525
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7526
  store i8 %24, i8* %25, align 1, !dbg !7527
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7528
  %27 = load i8, i8* %26, align 1, !dbg !7528
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7529
  store i8 %27, i8* %28, align 1, !dbg !7530
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7531
  %30 = load i8, i8* %29, align 1, !dbg !7531
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7532
  store i8 %30, i8* %31, align 1, !dbg !7533
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7534
  %33 = load i8, i8* %32, align 1, !dbg !7534
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7535
  store i8 %33, i8* %34, align 1, !dbg !7536
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7537
  %36 = load i8, i8* %35, align 1, !dbg !7537
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7538
  store i8 %36, i8* %37, align 1, !dbg !7539
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7540
  %39 = load i8, i8* %38, align 1, !dbg !7540
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7541
  store i8 %39, i8* %40, align 1, !dbg !7542
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7543
  %42 = load i8, i8* %41, align 1, !dbg !7543
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7544
  store i8 %42, i8* %43, align 1, !dbg !7545
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7546
  %45 = load i8, i8* %44, align 1, !dbg !7546
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7547
  store i8 %45, i8* %46, align 1, !dbg !7548
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7549
  %48 = load i8, i8* %47, align 1, !dbg !7549
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7550
  store i8 %48, i8* %49, align 1, !dbg !7551
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7552
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7553
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7554 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7556, metadata !DIExpression()), !dbg !7558
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7559
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7559
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7557, metadata !DIExpression()), !dbg !7560
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7561
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7562
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7563
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7564
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7565
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7566
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7567
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7568
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7569
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7570
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7571
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7572
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7575, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i8* %1, metadata !7576, metadata !DIExpression()), !dbg !7577
  %3 = load i8, i8* %1, align 1, !dbg !7578
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7579
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7580
  %6 = load i8, i8* %5, align 1, !dbg !7580
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7580
  %8 = load i8, i8* %5, align 1, !dbg !7580
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7581
  %10 = load i8, i8* %9, align 1, !dbg !7581
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7582
  %12 = load i8, i8* %11, align 1, !dbg !7582
  %13 = xor i8 %7, %4, !dbg !7580
  %14 = xor i8 %13, %8, !dbg !7583
  %15 = xor i8 %14, %10, !dbg !7584
  %16 = xor i8 %15, %12, !dbg !7585
  store i8 %16, i8* %0, align 1, !dbg !7586
  %17 = load i8, i8* %1, align 1, !dbg !7587
  %18 = load i8, i8* %5, align 1, !dbg !7588
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7589
  %20 = load i8, i8* %9, align 1, !dbg !7590
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7590
  %22 = load i8, i8* %9, align 1, !dbg !7590
  %23 = load i8, i8* %11, align 1, !dbg !7591
  %24 = xor i8 %19, %17, !dbg !7590
  %25 = xor i8 %24, %21, !dbg !7592
  %26 = xor i8 %25, %22, !dbg !7593
  %27 = xor i8 %26, %23, !dbg !7594
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7595
  store i8 %27, i8* %28, align 1, !dbg !7596
  %29 = load i8, i8* %1, align 1, !dbg !7597
  %30 = load i8, i8* %5, align 1, !dbg !7598
  %31 = load i8, i8* %9, align 1, !dbg !7599
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7600
  %33 = load i8, i8* %11, align 1, !dbg !7601
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7601
  %35 = load i8, i8* %11, align 1, !dbg !7601
  %36 = xor i8 %30, %29, !dbg !7601
  %37 = xor i8 %36, %32, !dbg !7602
  %38 = xor i8 %37, %34, !dbg !7603
  %39 = xor i8 %38, %35, !dbg !7604
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7605
  store i8 %39, i8* %40, align 1, !dbg !7606
  %41 = load i8, i8* %1, align 1, !dbg !7607
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7607
  %43 = load i8, i8* %1, align 1, !dbg !7607
  %44 = xor i8 %43, %42, !dbg !7607
  %45 = load i8, i8* %5, align 1, !dbg !7608
  %46 = xor i8 %44, %45, !dbg !7609
  %47 = load i8, i8* %9, align 1, !dbg !7610
  %48 = xor i8 %46, %47, !dbg !7611
  %49 = load i8, i8* %11, align 1, !dbg !7612
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7613
  %51 = xor i8 %48, %50, !dbg !7614
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7615
  store i8 %51, i8* %52, align 1, !dbg !7616
  ret void, !dbg !7617
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7618 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7624, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %1, metadata !7625, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %2, metadata !7626, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %3, metadata !7627, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %4, metadata !7628, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7629, metadata !DIExpression()), !dbg !7633
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7634
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7634
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7630, metadata !DIExpression()), !dbg !7635
  %9 = icmp eq i8* %0, null, !dbg !7636
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7638
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7638
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7638
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7638
  %18 = xor i1 %17, true, !dbg !7638
  %19 = or i32 %3, %1, !dbg !7638
  %20 = and i32 %19, 15, !dbg !7638
  %21 = icmp eq i32 %20, 0, !dbg !7638
  %22 = and i1 %21, %18, !dbg !7638
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7638
  br i1 %25, label %26, label %52, !dbg !7638

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7639
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7640
  call void @llvm.dbg.value(metadata i8* %0, metadata !7624, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7633
  call void @llvm.dbg.value(metadata i32 0, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 0, metadata !7631, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %2, metadata !7626, metadata !DIExpression()), !dbg !7633
  br i1 %14, label %52, label %29, !dbg !7641

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7643
  call void @llvm.dbg.value(metadata i8* %30, metadata !7624, metadata !DIExpression()), !dbg !7633
  br label %31, !dbg !7641

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %33, metadata !7631, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %34, metadata !7624, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %35, metadata !7626, metadata !DIExpression()), !dbg !7633
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7644
  call void @llvm.dbg.value(metadata i8* %36, metadata !7626, metadata !DIExpression()), !dbg !7633
  %37 = load i8, i8* %35, align 1, !dbg !7647
  %38 = add i32 %32, 1, !dbg !7648
  call void @llvm.dbg.value(metadata i32 %38, metadata !7632, metadata !DIExpression()), !dbg !7633
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7649
  %40 = load i8, i8* %39, align 1, !dbg !7650
  %41 = xor i8 %40, %37, !dbg !7650
  store i8 %41, i8* %39, align 1, !dbg !7650
  %42 = icmp eq i32 %38, 16, !dbg !7651
  br i1 %42, label %43, label %47, !dbg !7653

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7654
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7656
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7657
  call void @llvm.dbg.value(metadata i8* %46, metadata !7624, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 0, metadata !7632, metadata !DIExpression()), !dbg !7633
  br label %47, !dbg !7658

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7633
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7659
  call void @llvm.dbg.value(metadata i32 %49, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %48, metadata !7624, metadata !DIExpression()), !dbg !7633
  %50 = add nuw i32 %33, 1, !dbg !7660
  call void @llvm.dbg.value(metadata i32 %50, metadata !7631, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %36, metadata !7626, metadata !DIExpression()), !dbg !7633
  %51 = icmp eq i32 %50, %3, !dbg !7661
  br i1 %51, label %52, label %31, !dbg !7641, !llvm.loop !7662

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7633
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7664
  ret i32 %53, !dbg !7664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7665 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7667, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 %1, metadata !7668, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %2, metadata !7669, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 %3, metadata !7670, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %4, metadata !7671, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7672, metadata !DIExpression()), !dbg !7677
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7678
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7678
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7673, metadata !DIExpression()), !dbg !7679
  %9 = icmp eq i8* %0, null, !dbg !7680
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7682
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7682
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7682
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7682
  %18 = xor i1 %17, true, !dbg !7682
  %19 = or i32 %3, %1, !dbg !7682
  %20 = and i32 %19, 15, !dbg !7682
  %21 = icmp eq i32 %20, 0, !dbg !7682
  %22 = and i1 %21, %18, !dbg !7682
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7682
  %25 = xor i1 %24, true, !dbg !7682
  %26 = or i1 %14, %25, !dbg !7682
  %27 = zext i1 %24 to i32, !dbg !7682
  br i1 %26, label %51, label %28, !dbg !7682

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7676, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 %30, metadata !7675, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %31, metadata !7674, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %32, metadata !7667, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %33, metadata !7669, metadata !DIExpression()), !dbg !7677
  %34 = and i32 %30, 15, !dbg !7683
  %35 = icmp eq i32 %34, 0, !dbg !7688
  br i1 %35, label %36, label %39, !dbg !7689

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7690
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %38, metadata !7669, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i32 0, metadata !7676, metadata !DIExpression()), !dbg !7677
  br label %39, !dbg !7693

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7694
  call void @llvm.dbg.value(metadata i32 %41, metadata !7676, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata i8* %40, metadata !7669, metadata !DIExpression()), !dbg !7677
  %42 = add i32 %41, 1, !dbg !7695
  call void @llvm.dbg.value(metadata i32 %42, metadata !7676, metadata !DIExpression()), !dbg !7677
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7696
  %44 = load i8, i8* %43, align 1, !dbg !7696
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7697
  call void @llvm.dbg.value(metadata i8* %45, metadata !7674, metadata !DIExpression()), !dbg !7677
  %46 = load i8, i8* %31, align 1, !dbg !7698
  %47 = xor i8 %46, %44, !dbg !7699
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7700
  call void @llvm.dbg.value(metadata i8* %48, metadata !7667, metadata !DIExpression()), !dbg !7677
  store i8 %47, i8* %32, align 1, !dbg !7701
  %49 = add nuw i32 %30, 1, !dbg !7702
  call void @llvm.dbg.value(metadata i32 %49, metadata !7675, metadata !DIExpression()), !dbg !7677
  %50 = icmp eq i32 %49, %3, !dbg !7703
  br i1 %50, label %51, label %28, !dbg !7704, !llvm.loop !7705

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7677
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7707
  ret i32 %52, !dbg !7707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7708 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7714, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i32 %1, metadata !7715, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %2, metadata !7716, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i32 %3, metadata !7717, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %4, metadata !7718, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7719, metadata !DIExpression()), !dbg !7724
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7725
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7725
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7720, metadata !DIExpression()), !dbg !7726
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7727
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7727
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7721, metadata !DIExpression()), !dbg !7728
  %11 = icmp eq i8* %0, null, !dbg !7729
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7731
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7731
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7731
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7731
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7731
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7731
  br i1 %23, label %86, label %24, !dbg !7731

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7732
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7733
  %27 = load i8, i8* %26, align 1, !dbg !7733
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7734
  %29 = load i8, i8* %28, align 1, !dbg !7734
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7735
  %31 = load i8, i8* %30, align 1, !dbg !7735
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7736
  %33 = load i8, i8* %32, align 1, !dbg !7736
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  call void @llvm.dbg.value(metadata i32 0, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %0, metadata !7714, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %2, metadata !7716, metadata !DIExpression()), !dbg !7724
  %34 = zext i8 %29 to i32, !dbg !7734
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %35 = shl nuw nsw i32 %34, 16, !dbg !7737
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %36 = zext i8 %27 to i32, !dbg !7733
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %37 = shl nuw i32 %36, 24, !dbg !7738
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %38 = or i32 %35, %37, !dbg !7739
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %39 = zext i8 %31 to i32, !dbg !7735
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %40 = shl nuw nsw i32 %39, 8, !dbg !7740
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %41 = or i32 %38, %40, !dbg !7741
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %42 = zext i8 %33 to i32, !dbg !7742
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %43 = or i32 %41, %42, !dbg !7743
  call void @llvm.dbg.value(metadata i32 %43, metadata !7722, metadata !DIExpression()), !dbg !7724
  br label %44, !dbg !7744

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i32 %50, metadata !7722, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %51, metadata !7714, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %52, metadata !7716, metadata !DIExpression()), !dbg !7724
  %53 = and i32 %49, 15, !dbg !7746
  %54 = icmp eq i32 %53, 0, !dbg !7750
  br i1 %54, label %55, label %67, !dbg !7751

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7752
  %57 = icmp eq i32 %56, 0, !dbg !7752
  br i1 %57, label %86, label %58, !dbg !7755

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7756
  call void @llvm.dbg.value(metadata i32 %59, metadata !7722, metadata !DIExpression()), !dbg !7724
  %60 = lshr i32 %59, 24, !dbg !7758
  %61 = trunc i32 %60 to i8, !dbg !7759
  store i8 %61, i8* %26, align 1, !dbg !7760
  %62 = lshr i32 %59, 16, !dbg !7761
  %63 = trunc i32 %62 to i8, !dbg !7762
  store i8 %63, i8* %28, align 1, !dbg !7763
  %64 = lshr i32 %59, 8, !dbg !7764
  %65 = trunc i32 %64 to i8, !dbg !7765
  store i8 %65, i8* %30, align 1, !dbg !7766
  %66 = trunc i32 %59 to i8, !dbg !7767
  store i8 %66, i8* %32, align 1, !dbg !7768
  br label %67, !dbg !7769

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7724
  call void @llvm.dbg.value(metadata i32 %72, metadata !7722, metadata !DIExpression()), !dbg !7724
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7770
  %74 = load i8, i8* %73, align 1, !dbg !7770
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7771
  call void @llvm.dbg.value(metadata i8* %75, metadata !7716, metadata !DIExpression()), !dbg !7724
  %76 = load i8, i8* %52, align 1, !dbg !7772
  %77 = xor i8 %76, %74, !dbg !7773
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7774
  call void @llvm.dbg.value(metadata i8* %78, metadata !7714, metadata !DIExpression()), !dbg !7724
  store i8 %77, i8* %51, align 1, !dbg !7775
  %79 = add nuw i32 %49, 1, !dbg !7776
  call void @llvm.dbg.value(metadata i32 %79, metadata !7723, metadata !DIExpression()), !dbg !7724
  %80 = icmp eq i32 %79, %3, !dbg !7777
  br i1 %80, label %81, label %44, !dbg !7744, !llvm.loop !7778

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7780
  store i8 %71, i8* %82, align 1, !dbg !7781
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7782
  store i8 %70, i8* %83, align 1, !dbg !7783
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7784
  store i8 %69, i8* %84, align 1, !dbg !7785
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7786
  store i8 %68, i8* %85, align 1, !dbg !7787
  br label %86, !dbg !7788

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7724
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7789
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7789
  ret i32 %87, !dbg !7789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7790 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7795, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7796, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i8* %2, metadata !7797, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32 %3, metadata !7798, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32 %4, metadata !7799, metadata !DIExpression()), !dbg !7800
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7801
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7803
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7803
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7803
  br i1 %12, label %23, label %13, !dbg !7803

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7804
  %15 = icmp ult i32 %14, 13, !dbg !7804
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7804
  br i1 %18, label %19, label %23, !dbg !7804

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7807
  store i32 %4, i32* %20, align 4, !dbg !7808
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7809
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7810
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7811
  store i8* %2, i8** %22, align 4, !dbg !7812
  br label %23, !dbg !7813

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7800
  ret i32 %24, !dbg !7814
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7815 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7819, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i32 %1, metadata !7820, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %2, metadata !7821, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i32 %3, metadata !7822, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %4, metadata !7823, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i32 %5, metadata !7824, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7825, metadata !DIExpression()), !dbg !7829
  %10 = icmp eq i8* %0, null, !dbg !7830
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7832
  br i1 %12, label %85, label %13, !dbg !7832

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7833
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7834
  br i1 %16, label %85, label %17, !dbg !7834

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7835
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7836
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7836
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7836
  br i1 %24, label %85, label %25, !dbg !7836

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7837
  %27 = load i32, i32* %26, align 4, !dbg !7837
  %28 = add i32 %27, %5, !dbg !7838
  %29 = icmp ugt i32 %28, %1, !dbg !7839
  br i1 %29, label %85, label %30, !dbg !7840

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7841
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7841
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7826, metadata !DIExpression()), !dbg !7842
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7843
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7843
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7827, metadata !DIExpression()), !dbg !7844
  %33 = select i1 %18, i32 64, i32 0, !dbg !7845
  %34 = shl i32 %27, 2, !dbg !7846
  %35 = add i32 %34, 248, !dbg !7846
  %36 = and i32 %35, 248, !dbg !7846
  %37 = or i32 %36, %33, !dbg !7847
  %38 = trunc i32 %37 to i8, !dbg !7848
  %39 = or i8 %38, 1, !dbg !7848
  store i8 %39, i8* %31, align 1, !dbg !7849
  call void @llvm.dbg.value(metadata i32 1, metadata !7828, metadata !DIExpression()), !dbg !7829
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7828, metadata !DIExpression()), !dbg !7829
  br label %42, !dbg !7850

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7828, metadata !DIExpression()), !dbg !7829
  %44 = add nsw i32 %43, -1, !dbg !7852
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7855
  %46 = load i8, i8* %45, align 1, !dbg !7855
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7856
  store i8 %46, i8* %47, align 1, !dbg !7857
  %48 = add nuw nsw i32 %43, 1, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %48, metadata !7828, metadata !DIExpression()), !dbg !7829
  %49 = icmp eq i32 %48, 14, !dbg !7859
  br i1 %49, label %50, label %42, !dbg !7850, !llvm.loop !7860

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7862
  %52 = trunc i32 %51 to i8, !dbg !7863
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7864
  store i8 %52, i8* %53, align 1, !dbg !7865
  %54 = trunc i32 %5 to i8, !dbg !7866
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7867
  store i8 %54, i8* %55, align 1, !dbg !7868
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7869
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7869
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !7870
  br i1 %18, label %59, label %61, !dbg !7871

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7872
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !7875
  br label %61, !dbg !7876

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7877

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7878
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !7881
  br label %64, !dbg !7882

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7883
  store i8 0, i8* %55, align 1, !dbg !7884
  store i8 0, i8* %53, align 1, !dbg !7885
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7886
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !7887
  store i8 0, i8* %55, align 1, !dbg !7888
  store i8 0, i8* %53, align 1, !dbg !7889
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7890
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !7891
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7819, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7829
  call void @llvm.dbg.value(metadata i32 0, metadata !7828, metadata !DIExpression()), !dbg !7829
  %68 = load i32, i32* %26, align 4, !dbg !7892
  %69 = icmp eq i32 %68, 0, !dbg !7895
  br i1 %69, label %84, label %70, !dbg !7896

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7897
  call void @llvm.dbg.value(metadata i8* %71, metadata !7819, metadata !DIExpression()), !dbg !7829
  br label %72, !dbg !7896

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7828, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.value(metadata i8* %74, metadata !7819, metadata !DIExpression()), !dbg !7829
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7898
  %76 = load i8, i8* %75, align 1, !dbg !7898
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7900
  %78 = load i8, i8* %77, align 1, !dbg !7900
  %79 = xor i8 %78, %76, !dbg !7901
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7902
  call void @llvm.dbg.value(metadata i8* %80, metadata !7819, metadata !DIExpression()), !dbg !7829
  store i8 %79, i8* %74, align 1, !dbg !7903
  %81 = add nuw i32 %73, 1, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %81, metadata !7828, metadata !DIExpression()), !dbg !7829
  %82 = load i32, i32* %26, align 4, !dbg !7892
  %83 = icmp ult i32 %81, %82, !dbg !7895
  br i1 %83, label %72, label %84, !dbg !7896, !llvm.loop !7905

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7907
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7907
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7829
  ret i32 %86, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7912, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %1, metadata !7913, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %2, metadata !7914, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %3, metadata !7915, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7916, metadata !DIExpression()), !dbg !7918
  %6 = icmp eq i32 %3, 0, !dbg !7919
  br i1 %6, label %17, label %7, !dbg !7921

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7922
  %9 = load i8, i8* %0, align 1, !dbg !7924
  %10 = trunc i32 %8 to i8, !dbg !7924
  %11 = xor i8 %9, %10, !dbg !7924
  store i8 %11, i8* %0, align 1, !dbg !7924
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7925
  %13 = load i8, i8* %12, align 1, !dbg !7926
  %14 = trunc i32 %2 to i8, !dbg !7926
  %15 = xor i8 %13, %14, !dbg !7926
  store i8 %15, i8* %12, align 1, !dbg !7926
  %16 = add i32 %2, 2, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %16, metadata !7914, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 2, metadata !7917, metadata !DIExpression()), !dbg !7918
  br label %17, !dbg !7928

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7929
  call void @llvm.dbg.value(metadata i32 %19, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %18, metadata !7914, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %1, metadata !7913, metadata !DIExpression()), !dbg !7918
  %20 = icmp ult i32 %19, %18, !dbg !7930
  br i1 %20, label %21, label %39, !dbg !7931

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %23, metadata !7913, metadata !DIExpression()), !dbg !7918
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7932
  call void @llvm.dbg.value(metadata i8* %24, metadata !7913, metadata !DIExpression()), !dbg !7918
  %25 = load i8, i8* %23, align 1, !dbg !7934
  %26 = add i32 %22, 1, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %26, metadata !7917, metadata !DIExpression()), !dbg !7918
  %27 = and i32 %22, 15, !dbg !7936
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !7937
  %29 = load i8, i8* %28, align 1, !dbg !7938
  %30 = xor i8 %29, %25, !dbg !7938
  store i8 %30, i8* %28, align 1, !dbg !7938
  %31 = and i32 %26, 15, !dbg !7939
  %32 = icmp eq i32 %31, 0, !dbg !7941
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !7942
  br i1 %34, label %35, label %37, !dbg !7942

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !7943
  br label %37, !dbg !7945

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %24, metadata !7913, metadata !DIExpression()), !dbg !7918
  %38 = icmp eq i32 %26, %18, !dbg !7930
  br i1 %38, label %39, label %21, !dbg !7931, !llvm.loop !7946

39:                                               ; preds = %37, %17
  ret void, !dbg !7948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !7949 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %1, metadata !7955, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %2, metadata !7956, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %3, metadata !7957, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %4, metadata !7958, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7959, metadata !DIExpression()), !dbg !7964
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7965
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7965
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7960, metadata !DIExpression()), !dbg !7966
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7967
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7967
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7961, metadata !DIExpression()), !dbg !7968
  %11 = icmp eq i8* %0, null, !dbg !7969
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7971
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7971
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7971
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7971
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7971
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7971
  br i1 %23, label %63, label %24, !dbg !7971

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7972
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7973
  %27 = load i8, i8* %26, align 1, !dbg !7973
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7974
  %29 = load i8, i8* %28, align 1, !dbg !7974
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !7962, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7964
  call void @llvm.dbg.value(metadata i32 0, metadata !7963, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %2, metadata !7956, metadata !DIExpression()), !dbg !7964
  %30 = zext i8 %27 to i16, !dbg !7973
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !7962, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7964
  %31 = shl nuw i16 %30, 8, !dbg !7975
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !7962, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7964
  %32 = zext i8 %29 to i16, !dbg !7976
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !7962, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7964
  %33 = or i16 %31, %32, !dbg !7977
  call void @llvm.dbg.value(metadata i16 %33, metadata !7962, metadata !DIExpression()), !dbg !7964
  br label %34, !dbg !7978

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7963, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i16 %36, metadata !7962, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %37, metadata !7954, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %38, metadata !7956, metadata !DIExpression()), !dbg !7964
  %39 = and i32 %35, 15, !dbg !7980
  %40 = icmp eq i32 %39, 0, !dbg !7984
  br i1 %40, label %41, label %48, !dbg !7985

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !7986
  call void @llvm.dbg.value(metadata i16 %42, metadata !7962, metadata !DIExpression()), !dbg !7964
  %43 = lshr i16 %42, 8, !dbg !7988
  %44 = trunc i16 %43 to i8, !dbg !7989
  store i8 %44, i8* %26, align 1, !dbg !7990
  %45 = trunc i16 %42 to i8, !dbg !7991
  store i8 %45, i8* %28, align 1, !dbg !7992
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7993
  %47 = icmp eq i32 %46, 0, !dbg !7993
  br i1 %47, label %63, label %48, !dbg !7995

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !7964
  call void @llvm.dbg.value(metadata i16 %49, metadata !7962, metadata !DIExpression()), !dbg !7964
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !7996
  %51 = load i8, i8* %50, align 1, !dbg !7996
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !7997
  call void @llvm.dbg.value(metadata i8* %52, metadata !7956, metadata !DIExpression()), !dbg !7964
  %53 = load i8, i8* %38, align 1, !dbg !7998
  %54 = xor i8 %53, %51, !dbg !7999
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8000
  call void @llvm.dbg.value(metadata i8* %55, metadata !7954, metadata !DIExpression()), !dbg !7964
  store i8 %54, i8* %37, align 1, !dbg !8001
  %56 = add nuw i32 %35, 1, !dbg !8002
  call void @llvm.dbg.value(metadata i32 %56, metadata !7963, metadata !DIExpression()), !dbg !7964
  %57 = icmp eq i32 %56, %3, !dbg !8003
  br i1 %57, label %58, label %34, !dbg !7978, !llvm.loop !8004

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !8006
  %60 = load i8, i8* %28, align 1, !dbg !8007
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !8008
  store i8 %59, i8* %61, align 1, !dbg !8009
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !8010
  store i8 %60, i8* %62, align 1, !dbg !8011
  br label %63, !dbg !8012

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8013
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8013
  ret void, !dbg !8013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !8014 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8016, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %1, metadata !8017, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %2, metadata !8018, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %3, metadata !8019, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %4, metadata !8020, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %5, metadata !8021, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !8022, metadata !DIExpression()), !dbg !8026
  %10 = icmp eq i8* %0, null, !dbg !8027
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8029
  br i1 %12, label %106, label %13, !dbg !8029

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8030
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8031
  br i1 %16, label %106, label %17, !dbg !8031

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8032
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8033
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8033
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8033
  br i1 %24, label %106, label %25, !dbg !8033

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8034
  %27 = load i32, i32* %26, align 4, !dbg !8034
  %28 = sub i32 %5, %27, !dbg !8035
  %29 = icmp ugt i32 %28, %1, !dbg !8036
  br i1 %29, label %106, label %30, !dbg !8037

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8038
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8038
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8023, metadata !DIExpression()), !dbg !8039
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8040
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8040
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !8024, metadata !DIExpression()), !dbg !8041
  store i8 1, i8* %31, align 1, !dbg !8042
  call void @llvm.dbg.value(metadata i32 1, metadata !8025, metadata !DIExpression()), !dbg !8026
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8025, metadata !DIExpression()), !dbg !8026
  br label %35, !dbg !8043

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !8025, metadata !DIExpression()), !dbg !8026
  %37 = add nsw i32 %36, -1, !dbg !8045
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8048
  %39 = load i8, i8* %38, align 1, !dbg !8048
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8049
  store i8 %39, i8* %40, align 1, !dbg !8050
  %41 = add nuw nsw i32 %36, 1, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %41, metadata !8025, metadata !DIExpression()), !dbg !8026
  %42 = icmp eq i32 %41, 14, !dbg !8052
  br i1 %42, label %43, label %35, !dbg !8043, !llvm.loop !8053

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8055
  store i8 0, i8* %44, align 1, !dbg !8056
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8057
  store i8 0, i8* %45, align 1, !dbg !8058
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8059
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8059
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8060
  store i8 0, i8* %44, align 1, !dbg !8061
  store i8 0, i8* %45, align 1, !dbg !8062
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8063
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8064
  call void @llvm.dbg.value(metadata i32 0, metadata !8025, metadata !DIExpression()), !dbg !8026
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8025, metadata !DIExpression()), !dbg !8026
  %51 = icmp eq i32 %50, 0, !dbg !8065
  br i1 %51, label %66, label %52, !dbg !8068

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8068

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !8025, metadata !DIExpression()), !dbg !8026
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8069
  %59 = load i8, i8* %58, align 1, !dbg !8071
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8072
  %61 = load i8, i8* %60, align 1, !dbg !8072
  %62 = xor i8 %61, %59, !dbg !8073
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8074
  store i8 %62, i8* %63, align 1, !dbg !8075
  %64 = add nuw i32 %57, 1, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %64, metadata !8025, metadata !DIExpression()), !dbg !8026
  %65 = icmp eq i32 %64, %50, !dbg !8065
  br i1 %65, label %66, label %56, !dbg !8068, !llvm.loop !8077

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8079
  %68 = shl i32 %50, 2, !dbg !8080
  %69 = add i32 %68, 248, !dbg !8080
  %70 = and i32 %69, 248, !dbg !8080
  %71 = or i32 %70, %67, !dbg !8081
  %72 = trunc i32 %71 to i8, !dbg !8082
  %73 = or i8 %72, 1, !dbg !8082
  store i8 %73, i8* %31, align 1, !dbg !8083
  call void @llvm.dbg.value(metadata i32 1, metadata !8025, metadata !DIExpression()), !dbg !8026
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8084

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !8025, metadata !DIExpression()), !dbg !8026
  %77 = add nsw i32 %76, -1, !dbg !8086
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8089
  %79 = load i8, i8* %78, align 1, !dbg !8089
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8090
  store i8 %79, i8* %80, align 1, !dbg !8091
  %81 = add nuw nsw i32 %76, 1, !dbg !8092
  call void @llvm.dbg.value(metadata i32 %81, metadata !8025, metadata !DIExpression()), !dbg !8026
  %82 = icmp eq i32 %81, 14, !dbg !8093
  br i1 %82, label %83, label %75, !dbg !8084, !llvm.loop !8094

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8096
  %85 = lshr i32 %84, 8, !dbg !8097
  %86 = trunc i32 %85 to i8, !dbg !8098
  store i8 %86, i8* %45, align 1, !dbg !8099
  %87 = trunc i32 %84 to i8, !dbg !8100
  store i8 %87, i8* %44, align 1, !dbg !8101
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8102
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8103
  br i1 %18, label %90, label %92, !dbg !8104

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8105
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8108
  br label %92, !dbg !8109

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8110

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8111
  %95 = sub i32 %5, %94, !dbg !8114
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8115
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8116
  br label %97, !dbg !8117

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8118
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8120
  %100 = icmp eq i32 %99, 0, !dbg !8121
  br i1 %100, label %104, label %101, !dbg !8122

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8123
  %103 = sub i32 %5, %102, !dbg !8125
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8126
  br label %104, !dbg !8127

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8129
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8026
  ret i32 %107, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8179, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8180, metadata !DIExpression()), !dbg !8181
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8182
  br i1 %3, label %5, label %4, !dbg !8184

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8185
  br label %5, !dbg !8187

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8188
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8194, metadata !DIExpression()), !dbg !8195
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8196
  %3 = load i32, i32* %2, align 4, !dbg !8196
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8196
  %5 = load i32, i32* %4, align 4, !dbg !8196
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8196
  %7 = load i32, i32* %6, align 4, !dbg !8196
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8196
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8201
  %9 = load i32, i32* %8, align 4, !dbg !8201
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8201
  %11 = load i32, i32* %10, align 4, !dbg !8201
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8201
  %13 = load i32, i32* %12, align 4, !dbg !8201
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8201
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8206
  %15 = load i32, i32* %14, align 4, !dbg !8206
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8206
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8211
  %17 = load i32, i32* %16, align 4, !dbg !8211
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8211
  ret void, !dbg !8216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8217 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8234, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8235, metadata !DIExpression()), !dbg !8237
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8238
  %4 = load i32, i32* %3, align 4, !dbg !8238
  call void @llvm.dbg.value(metadata i32 %4, metadata !8236, metadata !DIExpression()), !dbg !8237
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8239
  ret void, !dbg !8240
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8241 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8245, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i8* %0, metadata !8246, metadata !DIExpression()), !dbg !8248
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8249
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8249
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8247, metadata !DIExpression()), !dbg !8250
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8250
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8251
  %5 = bitcast i8* %4 to i32*, !dbg !8251
  %6 = load i32, i32* %5, align 4, !dbg !8251
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8252
  store i32 %6, i32* %7, align 4, !dbg !8253
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8254
  unreachable, !dbg !8255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8259, metadata !DIExpression()), !dbg !8260
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8261
  ret void, !dbg !8262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8267, metadata !DIExpression()), !dbg !8268
  %2 = icmp sgt i32 %0, -1, !dbg !8269
  br i1 %2, label %3, label %8, !dbg !8271

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8272, !srcloc !8274
  %4 = and i32 %0, 31, !dbg !8275
  %5 = shl nuw i32 1, %4, !dbg !8276
  %6 = lshr i32 %0, 5, !dbg !8277
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8278
  store volatile i32 %5, i32* %7, align 4, !dbg !8279
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8280, !srcloc !8281
  br label %8, !dbg !8282

8:                                                ; preds = %3, %1
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8286, metadata !DIExpression()), !dbg !8287
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8288
  ret void, !dbg !8289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8292, metadata !DIExpression()), !dbg !8293
  %2 = icmp sgt i32 %0, -1, !dbg !8294
  br i1 %2, label %3, label %8, !dbg !8296

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8297
  %5 = shl nuw i32 1, %4, !dbg !8299
  %6 = lshr i32 %0, 5, !dbg !8300
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8301
  store volatile i32 %5, i32* %7, align 4, !dbg !8302
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8303, !srcloc !8307
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8308, !srcloc !8311
  br label %8, !dbg !8312

8:                                                ; preds = %3, %1
  ret void, !dbg !8313
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8318, metadata !DIExpression()), !dbg !8319
  %2 = lshr i32 %0, 5, !dbg !8320
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8321
  %4 = load volatile i32, i32* %3, align 4, !dbg !8321
  %5 = and i32 %0, 31, !dbg !8322
  %6 = shl nuw i32 1, %5, !dbg !8322
  %7 = and i32 %4, %6, !dbg !8323
  ret i32 %7, !dbg !8324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8329, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 %1, metadata !8330, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 %2, metadata !8331, metadata !DIExpression()), !dbg !8332
  %4 = add i32 %1, 1, !dbg !8333
  call void @llvm.dbg.value(metadata i32 %4, metadata !8330, metadata !DIExpression()), !dbg !8332
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8336
  ret void, !dbg !8337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8342, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 %1, metadata !8343, metadata !DIExpression()), !dbg !8344
  %3 = trunc i32 %1 to i8, !dbg !8345
  %4 = shl i8 %3, 4, !dbg !8345
  %5 = and i32 %0, 15, !dbg !8347
  %6 = add nsw i32 %5, -4, !dbg !8347
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8347
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8347
  %9 = icmp slt i32 %0, 0, !dbg !8347
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8347
  store volatile i8 %4, i8* %10, align 1, !dbg !8345
  ret void, !dbg !8348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8351, metadata !DIExpression()), !dbg !8352
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8353
  ret void, !dbg !8354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8355 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8357
  tail call void @z_arm_int_exit() #27, !dbg !8358
  ret void, !dbg !8359
}

; Function Attrs: optsize
declare !dbg !8360 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8361 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8363 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8365
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !8366
  tail call void @z_bss_zero() #27, !dbg !8367
  tail call void @z_data_copy() #27, !dbg !8368
  tail call void @z_arm_interrupt_init() #27, !dbg !8369
  tail call void @z_cstart() #29, !dbg !8370
  unreachable, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8371 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8372
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8373, !srcloc !8376
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8377, !srcloc !8380
  ret void, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8382 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8383
  %2 = and i32 %1, -15728641, !dbg !8383
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8383
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8384, !srcloc !8391
  call void @llvm.dbg.value(metadata i32 %3, metadata !8389, metadata !DIExpression()) #25, !dbg !8392
  %4 = and i32 %3, -5, !dbg !8393
  call void @llvm.dbg.value(metadata i32 %4, metadata !8394, metadata !DIExpression()) #25, !dbg !8399
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8401, !srcloc !8402
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8403, !srcloc !8380
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8409, metadata !DIExpression()), !dbg !8410
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8411
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8412
  store i32 %0, i32* %3, align 4, !dbg !8413
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8414
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8415
  store i32 %4, i32* %5, align 4, !dbg !8416
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8417
  %7 = or i32 %6, 268435456, !dbg !8417
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8417
  call void @llvm.dbg.value(metadata i32 0, metadata !8418, metadata !DIExpression()) #25, !dbg !8421
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8423, !srcloc !8424
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8425
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8426
  %10 = load i32, i32* %9, align 4, !dbg !8426
  ret i32 %10, !dbg !8427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8538, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8539, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %2, metadata !8540, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8541, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %4, metadata !8542, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %5, metadata !8543, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %6, metadata !8544, metadata !DIExpression()), !dbg !8546
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8547
  call void @llvm.dbg.value(metadata i8* %8, metadata !8545, metadata !DIExpression()), !dbg !8546
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8548
  %10 = bitcast i8* %9 to i32*, !dbg !8548
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8549
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8550
  %12 = bitcast i8* %8 to i32*, !dbg !8551
  store i32 %11, i32* %12, align 4, !dbg !8552
  %13 = ptrtoint i8* %4 to i32, !dbg !8553
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8554
  %15 = bitcast i8* %14 to i32*, !dbg !8554
  store i32 %13, i32* %15, align 4, !dbg !8555
  %16 = ptrtoint i8* %5 to i32, !dbg !8556
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8557
  %18 = bitcast i8* %17 to i32*, !dbg !8557
  store i32 %16, i32* %18, align 4, !dbg !8558
  %19 = ptrtoint i8* %6 to i32, !dbg !8559
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8560
  %21 = bitcast i8* %20 to i32*, !dbg !8560
  store i32 %19, i32* %21, align 4, !dbg !8561
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8562
  %23 = bitcast i8* %22 to i32*, !dbg !8562
  store i32 16777216, i32* %23, align 4, !dbg !8563
  %24 = ptrtoint i8* %8 to i32, !dbg !8564
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8565
  store i32 %24, i32* %25, align 8, !dbg !8566
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8567
  store i32 0, i32* %26, align 4, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8575, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i32 %1, metadata !8576, metadata !DIExpression()), !dbg !8581
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8582
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8577, metadata !DIExpression()), !dbg !8581
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8583
  br i1 %4, label %19, label %5, !dbg !8585

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8580, metadata !DIExpression()), !dbg !8581
  %6 = icmp eq i32 %0, -22, !dbg !8586
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8586
  %8 = load i32, i32* %7, align 4, !dbg !8586
  br i1 %6, label %16, label %9, !dbg !8588

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8586
  %11 = icmp ule i32 %10, %0, !dbg !8586
  %12 = icmp ugt i32 %8, %0, !dbg !8586
  %13 = and i1 %12, %11, !dbg !8586
  %14 = icmp ugt i32 %8, %1, !dbg !8586
  %15 = and i1 %14, %13, !dbg !8586
  br i1 %15, label %18, label %19, !dbg !8586

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8586
  br i1 %17, label %18, label %19, !dbg !8588

18:                                               ; preds = %9, %16
  br label %19, !dbg !8589

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8581
  ret i32 %20, !dbg !8591
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8596, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8598, metadata !DIExpression()), !dbg !8599
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8600
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8601
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8602, !srcloc !8603
  unreachable, !dbg !8604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8605 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8623, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata i32 %1, metadata !8624, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata i32 %2, metadata !8625, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8626, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata i32 0, metadata !8627, metadata !DIExpression()), !dbg !8633
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8634
  %9 = and i32 %8, 511, !dbg !8635
  call void @llvm.dbg.value(metadata i32 %9, metadata !8628, metadata !DIExpression()), !dbg !8633
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8636
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8636
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8637
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8637
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8632, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 0, metadata !8639, metadata !DIExpression()) #25, !dbg !8642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8644, !srcloc !8645
  call void @llvm.dbg.value(metadata i8* %6, metadata !8630, metadata !DIExpression(DW_OP_deref)), !dbg !8633
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8646
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8631, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata i8* %5, metadata !8629, metadata !DIExpression(DW_OP_deref)), !dbg !8633
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %12, metadata !8627, metadata !DIExpression()), !dbg !8633
  %13 = load i8, i8* %5, align 1, !dbg !8648, !range !8650
  call void @llvm.dbg.value(metadata i8 %13, metadata !8629, metadata !DIExpression()), !dbg !8633
  %14 = icmp eq i8 %13, 0, !dbg !8648
  br i1 %14, label %15, label %32, !dbg !8651

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8652
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8653
  %18 = load i8, i8* %6, align 1, !dbg !8654, !range !8650
  call void @llvm.dbg.value(metadata i8 %18, metadata !8630, metadata !DIExpression()), !dbg !8633
  %19 = icmp eq i8 %18, 0, !dbg !8654
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8656
  %21 = load i32, i32* %20, align 4, !dbg !8656
  br i1 %19, label %27, label %22, !dbg !8657

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8658
  %24 = icmp eq i32 %23, 0, !dbg !8661
  br i1 %24, label %25, label %31, !dbg !8662

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8663
  br label %29, !dbg !8665

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8666
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8656
  br label %31, !dbg !8668

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8668
  br label %32, !dbg !8669

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8669
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8669
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8669
  ret void, !dbg !8669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8675, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i32 %1, metadata !8676, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i32 %2, metadata !8677, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i8* %3, metadata !8678, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i8 0, metadata !8679, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8680, metadata !DIExpression()), !dbg !8681
  store i8 0, i8* %3, align 1, !dbg !8682
  %5 = icmp ugt i32 %2, -16777217, !dbg !8683
  br i1 %5, label %6, label %17, !dbg !8685

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8686
  %8 = icmp eq i32 %7, 8, !dbg !8686
  br i1 %8, label %9, label %10, !dbg !8686

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i32 0, i32 0), i32 noundef 69) #27, !dbg !8688
  br label %17, !dbg !8694

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8695
  %12 = icmp eq i32 %11, 0, !dbg !8695
  br i1 %12, label %13, label %14, !dbg !8696

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8680, metadata !DIExpression()), !dbg !8681
  store i8 1, i8* %3, align 1, !dbg !8699
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8681
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8680, metadata !DIExpression()), !dbg !8681
  br label %17, !dbg !8702

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8681
  ret %struct.__esf* %18, !dbg !8703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8704 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8708, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 %1, metadata !8709, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %2, metadata !8710, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8712
  store i8 0, i8* %2, align 1, !dbg !8713
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8714

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %5, metadata !8711, metadata !DIExpression()), !dbg !8712
  br label %12, !dbg !8717

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8718
  call void @llvm.dbg.value(metadata i32 %7, metadata !8711, metadata !DIExpression()), !dbg !8712
  br label %12, !dbg !8719

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8720
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8712
  br label %12, !dbg !8721

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8722
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8712
  br label %12, !dbg !8723

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8724
  br label %12, !dbg !8725

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8726
  br label %12, !dbg !8727

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8712
  call void @llvm.dbg.value(metadata i32 %13, metadata !8711, metadata !DIExpression()), !dbg !8712
  ret i32 %13, !dbg !8728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8729 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8733, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %1, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8737
  store i8 0, i8* %1, align 1, !dbg !8742
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8743
  %4 = and i32 %3, 2, !dbg !8745
  %5 = icmp eq i32 %4, 0, !dbg !8746
  br i1 %5, label %7, label %6, !dbg !8747

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8748
  br label %36, !dbg !8754

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8755
  %9 = icmp sgt i32 %8, -1, !dbg !8757
  br i1 %9, label %11, label %10, !dbg !8758

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8759
  br label %36, !dbg !8765

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8766
  %13 = and i32 %12, 1073741824, !dbg !8768
  %14 = icmp eq i32 %13, 0, !dbg !8769
  br i1 %14, label %36, label %15, !dbg !8770

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.107, i32 0, i32 0), i32 noundef 69) #27, !dbg !8771
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8777
  br i1 %16, label %17, label %21, !dbg !8779

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8780
  %19 = load i32, i32* %18, align 4, !dbg !8780
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.108, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8780
  %20 = load i32, i32* %18, align 4, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %20, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %36, !dbg !8787

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8788
  %23 = and i32 %22, 255, !dbg !8790
  %24 = icmp eq i32 %23, 0, !dbg !8791
  br i1 %24, label %27, label %25, !dbg !8792

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8793
  call void @llvm.dbg.value(metadata i32 %26, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %36, !dbg !8795

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8796
  %29 = and i32 %28, 65280, !dbg !8798
  %30 = icmp eq i32 %29, 0, !dbg !8799
  br i1 %30, label %32, label %31, !dbg !8800

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8801
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %36, !dbg !8803

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8804
  %34 = icmp ult i32 %33, 65536, !dbg !8806
  br i1 %34, label %36, label %35, !dbg !8807

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8808
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %36, !dbg !8810

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8736
  call void @llvm.dbg.value(metadata i32 %37, metadata !8735, metadata !DIExpression()), !dbg !8736
  ret i32 %37, !dbg !8811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8812 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8814, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i8* %2, metadata !8816, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32 0, metadata !8817, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32 -22, metadata !8818, metadata !DIExpression()), !dbg !8827
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8828
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8833
  %5 = and i32 %4, 16, !dbg !8835
  %6 = icmp eq i32 %5, 0, !dbg !8836
  br i1 %6, label %8, label %7, !dbg !8837

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8838
  br label %8, !dbg !8844

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8845
  %10 = and i32 %9, 8, !dbg !8847
  %11 = icmp eq i32 %10, 0, !dbg !8848
  br i1 %11, label %13, label %12, !dbg !8849

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8850
  br label %13, !dbg !8856

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8857
  %15 = and i32 %14, 2, !dbg !8858
  %16 = icmp eq i32 %15, 0, !dbg !8859
  br i1 %16, label %27, label %17, !dbg !8860

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8861
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8866
  call void @llvm.dbg.value(metadata i32 %18, metadata !8819, metadata !DIExpression()), !dbg !8867
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8868
  %20 = and i32 %19, 128, !dbg !8870
  %21 = icmp eq i32 %20, 0, !dbg !8871
  br i1 %21, label %27, label %22, !dbg !8872

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8818, metadata !DIExpression()), !dbg !8827
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.102, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8873
  %23 = icmp eq i32 %1, 0, !dbg !8879
  br i1 %23, label %27, label %24, !dbg !8881

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8882
  %26 = and i32 %25, -129, !dbg !8882
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8882
  br label %27, !dbg !8884

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8827
  call void @llvm.dbg.value(metadata i32 %28, metadata !8818, metadata !DIExpression()), !dbg !8827
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8885
  %30 = and i32 %29, 1, !dbg !8887
  %31 = icmp eq i32 %30, 0, !dbg !8888
  br i1 %31, label %33, label %32, !dbg !8889

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !8890
  br label %33, !dbg !8896

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8897
  %35 = and i32 %34, 32, !dbg !8899
  %36 = icmp eq i32 %35, 0, !dbg !8900
  br i1 %36, label %38, label %37, !dbg !8901

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !8902
  br label %38, !dbg !8908

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8909
  %40 = and i32 %39, 16, !dbg !8910
  %41 = icmp eq i32 %40, 0, !dbg !8910
  br i1 %41, label %42, label %46, !dbg !8911

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8912
  %44 = and i32 %43, 2, !dbg !8913
  %45 = icmp eq i32 %44, 0, !dbg !8913
  br i1 %45, label %55, label %46, !dbg !8914

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8915
  %48 = and i32 %47, 2048, !dbg !8916
  %49 = icmp eq i32 %48, 0, !dbg !8916
  br i1 %49, label %55, label %50, !dbg !8917

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8918
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %52, metadata !8822, metadata !DIExpression()), !dbg !8920
  %53 = icmp eq i32 %52, 0, !dbg !8921
  br i1 %53, label %55, label %54, !dbg !8923

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8924, metadata !DIExpression()) #25, !dbg !8927
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8930, !srcloc !8931
  call void @llvm.dbg.value(metadata i32 2, metadata !8817, metadata !DIExpression()), !dbg !8827
  br label %55, !dbg !8932

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !8827
  call void @llvm.dbg.value(metadata i32 %56, metadata !8817, metadata !DIExpression()), !dbg !8827
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8933
  %58 = and i32 %57, 32, !dbg !8935
  %59 = icmp eq i32 %58, 0, !dbg !8936
  br i1 %59, label %63, label %60, !dbg !8937

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8938
  %62 = and i32 %61, -8193, !dbg !8938
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8938
  br label %63, !dbg !8940

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8941
  %65 = or i32 %64, 255, !dbg !8941
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8941
  store i8 0, i8* %2, align 1, !dbg !8942
  ret i32 %56, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8944 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8948, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 %0, metadata !8949, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8* %1, metadata !8950, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 0, metadata !8951, metadata !DIExpression()), !dbg !8955
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8956
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8961
  %4 = and i32 %3, 4096, !dbg !8963
  %5 = icmp eq i32 %4, 0, !dbg !8963
  br i1 %5, label %7, label %6, !dbg !8964

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8965
  br label %7, !dbg !8971

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8972
  %9 = and i32 %8, 2048, !dbg !8974
  %10 = icmp eq i32 %9, 0, !dbg !8974
  br i1 %10, label %12, label %11, !dbg !8975

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8976
  br label %12, !dbg !8982

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8983
  %14 = and i32 %13, 512, !dbg !8984
  %15 = icmp eq i32 %14, 0, !dbg !8984
  br i1 %15, label %26, label %16, !dbg !8985

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8986
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %17, metadata !8952, metadata !DIExpression()), !dbg !8992
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8993
  %19 = and i32 %18, 32768, !dbg !8995
  %20 = icmp eq i32 %19, 0, !dbg !8996
  br i1 %20, label %26, label %21, !dbg !8997

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8998
  %22 = icmp eq i32 %0, 0, !dbg !9004
  br i1 %22, label %26, label %23, !dbg !9006

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9007
  %25 = and i32 %24, -32769, !dbg !9007
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9007
  br label %26, !dbg !9009

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9010
  %28 = and i32 %27, 1024, !dbg !9012
  %29 = icmp eq i32 %28, 0, !dbg !9012
  br i1 %29, label %31, label %30, !dbg !9013

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !9014
  br label %31, !dbg !9020

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9021
  %33 = and i32 %32, 256, !dbg !9023
  %34 = icmp eq i32 %33, 0, !dbg !9024
  br i1 %34, label %35, label %39, !dbg !9025

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9026
  %37 = and i32 %36, 8192, !dbg !9028
  %38 = icmp eq i32 %37, 0, !dbg !9028
  br i1 %38, label %41, label %39, !dbg !9029

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.97, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !9030
  br label %41, !dbg !9031

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9031
  %43 = or i32 %42, 65280, !dbg !9031
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9031
  store i8 0, i8* %1, align 1, !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9034 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9040, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32 0, metadata !9041, metadata !DIExpression()), !dbg !9042
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !9043
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9048
  %2 = and i32 %1, 33554432, !dbg !9050
  %3 = icmp eq i32 %2, 0, !dbg !9051
  br i1 %3, label %5, label %4, !dbg !9052

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !9053
  br label %5, !dbg !9059

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9060
  %7 = and i32 %6, 16777216, !dbg !9062
  %8 = icmp eq i32 %7, 0, !dbg !9063
  br i1 %8, label %10, label %9, !dbg !9064

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !9065
  br label %10, !dbg !9071

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9072
  %12 = and i32 %11, 524288, !dbg !9074
  %13 = icmp eq i32 %12, 0, !dbg !9075
  br i1 %13, label %15, label %14, !dbg !9076

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9077
  br label %15, !dbg !9083

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9084
  %17 = and i32 %16, 262144, !dbg !9086
  %18 = icmp eq i32 %17, 0, !dbg !9087
  br i1 %18, label %20, label %19, !dbg !9088

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9089
  br label %20, !dbg !9095

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9096
  %22 = and i32 %21, 131072, !dbg !9098
  %23 = icmp eq i32 %22, 0, !dbg !9099
  br i1 %23, label %25, label %24, !dbg !9100

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9101
  br label %25, !dbg !9107

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9108
  %27 = and i32 %26, 65536, !dbg !9110
  %28 = icmp eq i32 %27, 0, !dbg !9111
  br i1 %28, label %30, label %29, !dbg !9112

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9113
  br label %30, !dbg !9119

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9120
  %32 = or i32 %31, -65536, !dbg !9120
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9120
  ret void, !dbg !9121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9122 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9126, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i8* %0, metadata !9127, metadata !DIExpression()), !dbg !9128
  store i8 0, i8* %0, align 1, !dbg !9129
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9130
  ret void, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9140, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 %0, metadata !9141, metadata !DIExpression()), !dbg !9142
  %2 = icmp slt i32 %0, 16, !dbg !9143
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.81, i32 0, i32 0), !dbg !9143
  %4 = add nsw i32 %0, -16, !dbg !9143
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9143
  ret void, !dbg !9148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9149 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9153, metadata !DIExpression()), !dbg !9156
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9157
  %3 = load i32, i32* %2, align 4, !dbg !9157
  %4 = inttoptr i32 %3 to i16*, !dbg !9158
  call void @llvm.dbg.value(metadata i16* %4, metadata !9154, metadata !DIExpression()), !dbg !9156
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9159
  %6 = or i32 %5, 256, !dbg !9159
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9159
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9160, !srcloc !9163
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9164, !srcloc !9167
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9168
  %8 = load i16, i16* %7, align 2, !dbg !9169
  call void @llvm.dbg.value(metadata i16 %8, metadata !9155, metadata !DIExpression()), !dbg !9156
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9170
  %10 = and i32 %9, -257, !dbg !9170
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9170
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9171, !srcloc !9163
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9173, !srcloc !9167
  %11 = icmp eq i16 %8, -8446, !dbg !9175
  ret i1 %11, !dbg !9177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !9178 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9179
  %2 = or i32 %1, 16, !dbg !9179
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9179
  ret void, !dbg !9180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !9181 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9184, metadata !DIExpression()), !dbg !9185
  br label %1, !dbg !9186

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9184, metadata !DIExpression()), !dbg !9185
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef %2) #26, !dbg !9188
  %3 = add nuw nsw i32 %2, 1, !dbg !9191
  call void @llvm.dbg.value(metadata i32 %3, metadata !9184, metadata !DIExpression()), !dbg !9185
  %4 = icmp eq i32 %3, 82, !dbg !9192
  br i1 %4, label %5, label %1, !dbg !9186, !llvm.loop !9193

5:                                                ; preds = %1
  ret void, !dbg !9195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0) unnamed_addr #15 !dbg !9196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 1, metadata !9199, metadata !DIExpression()), !dbg !9200
  %2 = and i32 %0, 15, !dbg !9201
  %3 = add nsw i32 %2, -4, !dbg !9201
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9201
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9201
  %6 = icmp slt i32 %0, 0, !dbg !9201
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9201
  store volatile i8 16, i8* %7, align 1, !dbg !9202
  ret void, !dbg !9204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9311, metadata !DIExpression()), !dbg !9312
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9313
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9315
  br i1 %3, label %4, label %12, !dbg !9316

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9317, !srcloc !9329
  call void @llvm.dbg.value(metadata i32 %5, metadata !9320, metadata !DIExpression()) #25, !dbg !9330
  %6 = icmp eq i32 %5, 0, !dbg !9331
  br i1 %6, label %12, label %7, !dbg !9332

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9333
  %9 = or i32 %8, 268435456, !dbg !9333
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9333
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9335
  %11 = and i32 %10, -32769, !dbg !9335
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9335
  br label %12, !dbg !9336

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9337
  ret void, !dbg !9338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9339 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9340
  ret void, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !646, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8 0, metadata !647, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 64, metadata !649, metadata !DIExpression()), !dbg !9342
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9343
  %3 = load i32, i32* %2, align 4, !dbg !9343
  %4 = add i32 %3, -64, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %4, metadata !648, metadata !DIExpression()), !dbg !9342
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9346
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9347
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9348
  call void @llvm.dbg.value(metadata i8 1, metadata !647, metadata !DIExpression()), !dbg !9342
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9349
  ret void, !dbg !9350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9351 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9352
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9353, !srcloc !9356
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9357, !srcloc !9360
  ret void, !dbg !9361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9362 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9363, !srcloc !9366
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9367
  ret void, !dbg !9368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9369 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9384, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i8 %1, metadata !9385, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %2, metadata !9386, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %3, metadata !9387, metadata !DIExpression()), !dbg !9388
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9389
  ret void, !dbg !9391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9392 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9397, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8 %1, metadata !9398, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 undef, metadata !9399, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 undef, metadata !9400, metadata !DIExpression()), !dbg !9402
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9403
  call void @llvm.dbg.value(metadata i8 %3, metadata !9401, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9402
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %4, metadata !9401, metadata !DIExpression()), !dbg !9402
  %5 = trunc i32 %4 to i8, !dbg !9405
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9412, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i8 %1, metadata !9413, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i8 %2, metadata !9414, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i1 %3, metadata !9415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9418
  %5 = zext i8 %2 to i32, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %5, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 0, metadata !9416, metadata !DIExpression()), !dbg !9418
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 0, metadata !9416, metadata !DIExpression()), !dbg !9418
  %7 = icmp eq i8 %1, 0, !dbg !9420
  br i1 %7, label %30, label %8, !dbg !9423

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 %10, metadata !9416, metadata !DIExpression()), !dbg !9418
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9424
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9427
  %13 = load i32, i32* %12, align 4, !dbg !9427
  %14 = icmp eq i32 %13, 0, !dbg !9428
  br i1 %14, label %26, label %15, !dbg !9429

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9430

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9432
  %18 = icmp eq i32 %17, 0, !dbg !9432
  br i1 %18, label %19, label %20, !dbg !9433

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9434
  br label %30, !dbg !9440

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9441
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %22, metadata !9417, metadata !DIExpression()), !dbg !9418
  %23 = icmp eq i32 %22, -22, !dbg !9443
  br i1 %23, label %30, label %24, !dbg !9445

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %25, metadata !9417, metadata !DIExpression()), !dbg !9418
  br label %26, !dbg !9447

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9418
  call void @llvm.dbg.value(metadata i32 %27, metadata !9417, metadata !DIExpression()), !dbg !9418
  %28 = add nuw nsw i32 %10, 1, !dbg !9448
  call void @llvm.dbg.value(metadata i32 %28, metadata !9416, metadata !DIExpression()), !dbg !9418
  %29 = icmp eq i32 %28, %6, !dbg !9420
  br i1 %29, label %30, label %8, !dbg !9423, !llvm.loop !9449

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9418
  ret i32 %31, !dbg !9451
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9452 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9456, metadata !DIExpression()), !dbg !9458
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9459
  %3 = load i32, i32* %2, align 4, !dbg !9459
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9460, !range !9461
  %5 = icmp ult i32 %4, 2, !dbg !9460
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9462
  br i1 %7, label %8, label %15, !dbg !9462

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9463
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9464
  %11 = load i32, i32* %10, align 4, !dbg !9464
  %12 = and i32 %11, %9, !dbg !9465
  %13 = icmp eq i32 %12, 0, !dbg !9466
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9457, metadata !DIExpression()), !dbg !9458
  ret i32 %16, !dbg !9467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9468 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9473, metadata !DIExpression()), !dbg !9475
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9476
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9476
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9474, metadata !DIExpression()), !dbg !9477
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9478
  %6 = load i32, i32* %5, align 4, !dbg !9478
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9479
  store i32 %6, i32* %7, align 4, !dbg !9480
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9481
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9482
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9483
  %11 = load i32, i32* %10, align 4, !dbg !9483
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9484
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9485
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9486
  ret i32 %12, !dbg !9487
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #19 !dbg !9488 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9495, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9496, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata i32 undef, metadata !9497, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata i32 %2, metadata !9498, metadata !DIExpression()), !dbg !9499
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9500
  %5 = load i32, i32* %4, align 4, !dbg !9500
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9501
  %7 = or i32 %6, %5, !dbg !9502
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9503
  store i32 %7, i32* %8, align 4, !dbg !9504
  ret void, !dbg !9505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9506 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9510, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9511, metadata !DIExpression()), !dbg !9512
  %3 = zext i8 %0 to i32, !dbg !9513
  %4 = icmp ugt i8 %0, 7, !dbg !9515
  br i1 %4, label %5, label %6, !dbg !9516

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.122, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9517
  br label %7, !dbg !9523

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9524
  br label %7, !dbg !9525

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9512
  ret i32 %8, !dbg !9526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !9527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9531, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9532, metadata !DIExpression()), !dbg !9533
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9534
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9535
  %4 = load i32, i32* %3, align 4, !dbg !9535
  %5 = and i32 %4, -32, !dbg !9536
  %6 = or i32 %5, %0, !dbg !9537
  %7 = or i32 %6, 16, !dbg !9537
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9538
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9539
  %9 = load i32, i32* %8, align 4, !dbg !9539
  %10 = or i32 %9, 1, !dbg !9540
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9541
  ret void, !dbg !9542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !9543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9546, metadata !DIExpression()), !dbg !9547
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9548
  ret void, !dbg !9549
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9554, metadata !DIExpression()), !dbg !9555
  %2 = icmp ult i32 %0, 33, !dbg !9556
  br i1 %2, label %11, label %3, !dbg !9558

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9559
  br i1 %4, label %11, label %5, !dbg !9561

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9562
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9563, !range !9461
  %8 = mul nsw i32 %7, -2, !dbg !9564
  %9 = add nsw i32 %8, 62, !dbg !9564
  %10 = and i32 %9, 62, !dbg !9565
  br label %11, !dbg !9566

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9555
  ret i32 %12, !dbg !9567
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9572, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.value(metadata i8 %1, metadata !9573, metadata !DIExpression()), !dbg !9574
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9575
  ret void, !dbg !9577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9578 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9582, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i8 %1, metadata !9583, metadata !DIExpression()), !dbg !9589
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9590
  call void @llvm.dbg.value(metadata i8 %3, metadata !9584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9589
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %4, metadata !9584, metadata !DIExpression()), !dbg !9589
  %5 = icmp ne i32 %4, -22, !dbg !9592
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9593
  call void @llvm.dbg.value(metadata i32 %4, metadata !9585, metadata !DIExpression()), !dbg !9594
  br i1 %7, label %8, label %12, !dbg !9593

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9585, metadata !DIExpression()), !dbg !9594
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9595
  %10 = add i32 %9, 1, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %10, metadata !9585, metadata !DIExpression()), !dbg !9594
  %11 = icmp eq i32 %10, 8, !dbg !9599
  br i1 %11, label %12, label %8, !dbg !9600, !llvm.loop !9601

12:                                               ; preds = %8, %2
  ret void, !dbg !9603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !9604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9607, metadata !DIExpression()), !dbg !9608
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9609
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9610
  ret void, !dbg !9611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9612 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9617
  %2 = icmp ugt i32 %1, 8, !dbg !9619
  br i1 %2, label %14, label %3, !dbg !9620

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9621
  call void @llvm.dbg.value(metadata i32 0, metadata !9616, metadata !DIExpression()), !dbg !9622
  %4 = icmp eq i32 %1, 0, !dbg !9623
  br i1 %4, label %12, label %5, !dbg !9626

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9626

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9616, metadata !DIExpression()), !dbg !9622
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9627
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9629
  %10 = add nuw i32 %8, 1, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %10, metadata !9616, metadata !DIExpression()), !dbg !9622
  %11 = icmp eq i32 %10, %1, !dbg !9623
  br i1 %11, label %12, label %7, !dbg !9626, !llvm.loop !9631

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9633
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9634
  tail call void @arm_core_mpu_enable() #26, !dbg !9635
  br label %14, !dbg !9636

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9622
  ret i32 %15, !dbg !9637
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9645, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.value(metadata i8* %1, metadata !9646, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.value(metadata i8* %0, metadata !9647, metadata !DIExpression()), !dbg !9648
  %3 = load i8, i8* %1, align 1, !dbg !9649
  %4 = icmp eq i8 %3, 0, !dbg !9650
  br i1 %4, label %13, label %5, !dbg !9651

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9645, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.value(metadata i8* %8, metadata !9646, metadata !DIExpression()), !dbg !9648
  store i8 %6, i8* %7, align 1, !dbg !9652
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9654
  call void @llvm.dbg.value(metadata i8* %9, metadata !9645, metadata !DIExpression()), !dbg !9648
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9655
  call void @llvm.dbg.value(metadata i8* %10, metadata !9646, metadata !DIExpression()), !dbg !9648
  %11 = load i8, i8* %10, align 1, !dbg !9649
  %12 = icmp eq i8 %11, 0, !dbg !9650
  br i1 %12, label %13, label %5, !dbg !9651, !llvm.loop !9656

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9658
  ret i8* %0, !dbg !9659
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9664, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i8* %1, metadata !9665, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %2, metadata !9666, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i8* %0, metadata !9667, metadata !DIExpression()), !dbg !9668
  %4 = icmp eq i32 %2, 0, !dbg !9669
  br i1 %4, label %22, label %5, !dbg !9670

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9664, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %7, metadata !9666, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i8* %8, metadata !9665, metadata !DIExpression()), !dbg !9668
  %9 = load i8, i8* %8, align 1, !dbg !9671
  %10 = icmp eq i8 %9, 0, !dbg !9672
  br i1 %10, label %16, label %11, !dbg !9673

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9674
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9676
  call void @llvm.dbg.value(metadata i8* %12, metadata !9665, metadata !DIExpression()), !dbg !9668
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9677
  call void @llvm.dbg.value(metadata i8* %13, metadata !9664, metadata !DIExpression()), !dbg !9668
  %14 = add i32 %7, -1, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %14, metadata !9666, metadata !DIExpression()), !dbg !9668
  %15 = icmp eq i32 %14, 0, !dbg !9669
  br i1 %15, label %22, label %5, !dbg !9670, !llvm.loop !9679

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9664, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %18, metadata !9666, metadata !DIExpression()), !dbg !9668
  store i8 0, i8* %17, align 1, !dbg !9681
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9683
  call void @llvm.dbg.value(metadata i8* %19, metadata !9664, metadata !DIExpression()), !dbg !9668
  %20 = add i32 %18, -1, !dbg !9684
  call void @llvm.dbg.value(metadata i32 %20, metadata !9666, metadata !DIExpression()), !dbg !9668
  %21 = icmp eq i32 %20, 0, !dbg !9685
  br i1 %21, label %22, label %16, !dbg !9686, !llvm.loop !9687

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9689
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %1, metadata !9695, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %1, metadata !9696, metadata !DIExpression()), !dbg !9697
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9698

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9694, metadata !DIExpression()), !dbg !9697
  %6 = load i8, i8* %5, align 1, !dbg !9699
  %7 = icmp eq i8 %6, %3, !dbg !9700
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9701
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9702
  call void @llvm.dbg.value(metadata i8* %10, metadata !9694, metadata !DIExpression()), !dbg !9697
  br i1 %9, label %11, label %4, !dbg !9701, !llvm.loop !9704

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9706
  ret i8* %12, !dbg !9707
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9710, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i32 %1, metadata !9711, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i8* null, metadata !9712, metadata !DIExpression()), !dbg !9713
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9714

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9713
  call void @llvm.dbg.value(metadata i8* %6, metadata !9712, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i8* %5, metadata !9710, metadata !DIExpression()), !dbg !9713
  %7 = load i8, i8* %5, align 1, !dbg !9715
  %8 = icmp eq i8 %7, %3, !dbg !9718
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9719
  call void @llvm.dbg.value(metadata i8* %9, metadata !9712, metadata !DIExpression()), !dbg !9713
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9720
  call void @llvm.dbg.value(metadata i8* %10, metadata !9710, metadata !DIExpression()), !dbg !9713
  %11 = icmp eq i8 %7, 0, !dbg !9721
  br i1 %11, label %12, label %4, !dbg !9721, !llvm.loop !9722

12:                                               ; preds = %4
  ret i8* %9, !dbg !9724
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9729, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 0, metadata !9730, metadata !DIExpression()), !dbg !9731
  %2 = load i8, i8* %0, align 1, !dbg !9732
  %3 = icmp eq i8 %2, 0, !dbg !9733
  br i1 %3, label %11, label %4, !dbg !9734

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9730, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i8* %6, metadata !9729, metadata !DIExpression()), !dbg !9731
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9735
  call void @llvm.dbg.value(metadata i8* %7, metadata !9729, metadata !DIExpression()), !dbg !9731
  %8 = add i32 %5, 1, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %8, metadata !9730, metadata !DIExpression()), !dbg !9731
  %9 = load i8, i8* %7, align 1, !dbg !9732
  %10 = icmp eq i8 %9, 0, !dbg !9733
  br i1 %10, label %11, label %4, !dbg !9734, !llvm.loop !9738

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9731
  ret i32 %12, !dbg !9740
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9745, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 %1, metadata !9746, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 0, metadata !9747, metadata !DIExpression()), !dbg !9748
  %3 = load i8, i8* %0, align 1, !dbg !9749
  %4 = icmp ne i8 %3, 0, !dbg !9750
  %5 = icmp ne i32 %1, 0, !dbg !9751
  %6 = and i1 %4, %5, !dbg !9751
  br i1 %6, label %7, label %16, !dbg !9752

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9747, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i8* %9, metadata !9745, metadata !DIExpression()), !dbg !9748
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9753
  call void @llvm.dbg.value(metadata i8* %10, metadata !9745, metadata !DIExpression()), !dbg !9748
  %11 = add nuw i32 %8, 1, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %11, metadata !9747, metadata !DIExpression()), !dbg !9748
  %12 = load i8, i8* %10, align 1, !dbg !9749
  %13 = icmp ne i8 %12, 0, !dbg !9750
  %14 = icmp ult i32 %11, %1, !dbg !9751
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9751
  br i1 %15, label %7, label %16, !dbg !9752, !llvm.loop !9756

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9748
  ret i32 %17, !dbg !9758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9763, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i8* %1, metadata !9764, metadata !DIExpression()), !dbg !9765
  %3 = load i8, i8* %0, align 1, !dbg !9766
  %4 = load i8, i8* %1, align 1, !dbg !9767
  %5 = icmp ne i8 %3, %4, !dbg !9768
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9769
  br i1 %7, label %18, label %8, !dbg !9769

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i8* %10, metadata !9763, metadata !DIExpression()), !dbg !9765
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9770
  call void @llvm.dbg.value(metadata i8* %11, metadata !9763, metadata !DIExpression()), !dbg !9765
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9772
  call void @llvm.dbg.value(metadata i8* %12, metadata !9764, metadata !DIExpression()), !dbg !9765
  %13 = load i8, i8* %11, align 1, !dbg !9766
  %14 = load i8, i8* %12, align 1, !dbg !9767
  %15 = icmp ne i8 %13, %14, !dbg !9768
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9769
  br i1 %17, label %18, label %8, !dbg !9769, !llvm.loop !9773

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9766
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9767
  %21 = zext i8 %19 to i32, !dbg !9776
  %22 = zext i8 %20 to i32, !dbg !9777
  %23 = sub nsw i32 %21, %22, !dbg !9778
  ret i32 %23, !dbg !9779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9784, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i8* %1, metadata !9785, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %2, metadata !9786, metadata !DIExpression()), !dbg !9787
  %4 = icmp eq i32 %2, 0, !dbg !9788
  br i1 %4, label %23, label %5, !dbg !9788

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9786, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i8* %7, metadata !9785, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i8* %8, metadata !9784, metadata !DIExpression()), !dbg !9787
  %9 = load i8, i8* %8, align 1, !dbg !9789
  %10 = load i8, i8* %7, align 1, !dbg !9790
  %11 = icmp ne i8 %9, %10, !dbg !9791
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9792
  br i1 %13, label %19, label %14, !dbg !9792

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9793
  call void @llvm.dbg.value(metadata i8* %15, metadata !9784, metadata !DIExpression()), !dbg !9787
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9795
  call void @llvm.dbg.value(metadata i8* %16, metadata !9785, metadata !DIExpression()), !dbg !9787
  %17 = add i32 %6, -1, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %17, metadata !9786, metadata !DIExpression()), !dbg !9787
  %18 = icmp eq i32 %17, 0, !dbg !9788
  br i1 %18, label %23, label %5, !dbg !9788, !llvm.loop !9797

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9800
  %21 = zext i8 %10 to i32, !dbg !9801
  %22 = sub nsw i32 %20, %21, !dbg !9802
  br label %23, !dbg !9803

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9803
  ret i32 %24, !dbg !9804
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9809, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.value(metadata i8* %1, metadata !9810, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.value(metadata i8** %2, metadata !9811, metadata !DIExpression()), !dbg !9814
  %4 = icmp eq i8* %0, null, !dbg !9815
  br i1 %4, label %5, label %7, !dbg !9815

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9816
  br label %7, !dbg !9815

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9815
  call void @llvm.dbg.value(metadata i8* %8, metadata !9812, metadata !DIExpression()), !dbg !9814
  %9 = load i8, i8* %8, align 1, !dbg !9817
  %10 = icmp eq i8 %9, 0, !dbg !9817
  br i1 %10, label %33, label %11, !dbg !9818

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9812, metadata !DIExpression()), !dbg !9814
  %14 = zext i8 %12 to i32, !dbg !9817
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9819
  %16 = icmp eq i8* %15, null, !dbg !9818
  br i1 %16, label %21, label %17, !dbg !9820

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9821
  call void @llvm.dbg.value(metadata i8* %18, metadata !9812, metadata !DIExpression()), !dbg !9814
  %19 = load i8, i8* %18, align 1, !dbg !9817
  %20 = icmp eq i8 %19, 0, !dbg !9817
  br i1 %20, label %33, label %11, !dbg !9818, !llvm.loop !9823

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9813, metadata !DIExpression()), !dbg !9814
  %24 = zext i8 %22 to i32, !dbg !9825
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9826
  %26 = icmp eq i8* %25, null, !dbg !9827
  br i1 %26, label %27, label %31, !dbg !9828

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9829
  call void @llvm.dbg.value(metadata i8* %28, metadata !9813, metadata !DIExpression()), !dbg !9814
  %29 = load i8, i8* %28, align 1, !dbg !9825
  %30 = icmp eq i8 %29, 0, !dbg !9825
  br i1 %30, label %33, label %21, !dbg !9831, !llvm.loop !9832

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9834
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9837
  br label %33, !dbg !9838

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9814
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9814
  store i8* %34, i8** %2, align 4, !dbg !9814
  ret i8* %35, !dbg !9839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9840 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9842, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8* %1, metadata !9843, metadata !DIExpression()), !dbg !9844
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9845
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9846
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9847
  ret i8* %0, !dbg !9848
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9851, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i8* %1, metadata !9852, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i8* %0, metadata !9854, metadata !DIExpression()), !dbg !9856
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %4, metadata !9855, metadata !DIExpression()), !dbg !9856
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9858
  call void @llvm.dbg.value(metadata i8* %5, metadata !9851, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i8* %1, metadata !9852, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9856
  %6 = icmp eq i32 %2, 0, !dbg !9859
  br i1 %6, label %18, label %7, !dbg !9860

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9861
  call void @llvm.dbg.value(metadata i8* %9, metadata !9851, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i8* %10, metadata !9852, metadata !DIExpression()), !dbg !9856
  %12 = load i8, i8* %10, align 1, !dbg !9862
  %13 = icmp eq i8 %12, 0, !dbg !9863
  br i1 %13, label %18, label %14, !dbg !9864

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9865
  call void @llvm.dbg.value(metadata i8* %15, metadata !9852, metadata !DIExpression()), !dbg !9856
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9867
  call void @llvm.dbg.value(metadata i8* %16, metadata !9851, metadata !DIExpression()), !dbg !9856
  store i8 %12, i8* %9, align 1, !dbg !9868
  call void @llvm.dbg.value(metadata i32 %11, metadata !9853, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i32 %11, metadata !9853, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9856
  %17 = icmp eq i32 %11, 0, !dbg !9859
  br i1 %17, label %18, label %7, !dbg !9860, !llvm.loop !9869

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9856
  store i8 0, i8* %19, align 1, !dbg !9871
  ret i8* %0, !dbg !9872
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9873 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9877, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i8* %1, metadata !9878, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i32 %2, metadata !9879, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i8* %0, metadata !9880, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i8* %1, metadata !9881, metadata !DIExpression()), !dbg !9882
  %4 = icmp eq i32 %2, 0, !dbg !9883
  br i1 %4, label %31, label %5, !dbg !9885

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i8* %0, metadata !9880, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i32 %2, metadata !9879, metadata !DIExpression()), !dbg !9882
  %6 = add i32 %2, -1, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %6, metadata !9879, metadata !DIExpression()), !dbg !9882
  %7 = icmp eq i32 %6, 0, !dbg !9887
  br i1 %7, label %23, label %8, !dbg !9888

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9889
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9889
  br label %11, !dbg !9889

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i8* %14, metadata !9880, metadata !DIExpression()), !dbg !9882
  %15 = load i8, i8* %14, align 1, !dbg !9890
  %16 = load i8, i8* %13, align 1, !dbg !9891
  %17 = icmp eq i8 %15, %16, !dbg !9892
  br i1 %17, label %18, label %23, !dbg !9889

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9893
  call void @llvm.dbg.value(metadata i8* %19, metadata !9880, metadata !DIExpression()), !dbg !9882
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9895
  call void @llvm.dbg.value(metadata i8* %20, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i32 %12, metadata !9879, metadata !DIExpression()), !dbg !9882
  %21 = add i32 %12, -1, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %21, metadata !9879, metadata !DIExpression()), !dbg !9882
  %22 = icmp eq i32 %21, 0, !dbg !9887
  br i1 %22, label %23, label %11, !dbg !9888, !llvm.loop !9896

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9882
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9882
  %26 = load i8, i8* %24, align 1, !dbg !9898
  %27 = zext i8 %26 to i32, !dbg !9898
  %28 = load i8, i8* %25, align 1, !dbg !9899
  %29 = zext i8 %28 to i32, !dbg !9899
  %30 = sub nsw i32 %27, %29, !dbg !9900
  br label %31, !dbg !9901

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9882
  ret i32 %32, !dbg !9902
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9903 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9907, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %0, metadata !9910, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %1, metadata !9911, metadata !DIExpression()), !dbg !9912
  %4 = ptrtoint i8* %0 to i32, !dbg !9913
  %5 = ptrtoint i8* %1 to i32, !dbg !9913
  %6 = sub i32 %4, %5, !dbg !9913
  %7 = icmp ult i32 %6, %2, !dbg !9915
  br i1 %7, label %10, label %8, !dbg !9916

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9911, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %0, metadata !9910, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9912
  %9 = icmp eq i32 %2, 0, !dbg !9917
  br i1 %9, label %26, label %17, !dbg !9919

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9909, metadata !DIExpression()), !dbg !9912
  %12 = add i32 %11, -1, !dbg !9920
  call void @llvm.dbg.value(metadata i32 %12, metadata !9909, metadata !DIExpression()), !dbg !9912
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9923
  %14 = load i8, i8* %13, align 1, !dbg !9923
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9924
  store i8 %14, i8* %15, align 1, !dbg !9925
  %16 = icmp eq i32 %12, 0, !dbg !9926
  br i1 %16, label %26, label %10, !dbg !9927, !llvm.loop !9928

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9911, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %19, metadata !9910, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %20, metadata !9909, metadata !DIExpression()), !dbg !9912
  %21 = load i8, i8* %18, align 1, !dbg !9930
  store i8 %21, i8* %19, align 1, !dbg !9932
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9933
  call void @llvm.dbg.value(metadata i8* %22, metadata !9910, metadata !DIExpression()), !dbg !9912
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9934
  call void @llvm.dbg.value(metadata i8* %23, metadata !9911, metadata !DIExpression()), !dbg !9912
  %24 = add i32 %20, -1, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %24, metadata !9909, metadata !DIExpression()), !dbg !9912
  %25 = icmp eq i32 %24, 0, !dbg !9917
  br i1 %25, label %26, label %17, !dbg !9919, !llvm.loop !9936

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9945, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %1, metadata !9946, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i32 %2, metadata !9947, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %0, metadata !9948, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %1, metadata !9949, metadata !DIExpression()), !dbg !9950
  %4 = icmp eq i32 %2, 0, !dbg !9951
  br i1 %4, label %14, label %5, !dbg !9952

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9949, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i8* %7, metadata !9948, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i32 %8, metadata !9947, metadata !DIExpression()), !dbg !9950
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9953
  call void @llvm.dbg.value(metadata i8* %9, metadata !9949, metadata !DIExpression()), !dbg !9950
  %10 = load i8, i8* %6, align 1, !dbg !9955
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9956
  call void @llvm.dbg.value(metadata i8* %11, metadata !9948, metadata !DIExpression()), !dbg !9950
  store i8 %10, i8* %7, align 1, !dbg !9957
  %12 = add i32 %8, -1, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %12, metadata !9947, metadata !DIExpression()), !dbg !9950
  %13 = icmp eq i32 %12, 0, !dbg !9951
  br i1 %13, label %14, label %5, !dbg !9952, !llvm.loop !9959

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9966, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 %1, metadata !9967, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 %2, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %0, metadata !9969, metadata !DIExpression()), !dbg !9971
  %4 = trunc i32 %1 to i8, !dbg !9972
  call void @llvm.dbg.value(metadata i8 %4, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 %2, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %0, metadata !9969, metadata !DIExpression()), !dbg !9971
  %5 = icmp eq i32 %2, 0, !dbg !9973
  br i1 %5, label %12, label %6, !dbg !9974

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %8, metadata !9969, metadata !DIExpression()), !dbg !9971
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9975
  call void @llvm.dbg.value(metadata i8* %9, metadata !9969, metadata !DIExpression()), !dbg !9971
  store i8 %4, i8* %8, align 1, !dbg !9977
  %10 = add i32 %7, -1, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %10, metadata !9968, metadata !DIExpression()), !dbg !9971
  %11 = icmp eq i32 %10, 0, !dbg !9973
  br i1 %11, label %12, label %6, !dbg !9974, !llvm.loop !9979

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9981
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9986, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i32 %1, metadata !9987, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i32 %2, metadata !9988, metadata !DIExpression()), !dbg !9992
  %4 = icmp eq i32 %2, 0, !dbg !9993
  br i1 %4, label %17, label %5, !dbg !9994

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9995

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9996
  call void @llvm.dbg.value(metadata i8* %9, metadata !9989, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %8, metadata !9988, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i8* %9, metadata !9989, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9996
  %10 = load i8, i8* %9, align 1, !dbg !9997
  %11 = icmp eq i8 %10, %6, !dbg !10000
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !10001
  call void @llvm.dbg.value(metadata i8* %12, metadata !9989, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %13, metadata !9988, metadata !DIExpression()), !dbg !9992
  br i1 %15, label %16, label %7, !dbg !10001, !llvm.loop !10002

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !10004

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9992
  ret i8* %19, !dbg !10005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !10006 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !10008, metadata !DIExpression()), !dbg !10009
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !10012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10014, metadata !DIExpression()), !dbg !10015
  ret i32 -1, !dbg !10016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10021, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32* %1, metadata !10022, metadata !DIExpression()), !dbg !10023
  %3 = ptrtoint i32* %1 to i32, !dbg !10024
  %4 = and i32 %3, -2, !dbg !10024
  %5 = icmp eq i32 %4, 2, !dbg !10024
  br i1 %5, label %6, label %9, !dbg !10024

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10025
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !10025
  br label %9, !dbg !10026

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !10026
  ret i32 %10, !dbg !10027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10030, metadata !DIExpression()), !dbg !10032
  call void @llvm.dbg.value(metadata i32* %1, metadata !10031, metadata !DIExpression()), !dbg !10032
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10033
  ret i32 %3, !dbg !10034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10038, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i32* %1, metadata !10039, metadata !DIExpression()), !dbg !10040
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10041, !srcloc !10043
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10044
  ret i32 %3, !dbg !10045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10046 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10051, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i32* %1, metadata !10052, metadata !DIExpression()), !dbg !10055
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !10056
  call void @llvm.dbg.value(metadata i32 %3, metadata !10053, metadata !DIExpression()), !dbg !10055
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !10057
  call void @llvm.dbg.value(metadata i32 %4, metadata !10054, metadata !DIExpression()), !dbg !10055
  %5 = icmp ne i32 %3, %4, !dbg !10058
  %6 = sext i1 %5 to i32, !dbg !10059
  ret i32 %6, !dbg !10060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10065, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i32 %1, metadata !10066, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i32 %2, metadata !10067, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i32* %3, metadata !10068, metadata !DIExpression()), !dbg !10069
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10070
  ret i32 %5, !dbg !10071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10074, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %1, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %2, metadata !10076, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32* %3, metadata !10077, metadata !DIExpression()), !dbg !10078
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10079, !srcloc !10081
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10082
  ret i32 %5, !dbg !10083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10084 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10086, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %1, metadata !10087, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %2, metadata !10088, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32* %3, metadata !10089, metadata !DIExpression()), !dbg !10094
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10095
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10097
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10097
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10097
  br i1 %11, label %33, label %12, !dbg !10097

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10094
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10094
  call void @llvm.dbg.value(metadata i8* %14, metadata !10092, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %13, metadata !10090, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %1, metadata !10091, metadata !DIExpression()), !dbg !10094
  br label %15, !dbg !10098

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10100
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10094
  call void @llvm.dbg.value(metadata i8* %17, metadata !10092, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %16, metadata !10091, metadata !DIExpression()), !dbg !10094
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10101
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10104
  call void @llvm.dbg.value(metadata i8* %19, metadata !10092, metadata !DIExpression()), !dbg !10094
  %20 = load i8, i8* %17, align 1, !dbg !10105
  %21 = zext i8 %20 to i32, !dbg !10106
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10101
  %23 = icmp eq i32 %22, -1, !dbg !10107
  br i1 %23, label %30, label %24, !dbg !10108

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10109
  call void @llvm.dbg.value(metadata i32 %25, metadata !10091, metadata !DIExpression()), !dbg !10094
  %26 = icmp eq i32 %25, 0, !dbg !10110
  br i1 %26, label %27, label %15, !dbg !10111, !llvm.loop !10112

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %28, metadata !10090, metadata !DIExpression()), !dbg !10094
  %29 = icmp eq i32 %28, 0, !dbg !10115
  br i1 %29, label %30, label %12, !dbg !10116, !llvm.loop !10117

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10094
  call void @llvm.dbg.value(metadata i32 %31, metadata !10090, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.label(metadata !10093), !dbg !10120
  %32 = sub i32 %2, %31, !dbg !10121
  br label %33, !dbg !10122

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10094
  ret i32 %34, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10128, metadata !DIExpression()), !dbg !10129
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10130
  %3 = icmp eq i32 %2, -1, !dbg !10132
  br i1 %3, label %8, label %4, !dbg !10133

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10134
  %6 = icmp eq i32 %5, -1, !dbg !10135
  %7 = sext i1 %6 to i32, !dbg !10134
  br label %8, !dbg !10136

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10129
  ret i32 %9, !dbg !10137
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10140, metadata !DIExpression()), !dbg !10141
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10142
  ret void, !dbg !10143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10148, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata i32 %1, metadata !10149, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10150, metadata !DIExpression()), !dbg !10154
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10155
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10155
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10155
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10151, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata i32 %0, metadata !10153, metadata !DIExpression()), !dbg !10154
  %7 = icmp slt i32 %0, %1, !dbg !10156
  br i1 %7, label %8, label %22, !dbg !10159

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10153, metadata !DIExpression()), !dbg !10154
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10160
  %11 = icmp eq i32 %10, 0, !dbg !10160
  br i1 %11, label %19, label %12, !dbg !10163

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10164
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10166
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10166
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10168
  br i1 %15, label %19, label %16, !dbg !10169

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10170
  %18 = load i8*, i8** %17, align 4, !dbg !10170
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10171
  br label %19, !dbg !10172

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10173
  call void @llvm.dbg.value(metadata i32 %20, metadata !10153, metadata !DIExpression()), !dbg !10154
  %21 = icmp eq i32 %20, %1, !dbg !10156
  br i1 %21, label %22, label %8, !dbg !10159, !llvm.loop !10174

22:                                               ; preds = %19, %3
  ret void, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10179, metadata !DIExpression()), !dbg !10180
  %2 = shl nuw i32 1, %0, !dbg !10181
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10184
  ret i32 %3, !dbg !10185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !10186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10190, metadata !DIExpression()), !dbg !10191
  %2 = shl nuw i32 1, %0, !dbg !10192
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10195
  ret void, !dbg !10196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10200, metadata !DIExpression()), !dbg !10201
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10206, metadata !DIExpression()), !dbg !10207
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10208
  %3 = and i32 %2, %0, !dbg !10208
  %4 = icmp eq i32 %3, %0, !dbg !10209
  %5 = zext i1 %4 to i32, !dbg !10209
  ret i32 %5, !dbg !10210
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10213, metadata !DIExpression()), !dbg !10214
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10215
  ret void, !dbg !10216
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10219, metadata !DIExpression()), !dbg !10220
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10221
  ret void, !dbg !10222
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10225, metadata !DIExpression()), !dbg !10226
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10227
  ret void, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10231, metadata !DIExpression()), !dbg !10232
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !10233
  ret void, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10237, metadata !DIExpression()), !dbg !10238
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !10239
  ret void, !dbg !10240
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10243, metadata !DIExpression()), !dbg !10244
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10245
  ret void, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10249, metadata !DIExpression()), !dbg !10250
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !10251
  ret void, !dbg !10252
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10255, metadata !DIExpression()), !dbg !10256
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !10257
  ret void, !dbg !10258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10261, metadata !DIExpression()), !dbg !10262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10263
  ret void, !dbg !10264
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10267, metadata !DIExpression()), !dbg !10268
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10274
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10275
  ret i32 0, !dbg !10276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !901 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !905, metadata !DIExpression()), !dbg !10277
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10278
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10280
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10282
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10284
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10286
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10288
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10290
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !10292
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !10294
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !10296
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !10298
  ret void, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10303, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.value(metadata i32 0, metadata !10304, metadata !DIExpression()), !dbg !10305
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10306
  %3 = load i32, i32* %2, align 4, !dbg !10306
  call void @llvm.dbg.value(metadata i32 %3, metadata !10304, metadata !DIExpression()), !dbg !10305
  %4 = shl nuw i32 1, %0, !dbg !10307
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10308
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10309
  ret void, !dbg !10310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10313, metadata !DIExpression()), !dbg !10314
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10315
  %3 = or i32 %2, %0, !dbg !10315
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10315
  ret void, !dbg !10316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !10317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10319, metadata !DIExpression()), !dbg !10320
  %2 = icmp slt i32 %0, 32, !dbg !10321
  br i1 %2, label %3, label %5, !dbg !10323

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10324
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10326
  br label %5, !dbg !10327

5:                                                ; preds = %1, %3
  ret void, !dbg !10328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10331, metadata !DIExpression()), !dbg !10332
  %2 = xor i32 %0, -1, !dbg !10333
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10333
  %4 = and i32 %3, %2, !dbg !10333
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10339, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %1, metadata !10340, metadata !DIExpression()), !dbg !10341
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10342

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10343
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10345
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10346
  br label %11, !dbg !10347

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10348
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10349
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10350
  br label %11, !dbg !10351

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10352
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10353
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10354
  br label %11, !dbg !10355

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10356
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10357
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10358
  br label %11, !dbg !10359

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10363, metadata !DIExpression()), !dbg !10364
  %2 = xor i32 %0, -1, !dbg !10365
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10365
  %4 = and i32 %3, %2, !dbg !10365
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10365
  ret void, !dbg !10366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10369, metadata !DIExpression()), !dbg !10370
  %2 = xor i32 %0, -1, !dbg !10371
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10371
  %4 = and i32 %3, %2, !dbg !10371
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10371
  ret void, !dbg !10372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10375, metadata !DIExpression()), !dbg !10376
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10377
  %3 = or i32 %2, %0, !dbg !10377
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10377
  ret void, !dbg !10378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10381, metadata !DIExpression()), !dbg !10382
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10383
  %3 = or i32 %2, %0, !dbg !10383
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10383
  ret void, !dbg !10384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10389, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10390, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i8* %2, metadata !10391, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !10392, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10394, metadata !DIExpression()), !dbg !10395
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10396
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10396
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10398
  br i1 %6, label %7, label %9, !dbg !10399

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10400
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10401
  store i8* %2, i8** %8, align 4, !dbg !10402
  br label %9, !dbg !10403

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10395
  ret i32 %10, !dbg !10404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10407, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !10408, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10409, metadata !DIExpression()), !dbg !10410
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10411
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10412
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10413
  store i8* null, i8** %3, align 4, !dbg !10414
  ret void, !dbg !10415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10416 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10418, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i8* %1, metadata !10419, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i8* %1, metadata !10420, metadata !DIExpression()), !dbg !10423
  %3 = bitcast i8* %1 to i32*, !dbg !10424
  %4 = load i32, i32* %3, align 4, !dbg !10424
  %5 = add i32 %4, -169, !dbg !10424
  %6 = icmp ult i32 %5, -121, !dbg !10424
  br i1 %6, label %15, label %7, !dbg !10426

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10427
  %9 = inttoptr i32 %8 to i32*, !dbg !10428
  call void @llvm.dbg.value(metadata i32* %9, metadata !10421, metadata !DIExpression()), !dbg !10423
  %10 = load volatile i32, i32* %9, align 4, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %10, metadata !10422, metadata !DIExpression()), !dbg !10423
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10430
  %12 = bitcast i8* %11 to i32*, !dbg !10430
  %13 = load i32, i32* %12, align 4, !dbg !10430
  %14 = or i32 %13, %10, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %14, metadata !10422, metadata !DIExpression()), !dbg !10423
  store volatile i32 %14, i32* %9, align 4, !dbg !10432
  br label %15, !dbg !10433

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10423
  ret i32 %16, !dbg !10434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10437, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i8* %1, metadata !10438, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i8* %1, metadata !10439, metadata !DIExpression()), !dbg !10442
  %3 = bitcast i8* %1 to i32*, !dbg !10443
  %4 = load i32, i32* %3, align 4, !dbg !10443
  %5 = add i32 %4, -169, !dbg !10443
  %6 = icmp ult i32 %5, -121, !dbg !10443
  br i1 %6, label %16, label %7, !dbg !10445

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10446
  %9 = inttoptr i32 %8 to i32*, !dbg !10447
  call void @llvm.dbg.value(metadata i32* %9, metadata !10440, metadata !DIExpression()), !dbg !10442
  %10 = load volatile i32, i32* %9, align 4, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %10, metadata !10441, metadata !DIExpression()), !dbg !10442
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10449
  %12 = bitcast i8* %11 to i32*, !dbg !10449
  %13 = load i32, i32* %12, align 4, !dbg !10449
  %14 = xor i32 %13, -1, !dbg !10450
  %15 = and i32 %10, %14, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %15, metadata !10441, metadata !DIExpression()), !dbg !10442
  store volatile i32 %15, i32* %9, align 4, !dbg !10452
  br label %16, !dbg !10453

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10442
  ret i32 %17, !dbg !10454
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10457, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i8* %1, metadata !10458, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i32* %2, metadata !10459, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i8* %1, metadata !10460, metadata !DIExpression()), !dbg !10465
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %4, metadata !10461, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i32 undef, metadata !10462, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i32 undef, metadata !10463, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i32 %4, metadata !10464, metadata !DIExpression()), !dbg !10465
  %5 = bitcast i8* %1 to i32*, !dbg !10467
  %6 = load i32, i32* %5, align 4, !dbg !10467
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10468

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %8, metadata !10462, metadata !DIExpression()), !dbg !10465
  br label %19, !dbg !10470

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %10, metadata !10463, metadata !DIExpression()), !dbg !10465
  br label %19, !dbg !10473

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10474
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !10475
  br label %19, !dbg !10476

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10477
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !10478
  br label %19, !dbg !10479

17:                                               ; preds = %3
  br label %19, !dbg !10480

18:                                               ; preds = %3
  br label %19, !dbg !10481

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10482
  br label %21, !dbg !10483

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10465
  ret i32 %22, !dbg !10483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10486, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %1, metadata !10487, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %2, metadata !10488, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %1, metadata !10489, metadata !DIExpression()), !dbg !10494
  %4 = bitcast i8* %1 to i32*, !dbg !10495
  %5 = load i32, i32* %4, align 4, !dbg !10495
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %6, metadata !10493, metadata !DIExpression()), !dbg !10494
  %7 = icmp slt i32 %6, 0, !dbg !10497
  br i1 %7, label %22, label %8, !dbg !10499

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10489, metadata !DIExpression()), !dbg !10494
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10500
  %10 = bitcast i8* %9 to i32*, !dbg !10500
  %11 = load i32, i32* %10, align 4, !dbg !10500
  %12 = lshr i32 %11, 16, !dbg !10500
  %13 = and i32 %12, 7, !dbg !10500
  %14 = lshr i32 %11, 8, !dbg !10501
  %15 = and i32 %14, 31, !dbg !10501
  %16 = shl i32 %13, %15, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %16, metadata !10492, metadata !DIExpression()), !dbg !10494
  %17 = and i32 %11, 255, !dbg !10503
  %18 = or i32 %17, 1073887232, !dbg !10504
  %19 = inttoptr i32 %18 to i32*, !dbg !10505
  call void @llvm.dbg.value(metadata i32* %19, metadata !10490, metadata !DIExpression()), !dbg !10494
  %20 = load volatile i32, i32* %19, align 4, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %20, metadata !10491, metadata !DIExpression()), !dbg !10494
  %21 = or i32 %16, %20, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %21, metadata !10491, metadata !DIExpression()), !dbg !10494
  store volatile i32 %21, i32* %19, align 4, !dbg !10508
  br label %22, !dbg !10509

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10494
  ret i32 %23, !dbg !10510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10516, metadata !DIExpression()), !dbg !10517
  %2 = add i32 %0, -1, !dbg !10518
  %3 = icmp ult i32 %2, 6, !dbg !10518
  br i1 %3, label %4, label %7, !dbg !10518

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10518
  %6 = load i32, i32* %5, align 4, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %6, metadata !10516, metadata !DIExpression()), !dbg !10517
  br label %7, !dbg !10519

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10517
  ret i32 %8, !dbg !10520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10525, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %1, metadata !10526, metadata !DIExpression()), !dbg !10527
  %3 = udiv i32 %0, %1, !dbg !10528
  ret i32 %3, !dbg !10529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10534, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata i32 12, metadata !10535, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata i32 336, metadata !10536, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata i32 %1, metadata !10537, metadata !DIExpression()), !dbg !10538
  %3 = mul i32 %0, 336, !dbg !10539
  %4 = mul nsw i32 %1, 12, !dbg !10540
  %5 = udiv i32 %3, %4, !dbg !10541
  ret i32 %5, !dbg !10542
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10543 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10545, metadata !DIExpression()), !dbg !10548
  tail call void @config_enable_default_clocks() #27, !dbg !10549
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10550
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10550
  %4 = lshr i32 %3, 4, !dbg !10550
  %5 = and i32 %4, 15, !dbg !10550
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10550
  %7 = load i8, i8* %6, align 1, !dbg !10550
  %8 = zext i8 %7 to i32, !dbg !10550
  %9 = lshr i32 %2, %8, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %9, metadata !10546, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10547, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10548
  %10 = icmp ult i32 %9, 168000000, !dbg !10551
  br i1 %10, label %11, label %13, !dbg !10553

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !10554
  br label %13, !dbg !10556

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10557
  tail call fastcc void @set_up_plls() #26, !dbg !10558
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10559
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10562
  br label %14, !dbg !10563

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10564
  %16 = icmp eq i32 %15, 8, !dbg !10565
  br i1 %16, label %17, label %14, !dbg !10563, !llvm.loop !10566

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10568
  br i1 %18, label %19, label %21, !dbg !10570

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !10571
  br label %21, !dbg !10573

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10574
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10575
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10576
  ret i32 0, !dbg !10577
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10578 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10580
  %2 = and i32 %1, 240, !dbg !10580
  ret i32 %2, !dbg !10581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10582 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !10583
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !10588
  br label %1, !dbg !10589

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !10590
  %3 = icmp eq i32 %2, 1, !dbg !10591
  br i1 %3, label %4, label %1, !dbg !10589, !llvm.loop !10592

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10594
  br label %5, !dbg !10597

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10598
  %7 = icmp eq i32 %6, 1, !dbg !10599
  br i1 %7, label %8, label %5, !dbg !10597, !llvm.loop !10600

8:                                                ; preds = %5
  ret void, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10603 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10604
  %2 = icmp eq i32 %1, 8, !dbg !10606
  br i1 %2, label %3, label %4, !dbg !10607

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10608
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10610
  br label %4, !dbg !10611

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10612
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10613
  %6 = and i32 %5, -196609, !dbg !10613
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10613
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10614
  %8 = and i32 %7, -251658241, !dbg !10614
  %9 = or i32 %8, 117440512, !dbg !10614
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10614
  tail call void @config_pll_sysclock() #27, !dbg !10615
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10616
  br label %10, !dbg !10617

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10618
  %12 = icmp eq i32 %11, 1, !dbg !10619
  br i1 %12, label %13, label %10, !dbg !10617, !llvm.loop !10620

13:                                               ; preds = %10
  ret void, !dbg !10622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10623 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10625, metadata !DIExpression()), !dbg !10626
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10627
  %2 = and i32 %1, -241, !dbg !10627
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10627
  ret void, !dbg !10628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10631, metadata !DIExpression()), !dbg !10632
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10633
  %3 = and i32 %2, -4, !dbg !10633
  %4 = or i32 %3, %0, !dbg !10633
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10633
  ret void, !dbg !10634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10635 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10636
  %2 = and i32 %1, 12, !dbg !10636
  ret i32 %2, !dbg !10637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10638 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10640, metadata !DIExpression()), !dbg !10641
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10642
  %2 = and i32 %1, -7169, !dbg !10642
  %3 = or i32 %2, 5120, !dbg !10642
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10642
  ret void, !dbg !10643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10644 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10646, metadata !DIExpression()), !dbg !10647
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10648
  %2 = and i32 %1, -57345, !dbg !10648
  %3 = or i32 %2, 32768, !dbg !10648
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10648
  ret void, !dbg !10649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10650 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10651
  %2 = icmp eq i32 %1, 1, !dbg !10653
  br i1 %2, label %7, label %3, !dbg !10654

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10655
  br label %4, !dbg !10657

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10658
  %6 = icmp eq i32 %5, 1, !dbg !10659
  br i1 %6, label %7, label %4, !dbg !10657, !llvm.loop !10660

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10662
  br label %8, !dbg !10663

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10664
  %10 = icmp eq i32 %9, 0, !dbg !10665
  br i1 %10, label %11, label %8, !dbg !10663, !llvm.loop !10666

11:                                               ; preds = %8
  ret void, !dbg !10668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10669 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10670
  %2 = and i32 %1, -16777217, !dbg !10670
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10670
  ret void, !dbg !10671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10672 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10673
  %2 = or i32 %1, 16777216, !dbg !10673
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10673
  ret void, !dbg !10674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10675 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10676
  %2 = lshr i32 %1, 25, !dbg !10677
  %3 = and i32 %2, 1, !dbg !10677
  ret i32 %3, !dbg !10678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10679 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10680
  %2 = lshr i32 %1, 1, !dbg !10681
  %3 = and i32 %2, 1, !dbg !10681
  ret i32 %3, !dbg !10682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10684
  %2 = or i32 %1, 1, !dbg !10684
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10684
  ret void, !dbg !10685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10686 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10687
  %2 = and i32 %1, -262145, !dbg !10687
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10687
  ret void, !dbg !10688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10689 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10690
  %2 = or i32 %1, 65536, !dbg !10690
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10690
  ret void, !dbg !10691
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10692 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10693
  %2 = lshr i32 %1, 17, !dbg !10694
  %3 = and i32 %2, 1, !dbg !10694
  ret i32 %3, !dbg !10695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10696 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10697
  %2 = or i32 %1, 1, !dbg !10697
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10697
  ret void, !dbg !10698
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10699 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10700
  %2 = lshr i32 %1, 1, !dbg !10701
  %3 = and i32 %2, 1, !dbg !10701
  ret i32 %3, !dbg !10702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10703 {
  ret i32 12000000, !dbg !10705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10709 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10710
  ret void, !dbg !10711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10712 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10716, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 12, metadata !10717, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 336, metadata !10718, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 0, metadata !10719, metadata !DIExpression()), !dbg !10720
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10721
  %2 = and i32 %1, -4227072, !dbg !10721
  %3 = or i32 %2, 4215820, !dbg !10721
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10721
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10722
  %5 = and i32 %4, -196609, !dbg !10722
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10722
  ret void, !dbg !10723
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10724 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10725
  ret void, !dbg !10726
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10727 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10730, metadata !DIExpression()), !dbg !10732
  %2 = bitcast i32* %1 to i8*, !dbg !10733
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10733
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10731, metadata !DIExpression()), !dbg !10734
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10735
  %4 = or i32 %3, 268435456, !dbg !10735
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10735
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10736
  %6 = and i32 %5, 268435456, !dbg !10736
  store volatile i32 %6, i32* %1, align 4, !dbg !10737
  %7 = load volatile i32, i32* %1, align 4, !dbg !10738
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10739
  ret void, !dbg !10739
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10742, metadata !DIExpression()), !dbg !10743
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10744
  br i1 %2, label %3, label %4, !dbg !10746

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10747
  br label %4, !dbg !10748

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10743
  ret i32 %5, !dbg !10749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10750 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10754, metadata !DIExpression()), !dbg !10755
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10756, !srcloc !10758
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10759
  ret i1 %1, !dbg !10760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10761 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10762
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10763
  ret void, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10767, metadata !DIExpression()), !dbg !10768
  %2 = icmp eq i32 %0, 10, !dbg !10769
  br i1 %2, label %3, label %4, !dbg !10771

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10772
  br label %4, !dbg !10774

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10775
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10776
  ret i32 %0, !dbg !10777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10778 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10781, metadata !DIExpression()), !dbg !10783
  call void @llvm.dbg.value(metadata i8 %0, metadata !10782, metadata !DIExpression()), !dbg !10783
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10784, !srcloc !10786
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10789 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10791, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata i8 %0, metadata !10792, metadata !DIExpression()), !dbg !10794
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10795
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10793, metadata !DIExpression()), !dbg !10794
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10796
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10796
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !10797
  ret void, !dbg !10798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10799 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10801, metadata !DIExpression()), !dbg !10802
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !10803
  ret i1 %1, !dbg !10804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10805 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10852, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10853, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10854, metadata !DIExpression()), !dbg !10855
  ret void, !dbg !10856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #20 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10859, metadata !DIExpression()), !dbg !10861
  call void @llvm.dbg.value(metadata i32 0, metadata !10860, metadata !DIExpression()), !dbg !10861
  call void @llvm.dbg.value(metadata i32 0, metadata !10860, metadata !DIExpression()), !dbg !10861
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10862
  call void @llvm.dbg.value(metadata i32 1, metadata !10860, metadata !DIExpression()), !dbg !10861
  call void @llvm.dbg.value(metadata i32 1, metadata !10860, metadata !DIExpression()), !dbg !10861
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10862
  call void @llvm.dbg.value(metadata i32 2, metadata !10860, metadata !DIExpression()), !dbg !10861
  ret i32 0, !dbg !10866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10867 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  ret i32 50, !dbg !10871
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10874, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10875, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %2, metadata !10876, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %3, metadata !10877, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %4, metadata !10878, metadata !DIExpression()), !dbg !10882
  %6 = icmp eq i32 %2, 1, !dbg !10883
  br i1 %6, label %8, label %7, !dbg !10885

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !10886
  br label %70, !dbg !10892

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !10893
  %10 = load i16, i16* %9, align 2, !dbg !10893
  %11 = and i16 %10, 32, !dbg !10895
  %12 = icmp eq i16 %11, 0, !dbg !10895
  br i1 %12, label %13, label %14, !dbg !10896

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !10897
  br label %70, !dbg !10903

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !10904
  %16 = load i16, i16* %15, align 4, !dbg !10904
  %17 = icmp eq i16 %16, 16, !dbg !10906
  br i1 %17, label %19, label %18, !dbg !10907

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !10908
  br label %70, !dbg !10914

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !10915
  br i1 %20, label %21, label %37, !dbg !10917

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !10918

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10920
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10920
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !10922
  br label %53, !dbg !10923

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10924
  %27 = load i32, i32* %26, align 4, !dbg !10924
  %28 = icmp eq i32 %27, 32, !dbg !10926
  br i1 %28, label %30, label %29, !dbg !10927

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10928
  br label %70, !dbg !10934

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10935
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10935
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !10936
  br label %53, !dbg !10937

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10938
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10938
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !10939
  br label %53, !dbg !10940

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10941
  br label %70, !dbg !10946

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !10947

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10949
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10949
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !10951
  br label %53, !dbg !10952

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10953
  %43 = load i32, i32* %42, align 4, !dbg !10953
  %44 = icmp eq i32 %43, 32, !dbg !10955
  br i1 %44, label %46, label %45, !dbg !10956

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10957
  br label %70, !dbg !10963

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10964
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10964
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !10965
  br label %53, !dbg !10966

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10967
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10967
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !10968
  br label %53, !dbg !10969

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10970
  br label %70, !dbg !10975

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !10976
  store i32 %3, i32* %54, align 4, !dbg !10977
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %55, metadata !10881, metadata !DIExpression()), !dbg !10882
  %56 = icmp eq i32 %55, 2, !dbg !10979
  br i1 %56, label %57, label %58, !dbg !10981

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !10982
  br label %70, !dbg !10988

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !10989
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !10879, metadata !DIExpression()), !dbg !10882
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !10990
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !10992
  %62 = load i8*, i8** %61, align 4, !dbg !10992
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !10993
  %64 = icmp eq i32 %63, 0, !dbg !10994
  br i1 %64, label %65, label %67, !dbg !10995

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !10996
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !11002
  store i32 0, i32* %66, align 4, !dbg !11003
  br label %70, !dbg !11004

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11005
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !11006
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !11006
  br label %70, !dbg !11007

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !10882
  ret i32 %71, !dbg !11008
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !11009 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11011, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11012, metadata !DIExpression()), !dbg !11014
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11015
  %4 = load i8*, i8** %3, align 4, !dbg !11015
  call void @llvm.dbg.value(metadata i8* %4, metadata !11013, metadata !DIExpression()), !dbg !11014
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !11016
  %6 = bitcast i8* %4 to i32*, !dbg !11017
  store i32 0, i32* %6, align 4, !dbg !11018
  ret i32 0, !dbg !11019
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11020 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11022, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11023, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i8* %2, metadata !11024, metadata !DIExpression()), !dbg !11026
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11027
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !11027
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !11027
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !11025, metadata !DIExpression()), !dbg !11026
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11028
  %8 = load i8*, i8** %7, align 4, !dbg !11028
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11030
  %10 = load i32, i32* %9, align 4, !dbg !11030
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11031
  %12 = load i8*, i8** %11, align 4, !dbg !11031
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11032
  %14 = load i32, i32* %13, align 4, !dbg !11032
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11033
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !11034
  %17 = icmp eq i32 %16, 0, !dbg !11035
  br i1 %17, label %18, label %19, !dbg !11036

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !11037
  br label %22, !dbg !11043

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11044
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11045
  store i32 %20, i32* %21, align 4, !dbg !11046
  br label %22, !dbg !11047

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !11026
  ret i32 %23, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11049 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11051, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11052, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i8* %2, metadata !11053, metadata !DIExpression()), !dbg !11057
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11058
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11058
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11058
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11054, metadata !DIExpression()), !dbg !11057
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11059
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11059
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11055, metadata !DIExpression()), !dbg !11060
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11060
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11061
  %10 = load i16, i16* %9, align 4, !dbg !11061
  %11 = zext i16 %10 to i32, !dbg !11062
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11063
  %13 = load i32, i32* %12, align 4, !dbg !11063
  %14 = lshr i32 %13, 3, !dbg !11064
  %15 = sub nsw i32 %11, %14, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %15, metadata !11056, metadata !DIExpression()), !dbg !11057
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11066
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11067
  %18 = load i8*, i8** %17, align 4, !dbg !11067
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11069
  %20 = load i32, i32* %19, align 4, !dbg !11069
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11070
  %22 = load i8*, i8** %21, align 4, !dbg !11070
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11071
  %24 = load i32, i32* %23, align 4, !dbg !11071
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11072
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11073
  %27 = icmp eq i32 %26, 0, !dbg !11074
  br i1 %27, label %28, label %29, !dbg !11075

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11076
  br label %32, !dbg !11082

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11083
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11084
  store i32 %30, i32* %31, align 4, !dbg !11085
  br label %32, !dbg !11086

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11057
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11087
  ret i32 %33, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11088 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11090, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11091, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i8* %2, metadata !11092, metadata !DIExpression()), !dbg !11105
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11106
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11106
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11093, metadata !DIExpression()), !dbg !11107
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11108
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11108
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11108
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11101, metadata !DIExpression()), !dbg !11105
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11109
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11110
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11102, metadata !DIExpression()), !dbg !11105
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11111
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11111
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11104, metadata !DIExpression()), !dbg !11105
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11112
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11114
  %15 = load i16, i16* %14, align 2, !dbg !11114
  %16 = zext i16 %15 to i32, !dbg !11115
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11116
  %18 = load i16, i16* %17, align 2, !dbg !11116
  %19 = zext i16 %18 to i32, !dbg !11117
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11118
  %21 = icmp eq i32 %20, 0, !dbg !11119
  br i1 %21, label %22, label %23, !dbg !11120

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11121
  br label %56, !dbg !11127

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11128
  %25 = load i8*, i8** %24, align 4, !dbg !11128
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11130
  %27 = load i32, i32* %26, align 4, !dbg !11130
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11131
  %29 = load i8*, i8** %28, align 4, !dbg !11131
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11132
  %31 = load i32, i32* %30, align 4, !dbg !11132
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11133
  %33 = load i8*, i8** %32, align 4, !dbg !11133
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11134
  %35 = load i32, i32* %34, align 4, !dbg !11134
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11135
  %37 = icmp eq i32 %36, 0, !dbg !11136
  br i1 %37, label %38, label %39, !dbg !11137

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11138
  br label %56, !dbg !11144

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11145
  %41 = load i8*, i8** %40, align 4, !dbg !11145
  %42 = icmp eq i8* %41, null, !dbg !11147
  br i1 %42, label %50, label %43, !dbg !11148

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11149
  %45 = load i32, i32* %34, align 4, !dbg !11151
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11152
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11153
  %48 = load i32, i32* %47, align 4, !dbg !11153
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11154
  br label %50, !dbg !11155

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11156
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11157
  %53 = load i32, i32* %52, align 4, !dbg !11157
  %54 = add i32 %53, %51, !dbg !11158
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11159
  store i32 %54, i32* %55, align 4, !dbg !11160
  br label %56, !dbg !11161

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11105
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11162
  ret i32 %57, !dbg !11162
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11165, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11166, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i8* %2, metadata !11167, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11168, metadata !DIExpression()), !dbg !11169
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11170
  %5 = load i8*, i8** %4, align 4, !dbg !11170
  %6 = icmp eq i8* %5, %2, !dbg !11172
  br i1 %6, label %8, label %7, !dbg !11173

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11174
  br label %27, !dbg !11180

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11181
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11181
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11181
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11168, metadata !DIExpression()), !dbg !11169
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11182
  %13 = load i8*, i8** %12, align 4, !dbg !11182
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11184
  %15 = load i32, i32* %14, align 4, !dbg !11184
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11185
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11186
  %18 = load i32, i32* %17, align 4, !dbg !11186
  %19 = add nsw i32 %18, -16, !dbg !11187
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11188
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11189
  %22 = icmp eq i32 %21, 0, !dbg !11190
  br i1 %22, label %23, label %24, !dbg !11191

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11192
  br label %27, !dbg !11198

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11199
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11200
  store i32 %25, i32* %26, align 4, !dbg !11201
  br label %27, !dbg !11202

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11169
  ret i32 %28, !dbg !11203
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11204 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11206, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11207, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i8* %2, metadata !11208, metadata !DIExpression()), !dbg !11213
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11214
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11214
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11209, metadata !DIExpression()), !dbg !11215
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11216
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11216
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11216
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11210, metadata !DIExpression()), !dbg !11213
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11217
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11218
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11211, metadata !DIExpression()), !dbg !11213
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11219
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11219
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11212, metadata !DIExpression()), !dbg !11213
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11220
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11222
  %15 = load i16, i16* %14, align 2, !dbg !11222
  %16 = zext i16 %15 to i32, !dbg !11223
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11224
  %18 = load i16, i16* %17, align 2, !dbg !11224
  %19 = zext i16 %18 to i32, !dbg !11225
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11226
  %21 = icmp eq i32 %20, 0, !dbg !11227
  br i1 %21, label %22, label %23, !dbg !11228

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11229
  br label %54, !dbg !11235

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11236
  %25 = load i8*, i8** %24, align 4, !dbg !11236
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11238
  %27 = load i8*, i8** %26, align 4, !dbg !11238
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11239
  %29 = load i32, i32* %28, align 4, !dbg !11239
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11240
  %31 = icmp eq i8* %25, %30, !dbg !11241
  br i1 %31, label %33, label %32, !dbg !11242

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11243
  br label %54, !dbg !11249

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11250
  %35 = load i8*, i8** %34, align 4, !dbg !11250
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11252
  %37 = load i32, i32* %36, align 4, !dbg !11252
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11253
  %39 = load i8*, i8** %38, align 4, !dbg !11253
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11254
  %41 = load i32, i32* %40, align 4, !dbg !11254
  %42 = load i16, i16* %17, align 2, !dbg !11255
  %43 = zext i16 %42 to i32, !dbg !11256
  %44 = add nsw i32 %29, %43, !dbg !11257
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11258
  %46 = icmp eq i32 %45, 0, !dbg !11259
  br i1 %46, label %47, label %48, !dbg !11260

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11261
  br label %54, !dbg !11267

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11268
  %50 = load i16, i16* %17, align 2, !dbg !11269
  %51 = zext i16 %50 to i32, !dbg !11270
  %52 = add nsw i32 %49, %51, !dbg !11271
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11272
  store i32 %52, i32* %53, align 4, !dbg !11273
  br label %54, !dbg !11274

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11213
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11275
  ret i32 %55, !dbg !11275
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11276 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11278, metadata !DIExpression()), !dbg !11279
  br label %1, !dbg !11280

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11278, metadata !DIExpression()), !dbg !11279
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11282
  %5 = load i32, i32* %4, align 4, !dbg !11282
  %6 = icmp eq i32 %5, 0, !dbg !11286
  br i1 %6, label %7, label %8, !dbg !11287

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11288
  br label %9, !dbg !11290

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11278, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11279
  br i1 %2, label %1, label %9, !dbg !11280, !llvm.loop !11291

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11293
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11294 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11296, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i8 %1, metadata !11297, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i32 %2, metadata !11298, metadata !DIExpression()), !dbg !11301
  %5 = bitcast i32* %4 to i8*, !dbg !11302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11302
  call void @llvm.dbg.value(metadata i32* %4, metadata !11300, metadata !DIExpression(DW_OP_deref)), !dbg !11301
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11303
  call void @llvm.dbg.value(metadata i32 %6, metadata !11299, metadata !DIExpression()), !dbg !11301
  %7 = icmp eq i32 %6, 0, !dbg !11304
  br i1 %7, label %8, label %31, !dbg !11306

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11299, metadata !DIExpression()), !dbg !11301
  %9 = and i32 %2, 131072, !dbg !11307
  %10 = icmp eq i32 %9, 0, !dbg !11309
  br i1 %10, label %28, label %11, !dbg !11310

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11311
  %13 = icmp eq i32 %12, 0, !dbg !11314
  br i1 %13, label %18, label %14, !dbg !11315

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11316
  %16 = shl nuw i32 1, %15, !dbg !11316
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11318
  br label %25, !dbg !11319

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11320
  %20 = icmp eq i32 %19, 0, !dbg !11322
  %21 = zext i8 %1 to i32, !dbg !11301
  br i1 %20, label %25, label %22, !dbg !11323

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11324
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11326
  br label %25, !dbg !11327

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11328
  %27 = load i32, i32* %4, align 4, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %30, metadata !11300, metadata !DIExpression()), !dbg !11301
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11330
  br label %31, !dbg !11331

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11328
  %30 = load i32, i32* %4, align 4, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %30, metadata !11300, metadata !DIExpression()), !dbg !11301
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11330
  call void @llvm.dbg.value(metadata i32 0, metadata !11299, metadata !DIExpression()), !dbg !11301
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11332
  ret i32 %6, !dbg !11332
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11333 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11337, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.value(metadata i32* %1, metadata !11338, metadata !DIExpression()), !dbg !11342
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11343
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11343
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11343
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11339, metadata !DIExpression()), !dbg !11342
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11344
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11344
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11344
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11341, metadata !DIExpression()), !dbg !11342
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11345
  store i32 %9, i32* %1, align 4, !dbg !11346
  ret i32 0, !dbg !11347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !11348 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11350, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 %1, metadata !11351, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 %2, metadata !11352, metadata !DIExpression()), !dbg !11356
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11357
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11357
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11357
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11353, metadata !DIExpression()), !dbg !11356
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11358
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11358
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11358
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11354, metadata !DIExpression()), !dbg !11356
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11359
  call void @llvm.dbg.value(metadata i32 %10, metadata !11355, metadata !DIExpression()), !dbg !11356
  %11 = xor i32 %1, -1, !dbg !11360
  %12 = and i32 %10, %11, !dbg !11361
  %13 = and i32 %2, %1, !dbg !11362
  %14 = or i32 %12, %13, !dbg !11363
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11364
  ret i32 0, !dbg !11365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11368, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.value(metadata i32 %1, metadata !11369, metadata !DIExpression()), !dbg !11372
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11373
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11373
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11373
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11370, metadata !DIExpression()), !dbg !11372
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11374
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11374
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11374
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11371, metadata !DIExpression()), !dbg !11372
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11375
  store volatile i32 %1, i32* %9, align 4, !dbg !11375
  ret i32 0, !dbg !11376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11379, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata i32 %1, metadata !11380, metadata !DIExpression()), !dbg !11383
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11384
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11384
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11384
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11381, metadata !DIExpression()), !dbg !11383
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11385
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11385
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11385
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11382, metadata !DIExpression()), !dbg !11383
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11386
  ret i32 0, !dbg !11387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11390, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i32 %1, metadata !11391, metadata !DIExpression()), !dbg !11394
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11395
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11395
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11395
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11392, metadata !DIExpression()), !dbg !11394
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11396
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11396
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11396
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11393, metadata !DIExpression()), !dbg !11394
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11397
  %10 = load volatile i32, i32* %9, align 4, !dbg !11397
  %11 = xor i32 %10, %1, !dbg !11397
  store volatile i32 %11, i32* %9, align 4, !dbg !11397
  ret i32 0, !dbg !11398
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11399 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11401, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i8 %1, metadata !11402, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 %2, metadata !11403, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 %3, metadata !11404, metadata !DIExpression()), !dbg !11411
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11412
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11412
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11412
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11405, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i8* undef, metadata !11406, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 0, metadata !11408, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 0, metadata !11409, metadata !DIExpression()), !dbg !11411
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11413

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11414
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11418
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11419
  %12 = load i32, i32* %11, align 4, !dbg !11419
  %13 = icmp eq i32 %10, %12, !dbg !11420
  br i1 %13, label %14, label %29, !dbg !11421

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11422
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11424
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11425
  br label %29, !dbg !11426

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11427
  %17 = load i8*, i8** %16, align 4, !dbg !11427
  call void @llvm.dbg.value(metadata i8* %17, metadata !11406, metadata !DIExpression()), !dbg !11411
  %18 = zext i8 %1 to i32, !dbg !11428
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11430
  %20 = icmp eq i32 %19, 0, !dbg !11431
  br i1 %20, label %21, label %29, !dbg !11432

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11433
  %23 = load i32, i32* %22, align 4, !dbg !11433
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11434
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11435

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11408, metadata !DIExpression()), !dbg !11411
  br label %27, !dbg !11436

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11408, metadata !DIExpression()), !dbg !11411
  br label %27, !dbg !11438

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11408, metadata !DIExpression()), !dbg !11411
  br label %27, !dbg !11439

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11411
  call void @llvm.dbg.value(metadata i32 %28, metadata !11408, metadata !DIExpression()), !dbg !11411
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11440
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11441
  br label %29, !dbg !11441

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11411
  call void @llvm.dbg.value(metadata i32 %30, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.label(metadata !11410), !dbg !11442
  ret i32 %30, !dbg !11443
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11446, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11447, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i1 %2, metadata !11448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11450
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11451
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11451
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11451
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11449, metadata !DIExpression()), !dbg !11450
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11452
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11453
  ret i32 %8, !dbg !11454
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11455 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11461, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11462, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i1 %2, metadata !11463, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11464
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11465
  br i1 %4, label %10, label %5, !dbg !11467

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11468
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11471
  %8 = or i1 %7, %2, !dbg !11472
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11472
  br i1 %2, label %11, label %13, !dbg !11472

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11473

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11474
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11477
  br label %13, !dbg !11478

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11464
  ret i32 %14, !dbg !11479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11486
  %3 = icmp eq %struct._snode* %2, null, !dbg !11486
  ret i1 %3, !dbg !11486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11491, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11493, metadata !DIExpression()), !dbg !11495
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11496
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11494, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11493, metadata !DIExpression()), !dbg !11495
  %4 = icmp eq %struct._snode* %3, null, !dbg !11498
  br i1 %4, label %15, label %5, !dbg !11496

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11494, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11493, metadata !DIExpression()), !dbg !11495
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11500
  br i1 %6, label %9, label %11, !dbg !11503

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11494, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11493, metadata !DIExpression()), !dbg !11495
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11500
  br i1 %8, label %9, label %11, !dbg !11503, !llvm.loop !11504

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11505
  br label %15, !dbg !11505

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11494, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11493, metadata !DIExpression()), !dbg !11495
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11498
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11494, metadata !DIExpression()), !dbg !11495
  %14 = icmp eq %struct._snode* %13, null, !dbg !11498
  br i1 %14, label %15, label %7, !dbg !11496, !llvm.loop !11504

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11508 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11512, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11513, metadata !DIExpression()), !dbg !11514
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11515
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11515
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11515
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11516
  %5 = icmp eq %struct._snode* %4, null, !dbg !11516
  br i1 %5, label %6, label %8, !dbg !11515

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11518
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11518
  br label %8, !dbg !11518

8:                                                ; preds = %6, %2
  ret void, !dbg !11515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11520 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11524, metadata !DIExpression()), !dbg !11525
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11526
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11526
  ret %struct._snode* %3, !dbg !11527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11528 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11532, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11533, metadata !DIExpression()), !dbg !11534
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11535
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11536
  ret void, !dbg !11537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11540, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11541, metadata !DIExpression()), !dbg !11542
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11543
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11544
  ret void, !dbg !11545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11548, metadata !DIExpression()), !dbg !11549
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11550
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11550
  ret %struct._snode* %3, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11554, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11555, metadata !DIExpression()), !dbg !11556
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11557
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11558
  ret void, !dbg !11559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11560 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11564, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11565, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11566, metadata !DIExpression()), !dbg !11567
  %4 = icmp eq %struct._snode* %1, null, !dbg !11568
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11570
  br i1 %4, label %6, label %11, !dbg !11571

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11572
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11574
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11574
  br i1 %8, label %9, label %15, !dbg !11572

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11576
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11576
  br label %15, !dbg !11576

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11578
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11580
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11580
  br i1 %13, label %14, label %15, !dbg !11578

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11582
  br label %15, !dbg !11582

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11571
  ret void, !dbg !11571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11584 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11588, metadata !DIExpression()), !dbg !11589
  %2 = icmp eq %struct._snode* %0, null, !dbg !11590
  br i1 %2, label %5, label %3, !dbg !11590

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11590
  br label %5, !dbg !11590

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11590
  ret %struct._snode* %6, !dbg !11590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11591 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11593, metadata !DIExpression()), !dbg !11594
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11595
  ret %struct._snode* %2, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11596 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11598, metadata !DIExpression()), !dbg !11599
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11600
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11600
  ret %struct._snode* %3, !dbg !11601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11604, metadata !DIExpression()), !dbg !11607
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11608, !range !11609
  call void @llvm.dbg.value(metadata i32 %2, metadata !11605, metadata !DIExpression()), !dbg !11607
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %3, metadata !11606, metadata !DIExpression()), !dbg !11607
  ret i32 %3, !dbg !11611
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11614, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i8* %1, metadata !11615, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i8* %1, metadata !11616, metadata !DIExpression()), !dbg !11617
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11618
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11618
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11619
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11619
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11619
  %8 = shl nuw i32 1, %0, !dbg !11620
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11621
  ret void, !dbg !11622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11623 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11627, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.value(metadata i32 %1, metadata !11628, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11629, metadata !DIExpression()), !dbg !11633
  %4 = bitcast i64* %3 to i8*, !dbg !11634
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11634
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11631, metadata !DIExpression()), !dbg !11633
  store i64 70368744177732, i64* %3, align 8, !dbg !11635
  call void @llvm.dbg.value(metadata i64* %3, metadata !11631, metadata !DIExpression(DW_OP_deref)), !dbg !11633
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11636
  call void @llvm.dbg.value(metadata i32 %5, metadata !11632, metadata !DIExpression()), !dbg !11633
  %6 = icmp eq i32 %5, 0, !dbg !11637
  br i1 %6, label %7, label %8, !dbg !11639

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11640
  br label %8, !dbg !11641

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11642
  ret void, !dbg !11642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11643 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11645, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.value(metadata i8* %0, metadata !11646, metadata !DIExpression()), !dbg !11648
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11649
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11647, metadata !DIExpression()), !dbg !11648
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11650
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11650
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !11651
  ret i32 %5, !dbg !11652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11655, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 %1, metadata !11656, metadata !DIExpression()), !dbg !11658
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %3, metadata !11657, metadata !DIExpression()), !dbg !11658
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11660
  ret void, !dbg !11661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11666, metadata !DIExpression()), !dbg !11667
  %2 = sdiv i32 %0, 4, !dbg !11668
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11669
  %6 = add nsw i32 %5, 16, !dbg !11670
  %7 = shl i32 15, %6, !dbg !11671
  %8 = or i32 %7, %2, !dbg !11672
  ret i32 %8, !dbg !11673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11678, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.value(metadata i32 %1, metadata !11679, metadata !DIExpression()), !dbg !11680
  %3 = and i32 %1, 255, !dbg !11681
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11681
  %5 = load volatile i32, i32* %4, align 4, !dbg !11681
  %6 = lshr i32 %1, 16, !dbg !11681
  %7 = xor i32 %6, -1, !dbg !11681
  %8 = and i32 %5, %7, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %6, metadata !11682, metadata !DIExpression()) #25, !dbg !11686
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11688, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %9, metadata !11685, metadata !DIExpression()) #25, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %9, metadata !11690, metadata !DIExpression()) #25, !dbg !11695
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11697, !range !9461
  %11 = shl i32 %0, %10, !dbg !11681
  %12 = or i32 %11, %8, !dbg !11681
  store volatile i32 %12, i32* %4, align 4, !dbg !11681
  ret void, !dbg !11698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11699 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11703, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11704, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata i32 %2, metadata !11705, metadata !DIExpression()), !dbg !11708
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11709
  %5 = icmp eq %struct._snode* %4, null, !dbg !11709
  br i1 %5, label %21, label %6, !dbg !11709

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11711
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11707, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11706, metadata !DIExpression()), !dbg !11708
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11712
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11712
  %11 = load i32, i32* %10, align 4, !dbg !11712
  %12 = and i32 %11, %2, !dbg !11716
  %13 = icmp eq i32 %12, 0, !dbg !11716
  br i1 %13, label %19, label %14, !dbg !11717

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11706, metadata !DIExpression()), !dbg !11708
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11718
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11718
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11718
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11720
  br label %19, !dbg !11721

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11706, metadata !DIExpression()), !dbg !11708
  %20 = icmp eq %struct._snode* %8, null, !dbg !11722
  br i1 %20, label %21, label %6, !dbg !11722

21:                                               ; preds = %19, %3
  ret void, !dbg !11723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %2 = and i32 %0, 255, !dbg !11728
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11728
  %4 = load volatile i32, i32* %3, align 4, !dbg !11728
  %5 = lshr i32 %0, 16, !dbg !11728
  %6 = and i32 %4, %5, !dbg !11728
  call void @llvm.dbg.value(metadata i32 %5, metadata !11682, metadata !DIExpression()) #25, !dbg !11729
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11731, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %7, metadata !11685, metadata !DIExpression()) #25, !dbg !11729
  call void @llvm.dbg.value(metadata i32 %7, metadata !11690, metadata !DIExpression()) #25, !dbg !11732
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11734, !range !9461
  %9 = lshr i32 %6, %8, !dbg !11735
  ret i32 %9, !dbg !11736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11737 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11742, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 %1, metadata !11743, metadata !DIExpression()), !dbg !11744
  %3 = shl i32 %1, 16, !dbg !11745
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11745
  store volatile i32 %3, i32* %4, align 4, !dbg !11745
  ret void, !dbg !11746
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11747 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11751, metadata !DIExpression()), !dbg !11752
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11753
  %3 = load volatile i32, i32* %2, align 4, !dbg !11753
  ret i32 %3, !dbg !11754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11755 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11757, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.value(metadata i32 %1, metadata !11758, metadata !DIExpression()), !dbg !11759
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11760
  store volatile i32 %1, i32* %3, align 4, !dbg !11760
  ret void, !dbg !11761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11762 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11764, metadata !DIExpression()), !dbg !11765
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11766
  %3 = load volatile i32, i32* %2, align 4, !dbg !11766
  ret i32 %3, !dbg !11767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11772, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i32* %1, metadata !11773, metadata !DIExpression()), !dbg !11774
  %3 = and i32 %0, 131072, !dbg !11775
  %4 = icmp eq i32 %3, 0, !dbg !11777
  br i1 %4, label %22, label %5, !dbg !11778

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11779
  %6 = and i32 %0, 2, !dbg !11781
  %7 = icmp eq i32 %6, 0, !dbg !11783
  br i1 %7, label %11, label %8, !dbg !11784

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11785
  %10 = icmp eq i32 %9, 0, !dbg !11785
  br i1 %10, label %33, label %11, !dbg !11788

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11789
  store i32 %12, i32* %1, align 4, !dbg !11789
  %13 = and i32 %0, 16, !dbg !11790
  %14 = icmp eq i32 %13, 0, !dbg !11792
  br i1 %14, label %17, label %15, !dbg !11793

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11794
  br label %31, !dbg !11796

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11797
  %19 = icmp eq i32 %18, 0, !dbg !11799
  br i1 %19, label %33, label %20, !dbg !11800

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11801
  br label %31, !dbg !11803

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11804
  %24 = icmp eq i32 %23, 0, !dbg !11806
  br i1 %24, label %31, label %25, !dbg !11807

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11808
  %27 = icmp eq i32 %26, 0, !dbg !11811
  br i1 %27, label %28, label %31, !dbg !11812

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11813
  br label %33, !dbg !11814

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11774
  ret i32 %34, !dbg !11814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11819, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %1, metadata !11820, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %2, metadata !11821, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %3, metadata !11822, metadata !DIExpression()), !dbg !11830
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11831
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11831
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11831
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11823, metadata !DIExpression()), !dbg !11830
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11832
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11832
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11832
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11824, metadata !DIExpression()), !dbg !11830
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %11, metadata !11825, metadata !DIExpression()), !dbg !11830
  %12 = and i32 %2, 48, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %12, metadata !11826, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %2, metadata !11827, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %2, metadata !11828, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %2, metadata !11829, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11830
  %13 = lshr i32 %2, 6, !dbg !11835
  %14 = and i32 %13, 1, !dbg !11835
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11836
  %15 = lshr i32 %2, 7, !dbg !11837
  %16 = and i32 %15, 3, !dbg !11837
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11838
  %17 = lshr i32 %2, 9, !dbg !11839
  %18 = and i32 %17, 3, !dbg !11839
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11840
  %19 = icmp eq i32 %12, 32, !dbg !11841
  br i1 %19, label %20, label %24, !dbg !11843

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11844
  br i1 %21, label %22, label %23, !dbg !11847

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11848
  br label %24, !dbg !11850

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11851
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11853
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11854
  ret void, !dbg !11855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11858, metadata !DIExpression()), !dbg !11860
  %2 = shl nuw i32 1, %0, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %2, metadata !11859, metadata !DIExpression()), !dbg !11860
  ret i32 %2, !dbg !11862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11863 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11867, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i32 %1, metadata !11868, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i32 %2, metadata !11869, metadata !DIExpression()), !dbg !11870
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11871
  %5 = load volatile i32, i32* %4, align 4, !dbg !11871
  %6 = xor i32 %1, -1, !dbg !11871
  %7 = and i32 %5, %6, !dbg !11871
  %8 = mul i32 %2, %1, !dbg !11871
  %9 = or i32 %7, %8, !dbg !11871
  store volatile i32 %9, i32* %4, align 4, !dbg !11871
  ret void, !dbg !11872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11875, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 %1, metadata !11876, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 %2, metadata !11877, metadata !DIExpression()), !dbg !11878
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11879
  %5 = load volatile i32, i32* %4, align 4, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11880
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11882, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11883
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11885, !range !9461
  %8 = shl nuw nsw i32 %7, 1, !dbg !11879
  %9 = shl i32 3, %8, !dbg !11879
  %10 = xor i32 %9, -1, !dbg !11879
  %11 = and i32 %5, %10, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11886
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11886
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11888
  %12 = shl i32 %2, %8, !dbg !11879
  %13 = or i32 %11, %12, !dbg !11879
  store volatile i32 %13, i32* %4, align 4, !dbg !11879
  ret void, !dbg !11890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11891 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11893, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %1, metadata !11894, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %2, metadata !11895, metadata !DIExpression()), !dbg !11896
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11897
  %5 = load volatile i32, i32* %4, align 4, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11898
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11900, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11901
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11903, !range !9461
  %8 = shl nuw nsw i32 %7, 1, !dbg !11897
  %9 = shl i32 3, %8, !dbg !11897
  %10 = xor i32 %9, -1, !dbg !11897
  %11 = and i32 %5, %10, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11904
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11904
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11906
  %12 = shl i32 %2, %8, !dbg !11897
  %13 = or i32 %11, %12, !dbg !11897
  store volatile i32 %13, i32* %4, align 4, !dbg !11897
  ret void, !dbg !11908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11909 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11911, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.value(metadata i32 %1, metadata !11912, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.value(metadata i32 %2, metadata !11913, metadata !DIExpression()), !dbg !11914
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11915
  %5 = load volatile i32, i32* %4, align 4, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11916
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11918, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11916
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11919
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11921, !range !9461
  %8 = shl nuw nsw i32 %7, 2, !dbg !11915
  %9 = shl i32 15, %8, !dbg !11915
  %10 = xor i32 %9, -1, !dbg !11915
  %11 = and i32 %5, %10, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11924
  %12 = shl i32 %2, %8, !dbg !11915
  %13 = or i32 %11, %12, !dbg !11915
  store volatile i32 %13, i32* %4, align 4, !dbg !11915
  ret void, !dbg !11926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11927 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11929, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %1, metadata !11930, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %2, metadata !11931, metadata !DIExpression()), !dbg !11932
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11933
  %5 = load volatile i32, i32* %4, align 4, !dbg !11933
  %6 = lshr i32 %1, 8, !dbg !11933
  call void @llvm.dbg.value(metadata i32 %6, metadata !11682, metadata !DIExpression()) #25, !dbg !11934
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11936, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %7, metadata !11685, metadata !DIExpression()) #25, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %7, metadata !11690, metadata !DIExpression()) #25, !dbg !11937
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11939, !range !9461
  %9 = shl nuw nsw i32 %8, 2, !dbg !11933
  %10 = shl i32 15, %9, !dbg !11933
  %11 = xor i32 %10, -1, !dbg !11933
  %12 = and i32 %5, %11, !dbg !11933
  call void @llvm.dbg.value(metadata i32 %6, metadata !11682, metadata !DIExpression()) #25, !dbg !11940
  call void @llvm.dbg.value(metadata i32 %7, metadata !11685, metadata !DIExpression()) #25, !dbg !11940
  call void @llvm.dbg.value(metadata i32 %7, metadata !11690, metadata !DIExpression()) #25, !dbg !11942
  %13 = shl i32 %2, %9, !dbg !11933
  %14 = or i32 %12, %13, !dbg !11933
  store volatile i32 %14, i32* %4, align 4, !dbg !11933
  ret void, !dbg !11944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11945 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11947, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 %1, metadata !11948, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 %2, metadata !11949, metadata !DIExpression()), !dbg !11950
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11951
  %5 = load volatile i32, i32* %4, align 4, !dbg !11951
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11952
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11954, !srcloc !11689
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11952
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11955
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11957, !range !9461
  %8 = shl nuw nsw i32 %7, 1, !dbg !11951
  %9 = shl i32 3, %8, !dbg !11951
  %10 = xor i32 %9, -1, !dbg !11951
  %11 = and i32 %5, %10, !dbg !11951
  call void @llvm.dbg.value(metadata i32 %1, metadata !11682, metadata !DIExpression()) #25, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()) #25, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %6, metadata !11690, metadata !DIExpression()) #25, !dbg !11960
  %12 = shl i32 %2, %8, !dbg !11951
  %13 = or i32 %11, %12, !dbg !11951
  store volatile i32 %13, i32* %4, align 4, !dbg !11951
  ret void, !dbg !11962
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11965, metadata !DIExpression()), !dbg !11968
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11969
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11969
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11969
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11966, metadata !DIExpression()), !dbg !11968
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11970
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11971
  %6 = tail call fastcc zeroext i1 @device_is_ready.179() #26, !dbg !11972
  br i1 %6, label %7, label %11, !dbg !11974

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %8, metadata !11967, metadata !DIExpression()), !dbg !11968
  %9 = icmp slt i32 %8, 0, !dbg !11976
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11978
  br label %11, !dbg !11978

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11968
  ret i32 %12, !dbg !11979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.179() unnamed_addr #1 !dbg !11980 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11984, metadata !DIExpression()), !dbg !11985
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11986, !srcloc !11988
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.180() #26, !dbg !11989
  ret i1 %1, !dbg !11990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11995, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i8 1, metadata !11996, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11997, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 0, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11999, metadata !DIExpression()), !dbg !12000
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12001
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12001
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12001
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11997, metadata !DIExpression()), !dbg !12000
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12002
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12005
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !12006
  call void @llvm.dbg.value(metadata i32 %7, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 %7, metadata !11998, metadata !DIExpression()), !dbg !12000
  ret i32 %7, !dbg !12007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.180() unnamed_addr #1 !dbg !12008 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12010, metadata !DIExpression()), !dbg !12011
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !12012
  ret i1 %1, !dbg !12013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12018, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %1, metadata !12019, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %2, metadata !12020, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %3, metadata !12021, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 0, metadata !12022, metadata !DIExpression()), !dbg !12026
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !12027
  %5 = icmp eq i32 %3, 17, !dbg !12028
  br i1 %5, label %6, label %14, !dbg !12029

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %7, metadata !12023, metadata !DIExpression()), !dbg !12031
  %8 = icmp eq i32 %7, 0, !dbg !12032
  %9 = shl nuw i32 1, %1, !dbg !12034
  br i1 %8, label %12, label %10, !dbg !12035

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12036
  br label %14, !dbg !12038

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12039
  br label %14, !dbg !12042

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12043
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !12044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12046, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i8* %1, metadata !12047, metadata !DIExpression()), !dbg !12050
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12051
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12051
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12051
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12048, metadata !DIExpression()), !dbg !12050
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12052
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12052
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12054
  %9 = icmp eq i32 %8, 0, !dbg !12054
  br i1 %9, label %12, label %10, !dbg !12055

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12056
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12058
  br label %12, !dbg !12059

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12060
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12062
  %15 = icmp eq i32 %14, 0, !dbg !12062
  br i1 %15, label %19, label %16, !dbg !12063

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12064
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12065
  store i8 %18, i8* %1, align 1, !dbg !12066
  br label %19, !dbg !12067

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12050
  ret i32 %20, !dbg !12068
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12069 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12071, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i8 %1, metadata !12072, metadata !DIExpression()), !dbg !12075
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12076
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12076
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12076
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12073, metadata !DIExpression()), !dbg !12075
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12077

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12078
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12081
  %10 = icmp eq i32 %9, 0, !dbg !12081
  br i1 %10, label %18, label %11, !dbg !12082

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12083, !srcloc !12090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()) #25, !dbg !12091
  call void @llvm.dbg.value(metadata i32 undef, metadata !12087, metadata !DIExpression()) #25, !dbg !12091
  call void @llvm.dbg.value(metadata i32 undef, metadata !12074, metadata !DIExpression()), !dbg !12075
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12092
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12094
  %15 = icmp eq i32 %14, 0, !dbg !12094
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12083
  br i1 %15, label %17, label %19, !dbg !12095

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12086, metadata !DIExpression()) #25, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %16, metadata !12074, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata i32 undef, metadata !12096, metadata !DIExpression()) #25, !dbg !12099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12101, !srcloc !12102
  br label %18, !dbg !12103

18:                                               ; preds = %17, %7
  br label %7, !dbg !12078, !llvm.loop !12104

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12083
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12106
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %20, metadata !12096, metadata !DIExpression()) #25, !dbg !12108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12110, !srcloc !12102
  ret void, !dbg !12111
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !12112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12114, metadata !DIExpression()), !dbg !12117
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12118
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12118
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12118
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12115, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 0, metadata !12116, metadata !DIExpression()), !dbg !12117
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12119
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12119
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12121
  %8 = icmp ne i32 %7, 0, !dbg !12121
  %9 = zext i1 %8 to i32, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %9, metadata !12116, metadata !DIExpression()), !dbg !12117
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12123
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12125
  %12 = icmp eq i32 %11, 0, !dbg !12125
  %13 = or i32 %9, 2, !dbg !12126
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %14, metadata !12116, metadata !DIExpression()), !dbg !12117
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12127
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12129
  %17 = icmp eq i32 %16, 0, !dbg !12129
  %18 = or i32 %14, 4, !dbg !12130
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %19, metadata !12116, metadata !DIExpression()), !dbg !12117
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12131
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12133
  %22 = icmp eq i32 %21, 0, !dbg !12133
  %23 = or i32 %19, 8, !dbg !12134
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %24, metadata !12116, metadata !DIExpression()), !dbg !12117
  %25 = and i32 %24, 8, !dbg !12135
  %26 = icmp eq i32 %25, 0, !dbg !12135
  br i1 %26, label %29, label %27, !dbg !12137

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12138
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12140
  br label %29, !dbg !12141

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12142
  %31 = icmp eq i32 %30, 0, !dbg !12142
  br i1 %31, label %34, label %32, !dbg !12144

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12145
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12147
  br label %34, !dbg !12148

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12149
  %36 = icmp eq i32 %35, 0, !dbg !12149
  br i1 %36, label %39, label %37, !dbg !12151

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12152
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12154
  br label %39, !dbg !12155

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12156
  %41 = icmp eq i32 %40, 0, !dbg !12156
  br i1 %41, label %44, label %42, !dbg !12158

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12159
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12161
  br label %44, !dbg !12162

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12163
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12164
  ret i32 %24, !dbg !12165
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12168, metadata !DIExpression()), !dbg !12177
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12169, metadata !DIExpression()), !dbg !12177
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12178
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12178
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12178
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12170, metadata !DIExpression()), !dbg !12177
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12179
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12179
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12179
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12171, metadata !DIExpression()), !dbg !12177
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12180
  %10 = load i8, i8* %9, align 4, !dbg !12180
  %11 = zext i8 %10 to i32, !dbg !12181
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12182
  call void @llvm.dbg.value(metadata i32 %12, metadata !12173, metadata !DIExpression()), !dbg !12177
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12183
  %14 = load i8, i8* %13, align 1, !dbg !12183
  %15 = zext i8 %14 to i32, !dbg !12184
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12185
  call void @llvm.dbg.value(metadata i32 %16, metadata !12174, metadata !DIExpression()), !dbg !12177
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12186
  %18 = load i8, i8* %17, align 2, !dbg !12186
  %19 = zext i8 %18 to i32, !dbg !12187
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %20, metadata !12175, metadata !DIExpression()), !dbg !12177
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12189
  %22 = load i8, i8* %21, align 1, !dbg !12189
  %23 = zext i8 %22 to i32, !dbg !12190
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12191
  call void @llvm.dbg.value(metadata i32 %24, metadata !12176, metadata !DIExpression()), !dbg !12177
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12192

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12194
  br i1 %26, label %69, label %27, !dbg !12196

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12197

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12198
  br i1 %29, label %65, label %30, !dbg !12198

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12200
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12177
  br i1 %31, label %38, label %34, !dbg !12202

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12203
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !12203

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12206
  br i1 %37, label %38, label %69, !dbg !12207

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12208
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12209
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12210
  %41 = icmp eq i32 %12, %40, !dbg !12212
  br i1 %41, label %43, label %42, !dbg !12213

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12214
  br label %43, !dbg !12216

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12217
  %45 = icmp eq i32 %16, %44, !dbg !12219
  br i1 %45, label %47, label %46, !dbg !12220

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12221
  br label %47, !dbg !12223

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12224
  %49 = icmp eq i32 %20, %48, !dbg !12226
  br i1 %49, label %51, label %50, !dbg !12227

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12228
  br label %51, !dbg !12230

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12231
  %53 = icmp eq i32 %24, %52, !dbg !12233
  br i1 %53, label %55, label %54, !dbg !12234

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12235
  br label %55, !dbg !12237

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12238
  %57 = load i32, i32* %56, align 4, !dbg !12238
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12240
  %59 = load i32, i32* %58, align 4, !dbg !12240
  %60 = icmp eq i32 %57, %59, !dbg !12241
  br i1 %60, label %63, label %61, !dbg !12242

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12243
  %62 = load i32, i32* %56, align 4, !dbg !12245
  store i32 %62, i32* %58, align 4, !dbg !12246
  br label %63, !dbg !12247

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12248
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12249
  br label %69, !dbg !12250

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12198
  %67 = and i8 %66, 1, !dbg !12198
  %68 = icmp eq i8 %67, 0, !dbg !12198
  br i1 %68, label %30, label %69, !dbg !12198

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12177
  ret i32 %70, !dbg !12251
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12254, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12255, metadata !DIExpression()), !dbg !12257
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12258
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12258
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12258
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12256, metadata !DIExpression()), !dbg !12257
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12259
  %7 = load i32, i32* %6, align 4, !dbg !12259
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12260
  store i32 %7, i32* %8, align 4, !dbg !12261
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12262, !range !12263
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12264
  %11 = trunc i32 %10 to i8, !dbg !12264
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12265
  store i8 %11, i8* %12, align 4, !dbg !12266
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12267, !range !12268
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12269
  %15 = trunc i32 %14 to i8, !dbg !12269
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12270
  store i8 %15, i8* %16, align 1, !dbg !12271
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12272
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12273, !range !12263
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12274
  %20 = trunc i32 %19 to i8, !dbg !12274
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12275
  store i8 %20, i8* %21, align 2, !dbg !12276
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12277, !range !12278
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12279
  %24 = trunc i32 %23 to i8, !dbg !12279
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12280
  store i8 %24, i8* %25, align 1, !dbg !12281
  ret i32 0, !dbg !12282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12287, metadata !DIExpression()), !dbg !12289
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12290
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12290
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12290
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12288, metadata !DIExpression()), !dbg !12289
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12291
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12291
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12292
  ret i32 %7, !dbg !12293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12298, metadata !DIExpression()), !dbg !12299
  %2 = icmp eq i32 %0, 1024, !dbg !12300
  %3 = select i1 %2, i32 2, i32 0, !dbg !12300
  %4 = icmp eq i32 %0, 1536, !dbg !12300
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12300
  ret i32 %5, !dbg !12301
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12304, metadata !DIExpression()), !dbg !12306
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12307
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12307
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12307
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12305, metadata !DIExpression()), !dbg !12306
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12308
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12308
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12309
  ret i32 %7, !dbg !12310
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12315, metadata !DIExpression()), !dbg !12316
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12317
  %3 = icmp ult i32 %2, 4, !dbg !12317
  br i1 %3, label %4, label %7, !dbg !12317

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12317
  %6 = load i32, i32* %5, align 4, !dbg !12317
  br label %7, !dbg !12317

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12318
  ret i32 %8, !dbg !12320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12323, metadata !DIExpression()), !dbg !12325
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12326
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12326
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12326
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12324, metadata !DIExpression()), !dbg !12325
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12327
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12327
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12328
  ret i32 %7, !dbg !12329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12334, metadata !DIExpression()), !dbg !12336
  call void @llvm.dbg.value(metadata i32 %1, metadata !12335, metadata !DIExpression()), !dbg !12336
  %3 = icmp eq i32 %0, 4096, !dbg !12337
  %4 = icmp eq i32 %1, 0, !dbg !12337
  %5 = select i1 %4, i32 4, i32 3, !dbg !12337
  %6 = select i1 %4, i32 3, i32 2, !dbg !12337
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12337
  ret i32 %7, !dbg !12338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12339 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12341, metadata !DIExpression()), !dbg !12343
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12344
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12344
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12344
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12342, metadata !DIExpression()), !dbg !12343
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12345
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12345
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12346
  ret i32 %7, !dbg !12347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12352, metadata !DIExpression()), !dbg !12353
  %2 = icmp eq i32 %0, 768, !dbg !12354
  %3 = zext i1 %2 to i32, !dbg !12353
  ret i32 %3, !dbg !12356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12357 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12362, metadata !DIExpression()), !dbg !12363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12364
  %3 = load volatile i32, i32* %2, align 4, !dbg !12364
  %4 = and i32 %3, 768, !dbg !12364
  ret i32 %4, !dbg !12365
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12366 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12368, metadata !DIExpression()), !dbg !12369
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12370
  %3 = load volatile i32, i32* %2, align 4, !dbg !12370
  %4 = and i32 %3, 4096, !dbg !12370
  ret i32 %4, !dbg !12371
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12372 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12374, metadata !DIExpression()), !dbg !12375
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12376
  %3 = load volatile i32, i32* %2, align 4, !dbg !12376
  %4 = and i32 %3, 12288, !dbg !12376
  ret i32 %4, !dbg !12377
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12378 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12380, metadata !DIExpression()), !dbg !12381
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12382
  %3 = load volatile i32, i32* %2, align 4, !dbg !12382
  %4 = and i32 %3, 1536, !dbg !12382
  ret i32 %4, !dbg !12383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12388, metadata !DIExpression()), !dbg !12389
  %2 = icmp eq i32 %0, 2, !dbg !12390
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12390
  %4 = icmp eq i32 %0, 1, !dbg !12390
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12390
  ret i32 %5, !dbg !12391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12396, metadata !DIExpression()), !dbg !12397
  %2 = icmp ult i32 %0, 3, !dbg !12398
  br i1 %2, label %3, label %6, !dbg !12398

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12398
  %5 = load i32, i32* %4, align 4, !dbg !12398
  br label %6, !dbg !12398

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12399
  ret i32 %7, !dbg !12401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12406, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.value(metadata i32 %1, metadata !12407, metadata !DIExpression()), !dbg !12408
  %3 = icmp eq i32 %0, 4, !dbg !12409
  %4 = icmp eq i32 %1, 0, !dbg !12409
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12409
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12409
  ret i32 %6, !dbg !12410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12415, metadata !DIExpression()), !dbg !12416
  %2 = icmp eq i32 %0, 1, !dbg !12417
  %3 = select i1 %2, i32 768, i32 0, !dbg !12416
  ret i32 %3, !dbg !12419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12420 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12424, metadata !DIExpression()), !dbg !12425
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12426
  %3 = load volatile i32, i32* %2, align 4, !dbg !12426
  %4 = and i32 %3, -8193, !dbg !12426
  store volatile i32 %4, i32* %2, align 4, !dbg !12426
  ret void, !dbg !12427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12432, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.value(metadata i32 %1, metadata !12433, metadata !DIExpression()), !dbg !12435
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12436
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12436
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12436
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12434, metadata !DIExpression()), !dbg !12435
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12437
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12437
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12438
  ret void, !dbg !12439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12442, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 %1, metadata !12443, metadata !DIExpression()), !dbg !12445
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12446
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12446
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12446
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12444, metadata !DIExpression()), !dbg !12445
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12447
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12447
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12452, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.value(metadata i32 %1, metadata !12453, metadata !DIExpression()), !dbg !12455
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12456
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12456
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12454, metadata !DIExpression()), !dbg !12455
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12457
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12457
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12458
  ret void, !dbg !12459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12462, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 %1, metadata !12463, metadata !DIExpression()), !dbg !12465
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12466
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12466
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12466
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12464, metadata !DIExpression()), !dbg !12465
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12467
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12467
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12468
  ret void, !dbg !12469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12470 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12472, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 %1, metadata !12473, metadata !DIExpression()), !dbg !12477
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12478
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12478
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12478
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12474, metadata !DIExpression()), !dbg !12477
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12479
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12479
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12475, metadata !DIExpression()), !dbg !12477
  %10 = bitcast i32* %3 to i8*, !dbg !12480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12480
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12481
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12481
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12485
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12485
  %15 = load i8*, i8** %14, align 4, !dbg !12485
  call void @llvm.dbg.value(metadata i32* %3, metadata !12476, metadata !DIExpression(DW_OP_deref)), !dbg !12477
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12486
  %17 = icmp slt i32 %16, 0, !dbg !12487
  br i1 %17, label %18, label %21, !dbg !12488

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 1) #26, !dbg !12489
  %20 = zext i8 %19 to i32, !dbg !12489
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef %20) #27, !dbg !12489
  br label %26, !dbg !12495

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12496
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12496
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12497
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12498
  %25 = load i32, i32* %3, align 4, !dbg !12499
  call void @llvm.dbg.value(metadata i32 %25, metadata !12476, metadata !DIExpression()), !dbg !12477
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12500
  br label %26, !dbg !12501

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12501
  ret void, !dbg !12501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12502 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12504, metadata !DIExpression()), !dbg !12505
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12506
  %3 = load volatile i32, i32* %2, align 4, !dbg !12506
  %4 = or i32 %3, 8192, !dbg !12506
  store volatile i32 %4, i32* %2, align 4, !dbg !12506
  ret void, !dbg !12507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12510, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.value(metadata i8* %1, metadata !12511, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.value(metadata i32* %2, metadata !12512, metadata !DIExpression()), !dbg !12514
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12515
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12515
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12515
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12513, metadata !DIExpression()), !dbg !12514
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12516
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12516
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12518
  br i1 %9, label %12, label %10, !dbg !12519

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12520
  br label %12, !dbg !12521

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12514
  ret i32 %13, !dbg !12522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef %0) unnamed_addr #3 !dbg !12523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12525, metadata !DIExpression()), !dbg !12526
  %2 = icmp eq i32 %0, 2, !dbg !12527
  %3 = select i1 %2, i8 87, i8 63, !dbg !12527
  %4 = icmp eq i32 %0, 1, !dbg !12527
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12527
  ret i8 %5, !dbg !12528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12533, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 0, metadata !12534, metadata !DIExpression()), !dbg !12535
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12536
  %3 = load volatile i32, i32* %2, align 4, !dbg !12536
  %4 = and i32 %3, -32769, !dbg !12536
  store volatile i32 %4, i32* %2, align 4, !dbg !12536
  ret void, !dbg !12537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12538 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12542, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i32 %1, metadata !12543, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i32 0, metadata !12544, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i32 %2, metadata !12545, metadata !DIExpression()), !dbg !12546
  %4 = zext i32 %1 to i64, !dbg !12547
  %5 = mul nuw nsw i64 %4, 25, !dbg !12547
  %6 = zext i32 %2 to i64, !dbg !12547
  %7 = shl nuw nsw i64 %6, 2, !dbg !12547
  %8 = udiv i64 %5, %7, !dbg !12547
  %9 = trunc i64 %8 to i32, !dbg !12547
  %10 = udiv i32 %9, 100, !dbg !12547
  %11 = shl nuw nsw i32 %10, 4, !dbg !12547
  %12 = mul i32 %10, -100, !dbg !12547
  %13 = add i32 %12, %9, !dbg !12547
  %14 = shl i32 %13, 4, !dbg !12547
  %15 = add i32 %14, 50, !dbg !12547
  %16 = udiv i32 %15, 100, !dbg !12547
  %17 = and i32 %16, 240, !dbg !12547
  %18 = add nuw nsw i32 %17, %11, !dbg !12547
  %19 = and i32 %16, 15, !dbg !12547
  %20 = and i32 %18, 65520, !dbg !12550
  %21 = or i32 %20, %19, !dbg !12550
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12551
  store volatile i32 %21, i32* %22, align 4, !dbg !12552
  ret void, !dbg !12553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12554 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12556, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 %1, metadata !12557, metadata !DIExpression()), !dbg !12558
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12559
  %4 = load volatile i32, i32* %3, align 4, !dbg !12559
  %5 = and i32 %4, -769, !dbg !12559
  %6 = or i32 %5, %1, !dbg !12559
  store volatile i32 %6, i32* %3, align 4, !dbg !12559
  ret void, !dbg !12560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12561 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12563, metadata !DIExpression()), !dbg !12565
  call void @llvm.dbg.value(metadata i32 %1, metadata !12564, metadata !DIExpression()), !dbg !12565
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12566
  %4 = load volatile i32, i32* %3, align 4, !dbg !12566
  %5 = and i32 %4, -4097, !dbg !12566
  %6 = or i32 %5, %1, !dbg !12566
  store volatile i32 %6, i32* %3, align 4, !dbg !12566
  ret void, !dbg !12567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12568 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 %1, metadata !12571, metadata !DIExpression()), !dbg !12572
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12573
  %4 = load volatile i32, i32* %3, align 4, !dbg !12573
  %5 = and i32 %4, -12289, !dbg !12573
  %6 = or i32 %5, %1, !dbg !12573
  store volatile i32 %6, i32* %3, align 4, !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12575 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12577, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.value(metadata i32 %1, metadata !12578, metadata !DIExpression()), !dbg !12579
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12580
  %4 = load volatile i32, i32* %3, align 4, !dbg !12580
  %5 = and i32 %4, -1537, !dbg !12580
  %6 = or i32 %5, %1, !dbg !12580
  store volatile i32 %6, i32* %3, align 4, !dbg !12580
  ret void, !dbg !12581
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12582 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12584, metadata !DIExpression()), !dbg !12585
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12586
  %3 = load volatile i32, i32* %2, align 4, !dbg !12586
  %4 = lshr i32 %3, 3, !dbg !12587
  %5 = and i32 %4, 1, !dbg !12587
  ret i32 %5, !dbg !12588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12591, metadata !DIExpression()), !dbg !12592
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12593
  %3 = load volatile i32, i32* %2, align 4, !dbg !12593
  %4 = and i32 %3, 1, !dbg !12593
  ret i32 %4, !dbg !12594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12595 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12597, metadata !DIExpression()), !dbg !12598
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12599
  %3 = load volatile i32, i32* %2, align 4, !dbg !12599
  %4 = lshr i32 %3, 1, !dbg !12600
  %5 = and i32 %4, 1, !dbg !12600
  ret i32 %5, !dbg !12601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12602 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12604, metadata !DIExpression()), !dbg !12605
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12606
  %3 = load volatile i32, i32* %2, align 4, !dbg !12606
  %4 = lshr i32 %3, 8, !dbg !12607
  %5 = and i32 %4, 1, !dbg !12607
  ret i32 %5, !dbg !12608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12609 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12611, metadata !DIExpression()), !dbg !12612
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12613
  store volatile i32 -257, i32* %2, align 4, !dbg !12613
  ret void, !dbg !12614
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12615 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12617, metadata !DIExpression()), !dbg !12619
  %3 = bitcast i32* %2 to i8*, !dbg !12620
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12620
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12618, metadata !DIExpression()), !dbg !12621
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12622
  %5 = load volatile i32, i32* %4, align 4, !dbg !12622
  store volatile i32 %5, i32* %2, align 4, !dbg !12623
  %6 = load volatile i32, i32* %2, align 4, !dbg !12624
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12625
  %8 = load volatile i32, i32* %7, align 4, !dbg !12625
  store volatile i32 %8, i32* %2, align 4, !dbg !12626
  %9 = load volatile i32, i32* %2, align 4, !dbg !12627
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12628
  ret void, !dbg !12628
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12629 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12631, metadata !DIExpression()), !dbg !12633
  %3 = bitcast i32* %2 to i8*, !dbg !12634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12634
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12632, metadata !DIExpression()), !dbg !12635
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12636
  %5 = load volatile i32, i32* %4, align 4, !dbg !12636
  store volatile i32 %5, i32* %2, align 4, !dbg !12637
  %6 = load volatile i32, i32* %2, align 4, !dbg !12638
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12639
  %8 = load volatile i32, i32* %7, align 4, !dbg !12639
  store volatile i32 %8, i32* %2, align 4, !dbg !12640
  %9 = load volatile i32, i32* %2, align 4, !dbg !12641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12642
  ret void, !dbg !12642
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12643 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12645, metadata !DIExpression()), !dbg !12647
  %3 = bitcast i32* %2 to i8*, !dbg !12648
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12648
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12646, metadata !DIExpression()), !dbg !12649
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12650
  %5 = load volatile i32, i32* %4, align 4, !dbg !12650
  store volatile i32 %5, i32* %2, align 4, !dbg !12651
  %6 = load volatile i32, i32* %2, align 4, !dbg !12652
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12653
  %8 = load volatile i32, i32* %7, align 4, !dbg !12653
  store volatile i32 %8, i32* %2, align 4, !dbg !12654
  %9 = load volatile i32, i32* %2, align 4, !dbg !12655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12656
  ret void, !dbg !12656
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12657 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12659, metadata !DIExpression()), !dbg !12661
  %3 = bitcast i32* %2 to i8*, !dbg !12662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12662
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12660, metadata !DIExpression()), !dbg !12663
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12664
  %5 = load volatile i32, i32* %4, align 4, !dbg !12664
  store volatile i32 %5, i32* %2, align 4, !dbg !12665
  %6 = load volatile i32, i32* %2, align 4, !dbg !12666
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12667
  %8 = load volatile i32, i32* %7, align 4, !dbg !12667
  store volatile i32 %8, i32* %2, align 4, !dbg !12668
  %9 = load volatile i32, i32* %2, align 4, !dbg !12669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12670
  ret void, !dbg !12670
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12671 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12673, metadata !DIExpression()), !dbg !12674
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12675
  %3 = load volatile i32, i32* %2, align 4, !dbg !12675
  %4 = lshr i32 %3, 7, !dbg !12676
  %5 = and i32 %4, 1, !dbg !12676
  ret i32 %5, !dbg !12677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !12678 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12682, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.value(metadata i8 %1, metadata !12683, metadata !DIExpression()), !dbg !12684
  %3 = zext i8 %1 to i32, !dbg !12685
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12686
  store volatile i32 %3, i32* %4, align 4, !dbg !12687
  ret void, !dbg !12688
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12689 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12691, metadata !DIExpression()), !dbg !12692
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12693
  %3 = load volatile i32, i32* %2, align 4, !dbg !12693
  %4 = lshr i32 %3, 5, !dbg !12694
  %5 = and i32 %4, 1, !dbg !12694
  ret i32 %5, !dbg !12695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12696 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12700, metadata !DIExpression()), !dbg !12701
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12702
  %3 = load volatile i32, i32* %2, align 4, !dbg !12702
  %4 = trunc i32 %3 to i8, !dbg !12703
  ret i8 %4, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12707, metadata !DIExpression()), !dbg !12713
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12714
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12714
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12714
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12708, metadata !DIExpression()), !dbg !12713
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12715
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12715
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12715
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12709, metadata !DIExpression()), !dbg !12713
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12716
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12717
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12717
  %10 = tail call fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %9) #26, !dbg !12719
  br i1 %10, label %14, label %11, !dbg !12720

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 1) #26, !dbg !12721
  %13 = zext i8 %12 to i32, !dbg !12721
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.189, i32 0, i32 0), i32 noundef %13) #27, !dbg !12721
  br label %62, !dbg !12727

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12728
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12729
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12729
  %18 = load i8*, i8** %17, align 4, !dbg !12729
  %19 = tail call fastcc i32 @clock_control_on.190(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12730
  call void @llvm.dbg.value(metadata i32 %19, metadata !12712, metadata !DIExpression()), !dbg !12713
  %20 = icmp eq i32 %19, 0, !dbg !12731
  br i1 %20, label %24, label %21, !dbg !12733

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 1) #26, !dbg !12734
  %23 = zext i8 %22 to i32, !dbg !12734
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.191, i32 0, i32 0), i32 noundef %23) #27, !dbg !12734
  br label %62, !dbg !12740

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12741
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12741
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %27, metadata !12712, metadata !DIExpression()), !dbg !12713
  %28 = icmp slt i32 %27, 0, !dbg !12743
  br i1 %28, label %62, label %29, !dbg !12745

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12746
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12746
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12747
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12748
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12749
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12750
  %34 = load i32, i32* %33, align 4, !dbg !12750
  %35 = icmp ult i32 %34, 3, !dbg !12752
  br i1 %35, label %39, label %36, !dbg !12752

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.185(i32 noundef 2) #26, !dbg !12753
  %38 = zext i8 %37 to i32, !dbg !12753
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.192, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12753
  call void @llvm.dbg.value(metadata i32 0, metadata !12710, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i32 0, metadata !12711, metadata !DIExpression()), !dbg !12713
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12752
  %41 = load i32, i32* %40, align 4, !dbg !12752
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !12752
  %43 = load i32, i32* %42, align 4, !dbg !12752
  br label %44, !dbg !12752

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12762
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12762
  call void @llvm.dbg.value(metadata i32 %46, metadata !12711, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i32 %45, metadata !12710, metadata !DIExpression()), !dbg !12713
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12763
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12764
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12765
  %49 = load i8, i8* %48, align 4, !dbg !12765, !range !8650
  %50 = icmp eq i8 %49, 0, !dbg !12765
  br i1 %50, label %52, label %51, !dbg !12767

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12768
  br label %52, !dbg !12770

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12771
  %54 = load i32, i32* %53, align 4, !dbg !12771
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12772
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12773
  %56 = load i8, i8* %55, align 4, !dbg !12773, !range !8650
  %57 = icmp eq i8 %56, 0, !dbg !12773
  br i1 %57, label %60, label %58, !dbg !12775

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12776
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12778
  br label %60, !dbg !12779

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12780
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12781
  br label %62, !dbg !12782

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12713
  ret i32 %63, !dbg !12783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12788, metadata !DIExpression()), !dbg !12792
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12793
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12793
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12793
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12789, metadata !DIExpression()), !dbg !12792
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12790, metadata !DIExpression()), !dbg !12792
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12794
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %0) unnamed_addr #1 !dbg !12797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12801, metadata !DIExpression()), !dbg !12802
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12803, !srcloc !12805
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.193(%struct.device* noundef %0) #26, !dbg !12806
  ret i1 %2, !dbg !12807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.190(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12808 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i8* %1, metadata !12811, metadata !DIExpression()), !dbg !12813
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12814
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12814
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12814
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12812, metadata !DIExpression()), !dbg !12813
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12815
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12815
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12816
  ret i32 %8, !dbg !12817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12818 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12822, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i8 0, metadata !12823, metadata !DIExpression()), !dbg !12826
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12827
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12825, metadata !DIExpression(DW_OP_deref)), !dbg !12826
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12828
  call void @llvm.dbg.value(metadata i32 %4, metadata !12824, metadata !DIExpression()), !dbg !12826
  %5 = icmp slt i32 %4, 0, !dbg !12829
  br i1 %5, label %9, label %6, !dbg !12831

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12832
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12825, metadata !DIExpression()), !dbg !12826
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12833
  br label %9, !dbg !12834

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12835
  ret i32 %10, !dbg !12835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12836 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12838, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 12, metadata !12839, metadata !DIExpression()), !dbg !12842
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12843

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12844, metadata !DIExpression()) #25, !dbg !12850
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12853, !srcloc !12854
  call void @llvm.dbg.value(metadata i32 %4, metadata !12849, metadata !DIExpression()) #25, !dbg !12850
  %5 = or i32 %4, 12, !dbg !12855
  call void @llvm.dbg.value(metadata i32 %5, metadata !12840, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 %5, metadata !12857, metadata !DIExpression()) #25, !dbg !12864
  call void @llvm.dbg.value(metadata i32* %2, metadata !12862, metadata !DIExpression()) #25, !dbg !12864
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12866, !srcloc !12867
  call void @llvm.dbg.value(metadata i32 %6, metadata !12863, metadata !DIExpression()) #25, !dbg !12864
  %7 = icmp eq i32 %6, 0, !dbg !12843
  br i1 %7, label %8, label %3, !dbg !12855, !llvm.loop !12868

8:                                                ; preds = %3
  ret void, !dbg !12869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12870 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12872, metadata !DIExpression()), !dbg !12876
  call void @llvm.dbg.value(metadata i32 %1, metadata !12873, metadata !DIExpression()), !dbg !12876
  call void @llvm.dbg.value(metadata i32 %2, metadata !12874, metadata !DIExpression()), !dbg !12876
  call void @llvm.dbg.value(metadata i32 0, metadata !12875, metadata !DIExpression()), !dbg !12876
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12877
  %5 = load volatile i32, i32* %4, align 4, !dbg !12877
  %6 = and i32 %5, -5633, !dbg !12877
  %7 = or i32 %2, %1, !dbg !12877
  %8 = or i32 %7, %6, !dbg !12877
  store volatile i32 %8, i32* %4, align 4, !dbg !12877
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12878
  %10 = load volatile i32, i32* %9, align 4, !dbg !12878
  %11 = and i32 %10, -12289, !dbg !12878
  store volatile i32 %11, i32* %9, align 4, !dbg !12878
  ret void, !dbg !12879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12880 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12882, metadata !DIExpression()), !dbg !12883
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12884
  %3 = load volatile i32, i32* %2, align 4, !dbg !12884
  %4 = or i32 %3, 8, !dbg !12884
  store volatile i32 %4, i32* %2, align 4, !dbg !12884
  ret void, !dbg !12885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12886 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12890, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12891, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.value(metadata i32 0, metadata !12892, metadata !DIExpression()), !dbg !12893
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12894
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12894
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12895
  %5 = load i8, i8* %4, align 4, !dbg !12895
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12896
  ret i32 %6, !dbg !12897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.193(%struct.device* noundef %0) unnamed_addr #1 !dbg !12898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12900, metadata !DIExpression()), !dbg !12901
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12902
  ret i1 %2, !dbg !12903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12906, metadata !DIExpression()), !dbg !12907
  tail call fastcc void @__NVIC_SetPriority.195() #26, !dbg !12908
  store i32 16799, i32* @last_load, align 4, !dbg !12909
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12910
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12911
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12912
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12913
  %3 = or i32 %2, 7, !dbg !12913
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12913
  ret i32 0, !dbg !12914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.195() unnamed_addr #15 !dbg !12915 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12917, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata i32 1, metadata !12918, metadata !DIExpression()), !dbg !12919
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12920
  ret void, !dbg !12923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12926, metadata !DIExpression()), !dbg !12928
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !12929
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12930
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12931
  %5 = add i32 %4, %3, !dbg !12931
  store i32 %5, i32* @cycle_count, align 4, !dbg !12931
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12932
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12933
  %7 = sub i32 %5, %6, !dbg !12936
  %8 = udiv i32 %7, 16800, !dbg !12937
  call void @llvm.dbg.value(metadata i32 %8, metadata !12927, metadata !DIExpression()), !dbg !12928
  %9 = mul nuw i32 %8, 16800, !dbg !12938
  %10 = add i32 %9, %6, !dbg !12939
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12939
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12940
  tail call void @z_arm_int_exit() #27, !dbg !12941
  ret void, !dbg !12942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12943 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12948
  call void @llvm.dbg.value(metadata i32 %1, metadata !12945, metadata !DIExpression()), !dbg !12949
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12950
  call void @llvm.dbg.value(metadata i32 %2, metadata !12946, metadata !DIExpression()), !dbg !12949
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %3, metadata !12947, metadata !DIExpression()), !dbg !12949
  %4 = and i32 %2, 65536, !dbg !12952
  %5 = icmp ne i32 %4, 0, !dbg !12952
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12954
  %8 = load i32, i32* @last_load, align 4, !dbg !12949
  br i1 %7, label %9, label %13, !dbg !12954

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12955
  %11 = add i32 %10, %8, !dbg !12955
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12955
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12957
  br label %13, !dbg !12958

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12959
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12960
  %16 = add i32 %14, %15, !dbg !12961
  ret i32 %16, !dbg !12962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12967, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata i1 %1, metadata !12968, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12980
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12981
  br i1 %4, label %5, label %8, !dbg !12981

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12983
  %7 = and i32 %6, -2, !dbg !12983
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12983
  store i32 -16777216, i32* @last_load, align 4, !dbg !12985
  br label %54, !dbg !12986

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12987
  call void @llvm.dbg.value(metadata i32 %9, metadata !12972, metadata !DIExpression()), !dbg !12980
  br i1 %3, label %18, label %10, !dbg !12988

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12988
  call void @llvm.dbg.value(metadata i32 undef, metadata !12967, metadata !DIExpression()), !dbg !12980
  %12 = icmp slt i32 %11, 1, !dbg !12989
  br i1 %12, label %18, label %13, !dbg !12989

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !12989
  %15 = select i1 %14, i32 %11, i32 997, !dbg !12989
  %16 = mul nuw nsw i32 %15, 16800, !dbg !12989
  %17 = add nuw nsw i32 %16, 16799, !dbg !12989
  br label %18, !dbg !12989

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12967, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12990, metadata !DIExpression()) #25, !dbg !12997
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12999, !srcloc !13005
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12999
  call void @llvm.dbg.value(metadata i32 %21, metadata !13002, metadata !DIExpression()) #25, !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #25, !dbg !13006
  call void @llvm.dbg.value(metadata i32 %21, metadata !12996, metadata !DIExpression()) #25, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %21, metadata !12973, metadata !DIExpression()), !dbg !12980
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %22, metadata !12978, metadata !DIExpression()), !dbg !12980
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13008
  call void @llvm.dbg.value(metadata i32 %23, metadata !12970, metadata !DIExpression()), !dbg !12980
  %24 = load i32, i32* @cycle_count, align 4, !dbg !13009
  %25 = add i32 %24, %22, !dbg !13009
  store i32 %25, i32* @cycle_count, align 4, !dbg !13009
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13010
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !13011
  %27 = sub i32 %25, %26, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %27, metadata !12979, metadata !DIExpression()), !dbg !12980
  %28 = icmp slt i32 %27, 0, !dbg !13013
  br i1 %28, label %38, label %29, !dbg !13015

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12969, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12969, metadata !DIExpression()), !dbg !12980
  %30 = add nuw i32 %19, %27, !dbg !13016
  %31 = urem i32 %30, 16800, !dbg !13018
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12969, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12980
  %32 = sub nuw nsw i32 %19, %31, !dbg !13019
  call void @llvm.dbg.value(metadata i32 %32, metadata !12969, metadata !DIExpression()), !dbg !12980
  %33 = icmp ugt i32 %32, 1050, !dbg !13020
  br i1 %33, label %34, label %36, !dbg !13020

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12969, metadata !DIExpression()), !dbg !12980
  %35 = icmp ugt i32 %32, 16749600, !dbg !13021
  br i1 %35, label %38, label %36, !dbg !13023

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !13024
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %40, metadata !12971, metadata !DIExpression()), !dbg !12980
  %41 = add nsw i32 %39, -1, !dbg !13026
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13027
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13028
  %42 = icmp ult i32 %23, %40, !dbg !13029
  br i1 %42, label %43, label %48, !dbg !13031

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !13032
  %45 = add i32 %23, %9, !dbg !13034
  %46 = sub i32 %45, %40, !dbg !13035
  %47 = add i32 %46, %44, !dbg !13032
  br label %52, !dbg !13036

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !13037
  %50 = load i32, i32* @cycle_count, align 4, !dbg !13039
  %51 = add i32 %49, %50, !dbg !13039
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !13040
  store i32 %53, i32* @cycle_count, align 4, !dbg !13040
  call void @llvm.dbg.value(metadata i32 %21, metadata !13041, metadata !DIExpression()) #25, !dbg !13047
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13046, metadata !DIExpression()) #25, !dbg !13047
  call void @llvm.dbg.value(metadata i32 %21, metadata !13049, metadata !DIExpression()) #25, !dbg !13052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !13054, !srcloc !13055
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !13056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13057 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12990, metadata !DIExpression()) #25, !dbg !13061
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13063, !srcloc !13005
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13063
  call void @llvm.dbg.value(metadata i32 %2, metadata !13002, metadata !DIExpression()) #25, !dbg !13065
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #25, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %2, metadata !12996, metadata !DIExpression()) #25, !dbg !13061
  call void @llvm.dbg.value(metadata i32 %2, metadata !13059, metadata !DIExpression()), !dbg !13066
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13067
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13068
  %5 = add i32 %4, %3, !dbg !13069
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13070
  %7 = sub i32 %5, %6, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %7, metadata !13060, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 %2, metadata !13041, metadata !DIExpression()) #25, !dbg !13072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13046, metadata !DIExpression()) #25, !dbg !13072
  call void @llvm.dbg.value(metadata i32 %2, metadata !13049, metadata !DIExpression()) #25, !dbg !13074
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13076, !srcloc !13055
  %8 = udiv i32 %7, 16800, !dbg !13077
  ret i32 %8, !dbg !13078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13079 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12990, metadata !DIExpression()) #25, !dbg !13083
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13085, !srcloc !13005
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13085
  call void @llvm.dbg.value(metadata i32 %2, metadata !13002, metadata !DIExpression()) #25, !dbg !13087
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #25, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %2, metadata !12996, metadata !DIExpression()) #25, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %2, metadata !13081, metadata !DIExpression()), !dbg !13088
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13089
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13090
  %5 = add i32 %4, %3, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %5, metadata !13082, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 %2, metadata !13041, metadata !DIExpression()) #25, !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13046, metadata !DIExpression()) #25, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %2, metadata !13049, metadata !DIExpression()) #25, !dbg !13094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13096, !srcloc !13055
  ret i32 %5, !dbg !13097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !13098 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13099
  %2 = icmp eq i32 %1, -16777216, !dbg !13101
  br i1 %2, label %3, label %6, !dbg !13102

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13103
  %5 = or i32 %4, 1, !dbg !13103
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13103
  br label %6, !dbg !13105

6:                                                ; preds = %3, %0
  ret void, !dbg !13106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !13107 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13108
  %2 = and i32 %1, -2, !dbg !13108
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13108
  ret void, !dbg !13109
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13110 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13136, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata i8 %1, metadata !13137, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13138, metadata !DIExpression()), !dbg !13139
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13140
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13140
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13139
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13141
  %8 = load i8, i8* %6, align 4, !dbg !13142
  %9 = zext i8 %8 to i32, !dbg !13143
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13143
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13144
  br i1 %11, label %18, label %24, !dbg !13145

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13139
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13141
  %14 = load i8, i8* %6, align 4, !dbg !13142
  %15 = zext i8 %14 to i32, !dbg !13143
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13143
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13144
  br i1 %17, label %18, label %24, !dbg !13145, !llvm.loop !13146

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13148
  %21 = load i8, i8* %20, align 1, !dbg !13148
  %22 = icmp eq i8 %21, %1, !dbg !13151
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13152
  br i1 %22, label %24, label %12, !dbg !13153

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13139
  ret i32 %25, !dbg !13154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13155 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13166, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i8 %1, metadata !13167, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 %2, metadata !13168, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 0, metadata !13171, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 0, metadata !13172, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i8 0, metadata !13173, metadata !DIExpression()), !dbg !13183
  %4 = icmp eq i8 %1, 0, !dbg !13184
  br i1 %4, label %35, label %5, !dbg !13185

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13184
  br label %9, !dbg !13185

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13173, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i32 %29, metadata !13171, metadata !DIExpression()), !dbg !13182
  %8 = icmp eq i32 %34, %6, !dbg !13184
  br i1 %8, label %35, label %9, !dbg !13185, !llvm.loop !13186

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13173, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata i32 %11, metadata !13171, metadata !DIExpression()), !dbg !13182
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13188
  %13 = load i32, i32* %12, align 4, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %13, metadata !13170, metadata !DIExpression()), !dbg !13182
  %14 = and i32 %13, 31, !dbg !13189
  %15 = icmp ult i32 %14, 16, !dbg !13190
  br i1 %15, label %16, label %20, !dbg !13191

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13192
  %18 = load i32, i32* %17, align 4, !dbg !13192
  %19 = or i32 %18, 32, !dbg !13194
  call void @llvm.dbg.value(metadata i32 %19, metadata !13171, metadata !DIExpression()), !dbg !13182
  br label %28, !dbg !13195

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13196

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13197
  %23 = load i32, i32* %22, align 4, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %23, metadata !13175, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13198
  %24 = lshr i32 %23, 7, !dbg !13199
  %25 = and i32 %24, 16, !dbg !13199
  %26 = or i32 %25, %23, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %26, metadata !13171, metadata !DIExpression()), !dbg !13182
  br label %28, !dbg !13200

27:                                               ; preds = %20
  br label %28, !dbg !13201

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13182
  call void @llvm.dbg.value(metadata i32 %29, metadata !13171, metadata !DIExpression()), !dbg !13182
  %30 = lshr i32 %13, 5, !dbg !13201
  %31 = and i32 %30, 255, !dbg !13201
  call void @llvm.dbg.value(metadata i32 %31, metadata !13169, metadata !DIExpression()), !dbg !13182
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13202
  call void @llvm.dbg.value(metadata i32 %32, metadata !13172, metadata !DIExpression()), !dbg !13182
  %33 = icmp slt i32 %32, 0, !dbg !13203
  %34 = add nuw nsw i32 %10, 1, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %34, metadata !13173, metadata !DIExpression()), !dbg !13183
  br i1 %33, label %35, label %7, !dbg !13206

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13212, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 %1, metadata !13213, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i32 %2, metadata !13214, metadata !DIExpression()), !dbg !13216
  %4 = icmp ugt i32 %0, 175, !dbg !13217
  br i1 %4, label %16, label %5, !dbg !13219

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13220
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13221
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13221
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13215, metadata !DIExpression()), !dbg !13216
  %9 = add nsw i32 %6, -9, !dbg !13222
  %10 = icmp ult i32 %9, 2, !dbg !13222
  br i1 %10, label %16, label %11, !dbg !13224

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.200(%struct.device* noundef %8) #26, !dbg !13225
  br i1 %12, label %13, label %16, !dbg !13226

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13227
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !13228
  br label %16, !dbg !13229

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !13216
  ret i32 %17, !dbg !13230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.200(%struct.device* noundef %0) unnamed_addr #1 !dbg !13231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13235, metadata !DIExpression()), !dbg !13236
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13237, !srcloc !13239
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.201(%struct.device* noundef %0) #26, !dbg !13240
  ret i1 %2, !dbg !13241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.201(%struct.device* noundef %0) unnamed_addr #1 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13244, metadata !DIExpression()), !dbg !13245
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13246
  ret i1 %2, !dbg !13247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13248 {
  ret void, !dbg !13249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13250 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13252, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 0, metadata !13253, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 2, metadata !13254, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 0, metadata !13255, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 2, metadata !13256, metadata !DIExpression()), !dbg !13257
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13258
  %2 = and i32 %1, 12, !dbg !13259
  call void @llvm.dbg.value(metadata i32 %2, metadata !13252, metadata !DIExpression()), !dbg !13257
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13260

3:                                                ; preds = %0
  br label %21, !dbg !13261

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %5, metadata !13255, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13257
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13264
  %7 = and i32 %6, 63, !dbg !13265
  call void @llvm.dbg.value(metadata i32 %7, metadata !13256, metadata !DIExpression()), !dbg !13257
  %8 = and i32 %5, 4194304, !dbg !13266
  %9 = icmp eq i32 %8, 0, !dbg !13266
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !13268
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13268
  %13 = lshr i32 %12, 6, !dbg !13268
  %14 = and i32 %13, 511, !dbg !13268
  %15 = mul i32 %14, %11, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %15, metadata !13253, metadata !DIExpression()), !dbg !13257
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13269
  %17 = lshr i32 %16, 15, !dbg !13270
  %18 = and i32 %17, 6, !dbg !13270
  %19 = add nuw nsw i32 %18, 2, !dbg !13270
  call void @llvm.dbg.value(metadata i32 %19, metadata !13254, metadata !DIExpression()), !dbg !13257
  %20 = udiv i32 %15, %19, !dbg !13271
  br label %21, !dbg !13272

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !13273
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13274
  %24 = lshr i32 %23, 4, !dbg !13275
  %25 = and i32 %24, 15, !dbg !13275
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !13276
  %27 = load i8, i8* %26, align 1, !dbg !13276
  %28 = zext i8 %27 to i32, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %28, metadata !13252, metadata !DIExpression()), !dbg !13257
  %29 = lshr i32 %22, %28, !dbg !13277
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !13277
  ret void, !dbg !13278
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13279 {
  ret i32 0, !dbg !13284
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13285 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13311, metadata !DIExpression()), !dbg !13322
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13323
  br i1 %3, label %311, label %4, !dbg !13325

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13326
  %6 = load i32, i32* %5, align 4, !dbg !13326
  %7 = and i32 %6, 1, !dbg !13328
  %8 = icmp eq i32 %7, 0, !dbg !13329
  br i1 %8, label %66, label %9, !dbg !13330

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13331
  %11 = and i32 %10, 12, !dbg !13331
  %12 = icmp eq i32 %11, 4, !dbg !13334
  br i1 %12, label %21, label %13, !dbg !13335

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13336
  %15 = and i32 %14, 12, !dbg !13336
  %16 = icmp eq i32 %15, 8, !dbg !13337
  br i1 %16, label %17, label %29, !dbg !13338

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13339
  %19 = and i32 %18, 4194304, !dbg !13340
  %20 = icmp eq i32 %19, 0, !dbg !13341
  br i1 %20, label %29, label %21, !dbg !13342

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13343
  %23 = and i32 %22, 131072, !dbg !13343
  %24 = icmp eq i32 %23, 0, !dbg !13343
  br i1 %24, label %66, label %25, !dbg !13346

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13347
  %27 = load i32, i32* %26, align 4, !dbg !13347
  %28 = icmp eq i32 %27, 0, !dbg !13348
  br i1 %28, label %311, label %66, !dbg !13349

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13350
  %31 = load i32, i32* %30, align 4, !dbg !13350
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !13354

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13355
  %34 = or i32 %33, 65536, !dbg !13355
  br label %45, !dbg !13355

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13357
  %37 = or i32 %36, 262144, !dbg !13357
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13357
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13357
  %39 = or i32 %38, 65536, !dbg !13357
  br label %45, !dbg !13357

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %42 = and i32 %41, -65537, !dbg !13360
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %44 = and i32 %43, -262145, !dbg !13360
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13362
  %47 = load i32, i32* %30, align 4, !dbg !13363
  %48 = icmp eq i32 %47, 0, !dbg !13365
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !13366
  call void @llvm.dbg.value(metadata i32 %49, metadata !13312, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.value(metadata i32 %49, metadata !13312, metadata !DIExpression()), !dbg !13322
  br i1 %48, label %58, label %50, !dbg !13367

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13368
  %52 = and i32 %51, 131072, !dbg !13370
  %53 = icmp eq i32 %52, 0, !dbg !13370
  br i1 %53, label %54, label %66, !dbg !13371

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !13372
  %56 = sub i32 %55, %49, !dbg !13375
  %57 = icmp ugt i32 %56, 100, !dbg !13376
  br i1 %57, label %311, label %50, !dbg !13377, !llvm.loop !13378

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13380
  %60 = and i32 %59, 131072, !dbg !13380
  %61 = icmp eq i32 %60, 0, !dbg !13380
  br i1 %61, label %66, label %62, !dbg !13382

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13383
  %64 = sub i32 %63, %49, !dbg !13386
  %65 = icmp ugt i32 %64, 100, !dbg !13387
  br i1 %65, label %311, label %58, !dbg !13388, !llvm.loop !13389

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !13391
  %68 = and i32 %67, 2, !dbg !13393
  %69 = icmp eq i32 %68, 0, !dbg !13394
  br i1 %69, label %121, label %70, !dbg !13395

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13396
  %72 = and i32 %71, 12, !dbg !13396
  %73 = icmp eq i32 %72, 0, !dbg !13399
  br i1 %73, label %82, label %74, !dbg !13400

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13401
  %76 = and i32 %75, 12, !dbg !13401
  %77 = icmp eq i32 %76, 8, !dbg !13402
  br i1 %77, label %78, label %90, !dbg !13403

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13404
  %80 = and i32 %79, 4194304, !dbg !13405
  %81 = icmp eq i32 %80, 0, !dbg !13406
  br i1 %81, label %82, label %90, !dbg !13407

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13408
  %84 = and i32 %83, 2, !dbg !13408
  %85 = icmp eq i32 %84, 0, !dbg !13408
  br i1 %85, label %114, label %86, !dbg !13411

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13412
  %88 = load i32, i32* %87, align 4, !dbg !13412
  %89 = icmp eq i32 %88, 1, !dbg !13413
  br i1 %89, label %114, label %311, !dbg !13414

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13415
  %92 = load i32, i32* %91, align 4, !dbg !13415
  %93 = icmp eq i32 %92, 0, !dbg !13418
  br i1 %93, label %104, label %94, !dbg !13419

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13420
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %95, metadata !13312, metadata !DIExpression()), !dbg !13322
  br label %96, !dbg !13423

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13424
  %98 = and i32 %97, 2, !dbg !13425
  %99 = icmp eq i32 %98, 0, !dbg !13425
  br i1 %99, label %100, label %114, !dbg !13423

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !13426
  %102 = sub i32 %101, %95, !dbg !13429
  %103 = icmp ugt i32 %102, 2, !dbg !13430
  br i1 %103, label %311, label %96, !dbg !13431, !llvm.loop !13432

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13434
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !13436
  call void @llvm.dbg.value(metadata i32 %105, metadata !13312, metadata !DIExpression()), !dbg !13322
  br label %106, !dbg !13437

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13438
  %108 = and i32 %107, 2, !dbg !13438
  %109 = icmp eq i32 %108, 0, !dbg !13438
  br i1 %109, label %121, label %110, !dbg !13437

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13439
  %112 = sub i32 %111, %105, !dbg !13442
  %113 = icmp ugt i32 %112, 2, !dbg !13443
  br i1 %113, label %311, label %106, !dbg !13444, !llvm.loop !13445

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13447
  %116 = and i32 %115, -249, !dbg !13447
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13447
  %118 = load i32, i32* %117, align 4, !dbg !13447
  %119 = shl i32 %118, 3, !dbg !13447
  %120 = or i32 %119, %116, !dbg !13447
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13447
  br label %121, !dbg !13448

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !13448
  %123 = and i32 %122, 8, !dbg !13450
  %124 = icmp eq i32 %123, 0, !dbg !13451
  br i1 %124, label %149, label %125, !dbg !13452

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13453
  %127 = load i32, i32* %126, align 4, !dbg !13453
  %128 = icmp eq i32 %127, 0, !dbg !13456
  br i1 %128, label %139, label %129, !dbg !13457

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13458
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !13460
  call void @llvm.dbg.value(metadata i32 %130, metadata !13312, metadata !DIExpression()), !dbg !13322
  br label %131, !dbg !13461

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13462
  %133 = and i32 %132, 2, !dbg !13463
  %134 = icmp eq i32 %133, 0, !dbg !13463
  br i1 %134, label %135, label %149, !dbg !13461

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !13464
  %137 = sub i32 %136, %130, !dbg !13467
  %138 = icmp ugt i32 %137, 2, !dbg !13468
  br i1 %138, label %311, label %131, !dbg !13469, !llvm.loop !13470

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13472
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %140, metadata !13312, metadata !DIExpression()), !dbg !13322
  br label %141, !dbg !13475

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13476
  %143 = and i32 %142, 2, !dbg !13476
  %144 = icmp eq i32 %143, 0, !dbg !13476
  br i1 %144, label %149, label %145, !dbg !13475

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13477
  %147 = sub i32 %146, %140, !dbg !13480
  %148 = icmp ugt i32 %147, 2, !dbg !13481
  br i1 %148, label %311, label %141, !dbg !13482, !llvm.loop !13483

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !13485
  %151 = and i32 %150, 4, !dbg !13486
  %152 = icmp eq i32 %151, 0, !dbg !13487
  br i1 %152, label %221, label %153, !dbg !13488

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !13314, metadata !DIExpression()), !dbg !13489
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13490
  %155 = and i32 %154, 268435456, !dbg !13490
  %156 = icmp eq i32 %155, 0, !dbg !13490
  br i1 %156, label %157, label %164, !dbg !13491

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !13492
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !13492
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13318, metadata !DIExpression()), !dbg !13492
  store volatile i32 0, i32* %2, align 4, !dbg !13492
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13492
  %160 = or i32 %159, 268435456, !dbg !13492
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13492
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13492
  %162 = and i32 %161, 268435456, !dbg !13492
  store volatile i32 %162, i32* %2, align 4, !dbg !13492
  %163 = load volatile i32, i32* %2, align 4, !dbg !13492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !13493
  call void @llvm.dbg.value(metadata i32 1, metadata !13314, metadata !DIExpression()), !dbg !13489
  br label %164, !dbg !13494

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()), !dbg !13489
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13495
  %166 = and i32 %165, 256, !dbg !13495
  %167 = icmp eq i32 %166, 0, !dbg !13495
  br i1 %167, label %168, label %180, !dbg !13497

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13498
  %170 = or i32 %169, 256, !dbg !13498
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13498
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !13500
  call void @llvm.dbg.value(metadata i32 %171, metadata !13312, metadata !DIExpression()), !dbg !13322
  br label %172, !dbg !13501

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13502
  %174 = and i32 %173, 256, !dbg !13502
  %175 = icmp eq i32 %174, 0, !dbg !13502
  br i1 %175, label %176, label %180, !dbg !13501

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !13503
  %178 = sub i32 %177, %171, !dbg !13506
  %179 = icmp ugt i32 %178, 2, !dbg !13507
  br i1 %179, label %311, label %172, !dbg !13508, !llvm.loop !13509

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13511
  %182 = load i32, i32* %181, align 4, !dbg !13511
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !13514

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13515
  %185 = or i32 %184, 1, !dbg !13515
  br label %196, !dbg !13515

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13517
  %188 = or i32 %187, 4, !dbg !13517
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13517
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13517
  %190 = or i32 %189, 1, !dbg !13517
  br label %196, !dbg !13517

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13520
  %193 = and i32 %192, -2, !dbg !13520
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13520
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13520
  %195 = and i32 %194, -5, !dbg !13520
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13522
  %198 = load i32, i32* %181, align 4, !dbg !13523
  %199 = icmp eq i32 %198, 0, !dbg !13525
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !13526
  call void @llvm.dbg.value(metadata i32 %200, metadata !13312, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.value(metadata i32 %200, metadata !13312, metadata !DIExpression()), !dbg !13322
  br i1 %199, label %209, label %201, !dbg !13527

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13528
  %203 = and i32 %202, 2, !dbg !13530
  %204 = icmp eq i32 %203, 0, !dbg !13530
  br i1 %204, label %205, label %217, !dbg !13531

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !13532
  %207 = sub i32 %206, %200, !dbg !13535
  %208 = icmp ugt i32 %207, 5000, !dbg !13536
  br i1 %208, label %311, label %201, !dbg !13537, !llvm.loop !13538

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13540
  %211 = and i32 %210, 2, !dbg !13540
  %212 = icmp eq i32 %211, 0, !dbg !13540
  br i1 %212, label %217, label %213, !dbg !13542

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !13543
  %215 = sub i32 %214, %200, !dbg !13546
  %216 = icmp ugt i32 %215, 5000, !dbg !13547
  br i1 %216, label %311, label %209, !dbg !13548, !llvm.loop !13549

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !13551

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13552
  %220 = and i32 %219, -268435457, !dbg !13552
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13552
  br label %221, !dbg !13555

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13556
  %223 = load i32, i32* %222, align 4, !dbg !13556
  %224 = icmp eq i32 %223, 0, !dbg !13558
  br i1 %224, label %310, label %225, !dbg !13559

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13560
  %227 = and i32 %226, 12, !dbg !13560
  %228 = icmp eq i32 %227, 8, !dbg !13563
  br i1 %228, label %277, label %229, !dbg !13564

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !13565
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13568
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !13568
  call void @llvm.dbg.value(metadata i32 %231, metadata !13312, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.value(metadata i32 %231, metadata !13312, metadata !DIExpression()), !dbg !13322
  br i1 %230, label %232, label %269, !dbg !13569

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13570
  %234 = and i32 %233, 33554432, !dbg !13570
  %235 = icmp eq i32 %234, 0, !dbg !13570
  br i1 %235, label %240, label %236, !dbg !13572

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !13573
  %238 = sub i32 %237, %231, !dbg !13576
  %239 = icmp ugt i32 %238, 2, !dbg !13577
  br i1 %239, label %311, label %232, !dbg !13578, !llvm.loop !13579

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13581
  %242 = load i32, i32* %241, align 4, !dbg !13581
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13581
  %244 = load i32, i32* %243, align 4, !dbg !13581
  %245 = or i32 %244, %242, !dbg !13581
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13581
  %247 = load i32, i32* %246, align 4, !dbg !13581
  %248 = shl i32 %247, 6, !dbg !13581
  %249 = or i32 %245, %248, !dbg !13581
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13581
  %251 = load i32, i32* %250, align 4, !dbg !13581
  %252 = shl i32 %251, 15, !dbg !13581
  %253 = add i32 %252, -65536, !dbg !13581
  %254 = and i32 %253, -65536, !dbg !13581
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13581
  %256 = load i32, i32* %255, align 4, !dbg !13581
  %257 = shl i32 %256, 24, !dbg !13581
  %258 = or i32 %249, %257, !dbg !13581
  %259 = or i32 %258, %254, !dbg !13581
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13581
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13582
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !13583
  call void @llvm.dbg.value(metadata i32 %260, metadata !13312, metadata !DIExpression()), !dbg !13322
  br label %261, !dbg !13584

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13585
  %263 = and i32 %262, 33554432, !dbg !13586
  %264 = icmp eq i32 %263, 0, !dbg !13586
  br i1 %264, label %265, label %310, !dbg !13584

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !13587
  %267 = sub i32 %266, %260, !dbg !13590
  %268 = icmp ugt i32 %267, 2, !dbg !13591
  br i1 %268, label %311, label %261, !dbg !13592, !llvm.loop !13593

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13595
  %271 = and i32 %270, 33554432, !dbg !13595
  %272 = icmp eq i32 %271, 0, !dbg !13595
  br i1 %272, label %310, label %273, !dbg !13597

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !13598
  %275 = sub i32 %274, %231, !dbg !13601
  %276 = icmp ugt i32 %275, 2, !dbg !13602
  br i1 %276, label %311, label %269, !dbg !13603, !llvm.loop !13604

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !13606
  br i1 %278, label %311, label %279, !dbg !13609

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13610
  call void @llvm.dbg.value(metadata i32 %280, metadata !13313, metadata !DIExpression()), !dbg !13322
  %281 = and i32 %280, 4194304, !dbg !13612
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13614
  %283 = load i32, i32* %282, align 4, !dbg !13614
  %284 = icmp eq i32 %281, %283, !dbg !13615
  br i1 %284, label %285, label %311, !dbg !13616

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !13617
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13618
  %288 = load i32, i32* %287, align 4, !dbg !13618
  %289 = icmp eq i32 %286, %288, !dbg !13619
  br i1 %289, label %290, label %311, !dbg !13620

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !13621
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13622
  %293 = load i32, i32* %292, align 4, !dbg !13622
  %294 = shl i32 %293, 6, !dbg !13623
  %295 = icmp eq i32 %291, %294, !dbg !13624
  br i1 %295, label %296, label %311, !dbg !13625

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !13626
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13627
  %299 = load i32, i32* %298, align 4, !dbg !13627
  %300 = shl i32 %299, 15, !dbg !13628
  %301 = add i32 %300, -65536, !dbg !13628
  %302 = and i32 %301, -65536, !dbg !13628
  %303 = icmp eq i32 %297, %302, !dbg !13629
  br i1 %303, label %304, label %311, !dbg !13630

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !13631
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13632
  %307 = load i32, i32* %306, align 4, !dbg !13632
  %308 = shl i32 %307, 24, !dbg !13633
  %309 = icmp eq i32 %305, %308, !dbg !13634
  br i1 %309, label %310, label %311, !dbg !13635

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !13636

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !13322
  ret i32 %312, !dbg !13637
}

; Function Attrs: optsize
declare !dbg !13638 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13640 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13653, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata i32 %1, metadata !13654, metadata !DIExpression()), !dbg !13656
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13657
  br i1 %3, label %115, label %4, !dbg !13659

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13660
  %6 = and i32 %5, 7, !dbg !13660
  %7 = icmp ult i32 %6, %1, !dbg !13662
  br i1 %7, label %8, label %13, !dbg !13663

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !13664
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13664
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13666
  %11 = and i32 %10, 7, !dbg !13666
  %12 = icmp eq i32 %11, %1, !dbg !13668
  br i1 %12, label %13, label %115, !dbg !13669

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13670
  %15 = load i32, i32* %14, align 4, !dbg !13670
  %16 = and i32 %15, 2, !dbg !13672
  %17 = icmp eq i32 %16, 0, !dbg !13673
  br i1 %17, label %39, label %18, !dbg !13674

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !13675
  %20 = icmp eq i32 %19, 0, !dbg !13678
  br i1 %20, label %25, label %21, !dbg !13679

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13680
  %23 = or i32 %22, 7168, !dbg !13680
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13680
  %24 = load i32, i32* %14, align 4, !dbg !13682
  br label %25, !dbg !13684

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !13682
  %27 = and i32 %26, 8, !dbg !13685
  %28 = icmp eq i32 %27, 0, !dbg !13686
  br i1 %28, label %32, label %29, !dbg !13687

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13688
  %31 = or i32 %30, 57344, !dbg !13688
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13688
  br label %32, !dbg !13690

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13691
  %34 = and i32 %33, -241, !dbg !13691
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13691
  %36 = load i32, i32* %35, align 4, !dbg !13691
  %37 = or i32 %34, %36, !dbg !13691
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13691
  %38 = load i32, i32* %14, align 4, !dbg !13692
  br label %39, !dbg !13694

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !13692
  %41 = and i32 %40, 1, !dbg !13695
  %42 = icmp eq i32 %41, 0, !dbg !13696
  br i1 %42, label %73, label %43, !dbg !13697

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13698
  %45 = load i32, i32* %44, align 4, !dbg !13698
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !13701

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13702
  %48 = and i32 %47, 131072, !dbg !13705
  %49 = icmp eq i32 %48, 0, !dbg !13705
  br i1 %49, label %115, label %58, !dbg !13706

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13707
  %52 = and i32 %51, 33554432, !dbg !13711
  %53 = icmp eq i32 %52, 0, !dbg !13711
  br i1 %53, label %115, label %58, !dbg !13712

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13713
  %56 = and i32 %55, 2, !dbg !13716
  %57 = icmp eq i32 %56, 0, !dbg !13716
  br i1 %57, label %115, label %58, !dbg !13717

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13718
  %60 = and i32 %59, -4, !dbg !13718
  %61 = or i32 %60, %45, !dbg !13718
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13718
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !13719
  call void @llvm.dbg.value(metadata i32 %62, metadata !13655, metadata !DIExpression()), !dbg !13656
  br label %63, !dbg !13720

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13721
  %65 = and i32 %64, 12, !dbg !13721
  %66 = load i32, i32* %44, align 4, !dbg !13722
  %67 = shl i32 %66, 2, !dbg !13723
  %68 = icmp eq i32 %65, %67, !dbg !13724
  br i1 %68, label %73, label %69, !dbg !13720

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !13725
  %71 = sub i32 %70, %62, !dbg !13728
  %72 = icmp ugt i32 %71, 5000, !dbg !13729
  br i1 %72, label %115, label %63, !dbg !13730, !llvm.loop !13731

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13733
  %75 = and i32 %74, 7, !dbg !13733
  %76 = icmp ugt i32 %75, %1, !dbg !13735
  br i1 %76, label %77, label %82, !dbg !13736

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !13737
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13737
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13739
  %80 = and i32 %79, 7, !dbg !13739
  %81 = icmp eq i32 %80, %1, !dbg !13741
  br i1 %81, label %82, label %115, !dbg !13742

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !13743
  %84 = and i32 %83, 4, !dbg !13745
  %85 = icmp eq i32 %84, 0, !dbg !13746
  br i1 %85, label %93, label %86, !dbg !13747

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13748
  %88 = and i32 %87, -7169, !dbg !13748
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13748
  %90 = load i32, i32* %89, align 4, !dbg !13748
  %91 = or i32 %88, %90, !dbg !13748
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13748
  %92 = load i32, i32* %14, align 4, !dbg !13750
  br label %93, !dbg !13752

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !13750
  %95 = and i32 %94, 8, !dbg !13753
  %96 = icmp eq i32 %95, 0, !dbg !13754
  br i1 %96, label %104, label %97, !dbg !13755

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13756
  %99 = and i32 %98, -57345, !dbg !13756
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13756
  %101 = load i32, i32* %100, align 4, !dbg !13756
  %102 = shl i32 %101, 3, !dbg !13756
  %103 = or i32 %102, %99, !dbg !13756
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13756
  br label %104, !dbg !13758

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !13759
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13760
  %107 = lshr i32 %106, 4, !dbg !13761
  %108 = and i32 %107, 15, !dbg !13761
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !13762
  %110 = load i8, i8* %109, align 1, !dbg !13762
  %111 = zext i8 %110 to i32, !dbg !13762
  %112 = lshr i32 %105, %111, !dbg !13763
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !13764
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !13765
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !13766
  br label %115, !dbg !13767

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !13656
  ret i32 %116, !dbg !13768
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !13769 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13771, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13772, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13773, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13774, metadata !DIExpression()), !dbg !13775
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13776
  %2 = and i32 %1, 12, !dbg !13777
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13778

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !13774, metadata !DIExpression()), !dbg !13775
  br label %24, !dbg !13779

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13782
  %6 = and i32 %5, 63, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %6, metadata !13771, metadata !DIExpression()), !dbg !13775
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13785
  %8 = and i32 %7, 4194304, !dbg !13785
  %9 = icmp eq i32 %8, 0, !dbg !13787
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13788
  %11 = lshr i32 %10, 6, !dbg !13788
  %12 = and i32 %11, 511, !dbg !13788
  %13 = zext i32 %12 to i64, !dbg !13788
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !13788
  %16 = zext i32 %6 to i64, !dbg !13788
  %17 = udiv i64 %15, %16, !dbg !13788
  %18 = trunc i64 %17 to i32, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %18, metadata !13772, metadata !DIExpression()), !dbg !13775
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13789
  %20 = lshr i32 %19, 15, !dbg !13790
  %21 = and i32 %20, 6, !dbg !13790
  %22 = add nuw nsw i32 %21, 2, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %22, metadata !13773, metadata !DIExpression()), !dbg !13775
  %23 = udiv i32 %18, %22, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %23, metadata !13774, metadata !DIExpression()), !dbg !13775
  br label %24, !dbg !13792

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !13793
  call void @llvm.dbg.value(metadata i32 %25, metadata !13774, metadata !DIExpression()), !dbg !13775
  ret i32 %25, !dbg !13794
}

; Function Attrs: optsize
declare !dbg !13795 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13798 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13802, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i32 %1, metadata !13803, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i32 %2, metadata !13804, metadata !DIExpression()), !dbg !13822
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13823
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13823
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13805, metadata !DIExpression()), !dbg !13824
  %8 = icmp eq i32 %0, 0, !dbg !13825
  br i1 %8, label %9, label %23, !dbg !13826

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !13827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !13827
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13815, metadata !DIExpression()), !dbg !13827
  store volatile i32 0, i32* %5, align 4, !dbg !13827
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13827
  %12 = or i32 %11, 1, !dbg !13827
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13827
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13827
  %14 = and i32 %13, 1, !dbg !13827
  store volatile i32 %14, i32* %5, align 4, !dbg !13827
  %15 = load volatile i32, i32* %5, align 4, !dbg !13827
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !13828
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13829
  store i32 256, i32* %16, align 4, !dbg !13830
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13831
  store i32 2, i32* %17, align 4, !dbg !13832
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13833
  store i32 3, i32* %18, align 4, !dbg !13834
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13835
  store i32 0, i32* %19, align 4, !dbg !13836
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13837
  store i32 0, i32* %20, align 4, !dbg !13838
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13839
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13840
  %22 = and i32 %21, -123731969, !dbg !13840
  br label %38, !dbg !13841

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13842
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13842
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13819, metadata !DIExpression()), !dbg !13842
  store volatile i32 0, i32* %6, align 4, !dbg !13842
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13842
  %26 = or i32 %25, 4, !dbg !13842
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13842
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13842
  %28 = and i32 %27, 4, !dbg !13842
  store volatile i32 %28, i32* %6, align 4, !dbg !13842
  %29 = load volatile i32, i32* %6, align 4, !dbg !13842
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13843
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13844
  store i32 512, i32* %30, align 4, !dbg !13845
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13846
  store i32 2, i32* %31, align 4, !dbg !13847
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13848
  store i32 3, i32* %32, align 4, !dbg !13849
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13850
  store i32 0, i32* %33, align 4, !dbg !13851
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13852
  store i32 0, i32* %34, align 4, !dbg !13853
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13854
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13855
  %36 = and i32 %35, 134217727, !dbg !13855
  %37 = shl i32 %2, 3, !dbg !13855
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13856
  %42 = or i32 %41, %40, !dbg !13856
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13856
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13857
  ret void, !dbg !13857
}

; Function Attrs: optsize
declare !dbg !13858 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !13862 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13863
  ret void, !dbg !13864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !13865 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13866
  ret void, !dbg !13867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13868 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13869
  ret i32 %1, !dbg !13870
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !13871 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13872
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13873
  %3 = lshr i32 %2, 10, !dbg !13874
  %4 = and i32 %3, 7, !dbg !13874
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13875
  %6 = load i8, i8* %5, align 1, !dbg !13875
  %7 = zext i8 %6 to i32, !dbg !13875
  %8 = lshr i32 %1, %7, !dbg !13876
  ret i32 %8, !dbg !13877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !13878 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13879
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13880
  %3 = lshr i32 %2, 13, !dbg !13881
  %4 = and i32 %3, 7, !dbg !13881
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13882
  %6 = load i8, i8* %5, align 1, !dbg !13882
  %7 = zext i8 %6 to i32, !dbg !13882
  %8 = lshr i32 %1, %7, !dbg !13883
  ret i32 %8, !dbg !13884
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13885 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13889, metadata !DIExpression()), !dbg !13890
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13891
  store i32 15, i32* %2, align 4, !dbg !13892
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13893
  %4 = and i32 %3, 262144, !dbg !13895
  %5 = icmp eq i32 %4, 0, !dbg !13896
  br i1 %5, label %8, label %6, !dbg !13897

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13898
  store i32 327680, i32* %7, align 4, !dbg !13900
  br label %15, !dbg !13901

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13902
  %10 = and i32 %9, 65536, !dbg !13904
  %11 = icmp eq i32 %10, 0, !dbg !13905
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13906
  br i1 %11, label %14, label %13, !dbg !13907

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13908
  br label %15, !dbg !13910

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13911
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13913
  %17 = and i32 %16, 1, !dbg !13915
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13916
  store i32 %17, i32* %18, align 4, !dbg !13918
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13919
  %20 = lshr i32 %19, 3, !dbg !13920
  %21 = and i32 %20, 31, !dbg !13920
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13921
  store i32 %21, i32* %22, align 4, !dbg !13922
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13923
  %24 = and i32 %23, 4, !dbg !13925
  %25 = icmp eq i32 %24, 0, !dbg !13926
  br i1 %25, label %28, label %26, !dbg !13927

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13928
  store i32 5, i32* %27, align 4, !dbg !13930
  br label %35, !dbg !13931

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13932
  %30 = and i32 %29, 1, !dbg !13934
  %31 = icmp eq i32 %30, 0, !dbg !13935
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13936
  br i1 %31, label %34, label %33, !dbg !13937

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13938
  br label %35, !dbg !13940

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13941
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13943
  %37 = and i32 %36, 1, !dbg !13945
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13946
  store i32 %37, i32* %38, align 4, !dbg !13948
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13949
  %40 = and i32 %39, 16777216, !dbg !13951
  %41 = icmp eq i32 %40, 0, !dbg !13952
  %42 = select i1 %41, i32 1, i32 2, !dbg !13953
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13954
  store i32 %42, i32* %43, align 4, !dbg !13956
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13957
  %45 = and i32 %44, 4194304, !dbg !13958
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13959
  store i32 %45, i32* %46, align 4, !dbg !13960
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13961
  %48 = and i32 %47, 63, !dbg !13962
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13963
  store i32 %48, i32* %49, align 4, !dbg !13964
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13965
  %51 = lshr i32 %50, 6, !dbg !13966
  %52 = and i32 %51, 511, !dbg !13966
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13967
  store i32 %52, i32* %53, align 4, !dbg !13968
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13969
  %55 = shl i32 %54, 1, !dbg !13970
  %56 = and i32 %55, 393216, !dbg !13970
  %57 = add nuw nsw i32 %56, 131072, !dbg !13970
  %58 = lshr exact i32 %57, 16, !dbg !13971
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13972
  store i32 %58, i32* %59, align 4, !dbg !13973
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13974
  %61 = lshr i32 %60, 24, !dbg !13975
  %62 = and i32 %61, 15, !dbg !13975
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13976
  store i32 %62, i32* %63, align 4, !dbg !13977
  ret void, !dbg !13978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !13979 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13983, metadata !DIExpression()), !dbg !13985
  call void @llvm.dbg.value(metadata i32* %1, metadata !13984, metadata !DIExpression()), !dbg !13985
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13986
  store i32 15, i32* %3, align 4, !dbg !13987
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13988
  %5 = and i32 %4, 3, !dbg !13989
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13990
  store i32 %5, i32* %6, align 4, !dbg !13991
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13992
  %8 = and i32 %7, 240, !dbg !13993
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13994
  store i32 %8, i32* %9, align 4, !dbg !13995
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13996
  %11 = and i32 %10, 7168, !dbg !13997
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13998
  store i32 %11, i32* %12, align 4, !dbg !13999
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14000
  %14 = lshr i32 %13, 3, !dbg !14001
  %15 = and i32 %14, 7168, !dbg !14001
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !14002
  store i32 %15, i32* %16, align 4, !dbg !14003
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14004
  %18 = and i32 %17, 7, !dbg !14005
  store i32 %18, i32* %1, align 4, !dbg !14006
  ret void, !dbg !14007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !14008 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14009
  %2 = and i32 %1, 128, !dbg !14009
  %3 = icmp eq i32 %2, 0, !dbg !14009
  br i1 %3, label %5, label %4, !dbg !14011

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !14012
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !14014
  br label %5, !dbg !14015

5:                                                ; preds = %4, %0
  ret void, !dbg !14016
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !14017 {
  ret void, !dbg !14018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !14019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14022, metadata !DIExpression()), !dbg !14023
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !14024
  ret void, !dbg !14025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !14026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14029, metadata !DIExpression()), !dbg !14031
  call void @llvm.dbg.value(metadata i32 1000, metadata !14030, metadata !DIExpression()), !dbg !14031
  %2 = udiv i32 %0, 1000, !dbg !14032
  %3 = add nsw i32 %2, -1, !dbg !14033
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14034
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14035
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14036
  ret void, !dbg !14037
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !14038 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14040, metadata !DIExpression()), !dbg !14042
  %3 = bitcast i32* %2 to i8*, !dbg !14043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14043
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14041, metadata !DIExpression()), !dbg !14044
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14045
  store volatile i32 %4, i32* %2, align 4, !dbg !14044
  %5 = load volatile i32, i32* %2, align 4, !dbg !14046
  %6 = icmp eq i32 %0, -1, !dbg !14047
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14040, metadata !DIExpression()), !dbg !14042
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14042
  call void @llvm.dbg.value(metadata i32 %8, metadata !14040, metadata !DIExpression()), !dbg !14042
  br label %9, !dbg !14049

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14040, metadata !DIExpression()), !dbg !14042
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14050
  call void @llvm.dbg.value(metadata i32 undef, metadata !14040, metadata !DIExpression()), !dbg !14042
  %12 = shl i32 %11, 15, !dbg !14042
  %13 = ashr i32 %12, 31, !dbg !14042
  %14 = add i32 %13, %10, !dbg !14042
  call void @llvm.dbg.value(metadata i32 %14, metadata !14040, metadata !DIExpression()), !dbg !14042
  %15 = icmp eq i32 %14, 0, !dbg !14049
  br i1 %15, label %16, label %9, !dbg !14049

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14053
  ret void, !dbg !14053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14056, metadata !DIExpression()), !dbg !14057
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14058
  ret void, !dbg !14059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !14060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14065, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 0, metadata !14068, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = icmp eq i32 %0, 0, !dbg !14071
  br i1 %2, label %52, label %3, !dbg !14073

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14074
  %5 = icmp eq i32 %4, 16384, !dbg !14077
  br i1 %5, label %6, label %21, !dbg !14078

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !14079
  %8 = select i1 %7, i32 0, i32 5, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %8, metadata !14068, metadata !DIExpression()), !dbg !14070
  %9 = add i32 %0, -120000001, !dbg !14083
  %10 = icmp ult i32 %9, 30000000, !dbg !14083
  %11 = select i1 %10, i32 4, i32 %8, !dbg !14083
  call void @llvm.dbg.value(metadata i32 %11, metadata !14068, metadata !DIExpression()), !dbg !14070
  %12 = icmp ult i32 %9, -30000000, !dbg !14085
  %13 = select i1 %12, i32 %11, i32 3, !dbg !14085
  call void @llvm.dbg.value(metadata i32 %13, metadata !14068, metadata !DIExpression()), !dbg !14070
  %14 = icmp ugt i32 %0, 60000000, !dbg !14087
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !14089
  br i1 %16, label %21, label %17, !dbg !14089

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !14090
  %19 = and i1 %18, %15, !dbg !14093
  %20 = select i1 %19, i32 1, i32 %13, !dbg !14093
  br label %21, !dbg !14093

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !14070
  call void @llvm.dbg.value(metadata i32 %22, metadata !14068, metadata !DIExpression()), !dbg !14070
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14094
  %24 = icmp eq i32 %23, 0, !dbg !14096
  br i1 %24, label %25, label %41, !dbg !14097

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !14098
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !14101
  %29 = select i1 %28, i32 4, i32 %22, !dbg !14101
  call void @llvm.dbg.value(metadata i32 %29, metadata !14068, metadata !DIExpression()), !dbg !14070
  %30 = icmp ugt i32 %0, 90000000, !dbg !14102
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !14104
  %33 = select i1 %32, i32 3, i32 %29, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %33, metadata !14068, metadata !DIExpression()), !dbg !14070
  %34 = icmp ugt i32 %0, 60000000, !dbg !14105
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !14107
  br i1 %36, label %41, label %37, !dbg !14107

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !14108
  %39 = and i1 %38, %35, !dbg !14111
  %40 = select i1 %39, i32 1, i32 %33, !dbg !14111
  br label %41, !dbg !14111

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !14112
  call void @llvm.dbg.value(metadata i32 %42, metadata !14068, metadata !DIExpression()), !dbg !14070
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #26, !dbg !14113
  call void @llvm.dbg.value(metadata i32 2, metadata !14066, metadata !DIExpression()), !dbg !14070
  br label %43, !dbg !14114

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !14112
  call void @llvm.dbg.value(metadata i32 %44, metadata !14066, metadata !DIExpression()), !dbg !14070
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %45, metadata !14067, metadata !DIExpression()), !dbg !14070
  %46 = add nsw i32 %44, -1, !dbg !14117
  call void @llvm.dbg.value(metadata i32 %46, metadata !14066, metadata !DIExpression()), !dbg !14070
  %47 = icmp ne i32 %45, %42, !dbg !14118
  %48 = icmp ne i32 %46, 0, !dbg !14119
  %49 = select i1 %47, i1 %48, i1 false, !dbg !14119
  br i1 %49, label %43, label %50, !dbg !14120, !llvm.loop !14121

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !14123
  call void @llvm.dbg.value(metadata i32 %53, metadata !14069, metadata !DIExpression()), !dbg !14070
  ret i32 %53, !dbg !14124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14127
  %2 = and i32 %1, 16384, !dbg !14127
  ret i32 %2, !dbg !14128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !14129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14131, metadata !DIExpression()), !dbg !14132
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14133
  %3 = and i32 %2, -8, !dbg !14133
  %4 = or i32 %3, %0, !dbg !14133
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14133
  ret void, !dbg !14134
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14135 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14136
  %2 = and i32 %1, 7, !dbg !14136
  ret i32 %2, !dbg !14137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !14138 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14156, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14157, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 0, metadata !14158, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 0, metadata !14159, metadata !DIExpression()), !dbg !14160
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14161
  %4 = icmp eq i32 %3, 0, !dbg !14163
  br i1 %4, label %5, label %21, !dbg !14164

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %6, metadata !14159, metadata !DIExpression()), !dbg !14160
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.210() #26, !dbg !14167
  %8 = icmp eq i32 %7, 1, !dbg !14169
  br i1 %8, label %13, label %9, !dbg !14170

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.211() #26, !dbg !14171
  br label %10, !dbg !14173

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.210() #26, !dbg !14174
  %12 = icmp eq i32 %11, 1, !dbg !14175
  br i1 %12, label %13, label %10, !dbg !14173, !llvm.loop !14176

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14178
  %15 = load i32, i32* %14, align 4, !dbg !14178
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14179
  %17 = load i32, i32* %16, align 4, !dbg !14179
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14180
  %19 = load i32, i32* %18, align 4, !dbg !14180
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.212(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !14181
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %20, metadata !14158, metadata !DIExpression()), !dbg !14160
  br label %21, !dbg !14183

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14184
  call void @llvm.dbg.value(metadata i32 %22, metadata !14158, metadata !DIExpression()), !dbg !14160
  ret i32 %22, !dbg !14185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14186 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14190, metadata !DIExpression()), !dbg !14191
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.214() #26, !dbg !14192
  %2 = icmp ne i32 %1, 0, !dbg !14194
  call void @llvm.dbg.value(metadata i1 %2, metadata !14190, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14191
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !14195
  %4 = icmp ne i32 %3, 0, !dbg !14197
  %5 = select i1 %4, i1 true, i1 %2, !dbg !14198
  %6 = zext i1 %5 to i32, !dbg !14198
  call void @llvm.dbg.value(metadata i32 %6, metadata !14190, metadata !DIExpression()), !dbg !14191
  ret i32 %6, !dbg !14199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14204, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14205, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.value(metadata i32 0, metadata !14206, metadata !DIExpression()), !dbg !14207
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14208
  %4 = load i32, i32* %3, align 4, !dbg !14208
  %5 = and i32 %4, 63, !dbg !14209
  %6 = udiv i32 %0, %5, !dbg !14210
  call void @llvm.dbg.value(metadata i32 %6, metadata !14206, metadata !DIExpression()), !dbg !14207
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14211
  %8 = load i32, i32* %7, align 4, !dbg !14211
  %9 = and i32 %8, 511, !dbg !14212
  %10 = mul i32 %9, %6, !dbg !14213
  call void @llvm.dbg.value(metadata i32 %10, metadata !14206, metadata !DIExpression()), !dbg !14207
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14214
  %12 = load i32, i32* %11, align 4, !dbg !14214
  %13 = lshr i32 %12, 15, !dbg !14215
  %14 = and i32 %13, 131070, !dbg !14215
  %15 = add nuw nsw i32 %14, 2, !dbg !14215
  %16 = udiv i32 %10, %15, !dbg !14216
  call void @llvm.dbg.value(metadata i32 %16, metadata !14206, metadata !DIExpression()), !dbg !14207
  ret i32 %16, !dbg !14217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.210() unnamed_addr #17 !dbg !14218 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14219
  %2 = lshr i32 %1, 1, !dbg !14220
  %3 = and i32 %2, 1, !dbg !14220
  ret i32 %3, !dbg !14221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.211() unnamed_addr #15 !dbg !14222 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14223
  %2 = or i32 %1, 1, !dbg !14223
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14223
  ret void, !dbg !14224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.212(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !14225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14227, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.value(metadata i32 %1, metadata !14228, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.value(metadata i32 %2, metadata !14229, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.value(metadata i32 %3, metadata !14230, metadata !DIExpression()), !dbg !14231
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14232
  %6 = and i32 %5, -4227072, !dbg !14232
  %7 = or i32 %1, %0, !dbg !14232
  %8 = shl i32 %2, 6, !dbg !14232
  %9 = or i32 %7, %8, !dbg !14232
  %10 = or i32 %9, %6, !dbg !14232
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14232
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14233
  %12 = and i32 %11, -196609, !dbg !14233
  %13 = or i32 %12, %3, !dbg !14233
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14233
  ret void, !dbg !14234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !14235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14239, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14240, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 0, metadata !14241, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i32 0, metadata !14242, metadata !DIExpression()), !dbg !14243
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14244
  %4 = load i32, i32* %3, align 4, !dbg !14244
  %5 = lshr i32 %4, 4, !dbg !14244
  %6 = and i32 %5, 15, !dbg !14244
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14244
  %8 = load i8, i8* %7, align 1, !dbg !14244
  %9 = zext i8 %8 to i32, !dbg !14244
  %10 = lshr i32 %0, %9, !dbg !14244
  call void @llvm.dbg.value(metadata i32 %10, metadata !14242, metadata !DIExpression()), !dbg !14243
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14245
  %12 = icmp ult i32 %11, %10, !dbg !14247
  br i1 %12, label %13, label %16, !dbg !14248

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %14, metadata !14241, metadata !DIExpression()), !dbg !14243
  %15 = icmp eq i32 %14, 0, !dbg !14251
  br i1 %15, label %16, label %30, !dbg !14253

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.213() #26, !dbg !14254
  br label %17, !dbg !14256

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.214() #26, !dbg !14257
  %19 = icmp eq i32 %18, 1, !dbg !14258
  br i1 %19, label %20, label %17, !dbg !14256, !llvm.loop !14259

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14261
  tail call fastcc void @LL_RCC_SetAHBPrescaler.215(i32 noundef %21) #26, !dbg !14262
  tail call fastcc void @LL_RCC_SetSysClkSource.216() #26, !dbg !14263
  br label %22, !dbg !14264

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.217() #26, !dbg !14265
  %24 = icmp eq i32 %23, 8, !dbg !14266
  br i1 %24, label %25, label %22, !dbg !14264, !llvm.loop !14267

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14269
  %27 = load i32, i32* %26, align 4, !dbg !14269
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.218(i32 noundef %27) #26, !dbg !14270
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14271
  %29 = load i32, i32* %28, align 4, !dbg !14271
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.219(i32 noundef %29) #26, !dbg !14272
  br label %30, !dbg !14273

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14274
  %33 = icmp ugt i32 %32, %10, !dbg !14276
  br i1 %33, label %34, label %36, !dbg !14277

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %35, metadata !14241, metadata !DIExpression()), !dbg !14243
  br label %36, !dbg !14280

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14243
  call void @llvm.dbg.value(metadata i32 %37, metadata !14241, metadata !DIExpression()), !dbg !14243
  %38 = icmp eq i32 %37, 0, !dbg !14281
  br i1 %38, label %39, label %40, !dbg !14283

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14284
  br label %40, !dbg !14286

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.213() unnamed_addr #15 !dbg !14288 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14289
  %2 = or i32 %1, 16777216, !dbg !14289
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14289
  ret void, !dbg !14290
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.214() unnamed_addr #17 !dbg !14291 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14292
  %2 = lshr i32 %1, 25, !dbg !14293
  %3 = and i32 %2, 1, !dbg !14293
  ret i32 %3, !dbg !14294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.215(i32 noundef %0) unnamed_addr #15 !dbg !14295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14297, metadata !DIExpression()), !dbg !14298
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14299
  %3 = and i32 %2, -241, !dbg !14299
  %4 = or i32 %3, %0, !dbg !14299
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14299
  ret void, !dbg !14300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.216() unnamed_addr #15 !dbg !14301 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14303, metadata !DIExpression()), !dbg !14304
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14305
  %2 = and i32 %1, -4, !dbg !14305
  %3 = or i32 %2, 2, !dbg !14305
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14305
  ret void, !dbg !14306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.217() unnamed_addr #17 !dbg !14307 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14308
  %2 = and i32 %1, 12, !dbg !14308
  ret i32 %2, !dbg !14309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.218(i32 noundef %0) unnamed_addr #15 !dbg !14310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14312, metadata !DIExpression()), !dbg !14313
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14314
  %3 = and i32 %2, -7169, !dbg !14314
  %4 = or i32 %3, %0, !dbg !14314
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14314
  ret void, !dbg !14315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.219(i32 noundef %0) unnamed_addr #15 !dbg !14316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14318, metadata !DIExpression()), !dbg !14319
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14320
  %3 = and i32 %2, -57345, !dbg !14320
  %4 = or i32 %3, %0, !dbg !14320
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14320
  ret void, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14322 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14323
  %2 = lshr i32 %1, 27, !dbg !14324
  %3 = and i32 %2, 1, !dbg !14324
  ret i32 %3, !dbg !14325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14330, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i32 %1, metadata !14331, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14332, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14333, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i32 0, metadata !14334, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i32 0, metadata !14335, metadata !DIExpression()), !dbg !14336
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14337
  %6 = icmp eq i32 %5, 0, !dbg !14339
  br i1 %6, label %7, label %27, !dbg !14340

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !14341
  call void @llvm.dbg.value(metadata i32 %8, metadata !14335, metadata !DIExpression()), !dbg !14336
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.220() #26, !dbg !14343
  %10 = icmp eq i32 %9, 1, !dbg !14345
  br i1 %10, label %19, label %11, !dbg !14346

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14347
  br i1 %12, label %13, label %14, !dbg !14350

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !14351
  br label %15, !dbg !14353

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.221() #26, !dbg !14354
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.222() #26, !dbg !14356
  br label %16, !dbg !14357

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.220() #26, !dbg !14358
  %18 = icmp eq i32 %17, 1, !dbg !14359
  br i1 %18, label %19, label %16, !dbg !14357, !llvm.loop !14360

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14362
  %21 = load i32, i32* %20, align 4, !dbg !14362
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14363
  %23 = load i32, i32* %22, align 4, !dbg !14363
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14364
  %25 = load i32, i32* %24, align 4, !dbg !14364
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.212(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !14365
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %26, metadata !14334, metadata !DIExpression()), !dbg !14336
  br label %27, !dbg !14367

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14368
  call void @llvm.dbg.value(metadata i32 %28, metadata !14334, metadata !DIExpression()), !dbg !14336
  ret i32 %28, !dbg !14369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.220() unnamed_addr #17 !dbg !14370 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14371
  %2 = lshr i32 %1, 17, !dbg !14372
  %3 = and i32 %2, 1, !dbg !14372
  ret i32 %3, !dbg !14373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !14374 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14375
  %2 = or i32 %1, 262144, !dbg !14375
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14375
  ret void, !dbg !14376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.221() unnamed_addr #15 !dbg !14377 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14378
  %2 = and i32 %1, -262145, !dbg !14378
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14378
  ret void, !dbg !14379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.222() unnamed_addr #15 !dbg !14380 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14381
  %2 = or i32 %1, 65536, !dbg !14381
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14381
  ret void, !dbg !14382
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14383 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14386, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14402
  ret void, !dbg !14403
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14404 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14408, metadata !DIExpression()), !dbg !14410
  %2 = icmp eq i8* %0, null, !dbg !14411
  br i1 %2, label %29, label %3, !dbg !14413

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14414
  %5 = icmp eq i8 %4, 0, !dbg !14415
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14416
  br i1 %6, label %29, label %8, !dbg !14416

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14409, metadata !DIExpression()), !dbg !14410
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14417

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14409, metadata !DIExpression()), !dbg !14410
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14419
  br i1 %10, label %11, label %15, !dbg !14424

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14425
  %13 = load i8*, i8** %12, align 4, !dbg !14425
  %14 = icmp eq i8* %13, %0, !dbg !14426
  br i1 %14, label %29, label %15, !dbg !14427

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14428
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14409, metadata !DIExpression()), !dbg !14410
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14429
  br i1 %17, label %7, label %8, !dbg !14430, !llvm.loop !14431

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14409, metadata !DIExpression()), !dbg !14410
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14433
  br i1 %20, label %21, label %26, !dbg !14437

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14438
  %23 = load i8*, i8** %22, align 4, !dbg !14438
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14439
  %25 = icmp eq i32 %24, 0, !dbg !14440
  br i1 %25, label %29, label %26, !dbg !14441

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14442
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14409, metadata !DIExpression()), !dbg !14410
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14443
  br i1 %28, label %29, label %18, !dbg !14417, !llvm.loop !14444

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14410
  ret %struct.device* %30, !dbg !14446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14451, metadata !DIExpression()), !dbg !14452
  %2 = icmp eq %struct.device* %0, null, !dbg !14453
  br i1 %2, label %14, label %3, !dbg !14455

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14456
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14456
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14457
  %7 = load i8, i8* %6, align 1, !dbg !14457
  %8 = and i8 %7, 1, !dbg !14457
  %9 = icmp eq i8 %8, 0, !dbg !14457
  br i1 %9, label %14, label %10, !dbg !14458

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14459
  %12 = load i8, i8* %11, align 1, !dbg !14459
  %13 = icmp eq i8 %12, 0, !dbg !14460
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14452
  ret i1 %15, !dbg !14461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14467, metadata !DIExpression()), !dbg !14468
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14469
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14471 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14479, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14480, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata i8* %2, metadata !14481, metadata !DIExpression()), !dbg !14484
  %5 = bitcast i32* %4 to i8*, !dbg !14485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14485
  call void @llvm.dbg.value(metadata i32 0, metadata !14482, metadata !DIExpression()), !dbg !14484
  store i32 0, i32* %4, align 4, !dbg !14486
  call void @llvm.dbg.value(metadata i32* %4, metadata !14482, metadata !DIExpression(DW_OP_deref)), !dbg !14484
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14487
  call void @llvm.dbg.value(metadata i16* %6, metadata !14483, metadata !DIExpression()), !dbg !14484
  %7 = load i32, i32* %4, align 4, !dbg !14488
  call void @llvm.dbg.value(metadata i32 %7, metadata !14482, metadata !DIExpression()), !dbg !14484
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14490
  ret i32 %8, !dbg !14491
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14496, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32* %1, metadata !14497, metadata !DIExpression()), !dbg !14502
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14503
  %4 = load i16*, i16** %3, align 4, !dbg !14503
  call void @llvm.dbg.value(metadata i16* %4, metadata !14498, metadata !DIExpression()), !dbg !14502
  %5 = icmp eq i16* %4, null, !dbg !14504
  br i1 %5, label %14, label %6, !dbg !14505

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14506
  call void @llvm.dbg.value(metadata i32 %7, metadata !14499, metadata !DIExpression()), !dbg !14506
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14507
  %9 = load i16, i16* %8, align 2, !dbg !14507
  %10 = add i16 %9, -32767, !dbg !14508
  %11 = icmp ult i16 %10, 2, !dbg !14508
  %12 = add i32 %7, 1, !dbg !14509
  call void @llvm.dbg.value(metadata i32 %12, metadata !14499, metadata !DIExpression()), !dbg !14506
  br i1 %11, label %13, label %6, !dbg !14508, !llvm.loop !14511

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14514
  br label %14, !dbg !14515

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14517 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14521, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 %1, metadata !14522, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14523, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i8* %3, metadata !14524, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 0, metadata !14525, metadata !DIExpression()), !dbg !14533
  %5 = icmp eq i32 %1, 0, !dbg !14534
  br i1 %5, label %16, label %8, !dbg !14535

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14525, metadata !DIExpression()), !dbg !14533
  %7 = icmp eq i32 %15, %1, !dbg !14534
  br i1 %7, label %16, label %8, !dbg !14535, !llvm.loop !14536

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14525, metadata !DIExpression()), !dbg !14533
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14538
  %11 = load i16, i16* %10, align 2, !dbg !14538
  call void @llvm.dbg.value(metadata i16 %11, metadata !14527, metadata !DIExpression()), !dbg !14539
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14540
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14530, metadata !DIExpression()), !dbg !14539
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14541
  call void @llvm.dbg.value(metadata i32 %13, metadata !14531, metadata !DIExpression()), !dbg !14539
  %14 = icmp slt i32 %13, 0, !dbg !14542
  %15 = add nuw i32 %9, 1, !dbg !14544
  call void @llvm.dbg.value(metadata i32 %15, metadata !14525, metadata !DIExpression()), !dbg !14533
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !14546 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14550, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14551, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14552, metadata !DIExpression()), !dbg !14553
  %2 = sext i16 %0 to i32, !dbg !14554
  %3 = icmp slt i16 %0, 1, !dbg !14556
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14557
  %6 = add nsw i32 %2, -1, !dbg !14557
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14557
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14557
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14551, metadata !DIExpression()), !dbg !14553
  ret %struct.device* %8, !dbg !14558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14559 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14561, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14562, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i8* %2, metadata !14563, metadata !DIExpression()), !dbg !14566
  %5 = bitcast i32* %4 to i8*, !dbg !14567
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14567
  call void @llvm.dbg.value(metadata i32 0, metadata !14564, metadata !DIExpression()), !dbg !14566
  store i32 0, i32* %4, align 4, !dbg !14568
  call void @llvm.dbg.value(metadata i32* %4, metadata !14564, metadata !DIExpression(DW_OP_deref)), !dbg !14566
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14569
  call void @llvm.dbg.value(metadata i16* %6, metadata !14565, metadata !DIExpression()), !dbg !14566
  %7 = load i32, i32* %4, align 4, !dbg !14570
  call void @llvm.dbg.value(metadata i32 %7, metadata !14564, metadata !DIExpression()), !dbg !14566
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14572
  ret i32 %8, !dbg !14573
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14576, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32* %1, metadata !14577, metadata !DIExpression()), !dbg !14581
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14582
  %4 = load i16*, i16** %3, align 4, !dbg !14582
  call void @llvm.dbg.value(metadata i16* %4, metadata !14578, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14579, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14580, metadata !DIExpression()), !dbg !14581
  %5 = icmp eq i16* %4, null, !dbg !14583
  br i1 %5, label %22, label %6, !dbg !14585

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14579, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i16* %8, metadata !14578, metadata !DIExpression()), !dbg !14581
  %9 = load i16, i16* %8, align 2, !dbg !14586
  %10 = icmp eq i16 %9, -32768, !dbg !14590
  call void @llvm.dbg.value(metadata i32 undef, metadata !14579, metadata !DIExpression()), !dbg !14581
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14591
  call void @llvm.dbg.value(metadata i16* %11, metadata !14578, metadata !DIExpression()), !dbg !14581
  %12 = zext i1 %10 to i32, !dbg !14592
  %13 = add i32 %7, %12, !dbg !14592
  call void @llvm.dbg.value(metadata i32 %13, metadata !14579, metadata !DIExpression()), !dbg !14581
  %14 = icmp eq i32 %13, 2, !dbg !14593
  br i1 %14, label %15, label %6, !dbg !14594

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14581
  call void @llvm.dbg.value(metadata i32 %16, metadata !14580, metadata !DIExpression()), !dbg !14581
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14595
  %18 = load i16, i16* %17, align 2, !dbg !14595
  %19 = icmp eq i16 %18, 32767, !dbg !14596
  %20 = add i32 %16, 1, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %20, metadata !14580, metadata !DIExpression()), !dbg !14581
  br i1 %19, label %21, label %15, !dbg !14599, !llvm.loop !14600

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14602
  br label %22, !dbg !14603

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14604
  call void @llvm.dbg.value(metadata i16* %23, metadata !14578, metadata !DIExpression()), !dbg !14581
  ret i16* %23, !dbg !14605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14606 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14609
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14610
  ret i32* %2, !dbg !14611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !14612 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14761, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14762, metadata !DIExpression()), !dbg !14763
  ret void, !dbg !14764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14769, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 %1, metadata !14770, metadata !DIExpression()), !dbg !14771
  ret void, !dbg !14772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14777, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 %1, metadata !14778, metadata !DIExpression()), !dbg !14779
  ret void, !dbg !14780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14785, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.value(metadata i8* %1, metadata !14786, metadata !DIExpression()), !dbg !14787
  ret i32 -134, !dbg !14788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8* %1, metadata !14794, metadata !DIExpression()), !dbg !14795
  ret i32 -134, !dbg !14796
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14800, metadata !DIExpression()), !dbg !14801
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14802, !srcloc !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14805, metadata !DIExpression()) #25, !dbg !14809
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #25, !dbg !14809
  br label %3, !dbg !14810

3:                                                ; preds = %3, %1
  br label %3, !dbg !14811, !llvm.loop !14814
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14821, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14822, metadata !DIExpression()), !dbg !14823
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.229, i32 0, i32 0), i32 noundef 69) #27, !dbg !14824
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14829
  unreachable, !dbg !14829
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14832, metadata !DIExpression()), !dbg !14833
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14834
  unreachable, !dbg !14834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14837, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14838, metadata !DIExpression()), !dbg !14841
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14842, !srcloc !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14805, metadata !DIExpression()) #25, !dbg !14844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14806, metadata !DIExpression()) #25, !dbg !14844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14839, metadata !DIExpression()), !dbg !14841
  %4 = tail call fastcc %struct.k_thread* @k_current_get.232() #28, !dbg !14845
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14840, metadata !DIExpression()), !dbg !14841
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14846
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.233, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14846
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14851
  br i1 %6, label %15, label %7, !dbg !14853

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14854, metadata !DIExpression()), !dbg !14859
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14861
  %9 = load i32, i32* %8, align 4, !dbg !14861
  %10 = and i32 %9, 511, !dbg !14862
  %11 = icmp eq i32 %10, 0, !dbg !14863
  br i1 %11, label %13, label %12, !dbg !14864

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 69) #27, !dbg !14865
  br label %13, !dbg !14871

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14872
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.235, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14872
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14877
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14854, metadata !DIExpression()), !dbg !14878
  br label %17, !dbg !14883

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14872
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.235, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !14872
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14877
  br label %17, !dbg !14884

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %18, metadata !14805, metadata !DIExpression()) #25, !dbg !14844
  call void @llvm.dbg.value(metadata i32 %18, metadata !14839, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14885, metadata !DIExpression()) #25, !dbg !14888
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14890, !srcloc !14891
  tail call fastcc void @k_thread_abort.236(%struct.k_thread* noundef %4) #26, !dbg !14892
  ret void, !dbg !14895
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.232() unnamed_addr #13 !dbg !14896 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.244() #28, !dbg !14900
  ret %struct.k_thread* %1, !dbg !14901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !14902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14906, metadata !DIExpression()), !dbg !14907
  %2 = icmp ult i32 %0, 5, !dbg !14908
  br i1 %2, label %3, label %6, !dbg !14908

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14908
  %5 = load i8*, i8** %4, align 4, !dbg !14908
  br label %6, !dbg !14908

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.238, i32 0, i32 0), %1 ], !dbg !14909
  ret i8* %7, !dbg !14911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14916, metadata !DIExpression()), !dbg !14918
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14919
  br i1 %2, label %9, label %3, !dbg !14920

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14921
  call void @llvm.dbg.value(metadata i8* %4, metadata !14917, metadata !DIExpression()), !dbg !14918
  %5 = icmp eq i8* %4, null, !dbg !14922
  br i1 %5, label %9, label %6, !dbg !14924

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14925
  %8 = icmp eq i8 %7, 0, !dbg !14926
  br i1 %8, label %9, label %10, !dbg !14927

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.237, i32 0, i32 0), metadata !14917, metadata !DIExpression()), !dbg !14918
  br label %10, !dbg !14928

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.237, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14918
  call void @llvm.dbg.value(metadata i8* %11, metadata !14917, metadata !DIExpression()), !dbg !14918
  ret i8* %11, !dbg !14930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.236(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14935, metadata !DIExpression()), !dbg !14936
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14937, !srcloc !14939
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14940
  ret void, !dbg !14941
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.244() unnamed_addr #13 !dbg !14942 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14943, !srcloc !14945
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14946
  ret %struct.k_thread* %1, !dbg !14947
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14948 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14952, metadata !DIExpression()), !dbg !14955
  call void @llvm.dbg.value(metadata i32 %1, metadata !14953, metadata !DIExpression()), !dbg !14955
  call void @llvm.dbg.value(metadata i32 %2, metadata !14954, metadata !DIExpression()), !dbg !14955
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14956
  ret void, !dbg !14957
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14962, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata i8* %1, metadata !14963, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata i32 %2, metadata !14964, metadata !DIExpression()), !dbg !14965
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14966
  ret void, !dbg !14967
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14968 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14969
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !14970
  ret void, !dbg !14971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14974, metadata !DIExpression()), !dbg !14975
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14976
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14977
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14978
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14979
  %4 = trunc i32 %0 to i8, !dbg !14980
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14981
  store i8 %4, i8* %5, align 4, !dbg !14982
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14983
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14984
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14985
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14986
  store i8* %8, i8** %9, align 4, !dbg !14987
  ret void, !dbg !14988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14991, metadata !DIExpression()), !dbg !14997
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14998
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14992, metadata !DIExpression()), !dbg !14997
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14999
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14993, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i8* null, metadata !14996, metadata !DIExpression()), !dbg !14997
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15000
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15001
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !15002
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !15003
  ret void, !dbg !15004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15009, metadata !DIExpression()), !dbg !15010
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15011
  ret i8* %2, !dbg !15012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15018, metadata !DIExpression()), !dbg !15019
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15020
  %3 = load i8, i8* %2, align 1, !dbg !15021
  %4 = and i8 %3, -5, !dbg !15021
  store i8 %4, i8* %2, align 1, !dbg !15021
  ret void, !dbg !15022
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !15023 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !15026
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !15027
  %3 = ptrtoint i8* %2 to i32, !dbg !15036
  %4 = add i32 %3, 2048, !dbg !15037
  call void @llvm.dbg.value(metadata i32 %4, metadata !15031, metadata !DIExpression()) #25, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %4, metadata !15039, metadata !DIExpression()) #25, !dbg !15042
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15044, !srcloc !15045
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15046
  %6 = or i32 %5, 512, !dbg !15046
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15046
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -2, i32 noundef 255) #27, !dbg !15047
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -5, i32 noundef 0) #27, !dbg !15050
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -12, i32 noundef 0) #27, !dbg !15051
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -11, i32 noundef 0) #27, !dbg !15052
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -10, i32 noundef 0) #27, !dbg !15053
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -4, i32 noundef 0) #27, !dbg !15054
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15055
  %8 = or i32 %7, 458752, !dbg !15055
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15055
  tail call void @z_arm_fault_init() #27, !dbg !15056
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15057
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15058
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15061
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15062
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15063
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15064
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15064
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15025, metadata !DIExpression()), !dbg !15065
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15066
  call void @z_device_state_init() #27, !dbg !15067
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15068
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15069
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15070
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15071
  unreachable, !dbg !15071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2388, metadata !DIExpression()), !dbg !15072
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15073
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15073
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2389, metadata !DIExpression()), !dbg !15072
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2389, metadata !DIExpression()), !dbg !15072
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15074
  br i1 %7, label %8, label %35, !dbg !15075

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2389, metadata !DIExpression()), !dbg !15072
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15076
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15076
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2399, metadata !DIExpression()), !dbg !15077
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15078
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15078
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15079
  call void @llvm.dbg.value(metadata i32 %14, metadata !2403, metadata !DIExpression()), !dbg !15077
  %15 = icmp eq %struct.device* %11, null, !dbg !15080
  br i1 %15, label %32, label %16, !dbg !15082

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15083
  br i1 %17, label %26, label %18, !dbg !15086

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15087
  call void @llvm.dbg.value(metadata i32 %19, metadata !2403, metadata !DIExpression()), !dbg !15077
  %20 = icmp ult i32 %19, 255, !dbg !15089
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15089
  call void @llvm.dbg.value(metadata i32 %21, metadata !2403, metadata !DIExpression()), !dbg !15077
  %22 = trunc i32 %21 to i8, !dbg !15090
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15091
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15091
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15092
  store i8 %22, i8* %25, align 1, !dbg !15093
  br label %26, !dbg !15094

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15095
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15095
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15096
  %30 = load i8, i8* %29, align 1, !dbg !15097
  %31 = or i8 %30, 1, !dbg !15097
  store i8 %31, i8* %29, align 1, !dbg !15097
  br label %32, !dbg !15098

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15099
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2389, metadata !DIExpression()), !dbg !15072
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15074
  br i1 %34, label %8, label %35, !dbg !15075, !llvm.loop !15100

35:                                               ; preds = %32, %1
  ret void, !dbg !15102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.253(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !15103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15105, metadata !DIExpression()), !dbg !15107
  call void @llvm.dbg.value(metadata i32 %1, metadata !15106, metadata !DIExpression()), !dbg !15107
  %3 = trunc i32 %1 to i8, !dbg !15108
  %4 = shl i8 %3, 4, !dbg !15108
  %5 = and i32 %0, 15, !dbg !15111
  %6 = add nsw i32 %5, -4, !dbg !15112
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15113
  store volatile i8 %4, i8* %7, align 1, !dbg !15114
  ret void, !dbg !15115
}

; Function Attrs: optsize
declare !dbg !15116 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15120, metadata !DIExpression()), !dbg !15121
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15122
  store i8 1, i8* %2, align 1, !dbg !15123
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15124
  store i8 1, i8* %3, align 4, !dbg !15125
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15126
  store i32 0, i32* %4, align 4, !dbg !15127
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15128
  store i32 0, i32* %5, align 4, !dbg !15129
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15130
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15131
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15132
  ret void, !dbg !15133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15134 {
  tail call void @z_sched_init() #27, !dbg !15139
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15140
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.254, i32 0, i32 0)) #27, !dbg !15141
  call void @llvm.dbg.value(metadata i8* %1, metadata !15138, metadata !DIExpression()), !dbg !15142
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15143
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15144
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15145
  ret i8* %1, !dbg !15146
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15147 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15151, metadata !DIExpression()), !dbg !15152
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15153
  unreachable, !dbg !15154
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15157, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.value(metadata i8* %1, metadata !15158, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.value(metadata i8* %2, metadata !15159, metadata !DIExpression()), !dbg !15160
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15161
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15162
  tail call void @boot_banner() #27, !dbg !15163
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15164
  tail call void @z_init_static_threads() #27, !dbg !15165
  tail call void @main() #27, !dbg !15166
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15167
  %5 = and i8 %4, -2, !dbg !15167
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15167
  ret void, !dbg !15168
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15169 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15179, metadata !DIExpression()), !dbg !15181
  call void @llvm.dbg.value(metadata i8* %1, metadata !15180, metadata !DIExpression()), !dbg !15181
  ret void, !dbg !15182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15183 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15185, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i8* %1, metadata !15186, metadata !DIExpression()), !dbg !15187
  ret void, !dbg !15188
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15189 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15190, !srcloc !15197
  call void @llvm.dbg.value(metadata i32 %1, metadata !15193, metadata !DIExpression()) #25, !dbg !15198
  %2 = icmp ne i32 %1, 0, !dbg !15199
  ret i1 %2, !dbg !15200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15201 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15202
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15203
  %3 = load i8, i8* %2, align 4, !dbg !15204
  %4 = or i8 %3, 1, !dbg !15204
  store i8 %4, i8* %2, align 4, !dbg !15204
  ret void, !dbg !15205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15206 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15207
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15208
  %3 = load i8, i8* %2, align 4, !dbg !15209
  %4 = and i8 %3, -2, !dbg !15209
  store i8 %4, i8* %2, align 4, !dbg !15209
  ret void, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15211 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15213
  %3 = load i8, i8* %2, align 4, !dbg !15213
  %4 = and i8 %3, 1, !dbg !15214
  %5 = icmp ne i8 %4, 0, !dbg !15215
  ret i1 %5, !dbg !15216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15217 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15221, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata i8* %1, metadata !15222, metadata !DIExpression()), !dbg !15223
  ret i32 -88, !dbg !15224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()), !dbg !15230
  ret i8* null, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15236, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i8* %1, metadata !15237, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i32 %2, metadata !15238, metadata !DIExpression()), !dbg !15239
  ret i32 -88, !dbg !15240
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2526, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i8* %1, metadata !2527, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 %2, metadata !2528, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 0, metadata !2529, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i8 undef, metadata !2531, metadata !DIExpression()), !dbg !15241
  %4 = icmp eq i8* %1, null, !dbg !15242
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15244
  br i1 %6, label %46, label %7, !dbg !15244

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15245
  %9 = load i8, i8* %8, align 1, !dbg !15245
  call void @llvm.dbg.value(metadata i8 %9, metadata !2531, metadata !DIExpression()), !dbg !15241
  %10 = add i32 %2, -1, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %10, metadata !2528, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i8 0, metadata !2532, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.value(metadata i8 %9, metadata !2531, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 0, metadata !2529, metadata !DIExpression()), !dbg !15241
  %11 = icmp eq i8 %9, 0, !dbg !15248
  br i1 %11, label %12, label %15, !dbg !15250

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15251
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15252
  store i8 0, i8* %14, align 1, !dbg !15253
  br label %46, !dbg !15254

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2532, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.value(metadata i8 %17, metadata !2531, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 %18, metadata !2529, metadata !DIExpression()), !dbg !15241
  %19 = zext i8 %17 to i32, !dbg !15255
  %20 = zext i8 %16 to i32, !dbg !15256
  %21 = shl nuw i32 1, %20, !dbg !15256
  call void @llvm.dbg.value(metadata i32 %21, metadata !2530, metadata !DIExpression()), !dbg !15241
  %22 = and i32 %21, %19, !dbg !15258
  %23 = icmp eq i32 %22, 0, !dbg !15260
  br i1 %23, label %42, label %24, !dbg !15261

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15262
  %26 = sub i32 %10, %18, !dbg !15263
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15264
  %28 = load i8*, i8** %27, align 4, !dbg !15264
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15265
  %30 = load i32, i32* %29, align 4, !dbg !15265
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15266
  %32 = add i32 %31, %18, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %32, metadata !2529, metadata !DIExpression()), !dbg !15241
  %33 = trunc i32 %21 to i8, !dbg !15268
  %34 = xor i8 %33, -1, !dbg !15268
  %35 = and i8 %17, %34, !dbg !15268
  call void @llvm.dbg.value(metadata i8 %35, metadata !2531, metadata !DIExpression()), !dbg !15241
  %36 = icmp eq i8 %35, 0, !dbg !15269
  br i1 %36, label %12, label %37, !dbg !15271

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15272
  %39 = sub i32 %10, %32, !dbg !15274
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.257, i32 0, i32 0), i32 noundef 1) #26, !dbg !15275
  %41 = add i32 %40, %32, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %41, metadata !2529, metadata !DIExpression()), !dbg !15241
  br label %42, !dbg !15277

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15241
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15241
  call void @llvm.dbg.value(metadata i8 %44, metadata !2531, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata i32 %43, metadata !2529, metadata !DIExpression()), !dbg !15241
  %45 = add i8 %16, 1, !dbg !15278
  call void @llvm.dbg.value(metadata i8 %45, metadata !2532, metadata !DIExpression()), !dbg !15247
  br label %15, !dbg !15250

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.258, i32 0, i32 0), %3 ], !dbg !15241
  ret i8* %47, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15284, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 %1, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i8* %2, metadata !15286, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !15287, metadata !DIExpression()), !dbg !15289
  %5 = icmp ult i32 %1, %3, !dbg !15290
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %6, metadata !15288, metadata !DIExpression()), !dbg !15289
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15291
  ret i32 %6, !dbg !15292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15297, metadata !DIExpression()), !dbg !15298
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15299
  ret void, !dbg !15300
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15310, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15311, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %2, metadata !15312, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15313, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i8* %4, metadata !15314, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i8* %5, metadata !15315, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i8* %6, metadata !15316, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %7, metadata !15317, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %8, metadata !15318, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i8* undef, metadata !15319, metadata !DIExpression()), !dbg !15321
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15322
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15323
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15324
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15325
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15326
  call void @llvm.dbg.value(metadata i8* %13, metadata !15320, metadata !DIExpression()), !dbg !15321
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15327
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15328
  store i8* null, i8** %14, align 4, !dbg !15329
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15330
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15330
  br i1 %16, label %20, label %17, !dbg !15332

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15333
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15333
  br label %20, !dbg !15334

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15321
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15335
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15337
  ret i8* %13, !dbg !15338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15339 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15344, metadata !DIExpression()), !dbg !15345
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15346
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !15347
  ret void, !dbg !15348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15349 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15354, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.value(metadata i32 %1, metadata !15355, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.value(metadata i32 %2, metadata !15356, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.value(metadata i32 %3, metadata !15357, metadata !DIExpression()), !dbg !15358
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15359
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15360
  %6 = trunc i32 %3 to i8, !dbg !15361
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15362
  store i8 %6, i8* %7, align 4, !dbg !15363
  %8 = trunc i32 %2 to i8, !dbg !15364
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15365
  store i8 %8, i8* %9, align 1, !dbg !15366
  %10 = trunc i32 %1 to i8, !dbg !15367
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15368
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15368
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15368
  store i8 %10, i8* %13, align 2, !dbg !15369
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15370
  store i8 0, i8* %14, align 1, !dbg !15371
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !15372
  ret void, !dbg !15373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15378, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15379, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata i32 %2, metadata !15380, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata i32 0, metadata !15385, metadata !DIExpression()), !dbg !15386
  %4 = add i32 %2, 7, !dbg !15387
  %5 = and i32 %4, -8, !dbg !15387
  %6 = add i32 %5, 64, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %6, metadata !15381, metadata !DIExpression()), !dbg !15386
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.268(%struct.z_thread_stack_element* noundef %1) #26, !dbg !15389
  call void @llvm.dbg.value(metadata i8* %7, metadata !15384, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata i32 %5, metadata !15382, metadata !DIExpression()), !dbg !15386
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15390
  call void @llvm.dbg.value(metadata i8* %8, metadata !15383, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata i32 0, metadata !15385, metadata !DIExpression()), !dbg !15386
  %9 = ptrtoint i8* %7 to i32, !dbg !15391
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15392
  store i32 %9, i32* %10, align 4, !dbg !15393
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15394
  store i32 %5, i32* %11, align 4, !dbg !15395
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15396
  store i32 0, i32* %12, align 4, !dbg !15397
  call void @llvm.dbg.value(metadata i8* %8, metadata !15383, metadata !DIExpression()), !dbg !15386
  ret i8* %8, !dbg !15398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.268(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15403, metadata !DIExpression()), !dbg !15404
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15405
  ret i8* %2, !dbg !15406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15407 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15412, metadata !DIExpression()), !dbg !15413
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15414
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15415
  ret void, !dbg !15416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15417 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15419, metadata !DIExpression()), !dbg !15420
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15421
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15422
  ret void, !dbg !15423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15424 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15428, metadata !DIExpression()), !dbg !15429
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15430
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15431
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15432
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15433
  ret void, !dbg !15434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15435 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15440, metadata !DIExpression()), !dbg !15441
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15442
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15443
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15444
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15445
  ret void, !dbg !15446
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15447 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15464, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15455, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15456, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i32 %2, metadata !15457, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15458, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i8* %4, metadata !15459, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i8* %5, metadata !15460, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i8* %6, metadata !15461, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i32 %7, metadata !15462, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i32 %8, metadata !15463, metadata !DIExpression()), !dbg !15465
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15466
  %13 = icmp eq i64 %11, -1, !dbg !15467
  br i1 %13, label %15, label %14, !dbg !15469

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15470
  br label %15, !dbg !15472

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15474 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15479, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15478, metadata !DIExpression()), !dbg !15480
  %4 = icmp eq i64 %3, 0, !dbg !15481
  br i1 %4, label %5, label %6, !dbg !15483

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15484
  br label %7, !dbg !15486

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15487
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15490 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15494, metadata !DIExpression()), !dbg !15495
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15496, !srcloc !15498
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15499
  ret void, !dbg !15500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15501 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15504, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15503, metadata !DIExpression()), !dbg !15505
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15506
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15507
  ret void, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15509 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15511, metadata !DIExpression()), !dbg !15531
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15532

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15533
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15529, metadata !DIExpression()), !dbg !15534
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15535

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15511, metadata !DIExpression()), !dbg !15531
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15536
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15536
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15539
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15539
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15540
  %9 = load i32, i32* %8, align 4, !dbg !15540
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15541
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15541
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15542
  %13 = load i8*, i8** %12, align 4, !dbg !15542
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15543
  %15 = load i8*, i8** %14, align 4, !dbg !15543
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15544
  %17 = load i8*, i8** %16, align 4, !dbg !15544
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15545
  %19 = load i32, i32* %18, align 4, !dbg !15545
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15546
  %21 = load i32, i32* %20, align 4, !dbg !15546
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15547
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15548
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15549
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15550
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15550
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15551
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15511, metadata !DIExpression()), !dbg !15531
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15552
  br i1 %27, label %2, label %1, !dbg !15532, !llvm.loop !15554

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15533
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15529, metadata !DIExpression()), !dbg !15534
  br label %29, !dbg !15535

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15556
  ret void, !dbg !15557

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15529, metadata !DIExpression()), !dbg !15534
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15558
  %33 = load i32, i32* %32, align 4, !dbg !15558
  %34 = icmp eq i32 %33, -1, !dbg !15562
  br i1 %34, label %43, label %35, !dbg !15563

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15564
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15564
  %38 = icmp sgt i32 %33, 0, !dbg !15566
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15566
  %40 = zext i32 %39 to i64, !dbg !15566
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !15566
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15567
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15567
  br label %43, !dbg !15568

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15569
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15529, metadata !DIExpression()), !dbg !15534
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15570
  br i1 %45, label %30, label %29, !dbg !15535, !llvm.loop !15572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15574 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15579, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i64 %0, metadata !15581, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i32 1000, metadata !15586, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i32 10000, metadata !15587, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i8 1, metadata !15588, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i8 0, metadata !15589, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i8 1, metadata !15590, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i8 0, metadata !15591, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i8 1, metadata !15592, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i8 0, metadata !15593, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i64 0, metadata !15594, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i64 0, metadata !15594, metadata !DIExpression()), !dbg !15598
  %2 = mul i64 %0, 10, !dbg !15600
  ret i64 %2, !dbg !15606
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !15607 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15609, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i8* %1, metadata !15610, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i8* %2, metadata !15611, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i8* %3, metadata !15612, metadata !DIExpression()), !dbg !15613
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15614
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15615
  %7 = load i8, i8* %6, align 4, !dbg !15616
  %8 = or i8 %7, 4, !dbg !15616
  store i8 %8, i8* %6, align 4, !dbg !15616
  tail call void @z_thread_essential_clear() #26, !dbg !15617
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15618
  unreachable, !dbg !15618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15623, metadata !DIExpression()), !dbg !15624
  ret i32 -134, !dbg !15625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15626 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15630, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i32 %1, metadata !15631, metadata !DIExpression()), !dbg !15632
  ret i32 -134, !dbg !15633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !15634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15641, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15642, metadata !DIExpression()), !dbg !15643
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15644
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15646
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15643
  ret i32 %6, !dbg !15647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !15648 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15652, metadata !DIExpression()), !dbg !15653
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15654
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15653
  ret i32 %3, !dbg !15656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15657 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15659
  ret void, !dbg !15660
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !15661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15663, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i8* %1, metadata !15664, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i8* %2, metadata !15665, metadata !DIExpression()), !dbg !15666
  br label %4, !dbg !15667

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15668, !srcloc !15675
  call void @llvm.dbg.value(metadata i32 undef, metadata !15671, metadata !DIExpression()) #25, !dbg !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !15672, metadata !DIExpression()) #25, !dbg !15676
  tail call fastcc void @k_cpu_idle() #26, !dbg !15677
  br label %4, !dbg !15667, !llvm.loop !15678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15680 {
  tail call void @arch_cpu_idle() #27, !dbg !15681
  ret void, !dbg !15682
}

; Function Attrs: optsize
declare !dbg !15683 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15684 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15689, metadata !DIExpression()), !dbg !15692
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15693
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15693
  %5 = load i8, i8* %4, align 2, !dbg !15693
  call void @llvm.dbg.value(metadata i8 %5, metadata !15690, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15692
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15694
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15694
  %8 = load i8, i8* %7, align 2, !dbg !15694
  call void @llvm.dbg.value(metadata i8 %8, metadata !15691, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15692
  %9 = icmp eq i8 %8, %5, !dbg !15695
  %10 = sext i8 %5 to i32, !dbg !15697
  %11 = sext i8 %8 to i32, !dbg !15697
  %12 = sub nsw i32 %11, %10, !dbg !15697
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15697
  ret i32 %13, !dbg !15698
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15703, metadata !DIExpression()), !dbg !15704
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15705
  %3 = icmp eq i32 %2, 0, !dbg !15707
  br i1 %3, label %8, label %4, !dbg !15708

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15709
  %6 = add i32 %5, %2, !dbg !15711
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15712
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15713
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15714
  br label %8, !dbg !15715

8:                                                ; preds = %4, %1
  ret void, !dbg !15716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15721, metadata !DIExpression()), !dbg !15723
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15724
  call void @llvm.dbg.value(metadata i32 %1, metadata !15722, metadata !DIExpression()), !dbg !15723
  ret i32 %1, !dbg !15725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15730, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata i32 %1, metadata !15731, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata i32 0, metadata !15732, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !15748
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15750, !srcloc !15756
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15750
  call void @llvm.dbg.value(metadata i32 %4, metadata !15753, metadata !DIExpression()) #25, !dbg !15757
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !15757
  call void @llvm.dbg.value(metadata i32 %4, metadata !15747, metadata !DIExpression()) #25, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %4, metadata !15738, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()), !dbg !15740
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15758
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15761
  %6 = icmp sgt i32 %0, 0, !dbg !15762
  %7 = icmp sgt i32 %5, 2, !dbg !15764
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15764
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15764
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15765
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15766
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %4, metadata !15768, metadata !DIExpression()) #25, !dbg !15774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !15774
  call void @llvm.dbg.value(metadata i32 %4, metadata !15776, metadata !DIExpression()) #25, !dbg !15779
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15781, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !15732, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()), !dbg !15740
  ret void, !dbg !15783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !15784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15786, metadata !DIExpression()), !dbg !15787
  call void @llvm.dbg.value(metadata i32 %0, metadata !15788, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15803
  call void @llvm.dbg.value(metadata i32 1000, metadata !15791, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.value(metadata i32 10000, metadata !15792, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.value(metadata i8 1, metadata !15793, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.value(metadata i1 true, metadata !15794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15803
  call void @llvm.dbg.value(metadata i1 true, metadata !15795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15803
  call void @llvm.dbg.value(metadata i8 0, metadata !15796, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.value(metadata i1 true, metadata !15797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15803
  call void @llvm.dbg.value(metadata i1 false, metadata !15798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15803
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !15803
  %2 = mul i32 %0, 10, !dbg !15805
  ret i32 %2, !dbg !15811
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15814, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !15817
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15819, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15819
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %3, metadata !15815, metadata !DIExpression()), !dbg !15816
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15822
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15824
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15825
  br i1 %6, label %7, label %8, !dbg !15826

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15827
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !15829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !15829
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !15831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15833, !srcloc !15782
  br label %24, !dbg !15834

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15835
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15836
  %10 = icmp eq i32 %9, 0, !dbg !15836
  br i1 %10, label %21, label %11, !dbg !15838

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15839
  br i1 %12, label %13, label %21, !dbg !15840

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15841
  %15 = icmp sgt i32 %14, %0, !dbg !15844
  br i1 %15, label %19, label %16, !dbg !15845

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15846
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15846
  call void @llvm.dbg.value(metadata i32 %18, metadata !15815, metadata !DIExpression()), !dbg !15816
  br label %22, !dbg !15848

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15849
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15849
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15851
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15816
  call void @llvm.dbg.value(metadata i32 %23, metadata !15815, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 %23, metadata !15768, metadata !DIExpression()) #25, !dbg !15853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !15853
  call void @llvm.dbg.value(metadata i32 %23, metadata !15776, metadata !DIExpression()) #25, !dbg !15855
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15857, !srcloc !15782
  br label %24, !dbg !15858

24:                                               ; preds = %22, %7
  ret void, !dbg !15858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15859 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15863, metadata !DIExpression()), !dbg !15865
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15866
  %3 = icmp eq i32 %2, 0, !dbg !15866
  br i1 %3, label %16, label %4, !dbg !15867

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15868
  br i1 %5, label %16, label %6, !dbg !15869

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15870
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15870
  %9 = load i8, i8* %8, align 2, !dbg !15870
  %10 = sext i8 %9 to i32, !dbg !15871
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15872
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15873
  br i1 %12, label %16, label %13, !dbg !15874

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15875
  %15 = xor i1 %14, true, !dbg !15876
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15865
  call void @llvm.dbg.value(metadata i1 %17, metadata !15864, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15865
  ret i1 %17, !dbg !15877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15878 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()), !dbg !15884
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15883, metadata !DIExpression()), !dbg !15884
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15886
  br i1 %3, label %5, label %4, !dbg !15888

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15889
  br label %5, !dbg !15891

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15882, metadata !DIExpression()), !dbg !15884
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15892
  ret i32 %6, !dbg !15893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()), !dbg !15898
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15899
  %3 = load i8, i8* %2, align 1, !dbg !15899
  call void @llvm.dbg.value(metadata i8 %3, metadata !15897, metadata !DIExpression()), !dbg !15898
  %4 = and i8 %3, 31, !dbg !15900
  %5 = icmp ne i8 %4, 0, !dbg !15901
  ret i1 %5, !dbg !15902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15903 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15905, metadata !DIExpression()), !dbg !15906
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15907
  br i1 %2, label %3, label %7, !dbg !15909

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15910, metadata !DIExpression()) #25, !dbg !15913
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15916
  %5 = load i8, i8* %4, align 1, !dbg !15917
  %6 = and i8 %5, 127, !dbg !15917
  store i8 %6, i8* %4, align 1, !dbg !15917
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15918, metadata !DIExpression()) #25, !dbg !15921
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15925
  br label %7, !dbg !15926

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15927, metadata !DIExpression()) #25, !dbg !15930
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15932
  %9 = load i8, i8* %8, align 1, !dbg !15933
  %10 = or i8 %9, -128, !dbg !15933
  store i8 %10, i8* %8, align 1, !dbg !15933
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()) #25, !dbg !15937
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15941, metadata !DIExpression()) #25, !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15947, metadata !DIExpression()) #25, !dbg !15949
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15951
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15948, metadata !DIExpression()) #25, !dbg !15949
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15953
  br i1 %12, label %23, label %13, !dbg !15951

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15948, metadata !DIExpression()) #25, !dbg !15949
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15955
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15948, metadata !DIExpression()) #25, !dbg !15949
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15956
  %17 = icmp sgt i32 %16, 0, !dbg !15959
  br i1 %17, label %18, label %20, !dbg !15960

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15961
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15963
  br label %25, !dbg !15964

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15953
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15948, metadata !DIExpression()) #25, !dbg !15949
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15953
  br i1 %22, label %23, label %13, !dbg !15951, !llvm.loop !15965

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15967
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15968
  br label %25, !dbg !15969

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15970
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15971
  %28 = zext i1 %27 to i32, !dbg !15971
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15972
  ret void, !dbg !15973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15976, metadata !DIExpression()), !dbg !15977
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15978
  ret i1 %2, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15980 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15982, metadata !DIExpression()), !dbg !15984
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15983, metadata !DIExpression()), !dbg !15984
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15985
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15986
  ret void, !dbg !15987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15988 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15992, metadata !DIExpression()), !dbg !15993
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15994
  br i1 %2, label %6, label %3, !dbg !15994

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15995
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15995
  br label %6, !dbg !15994

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15994
  ret %struct._dnode* %7, !dbg !15996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15997 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16001, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16002, metadata !DIExpression()), !dbg !16005
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16006
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16006
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16003, metadata !DIExpression()), !dbg !16005
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16007
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16008
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16009
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16010
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16011
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16012
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16013
  ret void, !dbg !16014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16015 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16019, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16020, metadata !DIExpression()), !dbg !16021
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16022
  br i1 %3, label %6, label %4, !dbg !16023

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16024
  br label %6, !dbg !16023

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16023
  ret %struct._dnode* %7, !dbg !16025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16026 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16030, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16031, metadata !DIExpression()), !dbg !16033
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16034
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16034
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16032, metadata !DIExpression()), !dbg !16033
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16035
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16036
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16037
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16038
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16039
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16040
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16041
  ret void, !dbg !16042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16045, metadata !DIExpression()), !dbg !16047
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16055, metadata !DIExpression()) #25, !dbg !16057
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16058
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16059
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16059
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16046, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16060, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata i32 %0, metadata !16065, metadata !DIExpression()) #25, !dbg !16066
  %6 = icmp eq i32 %0, 0, !dbg !16069
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16071
  br i1 %6, label %8, label %15, !dbg !16072

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16073
  br i1 %9, label %15, label %10, !dbg !16075

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16076
  br i1 %11, label %15, label %12, !dbg !16078

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16079
  %14 = icmp eq i32 %13, 0, !dbg !16079
  br i1 %14, label %18, label %15, !dbg !16081

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16082
  br i1 %16, label %18, label %17, !dbg !16085

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16086
  br label %18, !dbg !16088

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16071
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16071
  ret void, !dbg !16089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16094, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16095, metadata !DIExpression()), !dbg !16097
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16098
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16096, metadata !DIExpression()), !dbg !16097
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16095, metadata !DIExpression()), !dbg !16097
  ret %struct.k_thread* %3, !dbg !16099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16102, metadata !DIExpression()), !dbg !16103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16104
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16105
  %4 = xor i1 %3, true, !dbg !16106
  ret i1 %4, !dbg !16107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16110, metadata !DIExpression()), !dbg !16111
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16112
  %3 = load i16, i16* %2, align 2, !dbg !16112
  %4 = icmp ult i16 %3, 128, !dbg !16113
  %5 = zext i1 %4 to i32, !dbg !16113
  ret i32 %5, !dbg !16114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16121, metadata !DIExpression()), !dbg !16122
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16123
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16124
  %4 = xor i1 %3, true, !dbg !16125
  ret i1 %4, !dbg !16126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16127 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16133, metadata !DIExpression()), !dbg !16134
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16135
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16135
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16136
  ret i1 %4, !dbg !16137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16138 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16140, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16141, metadata !DIExpression()), !dbg !16142
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16143
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16143
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16144
  br i1 %5, label %9, label %6, !dbg !16145

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16146
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16146
  br label %9, !dbg !16145

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16145
  ret %struct._dnode* %10, !dbg !16147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16148 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16152, metadata !DIExpression()), !dbg !16153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16154
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16154
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16155
  ret i1 %4, !dbg !16156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16157 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16161, metadata !DIExpression()), !dbg !16164
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16165
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16165
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16162, metadata !DIExpression()), !dbg !16164
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16166
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16166
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16163, metadata !DIExpression()), !dbg !16164
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16167
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16168
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16169
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16170
  tail call fastcc void @sys_dnode_init.273(%struct._dnode* noundef %0) #26, !dbg !16171
  ret void, !dbg !16172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.273(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16173 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16175, metadata !DIExpression()), !dbg !16176
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16177
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16178
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16179
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16180
  ret void, !dbg !16181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16182 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16186, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i32 128, metadata !16187, metadata !DIExpression()), !dbg !16188
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16189
  %3 = load i8, i8* %2, align 1, !dbg !16189
  %4 = icmp slt i8 %3, 0, !dbg !16190
  ret i1 %4, !dbg !16191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16196, metadata !DIExpression()), !dbg !16198
  call void @llvm.dbg.value(metadata i32 %1, metadata !16197, metadata !DIExpression()), !dbg !16198
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16199
  ret i1 %3, !dbg !16200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16203, metadata !DIExpression()), !dbg !16204
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16205
  ret i1 %2, !dbg !16206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16209, metadata !DIExpression()), !dbg !16211
  call void @llvm.dbg.value(metadata i32 %1, metadata !16210, metadata !DIExpression()), !dbg !16211
  %3 = icmp slt i32 %0, %1, !dbg !16212
  ret i1 %3, !dbg !16213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16216, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 0, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16222
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16224, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16224
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !16222
  call void @llvm.dbg.value(metadata i32 %3, metadata !16219, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16217, metadata !DIExpression()), !dbg !16221
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16232
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16232
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16234
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16236, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16217, metadata !DIExpression()), !dbg !16221
  ret void, !dbg !16237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16240, metadata !DIExpression()), !dbg !16241
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16242
  br i1 %2, label %24, label %3, !dbg !16244

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16245
  br i1 %4, label %5, label %24, !dbg !16246

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15927, metadata !DIExpression()) #25, !dbg !16247
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16250
  %7 = load i8, i8* %6, align 1, !dbg !16251
  %8 = or i8 %7, -128, !dbg !16251
  store i8 %8, i8* %6, align 1, !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()) #25, !dbg !16252
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15941, metadata !DIExpression()) #25, !dbg !16254
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15947, metadata !DIExpression()) #25, !dbg !16254
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16256
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15948, metadata !DIExpression()) #25, !dbg !16254
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16257
  br i1 %10, label %21, label %11, !dbg !16256

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15948, metadata !DIExpression()) #25, !dbg !16254
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16258
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15948, metadata !DIExpression()) #25, !dbg !16254
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16259
  %15 = icmp sgt i32 %14, 0, !dbg !16260
  br i1 %15, label %16, label %18, !dbg !16261

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16262
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16263
  br label %23, !dbg !16264

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16257
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15948, metadata !DIExpression()) #25, !dbg !16254
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16257
  br i1 %20, label %21, label %11, !dbg !16256, !llvm.loop !16265

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16267
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16268
  br label %23, !dbg !16269

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16270
  br label %24, !dbg !16271

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16275, metadata !DIExpression()), !dbg !16276
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16277
  br i1 %2, label %6, label %3, !dbg !16278

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16279
  %5 = xor i1 %4, true, !dbg !16278
  br label %6, !dbg !16278

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16283, metadata !DIExpression()), !dbg !16287
  call void @llvm.dbg.value(metadata i32 0, metadata !16284, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16289
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16291, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16291
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16293
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %3, metadata !16286, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()), !dbg !16288
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16301, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16284, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()), !dbg !16288
  ret void, !dbg !16302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16305, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16308
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16310, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16310
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !16312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16312
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !16308
  call void @llvm.dbg.value(metadata i32 %3, metadata !16306, metadata !DIExpression()), !dbg !16307
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16313
  br i1 %4, label %5, label %6, !dbg !16315

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16316
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16321, !srcloc !15782
  br label %8, !dbg !16322

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.278(%struct.k_thread* noundef %0) #26, !dbg !16323
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16324
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16325
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16325
  br label %8, !dbg !16326

8:                                                ; preds = %6, %5
  ret void, !dbg !16326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16329, metadata !DIExpression()), !dbg !16330
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16331
  %3 = load i8, i8* %2, align 1, !dbg !16331
  %4 = and i8 %3, 4, !dbg !16332
  %5 = icmp eq i8 %4, 0, !dbg !16333
  ret i1 %5, !dbg !16334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.278(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16337, metadata !DIExpression()), !dbg !16338
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16339
  %3 = load i8, i8* %2, align 1, !dbg !16340
  %4 = and i8 %3, -5, !dbg !16340
  store i8 %4, i8* %2, align 1, !dbg !16340
  ret void, !dbg !16341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16342 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16345, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16344, metadata !DIExpression()), !dbg !16346
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16347
  br i1 %4, label %5, label %9, !dbg !16349

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16350
  br i1 %6, label %7, label %9, !dbg !16351

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16352, metadata !DIExpression()) #25, !dbg !16358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #25, !dbg !16358
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16361
  br label %10, !dbg !16362

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16366
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16368, !srcloc !15782
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16374, metadata !DIExpression()), !dbg !16375
  call void @llvm.dbg.value(metadata i32 %0, metadata !16376, metadata !DIExpression()), !dbg !16381
  %2 = icmp eq i32 %0, 0, !dbg !16383
  br i1 %2, label %3, label %6, !dbg !16384

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16385, !srcloc !16392
  call void @llvm.dbg.value(metadata i32 %4, metadata !16388, metadata !DIExpression()) #25, !dbg !16393
  %5 = icmp eq i32 %4, 0, !dbg !16394
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16375
  ret i1 %7, !dbg !16395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16396 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16398, metadata !DIExpression()), !dbg !16400
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16401
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16402
  ret i1 %3, !dbg !16403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16406, metadata !DIExpression()), !dbg !16408
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %2, metadata !16407, metadata !DIExpression()), !dbg !16408
  ret i32 %2, !dbg !16410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16411 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16413, metadata !DIExpression()), !dbg !16417
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16418
  call void @llvm.dbg.value(metadata i32 0, metadata !16414, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16420
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16422, !srcloc !15756
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16422
  call void @llvm.dbg.value(metadata i32 %4, metadata !15753, metadata !DIExpression()) #25, !dbg !16424
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16424
  call void @llvm.dbg.value(metadata i32 %4, metadata !15747, metadata !DIExpression()) #25, !dbg !16420
  call void @llvm.dbg.value(metadata i32 %4, metadata !16416, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()), !dbg !16419
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16425
  br i1 %5, label %6, label %10, !dbg !16429

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15910, metadata !DIExpression()) #25, !dbg !16430
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16433
  %8 = load i8, i8* %7, align 1, !dbg !16434
  %9 = and i8 %8, 127, !dbg !16434
  store i8 %9, i8* %7, align 1, !dbg !16434
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15918, metadata !DIExpression()) #25, !dbg !16435
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16437
  br label %10, !dbg !16438

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16439
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16440
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16441
  %13 = zext i1 %12 to i32, !dbg !16441
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %4, metadata !15768, metadata !DIExpression()) #25, !dbg !16443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %4, metadata !15776, metadata !DIExpression()) #25, !dbg !16445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16447, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16414, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()), !dbg !16419
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16448
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16450
  br i1 %15, label %16, label %17, !dbg !16451

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16452
  br label %17, !dbg !16454

17:                                               ; preds = %16, %10
  ret void, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16458, metadata !DIExpression()), !dbg !16459
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16460
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16461
  ret i32 %3, !dbg !16462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16465, metadata !DIExpression()), !dbg !16466
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16467
  %3 = load i8, i8* %2, align 1, !dbg !16468
  %4 = or i8 %3, 16, !dbg !16468
  store i8 %4, i8* %2, align 1, !dbg !16468
  ret void, !dbg !16469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16470 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16471, !srcloc !15756
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16471
  call void @llvm.dbg.value(metadata i32 %2, metadata !15753, metadata !DIExpression()) #25, !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16473
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16474
  ret void, !dbg !16475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16478, metadata !DIExpression()), !dbg !16479
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16480
  br i1 %2, label %3, label %5, !dbg !16482

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16483
  br label %6, !dbg !16485

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15776, metadata !DIExpression()) #25, !dbg !16486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16489, !srcloc !15782
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16496
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16498, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %3, metadata !16494, metadata !DIExpression()), !dbg !16495
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16501
  br i1 %4, label %6, label %5, !dbg !16503

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16504
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16509, !srcloc !15782
  br label %8, !dbg !16510

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16511
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16512
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16513
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16513
  br label %8, !dbg !16514

8:                                                ; preds = %6, %5
  ret void, !dbg !16514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16517, metadata !DIExpression()), !dbg !16518
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16519
  %3 = load i8, i8* %2, align 1, !dbg !16519
  %4 = and i8 %3, 16, !dbg !16520
  %5 = icmp ne i8 %4, 0, !dbg !16521
  ret i1 %5, !dbg !16522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16525, metadata !DIExpression()), !dbg !16526
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16527
  %3 = load i8, i8* %2, align 1, !dbg !16528
  %4 = and i8 %3, -17, !dbg !16528
  store i8 %4, i8* %2, align 1, !dbg !16528
  ret void, !dbg !16529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16530 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16540, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16538, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16539, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 0, metadata !16541, metadata !DIExpression()), !dbg !16545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16546
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16548, !srcloc !15756
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16548
  call void @llvm.dbg.value(metadata i32 %5, metadata !15753, metadata !DIExpression()) #25, !dbg !16550
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16550
  call void @llvm.dbg.value(metadata i32 %5, metadata !15747, metadata !DIExpression()) #25, !dbg !16546
  call void @llvm.dbg.value(metadata i32 %5, metadata !16543, metadata !DIExpression()), !dbg !16545
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()), !dbg !16545
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16551
  call void @llvm.dbg.value(metadata i32 %5, metadata !15768, metadata !DIExpression()) #25, !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16554
  call void @llvm.dbg.value(metadata i32 %5, metadata !15776, metadata !DIExpression()) #25, !dbg !16556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16558, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16541, metadata !DIExpression()), !dbg !16545
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()), !dbg !16545
  ret void, !dbg !16559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16560 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16564, metadata !DIExpression()), !dbg !16565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16562, metadata !DIExpression()), !dbg !16565
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16563, metadata !DIExpression()), !dbg !16565
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16566
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16567
  ret void, !dbg !16568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16573, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16574, metadata !DIExpression()), !dbg !16575
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16576
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16577
  %3 = icmp eq %union.anon* %1, null, !dbg !16578
  br i1 %3, label %21, label %4, !dbg !16580

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16581
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16583
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16584
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15941, metadata !DIExpression()) #25, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15947, metadata !DIExpression()) #25, !dbg !16585
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !16587
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15948, metadata !DIExpression()) #25, !dbg !16585
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16588
  br i1 %8, label %19, label %9, !dbg !16587

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15948, metadata !DIExpression()) #25, !dbg !16585
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16589
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15948, metadata !DIExpression()) #25, !dbg !16585
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16590
  %13 = icmp sgt i32 %12, 0, !dbg !16591
  br i1 %13, label %14, label %16, !dbg !16592

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16593
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16594
  br label %21, !dbg !16595

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16588
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15948, metadata !DIExpression()) #25, !dbg !16585
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16588
  br i1 %18, label %19, label %9, !dbg !16587, !llvm.loop !16596

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16598
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16599
  br label %21, !dbg !16600

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16602 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16607, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16606, metadata !DIExpression()), !dbg !16608
  %4 = icmp eq i64 %3, -1, !dbg !16609
  br i1 %4, label %6, label %5, !dbg !16611

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.279(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16612
  br label %6, !dbg !16614

6:                                                ; preds = %5, %2
  ret void, !dbg !16615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.279(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16616 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16619, metadata !DIExpression()), !dbg !16620
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16618, metadata !DIExpression()), !dbg !16620
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16621
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16622
  ret void, !dbg !16623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16624 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16626, metadata !DIExpression()), !dbg !16634
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16635
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16635
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16627, metadata !DIExpression()), !dbg !16634
  call void @llvm.dbg.value(metadata i32 0, metadata !16628, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16637
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16639, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16630, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()), !dbg !16636
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16642
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16643
  %7 = load i8, i8* %6, align 1, !dbg !16643
  %8 = and i8 %7, 40, !dbg !16644
  %9 = icmp eq i8 %8, 0, !dbg !16644
  call void @llvm.dbg.value(metadata i1 %9, metadata !16631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16645
  br i1 %9, label %10, label %17, !dbg !16646

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16647
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16647
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16647
  %14 = icmp eq %union.anon* %13, null, !dbg !16651
  br i1 %14, label %16, label %15, !dbg !16652

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16653
  br label %16, !dbg !16655

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.278(%struct.k_thread* noundef nonnull %3) #26, !dbg !16656
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16657
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16658
  br label %17, !dbg !16659

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %18, metadata !15753, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata i32 %18, metadata !15747, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %18, metadata !16630, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()) #25, !dbg !16662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16664, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16628, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()), !dbg !16636
  ret void, !dbg !16665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16668, metadata !DIExpression()), !dbg !16669
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16670
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16671
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16672
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16673
  ret void, !dbg !16674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16675 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16677, metadata !DIExpression()), !dbg !16678
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16679
  %3 = load i8, i8* %2, align 1, !dbg !16680
  %4 = and i8 %3, -3, !dbg !16680
  store i8 %4, i8* %2, align 1, !dbg !16680
  ret void, !dbg !16681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16684, metadata !DIExpression()), !dbg !16685
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16686
  br i1 %2, label %3, label %7, !dbg !16688

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15910, metadata !DIExpression()) #25, !dbg !16689
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16692
  %5 = load i8, i8* %4, align 1, !dbg !16693
  %6 = and i8 %5, 127, !dbg !16693
  store i8 %6, i8* %4, align 1, !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15918, metadata !DIExpression()) #25, !dbg !16694
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16696
  br label %7, !dbg !16697

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16698
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16699
  %10 = zext i1 %9 to i32, !dbg !16699
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16700
  ret void, !dbg !16701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16702 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16704, metadata !DIExpression()), !dbg !16705
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16706
  %3 = load i8, i8* %2, align 1, !dbg !16707
  %4 = or i8 %3, 2, !dbg !16707
  store i8 %4, i8* %2, align 1, !dbg !16707
  ret void, !dbg !16708
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16711, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata i32 0, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16717
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16719, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16719
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !16721
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16721
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %3, metadata !16714, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16712, metadata !DIExpression()), !dbg !16716
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16722
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16725
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16727
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16729, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16712, metadata !DIExpression()), !dbg !16716
  ret void, !dbg !16730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16731 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16737, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata i32 %0, metadata !16735, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16736, metadata !DIExpression()), !dbg !16742
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16743
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16744
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16745
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16746
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16747
  call void @llvm.dbg.value(metadata i32 %6, metadata !16738, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata i32 0, metadata !16739, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16749
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16751, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !16753
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16753
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()), !dbg !16748
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16754
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16758
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16759
  br i1 %10, label %11, label %12, !dbg !16760

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16761
  br label %12, !dbg !16763

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16751
  call void @llvm.dbg.value(metadata i32 %13, metadata !15753, metadata !DIExpression()) #25, !dbg !16753
  call void @llvm.dbg.value(metadata i32 %13, metadata !15747, metadata !DIExpression()) #25, !dbg !16749
  call void @llvm.dbg.value(metadata i32 %13, metadata !16741, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()) #25, !dbg !16766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16768, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16739, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()), !dbg !16748
  ret i32 %6, !dbg !16769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16770 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.value(metadata i64 undef, metadata !16777, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16774, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16776, metadata !DIExpression()), !dbg !16778
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16779
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16781
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16783, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !16781
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16786
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16787
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16352, metadata !DIExpression()) #25, !dbg !16788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #25, !dbg !16788
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16790
  ret i32 %9, !dbg !16791
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16792 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16796, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16797, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata i32 0, metadata !16798, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16803
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16805, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !16807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !16803
  call void @llvm.dbg.value(metadata i32 undef, metadata !16800, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16797, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata i32 undef, metadata !16798, metadata !DIExpression()), !dbg !16802
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16808
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16797, metadata !DIExpression()), !dbg !16801
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16811
  br i1 %5, label %7, label %6, !dbg !16813

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16814
  br label %7, !dbg !16816

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16805
  call void @llvm.dbg.value(metadata i32 %8, metadata !15753, metadata !DIExpression()) #25, !dbg !16807
  call void @llvm.dbg.value(metadata i32 %8, metadata !15747, metadata !DIExpression()) #25, !dbg !16803
  call void @llvm.dbg.value(metadata i32 %8, metadata !16800, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()) #25, !dbg !16819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16821, !srcloc !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16797, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata i32 undef, metadata !16798, metadata !DIExpression()), !dbg !16802
  ret %struct.k_thread* %4, !dbg !16822
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16823 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16825, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16826, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata i32 0, metadata !16827, metadata !DIExpression()), !dbg !16831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16832
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16834, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !16836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !16832
  call void @llvm.dbg.value(metadata i32 undef, metadata !16829, metadata !DIExpression()), !dbg !16831
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16826, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16827, metadata !DIExpression()), !dbg !16831
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16837
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16826, metadata !DIExpression()), !dbg !16830
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16840
  br i1 %5, label %8, label %6, !dbg !16842

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16843
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16845
  br label %8, !dbg !16846

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16834
  call void @llvm.dbg.value(metadata i32 %9, metadata !15753, metadata !DIExpression()) #25, !dbg !16836
  call void @llvm.dbg.value(metadata i32 %9, metadata !15747, metadata !DIExpression()) #25, !dbg !16832
  call void @llvm.dbg.value(metadata i32 %9, metadata !16829, metadata !DIExpression()), !dbg !16831
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16847
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()) #25, !dbg !16849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16851, !srcloc !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16826, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16827, metadata !DIExpression()), !dbg !16831
  ret %struct.k_thread* %4, !dbg !16852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16855, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16711, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata i32 0, metadata !16712, metadata !DIExpression()) #25, !dbg !16859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16860
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16862, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16862
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !16864
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16864
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !16860
  call void @llvm.dbg.value(metadata i32 %3, metadata !16714, metadata !DIExpression()) #25, !dbg !16859
  call void @llvm.dbg.value(metadata i32 undef, metadata !16712, metadata !DIExpression()) #25, !dbg !16859
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16865
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !16866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16866
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !16868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16870, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16712, metadata !DIExpression()) #25, !dbg !16859
  call void @llvm.dbg.value(metadata i32 undef, metadata !16712, metadata !DIExpression()) #25, !dbg !16859
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16871
  ret void, !dbg !16872
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16875, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 %1, metadata !16876, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i8 0, metadata !16877, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 0, metadata !16878, metadata !DIExpression()), !dbg !16882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16883
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16885, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !16887
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16887
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !16883
  call void @llvm.dbg.value(metadata i32 undef, metadata !16880, metadata !DIExpression()), !dbg !16882
  call void @llvm.dbg.value(metadata i8 poison, metadata !16877, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16878, metadata !DIExpression()), !dbg !16882
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16888
  call void @llvm.dbg.value(metadata i1 %6, metadata !16877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16881
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16891

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15910, metadata !DIExpression()) #25, !dbg !16892
  %11 = load i8, i8* %4, align 1, !dbg !16898
  %12 = and i8 %11, 127, !dbg !16898
  store i8 %12, i8* %4, align 1, !dbg !16898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15918, metadata !DIExpression()) #25, !dbg !16899
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16901
  store i8 %9, i8* %8, align 2, !dbg !16902
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15927, metadata !DIExpression()) #25, !dbg !16903
  %13 = load i8, i8* %4, align 1, !dbg !16905
  %14 = or i8 %13, -128, !dbg !16905
  store i8 %14, i8* %4, align 1, !dbg !16905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()) #25, !dbg !16906
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15941, metadata !DIExpression()) #25, !dbg !16908
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15947, metadata !DIExpression()) #25, !dbg !16908
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16910
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15948, metadata !DIExpression()) #25, !dbg !16908
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16911
  br i1 %16, label %26, label %17, !dbg !16910

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15948, metadata !DIExpression()) #25, !dbg !16908
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15948, metadata !DIExpression()) #25, !dbg !16908
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16913
  %21 = icmp sgt i32 %20, 0, !dbg !16914
  br i1 %21, label %22, label %23, !dbg !16915

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16916
  br label %27, !dbg !16917

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16911
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15948, metadata !DIExpression()) #25, !dbg !16908
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16911
  br i1 %25, label %26, label %17, !dbg !16910, !llvm.loop !16918

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16920
  br label %27, !dbg !16921

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16922
  br label %29, !dbg !16923

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16924
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16885
  call void @llvm.dbg.value(metadata i32 %30, metadata !15753, metadata !DIExpression()) #25, !dbg !16887
  call void @llvm.dbg.value(metadata i32 %30, metadata !15747, metadata !DIExpression()) #25, !dbg !16883
  call void @llvm.dbg.value(metadata i32 %30, metadata !16880, metadata !DIExpression()), !dbg !16882
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !16926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16926
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()) #25, !dbg !16928
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16930, !srcloc !15782
  call void @llvm.dbg.value(metadata i8 poison, metadata !16877, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16878, metadata !DIExpression()), !dbg !16882
  ret i1 %6, !dbg !16931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16936, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.value(metadata i32 %1, metadata !16937, metadata !DIExpression()), !dbg !16939
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16940
  call void @llvm.dbg.value(metadata i1 %3, metadata !16938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16939
  br i1 %3, label %4, label %12, !dbg !16941

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16943
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16944
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16944
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16944
  %9 = load i8, i8* %8, align 1, !dbg !16944
  %10 = icmp eq i8 %9, 0, !dbg !16945
  br i1 %10, label %11, label %12, !dbg !16946

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16947
  br label %12, !dbg !16949

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16951 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16953, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16957
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16959, !srcloc !15756
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16959
  call void @llvm.dbg.value(metadata i32 %2, metadata !15753, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 %2, metadata !15747, metadata !DIExpression()) #25, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %2, metadata !16955, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata i32 undef, metadata !16953, metadata !DIExpression()), !dbg !16956
  tail call fastcc void @z_sched_lock() #26, !dbg !16962
  call void @llvm.dbg.value(metadata i32 %2, metadata !15768, metadata !DIExpression()) #25, !dbg !16965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16965
  call void @llvm.dbg.value(metadata i32 %2, metadata !15776, metadata !DIExpression()) #25, !dbg !16967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16969, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16953, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata i32 undef, metadata !16953, metadata !DIExpression()), !dbg !16956
  ret void, !dbg !16970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16971 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16972
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16973
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16973
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16973
  %5 = load i8, i8* %4, align 1, !dbg !16974
  %6 = add i8 %5, -1, !dbg !16974
  store i8 %6, i8* %4, align 1, !dbg !16974
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16975, !srcloc !16977
  ret void, !dbg !16978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16979 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16981, metadata !DIExpression()), !dbg !16984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !16985
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16987, !srcloc !15756
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16987
  call void @llvm.dbg.value(metadata i32 %2, metadata !15753, metadata !DIExpression()) #25, !dbg !16989
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16989
  call void @llvm.dbg.value(metadata i32 %2, metadata !15747, metadata !DIExpression()) #25, !dbg !16985
  call void @llvm.dbg.value(metadata i32 %2, metadata !16983, metadata !DIExpression()), !dbg !16984
  call void @llvm.dbg.value(metadata i32 undef, metadata !16981, metadata !DIExpression()), !dbg !16984
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16990
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16993
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16993
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16993
  %7 = load i8, i8* %6, align 1, !dbg !16994
  %8 = add i8 %7, 1, !dbg !16994
  store i8 %8, i8* %6, align 1, !dbg !16994
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16995
  call void @llvm.dbg.value(metadata i32 %2, metadata !15768, metadata !DIExpression()) #25, !dbg !16996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !16996
  call void @llvm.dbg.value(metadata i32 %2, metadata !15776, metadata !DIExpression()) #25, !dbg !16998
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17000, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 1, metadata !16981, metadata !DIExpression()), !dbg !16984
  call void @llvm.dbg.value(metadata i32 undef, metadata !16981, metadata !DIExpression()), !dbg !16984
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17001
  ret void, !dbg !17002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !17003 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17004
  ret %struct.k_thread* %1, !dbg !17005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !17006 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17010, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17011, metadata !DIExpression()), !dbg !17015
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17016
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17012, metadata !DIExpression()), !dbg !17015
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17017
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17013, metadata !DIExpression()), !dbg !17015
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17018
  call void @llvm.dbg.value(metadata i32 %5, metadata !17014, metadata !DIExpression()), !dbg !17015
  %6 = icmp sgt i32 %5, 0, !dbg !17019
  br i1 %6, label %17, label %7, !dbg !17021

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17022
  br i1 %8, label %17, label %9, !dbg !17024

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17025
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17025
  %12 = load i32, i32* %11, align 8, !dbg !17025
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17027
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17027
  %15 = load i32, i32* %14, align 8, !dbg !17027
  %16 = icmp ult i32 %12, %15, !dbg !17028
  br label %17, !dbg !17029

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17030
  ret i1 %18, !dbg !17031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17032 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17049, metadata !DIExpression()), !dbg !17064
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17050, metadata !DIExpression()), !dbg !17064
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17065
  %5 = load i32, i32* %4, align 4, !dbg !17066
  %6 = add nsw i32 %5, 1, !dbg !17066
  store i32 %6, i32* %4, align 4, !dbg !17066
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17067
  store i32 %5, i32* %7, align 8, !dbg !17068
  %8 = load i32, i32* %4, align 4, !dbg !17069
  %9 = icmp eq i32 %8, 0, !dbg !17070
  br i1 %9, label %10, label %32, !dbg !17071

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17072
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17072
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17052, metadata !DIExpression()), !dbg !17072
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17072
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17072
  %14 = load i32, i32* %13, align 4, !dbg !17072
  %15 = shl i32 %14, 2, !dbg !17072
  %16 = alloca i8, i32 %15, align 8, !dbg !17072
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17072
  store i8* %16, i8** %17, align 4, !dbg !17072
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17072
  %19 = alloca i8, i32 %14, align 8, !dbg !17072
  store i8* %19, i8** %18, align 4, !dbg !17072
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17072
  store i32 -1, i32* %20, align 4, !dbg !17072
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17073
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17061, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17051, metadata !DIExpression()), !dbg !17064
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17075
  br i1 %22, label %23, label %24, !dbg !17072

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17075
  br label %32, !dbg !17076

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17051, metadata !DIExpression()), !dbg !17064
  %26 = load i32, i32* %4, align 4, !dbg !17077
  %27 = add nsw i32 %26, 1, !dbg !17077
  store i32 %27, i32* %4, align 4, !dbg !17077
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17079
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17079
  store i32 %26, i32* %29, align 8, !dbg !17080
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17073
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17061, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17051, metadata !DIExpression()), !dbg !17064
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17075
  br i1 %31, label %23, label %24, !dbg !17072, !llvm.loop !17081

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17083
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17084
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17085
  ret void, !dbg !17086
}

; Function Attrs: optsize
declare !dbg !17087 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17092 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17095 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17097, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17098, metadata !DIExpression()), !dbg !17099
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17100
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17101
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17102
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17103
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17103
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17105
  br i1 %7, label %8, label %10, !dbg !17106

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17107
  store i32 0, i32* %9, align 4, !dbg !17109
  br label %10, !dbg !17110

10:                                               ; preds = %8, %2
  ret void, !dbg !17111
}

; Function Attrs: optsize
declare !dbg !17112 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17113 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17117, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17118, metadata !DIExpression()), !dbg !17120
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17121
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17122
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17119, metadata !DIExpression()), !dbg !17120
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17118, metadata !DIExpression()), !dbg !17120
  ret %struct.k_thread* %4, !dbg !17123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17124 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17128, metadata !DIExpression()), !dbg !17129
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17130
  ret %struct.rbnode* %2, !dbg !17131
}

; Function Attrs: optsize
declare !dbg !17132 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17135 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17147, metadata !DIExpression()), !dbg !17151
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17152
  %3 = load i32, i32* %2, align 4, !dbg !17152
  %4 = icmp eq i32 %3, 0, !dbg !17154
  br i1 %4, label %10, label %5, !dbg !17155

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17148, metadata !DIExpression()), !dbg !17151
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17156, !range !9461
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17157
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17149, metadata !DIExpression()), !dbg !17151
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17158
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17150, metadata !DIExpression()), !dbg !17151
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17148, metadata !DIExpression()), !dbg !17151
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17151
  ret %struct.k_thread* %11, !dbg !17159
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17160 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17164, metadata !DIExpression()), !dbg !17167
  call void @llvm.dbg.value(metadata i32 0, metadata !17165, metadata !DIExpression()), !dbg !17167
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17168
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17166, metadata !DIExpression()), !dbg !17167
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17169
  br i1 %3, label %8, label %4, !dbg !17170

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17171
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17173
  call void @llvm.dbg.value(metadata i32 1, metadata !17165, metadata !DIExpression()), !dbg !17167
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17168
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17166, metadata !DIExpression()), !dbg !17167
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17169
  br i1 %7, label %8, label %4, !dbg !17170, !llvm.loop !17174

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17167
  ret i32 %9, !dbg !17176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17177 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17179, metadata !DIExpression()), !dbg !17180
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17181
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17182
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17183
  ret %struct.k_thread* %4, !dbg !17184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17185 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17194, metadata !DIExpression()), !dbg !17195
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17196
  tail call fastcc void @sys_dlist_init.286(%struct._dnode* noundef nonnull %2) #26, !dbg !17197
  ret void, !dbg !17198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.286(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17199 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17203, metadata !DIExpression()), !dbg !17204
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17205
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17206
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17207
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17208
  ret void, !dbg !17209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17210 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17211
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17212
  ret void, !dbg !17213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17219, metadata !DIExpression()), !dbg !17220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17221
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17221
  %4 = load i8, i8* %3, align 2, !dbg !17221
  %5 = sext i8 %4 to i32, !dbg !17222
  ret i32 %5, !dbg !17223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17228, metadata !DIExpression()), !dbg !17231
  call void @llvm.dbg.value(metadata i32 %1, metadata !17229, metadata !DIExpression()), !dbg !17231
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17230, metadata !DIExpression()), !dbg !17231
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17232
  ret void, !dbg !17233
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17234 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17235
  br i1 %1, label %8, label %2, !dbg !17236

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17237
  br i1 %3, label %8, label %4, !dbg !17238

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17239
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17240
  %7 = xor i1 %6, true, !dbg !17238
  br label %8, !dbg !17238

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17242 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17243, !range !8650
  %2 = icmp eq i8 %1, 0, !dbg !17243
  ret i1 %2, !dbg !17244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17245 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !17248
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17250, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !17248
  call void @llvm.dbg.value(metadata i32 undef, metadata !17247, metadata !DIExpression()), !dbg !17253
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17254
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15910, metadata !DIExpression()) #25, !dbg !17257
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17259
  %4 = load i8, i8* %3, align 1, !dbg !17260
  %5 = and i8 %4, 127, !dbg !17260
  store i8 %5, i8* %3, align 1, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15918, metadata !DIExpression()) #25, !dbg !17261
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17263
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17264
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15927, metadata !DIExpression()) #25, !dbg !17265
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17267
  %8 = load i8, i8* %7, align 1, !dbg !17268
  %9 = or i8 %8, -128, !dbg !17268
  store i8 %9, i8* %7, align 1, !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15934, metadata !DIExpression()) #25, !dbg !17269
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15941, metadata !DIExpression()) #25, !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15947, metadata !DIExpression()) #25, !dbg !17271
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17273
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15948, metadata !DIExpression()) #25, !dbg !17271
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17274
  br i1 %11, label %22, label %12, !dbg !17273

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15948, metadata !DIExpression()) #25, !dbg !17271
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17275
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15948, metadata !DIExpression()) #25, !dbg !17271
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17276
  %16 = icmp sgt i32 %15, 0, !dbg !17277
  br i1 %16, label %17, label %19, !dbg !17278

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17279
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17280
  br label %24, !dbg !17281

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17274
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15948, metadata !DIExpression()) #25, !dbg !17271
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17274
  br i1 %21, label %22, label %12, !dbg !17273, !llvm.loop !17282

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17284
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17285
  br label %24, !dbg !17286

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17250
  call void @llvm.dbg.value(metadata i32 %25, metadata !15753, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %25, metadata !15747, metadata !DIExpression()) #25, !dbg !17248
  call void @llvm.dbg.value(metadata i32 %25, metadata !17247, metadata !DIExpression()), !dbg !17253
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17287
  call void @llvm.dbg.value(metadata i32 undef, metadata !16352, metadata !DIExpression()) #25, !dbg !17288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #25, !dbg !17288
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17290
  ret void, !dbg !17291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17292 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17296, metadata !DIExpression()), !dbg !17299
  %3 = icmp eq i64 %2, -1, !dbg !17300
  br i1 %3, label %4, label %6, !dbg !17302

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17303
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17305
  br label %11, !dbg !17306

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17297, metadata !DIExpression()), !dbg !17299
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17307
  %8 = sext i32 %7 to i64, !dbg !17307
  call void @llvm.dbg.value(metadata i64 %8, metadata !17297, metadata !DIExpression()), !dbg !17299
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17308
  %10 = trunc i64 %9 to i32, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %10, metadata !17298, metadata !DIExpression()), !dbg !17299
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17299
  ret i32 %12, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17314, metadata !DIExpression()), !dbg !17315
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17316, !srcloc !17318
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17319
  ret void, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17321 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17325, metadata !DIExpression()), !dbg !17329
  %2 = icmp eq i64 %0, 0, !dbg !17330
  br i1 %2, label %3, label %4, !dbg !17332

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17333
  br label %29, !dbg !17335

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17327, metadata !DIExpression()), !dbg !17329
  %5 = icmp sgt i64 %0, -3, !dbg !17336
  br i1 %5, label %6, label %10, !dbg !17338

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17339
  %8 = trunc i64 %0 to i32, !dbg !17341
  %9 = add i32 %7, %8, !dbg !17341
  call void @llvm.dbg.value(metadata i32 %9, metadata !17326, metadata !DIExpression()), !dbg !17329
  br label %13, !dbg !17342

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17343
  %12 = sub i32 -2, %11, !dbg !17343
  call void @llvm.dbg.value(metadata i32 %12, metadata !17326, metadata !DIExpression()), !dbg !17329
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17345
  call void @llvm.dbg.value(metadata i32 %14, metadata !17326, metadata !DIExpression()), !dbg !17329
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !17346
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17348, !srcloc !15756
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17348
  call void @llvm.dbg.value(metadata i32 %16, metadata !15753, metadata !DIExpression()) #25, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %16, metadata !15747, metadata !DIExpression()) #25, !dbg !17346
  call void @llvm.dbg.value(metadata i32 %16, metadata !17328, metadata !DIExpression()), !dbg !17329
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17351
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17352
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17353
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17354
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17355
  tail call fastcc void @z_add_thread_timeout.279(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17355
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17356
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %16, metadata !16352, metadata !DIExpression()) #25, !dbg !17358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #25, !dbg !17358
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17360
  %22 = zext i32 %14 to i64, !dbg !17361
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17362
  %24 = zext i32 %23 to i64, !dbg !17362
  %25 = sub nsw i64 %22, %24, !dbg !17363
  call void @llvm.dbg.value(metadata i64 %25, metadata !17325, metadata !DIExpression()), !dbg !17329
  %26 = icmp sgt i64 %25, 0, !dbg !17364
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17364
  %28 = trunc i64 %27 to i32, !dbg !17364
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17329
  ret i32 %30, !dbg !17365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17366 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17368, metadata !DIExpression()), !dbg !17369
  call void @llvm.dbg.value(metadata i64 %0, metadata !15788, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i32 10000, metadata !15791, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i32 1000, metadata !15792, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i8 1, metadata !15793, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i1 false, metadata !15794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17370
  call void @llvm.dbg.value(metadata i1 false, metadata !15795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17370
  call void @llvm.dbg.value(metadata i8 0, metadata !15796, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i1 false, metadata !15797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17370
  call void @llvm.dbg.value(metadata i1 true, metadata !15798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17370
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i64 %0, metadata !15788, metadata !DIExpression()), !dbg !17370
  %2 = udiv i64 %0, 10, !dbg !17372
  ret i64 %2, !dbg !17376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17377 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17378, !srcloc !17380
  tail call void @z_impl_k_yield() #26, !dbg !17381
  ret void, !dbg !17382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17387, metadata !DIExpression()), !dbg !17389
  %2 = sext i32 %0 to i64, !dbg !17390
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17391
  call void @llvm.dbg.value(metadata i64 %3, metadata !17388, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17389
  %4 = shl i64 %3, 32, !dbg !17392
  %5 = ashr exact i64 %4, 32, !dbg !17392
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17393
  call void @llvm.dbg.value(metadata i32 %6, metadata !17388, metadata !DIExpression()), !dbg !17389
  %7 = sext i32 %6 to i64, !dbg !17394
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17395
  %9 = trunc i64 %8 to i32, !dbg !17395
  ret i32 %9, !dbg !17396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !17397 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17399, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i64 %0, metadata !15788, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15791, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i32 10000, metadata !15792, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i8 1, metadata !15793, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i1 false, metadata !15794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17401
  call void @llvm.dbg.value(metadata i1 true, metadata !15795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17401
  call void @llvm.dbg.value(metadata i8 0, metadata !15796, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i1 false, metadata !15797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17401
  call void @llvm.dbg.value(metadata i1 true, metadata !15798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17401
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !17401
  %2 = add i64 %0, 99, !dbg !17403
  call void @llvm.dbg.value(metadata i64 %2, metadata !15788, metadata !DIExpression()), !dbg !17401
  %3 = udiv i64 %2, 100, !dbg !17404
  ret i64 %3, !dbg !17405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17406 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17408, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i64 %0, metadata !15788, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 10000, metadata !15791, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15792, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i8 1, metadata !15793, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i1 false, metadata !15794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17410
  call void @llvm.dbg.value(metadata i1 false, metadata !15795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17410
  call void @llvm.dbg.value(metadata i8 0, metadata !15796, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i1 true, metadata !15797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17410
  call void @llvm.dbg.value(metadata i1 false, metadata !15798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17410
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i64 0, metadata !15799, metadata !DIExpression()), !dbg !17410
  %2 = mul i64 %0, 100, !dbg !17412
  ret i64 %2, !dbg !17414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17417, metadata !DIExpression()), !dbg !17418
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17419
  br i1 %2, label %14, label %3, !dbg !17421

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17422
  %5 = icmp slt i32 %4, 0, !dbg !17424
  br i1 %5, label %6, label %10, !dbg !17425

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17426
  %8 = load i8, i8* %7, align 1, !dbg !17426
  %9 = icmp eq i8 %8, 16, !dbg !17429
  br i1 %9, label %10, label %14, !dbg !17430

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17431
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17432
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17433, !srcloc !16392
  call void @llvm.dbg.value(metadata i32 %11, metadata !16388, metadata !DIExpression()) #25, !dbg !17437
  %12 = icmp eq i32 %11, 0, !dbg !17438
  br i1 %12, label %13, label %14, !dbg !17439

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17440
  br label %14, !dbg !17442

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17446, metadata !DIExpression()), !dbg !17447
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17448
  %3 = load i8, i8* %2, align 1, !dbg !17448
  %4 = and i8 %3, 2, !dbg !17449
  %5 = icmp ne i8 %4, 0, !dbg !17450
  ret i1 %5, !dbg !17451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17452 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17457
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17456, metadata !DIExpression()), !dbg !17458
  ret %struct.k_thread* %1, !dbg !17459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17460 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17461, !srcloc !16392
  call void @llvm.dbg.value(metadata i32 %1, metadata !16388, metadata !DIExpression()) #25, !dbg !17464
  %2 = icmp eq i32 %1, 0, !dbg !17465
  br i1 %2, label %3, label %8, !dbg !17466

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17467
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17468
  %6 = icmp ne i32 %5, 0, !dbg !17466
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17472, metadata !DIExpression()), !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !17475
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17477, !srcloc !15756
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17477
  call void @llvm.dbg.value(metadata i32 %3, metadata !15753, metadata !DIExpression()) #25, !dbg !17479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17479
  call void @llvm.dbg.value(metadata i32 %3, metadata !15747, metadata !DIExpression()) #25, !dbg !17475
  call void @llvm.dbg.value(metadata i32 %3, metadata !17473, metadata !DIExpression()), !dbg !17474
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17480
  %5 = load i8, i8* %4, align 4, !dbg !17480
  %6 = and i8 %5, 1, !dbg !17482
  %7 = icmp eq i8 %6, 0, !dbg !17483
  br i1 %7, label %9, label %8, !dbg !17484

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !17485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !17485
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !17488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17490, !srcloc !15782
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17491, !srcloc !17493
  br label %24, !dbg !17494

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17495
  %11 = load i8, i8* %10, align 1, !dbg !17495
  %12 = and i8 %11, 8, !dbg !17497
  %13 = icmp eq i8 %12, 0, !dbg !17498
  br i1 %13, label %15, label %14, !dbg !17499

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !17500
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !17503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17505, !srcloc !15782
  br label %24, !dbg !17506

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17507
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17508
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17510
  br i1 %17, label %18, label %23, !dbg !17511

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17512, !srcloc !16392
  call void @llvm.dbg.value(metadata i32 %19, metadata !16388, metadata !DIExpression()) #25, !dbg !17515
  %20 = icmp eq i32 %19, 0, !dbg !17516
  br i1 %20, label %21, label %23, !dbg !17517

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16352, metadata !DIExpression()) #25, !dbg !17518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #25, !dbg !17518
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17521
  br label %23, !dbg !17522

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15768, metadata !DIExpression()) #25, !dbg !17523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !17523
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()) #25, !dbg !17525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17527, !srcloc !15782
  br label %24, !dbg !17528

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17531, metadata !DIExpression()), !dbg !17532
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17533
  %3 = load i8, i8* %2, align 1, !dbg !17533
  %4 = and i8 %3, 8, !dbg !17535
  %5 = icmp eq i8 %4, 0, !dbg !17536
  br i1 %5, label %6, label %20, !dbg !17537

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17538
  %8 = or i8 %7, 8, !dbg !17538
  store i8 %8, i8* %2, align 1, !dbg !17538
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17540
  br i1 %9, label %10, label %12, !dbg !17542

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15910, metadata !DIExpression()) #25, !dbg !17543
  %11 = and i8 %8, 95, !dbg !17546
  store i8 %11, i8* %2, align 1, !dbg !17546
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15918, metadata !DIExpression()) #25, !dbg !17547
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17549
  br label %12, !dbg !17550

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17551
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17551
  %15 = icmp eq %union.anon* %14, null, !dbg !17553
  br i1 %15, label %17, label %16, !dbg !17554

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17555
  br label %17, !dbg !17557

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17558
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17559
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17560
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17561
  br label %20, !dbg !17562

20:                                               ; preds = %17, %1
  ret void, !dbg !17563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17564 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17568, metadata !DIExpression()), !dbg !17570
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17571
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17569, metadata !DIExpression()), !dbg !17570
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17572
  br i1 %3, label %10, label %4, !dbg !17573

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17574
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17576
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17577, metadata !DIExpression()), !dbg !17583
  call void @llvm.dbg.value(metadata i32 0, metadata !17582, metadata !DIExpression()), !dbg !17583
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17585
  store i32 0, i32* %7, align 4, !dbg !17586
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17587
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17571
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17569, metadata !DIExpression()), !dbg !17570
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17572
  br i1 %9, label %10, label %4, !dbg !17573, !llvm.loop !17588

10:                                               ; preds = %4, %1
  ret void, !dbg !17590
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17591 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17596, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17595, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !17600
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17602, !srcloc !15756
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17602
  call void @llvm.dbg.value(metadata i32 %4, metadata !15753, metadata !DIExpression()) #25, !dbg !17604
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17604
  call void @llvm.dbg.value(metadata i32 %4, metadata !15747, metadata !DIExpression()) #25, !dbg !17600
  call void @llvm.dbg.value(metadata i32 %4, metadata !17597, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata i32 0, metadata !17598, metadata !DIExpression()), !dbg !17599
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17605
  %6 = load i8, i8* %5, align 1, !dbg !17605
  %7 = and i8 %6, 8, !dbg !17607
  %8 = icmp eq i8 %7, 0, !dbg !17608
  br i1 %8, label %9, label %24, !dbg !17609

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17596, metadata !DIExpression()), !dbg !17599
  %11 = icmp eq i64 %10, 0, !dbg !17610
  br i1 %11, label %24, label %12, !dbg !17612

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17613
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17615
  br i1 %14, label %24, label %15, !dbg !17616

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17617
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17617
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17618
  %19 = icmp eq %union.anon* %17, %18, !dbg !17619
  br i1 %19, label %24, label %20, !dbg !17620

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17621
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17623
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17624
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %4, metadata !16352, metadata !DIExpression()) #25, !dbg !17626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #25, !dbg !17626
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17628
  call void @llvm.dbg.value(metadata i32 %23, metadata !17598, metadata !DIExpression()), !dbg !17599
  br label %26, !dbg !17629

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17630
  call void @llvm.dbg.value(metadata i32 %25, metadata !17598, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata i32 %4, metadata !15768, metadata !DIExpression()) #25, !dbg !17631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !17631
  call void @llvm.dbg.value(metadata i32 %4, metadata !15776, metadata !DIExpression()) #25, !dbg !17633
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17635, !srcloc !15782
  br label %26, !dbg !17636

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17599
  ret i32 %27, !dbg !17637
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17638 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17642, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 %1, metadata !17643, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i8* %2, metadata !17644, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i8 0, metadata !17646, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 0, metadata !17647, metadata !DIExpression()), !dbg !17651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15741, metadata !DIExpression()) #25, !dbg !17652
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17654, !srcloc !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata i32 undef, metadata !15747, metadata !DIExpression()) #25, !dbg !17652
  call void @llvm.dbg.value(metadata i32 undef, metadata !17649, metadata !DIExpression()), !dbg !17651
  call void @llvm.dbg.value(metadata i8 poison, metadata !17646, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 undef, metadata !17647, metadata !DIExpression()), !dbg !17651
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17657
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17645, metadata !DIExpression()), !dbg !17650
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17660
  br i1 %7, label %12, label %8, !dbg !17662

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17663, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata i32 %1, metadata !17669, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata i8* %2, metadata !17670, metadata !DIExpression()), !dbg !17671
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17577, metadata !DIExpression()), !dbg !17674
  call void @llvm.dbg.value(metadata i32 %1, metadata !17582, metadata !DIExpression()), !dbg !17674
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17676
  store i32 %1, i32* %9, align 4, !dbg !17677
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17678
  store i8* %2, i8** %10, align 4, !dbg !17679
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17680
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17681
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17682
  call void @llvm.dbg.value(metadata i8 1, metadata !17646, metadata !DIExpression()), !dbg !17650
  br label %12, !dbg !17683

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17654
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17654
  call void @llvm.dbg.value(metadata i32 %14, metadata !15753, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata i32 %14, metadata !15747, metadata !DIExpression()) #25, !dbg !17652
  call void @llvm.dbg.value(metadata i32 %14, metadata !17649, metadata !DIExpression()), !dbg !17651
  call void @llvm.dbg.value(metadata i8 poison, metadata !17646, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.value(metadata i32 undef, metadata !15768, metadata !DIExpression()) #25, !dbg !17684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15773, metadata !DIExpression()) #25, !dbg !17684
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()) #25, !dbg !17686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17688, !srcloc !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !17647, metadata !DIExpression()), !dbg !17651
  ret i1 %13, !dbg !17689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17690 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17696, metadata !DIExpression()), !dbg !17701
  call void @llvm.dbg.value(metadata i64 undef, metadata !17698, metadata !DIExpression()), !dbg !17701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17695, metadata !DIExpression()), !dbg !17701
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17697, metadata !DIExpression()), !dbg !17701
  call void @llvm.dbg.value(metadata i8** %4, metadata !17699, metadata !DIExpression()), !dbg !17701
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17702
  call void @llvm.dbg.value(metadata i32 %6, metadata !17700, metadata !DIExpression()), !dbg !17701
  %7 = icmp eq i8** %4, null, !dbg !17703
  br i1 %7, label %12, label %8, !dbg !17705

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17706
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17708
  %11 = load i8*, i8** %10, align 4, !dbg !17708
  store i8* %11, i8** %4, align 4, !dbg !17709
  br label %12, !dbg !17710

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17712 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17714
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17715
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #27, !dbg !17716
  ret void, !dbg !17717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17718 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17728, metadata !DIExpression()), !dbg !17745
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17726, metadata !DIExpression()), !dbg !17745
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17727, metadata !DIExpression()), !dbg !17745
  %5 = icmp eq i64 %4, -1, !dbg !17746
  br i1 %5, label %55, label %6, !dbg !17748

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17749
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17750
  call void @llvm.dbg.value(metadata i32 0, metadata !17729, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !17759
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17761, !srcloc !17767
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17761
  call void @llvm.dbg.value(metadata i32 %9, metadata !17764, metadata !DIExpression()) #25, !dbg !17768
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !17768
  call void @llvm.dbg.value(metadata i32 %9, metadata !17758, metadata !DIExpression()) #25, !dbg !17759
  call void @llvm.dbg.value(metadata i32 %9, metadata !17735, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata i32 undef, metadata !17729, metadata !DIExpression()), !dbg !17751
  %10 = icmp slt i64 %4, -1, !dbg !17769
  br i1 %10, label %11, label %17, !dbg !17770

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17771
  %13 = add i64 %4, %12, !dbg !17772
  %14 = sub i64 -2, %13, !dbg !17772
  call void @llvm.dbg.value(metadata i64 %14, metadata !17739, metadata !DIExpression()), !dbg !17773
  %15 = icmp sgt i64 %14, 1, !dbg !17774
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17774
  br label %22, !dbg !17775

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17776
  %19 = tail call fastcc i32 @elapsed.297() #26, !dbg !17778
  %20 = sext i32 %19 to i64, !dbg !17778
  %21 = add nsw i64 %18, %20, !dbg !17779
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17780
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17781
  store i64 %23, i64* %24, align 8, !dbg !17782
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17783
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17736, metadata !DIExpression()), !dbg !17785
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17786
  br i1 %26, label %42, label %27, !dbg !17786

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17787
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17736, metadata !DIExpression()), !dbg !17785
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17791
  %31 = load i64, i64* %30, align 8, !dbg !17791
  %32 = icmp slt i64 %28, %31, !dbg !17792
  br i1 %32, label %33, label %38, !dbg !17793

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17791
  %35 = sub nsw i64 %31, %28, !dbg !17794
  store i64 %35, i64* %34, align 8, !dbg !17794
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17796
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17797
  tail call fastcc void @sys_dlist_insert.298(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17798
  br label %44, !dbg !17799

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17800
  store i64 %39, i64* %24, align 8, !dbg !17800
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17801
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17736, metadata !DIExpression()), !dbg !17785
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17786
  br i1 %41, label %42, label %27, !dbg !17786, !llvm.loop !17802

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17804
  tail call fastcc void @sys_dlist_append.299(%struct._dnode* noundef %43) #26, !dbg !17807
  br label %44, !dbg !17808

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17809
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17810
  br i1 %46, label %47, label %54, !dbg !17811

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17812
  call void @llvm.dbg.value(metadata i32 %48, metadata !17742, metadata !DIExpression()), !dbg !17813
  %49 = icmp ne i32 %48, 0, !dbg !17814
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17816
  br i1 %52, label %54, label %53, !dbg !17816

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17817
  br label %54, !dbg !17819

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17820, metadata !DIExpression()) #25, !dbg !17826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !17826
  call void @llvm.dbg.value(metadata i32 %9, metadata !17828, metadata !DIExpression()) #25, !dbg !17831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17833, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !17729, metadata !DIExpression()), !dbg !17751
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.297() unnamed_addr #1 !dbg !17836 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17839
  %2 = icmp eq i32 %1, 0, !dbg !17840
  br i1 %2, label %3, label %5, !dbg !17839

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17841
  br label %5, !dbg !17839

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17839
  ret i32 %6, !dbg !17842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17843 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.302() #26, !dbg !17849
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17847, metadata !DIExpression()), !dbg !17850
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17851
  ret %struct._timeout* %2, !dbg !17852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.298(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17853 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17857, metadata !DIExpression()), !dbg !17861
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17858, metadata !DIExpression()), !dbg !17861
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17862
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17862
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17859, metadata !DIExpression()), !dbg !17861
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17863
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17864
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17865
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17866
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17867
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17868
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17869
  ret void, !dbg !17870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17871 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17875, metadata !DIExpression()), !dbg !17877
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17878
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.300(%struct._dnode* noundef %2) #26, !dbg !17879
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17876, metadata !DIExpression()), !dbg !17877
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17880
  ret %struct._timeout* %4, !dbg !17881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.299(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17882 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17887, metadata !DIExpression()), !dbg !17890
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17888, metadata !DIExpression()), !dbg !17890
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17891
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17889, metadata !DIExpression()), !dbg !17890
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17892
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17893
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17894
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17895
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17896
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17897
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17898
  ret void, !dbg !17899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17900 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17905
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17902, metadata !DIExpression()), !dbg !17906
  %2 = tail call fastcc i32 @elapsed.297() #26, !dbg !17907
  call void @llvm.dbg.value(metadata i32 %2, metadata !17903, metadata !DIExpression()), !dbg !17906
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17908
  br i1 %3, label %14, label %4, !dbg !17910

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17911
  %6 = load i64, i64* %5, align 8, !dbg !17911
  %7 = sext i32 %2 to i64, !dbg !17912
  %8 = sub nsw i64 %6, %7, !dbg !17913
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17914
  br i1 %9, label %14, label %10, !dbg !17915

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17916
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17916
  %13 = trunc i64 %12 to i32, !dbg !17916
  call void @llvm.dbg.value(metadata i32 %13, metadata !17904, metadata !DIExpression()), !dbg !17906
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17918
  call void @llvm.dbg.value(metadata i32 %15, metadata !17904, metadata !DIExpression()), !dbg !17906
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17919
  %17 = icmp ne i32 %16, 0, !dbg !17921
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17922
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17922
  call void @llvm.dbg.value(metadata i32 %20, metadata !17904, metadata !DIExpression()), !dbg !17906
  ret i32 %20, !dbg !17923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.300(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17924 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17928, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17929, metadata !DIExpression()), !dbg !17930
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17931
  br i1 %2, label %5, label %3, !dbg !17932

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.301(%struct._dnode* noundef nonnull %0) #26, !dbg !17933
  br label %5, !dbg !17932

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17932
  ret %struct._dnode* %6, !dbg !17934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.301(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17935 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17937, metadata !DIExpression()), !dbg !17939
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17938, metadata !DIExpression()), !dbg !17939
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17940
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17941
  br i1 %3, label %7, label %4, !dbg !17942

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17943
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17943
  br label %7, !dbg !17942

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17942
  ret %struct._dnode* %8, !dbg !17944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.302() unnamed_addr #10 !dbg !17945 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17949, metadata !DIExpression()), !dbg !17950
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.303() #26, !dbg !17951
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17951
  ret %struct._dnode* %3, !dbg !17952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.303() unnamed_addr #10 !dbg !17953 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17957, metadata !DIExpression()), !dbg !17958
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17959
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17960
  ret i1 %2, !dbg !17961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17962 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17966, metadata !DIExpression()), !dbg !17971
  call void @llvm.dbg.value(metadata i32 -22, metadata !17967, metadata !DIExpression()), !dbg !17971
  call void @llvm.dbg.value(metadata i32 0, metadata !17968, metadata !DIExpression()), !dbg !17972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !17973
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17975, !srcloc !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata i32 undef, metadata !17758, metadata !DIExpression()) #25, !dbg !17973
  call void @llvm.dbg.value(metadata i32 undef, metadata !17970, metadata !DIExpression()), !dbg !17972
  call void @llvm.dbg.value(metadata i32 -22, metadata !17967, metadata !DIExpression()), !dbg !17971
  call void @llvm.dbg.value(metadata i32 undef, metadata !17968, metadata !DIExpression()), !dbg !17972
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17967, metadata !DIExpression()), !dbg !17971
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.306(%struct._dnode* noundef %3) #26, !dbg !17978
  br i1 %4, label %5, label %6, !dbg !17982

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17983
  call void @llvm.dbg.value(metadata i32 0, metadata !17967, metadata !DIExpression()), !dbg !17971
  br label %6, !dbg !17985

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17971
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17975
  call void @llvm.dbg.value(metadata i32 %8, metadata !17764, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata i32 %8, metadata !17758, metadata !DIExpression()) #25, !dbg !17973
  call void @llvm.dbg.value(metadata i32 %8, metadata !17970, metadata !DIExpression()), !dbg !17972
  call void @llvm.dbg.value(metadata i32 %7, metadata !17967, metadata !DIExpression()), !dbg !17971
  call void @llvm.dbg.value(metadata i32 undef, metadata !17820, metadata !DIExpression()) #25, !dbg !17986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !17986
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()) #25, !dbg !17988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17990, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !17968, metadata !DIExpression()), !dbg !17972
  ret i32 %7, !dbg !17991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.306(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17998, metadata !DIExpression()), !dbg !17999
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18000
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18000
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18001
  ret i1 %4, !dbg !18002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !18003 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18005, metadata !DIExpression()), !dbg !18006
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !18007
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18009
  br i1 %3, label %10, label %4, !dbg !18010

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18011
  %6 = load i64, i64* %5, align 8, !dbg !18011
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18013
  %8 = load i64, i64* %7, align 8, !dbg !18014
  %9 = add nsw i64 %8, %6, !dbg !18014
  store i64 %9, i64* %7, align 8, !dbg !18014
  br label %10, !dbg !18015

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18016
  tail call fastcc void @sys_dlist_remove.307(%struct._dnode* noundef %11) #26, !dbg !18017
  ret void, !dbg !18018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.307(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18019 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18023, metadata !DIExpression()), !dbg !18026
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18027
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18027
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18024, metadata !DIExpression()), !dbg !18026
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18028
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18028
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18025, metadata !DIExpression()), !dbg !18026
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18029
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18030
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18031
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18032
  tail call fastcc void @sys_dnode_init.308(%struct._dnode* noundef %0) #26, !dbg !18033
  ret void, !dbg !18034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.308(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18035 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18037, metadata !DIExpression()), !dbg !18038
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18039
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18040
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18041
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18042
  ret void, !dbg !18043
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18044 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18050, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i64 0, metadata !18051, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 0, metadata !18052, metadata !DIExpression()), !dbg !18056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18057
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18059, !srcloc !17767
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18059
  call void @llvm.dbg.value(metadata i32 %3, metadata !17764, metadata !DIExpression()) #25, !dbg !18061
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18061
  call void @llvm.dbg.value(metadata i32 %3, metadata !17758, metadata !DIExpression()) #25, !dbg !18057
  call void @llvm.dbg.value(metadata i32 %3, metadata !18054, metadata !DIExpression()), !dbg !18056
  call void @llvm.dbg.value(metadata i64 0, metadata !18051, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 undef, metadata !18052, metadata !DIExpression()), !dbg !18056
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18062
  call void @llvm.dbg.value(metadata i64 %4, metadata !18051, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 %3, metadata !17820, metadata !DIExpression()) #25, !dbg !18065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18065
  call void @llvm.dbg.value(metadata i32 %3, metadata !17828, metadata !DIExpression()) #25, !dbg !18067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18069, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18052, metadata !DIExpression()), !dbg !18056
  ret i64 %4, !dbg !18070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18071 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18073, metadata !DIExpression()), !dbg !18077
  call void @llvm.dbg.value(metadata i64 0, metadata !18074, metadata !DIExpression()), !dbg !18077
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.309(%struct._timeout* noundef %0) #26, !dbg !18078
  br i1 %2, label %21, label %3, !dbg !18080

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18081
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18075, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i64 0, metadata !18074, metadata !DIExpression()), !dbg !18077
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18083
  br i1 %5, label %16, label %6, !dbg !18085

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18075, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i64 %8, metadata !18074, metadata !DIExpression()), !dbg !18077
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18086
  %10 = load i64, i64* %9, align 8, !dbg !18086
  %11 = add nsw i64 %10, %8, !dbg !18088
  call void @llvm.dbg.value(metadata i64 %11, metadata !18074, metadata !DIExpression()), !dbg !18077
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18089
  br i1 %12, label %16, label %13, !dbg !18091

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18092
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18075, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i64 %11, metadata !18074, metadata !DIExpression()), !dbg !18077
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18083
  br i1 %15, label %16, label %6, !dbg !18085, !llvm.loop !18093

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18077
  call void @llvm.dbg.value(metadata i64 %17, metadata !18074, metadata !DIExpression()), !dbg !18077
  %18 = tail call fastcc i32 @elapsed.297() #26, !dbg !18095
  %19 = sext i32 %18 to i64, !dbg !18095
  %20 = sub nsw i64 %17, %19, !dbg !18096
  br label %21, !dbg !18097

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18077
  ret i64 %22, !dbg !18098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.309(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18099 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18103, metadata !DIExpression()), !dbg !18104
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18105
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.306(%struct._dnode* noundef %2) #26, !dbg !18106
  %4 = xor i1 %3, true, !dbg !18107
  ret i1 %4, !dbg !18108
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18109 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18111, metadata !DIExpression()), !dbg !18116
  call void @llvm.dbg.value(metadata i64 0, metadata !18112, metadata !DIExpression()), !dbg !18116
  call void @llvm.dbg.value(metadata i32 0, metadata !18113, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18118
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18120, !srcloc !17767
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18120
  call void @llvm.dbg.value(metadata i32 %3, metadata !17764, metadata !DIExpression()) #25, !dbg !18122
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18122
  call void @llvm.dbg.value(metadata i32 %3, metadata !17758, metadata !DIExpression()) #25, !dbg !18118
  call void @llvm.dbg.value(metadata i32 %3, metadata !18115, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.value(metadata i64 0, metadata !18112, metadata !DIExpression()), !dbg !18116
  call void @llvm.dbg.value(metadata i32 undef, metadata !18113, metadata !DIExpression()), !dbg !18117
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18123
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18126
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18112, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18116
  call void @llvm.dbg.value(metadata i32 %3, metadata !17820, metadata !DIExpression()) #25, !dbg !18127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18127
  call void @llvm.dbg.value(metadata i32 %3, metadata !17828, metadata !DIExpression()) #25, !dbg !18129
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18131, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18113, metadata !DIExpression()), !dbg !18117
  %6 = add i64 %5, %4, !dbg !18132
  ret i64 %6, !dbg !18133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18134 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18136, metadata !DIExpression()), !dbg !18140
  call void @llvm.dbg.value(metadata i32 0, metadata !18137, metadata !DIExpression()), !dbg !18141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18142
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18144, !srcloc !17767
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18144
  call void @llvm.dbg.value(metadata i32 %2, metadata !17764, metadata !DIExpression()) #25, !dbg !18146
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18146
  call void @llvm.dbg.value(metadata i32 %2, metadata !17758, metadata !DIExpression()) #25, !dbg !18142
  call void @llvm.dbg.value(metadata i32 %2, metadata !18139, metadata !DIExpression()), !dbg !18141
  call void @llvm.dbg.value(metadata i32 -1, metadata !18136, metadata !DIExpression()), !dbg !18140
  call void @llvm.dbg.value(metadata i32 undef, metadata !18137, metadata !DIExpression()), !dbg !18141
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18147
  call void @llvm.dbg.value(metadata i32 %3, metadata !18136, metadata !DIExpression()), !dbg !18140
  call void @llvm.dbg.value(metadata i32 %2, metadata !17820, metadata !DIExpression()) #25, !dbg !18150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18150
  call void @llvm.dbg.value(metadata i32 %2, metadata !17828, metadata !DIExpression()) #25, !dbg !18152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18154, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18137, metadata !DIExpression()), !dbg !18141
  ret i32 %3, !dbg !18155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18158, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata i1 %1, metadata !18159, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18168
  call void @llvm.dbg.value(metadata i32 0, metadata !18160, metadata !DIExpression()), !dbg !18169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18170
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18172, !srcloc !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !18174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18170
  call void @llvm.dbg.value(metadata i32 undef, metadata !18162, metadata !DIExpression()), !dbg !18169
  call void @llvm.dbg.value(metadata i32 undef, metadata !18160, metadata !DIExpression()), !dbg !18169
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18175
  call void @llvm.dbg.value(metadata i32 %4, metadata !18163, metadata !DIExpression()), !dbg !18176
  call void @llvm.dbg.value(metadata i1 undef, metadata !18166, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18176
  %5 = icmp slt i32 %4, 2, !dbg !18177
  call void @llvm.dbg.value(metadata i1 %5, metadata !18167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18176
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18178
  call void @llvm.dbg.value(metadata i1 %6, metadata !18166, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18176
  br i1 %7, label %11, label %8, !dbg !18178

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18180
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18180
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18182
  br label %11, !dbg !18183

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18172
  call void @llvm.dbg.value(metadata i32 %12, metadata !17764, metadata !DIExpression()) #25, !dbg !18174
  call void @llvm.dbg.value(metadata i32 %12, metadata !17758, metadata !DIExpression()) #25, !dbg !18170
  call void @llvm.dbg.value(metadata i32 %12, metadata !18162, metadata !DIExpression()), !dbg !18169
  call void @llvm.dbg.value(metadata i32 undef, metadata !17820, metadata !DIExpression()) #25, !dbg !18184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18184
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()) #25, !dbg !18186
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18188, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 1, metadata !18160, metadata !DIExpression()), !dbg !18169
  call void @llvm.dbg.value(metadata i32 undef, metadata !18160, metadata !DIExpression()), !dbg !18169
  ret void, !dbg !18189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18194, metadata !DIExpression()), !dbg !18199
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18201
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18203, !srcloc !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !18205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18201
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18199
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18199
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18206
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18207
  br i1 %4, label %28, label %5, !dbg !18208

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18209
  %10 = load i64, i64* %9, align 8, !dbg !18209
  %11 = sext i32 %8 to i64, !dbg !18210
  %12 = icmp sgt i64 %10, %11, !dbg !18211
  br i1 %12, label %26, label %13, !dbg !18212

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18199
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18196, metadata !DIExpression()), !dbg !18213
  %15 = trunc i64 %10 to i32, !dbg !18214
  call void @llvm.dbg.value(metadata i32 %15, metadata !18198, metadata !DIExpression()), !dbg !18213
  %16 = sext i32 %15 to i64, !dbg !18215
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18216
  %18 = add i64 %17, %16, !dbg !18216
  store i64 %18, i64* @curr_tick, align 8, !dbg !18216
  store i64 0, i64* %9, align 8, !dbg !18217
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18218
  call void @llvm.dbg.value(metadata i32 %14, metadata !17820, metadata !DIExpression()) #25, !dbg !18219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18219
  call void @llvm.dbg.value(metadata i32 %14, metadata !17828, metadata !DIExpression()) #25, !dbg !18221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18223, !srcloc !17834
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18224
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18224
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18226
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18228, !srcloc !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !18230
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18230
  call void @llvm.dbg.value(metadata i32 undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18226
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18199
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18231
  %23 = sub nsw i32 %22, %15, !dbg !18231
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18199
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18206
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18207
  br i1 %25, label %28, label %5, !dbg !18208, !llvm.loop !18232

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18234
  store i64 %27, i64* %9, align 8, !dbg !18234
  br label %32, !dbg !18237

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18199
  %31 = sext i32 %30 to i64, !dbg !18238
  br label %32, !dbg !18238

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18238
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18199
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18239
  %37 = add i64 %36, %33, !dbg !18239
  store i64 %37, i64* @curr_tick, align 8, !dbg !18239
  store i32 0, i32* @announce_remaining, align 4, !dbg !18240
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18241
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18242
  call void @llvm.dbg.value(metadata i32 %35, metadata !17820, metadata !DIExpression()) #25, !dbg !18243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18243
  call void @llvm.dbg.value(metadata i32 %35, metadata !17828, metadata !DIExpression()) #25, !dbg !18245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18247, !srcloc !17834
  ret void, !dbg !18248
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18249 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18253, metadata !DIExpression()), !dbg !18257
  call void @llvm.dbg.value(metadata i32 0, metadata !18254, metadata !DIExpression()), !dbg !18258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17752, metadata !DIExpression()) #25, !dbg !18259
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18261, !srcloc !17767
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18261
  call void @llvm.dbg.value(metadata i32 %2, metadata !17764, metadata !DIExpression()) #25, !dbg !18263
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()) #25, !dbg !18263
  call void @llvm.dbg.value(metadata i32 %2, metadata !17758, metadata !DIExpression()) #25, !dbg !18259
  call void @llvm.dbg.value(metadata i32 %2, metadata !18256, metadata !DIExpression()), !dbg !18258
  call void @llvm.dbg.value(metadata i64 0, metadata !18253, metadata !DIExpression()), !dbg !18257
  call void @llvm.dbg.value(metadata i32 undef, metadata !18254, metadata !DIExpression()), !dbg !18258
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18264
  %4 = tail call fastcc i32 @elapsed.297() #26, !dbg !18267
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18253, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18257
  call void @llvm.dbg.value(metadata i32 %2, metadata !17820, metadata !DIExpression()) #25, !dbg !18268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17825, metadata !DIExpression()) #25, !dbg !18268
  call void @llvm.dbg.value(metadata i32 %2, metadata !17828, metadata !DIExpression()) #25, !dbg !18270
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18272, !srcloc !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18254, metadata !DIExpression()), !dbg !18258
  %5 = sext i32 %4 to i64, !dbg !18267
  %6 = add i64 %3, %5, !dbg !18273
  ret i64 %6, !dbg !18274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18275 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18276
  %2 = trunc i64 %1 to i32, !dbg !18277
  ret i32 %2, !dbg !18278
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18279 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18280
  ret i64 %1, !dbg !18281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18284, metadata !DIExpression()), !dbg !18291
  %2 = icmp eq i32 %0, 0, !dbg !18292
  br i1 %2, label %10, label %3, !dbg !18294

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18295
  call void @llvm.dbg.value(metadata i32 %4, metadata !18285, metadata !DIExpression()), !dbg !18291
  %5 = mul i32 %0, 168, !dbg !18296
  call void @llvm.dbg.value(metadata i32 %5, metadata !18286, metadata !DIExpression()), !dbg !18291
  br label %6, !dbg !18297

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18298
  call void @llvm.dbg.value(metadata i32 %7, metadata !18287, metadata !DIExpression()), !dbg !18299
  %8 = sub i32 %7, %4, !dbg !18300
  %9 = icmp ult i32 %8, %5, !dbg !18302
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18304 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18305
  ret i32 %1, !dbg !18306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18307 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18309
  ret i32 %1, !dbg !18310
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18311 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18315, metadata !DIExpression()), !dbg !18317
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18318

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18319
  br label %14, !dbg !18323

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18316, metadata !DIExpression()), !dbg !18317
  %6 = icmp slt i64 %2, -1, !dbg !18324
  br i1 %6, label %7, label %9, !dbg !18327

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18328
  br label %14, !dbg !18329

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18331
  %11 = icmp ugt i64 %2, 1, !dbg !18332
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18332
  %13 = add nsw i64 %10, %12, !dbg !18333
  br label %14, !dbg !18334

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18335
  ret i64 %15, !dbg !18336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18337 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.318, i32 0, i32 0)) #27, !dbg !18339
  ret void, !dbg !18340
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!938, !2, !2689, !27, !379, !403, !2691, !2693, !2727, !414, !458, !2729, !2732, !487, !507, !2734, !2742, !2750, !2766, !2777, !2823, !2825, !2853, !2881, !2924, !2996, !3041, !519, !675, !3069, !711, !721, !746, !972, !3074, !1105, !1171, !1353, !1668, !1892, !3111, !2005, !2095, !3113, !3197, !3260, !2142, !3263, !2149, !2517, !3281, !2537, !3283, !2652, !3286}
!llvm.ident = !{!3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288, !3288}
!llvm.module.flags = !{!3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !414, file: !431, line: 56, type: !432, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !430, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 369, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 360, size: 224, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !420, file: !419, line: 362, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !420, file: !419, line: 363, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !420, file: !419, line: 364, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 365, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 366, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !420, file: !419, line: 367, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !420, file: !419, line: 368, baseType: !423, size: 32, offset: 192)
!430 = !{!412}
!431 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !435)
!434 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !{!436, !455}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !433, file: !434, line: 60, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DISubroutineType(types: !439)
!439 = !{!125, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !443)
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !137, line: 380, baseType: !140, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !442, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !442, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !137, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !137, line: 359, baseType: !150, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !442, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !434, line: 65, baseType: !440, size: 32, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !458, file: !461, line: 71, type: !462, isLocal: true, isDefinition: true, align: 32)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !460, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!460 = !{!456}
!461 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !464)
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !463, file: !434, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!125, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !137, line: 380, baseType: !140, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !137, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !137, line: 359, baseType: !150, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !463, file: !434, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !487, file: !501, line: 37, type: !502, isLocal: true, isDefinition: true)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !489, globals: !500, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!489 = !{!184, !490, !491, !150}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !493)
!492 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !494, file: !492, line: 65, baseType: !497, size: 1408)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 44)
!500 = !{!485}
!501 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 256)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "sbox", scope: !507, file: !516, line: 37, type: !502, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !509, globals: !515, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!509 = !{!510, !490, !184, !150}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !512, file: !492, line: 65, baseType: !497, size: 1408)
!515 = !{!505}
!516 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !519, file: !526, line: 17, type: !668, isLocal: false, isDefinition: true)
!519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !521, globals: !522, splitDebugInlining: false, nameTableKind: None)
!520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!521 = !{!272, !125, !208, !124}
!522 = !{!517, !523, !664}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !525, file: !526, line: 198, type: !650, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !526, file: !526, line: 175, type: !527, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !645)
!526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !532)
!531 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!533, !599, !612, !613, !614, !615, !621, !640}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !531, line: 247, baseType: !534, size: 384)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !535)
!535 = !{!536, !564, !572, !573, !574, !585, !586, !587}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 60, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 60, size: 64, elements: !538)
!538 = !{!539, !555}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !537, file: !531, line: 61, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !542)
!541 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 38, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 38, size: 32, elements: !546)
!546 = !{!547, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !545, file: !541, line: 39, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !541, line: 40, baseType: !548, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 42, baseType: !551, size: 32, offset: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 42, size: 32, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !551, file: !541, line: 43, baseType: !548, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !541, line: 44, baseType: !548, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !537, file: !531, line: 62, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !556, file: !557, line: 50, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !562)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !534, file: !531, line: 68, baseType: !565, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !568, file: !567, line: 232, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !542)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !534, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !534, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 90, baseType: !575, size: 16, offset: 112)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 90, size: 16, elements: !576)
!576 = !{!577, !584}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !531, line: 91, baseType: !578, size: 16)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !531, line: 91, size: 16, elements: !579)
!579 = !{!580, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !578, file: !531, line: 96, baseType: !581, size: 8)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !582)
!582 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !578, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !575, file: !531, line: 100, baseType: !227, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !534, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !534, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !534, file: !531, line: 131, baseType: !588, size: 192, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !589)
!589 = !{!590, !591, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !588, file: !567, line: 245, baseType: !540, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !588, file: !567, line: 246, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !588, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !530, file: !531, line: 250, baseType: !600, size: 288, offset: 384)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !602)
!601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !600, file: !601, line: 26, baseType: !208, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !600, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !600, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !600, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !600, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !600, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !600, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !600, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !600, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !530, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !530, file: !531, line: 256, baseType: !566, size: 64, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !530, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !530, file: !531, line: 300, baseType: !616, size: 96, offset: 800)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !617)
!617 = !{!618, !619, !620}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !616, file: !531, line: 153, baseType: !22, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !616, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !530, file: !531, line: 325, baseType: !622, size: 32, offset: 896)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !{!626, !635, !636}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !623, file: !624, line: 5074, baseType: !627, size: 96)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !629)
!628 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!629 = !{!630, !633, !634}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !627, file: !628, line: 57, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !628, line: 57, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !623, file: !624, line: 5075, baseType: !566, size: 64, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !623, file: !624, line: 5076, baseType: !637, offset: 160)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!638 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!639 = !{}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !530, file: !531, line: 343, baseType: !641, size: 64, offset: 928)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !641, file: !601, line: 63, baseType: !208, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !641, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!645 = !{!646, !647, !648, !649}
!646 = !DILocalVariable(name: "thread", arg: 1, scope: !525, file: !526, line: 175, type: !529)
!647 = !DILocalVariable(name: "region_num", scope: !525, file: !526, line: 200, type: !150)
!648 = !DILocalVariable(name: "guard_start", scope: !525, file: !526, line: 265, type: !22)
!649 = !DILocalVariable(name: "guard_size", scope: !525, file: !526, line: 266, type: !272)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 96, elements: !662)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !653)
!652 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !651, file: !652, line: 53, baseType: !22, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !651, file: !652, line: 55, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !659)
!658 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !659, file: !658, line: 150, baseType: !208, size: 32)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "static_regions", scope: !519, file: !526, line: 62, type: !666, isLocal: true, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 96, elements: !662)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !670)
!670 = !{!671, !672}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !373, line: 17, baseType: !140, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !669, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !675, file: !708, line: 39, type: !150, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !677, globals: !707, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!677 = !{!678, !124, !125, !695, !150}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !680, line: 1226, baseType: !681)
!680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 1213, size: 352, elements: !682)
!682 = !{!683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !681, file: !680, line: 1215, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !681, file: !680, line: 1216, baseType: !423, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !681, file: !680, line: 1217, baseType: !423, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !681, file: !680, line: 1218, baseType: !423, size: 32, offset: 96)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !681, file: !680, line: 1219, baseType: !423, size: 32, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !681, file: !680, line: 1220, baseType: !423, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !681, file: !680, line: 1221, baseType: !423, size: 32, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !681, file: !680, line: 1222, baseType: !423, size: 32, offset: 224)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !681, file: !680, line: 1223, baseType: !423, size: 32, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !681, file: !680, line: 1224, baseType: !423, size: 32, offset: 288)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !681, file: !680, line: 1225, baseType: !423, size: 32, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !697, file: !698, line: 29, baseType: !208, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !697, file: !698, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !658, line: 143, baseType: !208, size: 32)
!707 = !{!673}
!708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !711, file: !718, line: 21, type: !409, isLocal: true, isDefinition: true)
!711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !713, globals: !717, splitDebugInlining: false, nameTableKind: None)
!712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!713 = !{!714, !125, !124}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !716, line: 22, baseType: !125)
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!709}
!718 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !721, file: !726, line: 13, type: !743, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !723, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!723 = !{!724, !719}
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "mpu_config", scope: !721, file: !726, line: 37, type: !727, isLocal: false, isDefinition: true)
!726 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !698, line: 41, size: 64, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !728, file: !698, line: 43, baseType: !208, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !728, file: !698, line: 45, baseType: !732, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !734, file: !698, line: 29, baseType: !208, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !734, file: !698, line: 37, baseType: !739, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !740, file: !658, line: 143, baseType: !208, size: 32)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !562)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !746, file: !851, line: 72, type: !933, isLocal: true, isDefinition: true)
!746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !748, retainedTypes: !837, globals: !848, splitDebugInlining: false, nameTableKind: None)
!747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!748 = !{!46, !749}
!749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 65, baseType: !125, size: 32, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836}
!751 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!752 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!753 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!754 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!755 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!756 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!757 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!758 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!759 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!760 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!761 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!762 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!763 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!764 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!765 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!766 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!767 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!768 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!769 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!770 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!771 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!772 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!773 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!774 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!775 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!776 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!777 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!778 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!779 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!780 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!781 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!782 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!783 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!784 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!785 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!786 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!787 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!788 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!789 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!790 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!791 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!792 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!793 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!794 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!795 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!796 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!797 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!798 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!799 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!800 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!801 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!802 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!803 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!804 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!805 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!806 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!807 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!808 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!809 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!810 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!811 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!812 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!813 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!814 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!815 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!816 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!817 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!818 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!819 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!820 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!821 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!822 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!823 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!824 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!825 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!826 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!827 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!828 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!829 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!830 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!831 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!832 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!833 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!834 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!835 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!836 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!837 = !{!272, !125, !124, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 354, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 346, size: 192, elements: !841)
!841 = !{!842, !843, !844, !845, !846, !847}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !840, file: !419, line: 348, baseType: !423, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !840, file: !419, line: 349, baseType: !423, size: 32, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !840, file: !419, line: 350, baseType: !423, size: 32, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !840, file: !419, line: 351, baseType: !423, size: 32, offset: 96)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !840, file: !419, line: 352, baseType: !423, size: 32, offset: 128)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !840, file: !419, line: 353, baseType: !423, size: 32, offset: 160)
!848 = !{!849, !855, !871, !882, !897, !744, !899, !913, !915, !917, !919, !921, !923, !925, !927, !929, !931}
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !746, file: !851, line: 424, type: !852, isLocal: false, isDefinition: true, align: 16)
!851 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !853)
!853 = !{!854}
!854 = !DISubrange(count: 4)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !746, file: !851, line: 424, type: !857, isLocal: false, isDefinition: true, align: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !859)
!859 = !{!860, !861, !862, !863, !869, !870}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !858, file: !137, line: 380, baseType: !140, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !858, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !858, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !858, file: !137, line: 386, baseType: !864, size: 32, offset: 96)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !865, file: !137, line: 359, baseType: !150, size: 8)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !865, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !858, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !858, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !746, file: !851, line: 424, type: !873, isLocal: true, isDefinition: true, align: 32)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !875)
!875 = !{!876, !881}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !874, file: !434, line: 60, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{!125, !880}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !874, file: !434, line: 65, baseType: !880, size: 32, offset: 32)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "exti_data", scope: !746, file: !851, line: 423, type: !884, isLocal: true, isDefinition: true)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !851, line: 107, size: 1472, elements: !885)
!885 = !{!886}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !884, file: !851, line: 109, baseType: !887, size: 1472)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 1472, elements: !332)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !851, line: 101, size: 64, elements: !889)
!889 = !{!890, !896}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !888, file: !851, line: 102, baseType: !891, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !892, line: 63, baseType: !893)
!892 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !125, !124}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !888, file: !851, line: 103, baseType: !124, size: 32, offset: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !746, file: !851, line: 424, type: !865, isLocal: true, isDefinition: true, align: 8)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !901, file: !851, line: 493, type: !906, isLocal: true, isDefinition: true, align: 32)
!901 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !851, file: !851, line: 460, type: !902, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !904)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !880}
!904 = !{!905}
!905 = !DILocalVariable(name: "dev", arg: 1, scope: !901, file: !851, line: 460, type: !880)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !907)
!907 = !{!908, !910, !911, !912}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !906, file: !10, line: 55, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !906, file: !10, line: 57, baseType: !909, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !906, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !906, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !901, file: !851, line: 497, type: !906, isLocal: true, isDefinition: true, align: 32)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !901, file: !851, line: 507, type: !906, isLocal: true, isDefinition: true, align: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !901, file: !851, line: 512, type: !906, isLocal: true, isDefinition: true, align: 32)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !901, file: !851, line: 516, type: !906, isLocal: true, isDefinition: true, align: 32)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !901, file: !851, line: 523, type: !906, isLocal: true, isDefinition: true, align: 32)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !901, file: !851, line: 527, type: !906, isLocal: true, isDefinition: true, align: 32)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !901, file: !851, line: 581, type: !906, isLocal: true, isDefinition: true, align: 32)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !901, file: !851, line: 586, type: !906, isLocal: true, isDefinition: true, align: 32)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !901, file: !851, line: 591, type: !906, isLocal: true, isDefinition: true, align: 32)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !901, file: !851, line: 595, type: !906, isLocal: true, isDefinition: true, align: 32)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 736, elements: !332)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 155, baseType: !749)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !938, file: !943, line: 23, type: !967, isLocal: false, isDefinition: true, align: 16)
!938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !940, splitDebugInlining: false, nameTableKind: None)
!939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!940 = !{!941, !936, !945, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965}
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !938, file: !943, line: 18, type: !944, isLocal: false, isDefinition: true, align: 16)
!943 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 208, elements: !342)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !938, file: !943, line: 30, type: !852, isLocal: false, isDefinition: true, align: 16)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !938, file: !943, line: 37, type: !852, isLocal: false, isDefinition: true, align: 16)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !938, file: !943, line: 44, type: !852, isLocal: false, isDefinition: true, align: 16)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !938, file: !943, line: 51, type: !852, isLocal: false, isDefinition: true, align: 16)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !938, file: !943, line: 58, type: !852, isLocal: false, isDefinition: true, align: 16)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !938, file: !943, line: 65, type: !852, isLocal: false, isDefinition: true, align: 16)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !938, file: !943, line: 72, type: !852, isLocal: false, isDefinition: true, align: 16)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !938, file: !943, line: 79, type: !852, isLocal: false, isDefinition: true, align: 16)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !938, file: !943, line: 86, type: !852, isLocal: false, isDefinition: true, align: 16)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !938, file: !943, line: 93, type: !852, isLocal: false, isDefinition: true, align: 16)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !938, file: !943, line: 98, type: !967, isLocal: false, isDefinition: true, align: 16)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 3)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !972, file: !1033, line: 398, type: !1064, isLocal: true, isDefinition: true)
!972 = distinct !DICompileUnit(language: DW_LANG_C99, file: !973, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !974, retainedTypes: !987, globals: !1030, splitDebugInlining: false, nameTableKind: None)
!973 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!974 = !{!975, !46, !980}
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !976, line: 197, baseType: !32, size: 32, elements: !977)
!976 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!977 = !{!978, !979}
!978 = !DIEnumerator(name: "SUCCESS", value: 0)
!979 = !DIEnumerator(name: "ERROR", value: 1)
!980 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !981, line: 44, baseType: !32, size: 32, elements: !982)
!981 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!982 = !{!983, !984, !985, !986}
!983 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!984 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!985 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!986 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!987 = !{!124, !125, !208, !988, !1023, !1029}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 532, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 500, size: 1088, elements: !991)
!991 = !{!992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !990, file: !419, line: 502, baseType: !423, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !990, file: !419, line: 503, baseType: !423, size: 32, offset: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !990, file: !419, line: 504, baseType: !423, size: 32, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !990, file: !419, line: 505, baseType: !423, size: 32, offset: 96)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !990, file: !419, line: 506, baseType: !423, size: 32, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !990, file: !419, line: 507, baseType: !423, size: 32, offset: 160)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !990, file: !419, line: 508, baseType: !423, size: 32, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !990, file: !419, line: 509, baseType: !208, size: 32, offset: 224)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !990, file: !419, line: 510, baseType: !423, size: 32, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !990, file: !419, line: 511, baseType: !423, size: 32, offset: 288)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !990, file: !419, line: 512, baseType: !1003, size: 64, offset: 320)
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !562)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !990, file: !419, line: 513, baseType: !423, size: 32, offset: 384)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !990, file: !419, line: 514, baseType: !423, size: 32, offset: 416)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !990, file: !419, line: 515, baseType: !423, size: 32, offset: 448)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !990, file: !419, line: 516, baseType: !208, size: 32, offset: 480)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !990, file: !419, line: 517, baseType: !423, size: 32, offset: 512)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !990, file: !419, line: 518, baseType: !423, size: 32, offset: 544)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !990, file: !419, line: 519, baseType: !1003, size: 64, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !990, file: !419, line: 520, baseType: !423, size: 32, offset: 640)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !990, file: !419, line: 521, baseType: !423, size: 32, offset: 672)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !990, file: !419, line: 522, baseType: !423, size: 32, offset: 704)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !990, file: !419, line: 523, baseType: !208, size: 32, offset: 736)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !990, file: !419, line: 524, baseType: !423, size: 32, offset: 768)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !990, file: !419, line: 525, baseType: !423, size: 32, offset: 800)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !990, file: !419, line: 526, baseType: !1003, size: 64, offset: 832)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !990, file: !419, line: 527, baseType: !423, size: 32, offset: 896)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !990, file: !419, line: 528, baseType: !423, size: 32, offset: 928)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !990, file: !419, line: 529, baseType: !1003, size: 64, offset: 960)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !990, file: !419, line: 530, baseType: !423, size: 32, offset: 1024)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !990, file: !419, line: 531, baseType: !423, size: 32, offset: 1056)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1025, line: 343, size: 64, elements: !1026)
!1025 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1024, file: !1025, line: 344, baseType: !208, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1024, file: !1025, line: 345, baseType: !208, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1030 = !{!1031, !1035, !1051, !1062, !970}
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !972, file: !1033, line: 752, type: !1034, isLocal: false, isDefinition: true, align: 16)
!1033 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 928, elements: !369)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !972, file: !1033, line: 752, type: !1037, isLocal: false, isDefinition: true, align: 32)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1049, !1050}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1038, file: !137, line: 380, baseType: !140, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1038, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1038, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1038, file: !137, line: 386, baseType: !1044, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1045, file: !137, line: 359, baseType: !150, size: 8)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1045, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1038, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !972, file: !1033, line: 752, type: !1053, isLocal: true, isDefinition: true, align: 32)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1055)
!1055 = !{!1056, !1061}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1054, file: !434, line: 60, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!125, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1054, file: !434, line: 65, baseType: !1060, size: 32, offset: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !972, file: !1033, line: 752, type: !1045, isLocal: true, isDefinition: true, align: 8)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !981, line: 100, size: 224, elements: !1065)
!1065 = !{!1066, !1072, !1073, !1082, !1087, !1092, !1098}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1064, file: !981, line: 101, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !981, line: 76, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!125, !1060, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !981, line: 56, baseType: !124)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1064, file: !981, line: 102, baseType: !1067, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1064, file: !981, line: 103, baseType: !1074, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !981, line: 83, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!125, !1060, !1071, !1078, !124}
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !981, line: 72, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !1060, !1071, !124}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1064, file: !981, line: 104, baseType: !1083, size: 32, offset: 96)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !981, line: 79, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!125, !1060, !1071, !1029}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1064, file: !981, line: 105, baseType: !1088, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !981, line: 88, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!980, !1060, !1071}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1064, file: !981, line: 106, baseType: !1093, size: 32, offset: 160)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !981, line: 92, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!125, !1060, !1071, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !981, line: 64, baseType: !124)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1064, file: !981, line: 107, baseType: !1099, size: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !981, line: 96, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!125, !1060, !1071, !124}
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1105, file: !1162, line: 603, type: !1164, isLocal: true, isDefinition: true, align: 32)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1107, globals: !1159, splitDebugInlining: false, nameTableKind: None)
!1106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!1107 = !{!124, !125, !1108}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1111, line: 336, size: 160, elements: !1112)
!1111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !{!1113, !1133, !1137, !1141, !1154}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1110, file: !1111, line: 365, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!125, !1117, !1132}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1130, !1131}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1119, file: !137, line: 380, baseType: !140, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1119, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1119, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1119, file: !137, line: 386, baseType: !1125, size: 32, offset: 96)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1127)
!1127 = !{!1128, !1129}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1126, file: !137, line: 359, baseType: !150, size: 8)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1126, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1119, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1119, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1110, file: !1111, line: 366, baseType: !1134, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{null, !1117, !151}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1110, file: !1111, line: 374, baseType: !1138, size: 32, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!125, !1117}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1110, file: !1111, line: 377, baseType: !1142, size: 32, offset: 96)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!125, !1117, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1111, line: 122, size: 64, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152, !1153}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1147, file: !1111, line: 123, baseType: !208, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1147, file: !1111, line: 124, baseType: !150, size: 8, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1147, file: !1111, line: 125, baseType: !150, size: 8, offset: 40)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1147, file: !1111, line: 126, baseType: !150, size: 8, offset: 48)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1147, file: !1111, line: 127, baseType: !150, size: 8, offset: 56)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1110, file: !1111, line: 379, baseType: !1155, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!125, !1117, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1159 = !{!1103, !1160}
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1105, file: !1162, line: 38, type: !1163, isLocal: true, isDefinition: true)
!1162 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1166)
!1166 = !{!1167, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1165, file: !434, line: 60, baseType: !1138, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1165, file: !434, line: 65, baseType: !1117, size: 32, offset: 32)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1171, file: !1177, line: 22, type: !1346, isLocal: false, isDefinition: true)
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1173, globals: !1174, splitDebugInlining: false, nameTableKind: None)
!1172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!1173 = !{!30, !39, !42, !116}
!1174 = !{!1169, !1175, !1178, !1194, !1205, !1207, !1335}
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !967, isLocal: false, isDefinition: true, align: 16)
!1177 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1192, !1193}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1181, file: !137, line: 380, baseType: !140, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1181, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1181, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1181, file: !137, line: 386, baseType: !1187, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1188, file: !137, line: 359, baseType: !150, size: 8)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1188, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1181, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !1196, isLocal: true, isDefinition: true, align: 32)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1198)
!1198 = !{!1199, !1204}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1197, file: !434, line: 60, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!125, !1203}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1197, file: !434, line: 65, baseType: !1203, size: 32, offset: 32)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !1188, isLocal: true, isDefinition: true, align: 8)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1171, file: !1177, line: 317, type: !1209, isLocal: true, isDefinition: true)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1210)
!1210 = !{!1211, !1212, !1288, !1292, !1300, !1323, !1327}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1209, file: !128, line: 66, baseType: !1200, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1209, file: !128, line: 69, baseType: !1213, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!125, !1203, !1216, !39, !30, !42}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1218)
!1218 = !{!1219, !1261, !1266, !1267, !1268, !1269, !1286, !1287}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1217, file: !31, line: 116, baseType: !1220, size: 64)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1221)
!1221 = !{!1222, !1223}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1220, file: !31, line: 76, baseType: !30, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, scope: !1220, file: !31, line: 78, baseType: !1224, size: 32, offset: 32)
!1224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1220, file: !31, line: 78, size: 32, elements: !1225)
!1225 = !{!1226, !1240, !1245, !1247, !1259}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1224, file: !31, line: 79, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!125, !1216, !1231}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238, !1239}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1232, file: !31, line: 183, baseType: !184, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1232, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1232, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1232, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1232, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1232, file: !31, line: 208, baseType: !1216, size: 32, offset: 160)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1224, file: !31, line: 80, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1242)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!125, !1216, !1231, !184}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1224, file: !31, line: 81, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1242)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1224, file: !31, line: 82, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!125, !1216, !1252, !184}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1253, file: !31, line: 219, baseType: !1231, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1253, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1253, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1253, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1224, file: !31, line: 83, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1249)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1217, file: !31, line: 126, baseType: !1262, size: 32, offset: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1217, file: !31, line: 119, size: 32, elements: !1263)
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1262, file: !31, line: 121, baseType: !184, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1262, file: !31, line: 125, baseType: !124, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1217, file: !31, line: 131, baseType: !1203, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1217, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1217, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1217, file: !31, line: 156, baseType: !1270, size: 32, offset: 192)
!1270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1217, file: !31, line: 152, size: 32, elements: !1271)
!1271 = !{!1272, !1277, !1281}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1270, file: !31, line: 153, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1273, file: !31, line: 88, baseType: !227, size: 16)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1273, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1270, file: !31, line: 154, baseType: !1278, size: 32)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1278, file: !31, line: 96, baseType: !208, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1270, file: !31, line: 155, baseType: !1282, size: 32)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1282, file: !31, line: 100, baseType: !227, size: 16)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1282, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1217, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1217, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1209, file: !128, line: 74, baseType: !1289, size: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!125, !1203, !1216}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1209, file: !128, line: 77, baseType: !1293, size: 32, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!125, !1203, !1296}
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !1231, !125}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1209, file: !128, line: 81, baseType: !1301, size: 32, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!125, !1203, !1304, !116}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1321, !1322}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1305, file: !117, line: 51, baseType: !1203, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1305, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1305, file: !117, line: 65, baseType: !1310, size: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!125, !1304, !1314, !153}
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1315, file: !117, line: 91, baseType: !184, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1315, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1315, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1315, file: !117, line: 107, baseType: !1304, size: 32, offset: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1305, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1305, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1209, file: !128, line: 84, baseType: !1324, size: 32, offset: 160)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!125, !1203, !1304}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1209, file: !128, line: 86, baseType: !1328, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!125, !1203, !1331}
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1314, !125}
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1171, file: !1177, line: 26, type: !1337, isLocal: true, isDefinition: true)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1338, size: 2880, elements: !562)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1339, line: 22, size: 1440, elements: !1340)
!1339 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1338, file: !1339, line: 23, baseType: !125, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1338, file: !1339, line: 24, baseType: !1343, size: 1408, offset: 32)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1343, file: !492, line: 65, baseType: !497, size: 1408)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1348)
!1348 = !{!1349, !1350}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1347, file: !373, line: 17, baseType: !140, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1347, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1353, file: !1522, line: 762, type: !1641, isLocal: true, isDefinition: true)
!1353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1355, retainedTypes: !1373, globals: !1519, splitDebugInlining: false, nameTableKind: None)
!1354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!1355 = !{!46, !1356, !1362, !1367, !980}
!1356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1357, line: 506, baseType: !32, size: 32, elements: !1358)
!1357 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1358 = !{!1359, !1360, !1361}
!1359 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1360 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1361 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1357, line: 512, baseType: !32, size: 32, elements: !1363)
!1363 = !{!1364, !1365, !1366}
!1364 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1365 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1366 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !892, line: 43, baseType: !32, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372}
!1369 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1370 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1371 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1372 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1373 = !{!124, !125, !1374, !1444, !1449, !1409, !1362, !1356, !1454, !1455, !208, !1469, !1424, !393, !1479, !1480}
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1357, line: 523, size: 288, elements: !1377)
!1377 = !{!1378, !1399, !1405, !1410, !1414, !1415, !1416, !1420, !1440}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1376, file: !1357, line: 524, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!125, !1382, !1397, !1398}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389, !1395, !1396}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1384, file: !137, line: 380, baseType: !140, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1384, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1384, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1384, file: !137, line: 386, baseType: !1390, size: 32, offset: 96)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1391, file: !137, line: 359, baseType: !150, size: 8)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1391, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1384, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1384, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1357, line: 237, baseType: !150)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1357, line: 257, baseType: !208)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1376, file: !1357, line: 530, baseType: !1400, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!125, !1382, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1357, line: 229, baseType: !208)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1376, file: !1357, line: 532, baseType: !1406, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!125, !1382, !1409, !1404}
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1357, line: 216, baseType: !208)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1376, file: !1357, line: 535, baseType: !1411, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!125, !1382, !1409}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1376, file: !1357, line: 537, baseType: !1411, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1376, file: !1357, line: 539, baseType: !1411, size: 32, offset: 160)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1376, file: !1357, line: 541, baseType: !1417, size: 32, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!125, !1382, !1397, !1356, !1362}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1376, file: !1357, line: 544, baseType: !1421, size: 32, offset: 224)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!125, !1382, !1424, !153}
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1357, line: 478, size: 96, elements: !1426)
!1426 = !{!1427, !1434, !1439}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1425, file: !1357, line: 482, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1429, line: 33, baseType: !1430)
!1429 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1429, line: 29, size: 32, elements: !1431)
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1430, file: !1429, line: 30, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1425, file: !1357, line: 485, baseType: !1435, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1357, line: 464, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{null, !1382, !1424, !1409}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1425, file: !1357, line: 493, baseType: !1409, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1376, file: !1357, line: 547, baseType: !1441, size: 32, offset: 256)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!208, !1382}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1357, line: 428, size: 32, elements: !1447)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1446, file: !1357, line: 434, baseType: !1409, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1357, line: 441, size: 32, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1451, file: !1357, line: 447, baseType: !1409, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 441, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 430, size: 320, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1457, file: !419, line: 432, baseType: !423, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1457, file: !419, line: 433, baseType: !423, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1457, file: !419, line: 434, baseType: !423, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1457, file: !419, line: 435, baseType: !423, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1457, file: !419, line: 436, baseType: !423, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1457, file: !419, line: 437, baseType: !423, size: 32, offset: 160)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1457, file: !419, line: 438, baseType: !423, size: 32, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1457, file: !419, line: 439, baseType: !423, size: 32, offset: 224)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1457, file: !419, line: 440, baseType: !1468, size: 64, offset: 256)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !562)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 454, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 447, size: 288, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1477, !1478}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1471, file: !419, line: 449, baseType: !423, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1471, file: !419, line: 450, baseType: !423, size: 32, offset: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1471, file: !419, line: 451, baseType: !1476, size: 128, offset: 64)
!1476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !853)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1471, file: !419, line: 452, baseType: !1003, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1471, file: !419, line: 453, baseType: !423, size: 32, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !981, line: 100, size: 224, elements: !1483)
!1483 = !{!1484, !1489, !1490, !1499, !1504, !1509, !1514}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1482, file: !981, line: 101, baseType: !1485, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !981, line: 76, baseType: !1486)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!125, !1382, !1071}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1482, file: !981, line: 102, baseType: !1485, size: 32, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1482, file: !981, line: 103, baseType: !1491, size: 32, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !981, line: 83, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!125, !1382, !1071, !1495, !124}
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !981, line: 72, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{null, !1382, !1071, !124}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1482, file: !981, line: 104, baseType: !1500, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !981, line: 79, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!125, !1382, !1071, !1029}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1482, file: !981, line: 105, baseType: !1505, size: 32, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !981, line: 88, baseType: !1506)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!980, !1382, !1071}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1482, file: !981, line: 106, baseType: !1510, size: 32, offset: 160)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !981, line: 92, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!125, !1382, !1071, !1097}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1482, file: !981, line: 107, baseType: !1515, size: 32, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !981, line: 96, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!125, !1382, !1071, !124}
!1519 = !{!1520, !1526, !1528, !1538, !1543, !1545, !1547, !1549, !1551, !1553, !1555, !1557, !1559, !1561, !1563, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1629, !1631, !1633, !1635, !1351, !1637, !1639, !1652, !1654, !1656, !1658, !1660, !1662, !1664}
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1353, file: !1522, line: 762, type: !1523, isLocal: false, isDefinition: true, align: 16)
!1522 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 96, elements: !1524)
!1524 = !{!1525}
!1525 = !DISubrange(count: 6)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1353, file: !1522, line: 762, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1353, file: !1522, line: 762, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1532)
!1532 = !{!1533, !1537}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1531, file: !434, line: 60, baseType: !1534, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!125, !1382}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1531, file: !434, line: 65, baseType: !1382, size: 32, offset: 32)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1353, file: !1522, line: 766, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1541)
!1541 = !{!1542}
!1542 = !DISubrange(count: 5)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1353, file: !1522, line: 766, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1353, file: !1522, line: 766, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1353, file: !1522, line: 770, type: !1523, isLocal: false, isDefinition: true, align: 16)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1353, file: !1522, line: 770, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1353, file: !1522, line: 770, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1353, file: !1522, line: 774, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1353, file: !1522, line: 774, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1353, file: !1522, line: 774, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1353, file: !1522, line: 778, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1353, file: !1522, line: 778, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1353, file: !1522, line: 778, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1353, file: !1522, line: 782, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1353, file: !1522, line: 782, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1353, file: !1522, line: 782, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1353, file: !1522, line: 786, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1353, file: !1522, line: 786, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1353, file: !1522, line: 786, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1353, file: !1522, line: 790, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1353, file: !1522, line: 790, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1353, file: !1522, line: 790, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1353, file: !1522, line: 794, type: !1540, isLocal: false, isDefinition: true, align: 16)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1353, file: !1522, line: 794, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1353, file: !1522, line: 794, type: !1530, isLocal: true, isDefinition: true, align: 32)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1353, file: !1522, line: 762, type: !1591, isLocal: true, isDefinition: true)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1592, line: 237, size: 128, elements: !1593)
!1592 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1593 = !{!1594, !1595, !1596}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1591, file: !1592, line: 239, baseType: !1451, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1591, file: !1592, line: 241, baseType: !1382, size: 32, offset: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1591, file: !1592, line: 243, baseType: !1597, size: 64, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1429, line: 40, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1429, line: 35, size: 64, elements: !1599)
!1599 = !{!1600, !1602}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1598, file: !1429, line: 36, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1598, file: !1429, line: 37, baseType: !1601, size: 32, offset: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1353, file: !1522, line: 762, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1353, file: !1522, line: 766, type: !1591, isLocal: true, isDefinition: true)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1353, file: !1522, line: 766, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1353, file: !1522, line: 770, type: !1591, isLocal: true, isDefinition: true)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1353, file: !1522, line: 770, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1353, file: !1522, line: 774, type: !1591, isLocal: true, isDefinition: true)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1353, file: !1522, line: 774, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1353, file: !1522, line: 778, type: !1591, isLocal: true, isDefinition: true)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1353, file: !1522, line: 778, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1353, file: !1522, line: 782, type: !1591, isLocal: true, isDefinition: true)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1353, file: !1522, line: 782, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1353, file: !1522, line: 786, type: !1591, isLocal: true, isDefinition: true)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1353, file: !1522, line: 786, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1353, file: !1522, line: 790, type: !1591, isLocal: true, isDefinition: true)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1353, file: !1522, line: 790, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1353, file: !1522, line: 794, type: !1591, isLocal: true, isDefinition: true)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1353, file: !1522, line: 794, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1353, file: !1522, line: 656, type: !1375, isLocal: true, isDefinition: true)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1353, file: !1522, line: 766, type: !1641, isLocal: true, isDefinition: true)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1592, line: 224, size: 160, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1642, file: !1592, line: 226, baseType: !1446, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1642, file: !1592, line: 228, baseType: !1029, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1642, file: !1592, line: 230, baseType: !125, size: 32, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1642, file: !1592, line: 231, baseType: !1648, size: 64, offset: 96)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1025, line: 343, size: 64, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1648, file: !1025, line: 344, baseType: !208, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1648, file: !1025, line: 345, baseType: !208, size: 32, offset: 32)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1353, file: !1522, line: 770, type: !1641, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1353, file: !1522, line: 774, type: !1641, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1353, file: !1522, line: 778, type: !1641, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1353, file: !1522, line: 782, type: !1641, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1353, file: !1522, line: 786, type: !1641, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1353, file: !1522, line: 790, type: !1641, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1353, file: !1522, line: 794, type: !1641, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1668, file: !1809, line: 44, type: !1885, isLocal: false, isDefinition: true)
!1668 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1669, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1670, retainedTypes: !1703, globals: !1806, splitDebugInlining: false, nameTableKind: None)
!1669 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!1670 = !{!46, !1671, !1678, !1685, !1692, !1698, !980}
!1671 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1111, line: 47, baseType: !32, size: 32, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677}
!1673 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1674 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1675 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1676 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1677 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1678 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1111, line: 75, baseType: !32, size: 32, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684}
!1680 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1681 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1682 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1683 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1684 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1685 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1111, line: 92, baseType: !32, size: 32, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691}
!1687 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1688 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1689 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1690 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1691 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1692 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1111, line: 84, baseType: !32, size: 32, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697}
!1694 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1695 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1696 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1697 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1698 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1111, line: 107, baseType: !32, size: 32, elements: !1699)
!1699 = !{!1700, !1701, !1702}
!1700 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1701 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1702 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1703 = !{!124, !125, !1704, !151, !150, !1753, !208, !1071, !1764, !227, !1803, !1805}
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1706)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1111, line: 336, size: 160, elements: !1707)
!1707 = !{!1708, !1727, !1731, !1735, !1748}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1706, file: !1111, line: 365, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!125, !1712, !1132}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719, !1725, !1726}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1714, file: !137, line: 380, baseType: !140, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1714, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1714, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1714, file: !137, line: 386, baseType: !1720, size: 32, offset: 96)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1722)
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1721, file: !137, line: 359, baseType: !150, size: 8)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1721, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1714, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1714, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1706, file: !1111, line: 366, baseType: !1728, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{null, !1712, !151}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1706, file: !1111, line: 374, baseType: !1732, size: 32, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!125, !1712}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1706, file: !1111, line: 377, baseType: !1736, size: 32, offset: 96)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!125, !1712, !1739}
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1111, line: 122, size: 64, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1741, file: !1111, line: 123, baseType: !208, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1741, file: !1111, line: 124, baseType: !150, size: 8, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1741, file: !1111, line: 125, baseType: !150, size: 8, offset: 40)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1741, file: !1111, line: 126, baseType: !150, size: 8, offset: 48)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1741, file: !1111, line: 127, baseType: !150, size: 8, offset: 56)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1706, file: !1111, line: 379, baseType: !1749, size: 32, offset: 128)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!125, !1712, !1752}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 670, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 661, size: 224, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761, !1762, !1763}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1755, file: !419, line: 663, baseType: !423, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1755, file: !419, line: 664, baseType: !423, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1755, file: !419, line: 665, baseType: !423, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1755, file: !419, line: 666, baseType: !423, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1755, file: !419, line: 667, baseType: !423, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1755, file: !419, line: 668, baseType: !423, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1755, file: !419, line: 669, baseType: !423, size: 32, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !981, line: 100, size: 224, elements: !1767)
!1767 = !{!1768, !1773, !1774, !1783, !1788, !1793, !1798}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1766, file: !981, line: 101, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !981, line: 76, baseType: !1770)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!125, !1712, !1071}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1766, file: !981, line: 102, baseType: !1769, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1766, file: !981, line: 103, baseType: !1775, size: 32, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !981, line: 83, baseType: !1776)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!125, !1712, !1071, !1779, !124}
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !981, line: 72, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{null, !1712, !1071, !124}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1766, file: !981, line: 104, baseType: !1784, size: 32, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !981, line: 79, baseType: !1785)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!125, !1712, !1071, !1029}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1766, file: !981, line: 105, baseType: !1789, size: 32, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !981, line: 88, baseType: !1790)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!980, !1712, !1071}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1766, file: !981, line: 106, baseType: !1794, size: 32, offset: 160)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !981, line: 92, baseType: !1795)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!125, !1712, !1071, !1097}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1766, file: !981, line: 107, baseType: !1799, size: 32, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !981, line: 96, baseType: !1800)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!125, !1712, !1071, !124}
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1804)
!1804 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!1806 = !{!1666, !1807, !1811, !1813, !1820, !1822, !1866, !1869, !1871, !1874, !1877, !1879}
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1810, isLocal: false, isDefinition: true, align: 16)
!1809 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1713, isLocal: false, isDefinition: true, align: 32)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1815, isLocal: true, isDefinition: true, align: 32)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1817)
!1817 = !{!1818, !1819}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1816, file: !434, line: 60, baseType: !1732, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1816, file: !434, line: 65, baseType: !1712, size: 32, offset: 32)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1721, isLocal: true, isDefinition: true, align: 8)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1668, file: !1809, line: 1914, type: !1824, isLocal: true, isDefinition: true)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1826, line: 22, size: 224, elements: !1827)
!1826 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1827 = !{!1828, !1829, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1825, file: !1826, line: 24, baseType: !1753, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1825, file: !1826, line: 26, baseType: !1830, size: 32, offset: 32)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1025, line: 343, size: 64, elements: !1833)
!1833 = !{!1834, !1835}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1832, file: !1025, line: 344, baseType: !208, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1832, file: !1025, line: 345, baseType: !208, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1825, file: !1826, line: 28, baseType: !272, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1825, file: !1826, line: 30, baseType: !153, size: 8, offset: 96)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1825, file: !1826, line: 32, baseType: !125, size: 32, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1825, file: !1826, line: 34, baseType: !153, size: 8, offset: 160)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1825, file: !1826, line: 36, baseType: !153, size: 8, offset: 168)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1825, file: !1826, line: 38, baseType: !153, size: 8, offset: 176)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1825, file: !1826, line: 40, baseType: !153, size: 8, offset: 184)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1825, file: !1826, line: 41, baseType: !1844, size: 32, offset: 192)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1847, line: 60, size: 64, elements: !1848)
!1847 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1848 = !{!1849, !1865}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1846, file: !1847, line: 69, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1847, line: 50, size: 64, elements: !1853)
!1853 = !{!1854, !1863, !1864}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1852, file: !1847, line: 52, baseType: !1855, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1858, line: 37, baseType: !1859)
!1858 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1858, line: 32, size: 64, elements: !1860)
!1860 = !{!1861, !1862}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1859, file: !1858, line: 34, baseType: !208, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1859, file: !1858, line: 36, baseType: !208, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1852, file: !1847, line: 54, baseType: !150, size: 8, offset: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1852, file: !1847, line: 56, baseType: !150, size: 8, offset: 40)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1846, file: !1847, line: 71, baseType: !150, size: 8, offset: 32)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1668, file: !1809, line: 1914, type: !1868, isLocal: true, isDefinition: true)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 64, elements: !662)
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression())
!1870 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1845, isLocal: true, isDefinition: true)
!1871 = !DIGlobalVariableExpression(var: !1872, expr: !DIExpression())
!1872 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1873, isLocal: true, isDefinition: true)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 64, elements: !662)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1668, file: !1809, line: 1914, type: !1876, isLocal: true, isDefinition: true)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 128, elements: !562)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1668, file: !1809, line: 1539, type: !1705, isLocal: true, isDefinition: true)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1668, file: !1809, line: 1914, type: !1881, isLocal: true, isDefinition: true)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1826, line: 74, size: 64, elements: !1882)
!1882 = !{!1883, !1884}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1881, file: !1826, line: 76, baseType: !208, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1881, file: !1826, line: 78, baseType: !1712, size: 32, offset: 32)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1887)
!1887 = !{!1888, !1889}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1886, file: !373, line: 17, baseType: !140, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1886, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1892, file: !1970, line: 65, type: !423, isLocal: true, isDefinition: true)
!1892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1893, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1894, retainedTypes: !1895, globals: !1967, splitDebugInlining: false, nameTableKind: None)
!1893 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!1894 = !{!749}
!1895 = !{!1896, !1898, !909, !150, !208, !1906, !1937}
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1897, line: 46, baseType: !598)
!1897 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1900, file: !680, line: 766, baseType: !423, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1900, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1900, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1900, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !1909)
!1909 = !{!1910, !1912, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1927, !1932, !1936}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1908, file: !680, line: 413, baseType: !1911, size: 256)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1908, file: !680, line: 414, baseType: !1913, size: 768, offset: 256)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1914)
!1914 = !{!1915}
!1915 = !DISubrange(count: 24)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1908, file: !680, line: 415, baseType: !1911, size: 256, offset: 1024)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1908, file: !680, line: 416, baseType: !1913, size: 768, offset: 1280)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1908, file: !680, line: 417, baseType: !1911, size: 256, offset: 2048)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1908, file: !680, line: 418, baseType: !1913, size: 768, offset: 2304)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1908, file: !680, line: 419, baseType: !1911, size: 256, offset: 3072)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1908, file: !680, line: 420, baseType: !1913, size: 768, offset: 3328)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1908, file: !680, line: 421, baseType: !1911, size: 256, offset: 4096)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1908, file: !680, line: 422, baseType: !1924, size: 1792, offset: 4352)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1925)
!1925 = !{!1926}
!1926 = !DISubrange(count: 56)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1908, file: !680, line: 423, baseType: !1928, size: 1920, offset: 6144)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 1920, elements: !1930)
!1929 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1930 = !{!1931}
!1931 = !DISubrange(count: 240)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1908, file: !680, line: 424, baseType: !1933, size: 20608, offset: 8064)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !1934)
!1934 = !{!1935}
!1935 = !DISubrange(count: 644)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1908, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944, !1945, !1946, !1947, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1958, !1959, !1960, !1962, !1964, !1966}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1939, file: !680, line: 447, baseType: !684, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1939, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1939, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1939, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1939, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1939, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1939, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 96, elements: !364)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1939, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1939, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1939, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1939, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1939, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1939, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1939, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1939, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !562)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1939, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1939, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1939, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 128, elements: !853)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1939, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 160, elements: !1541)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1939, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1541)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1939, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!1967 = !{!1968, !1994, !1997, !1999, !2001, !1890}
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1892, file: !1970, line: 285, type: !1971, isLocal: true, isDefinition: true, align: 32)
!1970 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1973)
!1973 = !{!1974, !1993}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1972, file: !434, line: 60, baseType: !1975, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!125, !1978}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1981)
!1981 = !{!1982, !1983, !1984, !1985, !1991, !1992}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1980, file: !137, line: 380, baseType: !140, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1980, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1980, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1980, file: !137, line: 386, baseType: !1986, size: 32, offset: 96)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1987, file: !137, line: 359, baseType: !150, size: 8)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1987, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1980, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1980, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1972, file: !434, line: 65, baseType: !1978, size: 32, offset: 32)
!1994 = !DIGlobalVariableExpression(var: !1995, expr: !DIExpression())
!1995 = distinct !DIGlobalVariable(name: "lock", scope: !1892, file: !1970, line: 34, type: !1996, isLocal: true, isDefinition: true)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "last_load", scope: !1892, file: !1970, line: 36, type: !208, isLocal: true, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1892, file: !1970, line: 48, type: !208, isLocal: true, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1892, file: !1970, line: 54, type: !208, isLocal: true, isDefinition: true)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2005, file: !2087, line: 22, type: !2089, isLocal: true, isDefinition: true)
!2005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2007, retainedTypes: !2008, globals: !2084, splitDebugInlining: false, nameTableKind: None)
!2006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2007 = !{!1356, !1362}
!2008 = !{!2009, !2073, !2078, !1409, !1362, !1356, !2083, !124}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1357, line: 523, size: 288, elements: !2012)
!2012 = !{!2013, !2032, !2036, !2040, !2044, !2045, !2046, !2050, !2069}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2011, file: !1357, line: 524, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!125, !2017, !1397, !1398}
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2030, !2031}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2019, file: !137, line: 380, baseType: !140, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2019, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2019, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2019, file: !137, line: 386, baseType: !2025, size: 32, offset: 96)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2026, file: !137, line: 359, baseType: !150, size: 8)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2026, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2019, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2019, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2011, file: !1357, line: 530, baseType: !2033, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!125, !2017, !1403}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2011, file: !1357, line: 532, baseType: !2037, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!125, !2017, !1409, !1404}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2011, file: !1357, line: 535, baseType: !2041, size: 32, offset: 96)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!125, !2017, !1409}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2011, file: !1357, line: 537, baseType: !2041, size: 32, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2011, file: !1357, line: 539, baseType: !2041, size: 32, offset: 160)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2011, file: !1357, line: 541, baseType: !2047, size: 32, offset: 192)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!125, !2017, !1397, !1356, !1362}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2011, file: !1357, line: 544, baseType: !2051, size: 32, offset: 224)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!125, !2017, !2054, !153}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1357, line: 478, size: 96, elements: !2056)
!2056 = !{!2057, !2063, !2068}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2055, file: !1357, line: 482, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1429, line: 33, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1429, line: 29, size: 32, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2059, file: !1429, line: 30, baseType: !2062, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2055, file: !1357, line: 485, baseType: !2064, size: 32, offset: 32)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1357, line: 464, baseType: !2065)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{null, !2017, !2054, !1409}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2055, file: !1357, line: 493, baseType: !1409, size: 32, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2011, file: !1357, line: 547, baseType: !2070, size: 32, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 32)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!208, !2017}
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1357, line: 428, size: 32, elements: !2076)
!2076 = !{!2077}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2075, file: !1357, line: 434, baseType: !1409, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1357, line: 441, size: 32, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2080, file: !1357, line: 447, baseType: !1409, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2084 = !{!2085, !2003}
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2086 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2005, file: !2087, line: 37, type: !2088, isLocal: true, isDefinition: true)
!2087 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2090, size: 352, elements: !2091)
!2090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!2091 = !{!2092}
!2092 = !DISubrange(count: 11)
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2095, file: !2135, line: 139, type: !2139, isLocal: false, isDefinition: true)
!2095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2096, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2097, globals: !2132, splitDebugInlining: false, nameTableKind: None)
!2096 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2097 = !{!2098}
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 532, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 500, size: 1088, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2100, file: !419, line: 502, baseType: !423, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2100, file: !419, line: 503, baseType: !423, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2100, file: !419, line: 504, baseType: !423, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2100, file: !419, line: 505, baseType: !423, size: 32, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2100, file: !419, line: 506, baseType: !423, size: 32, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2100, file: !419, line: 507, baseType: !423, size: 32, offset: 160)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2100, file: !419, line: 508, baseType: !423, size: 32, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2100, file: !419, line: 509, baseType: !208, size: 32, offset: 224)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2100, file: !419, line: 510, baseType: !423, size: 32, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2100, file: !419, line: 511, baseType: !423, size: 32, offset: 288)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2100, file: !419, line: 512, baseType: !1003, size: 64, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2100, file: !419, line: 513, baseType: !423, size: 32, offset: 384)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2100, file: !419, line: 514, baseType: !423, size: 32, offset: 416)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2100, file: !419, line: 515, baseType: !423, size: 32, offset: 448)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2100, file: !419, line: 516, baseType: !208, size: 32, offset: 480)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2100, file: !419, line: 517, baseType: !423, size: 32, offset: 512)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2100, file: !419, line: 518, baseType: !423, size: 32, offset: 544)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2100, file: !419, line: 519, baseType: !1003, size: 64, offset: 576)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2100, file: !419, line: 520, baseType: !423, size: 32, offset: 640)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2100, file: !419, line: 521, baseType: !423, size: 32, offset: 672)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2100, file: !419, line: 522, baseType: !423, size: 32, offset: 704)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2100, file: !419, line: 523, baseType: !208, size: 32, offset: 736)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2100, file: !419, line: 524, baseType: !423, size: 32, offset: 768)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2100, file: !419, line: 525, baseType: !423, size: 32, offset: 800)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2100, file: !419, line: 526, baseType: !1003, size: 64, offset: 832)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2100, file: !419, line: 527, baseType: !423, size: 32, offset: 896)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2100, file: !419, line: 528, baseType: !423, size: 32, offset: 928)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2100, file: !419, line: 529, baseType: !1003, size: 64, offset: 960)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2100, file: !419, line: 530, baseType: !423, size: 32, offset: 1024)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2100, file: !419, line: 531, baseType: !423, size: 32, offset: 1056)
!2132 = !{!2133, !2136, !2093}
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2095, file: !2135, line: 137, type: !208, isLocal: false, isDefinition: true)
!2135 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2095, file: !2135, line: 138, type: !2138, isLocal: false, isDefinition: true)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2142, file: !2145, line: 23, type: !2146, isLocal: false, isDefinition: true)
!2142 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2143, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2144, splitDebugInlining: false, nameTableKind: None)
!2143 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2144 = !{!2140}
!2145 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2149, file: !2153, line: 37, type: !2405, isLocal: false, isDefinition: true)
!2149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2150, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2151, retainedTypes: !2160, globals: !2233, splitDebugInlining: false, nameTableKind: None)
!2150 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2151 = !{!2152, !46, !749}
!2152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2153, line: 63, baseType: !32, size: 32, elements: !2154)
!2153 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2154 = !{!2155, !2156, !2157, !2158, !2159}
!2155 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2156 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2157 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2158 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2159 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2160 = !{!22, !272, !124, !125, !2161, !393, !208, !2191, !909, !150, !2216}
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2163)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2164, line: 51, size: 64, elements: !2165)
!2164 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2165 = !{!2166, !2186}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2163, file: !2164, line: 52, baseType: !2167, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2164, line: 38, baseType: !2168)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!125, !2171, !184, !227}
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2184, !2185}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2173, file: !137, line: 380, baseType: !140, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2173, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2173, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2173, file: !137, line: 386, baseType: !2179, size: 32, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2181)
!2181 = !{!2182, !2183}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2180, file: !137, line: 359, baseType: !150, size: 8)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2180, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2173, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2173, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2163, file: !2164, line: 53, baseType: !2187, size: 32, offset: 32)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2164, line: 47, baseType: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!125, !2171, !184, !227, !208}
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2193, file: !680, line: 447, baseType: !684, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2193, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2193, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2193, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2193, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2193, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2193, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2193, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2193, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2193, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2193, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2193, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2193, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2193, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2193, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2193, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2193, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2193, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2193, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2193, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2193, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2219)
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2218, file: !680, line: 413, baseType: !1911, size: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2218, file: !680, line: 414, baseType: !1913, size: 768, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2218, file: !680, line: 415, baseType: !1911, size: 256, offset: 1024)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2218, file: !680, line: 416, baseType: !1913, size: 768, offset: 1280)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2218, file: !680, line: 417, baseType: !1911, size: 256, offset: 2048)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2218, file: !680, line: 418, baseType: !1913, size: 768, offset: 2304)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2218, file: !680, line: 419, baseType: !1911, size: 256, offset: 3072)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2218, file: !680, line: 420, baseType: !1913, size: 768, offset: 3328)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2218, file: !680, line: 421, baseType: !1911, size: 256, offset: 4096)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2218, file: !680, line: 422, baseType: !1924, size: 1792, offset: 4352)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2218, file: !680, line: 423, baseType: !1928, size: 1920, offset: 6144)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2218, file: !680, line: 424, baseType: !1933, size: 20608, offset: 8064)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2218, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2233 = !{!2147, !2234, !2356, !2365, !2367, !2370, !2375, !2377, !2382}
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "_kernel", scope: !2149, file: !2153, line: 40, type: !2236, isLocal: false, isDefinition: true)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !567, line: 158, size: 288, elements: !2237)
!2237 = !{!2238, !2351}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2236, file: !567, line: 159, baseType: !2239, size: 192)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 192, elements: !662)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !567, line: 100, size: 192, elements: !2241)
!2241 = !{!2242, !2243, !2244, !2345, !2346, !2347, !2348}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2240, file: !567, line: 102, baseType: !208, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2240, file: !567, line: 105, baseType: !393, size: 32, offset: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2240, file: !567, line: 108, baseType: !2245, size: 32, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2247)
!2247 = !{!2248, !2306, !2318, !2319, !2320, !2321, !2327, !2340}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2246, file: !531, line: 247, baseType: !2249, size: 384)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2250)
!2250 = !{!2251, !2275, !2282, !2283, !2284, !2293, !2294, !2295}
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2249, file: !531, line: 60, baseType: !2252, size: 64)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2249, file: !531, line: 60, size: 64, elements: !2253)
!2253 = !{!2254, !2269}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2252, file: !531, line: 61, baseType: !2255, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2256)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2257)
!2257 = !{!2258, !2264}
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2256, file: !541, line: 38, baseType: !2259, size: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2256, file: !541, line: 38, size: 32, elements: !2260)
!2260 = !{!2261, !2263}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2259, file: !541, line: 39, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2259, file: !541, line: 40, baseType: !2262, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, scope: !2256, file: !541, line: 42, baseType: !2265, size: 32, offset: 32)
!2265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2256, file: !541, line: 42, size: 32, elements: !2266)
!2266 = !{!2267, !2268}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2265, file: !541, line: 43, baseType: !2262, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2265, file: !541, line: 44, baseType: !2262, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2252, file: !531, line: 62, baseType: !2270, size: 64)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2271)
!2271 = !{!2272}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2270, file: !557, line: 50, baseType: !2273, size: 64)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2274, size: 64, elements: !562)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2249, file: !531, line: 68, baseType: !2276, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2278)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2279)
!2279 = !{!2280}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2278, file: !567, line: 232, baseType: !2281, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2249, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2249, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2249, file: !531, line: 90, baseType: !2285, size: 16, offset: 112)
!2285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2249, file: !531, line: 90, size: 16, elements: !2286)
!2286 = !{!2287, !2292}
!2287 = !DIDerivedType(tag: DW_TAG_member, scope: !2285, file: !531, line: 91, baseType: !2288, size: 16)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2285, file: !531, line: 91, size: 16, elements: !2289)
!2289 = !{!2290, !2291}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2288, file: !531, line: 96, baseType: !581, size: 8)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2288, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2285, file: !531, line: 100, baseType: !227, size: 16)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2249, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2249, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2249, file: !531, line: 131, baseType: !2296, size: 192, offset: 192)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2297)
!2297 = !{!2298, !2299, !2305}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2296, file: !567, line: 245, baseType: !2255, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2296, file: !567, line: 246, baseType: !2300, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2301)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{null, !2304}
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2296, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2246, file: !531, line: 250, baseType: !2307, size: 288, offset: 384)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2308)
!2308 = !{!2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2307, file: !601, line: 26, baseType: !208, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2307, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2307, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2307, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2307, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2307, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2307, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2307, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2307, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2246, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2246, file: !531, line: 256, baseType: !2277, size: 64, offset: 704)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2246, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2246, file: !531, line: 300, baseType: !2322, size: 96, offset: 800)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2323)
!2323 = !{!2324, !2325, !2326}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2322, file: !531, line: 153, baseType: !22, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2322, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2322, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2246, file: !531, line: 325, baseType: !2328, size: 32, offset: 896)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2330)
!2330 = !{!2331, !2337, !2338}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2329, file: !624, line: 5074, baseType: !2332, size: 96)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2333)
!2333 = !{!2334, !2335, !2336}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2332, file: !628, line: 57, baseType: !631, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2332, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2332, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2329, file: !624, line: 5075, baseType: !2277, size: 64, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2329, file: !624, line: 5076, baseType: !2339, offset: 160)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2246, file: !531, line: 343, baseType: !2341, size: 64, offset: 928)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2341, file: !601, line: 63, baseType: !208, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2341, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2240, file: !567, line: 111, baseType: !2245, size: 32, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2240, file: !567, line: 124, baseType: !125, size: 32, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2240, file: !567, line: 127, baseType: !150, size: 8, offset: 160)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2240, file: !567, line: 153, baseType: !2349, offset: 168)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2350, line: 33, elements: !639)
!2350 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2236, file: !567, line: 170, baseType: !2352, size: 96, offset: 192)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !2353)
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2352, file: !567, line: 86, baseType: !2245, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2352, file: !567, line: 90, baseType: !2281, size: 64, offset: 32)
!2356 = !DIGlobalVariableExpression(var: !2357, expr: !DIExpression())
!2357 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2149, file: !2153, line: 43, type: !2358, isLocal: false, isDefinition: true, align: 512)
!2358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2359, size: 8704, elements: !2363)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2360, line: 47, size: 8, elements: !2361)
!2360 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2361 = !{!2362}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2359, file: !2360, line: 48, baseType: !142, size: 8)
!2363 = !{!2364}
!2364 = !DISubrange(count: 1088)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2149, file: !2153, line: 44, type: !2246, isLocal: false, isDefinition: true)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2149, file: !2153, line: 48, type: !2369, isLocal: false, isDefinition: true)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2246, size: 1024, elements: !662)
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2149, file: !2153, line: 86, type: !2372, isLocal: false, isDefinition: true, align: 512)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2359, size: 16896, elements: !2373)
!2373 = !{!663, !2374}
!2374 = !DISubrange(count: 2112)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2149, file: !2153, line: 217, type: !153, isLocal: false, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2149, file: !2153, line: 50, type: !2379, isLocal: true, isDefinition: true, align: 512)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2359, size: 3072, elements: !2380)
!2380 = !{!663, !2381}
!2381 = !DISubrange(count: 384)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "levels", scope: !2384, file: !2153, line: 232, type: !2404, isLocal: true, isDefinition: true)
!2384 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2153, file: !2153, line: 230, type: !2385, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !2387)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{null, !2152}
!2387 = !{!2388, !2389, !2399, !2403}
!2388 = !DILocalVariable(name: "level", arg: 1, scope: !2384, file: !2153, line: 230, type: !2152)
!2389 = !DILocalVariable(name: "entry", scope: !2384, file: !2153, line: 244, type: !2390)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2393)
!2393 = !{!2394, !2398}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2392, file: !434, line: 60, baseType: !2395, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!125, !2171}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2392, file: !434, line: 65, baseType: !2171, size: 32, offset: 32)
!2399 = !DILocalVariable(name: "dev", scope: !2400, file: !2153, line: 247, type: !2171)
!2400 = distinct !DILexicalBlock(scope: !2401, file: !2153, line: 246, column: 64)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !2153, line: 246, column: 2)
!2402 = distinct !DILexicalBlock(scope: !2384, file: !2153, line: 246, column: 2)
!2403 = !DILocalVariable(name: "rc", scope: !2400, file: !2153, line: 248, type: !125)
!2404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2390, size: 192, elements: !1524)
!2405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2406)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2406, file: !373, line: 17, baseType: !140, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2406, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "states_str", scope: !2412, file: !2413, line: 276, type: !2534, isLocal: true, isDefinition: true)
!2412 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2413, file: !2413, line: 271, type: !2414, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !2525)
!2413 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!140, !2416, !393, !272}
!2416 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2417)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2419)
!2419 = !{!2420, !2478, !2490, !2491, !2492, !2493, !2499, !2512}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2418, file: !531, line: 247, baseType: !2421, size: 384)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2422)
!2422 = !{!2423, !2447, !2454, !2455, !2456, !2465, !2466, !2467}
!2423 = !DIDerivedType(tag: DW_TAG_member, scope: !2421, file: !531, line: 60, baseType: !2424, size: 64)
!2424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2421, file: !531, line: 60, size: 64, elements: !2425)
!2425 = !{!2426, !2441}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2424, file: !531, line: 61, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2429)
!2429 = !{!2430, !2436}
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !541, line: 38, baseType: !2431, size: 32)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !541, line: 38, size: 32, elements: !2432)
!2432 = !{!2433, !2435}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2431, file: !541, line: 39, baseType: !2434, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2431, file: !541, line: 40, baseType: !2434, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !541, line: 42, baseType: !2437, size: 32, offset: 32)
!2437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !541, line: 42, size: 32, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2437, file: !541, line: 43, baseType: !2434, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2437, file: !541, line: 44, baseType: !2434, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2424, file: !531, line: 62, baseType: !2442, size: 64)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2443)
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2442, file: !557, line: 50, baseType: !2445, size: 64)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2446, size: 64, elements: !562)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2421, file: !531, line: 68, baseType: !2448, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2451)
!2451 = !{!2452}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2450, file: !567, line: 232, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2428)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2421, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2421, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2421, file: !531, line: 90, baseType: !2457, size: 16, offset: 112)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2421, file: !531, line: 90, size: 16, elements: !2458)
!2458 = !{!2459, !2464}
!2459 = !DIDerivedType(tag: DW_TAG_member, scope: !2457, file: !531, line: 91, baseType: !2460, size: 16)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2457, file: !531, line: 91, size: 16, elements: !2461)
!2461 = !{!2462, !2463}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2460, file: !531, line: 96, baseType: !581, size: 8)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2460, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2457, file: !531, line: 100, baseType: !227, size: 16)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2421, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2421, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2421, file: !531, line: 131, baseType: !2468, size: 192, offset: 192)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2469)
!2469 = !{!2470, !2471, !2477}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2468, file: !567, line: 245, baseType: !2427, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2468, file: !567, line: 246, baseType: !2472, size: 32, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{null, !2476}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2468, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2418, file: !531, line: 250, baseType: !2479, size: 288, offset: 384)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2480)
!2480 = !{!2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2479, file: !601, line: 26, baseType: !208, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2479, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2479, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2479, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2479, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2479, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2479, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2479, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2479, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2418, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2418, file: !531, line: 256, baseType: !2449, size: 64, offset: 704)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2418, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2418, file: !531, line: 300, baseType: !2494, size: 96, offset: 800)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2495)
!2495 = !{!2496, !2497, !2498}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2494, file: !531, line: 153, baseType: !22, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2494, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2494, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2418, file: !531, line: 325, baseType: !2500, size: 32, offset: 896)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2502)
!2502 = !{!2503, !2509, !2510}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2501, file: !624, line: 5074, baseType: !2504, size: 96)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2505)
!2505 = !{!2506, !2507, !2508}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2504, file: !628, line: 57, baseType: !631, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2504, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2504, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2501, file: !624, line: 5075, baseType: !2449, size: 64, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2501, file: !624, line: 5076, baseType: !2511, offset: 160)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2418, file: !531, line: 343, baseType: !2513, size: 64, offset: 928)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2513, file: !601, line: 63, baseType: !208, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2513, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2519, globals: !2521, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2519 = !{!124, !140, !1896, !150, !125, !2520, !24, !272, !393, !22, !208, !1803}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!2521 = !{!2410, !2522}
!2522 = !DIGlobalVariableExpression(var: !2523, expr: !DIExpression())
!2523 = distinct !DIGlobalVariable(name: "states_sz", scope: !2412, file: !2413, line: 279, type: !2524, isLocal: true, isDefinition: true)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2088, size: 256, elements: !337)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532}
!2526 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2412, file: !2413, line: 271, type: !2416)
!2527 = !DILocalVariable(name: "buf", arg: 2, scope: !2412, file: !2413, line: 271, type: !393)
!2528 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2412, file: !2413, line: 271, type: !272)
!2529 = !DILocalVariable(name: "off", scope: !2412, file: !2413, line: 273, type: !272)
!2530 = !DILocalVariable(name: "bit", scope: !2412, file: !2413, line: 274, type: !150)
!2531 = !DILocalVariable(name: "thread_state", scope: !2412, file: !2413, line: 275, type: !150)
!2532 = !DILocalVariable(name: "index", scope: !2533, file: !2413, line: 293, type: !150)
!2533 = distinct !DILexicalBlock(scope: !2412, file: !2413, line: 293, column: 2)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2537, file: !2645, line: 56, type: !2634, isLocal: false, isDefinition: true)
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2539, globals: !2642, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2539 = !{!2540, !393, !124, !2640, !184, !1896, !909, !125, !208, !1803, !2641}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2542)
!2542 = !{!2543, !2601, !2613, !2614, !2615, !2616, !2622, !2635}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2541, file: !531, line: 247, baseType: !2544, size: 384)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2545)
!2545 = !{!2546, !2570, !2577, !2578, !2579, !2588, !2589, !2590}
!2546 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !531, line: 60, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !531, line: 60, size: 64, elements: !2548)
!2548 = !{!2549, !2564}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2547, file: !531, line: 61, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2552)
!2552 = !{!2553, !2559}
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !541, line: 38, baseType: !2554, size: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !541, line: 38, size: 32, elements: !2555)
!2555 = !{!2556, !2558}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2554, file: !541, line: 39, baseType: !2557, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2554, file: !541, line: 40, baseType: !2557, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !541, line: 42, baseType: !2560, size: 32, offset: 32)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !541, line: 42, size: 32, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2560, file: !541, line: 43, baseType: !2557, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2560, file: !541, line: 44, baseType: !2557, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2547, file: !531, line: 62, baseType: !2565, size: 64)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2566)
!2566 = !{!2567}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2565, file: !557, line: 50, baseType: !2568, size: 64)
!2568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2569, size: 64, elements: !562)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2544, file: !531, line: 68, baseType: !2571, size: 32, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2574)
!2574 = !{!2575}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2573, file: !567, line: 232, baseType: !2576, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2551)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2544, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2544, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2579 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !531, line: 90, baseType: !2580, size: 16, offset: 112)
!2580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !531, line: 90, size: 16, elements: !2581)
!2581 = !{!2582, !2587}
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !2580, file: !531, line: 91, baseType: !2583, size: 16)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2580, file: !531, line: 91, size: 16, elements: !2584)
!2584 = !{!2585, !2586}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2583, file: !531, line: 96, baseType: !581, size: 8)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2583, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2580, file: !531, line: 100, baseType: !227, size: 16)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2544, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2544, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2544, file: !531, line: 131, baseType: !2591, size: 192, offset: 192)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2592)
!2592 = !{!2593, !2594, !2600}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2591, file: !567, line: 245, baseType: !2550, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2591, file: !567, line: 246, baseType: !2595, size: 32, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2596)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{null, !2599}
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2591, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2541, file: !531, line: 250, baseType: !2602, size: 288, offset: 384)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2602, file: !601, line: 26, baseType: !208, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2602, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2602, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2602, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2602, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2602, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2602, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2602, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2602, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2541, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2541, file: !531, line: 256, baseType: !2572, size: 64, offset: 704)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2541, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2541, file: !531, line: 300, baseType: !2617, size: 96, offset: 800)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2618)
!2618 = !{!2619, !2620, !2621}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2617, file: !531, line: 153, baseType: !22, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2617, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2617, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2541, file: !531, line: 325, baseType: !2623, size: 32, offset: 896)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2625)
!2625 = !{!2626, !2632, !2633}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2624, file: !624, line: 5074, baseType: !2627, size: 96)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2628)
!2628 = !{!2629, !2630, !2631}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2627, file: !628, line: 57, baseType: !631, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2624, file: !624, line: 5075, baseType: !2572, size: 64, offset: 96)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2624, file: !624, line: 5076, baseType: !2634, offset: 160)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2541, file: !531, line: 343, baseType: !2636, size: 64, offset: 928)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2636, file: !601, line: 63, baseType: !208, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2636, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2642 = !{!2535, !2643, !2646, !2648}
!2643 = !DIGlobalVariableExpression(var: !2644, expr: !DIExpression())
!2644 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2537, file: !2645, line: 404, type: !125, isLocal: true, isDefinition: true)
!2645 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2646 = !DIGlobalVariableExpression(var: !2647, expr: !DIExpression())
!2647 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2537, file: !2645, line: 405, type: !125, isLocal: true, isDefinition: true)
!2648 = !DIGlobalVariableExpression(var: !2649, expr: !DIExpression())
!2649 = distinct !DIGlobalVariable(name: "pending_current", scope: !2537, file: !2645, line: 425, type: !2540, isLocal: true, isDefinition: true)
!2650 = !DIGlobalVariableExpression(var: !2651, expr: !DIExpression())
!2651 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2652, file: !2682, line: 15, type: !1803, isLocal: true, isDefinition: true)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2654, globals: !2679, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2654 = !{!1896, !124, !909, !208, !1803, !125, !2655, !393, !598}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2657)
!2657 = !{!2658, !2673, !2678}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2656, file: !567, line: 245, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2660)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2661)
!2661 = !{!2662, !2668}
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2660, file: !541, line: 38, baseType: !2663, size: 32)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2660, file: !541, line: 38, size: 32, elements: !2664)
!2664 = !{!2665, !2667}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2663, file: !541, line: 39, baseType: !2666, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2663, file: !541, line: 40, baseType: !2666, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2660, file: !541, line: 42, baseType: !2669, size: 32, offset: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2660, file: !541, line: 42, size: 32, elements: !2670)
!2670 = !{!2671, !2672}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2669, file: !541, line: 43, baseType: !2666, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2669, file: !541, line: 44, baseType: !2666, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2656, file: !567, line: 246, baseType: !2674, size: 32, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2675)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{null, !2655}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2656, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2679 = !{!2650, !2680, !2684, !2686}
!2680 = !DIGlobalVariableExpression(var: !2681, expr: !DIExpression())
!2681 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2652, file: !2682, line: 19, type: !2683, isLocal: true, isDefinition: true)
!2682 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2684 = !DIGlobalVariableExpression(var: !2685, expr: !DIExpression())
!2685 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2652, file: !2682, line: 25, type: !125, isLocal: true, isDefinition: true)
!2686 = !DIGlobalVariableExpression(var: !2687, expr: !DIExpression())
!2687 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2652, file: !2682, line: 17, type: !2688, isLocal: true, isDefinition: true)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2660)
!2689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2695 = !{!2696, !2704}
!2696 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2697, line: 69, baseType: !32, size: 32, elements: !2698)
!2697 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2698 = !{!2699, !2700, !2701, !2702, !2703}
!2699 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2700 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2701 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2702 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2703 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2697, line: 56, baseType: !32, size: 32, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2706 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2707 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2708 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2709 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2710 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2711 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2712 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2713 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2714 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2715 = !{!125, !2696, !2704, !2716, !582, !160, !2718, !2719, !151, !228, !140, !272, !124, !22, !32, !387, !2721, !2722, !389, !388, !391, !390, !2717, !2723, !2724, !2725, !2726}
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2697, line: 31, baseType: !2717)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2697, line: 32, baseType: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1804)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2728, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2728 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2731 = !{!140, !151, !125, !32}
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2736, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2736 = !{!184, !490, !2737}
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2738)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2740)
!2740 = !{!2741}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2739, file: !492, line: 65, baseType: !497, size: 1408)
!2742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2744, splitDebugInlining: false, nameTableKind: None)
!2743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2744 = !{!184, !2745, !150}
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2746)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 32)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2748)
!2748 = !{!2749}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2747, file: !492, line: 65, baseType: !497, size: 1408)
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2752, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2752 = !{!2753, !2759, !184, !150, !227}
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2754, line: 95, baseType: !2755)
!2754 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2754, line: 91, size: 96, elements: !2757)
!2757 = !{!2758, !2764, !2765}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2756, file: !2754, line: 92, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2760)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 32)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2762)
!2762 = !{!2763}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2761, file: !492, line: 65, baseType: !497, size: 1408)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2756, file: !2754, line: 93, baseType: !184, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2756, file: !2754, line: 94, baseType: !32, size: 32, offset: 64)
!2766 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2767, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2768, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2767 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2768 = !{!2769, !46}
!2769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2770, line: 27, baseType: !32, size: 32, elements: !2771)
!2770 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2771 = !{!2772, !2773, !2774, !2775, !2776}
!2772 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2773 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2774 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2775 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2776 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2779, retainedTypes: !2780, splitDebugInlining: false, nameTableKind: None)
!2778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2779 = !{!749, !2769, !46}
!2780 = !{!935, !2781, !124, !125, !909, !208, !150, !2798}
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2783)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2784)
!2784 = !{!2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2783, file: !680, line: 413, baseType: !1911, size: 256)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2783, file: !680, line: 414, baseType: !1913, size: 768, offset: 256)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2783, file: !680, line: 415, baseType: !1911, size: 256, offset: 1024)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2783, file: !680, line: 416, baseType: !1913, size: 768, offset: 1280)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2783, file: !680, line: 417, baseType: !1911, size: 256, offset: 2048)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2783, file: !680, line: 418, baseType: !1913, size: 768, offset: 2304)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2783, file: !680, line: 419, baseType: !1911, size: 256, offset: 3072)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2783, file: !680, line: 420, baseType: !1913, size: 768, offset: 3328)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2783, file: !680, line: 421, baseType: !1911, size: 256, offset: 4096)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2783, file: !680, line: 422, baseType: !1924, size: 1792, offset: 4352)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2783, file: !680, line: 423, baseType: !1928, size: 1920, offset: 6144)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2783, file: !680, line: 424, baseType: !1933, size: 20608, offset: 8064)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2783, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2801)
!2801 = !{!2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2800, file: !680, line: 447, baseType: !684, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2800, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2800, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2800, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2800, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2800, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2800, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2800, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2800, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2800, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2800, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2800, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2800, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2800, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2800, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2800, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2800, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2800, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2800, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2800, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2800, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2827, splitDebugInlining: false, nameTableKind: None)
!2826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2827 = !{!124, !125, !22, !2828}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2830, file: !680, line: 447, baseType: !684, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2830, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2830, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2830, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2830, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2830, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2830, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2830, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2830, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2830, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2830, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2830, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2830, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2830, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2830, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2830, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2830, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2830, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2830, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2830, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2830, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2855 = !{!2856, !124, !125}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2858)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2858, file: !680, line: 447, baseType: !684, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2858, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2858, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2858, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2858, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2858, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2858, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2858, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2858, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2858, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2858, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2858, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2858, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2858, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2858, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2858, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2858, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2858, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2858, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2858, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2858, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2882, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2883, splitDebugInlining: false, nameTableKind: None)
!2882 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2883 = !{!2884, !208, !124, !125}
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2886, line: 98, size: 256, elements: !2887)
!2886 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2887 = !{!2888, !2893, !2898, !2903, !2908, !2913, !2918, !2923}
!2888 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 99, baseType: !2889, size: 32)
!2889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 99, size: 32, elements: !2890)
!2890 = !{!2891, !2892}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2889, file: !2886, line: 99, baseType: !208, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2889, file: !2886, line: 99, baseType: !208, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 100, baseType: !2894, size: 32, offset: 32)
!2894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 100, size: 32, elements: !2895)
!2895 = !{!2896, !2897}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2894, file: !2886, line: 100, baseType: !208, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2894, file: !2886, line: 100, baseType: !208, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 101, baseType: !2899, size: 32, offset: 64)
!2899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 101, size: 32, elements: !2900)
!2900 = !{!2901, !2902}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2899, file: !2886, line: 101, baseType: !208, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2899, file: !2886, line: 101, baseType: !208, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 102, baseType: !2904, size: 32, offset: 96)
!2904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 102, size: 32, elements: !2905)
!2905 = !{!2906, !2907}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2904, file: !2886, line: 102, baseType: !208, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2904, file: !2886, line: 102, baseType: !208, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 103, baseType: !2909, size: 32, offset: 128)
!2909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 103, size: 32, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2909, file: !2886, line: 103, baseType: !208, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2909, file: !2886, line: 103, baseType: !208, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 104, baseType: !2914, size: 32, offset: 160)
!2914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 104, size: 32, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2914, file: !2886, line: 104, baseType: !208, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2914, file: !2886, line: 104, baseType: !208, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !2886, line: 105, baseType: !2919, size: 32, offset: 192)
!2919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2885, file: !2886, line: 105, size: 32, elements: !2920)
!2920 = !{!2921, !2922}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2919, file: !2886, line: 105, baseType: !208, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2919, file: !2886, line: 105, baseType: !208, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2885, file: !2886, line: 106, baseType: !208, size: 32, offset: 224)
!2924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2768, retainedTypes: !2926, splitDebugInlining: false, nameTableKind: None)
!2925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2926 = !{!2927, !124, !125, !2952, !2995, !208}
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2929)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2929, file: !680, line: 447, baseType: !684, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2929, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2929, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2929, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2929, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2929, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2929, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2929, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2929, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2929, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2929, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2929, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2929, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2929, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2929, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2929, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2929, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2929, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2929, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2929, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2929, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2886, line: 141, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2886, line: 97, size: 256, elements: !2955)
!2955 = !{!2956}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2954, file: !2886, line: 107, baseType: !2957, size: 256)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2886, line: 98, size: 256, elements: !2958)
!2958 = !{!2959, !2964, !2969, !2974, !2979, !2984, !2989, !2994}
!2959 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 99, baseType: !2960, size: 32)
!2960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 99, size: 32, elements: !2961)
!2961 = !{!2962, !2963}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2960, file: !2886, line: 99, baseType: !208, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2960, file: !2886, line: 99, baseType: !208, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 100, baseType: !2965, size: 32, offset: 32)
!2965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 100, size: 32, elements: !2966)
!2966 = !{!2967, !2968}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2965, file: !2886, line: 100, baseType: !208, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2965, file: !2886, line: 100, baseType: !208, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 101, baseType: !2970, size: 32, offset: 64)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 101, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2970, file: !2886, line: 101, baseType: !208, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2970, file: !2886, line: 101, baseType: !208, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 102, baseType: !2975, size: 32, offset: 96)
!2975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 102, size: 32, elements: !2976)
!2976 = !{!2977, !2978}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2975, file: !2886, line: 102, baseType: !208, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2975, file: !2886, line: 102, baseType: !208, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 103, baseType: !2980, size: 32, offset: 128)
!2980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 103, size: 32, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2980, file: !2886, line: 103, baseType: !208, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2980, file: !2886, line: 103, baseType: !208, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 104, baseType: !2985, size: 32, offset: 160)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 104, size: 32, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2985, file: !2886, line: 104, baseType: !208, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2985, file: !2886, line: 104, baseType: !208, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, scope: !2957, file: !2886, line: 105, baseType: !2990, size: 32, offset: 192)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !2886, line: 105, size: 32, elements: !2991)
!2991 = !{!2992, !2993}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2990, file: !2886, line: 105, baseType: !208, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2990, file: !2886, line: 105, baseType: !208, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2957, file: !2886, line: 106, baseType: !208, size: 32, offset: 224)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!2996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2997, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1894, retainedTypes: !2998, splitDebugInlining: false, nameTableKind: None)
!2997 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!2998 = !{!935, !909, !150, !208, !2999, !3016}
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !3001)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !3002)
!3002 = !{!3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3001, file: !680, line: 413, baseType: !1911, size: 256)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3001, file: !680, line: 414, baseType: !1913, size: 768, offset: 256)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3001, file: !680, line: 415, baseType: !1911, size: 256, offset: 1024)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3001, file: !680, line: 416, baseType: !1913, size: 768, offset: 1280)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3001, file: !680, line: 417, baseType: !1911, size: 256, offset: 2048)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3001, file: !680, line: 418, baseType: !1913, size: 768, offset: 2304)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3001, file: !680, line: 419, baseType: !1911, size: 256, offset: 3072)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3001, file: !680, line: 420, baseType: !1913, size: 768, offset: 3328)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3001, file: !680, line: 421, baseType: !1911, size: 256, offset: 4096)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3001, file: !680, line: 422, baseType: !1924, size: 1792, offset: 4352)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3001, file: !680, line: 423, baseType: !1928, size: 1920, offset: 6144)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3001, file: !680, line: 424, baseType: !1933, size: 20608, offset: 8064)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3001, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3018)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3018, file: !680, line: 447, baseType: !684, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3018, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3018, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3018, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3018, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3018, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3018, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3018, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3018, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3018, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3018, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3018, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3018, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3018, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3018, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3018, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3018, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3018, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3018, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3018, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3018, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3043, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3043 = !{!3044, !124, !125}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3047)
!3047 = !{!3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3046, file: !680, line: 447, baseType: !684, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3046, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3046, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3046, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3046, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3046, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3046, file: !680, line: 453, baseType: !1948, size: 96, offset: 192)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3046, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3046, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3046, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3046, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3046, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3046, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3046, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3046, file: !680, line: 461, baseType: !1957, size: 64, offset: 512)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3046, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3046, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3046, file: !680, line: 464, baseType: !1961, size: 128, offset: 640)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3046, file: !680, line: 465, baseType: !1963, size: 160, offset: 768)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3046, file: !680, line: 466, baseType: !1965, size: 160, offset: 928)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3046, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3071, splitDebugInlining: false, nameTableKind: None)
!3070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3071 = !{!142, !393, !272, !1132, !3072, !151, !124}
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3076, splitDebugInlining: false, nameTableKind: None)
!3075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 532, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 500, size: 1088, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3079, file: !419, line: 502, baseType: !423, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3079, file: !419, line: 503, baseType: !423, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3079, file: !419, line: 504, baseType: !423, size: 32, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3079, file: !419, line: 505, baseType: !423, size: 32, offset: 96)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3079, file: !419, line: 506, baseType: !423, size: 32, offset: 128)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3079, file: !419, line: 507, baseType: !423, size: 32, offset: 160)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3079, file: !419, line: 508, baseType: !423, size: 32, offset: 192)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3079, file: !419, line: 509, baseType: !208, size: 32, offset: 224)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3079, file: !419, line: 510, baseType: !423, size: 32, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3079, file: !419, line: 511, baseType: !423, size: 32, offset: 288)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3079, file: !419, line: 512, baseType: !1003, size: 64, offset: 320)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3079, file: !419, line: 513, baseType: !423, size: 32, offset: 384)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3079, file: !419, line: 514, baseType: !423, size: 32, offset: 416)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3079, file: !419, line: 515, baseType: !423, size: 32, offset: 448)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3079, file: !419, line: 516, baseType: !208, size: 32, offset: 480)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3079, file: !419, line: 517, baseType: !423, size: 32, offset: 512)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3079, file: !419, line: 518, baseType: !423, size: 32, offset: 544)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3079, file: !419, line: 519, baseType: !1003, size: 64, offset: 576)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3079, file: !419, line: 520, baseType: !423, size: 32, offset: 640)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3079, file: !419, line: 521, baseType: !423, size: 32, offset: 672)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3079, file: !419, line: 522, baseType: !423, size: 32, offset: 704)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3079, file: !419, line: 523, baseType: !208, size: 32, offset: 736)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3079, file: !419, line: 524, baseType: !423, size: 32, offset: 768)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3079, file: !419, line: 525, baseType: !423, size: 32, offset: 800)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3079, file: !419, line: 526, baseType: !1003, size: 64, offset: 832)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3079, file: !419, line: 527, baseType: !423, size: 32, offset: 896)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3079, file: !419, line: 528, baseType: !423, size: 32, offset: 928)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3079, file: !419, line: 529, baseType: !1003, size: 64, offset: 960)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3079, file: !419, line: 530, baseType: !423, size: 32, offset: 1024)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3079, file: !419, line: 531, baseType: !423, size: 32, offset: 1056)
!3111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3115, retainedTypes: !3131, splitDebugInlining: false, nameTableKind: None)
!3114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3115 = !{!3116, !3123, !3127}
!3116 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3117, line: 38, baseType: !32, size: 32, elements: !3118)
!3117 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3118 = !{!3119, !3120, !3121, !3122}
!3119 = !DIEnumerator(name: "HAL_OK", value: 0)
!3120 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3121 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3122 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !976, line: 184, baseType: !32, size: 32, elements: !3124)
!3124 = !{!3125, !3126}
!3125 = !DIEnumerator(name: "RESET", value: 0)
!3126 = !DIEnumerator(name: "SET", value: 1)
!3127 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !976, line: 190, baseType: !32, size: 32, elements: !3128)
!3128 = !{!3129, !3130}
!3129 = !DIEnumerator(name: "DISABLE", value: 0)
!3130 = !DIEnumerator(name: "ENABLE", value: 1)
!3131 = !{!124, !3132, !150, !208, !1805, !3166, !3172, !3183, !227, !3184, !1803}
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 532, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 500, size: 1088, elements: !3135)
!3135 = !{!3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3134, file: !419, line: 502, baseType: !423, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3134, file: !419, line: 503, baseType: !423, size: 32, offset: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3134, file: !419, line: 504, baseType: !423, size: 32, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3134, file: !419, line: 505, baseType: !423, size: 32, offset: 96)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3134, file: !419, line: 506, baseType: !423, size: 32, offset: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3134, file: !419, line: 507, baseType: !423, size: 32, offset: 160)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3134, file: !419, line: 508, baseType: !423, size: 32, offset: 192)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3134, file: !419, line: 509, baseType: !208, size: 32, offset: 224)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3134, file: !419, line: 510, baseType: !423, size: 32, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3134, file: !419, line: 511, baseType: !423, size: 32, offset: 288)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3134, file: !419, line: 512, baseType: !1003, size: 64, offset: 320)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3134, file: !419, line: 513, baseType: !423, size: 32, offset: 384)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3134, file: !419, line: 514, baseType: !423, size: 32, offset: 416)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3134, file: !419, line: 515, baseType: !423, size: 32, offset: 448)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3134, file: !419, line: 516, baseType: !208, size: 32, offset: 480)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3134, file: !419, line: 517, baseType: !423, size: 32, offset: 512)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3134, file: !419, line: 518, baseType: !423, size: 32, offset: 544)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3134, file: !419, line: 519, baseType: !1003, size: 64, offset: 576)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3134, file: !419, line: 520, baseType: !423, size: 32, offset: 640)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3134, file: !419, line: 521, baseType: !423, size: 32, offset: 672)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3134, file: !419, line: 522, baseType: !423, size: 32, offset: 704)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3134, file: !419, line: 523, baseType: !208, size: 32, offset: 736)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3134, file: !419, line: 524, baseType: !423, size: 32, offset: 768)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3134, file: !419, line: 525, baseType: !423, size: 32, offset: 800)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3134, file: !419, line: 526, baseType: !1003, size: 64, offset: 832)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3134, file: !419, line: 527, baseType: !423, size: 32, offset: 896)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3134, file: !419, line: 528, baseType: !423, size: 32, offset: 928)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3134, file: !419, line: 529, baseType: !1003, size: 64, offset: 960)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3134, file: !419, line: 530, baseType: !423, size: 32, offset: 1024)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3134, file: !419, line: 531, baseType: !423, size: 32, offset: 1056)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 494, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 490, size: 64, elements: !3169)
!3169 = !{!3170, !3171}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3168, file: !419, line: 492, baseType: !423, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3168, file: !419, line: 493, baseType: !423, size: 32, offset: 32)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 369, baseType: !3174)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 360, size: 224, elements: !3175)
!3175 = !{!3176, !3177, !3178, !3179, !3180, !3181, !3182}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3174, file: !419, line: 362, baseType: !423, size: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3174, file: !419, line: 363, baseType: !423, size: 32, offset: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3174, file: !419, line: 364, baseType: !423, size: 32, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3174, file: !419, line: 365, baseType: !423, size: 32, offset: 96)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3174, file: !419, line: 366, baseType: !423, size: 32, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3174, file: !419, line: 367, baseType: !423, size: 32, offset: 160)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3174, file: !419, line: 368, baseType: !423, size: 32, offset: 192)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 441, baseType: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 430, size: 320, elements: !3187)
!3187 = !{!3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3186, file: !419, line: 432, baseType: !423, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3186, file: !419, line: 433, baseType: !423, size: 32, offset: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3186, file: !419, line: 434, baseType: !423, size: 32, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3186, file: !419, line: 435, baseType: !423, size: 32, offset: 96)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3186, file: !419, line: 436, baseType: !423, size: 32, offset: 128)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3186, file: !419, line: 437, baseType: !423, size: 32, offset: 160)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3186, file: !419, line: 438, baseType: !423, size: 32, offset: 192)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3186, file: !419, line: 439, baseType: !423, size: 32, offset: 224)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3186, file: !419, line: 440, baseType: !1468, size: 64, offset: 256)
!3197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3199, retainedTypes: !3200, splitDebugInlining: false, nameTableKind: None)
!3198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3199 = !{!975}
!3200 = !{!3201, !208, !3209, !3215, !3226}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !3203)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3208}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3203, file: !680, line: 766, baseType: !423, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3203, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3203, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3203, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 494, baseType: !3211)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 490, size: 64, elements: !3212)
!3212 = !{!3213, !3214}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3211, file: !419, line: 492, baseType: !423, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3211, file: !419, line: 493, baseType: !423, size: 32, offset: 32)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 369, baseType: !3217)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 360, size: 224, elements: !3218)
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224, !3225}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3217, file: !419, line: 362, baseType: !423, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3217, file: !419, line: 363, baseType: !423, size: 32, offset: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3217, file: !419, line: 364, baseType: !423, size: 32, offset: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3217, file: !419, line: 365, baseType: !423, size: 32, offset: 96)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3217, file: !419, line: 366, baseType: !423, size: 32, offset: 128)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3217, file: !419, line: 367, baseType: !423, size: 32, offset: 160)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3217, file: !419, line: 368, baseType: !423, size: 32, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 532, baseType: !3228)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 500, size: 1088, elements: !3229)
!3229 = !{!3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3228, file: !419, line: 502, baseType: !423, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3228, file: !419, line: 503, baseType: !423, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3228, file: !419, line: 504, baseType: !423, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3228, file: !419, line: 505, baseType: !423, size: 32, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3228, file: !419, line: 506, baseType: !423, size: 32, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3228, file: !419, line: 507, baseType: !423, size: 32, offset: 160)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3228, file: !419, line: 508, baseType: !423, size: 32, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3228, file: !419, line: 509, baseType: !208, size: 32, offset: 224)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3228, file: !419, line: 510, baseType: !423, size: 32, offset: 256)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3228, file: !419, line: 511, baseType: !423, size: 32, offset: 288)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3228, file: !419, line: 512, baseType: !1003, size: 64, offset: 320)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3228, file: !419, line: 513, baseType: !423, size: 32, offset: 384)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3228, file: !419, line: 514, baseType: !423, size: 32, offset: 416)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3228, file: !419, line: 515, baseType: !423, size: 32, offset: 448)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3228, file: !419, line: 516, baseType: !208, size: 32, offset: 480)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3228, file: !419, line: 517, baseType: !423, size: 32, offset: 512)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3228, file: !419, line: 518, baseType: !423, size: 32, offset: 544)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3228, file: !419, line: 519, baseType: !1003, size: 64, offset: 576)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3228, file: !419, line: 520, baseType: !423, size: 32, offset: 640)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3228, file: !419, line: 521, baseType: !423, size: 32, offset: 672)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3228, file: !419, line: 522, baseType: !423, size: 32, offset: 704)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3228, file: !419, line: 523, baseType: !208, size: 32, offset: 736)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3228, file: !419, line: 524, baseType: !423, size: 32, offset: 768)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3228, file: !419, line: 525, baseType: !423, size: 32, offset: 800)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3228, file: !419, line: 526, baseType: !1003, size: 64, offset: 832)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3228, file: !419, line: 527, baseType: !423, size: 32, offset: 896)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3228, file: !419, line: 528, baseType: !423, size: 32, offset: 928)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3228, file: !419, line: 529, baseType: !1003, size: 64, offset: 960)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3228, file: !419, line: 530, baseType: !423, size: 32, offset: 1024)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3228, file: !419, line: 531, baseType: !423, size: 32, offset: 1056)
!3260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3262, splitDebugInlining: false, nameTableKind: None)
!3261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3262 = !{!124, !272}
!3263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3265, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3264 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3265 = !{!3266, !3273, !46}
!3266 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3267, line: 14, baseType: !32, size: 32, elements: !3268)
!3267 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3268 = !{!3269, !3270, !3271, !3272}
!3269 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3270 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3271 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3272 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3273 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3267, line: 42, baseType: !32, size: 32, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280}
!3275 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3276 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3277 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3278 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3279 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3280 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3284, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3285, splitDebugInlining: false, nameTableKind: None)
!3284 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3285 = !{!22, !124, !125}
!3286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!3288 = !{!"Ubuntu clang version 14.0.6"}
!3289 = !{i32 7, !"Dwarf Version", i32 4}
!3290 = !{i32 2, !"Debug Info Version", i32 3}
!3291 = !{i32 1, !"wchar_size", i32 4}
!3292 = !{i32 1, !"min_enum_size", i32 4}
!3293 = !{i32 1, !"branch-target-enforcement", i32 0}
!3294 = !{i32 1, !"sign-return-address", i32 0}
!3295 = !{i32 1, !"sign-return-address-all", i32 0}
!3296 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3297 = !{i32 7, !"frame-pointer", i32 2}
!3298 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3299, file: !3299, line: 26, type: !3300, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !639)
!3299 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null}
!3302 = !DILocation(line: 28, column: 1, scope: !3298)
!3303 = !{i64 2155119233, i64 2155119253, i64 2155119316}
!3304 = !DILocation(line: 29, column: 1, scope: !3298)
!3305 = !{i64 2155119648, i64 2155119668, i64 2155119731}
!3306 = !DILocation(line: 30, column: 1, scope: !3298)
!3307 = !{i64 2155120067, i64 2155120087, i64 2155120150}
!3308 = !DILocation(line: 31, column: 1, scope: !3298)
!3309 = !{i64 2155120486, i64 2155120506, i64 2155120569}
!3310 = !DILocation(line: 33, column: 1, scope: !3298)
!3311 = !{i64 2155120778, i64 2155120798, i64 2155120861}
!3312 = !DILocation(line: 35, column: 1, scope: !3298)
!3313 = !{i64 2155121103, i64 2155121123, i64 2155121186}
!3314 = !DILocation(line: 50, column: 1, scope: !3298)
!3315 = !{i64 2155121530, i64 2155121550, i64 2155121613}
!3316 = !DILocation(line: 54, column: 1, scope: !3298)
!3317 = !{i64 2155121969, i64 2155121989, i64 2155122052}
!3318 = !DILocation(line: 61, column: 1, scope: !3298)
!3319 = !{i64 2155122286, i64 2155122306, i64 2155122369}
!3320 = !DILocation(line: 63, column: 1, scope: !3298)
!3321 = !{i64 2155122666, i64 2155122686, i64 2155122749}
!3322 = !DILocation(line: 64, column: 1, scope: !3298)
!3323 = !{i64 2155123188, i64 2155123208, i64 2155123271}
!3324 = !DILocation(line: 65, column: 1, scope: !3298)
!3325 = !{i64 2155123686, i64 2155123706, i64 2155123769}
!3326 = !DILocation(line: 66, column: 1, scope: !3298)
!3327 = !{i64 2155124168, i64 2155124188, i64 2155124251}
!3328 = !DILocation(line: 67, column: 1, scope: !3298)
!3329 = !{i64 2155124675, i64 2155124695, i64 2155124758}
!3330 = !DILocation(line: 68, column: 1, scope: !3298)
!3331 = !{i64 2155125163, i64 2155125183, i64 2155125246}
!3332 = !DILocation(line: 70, column: 1, scope: !3298)
!3333 = !{i64 2155125631, i64 2155125651, i64 2155125714}
!3334 = !DILocation(line: 71, column: 1, scope: !3298)
!3335 = !{i64 2155126073, i64 2155126093, i64 2155126156}
!3336 = !DILocation(line: 72, column: 1, scope: !3298)
!3337 = !{i64 2155126531, i64 2155126551, i64 2155126614}
!3338 = !DILocation(line: 79, column: 1, scope: !3298)
!3339 = !{i64 2155126985, i64 2155127005, i64 2155127068}
!3340 = !DILocation(line: 80, column: 1, scope: !3298)
!3341 = !{i64 2155127496, i64 2155127516, i64 2155127579}
!3342 = !DILocation(line: 82, column: 1, scope: !3298)
!3343 = !{i64 2155132048, i64 2155132068, i64 2155132131}
!3344 = !DILocation(line: 97, column: 1, scope: !3298)
!3345 = !{i64 2155132385, i64 2155132405, i64 2155132468}
!3346 = !DILocation(line: 99, column: 1, scope: !3298)
!3347 = !{i64 2155132603, i64 2155132623, i64 2155132686}
!3348 = !DILocation(line: 102, column: 1, scope: !3298)
!3349 = !{i64 2155132860, i64 2155132880, i64 2155132943}
!3350 = !DILocation(line: 105, column: 1, scope: !3298)
!3351 = !{i64 2155133100, i64 2155133120, i64 2155133183}
!3352 = !DILocation(line: 115, column: 1, scope: !3298)
!3353 = !{i64 2155133439, i64 2155133459, i64 2155133522}
!3354 = !DILocation(line: 118, column: 1, scope: !3298)
!3355 = !{i64 2155133783, i64 2155133803, i64 2155133866}
!3356 = !DILocation(line: 32, column: 1, scope: !3357)
!3357 = !DILexicalBlockFile(scope: !3298, file: !3358, discriminator: 0)
!3358 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3359 = !{i64 2155134139, i64 2155134159, i64 2155134222}
!3360 = !DILocation(line: 33, column: 1, scope: !3357)
!3361 = !{i64 2155134651, i64 2155134671, i64 2155134734}
!3362 = !DILocation(line: 53, column: 1, scope: !3357)
!3363 = !{i64 2155135159, i64 2155135179, i64 2155135242}
!3364 = !DILocation(line: 54, column: 1, scope: !3357)
!3365 = !{i64 2155135577, i64 2155135597, i64 2155135660}
!3366 = !DILocation(line: 55, column: 1, scope: !3357)
!3367 = !{i64 2155135995, i64 2155136015, i64 2155136078}
!3368 = !DILocation(line: 56, column: 1, scope: !3357)
!3369 = !{i64 2155136413, i64 2155136433, i64 2155136496}
!3370 = !DILocation(line: 57, column: 1, scope: !3357)
!3371 = !{i64 2155136831, i64 2155136851, i64 2155136914}
!3372 = !DILocation(line: 58, column: 1, scope: !3357)
!3373 = !{i64 2155137249, i64 2155137269, i64 2155137332}
!3374 = !DILocation(line: 59, column: 1, scope: !3357)
!3375 = !{i64 2155137667, i64 2155137687, i64 2155137750}
!3376 = !DILocation(line: 60, column: 1, scope: !3357)
!3377 = !{i64 2155138091, i64 2155138111, i64 2155138174}
!3378 = !DILocation(line: 61, column: 1, scope: !3357)
!3379 = !{i64 2155138408, i64 2155138428, i64 2155138491}
!3380 = !DILocation(line: 70, column: 1, scope: !3357)
!3381 = !{i64 2155138637, i64 2155138657, i64 2155138720}
!3382 = !DILocation(line: 72, column: 1, scope: !3357)
!3383 = !{i64 2155138969, i64 2155138989, i64 2155139052}
!3384 = !DILocation(line: 73, column: 1, scope: !3357)
!3385 = !{i64 2155139419, i64 2155139439, i64 2155139502}
!3386 = !DILocation(line: 74, column: 1, scope: !3357)
!3387 = !{i64 2155139869, i64 2155139889, i64 2155139952}
!3388 = !DILocation(line: 75, column: 1, scope: !3357)
!3389 = !{i64 2155140319, i64 2155140339, i64 2155140402}
!3390 = !DILocation(line: 76, column: 1, scope: !3357)
!3391 = !{i64 2155140769, i64 2155140789, i64 2155140852}
!3392 = !DILocation(line: 77, column: 1, scope: !3357)
!3393 = !{i64 2155141219, i64 2155141239, i64 2155141302}
!3394 = !DILocation(line: 78, column: 1, scope: !3357)
!3395 = !{i64 2155145730, i64 2155145750, i64 2155145813}
!3396 = !DILocation(line: 79, column: 1, scope: !3357)
!3397 = !{i64 2155146180, i64 2155146200, i64 2155146263}
!3398 = !DILocation(line: 80, column: 1, scope: !3357)
!3399 = !{i64 2155146633, i64 2155146653, i64 2155146716}
!3400 = !DILocation(line: 84, column: 1, scope: !3357)
!3401 = !{i64 2155146965, i64 2155146985, i64 2155147048}
!3402 = !DILocation(line: 91, column: 1, scope: !3357)
!3403 = !{i64 2155147362, i64 2155147382, i64 2155147445}
!3404 = !DILocation(line: 93, column: 1, scope: !3357)
!3405 = !{i64 2155147729, i64 2155147749, i64 2155147812}
!3406 = !DILocation(line: 106, column: 1, scope: !3357)
!3407 = !{i64 2155147999, i64 2155148019, i64 2155148082}
!3408 = !DILocation(line: 11, column: 1, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3298, file: !3410, discriminator: 0)
!3410 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3411 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3412)
!3412 = !{!3413, !3414}
!3413 = !DILocalVariable(name: "dev", arg: 1, scope: !3411, file: !294, line: 80, type: !134)
!3414 = !DILocalVariable(name: "flags", scope: !3411, file: !294, line: 82, type: !208)
!3415 = !DILocation(line: 0, scope: !3411)
!3416 = !DILocation(line: 84, column: 10, scope: !3411)
!3417 = !DILocation(line: 85, column: 13, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3411, file: !294, line: 85, column: 6)
!3419 = !DILocation(line: 85, column: 28, scope: !3418)
!3420 = !DILocation(line: 85, column: 6, scope: !3411)
!3421 = !DILocation(line: 86, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !294, line: 86, column: 3)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !294, line: 86, column: 3)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !294, line: 86, column: 3)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !294, line: 86, column: 3)
!3426 = distinct !DILexicalBlock(scope: !3418, file: !294, line: 85, column: 35)
!3427 = !DILocation(line: 88, column: 3, scope: !3426)
!3428 = !DILocation(line: 91, column: 13, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3411, file: !294, line: 91, column: 6)
!3430 = !DILocation(line: 91, column: 29, scope: !3429)
!3431 = !DILocation(line: 91, column: 6, scope: !3411)
!3432 = !DILocation(line: 92, column: 3, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !294, line: 92, column: 3)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !294, line: 92, column: 3)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !294, line: 92, column: 3)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 92, column: 3)
!3437 = distinct !DILexicalBlock(scope: !3429, file: !294, line: 91, column: 36)
!3438 = !DILocation(line: 94, column: 3, scope: !3437)
!3439 = !DILocation(line: 97, column: 13, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3411, file: !294, line: 97, column: 6)
!3441 = !DILocation(line: 97, column: 37, scope: !3440)
!3442 = !DILocation(line: 97, column: 6, scope: !3411)
!3443 = !DILocation(line: 98, column: 3, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !294, line: 98, column: 3)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 98, column: 3)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !294, line: 98, column: 3)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !294, line: 98, column: 3)
!3448 = distinct !DILexicalBlock(scope: !3440, file: !294, line: 97, column: 44)
!3449 = !DILocation(line: 100, column: 3, scope: !3448)
!3450 = !DILocation(line: 103, column: 12, scope: !3411)
!3451 = !DILocation(line: 105, column: 2, scope: !3411)
!3452 = !DILocation(line: 107, column: 1, scope: !3411)
!3453 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3454)
!3454 = !{!3455, !3456, !3457}
!3455 = !DILocalVariable(name: "dev", arg: 1, scope: !3453, file: !128, line: 108, type: !134)
!3456 = !DILocalVariable(name: "api", scope: !3453, file: !128, line: 110, type: !126)
!3457 = !DILocalVariable(name: "tmp", scope: !3453, file: !128, line: 111, type: !125)
!3458 = !DILocation(line: 0, scope: !3453)
!3459 = !DILocation(line: 113, column: 42, scope: !3453)
!3460 = !DILocation(line: 115, column: 13, scope: !3453)
!3461 = !DILocation(line: 115, column: 8, scope: !3453)
!3462 = !DILocation(line: 125, column: 2, scope: !3453)
!3463 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3464, file: !3464, line: 175, type: !3465, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3467)
!3464 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!142, !125}
!3467 = !{!3468}
!3468 = !DILocalVariable(name: "level", arg: 1, scope: !3463, file: !3464, line: 175, type: !125)
!3469 = !DILocation(line: 0, scope: !3463)
!3470 = !DILocation(line: 177, column: 2, scope: !3463)
!3471 = !DILocation(line: 189, column: 1, scope: !3463)
!3472 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3473)
!3473 = !{!3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483}
!3474 = !DILocalVariable(name: "dev", arg: 1, scope: !3472, file: !294, line: 109, type: !134)
!3475 = !DILocalVariable(name: "ecb_key", scope: !3472, file: !294, line: 112, type: !311)
!3476 = !DILocalVariable(name: "ecb_plaintext", scope: !3472, file: !294, line: 116, type: !311)
!3477 = !DILocalVariable(name: "ecb_ciphertext", scope: !3472, file: !294, line: 120, type: !2138)
!3478 = !DILocalVariable(name: "encrypted", scope: !3472, file: !294, line: 125, type: !311)
!3479 = !DILocalVariable(name: "decrypted", scope: !3472, file: !294, line: 126, type: !311)
!3480 = !DILocalVariable(name: "ini", scope: !3472, file: !294, line: 127, type: !166)
!3481 = !DILocalVariable(name: "encrypt", scope: !3472, file: !294, line: 132, type: !181)
!3482 = !DILocalVariable(name: "decrypt", scope: !3472, file: !294, line: 138, type: !181)
!3483 = !DILabel(scope: !3472, name: "out", file: !294, line: 191)
!3484 = !DILocation(line: 0, scope: !3472)
!3485 = !DILocation(line: 112, column: 2, scope: !3472)
!3486 = !DILocation(line: 112, column: 10, scope: !3472)
!3487 = !DILocation(line: 116, column: 2, scope: !3472)
!3488 = !DILocation(line: 116, column: 10, scope: !3472)
!3489 = !DILocation(line: 120, column: 2, scope: !3472)
!3490 = !DILocation(line: 120, column: 16, scope: !3472)
!3491 = !DILocation(line: 125, column: 2, scope: !3472)
!3492 = !DILocation(line: 125, column: 10, scope: !3472)
!3493 = !DILocation(line: 126, column: 2, scope: !3472)
!3494 = !DILocation(line: 126, column: 10, scope: !3472)
!3495 = !DILocation(line: 127, column: 2, scope: !3472)
!3496 = !DILocation(line: 127, column: 20, scope: !3472)
!3497 = !DILocation(line: 129, column: 7, scope: !3472)
!3498 = !DILocation(line: 127, column: 26, scope: !3472)
!3499 = !DILocation(line: 130, column: 12, scope: !3472)
!3500 = !DILocation(line: 132, column: 2, scope: !3472)
!3501 = !DILocation(line: 132, column: 20, scope: !3472)
!3502 = !DILocation(line: 132, column: 30, scope: !3472)
!3503 = !DILocation(line: 138, column: 2, scope: !3472)
!3504 = !DILocation(line: 138, column: 20, scope: !3472)
!3505 = !DILocation(line: 138, column: 30, scope: !3472)
!3506 = !DILocation(line: 145, column: 6, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 145, column: 6)
!3508 = !DILocation(line: 145, column: 6, scope: !3472)
!3509 = !DILocation(line: 151, column: 6, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 151, column: 6)
!3511 = !DILocation(line: 151, column: 6, scope: !3472)
!3512 = !DILocation(line: 152, column: 3, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !294, line: 152, column: 3)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !294, line: 152, column: 3)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !294, line: 152, column: 3)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !294, line: 152, column: 3)
!3517 = distinct !DILexicalBlock(scope: !3510, file: !294, line: 151, column: 39)
!3518 = !DILocation(line: 153, column: 3, scope: !3517)
!3519 = !DILocation(line: 156, column: 2, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !294, line: 156, column: 2)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !294, line: 156, column: 2)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !294, line: 156, column: 2)
!3523 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 156, column: 2)
!3524 = !DILocation(line: 158, column: 21, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 158, column: 6)
!3526 = !DILocation(line: 158, column: 6, scope: !3525)
!3527 = !DILocation(line: 158, column: 6, scope: !3472)
!3528 = !DILocation(line: 159, column: 3, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !294, line: 159, column: 3)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !294, line: 159, column: 3)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !294, line: 159, column: 3)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !294, line: 159, column: 3)
!3533 = distinct !DILexicalBlock(scope: !3525, file: !294, line: 158, column: 71)
!3534 = !DILocation(line: 161, column: 51, scope: !3533)
!3535 = !DILocation(line: 161, column: 3, scope: !3533)
!3536 = !DILocation(line: 163, column: 3, scope: !3533)
!3537 = !DILocation(line: 166, column: 2, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !294, line: 166, column: 2)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !294, line: 166, column: 2)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !294, line: 166, column: 2)
!3541 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 166, column: 2)
!3542 = !DILocation(line: 167, column: 2, scope: !3472)
!3543 = !DILocation(line: 169, column: 6, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 169, column: 6)
!3545 = !DILocation(line: 169, column: 6, scope: !3472)
!3546 = !DILocation(line: 175, column: 6, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 175, column: 6)
!3548 = !DILocation(line: 175, column: 6, scope: !3472)
!3549 = !DILocation(line: 176, column: 3, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 176, column: 3)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !294, line: 176, column: 3)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !294, line: 176, column: 3)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !294, line: 176, column: 3)
!3554 = distinct !DILexicalBlock(scope: !3547, file: !294, line: 175, column: 39)
!3555 = !DILocation(line: 177, column: 3, scope: !3554)
!3556 = !DILocation(line: 180, column: 2, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !294, line: 180, column: 2)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !294, line: 180, column: 2)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !294, line: 180, column: 2)
!3560 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 180, column: 2)
!3561 = !DILocation(line: 182, column: 21, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 182, column: 6)
!3563 = !DILocation(line: 182, column: 6, scope: !3562)
!3564 = !DILocation(line: 182, column: 6, scope: !3472)
!3565 = !DILocation(line: 183, column: 3, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !294, line: 183, column: 3)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !294, line: 183, column: 3)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !294, line: 183, column: 3)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !294, line: 183, column: 3)
!3570 = distinct !DILexicalBlock(scope: !3562, file: !294, line: 182, column: 69)
!3571 = !DILocation(line: 185, column: 50, scope: !3570)
!3572 = !DILocation(line: 185, column: 3, scope: !3570)
!3573 = !DILocation(line: 187, column: 3, scope: !3570)
!3574 = !DILocation(line: 190, column: 2, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !294, line: 190, column: 2)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !294, line: 190, column: 2)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !294, line: 190, column: 2)
!3578 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 190, column: 2)
!3579 = !DILocation(line: 190, column: 2, scope: !3578)
!3580 = !DILocation(line: 191, column: 1, scope: !3472)
!3581 = !DILocation(line: 192, column: 2, scope: !3472)
!3582 = !DILocation(line: 193, column: 1, scope: !3472)
!3583 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3584)
!3584 = !{!3585, !3586, !3587, !3588, !3589, !3590, !3591}
!3585 = !DILocalVariable(name: "dev", arg: 1, scope: !3583, file: !128, line: 159, type: !134)
!3586 = !DILocalVariable(name: "ctx", arg: 2, scope: !3583, file: !128, line: 160, type: !165)
!3587 = !DILocalVariable(name: "algo", arg: 3, scope: !3583, file: !128, line: 161, type: !39)
!3588 = !DILocalVariable(name: "mode", arg: 4, scope: !3583, file: !128, line: 162, type: !30)
!3589 = !DILocalVariable(name: "optype", arg: 5, scope: !3583, file: !128, line: 163, type: !42)
!3590 = !DILocalVariable(name: "api", scope: !3583, file: !128, line: 165, type: !126)
!3591 = !DILocalVariable(name: "flags", scope: !3583, file: !128, line: 166, type: !208)
!3592 = !DILocation(line: 0, scope: !3583)
!3593 = !DILocation(line: 168, column: 42, scope: !3583)
!3594 = !DILocation(line: 169, column: 7, scope: !3583)
!3595 = !DILocation(line: 169, column: 14, scope: !3583)
!3596 = !DILocation(line: 170, column: 11, scope: !3583)
!3597 = !DILocation(line: 170, column: 23, scope: !3583)
!3598 = !DILocation(line: 187, column: 14, scope: !3583)
!3599 = !DILocation(line: 187, column: 9, scope: !3583)
!3600 = !DILocation(line: 187, column: 2, scope: !3583)
!3601 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3602)
!3602 = !{!3603, !3604}
!3603 = !DILocalVariable(name: "ctx", arg: 1, scope: !3601, file: !128, line: 249, type: !165)
!3604 = !DILocalVariable(name: "pkt", arg: 2, scope: !3601, file: !128, line: 250, type: !180)
!3605 = !DILocation(line: 0, scope: !3601)
!3606 = !DILocation(line: 255, column: 7, scope: !3601)
!3607 = !DILocation(line: 255, column: 11, scope: !3601)
!3608 = !DILocation(line: 256, column: 18, scope: !3601)
!3609 = !DILocation(line: 256, column: 9, scope: !3601)
!3610 = !DILocation(line: 256, column: 2, scope: !3601)
!3611 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3612, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3614)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{null, !490, !184, !272}
!3614 = !{!3615, !3616, !3617, !3618, !3619}
!3615 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3611, file: !294, line: 50, type: !490)
!3616 = !DILocalVariable(name: "result", arg: 2, scope: !3611, file: !294, line: 51, type: !184)
!3617 = !DILocalVariable(name: "length", arg: 3, scope: !3611, file: !294, line: 51, type: !272)
!3618 = !DILocalVariable(name: "i", scope: !3611, file: !294, line: 53, type: !125)
!3619 = !DILocalVariable(name: "j", scope: !3611, file: !294, line: 53, type: !125)
!3620 = !DILocation(line: 0, scope: !3611)
!3621 = !DILocation(line: 55, column: 2, scope: !3611)
!3622 = !DILocation(line: 57, column: 23, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !294, line: 57, column: 2)
!3624 = distinct !DILexicalBlock(scope: !3611, file: !294, line: 57, column: 2)
!3625 = !DILocation(line: 57, column: 2, scope: !3624)
!3626 = !DILocation(line: 66, column: 2, scope: !3611)
!3627 = !DILocation(line: 68, column: 2, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3611, file: !294, line: 68, column: 2)
!3629 = !DILocation(line: 58, column: 21, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3623, file: !294, line: 57, column: 43)
!3631 = !DILocation(line: 58, column: 3, scope: !3630)
!3632 = !DILocation(line: 60, column: 9, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3630, file: !294, line: 60, column: 7)
!3634 = !DILocation(line: 60, column: 7, scope: !3630)
!3635 = !DILocation(line: 61, column: 4, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3633, file: !294, line: 60, column: 16)
!3637 = !DILocation(line: 63, column: 3, scope: !3636)
!3638 = !DILocation(line: 0, scope: !3624)
!3639 = !DILocation(line: 57, column: 34, scope: !3623)
!3640 = !DILocation(line: 57, column: 39, scope: !3623)
!3641 = distinct !{!3641, !3625, !3642}
!3642 = !DILocation(line: 64, column: 2, scope: !3624)
!3643 = !DILocation(line: 69, column: 21, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !294, line: 68, column: 43)
!3645 = distinct !DILexicalBlock(scope: !3628, file: !294, line: 68, column: 2)
!3646 = !DILocation(line: 69, column: 3, scope: !3644)
!3647 = !DILocation(line: 71, column: 9, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3644, file: !294, line: 71, column: 7)
!3649 = !DILocation(line: 71, column: 7, scope: !3644)
!3650 = !DILocation(line: 72, column: 4, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3648, file: !294, line: 71, column: 16)
!3652 = !DILocation(line: 74, column: 3, scope: !3651)
!3653 = !DILocation(line: 0, scope: !3628)
!3654 = !DILocation(line: 68, column: 34, scope: !3645)
!3655 = !DILocation(line: 68, column: 39, scope: !3645)
!3656 = !DILocation(line: 68, column: 23, scope: !3645)
!3657 = distinct !{!3657, !3627, !3658}
!3658 = !DILocation(line: 75, column: 2, scope: !3628)
!3659 = !DILocation(line: 77, column: 2, scope: !3611)
!3660 = !DILocation(line: 78, column: 1, scope: !3611)
!3661 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3662)
!3662 = !{!3663, !3664, !3665}
!3663 = !DILocalVariable(name: "dev", arg: 1, scope: !3661, file: !128, line: 201, type: !134)
!3664 = !DILocalVariable(name: "ctx", arg: 2, scope: !3661, file: !128, line: 202, type: !165)
!3665 = !DILocalVariable(name: "api", scope: !3661, file: !128, line: 204, type: !126)
!3666 = !DILocation(line: 0, scope: !3661)
!3667 = !DILocation(line: 206, column: 42, scope: !3661)
!3668 = !DILocation(line: 208, column: 14, scope: !3661)
!3669 = !DILocation(line: 208, column: 9, scope: !3661)
!3670 = !DILocation(line: 208, column: 2, scope: !3661)
!3671 = !DILocation(line: 0, scope: !293)
!3672 = !DILocation(line: 207, column: 2, scope: !293)
!3673 = !DILocation(line: 207, column: 10, scope: !293)
!3674 = !DILocation(line: 208, column: 2, scope: !293)
!3675 = !DILocation(line: 208, column: 10, scope: !293)
!3676 = !DILocation(line: 209, column: 2, scope: !293)
!3677 = !DILocation(line: 209, column: 20, scope: !293)
!3678 = !DILocation(line: 211, column: 7, scope: !293)
!3679 = !DILocation(line: 209, column: 26, scope: !293)
!3680 = !DILocation(line: 212, column: 12, scope: !293)
!3681 = !DILocation(line: 214, column: 2, scope: !293)
!3682 = !DILocation(line: 214, column: 20, scope: !293)
!3683 = !DILocation(line: 214, column: 30, scope: !293)
!3684 = !DILocation(line: 220, column: 2, scope: !293)
!3685 = !DILocation(line: 220, column: 20, scope: !293)
!3686 = !DILocation(line: 220, column: 30, scope: !293)
!3687 = !DILocation(line: 232, column: 6, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3689 = !DILocation(line: 232, column: 6, scope: !293)
!3690 = !DILocation(line: 238, column: 6, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3692 = !DILocation(line: 238, column: 6, scope: !293)
!3693 = !DILocation(line: 239, column: 3, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !294, line: 239, column: 3)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !294, line: 239, column: 3)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !294, line: 239, column: 3)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !294, line: 239, column: 3)
!3698 = distinct !DILexicalBlock(scope: !3691, file: !294, line: 238, column: 41)
!3699 = !DILocation(line: 240, column: 3, scope: !3698)
!3700 = !DILocation(line: 243, column: 2, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !294, line: 243, column: 2)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !294, line: 243, column: 2)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !294, line: 243, column: 2)
!3704 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3705 = !DILocation(line: 245, column: 21, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3707 = !DILocation(line: 245, column: 6, scope: !3706)
!3708 = !DILocation(line: 245, column: 6, scope: !293)
!3709 = !DILocation(line: 246, column: 3, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !294, line: 246, column: 3)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !294, line: 246, column: 3)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !294, line: 246, column: 3)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !294, line: 246, column: 3)
!3714 = distinct !DILexicalBlock(scope: !3706, file: !294, line: 245, column: 71)
!3715 = !DILocation(line: 248, column: 51, scope: !3714)
!3716 = !DILocation(line: 248, column: 3, scope: !3714)
!3717 = !DILocation(line: 250, column: 3, scope: !3714)
!3718 = !DILocation(line: 253, column: 2, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !294, line: 253, column: 2)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !294, line: 253, column: 2)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !294, line: 253, column: 2)
!3722 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3723 = !DILocation(line: 254, column: 2, scope: !293)
!3724 = !DILocation(line: 256, column: 6, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3726 = !DILocation(line: 256, column: 6, scope: !293)
!3727 = !DILocation(line: 263, column: 6, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3729 = !DILocation(line: 263, column: 6, scope: !293)
!3730 = !DILocation(line: 264, column: 3, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !294, line: 264, column: 3)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !294, line: 264, column: 3)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !294, line: 264, column: 3)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !294, line: 264, column: 3)
!3735 = distinct !DILexicalBlock(scope: !3728, file: !294, line: 263, column: 48)
!3736 = !DILocation(line: 265, column: 3, scope: !3735)
!3737 = !DILocation(line: 268, column: 2, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !294, line: 268, column: 2)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !294, line: 268, column: 2)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !294, line: 268, column: 2)
!3741 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3742 = !DILocation(line: 270, column: 21, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3744 = !DILocation(line: 270, column: 6, scope: !3743)
!3745 = !DILocation(line: 270, column: 6, scope: !293)
!3746 = !DILocation(line: 271, column: 3, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !294, line: 271, column: 3)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 271, column: 3)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !294, line: 271, column: 3)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !294, line: 271, column: 3)
!3751 = distinct !DILexicalBlock(scope: !3743, file: !294, line: 270, column: 61)
!3752 = !DILocation(line: 273, column: 46, scope: !3751)
!3753 = !DILocation(line: 273, column: 3, scope: !3751)
!3754 = !DILocation(line: 275, column: 3, scope: !3751)
!3755 = !DILocation(line: 278, column: 2, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !294, line: 278, column: 2)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !294, line: 278, column: 2)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !294, line: 278, column: 2)
!3759 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3760 = !DILocation(line: 278, column: 2, scope: !3759)
!3761 = !DILocation(line: 279, column: 1, scope: !293)
!3762 = !DILocation(line: 280, column: 2, scope: !293)
!3763 = !DILocation(line: 281, column: 1, scope: !293)
!3764 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3765)
!3765 = !{!3766, !3767, !3768}
!3766 = !DILocalVariable(name: "ctx", arg: 1, scope: !3764, file: !128, line: 270, type: !165)
!3767 = !DILocalVariable(name: "pkt", arg: 2, scope: !3764, file: !128, line: 271, type: !180)
!3768 = !DILocalVariable(name: "iv", arg: 3, scope: !3764, file: !128, line: 271, type: !184)
!3769 = !DILocation(line: 0, scope: !3764)
!3770 = !DILocation(line: 276, column: 7, scope: !3764)
!3771 = !DILocation(line: 276, column: 11, scope: !3764)
!3772 = !DILocation(line: 277, column: 18, scope: !3764)
!3773 = !DILocation(line: 277, column: 9, scope: !3764)
!3774 = !DILocation(line: 277, column: 2, scope: !3764)
!3775 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3776)
!3776 = !{!3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784}
!3777 = !DILocalVariable(name: "dev", arg: 1, scope: !3775, file: !294, line: 294, type: !134)
!3778 = !DILocalVariable(name: "encrypted", scope: !3775, file: !294, line: 296, type: !304)
!3779 = !DILocalVariable(name: "decrypted", scope: !3775, file: !294, line: 297, type: !304)
!3780 = !DILocalVariable(name: "ini", scope: !3775, file: !294, line: 298, type: !166)
!3781 = !DILocalVariable(name: "encrypt", scope: !3775, file: !294, line: 305, type: !181)
!3782 = !DILocalVariable(name: "decrypt", scope: !3775, file: !294, line: 311, type: !181)
!3783 = !DILocalVariable(name: "iv", scope: !3775, file: !294, line: 317, type: !363)
!3784 = !DILabel(scope: !3775, name: "out", file: !294, line: 368)
!3785 = !DILocation(line: 0, scope: !3775)
!3786 = !DILocation(line: 296, column: 2, scope: !3775)
!3787 = !DILocation(line: 296, column: 10, scope: !3775)
!3788 = !DILocation(line: 297, column: 2, scope: !3775)
!3789 = !DILocation(line: 297, column: 10, scope: !3775)
!3790 = !DILocation(line: 298, column: 2, scope: !3775)
!3791 = !DILocation(line: 298, column: 20, scope: !3775)
!3792 = !DILocation(line: 298, column: 26, scope: !3775)
!3793 = !DILocation(line: 300, column: 7, scope: !3775)
!3794 = !DILocation(line: 303, column: 24, scope: !3775)
!3795 = !DILocation(line: 301, column: 12, scope: !3775)
!3796 = !DILocation(line: 305, column: 2, scope: !3775)
!3797 = !DILocation(line: 305, column: 20, scope: !3775)
!3798 = !DILocation(line: 305, column: 30, scope: !3775)
!3799 = !DILocation(line: 311, column: 2, scope: !3775)
!3800 = !DILocation(line: 311, column: 20, scope: !3775)
!3801 = !DILocation(line: 311, column: 30, scope: !3775)
!3802 = !DILocation(line: 317, column: 2, scope: !3775)
!3803 = !DILocation(line: 317, column: 10, scope: !3775)
!3804 = !DILocation(line: 322, column: 6, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 322, column: 6)
!3806 = !DILocation(line: 322, column: 6, scope: !3775)
!3807 = !DILocation(line: 328, column: 6, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 328, column: 6)
!3809 = !DILocation(line: 328, column: 6, scope: !3775)
!3810 = !DILocation(line: 329, column: 3, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !294, line: 329, column: 3)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !294, line: 329, column: 3)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !294, line: 329, column: 3)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !294, line: 329, column: 3)
!3815 = distinct !DILexicalBlock(scope: !3808, file: !294, line: 328, column: 41)
!3816 = !DILocation(line: 330, column: 3, scope: !3815)
!3817 = !DILocation(line: 333, column: 2, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !294, line: 333, column: 2)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !294, line: 333, column: 2)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !294, line: 333, column: 2)
!3821 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 333, column: 2)
!3822 = !DILocation(line: 335, column: 21, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 335, column: 6)
!3824 = !DILocation(line: 335, column: 6, scope: !3823)
!3825 = !DILocation(line: 335, column: 6, scope: !3775)
!3826 = !DILocation(line: 336, column: 3, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !294, line: 336, column: 3)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !294, line: 336, column: 3)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !294, line: 336, column: 3)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !294, line: 336, column: 3)
!3831 = distinct !DILexicalBlock(scope: !3823, file: !294, line: 335, column: 71)
!3832 = !DILocation(line: 338, column: 51, scope: !3831)
!3833 = !DILocation(line: 338, column: 3, scope: !3831)
!3834 = !DILocation(line: 340, column: 3, scope: !3831)
!3835 = !DILocation(line: 343, column: 2, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !294, line: 343, column: 2)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 343, column: 2)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !294, line: 343, column: 2)
!3839 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 343, column: 2)
!3840 = !DILocation(line: 344, column: 2, scope: !3775)
!3841 = !DILocation(line: 346, column: 6, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 346, column: 6)
!3843 = !DILocation(line: 346, column: 6, scope: !3775)
!3844 = !DILocation(line: 352, column: 6, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 352, column: 6)
!3846 = !DILocation(line: 352, column: 6, scope: !3775)
!3847 = !DILocation(line: 353, column: 3, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !294, line: 353, column: 3)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !294, line: 353, column: 3)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !294, line: 353, column: 3)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !294, line: 353, column: 3)
!3852 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 352, column: 41)
!3853 = !DILocation(line: 354, column: 3, scope: !3852)
!3854 = !DILocation(line: 357, column: 2, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !294, line: 357, column: 2)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !294, line: 357, column: 2)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !294, line: 357, column: 2)
!3858 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 357, column: 2)
!3859 = !DILocation(line: 359, column: 21, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 359, column: 6)
!3861 = !DILocation(line: 359, column: 6, scope: !3860)
!3862 = !DILocation(line: 359, column: 6, scope: !3775)
!3863 = !DILocation(line: 360, column: 3, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !294, line: 360, column: 3)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 360, column: 3)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !294, line: 360, column: 3)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !294, line: 360, column: 3)
!3868 = distinct !DILexicalBlock(scope: !3860, file: !294, line: 359, column: 61)
!3869 = !DILocation(line: 363, column: 14, scope: !3868)
!3870 = !DILocation(line: 362, column: 3, scope: !3868)
!3871 = !DILocation(line: 364, column: 3, scope: !3868)
!3872 = !DILocation(line: 367, column: 2, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !294, line: 367, column: 2)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !294, line: 367, column: 2)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !294, line: 367, column: 2)
!3876 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 367, column: 2)
!3877 = !DILocation(line: 367, column: 2, scope: !3876)
!3878 = !DILocation(line: 368, column: 1, scope: !3775)
!3879 = !DILocation(line: 369, column: 2, scope: !3775)
!3880 = !DILocation(line: 370, column: 1, scope: !3775)
!3881 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3882)
!3882 = !{!3883, !3884, !3885}
!3883 = !DILocalVariable(name: "ctx", arg: 1, scope: !3881, file: !128, line: 297, type: !165)
!3884 = !DILocalVariable(name: "pkt", arg: 2, scope: !3881, file: !128, line: 298, type: !180)
!3885 = !DILocalVariable(name: "iv", arg: 3, scope: !3881, file: !128, line: 298, type: !184)
!3886 = !DILocation(line: 0, scope: !3881)
!3887 = !DILocation(line: 303, column: 7, scope: !3881)
!3888 = !DILocation(line: 303, column: 11, scope: !3881)
!3889 = !DILocation(line: 304, column: 18, scope: !3881)
!3890 = !DILocation(line: 304, column: 9, scope: !3881)
!3891 = !DILocation(line: 304, column: 2, scope: !3881)
!3892 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3893)
!3893 = !{!3894, !3895, !3899, !3903, !3904, !3905, !3906, !3907}
!3894 = !DILocalVariable(name: "dev", arg: 1, scope: !3892, file: !294, line: 394, type: !134)
!3895 = !DILocalVariable(name: "encrypted", scope: !3892, file: !294, line: 396, type: !3896)
!3896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !3897)
!3897 = !{!3898}
!3898 = !DISubrange(count: 50)
!3899 = !DILocalVariable(name: "decrypted", scope: !3892, file: !294, line: 397, type: !3900)
!3900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !3901)
!3901 = !{!3902}
!3902 = !DISubrange(count: 25)
!3903 = !DILocalVariable(name: "ini", scope: !3892, file: !294, line: 398, type: !166)
!3904 = !DILocalVariable(name: "encrypt", scope: !3892, file: !294, line: 407, type: !181)
!3905 = !DILocalVariable(name: "ccm_op", scope: !3892, file: !294, line: 413, type: !203)
!3906 = !DILocalVariable(name: "decrypt", scope: !3892, file: !294, line: 425, type: !181)
!3907 = !DILabel(scope: !3892, name: "out", file: !294, line: 480)
!3908 = !DILocation(line: 0, scope: !3892)
!3909 = !DILocation(line: 396, column: 2, scope: !3892)
!3910 = !DILocation(line: 396, column: 10, scope: !3892)
!3911 = !DILocation(line: 397, column: 2, scope: !3892)
!3912 = !DILocation(line: 397, column: 10, scope: !3892)
!3913 = !DILocation(line: 398, column: 2, scope: !3892)
!3914 = !DILocation(line: 398, column: 20, scope: !3892)
!3915 = !DILocation(line: 398, column: 26, scope: !3892)
!3916 = !DILocation(line: 400, column: 7, scope: !3892)
!3917 = !DILocation(line: 401, column: 15, scope: !3892)
!3918 = !DILocation(line: 401, column: 27, scope: !3892)
!3919 = !DILocation(line: 405, column: 12, scope: !3892)
!3920 = !DILocation(line: 407, column: 2, scope: !3892)
!3921 = !DILocation(line: 407, column: 20, scope: !3892)
!3922 = !DILocation(line: 407, column: 30, scope: !3892)
!3923 = !DILocation(line: 413, column: 2, scope: !3892)
!3924 = !DILocation(line: 413, column: 25, scope: !3892)
!3925 = !DILocation(line: 413, column: 34, scope: !3892)
!3926 = !DILocation(line: 423, column: 20, scope: !3892)
!3927 = !DILocation(line: 425, column: 2, scope: !3892)
!3928 = !DILocation(line: 425, column: 20, scope: !3892)
!3929 = !DILocation(line: 425, column: 30, scope: !3892)
!3930 = !DILocation(line: 432, column: 6, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 432, column: 6)
!3932 = !DILocation(line: 432, column: 6, scope: !3892)
!3933 = !DILocation(line: 438, column: 13, scope: !3892)
!3934 = !DILocation(line: 439, column: 6, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 439, column: 6)
!3936 = !DILocation(line: 439, column: 6, scope: !3892)
!3937 = !DILocation(line: 440, column: 3, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !294, line: 440, column: 3)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !294, line: 440, column: 3)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !294, line: 440, column: 3)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !294, line: 440, column: 3)
!3942 = distinct !DILexicalBlock(scope: !3935, file: !294, line: 439, column: 47)
!3943 = !DILocation(line: 441, column: 3, scope: !3942)
!3944 = !DILocation(line: 444, column: 2, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !294, line: 444, column: 2)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !294, line: 444, column: 2)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !294, line: 444, column: 2)
!3948 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 444, column: 2)
!3949 = !DILocation(line: 446, column: 21, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 446, column: 6)
!3951 = !DILocation(line: 446, column: 6, scope: !3950)
!3952 = !DILocation(line: 446, column: 6, scope: !3892)
!3953 = !DILocation(line: 447, column: 3, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 447, column: 3)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !294, line: 447, column: 3)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !294, line: 447, column: 3)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !294, line: 447, column: 3)
!3958 = distinct !DILexicalBlock(scope: !3950, file: !294, line: 446, column: 67)
!3959 = !DILocation(line: 450, column: 14, scope: !3958)
!3960 = !DILocation(line: 449, column: 3, scope: !3958)
!3961 = !DILocation(line: 451, column: 3, scope: !3958)
!3962 = !DILocation(line: 454, column: 2, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !294, line: 454, column: 2)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !294, line: 454, column: 2)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !294, line: 454, column: 2)
!3966 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 454, column: 2)
!3967 = !DILocation(line: 455, column: 2, scope: !3892)
!3968 = !DILocation(line: 457, column: 6, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 457, column: 6)
!3970 = !DILocation(line: 457, column: 6, scope: !3892)
!3971 = !DILocation(line: 463, column: 13, scope: !3892)
!3972 = !DILocation(line: 464, column: 6, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 464, column: 6)
!3974 = !DILocation(line: 464, column: 6, scope: !3892)
!3975 = !DILocation(line: 465, column: 3, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !294, line: 465, column: 3)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !294, line: 465, column: 3)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !294, line: 465, column: 3)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !294, line: 465, column: 3)
!3980 = distinct !DILexicalBlock(scope: !3973, file: !294, line: 464, column: 47)
!3981 = !DILocation(line: 466, column: 3, scope: !3980)
!3982 = !DILocation(line: 469, column: 2, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !294, line: 469, column: 2)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !294, line: 469, column: 2)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !294, line: 469, column: 2)
!3986 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 469, column: 2)
!3987 = !DILocation(line: 471, column: 21, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 471, column: 6)
!3989 = !DILocation(line: 471, column: 6, scope: !3988)
!3990 = !DILocation(line: 471, column: 6, scope: !3892)
!3991 = !DILocation(line: 472, column: 3, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !294, line: 472, column: 3)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !294, line: 472, column: 3)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 472, column: 3)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !294, line: 472, column: 3)
!3996 = distinct !DILexicalBlock(scope: !3988, file: !294, line: 471, column: 59)
!3997 = !DILocation(line: 475, column: 14, scope: !3996)
!3998 = !DILocation(line: 474, column: 3, scope: !3996)
!3999 = !DILocation(line: 476, column: 3, scope: !3996)
!4000 = !DILocation(line: 479, column: 2, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !294, line: 479, column: 2)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !294, line: 479, column: 2)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !294, line: 479, column: 2)
!4004 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 479, column: 2)
!4005 = !DILocation(line: 479, column: 2, scope: !4004)
!4006 = !DILocation(line: 480, column: 1, scope: !3892)
!4007 = !DILocation(line: 481, column: 2, scope: !3892)
!4008 = !DILocation(line: 482, column: 1, scope: !3892)
!4009 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4010)
!4010 = !{!4011, !4012, !4013}
!4011 = !DILocalVariable(name: "ctx", arg: 1, scope: !4009, file: !128, line: 319, type: !165)
!4012 = !DILocalVariable(name: "pkt", arg: 2, scope: !4009, file: !128, line: 320, type: !202)
!4013 = !DILocalVariable(name: "nonce", arg: 3, scope: !4009, file: !128, line: 320, type: !184)
!4014 = !DILocation(line: 0, scope: !4009)
!4015 = !DILocation(line: 325, column: 7, scope: !4009)
!4016 = !DILocation(line: 325, column: 12, scope: !4009)
!4017 = !DILocation(line: 325, column: 16, scope: !4009)
!4018 = !DILocation(line: 326, column: 18, scope: !4009)
!4019 = !DILocation(line: 326, column: 9, scope: !4009)
!4020 = !DILocation(line: 326, column: 2, scope: !4009)
!4021 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4022)
!4022 = !{!4023, !4024, !4028, !4030, !4031, !4032, !4033, !4034}
!4023 = !DILocalVariable(name: "dev", arg: 1, scope: !4021, file: !294, line: 511, type: !134)
!4024 = !DILocalVariable(name: "encrypted", scope: !4021, file: !294, line: 513, type: !4025)
!4025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4026)
!4026 = !{!4027}
!4027 = !DISubrange(count: 60)
!4028 = !DILocalVariable(name: "decrypted", scope: !4021, file: !294, line: 514, type: !4029)
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !498)
!4030 = !DILocalVariable(name: "ini", scope: !4021, file: !294, line: 515, type: !166)
!4031 = !DILocalVariable(name: "encrypt", scope: !4021, file: !294, line: 524, type: !181)
!4032 = !DILocalVariable(name: "gcm_op", scope: !4021, file: !294, line: 530, type: !203)
!4033 = !DILocalVariable(name: "decrypt", scope: !4021, file: !294, line: 542, type: !181)
!4034 = !DILabel(scope: !4021, name: "out", file: !294, line: 597)
!4035 = !DILocation(line: 0, scope: !4021)
!4036 = !DILocation(line: 513, column: 2, scope: !4021)
!4037 = !DILocation(line: 513, column: 10, scope: !4021)
!4038 = !DILocation(line: 514, column: 2, scope: !4021)
!4039 = !DILocation(line: 514, column: 10, scope: !4021)
!4040 = !DILocation(line: 515, column: 2, scope: !4021)
!4041 = !DILocation(line: 515, column: 20, scope: !4021)
!4042 = !DILocation(line: 515, column: 26, scope: !4021)
!4043 = !DILocation(line: 517, column: 7, scope: !4021)
!4044 = !DILocation(line: 518, column: 15, scope: !4021)
!4045 = !DILocation(line: 518, column: 27, scope: !4021)
!4046 = !DILocation(line: 522, column: 12, scope: !4021)
!4047 = !DILocation(line: 524, column: 2, scope: !4021)
!4048 = !DILocation(line: 524, column: 20, scope: !4021)
!4049 = !DILocation(line: 524, column: 30, scope: !4021)
!4050 = !DILocation(line: 530, column: 2, scope: !4021)
!4051 = !DILocation(line: 530, column: 25, scope: !4021)
!4052 = !DILocation(line: 530, column: 34, scope: !4021)
!4053 = !DILocation(line: 540, column: 20, scope: !4021)
!4054 = !DILocation(line: 542, column: 2, scope: !4021)
!4055 = !DILocation(line: 542, column: 20, scope: !4021)
!4056 = !DILocation(line: 542, column: 30, scope: !4021)
!4057 = !DILocation(line: 549, column: 6, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 549, column: 6)
!4059 = !DILocation(line: 549, column: 6, scope: !4021)
!4060 = !DILocation(line: 555, column: 13, scope: !4021)
!4061 = !DILocation(line: 556, column: 6, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 556, column: 6)
!4063 = !DILocation(line: 556, column: 6, scope: !4021)
!4064 = !DILocation(line: 557, column: 3, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !294, line: 557, column: 3)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !294, line: 557, column: 3)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !294, line: 557, column: 3)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !294, line: 557, column: 3)
!4069 = distinct !DILexicalBlock(scope: !4062, file: !294, line: 556, column: 47)
!4070 = !DILocation(line: 558, column: 3, scope: !4069)
!4071 = !DILocation(line: 561, column: 2, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !294, line: 561, column: 2)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !294, line: 561, column: 2)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !294, line: 561, column: 2)
!4075 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 561, column: 2)
!4076 = !DILocation(line: 563, column: 21, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 563, column: 6)
!4078 = !DILocation(line: 563, column: 6, scope: !4077)
!4079 = !DILocation(line: 563, column: 6, scope: !4021)
!4080 = !DILocation(line: 564, column: 3, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 564, column: 3)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !294, line: 564, column: 3)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !294, line: 564, column: 3)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !294, line: 564, column: 3)
!4085 = distinct !DILexicalBlock(scope: !4077, file: !294, line: 563, column: 67)
!4086 = !DILocation(line: 567, column: 14, scope: !4085)
!4087 = !DILocation(line: 566, column: 3, scope: !4085)
!4088 = !DILocation(line: 568, column: 3, scope: !4085)
!4089 = !DILocation(line: 571, column: 2, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !294, line: 571, column: 2)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !294, line: 571, column: 2)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !294, line: 571, column: 2)
!4093 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 571, column: 2)
!4094 = !DILocation(line: 572, column: 2, scope: !4021)
!4095 = !DILocation(line: 574, column: 6, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 574, column: 6)
!4097 = !DILocation(line: 574, column: 6, scope: !4021)
!4098 = !DILocation(line: 580, column: 13, scope: !4021)
!4099 = !DILocation(line: 581, column: 6, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 581, column: 6)
!4101 = !DILocation(line: 581, column: 6, scope: !4021)
!4102 = !DILocation(line: 582, column: 3, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !294, line: 582, column: 3)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !294, line: 582, column: 3)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !294, line: 582, column: 3)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !294, line: 582, column: 3)
!4107 = distinct !DILexicalBlock(scope: !4100, file: !294, line: 581, column: 47)
!4108 = !DILocation(line: 583, column: 3, scope: !4107)
!4109 = !DILocation(line: 586, column: 2, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !294, line: 586, column: 2)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !294, line: 586, column: 2)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !294, line: 586, column: 2)
!4113 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 586, column: 2)
!4114 = !DILocation(line: 588, column: 21, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 588, column: 6)
!4116 = !DILocation(line: 588, column: 6, scope: !4115)
!4117 = !DILocation(line: 588, column: 6, scope: !4021)
!4118 = !DILocation(line: 589, column: 3, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !294, line: 589, column: 3)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !294, line: 589, column: 3)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !294, line: 589, column: 3)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !294, line: 589, column: 3)
!4123 = distinct !DILexicalBlock(scope: !4115, file: !294, line: 588, column: 59)
!4124 = !DILocation(line: 592, column: 14, scope: !4123)
!4125 = !DILocation(line: 591, column: 3, scope: !4123)
!4126 = !DILocation(line: 593, column: 3, scope: !4123)
!4127 = !DILocation(line: 596, column: 2, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !294, line: 596, column: 2)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !294, line: 596, column: 2)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !294, line: 596, column: 2)
!4131 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 596, column: 2)
!4132 = !DILocation(line: 596, column: 2, scope: !4131)
!4133 = !DILocation(line: 597, column: 1, scope: !4021)
!4134 = !DILocation(line: 598, column: 2, scope: !4021)
!4135 = !DILocation(line: 599, column: 1, scope: !4021)
!4136 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4137)
!4137 = !{!4138, !4139, !4140}
!4138 = !DILocalVariable(name: "ctx", arg: 1, scope: !4136, file: !128, line: 341, type: !165)
!4139 = !DILocalVariable(name: "pkt", arg: 2, scope: !4136, file: !128, line: 342, type: !202)
!4140 = !DILocalVariable(name: "nonce", arg: 3, scope: !4136, file: !128, line: 342, type: !184)
!4141 = !DILocation(line: 0, scope: !4136)
!4142 = !DILocation(line: 347, column: 7, scope: !4136)
!4143 = !DILocation(line: 347, column: 12, scope: !4136)
!4144 = !DILocation(line: 347, column: 16, scope: !4136)
!4145 = !DILocation(line: 348, column: 18, scope: !4136)
!4146 = !DILocation(line: 348, column: 9, scope: !4136)
!4147 = !DILocation(line: 348, column: 2, scope: !4136)
!4148 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3300, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4149)
!4149 = !{!4150, !4151, !4159}
!4150 = !DILocalVariable(name: "dev", scope: !4148, file: !294, line: 609, type: !134)
!4151 = !DILocalVariable(name: "modes", scope: !4148, file: !294, line: 623, type: !4152)
!4152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4153, size: 384, elements: !1524)
!4153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4154)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4155)
!4155 = !{!4156, !4157}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4154, file: !294, line: 602, baseType: !140, size: 32)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4154, file: !294, line: 603, baseType: !4158, size: 32, offset: 32)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4159 = !DILocalVariable(name: "i", scope: !4148, file: !294, line: 631, type: !125)
!4160 = !DILocation(line: 609, column: 29, scope: !4148)
!4161 = !DILocation(line: 0, scope: !4148)
!4162 = !DILocation(line: 611, column: 7, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 611, column: 6)
!4164 = !DILocation(line: 611, column: 6, scope: !4148)
!4165 = !DILocation(line: 612, column: 3, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !294, line: 612, column: 3)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !294, line: 612, column: 3)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !294, line: 612, column: 3)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !294, line: 612, column: 3)
!4170 = distinct !DILexicalBlock(scope: !4163, file: !294, line: 611, column: 12)
!4171 = !DILocation(line: 613, column: 3, scope: !4170)
!4172 = !DILocation(line: 623, column: 25, scope: !4148)
!4173 = !DILocation(line: 633, column: 6, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 633, column: 6)
!4175 = !DILocation(line: 633, column: 6, scope: !4148)
!4176 = !DILocation(line: 634, column: 3, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !294, line: 634, column: 3)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !294, line: 634, column: 3)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !294, line: 634, column: 3)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !294, line: 634, column: 3)
!4181 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 633, column: 38)
!4182 = !DILocation(line: 635, column: 3, scope: !4181)
!4183 = !DILocation(line: 638, column: 2, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !294, line: 638, column: 2)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !294, line: 638, column: 2)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !294, line: 638, column: 2)
!4187 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 638, column: 2)
!4188 = !DILocation(line: 640, column: 2, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 640, column: 2)
!4190 = !DILocation(line: 640, column: 23, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4189, file: !294, line: 640, column: 2)
!4192 = !DILocation(line: 641, column: 3, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !294, line: 641, column: 3)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !294, line: 641, column: 3)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !294, line: 641, column: 3)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !294, line: 641, column: 3)
!4197 = distinct !DILexicalBlock(scope: !4191, file: !294, line: 640, column: 34)
!4198 = !DILocation(line: 642, column: 12, scope: !4197)
!4199 = !DILocation(line: 642, column: 3, scope: !4197)
!4200 = !DILocation(line: 640, column: 30, scope: !4191)
!4201 = distinct !{!4201, !4188, !4202}
!4202 = !DILocation(line: 643, column: 2, scope: !4189)
!4203 = !DILocation(line: 644, column: 1, scope: !4148)
!4204 = distinct !DISubprogram(name: "device_get_binding", scope: !4205, file: !4205, line: 24, type: !4206, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4208)
!4205 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!134, !140}
!4208 = !{!4209}
!4209 = !DILocalVariable(name: "name", arg: 1, scope: !4204, file: !4205, line: 24, type: !140)
!4210 = !DILocation(line: 0, scope: !4204)
!4211 = !DILocation(line: 32, column: 2, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4204, file: !4205, line: 32, column: 2)
!4213 = !{i64 2149395964}
!4214 = !DILocation(line: 33, column: 9, scope: !4204)
!4215 = !DILocation(line: 33, column: 2, scope: !4204)
!4216 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4217, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4226)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!125, !124, !272, !208, !140, !4219}
!4219 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4220, line: 99, baseType: !4221)
!4220 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4220, line: 40, baseType: !4222)
!4222 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4223)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4224)
!4224 = !{!4225}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4223, file: !395, line: 18, baseType: !124, size: 32)
!4226 = !{!4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4261, !4270, !4273, !4274, !4277, !4280, !4283, !4286, !4292}
!4227 = !DILocalVariable(name: "packaged", arg: 1, scope: !4216, file: !395, line: 233, type: !124)
!4228 = !DILocalVariable(name: "len", arg: 2, scope: !4216, file: !395, line: 233, type: !272)
!4229 = !DILocalVariable(name: "flags", arg: 3, scope: !4216, file: !395, line: 233, type: !208)
!4230 = !DILocalVariable(name: "fmt", arg: 4, scope: !4216, file: !395, line: 234, type: !140)
!4231 = !DILocalVariable(name: "ap", arg: 5, scope: !4216, file: !395, line: 234, type: !4219)
!4232 = !DILocalVariable(name: "buf0", scope: !4216, file: !395, line: 247, type: !184)
!4233 = !DILocalVariable(name: "buf", scope: !4216, file: !395, line: 248, type: !184)
!4234 = !DILocalVariable(name: "size", scope: !4216, file: !395, line: 249, type: !32)
!4235 = !DILocalVariable(name: "align", scope: !4216, file: !395, line: 250, type: !32)
!4236 = !DILocalVariable(name: "str_ptr_pos", scope: !4216, file: !395, line: 251, type: !311)
!4237 = !DILocalVariable(name: "str_ptr_arg", scope: !4216, file: !395, line: 252, type: !311)
!4238 = !DILocalVariable(name: "s_idx", scope: !4216, file: !395, line: 253, type: !32)
!4239 = !DILocalVariable(name: "s_rw_cnt", scope: !4216, file: !395, line: 254, type: !32)
!4240 = !DILocalVariable(name: "s_ro_cnt", scope: !4216, file: !395, line: 255, type: !32)
!4241 = !DILocalVariable(name: "arg_idx", scope: !4216, file: !395, line: 256, type: !125)
!4242 = !DILocalVariable(name: "i", scope: !4216, file: !395, line: 257, type: !32)
!4243 = !DILocalVariable(name: "s", scope: !4216, file: !395, line: 258, type: !140)
!4244 = !DILocalVariable(name: "parsing", scope: !4216, file: !395, line: 259, type: !153)
!4245 = !DILocalVariable(name: "rws_pos_en", scope: !4216, file: !395, line: 263, type: !153)
!4246 = !DILocalVariable(name: "fros_cnt", scope: !4216, file: !395, line: 268, type: !125)
!4247 = !DILocalVariable(name: "is_str_arg", scope: !4216, file: !395, line: 269, type: !153)
!4248 = !DILocalVariable(name: "pkg_hdr", scope: !4216, file: !395, line: 270, type: !4249)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 32)
!4250 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4251, line: 78, size: 32, elements: !4252)
!4251 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4252 = !{!4253, !4260}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4250, file: !4251, line: 80, baseType: !4254, size: 32)
!4254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4251, line: 45, size: 32, elements: !4255)
!4255 = !{!4256, !4257, !4258, !4259}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4254, file: !4251, line: 47, baseType: !150, size: 8)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4254, file: !4251, line: 50, baseType: !150, size: 8, offset: 8)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4254, file: !4251, line: 53, baseType: !150, size: 8, offset: 16)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4254, file: !4251, line: 56, baseType: !150, size: 8, offset: 24)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4250, file: !4251, line: 82, baseType: !124, size: 32)
!4261 = !DILocalVariable(name: "v", scope: !4262, file: !395, line: 567, type: !4266)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !395, line: 562, column: 14)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !395, line: 481, column: 18)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !395, line: 466, column: 3)
!4265 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 343, column: 15)
!4266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4216, file: !395, line: 567, size: 64, elements: !4267)
!4267 = !{!4268, !4269}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4266, file: !395, line: 567, baseType: !385, size: 64)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4266, file: !395, line: 567, baseType: !383, size: 64)
!4270 = !DILocalVariable(name: "is_ro", scope: !4271, file: !395, line: 620, type: !153)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !395, line: 613, column: 19)
!4272 = distinct !DILexicalBlock(scope: !4265, file: !395, line: 613, column: 7)
!4273 = !DILocalVariable(name: "do_ro", scope: !4271, file: !395, line: 621, type: !153)
!4274 = !DILocalVariable(name: "s_ptr_idx", scope: !4275, file: !395, line: 626, type: !208)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !395, line: 625, column: 11)
!4276 = distinct !DILexicalBlock(scope: !4271, file: !395, line: 623, column: 8)
!4277 = !DILocalVariable(name: "v", scope: !4278, file: !395, line: 684, type: !125)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !395, line: 683, column: 35)
!4279 = distinct !DILexicalBlock(scope: !4272, file: !395, line: 683, column: 14)
!4280 = !DILocalVariable(name: "v", scope: !4281, file: !395, line: 691, type: !389)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !395, line: 690, column: 36)
!4282 = distinct !DILexicalBlock(scope: !4279, file: !395, line: 690, column: 14)
!4283 = !DILocalVariable(name: "v", scope: !4284, file: !395, line: 698, type: !391)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !395, line: 697, column: 41)
!4285 = distinct !DILexicalBlock(scope: !4282, file: !395, line: 697, column: 14)
!4286 = !DILocalVariable(name: "pos", scope: !4287, file: !395, line: 762, type: !150)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !395, line: 757, column: 31)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !395, line: 757, column: 3)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !395, line: 757, column: 3)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !395, line: 756, column: 16)
!4291 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 756, column: 6)
!4292 = !DILabel(scope: !4271, name: "process_string", file: !395, line: 615)
!4293 = !DILocation(line: 0, scope: !4216)
!4294 = !DILocation(line: 251, column: 2, scope: !4216)
!4295 = !DILocation(line: 251, column: 10, scope: !4216)
!4296 = !DILocation(line: 252, column: 2, scope: !4216)
!4297 = !DILocation(line: 252, column: 10, scope: !4216)
!4298 = !DILocation(line: 263, column: 29, scope: !4216)
!4299 = !DILocation(line: 263, column: 21, scope: !4216)
!4300 = !DILocation(line: 268, column: 21, scope: !4216)
!4301 = !DILocation(line: 268, column: 19, scope: !4216)
!4302 = !DILocation(line: 273, column: 6, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 273, column: 6)
!4304 = !DILocation(line: 273, column: 26, scope: !4303)
!4305 = !DILocation(line: 273, column: 6, scope: !4216)
!4306 = !DILocation(line: 297, column: 6, scope: !4216)
!4307 = !DILocation(line: 305, column: 11, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 305, column: 6)
!4309 = !DILocation(line: 305, column: 6, scope: !4216)
!4310 = !DILocation(line: 327, column: 19, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 327, column: 6)
!4312 = !DILocation(line: 327, column: 22, scope: !4311)
!4313 = !DILocation(line: 327, column: 33, scope: !4311)
!4314 = !DILocation(line: 327, column: 50, scope: !4311)
!4315 = !DILocation(line: 327, column: 6, scope: !4216)
!4316 = !DILocation(line: 338, column: 9, scope: !4216)
!4317 = !DILocation(line: 341, column: 2, scope: !4216)
!4318 = !DILocation(line: 472, column: 8, scope: !4264)
!4319 = !DILocation(line: 473, column: 14, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !395, line: 473, column: 9)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !395, line: 472, column: 18)
!4322 = distinct !DILexicalBlock(scope: !4264, file: !395, line: 472, column: 8)
!4323 = !DILocation(line: 473, column: 9, scope: !4321)
!4324 = !DILocation(line: 479, column: 5, scope: !4321)
!4325 = !DILocation(line: 468, column: 9, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4264, file: !395, line: 468, column: 8)
!4327 = !DILocation(line: 468, column: 8, scope: !4326)
!4328 = !DILocation(line: 468, column: 15, scope: !4326)
!4329 = !DILocation(line: 468, column: 8, scope: !4264)
!4330 = distinct !{!4330, !4331, !4332}
!4331 = !DILocation(line: 343, column: 2, scope: !4216)
!4332 = !DILocation(line: 712, column: 2, scope: !4216)
!4333 = !DILocation(line: 481, column: 4, scope: !4264)
!4334 = !DILocation(line: 484, column: 12, scope: !4263)
!4335 = !DILocation(line: 485, column: 5, scope: !4263)
!4336 = !DILocation(line: 505, column: 5, scope: !4263)
!4337 = !DILocation(line: 518, column: 5, scope: !4263)
!4338 = !DILocation(line: 523, column: 5, scope: !4263)
!4339 = !DILocation(line: 532, column: 9, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4263, file: !395, line: 532, column: 9)
!4341 = !DILocation(line: 532, column: 17, scope: !4340)
!4342 = !DILocation(line: 532, column: 9, scope: !4263)
!4343 = !DILocation(line: 533, column: 10, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !395, line: 533, column: 10)
!4345 = distinct !DILexicalBlock(scope: !4340, file: !395, line: 532, column: 25)
!4346 = !DILocation(line: 533, column: 18, scope: !4344)
!4347 = !DILocation(line: 0, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 569, column: 9)
!4349 = !DILocation(line: 0, scope: !4262)
!4350 = !DILocation(line: 579, column: 20, scope: !4262)
!4351 = !DILocation(line: 579, column: 11, scope: !4262)
!4352 = !DILocation(line: 580, column: 9, scope: !4262)
!4353 = !DILocation(line: 582, column: 21, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !395, line: 582, column: 10)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !395, line: 580, column: 23)
!4356 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 580, column: 9)
!4357 = !DILocation(line: 582, column: 28, scope: !4354)
!4358 = !DILocation(line: 582, column: 10, scope: !4355)
!4359 = !DILocation(line: 0, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !395, line: 587, column: 17)
!4361 = distinct !DILexicalBlock(scope: !4355, file: !395, line: 585, column: 10)
!4362 = !DILocation(line: 593, column: 9, scope: !4262)
!4363 = !DILocation(line: 600, column: 5, scope: !4263)
!4364 = !DILocation(line: 605, column: 18, scope: !4265)
!4365 = !DILocation(line: 605, column: 9, scope: !4265)
!4366 = !DILocation(line: 608, column: 20, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4265, file: !395, line: 608, column: 7)
!4368 = !DILocation(line: 608, column: 23, scope: !4367)
!4369 = !DILocation(line: 608, column: 34, scope: !4367)
!4370 = !DILocation(line: 608, column: 41, scope: !4367)
!4371 = !DILocation(line: 608, column: 7, scope: !4265)
!4372 = !DILocation(line: 613, column: 7, scope: !4265)
!4373 = !DILocation(line: 614, column: 8, scope: !4271)
!4374 = !DILocation(line: 614, column: 4, scope: !4271)
!4375 = !DILocation(line: 255, column: 15, scope: !4216)
!4376 = !DILocation(line: 256, column: 6, scope: !4216)
!4377 = !DILocation(line: 254, column: 15, scope: !4216)
!4378 = !DILocation(line: 253, column: 15, scope: !4216)
!4379 = !DILocation(line: 320, column: 7, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4308, file: !395, line: 305, column: 20)
!4381 = !DILocation(line: 615, column: 1, scope: !4271)
!4382 = !DILocation(line: 616, column: 8, scope: !4271)
!4383 = !DILocation(line: 617, column: 5, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !395, line: 616, column: 22)
!4385 = distinct !DILexicalBlock(scope: !4271, file: !395, line: 616, column: 8)
!4386 = !DILocation(line: 617, column: 25, scope: !4384)
!4387 = !DILocation(line: 618, column: 4, scope: !4384)
!4388 = !DILocation(line: 620, column: 26, scope: !4271)
!4389 = !DILocation(line: 620, column: 29, scope: !4271)
!4390 = !DILocation(line: 620, column: 17, scope: !4271)
!4391 = !DILocation(line: 620, column: 43, scope: !4271)
!4392 = !DILocation(line: 0, scope: !4271)
!4393 = !DILocation(line: 623, column: 14, scope: !4276)
!4394 = !DILocation(line: 626, column: 26, scope: !4275)
!4395 = !DILocation(line: 626, column: 37, scope: !4275)
!4396 = !DILocation(line: 0, scope: !4275)
!4397 = !DILocation(line: 634, column: 15, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4275, file: !395, line: 634, column: 9)
!4399 = !DILocation(line: 644, column: 9, scope: !4275)
!4400 = !DILocation(line: 649, column: 27, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !395, line: 644, column: 23)
!4402 = distinct !DILexicalBlock(scope: !4275, file: !395, line: 644, column: 9)
!4403 = !DILocation(line: 649, column: 6, scope: !4401)
!4404 = !DILocation(line: 649, column: 25, scope: !4401)
!4405 = !DILocation(line: 650, column: 27, scope: !4401)
!4406 = !DILocation(line: 650, column: 6, scope: !4401)
!4407 = !DILocation(line: 650, column: 25, scope: !4401)
!4408 = !DILocation(line: 651, column: 10, scope: !4401)
!4409 = !DILocation(line: 653, column: 26, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !395, line: 651, column: 17)
!4411 = distinct !DILexicalBlock(scope: !4401, file: !395, line: 651, column: 10)
!4412 = !DILocation(line: 654, column: 15, scope: !4410)
!4413 = !DILocation(line: 655, column: 6, scope: !4410)
!4414 = !DILocation(line: 656, column: 15, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4411, file: !395, line: 655, column: 13)
!4416 = !DILocation(line: 658, column: 16, scope: !4402)
!4417 = !DILocation(line: 663, column: 10, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !395, line: 658, column: 23)
!4419 = distinct !DILexicalBlock(scope: !4402, file: !395, line: 658, column: 16)
!4420 = !DILocation(line: 664, column: 5, scope: !4418)
!4421 = !DILocation(line: 664, column: 16, scope: !4419)
!4422 = !DILocation(line: 669, column: 10, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4424, file: !395, line: 664, column: 28)
!4424 = distinct !DILexicalBlock(scope: !4419, file: !395, line: 664, column: 16)
!4425 = !DILocation(line: 670, column: 5, scope: !4423)
!4426 = !DILocation(line: 675, column: 13, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4424, file: !395, line: 670, column: 12)
!4428 = !DILocation(line: 675, column: 27, scope: !4427)
!4429 = !DILocation(line: 675, column: 10, scope: !4427)
!4430 = !DILocation(line: 678, column: 10, scope: !4275)
!4431 = !DILocation(line: 680, column: 8, scope: !4271)
!4432 = !DILocation(line: 683, column: 14, scope: !4272)
!4433 = !DILocation(line: 684, column: 12, scope: !4278)
!4434 = !DILocation(line: 0, scope: !4278)
!4435 = !DILocation(line: 686, column: 8, scope: !4278)
!4436 = !DILocation(line: 687, column: 5, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !395, line: 686, column: 22)
!4438 = distinct !DILexicalBlock(scope: !4278, file: !395, line: 686, column: 8)
!4439 = !DILocation(line: 687, column: 17, scope: !4437)
!4440 = !DILocation(line: 688, column: 4, scope: !4437)
!4441 = !DILocation(line: 698, column: 18, scope: !4284)
!4442 = !DILocation(line: 0, scope: !4284)
!4443 = !DILocation(line: 700, column: 8, scope: !4284)
!4444 = !DILocation(line: 704, column: 6, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !395, line: 703, column: 12)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !395, line: 701, column: 9)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !395, line: 700, column: 22)
!4448 = distinct !DILexicalBlock(scope: !4284, file: !395, line: 700, column: 8)
!4449 = !DILocation(line: 704, column: 24, scope: !4445)
!4450 = !DILocation(line: 706, column: 4, scope: !4447)
!4451 = !DILocation(line: 0, scope: !4279)
!4452 = !DILocation(line: 0, scope: !4265)
!4453 = !DILocation(line: 720, column: 6, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 720, column: 6)
!4455 = !DILocation(line: 720, column: 17, scope: !4454)
!4456 = !DILocation(line: 720, column: 31, scope: !4454)
!4457 = !DILocation(line: 720, column: 6, scope: !4216)
!4458 = !DILocation(line: 729, column: 6, scope: !4216)
!4459 = !DILocation(line: 730, column: 21, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !395, line: 729, column: 20)
!4461 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 729, column: 6)
!4462 = !DILocation(line: 730, column: 27, scope: !4460)
!4463 = !DILocation(line: 730, column: 3, scope: !4460)
!4464 = !DILocation(line: 737, column: 22, scope: !4216)
!4465 = !DILocation(line: 737, column: 20, scope: !4216)
!4466 = !DILocation(line: 0, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 739, column: 6)
!4468 = !DILocation(line: 745, column: 17, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4467, file: !395, line: 743, column: 9)
!4470 = !DILocation(line: 745, column: 25, scope: !4469)
!4471 = !DILocation(line: 746, column: 17, scope: !4469)
!4472 = !DILocation(line: 746, column: 28, scope: !4469)
!4473 = !DILocation(line: 749, column: 29, scope: !4216)
!4474 = !DILocation(line: 749, column: 16, scope: !4216)
!4475 = !DILocation(line: 749, column: 27, scope: !4216)
!4476 = !DILocation(line: 756, column: 6, scope: !4291)
!4477 = !DILocation(line: 756, column: 6, scope: !4216)
!4478 = !DILocation(line: 757, column: 3, scope: !4289)
!4479 = !DILocation(line: 758, column: 10, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4287, file: !395, line: 758, column: 8)
!4481 = !DILocation(line: 758, column: 25, scope: !4480)
!4482 = !DILocation(line: 758, column: 8, scope: !4287)
!4483 = !DILocation(line: 0, scope: !4287)
!4484 = !DILocation(line: 765, column: 8, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4287, file: !395, line: 765, column: 8)
!4486 = !DILocation(line: 765, column: 19, scope: !4485)
!4487 = !DILocation(line: 765, column: 23, scope: !4485)
!4488 = !DILocation(line: 765, column: 8, scope: !4287)
!4489 = !DILocation(line: 762, column: 33, scope: !4287)
!4490 = !DILocation(line: 769, column: 8, scope: !4287)
!4491 = !DILocation(line: 769, column: 11, scope: !4287)
!4492 = !DILocation(line: 757, column: 27, scope: !4288)
!4493 = !DILocation(line: 757, column: 17, scope: !4288)
!4494 = distinct !{!4494, !4478, !4495}
!4495 = !DILocation(line: 770, column: 3, scope: !4289)
!4496 = !DILocation(line: 774, column: 16, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !395, line: 774, column: 2)
!4498 = distinct !DILexicalBlock(scope: !4216, file: !395, line: 774, column: 2)
!4499 = !DILocation(line: 774, column: 2, scope: !4498)
!4500 = !DILocation(line: 776, column: 16, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !395, line: 776, column: 7)
!4502 = distinct !DILexicalBlock(scope: !4497, file: !395, line: 774, column: 30)
!4503 = !DILocation(line: 776, column: 19, scope: !4501)
!4504 = !DILocation(line: 776, column: 34, scope: !4501)
!4505 = !DILocation(line: 776, column: 7, scope: !4502)
!4506 = !DILocation(line: 780, column: 7, scope: !4502)
!4507 = !DILocation(line: 782, column: 13, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !395, line: 780, column: 19)
!4509 = distinct !DILexicalBlock(scope: !4502, file: !395, line: 780, column: 7)
!4510 = !DILocation(line: 782, column: 8, scope: !4508)
!4511 = !DILocation(line: 782, column: 11, scope: !4508)
!4512 = !DILocation(line: 783, column: 3, scope: !4508)
!4513 = !DILocation(line: 785, column: 26, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4509, file: !395, line: 783, column: 10)
!4515 = !DILocation(line: 785, column: 41, scope: !4514)
!4516 = !DILocation(line: 785, column: 24, scope: !4514)
!4517 = !DILocation(line: 785, column: 8, scope: !4514)
!4518 = !DILocation(line: 787, column: 52, scope: !4514)
!4519 = !DILocation(line: 789, column: 11, scope: !4514)
!4520 = !DILocation(line: 789, column: 21, scope: !4514)
!4521 = !DILocation(line: 0, scope: !4509)
!4522 = !DILocation(line: 793, column: 7, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4502, file: !395, line: 793, column: 7)
!4524 = !DILocation(line: 793, column: 18, scope: !4523)
!4525 = !DILocation(line: 793, column: 22, scope: !4523)
!4526 = !DILocation(line: 793, column: 29, scope: !4523)
!4527 = !DILocation(line: 793, column: 7, scope: !4502)
!4528 = !DILocation(line: 797, column: 12, scope: !4502)
!4529 = !DILocation(line: 797, column: 7, scope: !4502)
!4530 = !DILocation(line: 797, column: 10, scope: !4502)
!4531 = !DILocation(line: 799, column: 3, scope: !4502)
!4532 = !DILocation(line: 800, column: 7, scope: !4502)
!4533 = !DILocation(line: 801, column: 2, scope: !4502)
!4534 = !DILocation(line: 338, column: 4, scope: !4216)
!4535 = !DILocation(line: 774, column: 26, scope: !4497)
!4536 = distinct !{!4536, !4499, !4537}
!4537 = !DILocation(line: 801, column: 2, scope: !4498)
!4538 = !DILocation(line: 808, column: 9, scope: !4216)
!4539 = !DILocation(line: 808, column: 2, scope: !4216)
!4540 = !DILocation(line: 813, column: 1, scope: !4216)
!4541 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4542, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4544)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!153, !140}
!4544 = !{!4545}
!4545 = !DILocalVariable(name: "addr", arg: 1, scope: !4541, file: !395, line: 33, type: !140)
!4546 = !DILocation(line: 0, scope: !4541)
!4547 = !DILocation(line: 41, column: 9, scope: !4541)
!4548 = !DILocation(line: 41, column: 2, scope: !4541)
!4549 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4550, file: !4550, line: 24, type: !4551, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4553)
!4550 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!153, !13}
!4553 = !{!4554}
!4554 = !DILocalVariable(name: "addr", arg: 1, scope: !4549, file: !4550, line: 24, type: !13)
!4555 = !DILocation(line: 0, scope: !4549)
!4556 = !DILocation(line: 49, column: 30, scope: !4549)
!4557 = !DILocation(line: 49, column: 57, scope: !4549)
!4558 = !DILocation(line: 49, column: 2, scope: !4549)
!4559 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4560, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!125, !124, !272, !208, !140, null}
!4562 = !{!4563, !4564, !4565, !4566, !4567, !4568}
!4563 = !DILocalVariable(name: "packaged", arg: 1, scope: !4559, file: !395, line: 815, type: !124)
!4564 = !DILocalVariable(name: "len", arg: 2, scope: !4559, file: !395, line: 815, type: !272)
!4565 = !DILocalVariable(name: "flags", arg: 3, scope: !4559, file: !395, line: 815, type: !208)
!4566 = !DILocalVariable(name: "format", arg: 4, scope: !4559, file: !395, line: 816, type: !140)
!4567 = !DILocalVariable(name: "ap", scope: !4559, file: !395, line: 818, type: !4219)
!4568 = !DILocalVariable(name: "ret", scope: !4559, file: !395, line: 819, type: !125)
!4569 = !DILocation(line: 0, scope: !4559)
!4570 = !DILocation(line: 818, column: 2, scope: !4559)
!4571 = !DILocation(line: 818, column: 10, scope: !4559)
!4572 = !DILocation(line: 821, column: 2, scope: !4559)
!4573 = !DILocation(line: 822, column: 8, scope: !4559)
!4574 = !DILocation(line: 823, column: 2, scope: !4559)
!4575 = !DILocation(line: 825, column: 1, scope: !4559)
!4576 = !DILocation(line: 824, column: 2, scope: !4559)
!4577 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4578, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4588)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!125, !4580, !4584, !124, !124}
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4251, line: 297, baseType: !4581)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 32)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!125, null}
!4584 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4251, line: 328, baseType: !4585)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 32)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!125, !4580, !124, !140, !4219}
!4588 = !{!4589, !4590, !4591, !4592, !4593, !4594, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607}
!4589 = !DILocalVariable(name: "out", arg: 1, scope: !4577, file: !395, line: 827, type: !4580)
!4590 = !DILocalVariable(name: "formatter", arg: 2, scope: !4577, file: !395, line: 828, type: !4584)
!4591 = !DILocalVariable(name: "ctx", arg: 3, scope: !4577, file: !395, line: 829, type: !124)
!4592 = !DILocalVariable(name: "packaged", arg: 4, scope: !4577, file: !395, line: 829, type: !124)
!4593 = !DILocalVariable(name: "buf", scope: !4577, file: !395, line: 831, type: !184)
!4594 = !DILocalVariable(name: "hdr", scope: !4577, file: !395, line: 832, type: !4595)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 32)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4251, line: 96, size: 64, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4596, file: !4251, line: 98, baseType: !4250, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4596, file: !4251, line: 101, baseType: !393, size: 32, offset: 32)
!4600 = !DILocalVariable(name: "s", scope: !4577, file: !395, line: 833, type: !393)
!4601 = !DILocalVariable(name: "ps", scope: !4577, file: !395, line: 833, type: !392)
!4602 = !DILocalVariable(name: "i", scope: !4577, file: !395, line: 834, type: !32)
!4603 = !DILocalVariable(name: "args_size", scope: !4577, file: !395, line: 834, type: !32)
!4604 = !DILocalVariable(name: "s_nbr", scope: !4577, file: !395, line: 834, type: !32)
!4605 = !DILocalVariable(name: "ros_nbr", scope: !4577, file: !395, line: 834, type: !32)
!4606 = !DILocalVariable(name: "rws_nbr", scope: !4577, file: !395, line: 834, type: !32)
!4607 = !DILocalVariable(name: "s_idx", scope: !4577, file: !395, line: 834, type: !32)
!4608 = !DILocation(line: 0, scope: !4577)
!4609 = !DILocation(line: 836, column: 10, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4577, file: !395, line: 836, column: 6)
!4611 = !DILocation(line: 836, column: 6, scope: !4577)
!4612 = !DILocation(line: 842, column: 28, scope: !4577)
!4613 = !DILocation(line: 842, column: 14, scope: !4577)
!4614 = !DILocation(line: 852, column: 16, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !395, line: 852, column: 2)
!4616 = distinct !DILexicalBlock(scope: !4577, file: !395, line: 852, column: 2)
!4617 = !DILocation(line: 852, column: 2, scope: !4616)
!4618 = !DILocation(line: 841, column: 28, scope: !4577)
!4619 = !DILocation(line: 841, column: 14, scope: !4577)
!4620 = !DILocation(line: 841, column: 32, scope: !4577)
!4621 = !DILocation(line: 847, column: 19, scope: !4577)
!4622 = !DILocation(line: 843, column: 28, scope: !4577)
!4623 = !DILocation(line: 843, column: 14, scope: !4577)
!4624 = !DILocation(line: 847, column: 31, scope: !4577)
!4625 = !DILocation(line: 844, column: 28, scope: !4577)
!4626 = !DILocation(line: 844, column: 14, scope: !4577)
!4627 = !DILocation(line: 847, column: 45, scope: !4577)
!4628 = !DILocation(line: 847, column: 41, scope: !4577)
!4629 = !DILocation(line: 854, column: 24, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4615, file: !395, line: 852, column: 30)
!4631 = !DILocation(line: 854, column: 11, scope: !4630)
!4632 = !DILocation(line: 855, column: 30, scope: !4630)
!4633 = !DILocation(line: 855, column: 22, scope: !4630)
!4634 = !DILocation(line: 855, column: 8, scope: !4630)
!4635 = !DILocation(line: 857, column: 7, scope: !4630)
!4636 = !DILocation(line: 859, column: 8, scope: !4630)
!4637 = !DILocation(line: 859, column: 18, scope: !4630)
!4638 = !DILocation(line: 859, column: 5, scope: !4630)
!4639 = !DILocation(line: 852, column: 26, scope: !4615)
!4640 = distinct !{!4640, !4617, !4641}
!4641 = !DILocation(line: 860, column: 2, scope: !4616)
!4642 = !DILocation(line: 863, column: 6, scope: !4577)
!4643 = !DILocation(line: 866, column: 56, scope: !4577)
!4644 = !DILocation(line: 866, column: 9, scope: !4577)
!4645 = !DILocation(line: 866, column: 2, scope: !4577)
!4646 = !DILocation(line: 867, column: 1, scope: !4577)
!4647 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4648, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4650)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!125, !4580, !4584, !124, !140, !124}
!4650 = !{!4651, !4652, !4653, !4654, !4655, !4656}
!4651 = !DILocalVariable(name: "out", arg: 1, scope: !4647, file: !395, line: 179, type: !4580)
!4652 = !DILocalVariable(name: "formatter", arg: 2, scope: !4647, file: !395, line: 180, type: !4584)
!4653 = !DILocalVariable(name: "ctx", arg: 3, scope: !4647, file: !395, line: 181, type: !124)
!4654 = !DILocalVariable(name: "fmt", arg: 4, scope: !4647, file: !395, line: 182, type: !140)
!4655 = !DILocalVariable(name: "buf", arg: 5, scope: !4647, file: !395, line: 182, type: !124)
!4656 = !DILocalVariable(name: "u", scope: !4647, file: !395, line: 187, type: !4657)
!4657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4647, file: !395, line: 184, size: 32, elements: !4658)
!4658 = !{!4659, !4660}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4657, file: !395, line: 185, baseType: !4219, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4657, file: !395, line: 186, baseType: !124, size: 32)
!4661 = !DILocation(line: 0, scope: !4647)
!4662 = !DILocation(line: 191, column: 9, scope: !4647)
!4663 = !DILocation(line: 191, column: 2, scope: !4647)
!4664 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4665, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4667)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!153, !140, !125}
!4667 = !{!4668, !4669, !4670, !4671, !4672}
!4668 = !DILocalVariable(name: "fmt", arg: 1, scope: !4664, file: !395, line: 881, type: !140)
!4669 = !DILocalVariable(name: "n", arg: 2, scope: !4664, file: !395, line: 881, type: !125)
!4670 = !DILocalVariable(name: "c", scope: !4664, file: !395, line: 883, type: !142)
!4671 = !DILocalVariable(name: "mod", scope: !4664, file: !395, line: 884, type: !153)
!4672 = !DILocalVariable(name: "cnt", scope: !4664, file: !395, line: 885, type: !125)
!4673 = !DILocation(line: 0, scope: !4664)
!4674 = !DILocation(line: 887, column: 14, scope: !4664)
!4675 = !DILocation(line: 887, column: 22, scope: !4664)
!4676 = !DILocation(line: 887, column: 2, scope: !4664)
!4677 = !DILocation(line: 887, column: 18, scope: !4664)
!4678 = !DILocation(line: 888, column: 7, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4664, file: !395, line: 887, column: 31)
!4680 = !DILocation(line: 889, column: 12, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !395, line: 889, column: 8)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 888, column: 12)
!4683 = distinct !DILexicalBlock(scope: !4679, file: !395, line: 888, column: 7)
!4684 = !DILocation(line: 889, column: 8, scope: !4682)
!4685 = !DILocation(line: 890, column: 11, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 890, column: 9)
!4687 = distinct !DILexicalBlock(scope: !4681, file: !395, line: 889, column: 18)
!4688 = !DILocation(line: 890, column: 9, scope: !4687)
!4689 = !DILocation(line: 892, column: 16, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4686, file: !395, line: 892, column: 16)
!4691 = !DILocation(line: 892, column: 16, scope: !4686)
!4692 = !DILocation(line: 895, column: 15, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4681, file: !395, line: 895, column: 15)
!4694 = !DILocation(line: 895, column: 15, scope: !4681)
!4695 = !DILocation(line: 900, column: 9, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4679, file: !395, line: 900, column: 7)
!4697 = !DILocation(line: 900, column: 7, scope: !4679)
!4698 = distinct !{!4698, !4676, !4699}
!4699 = !DILocation(line: 903, column: 2, scope: !4664)
!4700 = !DILocation(line: 906, column: 1, scope: !4664)
!4701 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4702, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4704)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!153, !142}
!4704 = !{!4705}
!4705 = !DILocalVariable(name: "c", arg: 1, scope: !4701, file: !395, line: 873, type: !142)
!4706 = !DILocation(line: 0, scope: !4701)
!4707 = !DILocation(line: 875, column: 19, scope: !4701)
!4708 = !DILocation(line: 875, column: 2, scope: !4701)
!4709 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4710, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4716)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{!125, !124, !272, !4712, !124, !208, !2995, !272}
!4712 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4251, line: 308, baseType: !4713)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 32)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!125, !13, !272, !124}
!4716 = !{!4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4734, !4735, !4736, !4737, !4738, !4744, !4747, !4748, !4749, !4751, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4767, !4770, !4771, !4772, !4773, !4774, !4775, !4777, !4780, !4781, !4782}
!4717 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4709, file: !395, line: 908, type: !124)
!4718 = !DILocalVariable(name: "in_len", arg: 2, scope: !4709, file: !395, line: 909, type: !272)
!4719 = !DILocalVariable(name: "cb", arg: 3, scope: !4709, file: !395, line: 910, type: !4712)
!4720 = !DILocalVariable(name: "ctx", arg: 4, scope: !4709, file: !395, line: 911, type: !124)
!4721 = !DILocalVariable(name: "flags", arg: 5, scope: !4709, file: !395, line: 912, type: !208)
!4722 = !DILocalVariable(name: "strl", arg: 6, scope: !4709, file: !395, line: 913, type: !2995)
!4723 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4709, file: !395, line: 914, type: !272)
!4724 = !DILocalVariable(name: "buf", scope: !4709, file: !395, line: 918, type: !184)
!4725 = !DILocalVariable(name: "buf32", scope: !4709, file: !395, line: 919, type: !1029)
!4726 = !DILocalVariable(name: "args_size", scope: !4709, file: !395, line: 920, type: !32)
!4727 = !DILocalVariable(name: "ros_nbr", scope: !4709, file: !395, line: 920, type: !32)
!4728 = !DILocalVariable(name: "rws_nbr", scope: !4709, file: !395, line: 920, type: !32)
!4729 = !DILocalVariable(name: "fmt_present", scope: !4709, file: !395, line: 921, type: !153)
!4730 = !DILocalVariable(name: "rw_cpy", scope: !4709, file: !395, line: 922, type: !153)
!4731 = !DILocalVariable(name: "ro_cpy", scope: !4709, file: !395, line: 923, type: !153)
!4732 = !DILocalVariable(name: "in_desc", scope: !4709, file: !395, line: 924, type: !4733)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 32)
!4734 = !DILocalVariable(name: "out_len", scope: !4709, file: !395, line: 960, type: !125)
!4735 = !DILocalVariable(name: "fmt", scope: !4709, file: !395, line: 965, type: !140)
!4736 = !DILocalVariable(name: "str_pos", scope: !4709, file: !395, line: 966, type: !184)
!4737 = !DILocalVariable(name: "strl_cnt", scope: !4709, file: !395, line: 967, type: !272)
!4738 = !DILocalVariable(name: "i", scope: !4739, file: !395, line: 973, type: !125)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !395, line: 973, column: 4)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !395, line: 972, column: 15)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 972, column: 7)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !395, line: 970, column: 18)
!4743 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 970, column: 6)
!4744 = !DILocalVariable(name: "str", scope: !4745, file: !395, line: 974, type: !140)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !395, line: 973, column: 38)
!4746 = distinct !DILexicalBlock(scope: !4739, file: !395, line: 973, column: 4)
!4747 = !DILocalVariable(name: "len", scope: !4745, file: !395, line: 975, type: !125)
!4748 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4742, file: !395, line: 990, type: !153)
!4749 = !DILocalVariable(name: "i", scope: !4750, file: !395, line: 995, type: !125)
!4750 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 995, column: 3)
!4751 = !DILocalVariable(name: "arg_idx", scope: !4752, file: !395, line: 996, type: !150)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !395, line: 995, column: 37)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !395, line: 995, column: 3)
!4754 = !DILocalVariable(name: "arg_pos", scope: !4752, file: !395, line: 997, type: !150)
!4755 = !DILocalVariable(name: "str", scope: !4752, file: !395, line: 998, type: !140)
!4756 = !DILocalVariable(name: "is_ro", scope: !4752, file: !395, line: 999, type: !153)
!4757 = !DILocalVariable(name: "len", scope: !4752, file: !395, line: 1000, type: !125)
!4758 = !DILocalVariable(name: "out_desc", scope: !4709, file: !395, line: 1038, type: !4254)
!4759 = !DILocalVariable(name: "cpy_str_pos", scope: !4709, file: !395, line: 1040, type: !311)
!4760 = !DILocalVariable(name: "keep_str_pos", scope: !4709, file: !395, line: 1042, type: !311)
!4761 = !DILocalVariable(name: "scpy_cnt", scope: !4709, file: !395, line: 1043, type: !150)
!4762 = !DILocalVariable(name: "keep_cnt", scope: !4709, file: !395, line: 1044, type: !150)
!4763 = !DILocalVariable(name: "dst", scope: !4709, file: !395, line: 1045, type: !184)
!4764 = !DILocalVariable(name: "rv", scope: !4709, file: !395, line: 1046, type: !125)
!4765 = !DILocalVariable(name: "i", scope: !4766, file: !395, line: 1074, type: !125)
!4766 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1074, column: 2)
!4767 = !DILocalVariable(name: "arg_idx", scope: !4768, file: !395, line: 1075, type: !150)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !395, line: 1074, column: 36)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !395, line: 1074, column: 2)
!4770 = !DILocalVariable(name: "arg_pos", scope: !4768, file: !395, line: 1076, type: !150)
!4771 = !DILocalVariable(name: "str", scope: !4768, file: !395, line: 1077, type: !140)
!4772 = !DILocalVariable(name: "is_ro", scope: !4768, file: !395, line: 1078, type: !153)
!4773 = !DILocalVariable(name: "in_desc_backup", scope: !4709, file: !395, line: 1114, type: !4254)
!4774 = !DILocalVariable(name: "strs_len", scope: !4709, file: !395, line: 1134, type: !272)
!4775 = !DILocalVariable(name: "i", scope: !4776, file: !395, line: 1143, type: !125)
!4776 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1143, column: 2)
!4777 = !DILocalVariable(name: "loc", scope: !4778, file: !395, line: 1144, type: !150)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !395, line: 1143, column: 37)
!4779 = distinct !DILexicalBlock(scope: !4776, file: !395, line: 1143, column: 2)
!4780 = !DILocalVariable(name: "str", scope: !4778, file: !395, line: 1145, type: !140)
!4781 = !DILocalVariable(name: "str_len", scope: !4778, file: !395, line: 1146, type: !227)
!4782 = !DILabel(scope: !4783, name: "calculate_string_length", file: !395, line: 1021)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !395, line: 1020, column: 56)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !395, line: 1020, column: 15)
!4785 = distinct !DILexicalBlock(scope: !4752, file: !395, line: 1014, column: 8)
!4786 = !DILocation(line: 0, scope: !4709)
!4787 = !DILocation(line: 919, column: 20, scope: !4709)
!4788 = !DILocation(line: 921, column: 27, scope: !4709)
!4789 = !DILocation(line: 921, column: 21, scope: !4709)
!4790 = !DILocation(line: 926, column: 18, scope: !4709)
!4791 = !DILocation(line: 926, column: 11, scope: !4709)
!4792 = !DILocation(line: 926, column: 34, scope: !4709)
!4793 = !DILocation(line: 931, column: 21, scope: !4709)
!4794 = !DILocation(line: 931, column: 12, scope: !4709)
!4795 = !DILocation(line: 932, column: 11, scope: !4709)
!4796 = !DILocation(line: 932, column: 19, scope: !4709)
!4797 = !DILocation(line: 938, column: 21, scope: !4709)
!4798 = !DILocation(line: 938, column: 12, scope: !4709)
!4799 = !DILocation(line: 939, column: 19, scope: !4709)
!4800 = !DILocation(line: 939, column: 23, scope: !4709)
!4801 = !DILocation(line: 946, column: 14, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 946, column: 6)
!4803 = !DILocation(line: 947, column: 7, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !395, line: 947, column: 7)
!4805 = distinct !DILexicalBlock(scope: !4802, file: !395, line: 946, column: 26)
!4806 = !DILocation(line: 947, column: 7, scope: !4805)
!4807 = !DILocation(line: 948, column: 4, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4804, file: !395, line: 947, column: 11)
!4809 = !DILocation(line: 949, column: 3, scope: !4808)
!4810 = !DILocation(line: 958, column: 23, scope: !4709)
!4811 = !DILocation(line: 958, column: 14, scope: !4709)
!4812 = !DILocation(line: 958, column: 27, scope: !4709)
!4813 = !DILocation(line: 965, column: 41, scope: !4709)
!4814 = !DILocation(line: 965, column: 20, scope: !4709)
!4815 = !DILocation(line: 966, column: 22, scope: !4709)
!4816 = !DILocation(line: 970, column: 9, scope: !4743)
!4817 = !DILocation(line: 970, column: 6, scope: !4709)
!4818 = !DILocation(line: 972, column: 7, scope: !4742)
!4819 = !DILocation(line: 0, scope: !4739)
!4820 = !DILocation(line: 973, column: 4, scope: !4739)
!4821 = !DILocation(line: 974, column: 46, scope: !4745)
!4822 = !DILocation(line: 974, column: 40, scope: !4745)
!4823 = !DILocation(line: 974, column: 23, scope: !4745)
!4824 = !DILocation(line: 0, scope: !4745)
!4825 = !DILocation(line: 975, column: 15, scope: !4745)
!4826 = !DILocation(line: 978, column: 14, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4745, file: !395, line: 978, column: 9)
!4828 = !DILocation(line: 979, column: 25, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4827, file: !395, line: 978, column: 38)
!4830 = !DILocation(line: 979, column: 19, scope: !4829)
!4831 = !DILocation(line: 979, column: 6, scope: !4829)
!4832 = !DILocation(line: 979, column: 23, scope: !4829)
!4833 = !DILocation(line: 980, column: 5, scope: !4829)
!4834 = !DILocation(line: 981, column: 13, scope: !4745)
!4835 = !DILocation(line: 982, column: 12, scope: !4745)
!4836 = !DILocation(line: 973, column: 34, scope: !4746)
!4837 = !DILocation(line: 973, column: 22, scope: !4746)
!4838 = distinct !{!4838, !4820, !4839}
!4839 = !DILocation(line: 983, column: 4, scope: !4739)
!4840 = !DILocation(line: 985, column: 16, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !395, line: 985, column: 8)
!4842 = distinct !DILexicalBlock(scope: !4741, file: !395, line: 984, column: 10)
!4843 = !DILocation(line: 967, column: 9, scope: !4709)
!4844 = !DILocation(line: 971, column: 11, scope: !4742)
!4845 = !DILocation(line: 0, scope: !4742)
!4846 = !DILocation(line: 0, scope: !4750)
!4847 = !DILocation(line: 995, column: 21, scope: !4753)
!4848 = !DILocation(line: 995, column: 3, scope: !4750)
!4849 = !DILocation(line: 990, column: 34, scope: !4742)
!4850 = !DILocation(line: 990, column: 26, scope: !4742)
!4851 = !DILocation(line: 996, column: 30, scope: !4752)
!4852 = !DILocation(line: 0, scope: !4752)
!4853 = !DILocation(line: 997, column: 30, scope: !4752)
!4854 = !DILocation(line: 997, column: 22, scope: !4752)
!4855 = !DILocation(line: 998, column: 39, scope: !4752)
!4856 = !DILocation(line: 998, column: 22, scope: !4752)
!4857 = !DILocation(line: 999, column: 17, scope: !4752)
!4858 = !DILocation(line: 1002, column: 20, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4752, file: !395, line: 1002, column: 8)
!4860 = !DILocation(line: 996, column: 22, scope: !4752)
!4861 = !DILocation(line: 1002, column: 35, scope: !4859)
!4862 = !DILocation(line: 1002, column: 23, scope: !4859)
!4863 = !DILocation(line: 1002, column: 8, scope: !4752)
!4864 = !DILocation(line: 1003, column: 5, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !395, line: 1003, column: 5)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !395, line: 1003, column: 5)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !395, line: 1003, column: 5)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !395, line: 1003, column: 5)
!4869 = distinct !DILexicalBlock(scope: !4859, file: !395, line: 1002, column: 45)
!4870 = !DILocation(line: 1010, column: 13, scope: !4869)
!4871 = !DILocation(line: 1011, column: 5, scope: !4869)
!4872 = !DILocation(line: 1014, column: 8, scope: !4752)
!4873 = !DILocation(line: 1015, column: 9, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4785, file: !395, line: 1014, column: 15)
!4875 = !DILocation(line: 1018, column: 14, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !395, line: 1017, column: 12)
!4877 = distinct !DILexicalBlock(scope: !4874, file: !395, line: 1015, column: 9)
!4878 = !DILocation(line: 1020, column: 4, scope: !4874)
!4879 = !DILocation(line: 1020, column: 15, scope: !4785)
!4880 = !DILocation(line: 1021, column: 1, scope: !4783)
!4881 = !DILocation(line: 1022, column: 11, scope: !4783)
!4882 = !DILocation(line: 1025, column: 14, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4783, file: !395, line: 1025, column: 9)
!4884 = !DILocation(line: 1026, column: 25, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4883, file: !395, line: 1025, column: 38)
!4886 = !DILocation(line: 1026, column: 19, scope: !4885)
!4887 = !DILocation(line: 1026, column: 6, scope: !4885)
!4888 = !DILocation(line: 1026, column: 23, scope: !4885)
!4889 = !DILocation(line: 1027, column: 5, scope: !4885)
!4890 = !DILocation(line: 1031, column: 21, scope: !4783)
!4891 = !DILocation(line: 1031, column: 13, scope: !4783)
!4892 = !DILocation(line: 1032, column: 4, scope: !4783)
!4893 = !DILocation(line: 995, column: 33, scope: !4753)
!4894 = distinct !{!4894, !4848, !4895}
!4895 = !DILocation(line: 1033, column: 3, scope: !4750)
!4896 = !DILocation(line: 1040, column: 10, scope: !4709)
!4897 = !DILocation(line: 1042, column: 10, scope: !4709)
!4898 = !DILocation(line: 1052, column: 6, scope: !4709)
!4899 = !DILocation(line: 1055, column: 9, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !395, line: 1052, column: 14)
!4901 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1052, column: 6)
!4902 = !DILocation(line: 1056, column: 2, scope: !4900)
!4903 = !DILocation(line: 1056, column: 21, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4901, file: !395, line: 1056, column: 13)
!4905 = !DILocation(line: 1066, column: 3, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !395, line: 1065, column: 11)
!4907 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1065, column: 6)
!4908 = !DILocation(line: 1067, column: 2, scope: !4906)
!4909 = !DILocation(line: 1068, column: 10, scope: !4709)
!4910 = !DILocation(line: 0, scope: !4766)
!4911 = !DILocation(line: 1074, column: 20, scope: !4769)
!4912 = !DILocation(line: 1074, column: 2, scope: !4766)
!4913 = !DILocation(line: 1110, column: 24, scope: !4709)
!4914 = !DILocation(line: 1053, column: 12, scope: !4900)
!4915 = !DILocation(line: 1054, column: 12, scope: !4900)
!4916 = !DILocation(line: 1108, column: 30, scope: !4709)
!4917 = !DILocation(line: 1108, column: 40, scope: !4709)
!4918 = !DILocation(line: 1108, column: 38, scope: !4709)
!4919 = !DILocation(line: 1109, column: 31, scope: !4709)
!4920 = !DILocation(line: 1109, column: 24, scope: !4709)
!4921 = !DILocation(line: 1110, column: 31, scope: !4709)
!4922 = !DILocation(line: 1114, column: 31, scope: !4709)
!4923 = !DILocation(line: 1114, column: 48, scope: !4709)
!4924 = !DILocation(line: 1115, column: 13, scope: !4709)
!4925 = !DILocation(line: 1118, column: 7, scope: !4709)
!4926 = !DILocation(line: 1119, column: 9, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1119, column: 6)
!4928 = !DILocation(line: 1119, column: 6, scope: !4709)
!4929 = !DILocation(line: 1075, column: 29, scope: !4768)
!4930 = !DILocation(line: 1075, column: 21, scope: !4768)
!4931 = !DILocation(line: 0, scope: !4768)
!4932 = !DILocation(line: 1076, column: 29, scope: !4768)
!4933 = !DILocation(line: 1076, column: 21, scope: !4768)
!4934 = !DILocation(line: 1077, column: 38, scope: !4768)
!4935 = !DILocation(line: 1077, column: 21, scope: !4768)
!4936 = !DILocation(line: 1078, column: 16, scope: !4768)
!4937 = !DILocation(line: 1080, column: 19, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4768, file: !395, line: 1080, column: 7)
!4939 = !DILocation(line: 1080, column: 34, scope: !4938)
!4940 = !DILocation(line: 1080, column: 22, scope: !4938)
!4941 = !DILocation(line: 1080, column: 7, scope: !4768)
!4942 = !DILocation(line: 1084, column: 7, scope: !4768)
!4943 = !DILocation(line: 1085, column: 8, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !395, line: 1084, column: 14)
!4945 = distinct !DILexicalBlock(scope: !4768, file: !395, line: 1084, column: 7)
!4946 = !DILocation(line: 1087, column: 25, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !395, line: 1085, column: 49)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !395, line: 1085, column: 8)
!4949 = !DILocation(line: 1088, column: 4, scope: !4947)
!4950 = !DILocation(line: 1088, column: 15, scope: !4948)
!4951 = !DILocation(line: 1090, column: 26, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !395, line: 1088, column: 61)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !395, line: 1088, column: 15)
!4954 = !DILocation(line: 1091, column: 4, scope: !4952)
!4955 = !DILocation(line: 1095, column: 8, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4945, file: !395, line: 1094, column: 10)
!4957 = !DILocation(line: 1097, column: 25, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !395, line: 1095, column: 49)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !395, line: 1095, column: 8)
!4960 = !DILocation(line: 1098, column: 4, scope: !4958)
!4961 = !DILocation(line: 1100, column: 26, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4959, file: !395, line: 1098, column: 11)
!4963 = !DILocation(line: 1100, column: 5, scope: !4962)
!4964 = !DILocation(line: 1100, column: 30, scope: !4962)
!4965 = !DILocation(line: 1101, column: 26, scope: !4962)
!4966 = !DILocation(line: 0, scope: !4945)
!4967 = !DILocation(line: 1074, column: 32, scope: !4769)
!4968 = distinct !{!4968, !4912, !4969}
!4969 = !DILocation(line: 1104, column: 2, scope: !4766)
!4970 = !DILocation(line: 1124, column: 13, scope: !4709)
!4971 = !DILocation(line: 1127, column: 10, scope: !4709)
!4972 = !DILocation(line: 1127, column: 7, scope: !4709)
!4973 = !DILocation(line: 1128, column: 9, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1128, column: 6)
!4975 = !DILocation(line: 1128, column: 6, scope: !4709)
!4976 = !DILocation(line: 1134, column: 27, scope: !4709)
!4977 = !DILocation(line: 1136, column: 7, scope: !4709)
!4978 = !DILocation(line: 1137, column: 9, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 1137, column: 6)
!4980 = !DILocation(line: 1137, column: 6, scope: !4709)
!4981 = !DILocation(line: 1131, column: 10, scope: !4709)
!4982 = !DILocation(line: 1140, column: 10, scope: !4709)
!4983 = !DILocation(line: 0, scope: !4776)
!4984 = !DILocation(line: 1143, column: 20, scope: !4779)
!4985 = !DILocation(line: 1143, column: 2, scope: !4776)
!4986 = !DILocation(line: 1144, column: 3, scope: !4778)
!4987 = !DILocation(line: 1144, column: 17, scope: !4778)
!4988 = !DILocation(line: 0, scope: !4778)
!4989 = !DILocation(line: 1144, column: 11, scope: !4778)
!4990 = !DILocation(line: 1145, column: 38, scope: !4778)
!4991 = !DILocation(line: 1145, column: 21, scope: !4778)
!4992 = !DILocation(line: 1146, column: 22, scope: !4778)
!4993 = !DILocation(line: 1146, column: 29, scope: !4778)
!4994 = !DILocation(line: 1148, column: 8, scope: !4778)
!4995 = !DILocation(line: 1149, column: 10, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4778, file: !395, line: 1149, column: 7)
!4997 = !DILocation(line: 1149, column: 7, scope: !4778)
!4998 = !DILocation(line: 1154, column: 8, scope: !4778)
!4999 = !DILocation(line: 1155, column: 10, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4778, file: !395, line: 1155, column: 7)
!5001 = !DILocation(line: 1155, column: 7, scope: !4778)
!5002 = !DILocation(line: 1159, column: 2, scope: !4779)
!5003 = !DILocation(line: 1152, column: 11, scope: !4778)
!5004 = !DILocation(line: 1158, column: 11, scope: !4778)
!5005 = !DILocation(line: 1143, column: 33, scope: !4779)
!5006 = distinct !{!5006, !4985, !5007}
!5007 = !DILocation(line: 1159, column: 2, scope: !4776)
!5008 = !DILocation(line: 1162, column: 8, scope: !4709)
!5009 = !DILocation(line: 1164, column: 2, scope: !4709)
!5010 = !DILocation(line: 1165, column: 1, scope: !4709)
!5011 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !5012, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5014)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{!272, !124}
!5014 = !{!5015, !5016, !5017, !5018, !5019, !5020, !5021}
!5015 = !DILocalVariable(name: "packaged", arg: 1, scope: !5011, file: !395, line: 196, type: !124)
!5016 = !DILocalVariable(name: "buf", scope: !5011, file: !395, line: 200, type: !184)
!5017 = !DILocalVariable(name: "start", scope: !5011, file: !395, line: 201, type: !184)
!5018 = !DILocalVariable(name: "args_size", scope: !5011, file: !395, line: 202, type: !32)
!5019 = !DILocalVariable(name: "s_nbr", scope: !5011, file: !395, line: 202, type: !32)
!5020 = !DILocalVariable(name: "ros_nbr", scope: !5011, file: !395, line: 202, type: !32)
!5021 = !DILocalVariable(name: "i", scope: !5022, file: !395, line: 215, type: !125)
!5022 = distinct !DILexicalBlock(scope: !5011, file: !395, line: 215, column: 2)
!5023 = !DILocation(line: 0, scope: !5011)
!5024 = !DILocation(line: 204, column: 14, scope: !5011)
!5025 = !DILocation(line: 204, column: 21, scope: !5011)
!5026 = !DILocation(line: 205, column: 14, scope: !5011)
!5027 = !DILocation(line: 206, column: 14, scope: !5011)
!5028 = !DILocation(line: 209, column: 6, scope: !5011)
!5029 = !DILocation(line: 212, column: 6, scope: !5011)
!5030 = !DILocation(line: 0, scope: !5022)
!5031 = !DILocation(line: 215, column: 20, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5022, file: !395, line: 215, column: 2)
!5033 = !DILocation(line: 215, column: 2, scope: !5022)
!5034 = !DILocation(line: 220, column: 33, scope: !5011)
!5035 = !DILocation(line: 220, column: 2, scope: !5011)
!5036 = !DILocation(line: 216, column: 6, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5032, file: !395, line: 215, column: 34)
!5038 = !DILocation(line: 217, column: 10, scope: !5037)
!5039 = !DILocation(line: 217, column: 36, scope: !5037)
!5040 = !DILocation(line: 217, column: 7, scope: !5037)
!5041 = !DILocation(line: 215, column: 30, scope: !5032)
!5042 = distinct !{!5042, !5033, !5043}
!5043 = !DILocation(line: 218, column: 2, scope: !5022)
!5044 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5045, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!125, !4712, !124, !140, !227}
!5047 = !{!5048, !5049, !5050, !5051}
!5048 = !DILocalVariable(name: "cb", arg: 1, scope: !5044, file: !395, line: 223, type: !4712)
!5049 = !DILocalVariable(name: "ctx", arg: 2, scope: !5044, file: !395, line: 223, type: !124)
!5050 = !DILocalVariable(name: "str", arg: 3, scope: !5044, file: !395, line: 223, type: !140)
!5051 = !DILocalVariable(name: "strl", arg: 4, scope: !5044, file: !395, line: 223, type: !227)
!5052 = !DILocation(line: 0, scope: !5044)
!5053 = !DILocation(line: 225, column: 9, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5044, file: !395, line: 225, column: 6)
!5055 = !DILocation(line: 225, column: 6, scope: !5044)
!5056 = !DILocation(line: 226, column: 14, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5054, file: !395, line: 225, column: 18)
!5058 = !DILocation(line: 226, column: 12, scope: !5057)
!5059 = !DILocation(line: 226, column: 3, scope: !5057)
!5060 = !DILocation(line: 229, column: 14, scope: !5044)
!5061 = !DILocation(line: 229, column: 9, scope: !5044)
!5062 = !DILocation(line: 229, column: 27, scope: !5044)
!5063 = !DILocation(line: 229, column: 39, scope: !5044)
!5064 = !DILocation(line: 230, column: 17, scope: !5044)
!5065 = !DILocation(line: 230, column: 9, scope: !5044)
!5066 = !DILocation(line: 230, column: 2, scope: !5044)
!5067 = !DILocation(line: 231, column: 1, scope: !5044)
!5068 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5069)
!5069 = !{!5070}
!5070 = !DILocalVariable(name: "c", arg: 1, scope: !5068, file: !408, line: 45, type: !125)
!5071 = !DILocation(line: 0, scope: !5068)
!5072 = !DILocation(line: 50, column: 2, scope: !5068)
!5073 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5074, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{null, !409}
!5076 = !{!5077}
!5077 = !DILocalVariable(name: "fn", arg: 1, scope: !5073, file: !408, line: 63, type: !409)
!5078 = !DILocation(line: 0, scope: !5073)
!5079 = !DILocation(line: 65, column: 12, scope: !5073)
!5080 = !DILocation(line: 66, column: 1, scope: !5073)
!5081 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5082, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !639)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{!124}
!5084 = !DILocation(line: 78, column: 9, scope: !5081)
!5085 = !DILocation(line: 78, column: 2, scope: !5081)
!5086 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5087, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5095)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{null, !140, !5089}
!5089 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4220, line: 99, baseType: !5090)
!5090 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4220, line: 40, baseType: !5091)
!5091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5092)
!5092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5093)
!5093 = !{!5094}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5092, file: !408, line: 79, baseType: !124, size: 32)
!5095 = !{!5096, !5097, !5098}
!5096 = !DILocalVariable(name: "fmt", arg: 1, scope: !5086, file: !408, line: 113, type: !140)
!5097 = !DILocalVariable(name: "ap", arg: 2, scope: !5086, file: !408, line: 113, type: !5089)
!5098 = !DILocalVariable(name: "ctx", scope: !5099, file: !408, line: 121, type: !5101)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !408, line: 120, column: 27)
!5100 = distinct !DILexicalBlock(scope: !5086, file: !408, line: 120, column: 6)
!5101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5102)
!5102 = !{!5103, !5104}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5101, file: !408, line: 85, baseType: !32, size: 32)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5101, file: !408, line: 86, baseType: !5105, offset: 32)
!5105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5106)
!5106 = !{!5107}
!5107 = !DISubrange(count: 0)
!5108 = !DILocation(line: 0, scope: !5086)
!5109 = !DILocation(line: 148, column: 3, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5100, file: !408, line: 138, column: 9)
!5111 = !DILocation(line: 155, column: 1, scope: !5086)
!5112 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5113, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5115)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!125, !125, !124}
!5115 = !{!5116, !5117}
!5116 = !DILocalVariable(name: "c", arg: 1, scope: !5112, file: !408, line: 107, type: !125)
!5117 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5112, file: !408, line: 107, type: !124)
!5118 = !DILocation(line: 0, scope: !5112)
!5119 = !DILocation(line: 110, column: 9, scope: !5112)
!5120 = !DILocation(line: 110, column: 2, scope: !5112)
!5121 = distinct !DISubprogram(name: "cbvprintf", scope: !4251, file: !4251, line: 739, type: !5122, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5124)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!125, !4580, !124, !140, !5089}
!5124 = !{!5125, !5126, !5127, !5128}
!5125 = !DILocalVariable(name: "out", arg: 1, scope: !5121, file: !4251, line: 739, type: !4580)
!5126 = !DILocalVariable(name: "ctx", arg: 2, scope: !5121, file: !4251, line: 739, type: !124)
!5127 = !DILocalVariable(name: "format", arg: 3, scope: !5121, file: !4251, line: 739, type: !140)
!5128 = !DILocalVariable(name: "ap", arg: 4, scope: !5121, file: !4251, line: 739, type: !5089)
!5129 = !DILocation(line: 0, scope: !5121)
!5130 = !DILocation(line: 741, column: 9, scope: !5121)
!5131 = !DILocation(line: 741, column: 2, scope: !5121)
!5132 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5133, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5135)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{null, !393, !272}
!5135 = !{!5136, !5137, !5138}
!5136 = !DILocalVariable(name: "c", arg: 1, scope: !5132, file: !408, line: 157, type: !393)
!5137 = !DILocalVariable(name: "n", arg: 2, scope: !5132, file: !408, line: 157, type: !272)
!5138 = !DILocalVariable(name: "i", scope: !5132, file: !408, line: 159, type: !272)
!5139 = !DILocation(line: 0, scope: !5132)
!5140 = !DILocation(line: 164, column: 16, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5142, file: !408, line: 164, column: 2)
!5142 = distinct !DILexicalBlock(scope: !5132, file: !408, line: 164, column: 2)
!5143 = !DILocation(line: 164, column: 2, scope: !5142)
!5144 = !DILocation(line: 165, column: 3, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !408, line: 164, column: 26)
!5146 = !DILocation(line: 165, column: 13, scope: !5145)
!5147 = !DILocation(line: 164, column: 22, scope: !5141)
!5148 = distinct !{!5148, !5143, !5149}
!5149 = !DILocation(line: 166, column: 2, scope: !5142)
!5150 = !DILocation(line: 171, column: 1, scope: !5132)
!5151 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5152, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{null, !140, null}
!5154 = !{!5155, !5156}
!5155 = !DILocalVariable(name: "fmt", arg: 1, scope: !5151, file: !408, line: 203, type: !140)
!5156 = !DILocalVariable(name: "ap", scope: !5151, file: !408, line: 205, type: !5089)
!5157 = !DILocation(line: 0, scope: !5151)
!5158 = !DILocation(line: 205, column: 2, scope: !5151)
!5159 = !DILocation(line: 205, column: 10, scope: !5151)
!5160 = !DILocation(line: 207, column: 2, scope: !5151)
!5161 = !DILocation(line: 209, column: 2, scope: !5151)
!5162 = !DILocation(line: 211, column: 2, scope: !5151)
!5163 = !DILocation(line: 212, column: 1, scope: !5151)
!5164 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5165, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5167)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{!125, !393, !272, !140, null}
!5167 = !{!5168, !5169, !5170, !5171, !5172}
!5168 = !DILocalVariable(name: "str", arg: 1, scope: !5164, file: !408, line: 239, type: !393)
!5169 = !DILocalVariable(name: "size", arg: 2, scope: !5164, file: !408, line: 239, type: !272)
!5170 = !DILocalVariable(name: "fmt", arg: 3, scope: !5164, file: !408, line: 239, type: !140)
!5171 = !DILocalVariable(name: "ap", scope: !5164, file: !408, line: 241, type: !5089)
!5172 = !DILocalVariable(name: "ret", scope: !5164, file: !408, line: 242, type: !125)
!5173 = !DILocation(line: 0, scope: !5164)
!5174 = !DILocation(line: 241, column: 2, scope: !5164)
!5175 = !DILocation(line: 241, column: 10, scope: !5164)
!5176 = !DILocation(line: 244, column: 2, scope: !5164)
!5177 = !DILocation(line: 245, column: 8, scope: !5164)
!5178 = !DILocation(line: 246, column: 2, scope: !5164)
!5179 = !DILocation(line: 249, column: 1, scope: !5164)
!5180 = !DILocation(line: 248, column: 2, scope: !5164)
!5181 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5182, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5184)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{!125, !393, !272, !140, !5089}
!5184 = !{!5185, !5186, !5187, !5188, !5189}
!5185 = !DILocalVariable(name: "str", arg: 1, scope: !5181, file: !408, line: 251, type: !393)
!5186 = !DILocalVariable(name: "size", arg: 2, scope: !5181, file: !408, line: 251, type: !272)
!5187 = !DILocalVariable(name: "fmt", arg: 3, scope: !5181, file: !408, line: 251, type: !140)
!5188 = !DILocalVariable(name: "ap", arg: 4, scope: !5181, file: !408, line: 251, type: !5089)
!5189 = !DILocalVariable(name: "ctx", scope: !5181, file: !408, line: 253, type: !5190)
!5190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5191)
!5191 = !{!5192, !5193, !5194}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5190, file: !408, line: 218, baseType: !393, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5190, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5190, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5195 = !DILocation(line: 0, scope: !5181)
!5196 = !DILocation(line: 253, column: 2, scope: !5181)
!5197 = !DILocation(line: 253, column: 21, scope: !5181)
!5198 = !DILocation(line: 253, column: 27, scope: !5181)
!5199 = !DILocation(line: 255, column: 2, scope: !5181)
!5200 = !DILocation(line: 257, column: 10, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5181, file: !408, line: 257, column: 6)
!5202 = !DILocation(line: 257, column: 22, scope: !5201)
!5203 = !DILocation(line: 257, column: 16, scope: !5201)
!5204 = !DILocation(line: 257, column: 6, scope: !5181)
!5205 = !DILocation(line: 258, column: 3, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5201, file: !408, line: 257, column: 27)
!5207 = !DILocation(line: 258, column: 18, scope: !5206)
!5208 = !DILocation(line: 259, column: 2, scope: !5206)
!5209 = !DILocation(line: 262, column: 1, scope: !5181)
!5210 = !DILocation(line: 261, column: 2, scope: !5181)
!5211 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5212, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5215)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!125, !125, !5214}
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 32)
!5215 = !{!5216, !5217}
!5216 = !DILocalVariable(name: "c", arg: 1, scope: !5211, file: !408, line: 223, type: !125)
!5217 = !DILocalVariable(name: "ctx", arg: 2, scope: !5211, file: !408, line: 223, type: !5214)
!5218 = !DILocation(line: 0, scope: !5211)
!5219 = !DILocation(line: 225, column: 11, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5211, file: !408, line: 225, column: 6)
!5221 = !DILocation(line: 225, column: 15, scope: !5220)
!5222 = !DILocation(line: 0, scope: !5220)
!5223 = !DILocation(line: 225, column: 23, scope: !5220)
!5224 = !DILocation(line: 225, column: 45, scope: !5220)
!5225 = !DILocation(line: 225, column: 37, scope: !5220)
!5226 = !DILocation(line: 225, column: 6, scope: !5211)
!5227 = !DILocation(line: 226, column: 8, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5220, file: !408, line: 225, column: 50)
!5229 = !DILocation(line: 226, column: 13, scope: !5228)
!5230 = !DILocation(line: 227, column: 3, scope: !5228)
!5231 = !DILocation(line: 230, column: 29, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5211, file: !408, line: 230, column: 6)
!5233 = !DILocation(line: 230, column: 17, scope: !5232)
!5234 = !DILocation(line: 230, column: 6, scope: !5211)
!5235 = !DILocation(line: 231, column: 22, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !408, line: 230, column: 34)
!5237 = !DILocation(line: 231, column: 3, scope: !5236)
!5238 = !DILocation(line: 231, column: 26, scope: !5236)
!5239 = !DILocation(line: 232, column: 2, scope: !5236)
!5240 = !DILocation(line: 233, column: 28, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5232, file: !408, line: 232, column: 9)
!5242 = !DILocation(line: 233, column: 22, scope: !5241)
!5243 = !DILocation(line: 233, column: 3, scope: !5241)
!5244 = !DILocation(line: 233, column: 26, scope: !5241)
!5245 = !DILocation(line: 237, column: 1, scope: !5211)
!5246 = distinct !DISubprogram(name: "z_thread_entry", scope: !5247, file: !5247, line: 30, type: !5248, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !5255)
!5247 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5248 = !DISubroutineType(types: !5249)
!5249 = !{null, !5250, !124, !124, !124}
!5250 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5251, line: 46, baseType: !5252)
!5251 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 32)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{null, !124, !124, !124}
!5255 = !{!5256, !5257, !5258, !5259}
!5256 = !DILocalVariable(name: "entry", arg: 1, scope: !5246, file: !5247, line: 30, type: !5250)
!5257 = !DILocalVariable(name: "p1", arg: 2, scope: !5246, file: !5247, line: 31, type: !124)
!5258 = !DILocalVariable(name: "p2", arg: 3, scope: !5246, file: !5247, line: 31, type: !124)
!5259 = !DILocalVariable(name: "p3", arg: 4, scope: !5246, file: !5247, line: 31, type: !124)
!5260 = !DILocation(line: 0, scope: !5246)
!5261 = !DILocation(line: 36, column: 2, scope: !5246)
!5262 = !DILocation(line: 38, column: 17, scope: !5246)
!5263 = !DILocation(line: 38, column: 2, scope: !5246)
!5264 = !DILocation(line: 45, column: 2, scope: !5246)
!5265 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !5266, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !639)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{!5268}
!5268 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !5269)
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5270, size: 32)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !5271)
!5271 = !{!5272, !5330, !5342, !5343, !5344, !5345, !5351, !5364}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5270, file: !531, line: 247, baseType: !5273, size: 384)
!5273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !5274)
!5274 = !{!5275, !5299, !5306, !5307, !5308, !5317, !5318, !5319}
!5275 = !DIDerivedType(tag: DW_TAG_member, scope: !5273, file: !531, line: 60, baseType: !5276, size: 64)
!5276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5273, file: !531, line: 60, size: 64, elements: !5277)
!5277 = !{!5278, !5293}
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5276, file: !531, line: 61, baseType: !5279, size: 64)
!5279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !5280)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !5281)
!5281 = !{!5282, !5288}
!5282 = !DIDerivedType(tag: DW_TAG_member, scope: !5280, file: !541, line: 38, baseType: !5283, size: 32)
!5283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5280, file: !541, line: 38, size: 32, elements: !5284)
!5284 = !{!5285, !5287}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5283, file: !541, line: 39, baseType: !5286, size: 32)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5283, file: !541, line: 40, baseType: !5286, size: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, scope: !5280, file: !541, line: 42, baseType: !5289, size: 32, offset: 32)
!5289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5280, file: !541, line: 42, size: 32, elements: !5290)
!5290 = !{!5291, !5292}
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5289, file: !541, line: 43, baseType: !5286, size: 32)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5289, file: !541, line: 44, baseType: !5286, size: 32)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5276, file: !531, line: 62, baseType: !5294, size: 64)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !5295)
!5295 = !{!5296}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5294, file: !557, line: 50, baseType: !5297, size: 64)
!5297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5298, size: 64, elements: !562)
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 32)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5273, file: !531, line: 68, baseType: !5300, size: 32, offset: 64)
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5301, size: 32)
!5301 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !5302)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !5303)
!5303 = !{!5304}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5302, file: !567, line: 232, baseType: !5305, size: 64)
!5305 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !5280)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5273, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5273, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!5308 = !DIDerivedType(tag: DW_TAG_member, scope: !5273, file: !531, line: 90, baseType: !5309, size: 16, offset: 112)
!5309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5273, file: !531, line: 90, size: 16, elements: !5310)
!5310 = !{!5311, !5316}
!5311 = !DIDerivedType(tag: DW_TAG_member, scope: !5309, file: !531, line: 91, baseType: !5312, size: 16)
!5312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5309, file: !531, line: 91, size: 16, elements: !5313)
!5313 = !{!5314, !5315}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5312, file: !531, line: 96, baseType: !581, size: 8)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5312, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5309, file: !531, line: 100, baseType: !227, size: 16)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5273, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5273, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5273, file: !531, line: 131, baseType: !5320, size: 192, offset: 192)
!5320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !5321)
!5321 = !{!5322, !5323, !5329}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5320, file: !567, line: 245, baseType: !5279, size: 64)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5320, file: !567, line: 246, baseType: !5324, size: 32, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !5325)
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5326, size: 32)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{null, !5328}
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 32)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5320, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5270, file: !531, line: 250, baseType: !5331, size: 288, offset: 384)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !5332)
!5332 = !{!5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5331, file: !601, line: 26, baseType: !208, size: 32)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5331, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5331, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5331, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5331, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5331, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5331, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5331, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5331, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5270, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5270, file: !531, line: 256, baseType: !5301, size: 64, offset: 704)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5270, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5270, file: !531, line: 300, baseType: !5346, size: 96, offset: 800)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !5347)
!5347 = !{!5348, !5349, !5350}
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5346, file: !531, line: 153, baseType: !22, size: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5346, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5346, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5270, file: !531, line: 325, baseType: !5352, size: 32, offset: 896)
!5352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5353, size: 32)
!5353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !5354)
!5354 = !{!5355, !5361, !5362}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5353, file: !624, line: 5074, baseType: !5356, size: 96)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !5357)
!5357 = !{!5358, !5359, !5360}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5356, file: !628, line: 57, baseType: !631, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5356, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5356, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5353, file: !624, line: 5075, baseType: !5301, size: 64, offset: 96)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5353, file: !624, line: 5076, baseType: !5363, offset: 160)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5270, file: !531, line: 343, baseType: !5365, size: 64, offset: 928)
!5365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !5366)
!5366 = !{!5367, !5368}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5365, file: !601, line: 63, baseType: !208, size: 32)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5365, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!5369 = !DILocation(line: 535, column: 9, scope: !5265)
!5370 = !DILocation(line: 535, column: 2, scope: !5265)
!5371 = distinct !DISubprogram(name: "k_thread_abort", scope: !5372, file: !5372, line: 188, type: !5373, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !5375)
!5372 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !5268}
!5375 = !{!5376}
!5376 = !DILocalVariable(name: "thread", arg: 1, scope: !5371, file: !5372, line: 188, type: !5268)
!5377 = !DILocation(line: 0, scope: !5371)
!5378 = !DILocation(line: 197, column: 2, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5371, file: !5372, line: 197, column: 2)
!5380 = !{i64 2154839661}
!5381 = !DILocation(line: 198, column: 2, scope: !5371)
!5382 = !DILocation(line: 199, column: 1, scope: !5371)
!5383 = distinct !DISubprogram(name: "z_current_get", scope: !5372, file: !5372, line: 173, type: !5266, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !639)
!5384 = !DILocation(line: 180, column: 2, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5383, file: !5372, line: 180, column: 2)
!5386 = !{i64 2154839593}
!5387 = !DILocation(line: 181, column: 9, scope: !5383)
!5388 = !DILocation(line: 181, column: 2, scope: !5383)
!5389 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2697, file: !2697, line: 1338, type: !5390, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5398)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!125, !4580, !124, !140, !5392, !208}
!5392 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4220, line: 99, baseType: !5393)
!5393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4220, line: 40, baseType: !5394)
!5394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2697, baseType: !5395)
!5395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5396)
!5396 = !{!5397}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5395, file: !2697, baseType: !124, size: 32)
!5398 = !{!5399, !5400, !5401, !5402, !5403, !5404, !5408, !5409, !5410, !5412, !5417, !5460, !5463, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5475, !5476, !5477, !5481, !5484, !5486, !5489, !5490, !5491, !5496, !5502, !5505, !5509, !5515, !5519, !5522, !5524, !5527}
!5399 = !DILocalVariable(name: "out", arg: 1, scope: !5389, file: !2697, line: 1338, type: !4580)
!5400 = !DILocalVariable(name: "ctx", arg: 2, scope: !5389, file: !2697, line: 1338, type: !124)
!5401 = !DILocalVariable(name: "fp", arg: 3, scope: !5389, file: !2697, line: 1338, type: !140)
!5402 = !DILocalVariable(name: "ap", arg: 4, scope: !5389, file: !2697, line: 1339, type: !5392)
!5403 = !DILocalVariable(name: "flags", arg: 5, scope: !5389, file: !2697, line: 1339, type: !208)
!5404 = !DILocalVariable(name: "buf", scope: !5389, file: !2697, line: 1341, type: !5405)
!5405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5406)
!5406 = !{!5407}
!5407 = !DISubrange(count: 22)
!5408 = !DILocalVariable(name: "count", scope: !5389, file: !2697, line: 1342, type: !272)
!5409 = !DILocalVariable(name: "sint", scope: !5389, file: !2697, line: 1343, type: !2716)
!5410 = !DILocalVariable(name: "tagged_ap", scope: !5389, file: !2697, line: 1345, type: !5411)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5412 = !DILocalVariable(name: "rc", scope: !5413, file: !2697, line: 1377, type: !125)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !2697, line: 1377, column: 4)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !2697, line: 1376, column: 19)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1376, column: 7)
!5416 = distinct !DILexicalBlock(scope: !5389, file: !2697, line: 1375, column: 19)
!5417 = !DILocalVariable(name: "state", scope: !5416, file: !2697, line: 1395, type: !5418)
!5418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5389, file: !2697, line: 1392, size: 192, elements: !5419)
!5419 = !{!5420, !5428}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5418, file: !2697, line: 1393, baseType: !5421, size: 64)
!5421 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2697, line: 166, size: 64, elements: !5422)
!5422 = !{!5423, !5424, !5425, !5426, !5427}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5421, file: !2697, line: 168, baseType: !2716, size: 64)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5421, file: !2697, line: 171, baseType: !2719, size: 64)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5421, file: !2697, line: 174, baseType: !385, size: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5421, file: !2697, line: 177, baseType: !383, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5421, file: !2697, line: 180, baseType: !124, size: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5418, file: !2697, line: 1394, baseType: !5429, size: 96, offset: 64)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2697, line: 189, size: 96, elements: !5430)
!5430 = !{!5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5455}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5429, file: !2697, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5429, file: !2697, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5429, file: !2697, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5429, file: !2697, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5429, file: !2697, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5429, file: !2697, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5429, file: !2697, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5429, file: !2697, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5429, file: !2697, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5429, file: !2697, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5429, file: !2697, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5429, file: !2697, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5429, file: !2697, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5429, file: !2697, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5429, file: !2697, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5429, file: !2697, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5429, file: !2697, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5429, file: !2697, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5429, file: !2697, line: 260, baseType: !151, size: 8, offset: 24)
!5450 = !DIDerivedType(tag: DW_TAG_member, scope: !5429, file: !2697, line: 262, baseType: !5451, size: 32, offset: 32)
!5451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5429, file: !2697, line: 262, size: 32, elements: !5452)
!5452 = !{!5453, !5454}
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5451, file: !2697, line: 267, baseType: !125, size: 32)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5451, file: !2697, line: 289, baseType: !125, size: 32)
!5455 = !DIDerivedType(tag: DW_TAG_member, scope: !5429, file: !2697, line: 292, baseType: !5456, size: 32, offset: 64)
!5456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5429, file: !2697, line: 292, size: 32, elements: !5457)
!5457 = !{!5458, !5459}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5456, file: !2697, line: 297, baseType: !125, size: 32)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5456, file: !2697, line: 306, baseType: !125, size: 32)
!5460 = !DILocalVariable(name: "conv", scope: !5416, file: !2697, line: 1400, type: !5461)
!5461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5462)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 32)
!5463 = !DILocalVariable(name: "value", scope: !5416, file: !2697, line: 1401, type: !5464)
!5464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5465)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 32)
!5466 = !DILocalVariable(name: "sp", scope: !5416, file: !2697, line: 1402, type: !140)
!5467 = !DILocalVariable(name: "width", scope: !5416, file: !2697, line: 1403, type: !125)
!5468 = !DILocalVariable(name: "precision", scope: !5416, file: !2697, line: 1404, type: !125)
!5469 = !DILocalVariable(name: "bps", scope: !5416, file: !2697, line: 1405, type: !140)
!5470 = !DILocalVariable(name: "bpe", scope: !5416, file: !2697, line: 1406, type: !140)
!5471 = !DILocalVariable(name: "sign", scope: !5416, file: !2697, line: 1407, type: !142)
!5472 = !DILocalVariable(name: "arg", scope: !5473, file: !2697, line: 1432, type: !125)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !2697, line: 1431, column: 24)
!5474 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1431, column: 7)
!5475 = !DILocalVariable(name: "specifier_cat", scope: !5416, file: !2697, line: 1468, type: !2696)
!5476 = !DILocalVariable(name: "length_mod", scope: !5416, file: !2697, line: 1470, type: !2704)
!5477 = !DILocalVariable(name: "rc", scope: !5478, file: !2697, line: 1575, type: !125)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !2697, line: 1575, column: 4)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !2697, line: 1574, column: 43)
!5480 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1574, column: 7)
!5481 = !DILocalVariable(name: "rc", scope: !5482, file: !2697, line: 1584, type: !125)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1584, column: 4)
!5483 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1582, column: 28)
!5484 = !DILocalVariable(name: "len", scope: !5485, file: !2697, line: 1589, type: !272)
!5485 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1586, column: 13)
!5486 = !DILocalVariable(name: "len", scope: !5487, file: !2697, line: 1641, type: !272)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !2697, line: 1640, column: 24)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1640, column: 8)
!5489 = !DILocalVariable(name: "nj_len", scope: !5416, file: !2697, line: 1722, type: !272)
!5490 = !DILocalVariable(name: "pad_len", scope: !5416, file: !2697, line: 1723, type: !125)
!5491 = !DILocalVariable(name: "pad", scope: !5492, file: !2697, line: 1751, type: !142)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !2697, line: 1750, column: 26)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !2697, line: 1750, column: 8)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !2697, line: 1747, column: 18)
!5495 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1747, column: 7)
!5496 = !DILocalVariable(name: "rc", scope: !5497, file: !2697, line: 1758, type: !125)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !2697, line: 1758, column: 7)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !2697, line: 1757, column: 21)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !2697, line: 1757, column: 10)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !2697, line: 1756, column: 26)
!5501 = distinct !DILexicalBlock(scope: !5492, file: !2697, line: 1756, column: 9)
!5502 = !DILocalVariable(name: "rc", scope: !5503, file: !2697, line: 1765, type: !125)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !2697, line: 1765, column: 6)
!5504 = distinct !DILexicalBlock(scope: !5492, file: !2697, line: 1764, column: 25)
!5505 = !DILocalVariable(name: "rc", scope: !5506, file: !2697, line: 1774, type: !125)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !2697, line: 1774, column: 4)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !2697, line: 1773, column: 18)
!5508 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1773, column: 7)
!5509 = !DILocalVariable(name: "rc", scope: !5510, file: !2697, line: 1819, type: !125)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !2697, line: 1819, column: 5)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !2697, line: 1818, column: 44)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !2697, line: 1818, column: 8)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !2697, line: 1817, column: 10)
!5514 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1777, column: 7)
!5515 = !DILocalVariable(name: "rc", scope: !5516, file: !2697, line: 1823, type: !125)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !2697, line: 1823, column: 5)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !2697, line: 1822, column: 26)
!5518 = distinct !DILexicalBlock(scope: !5513, file: !2697, line: 1822, column: 8)
!5519 = !DILocalVariable(name: "rc", scope: !5520, file: !2697, line: 1828, type: !125)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !2697, line: 1828, column: 5)
!5521 = distinct !DILexicalBlock(scope: !5513, file: !2697, line: 1827, column: 26)
!5522 = !DILocalVariable(name: "rc", scope: !5523, file: !2697, line: 1831, type: !125)
!5523 = distinct !DILexicalBlock(scope: !5513, file: !2697, line: 1831, column: 4)
!5524 = !DILocalVariable(name: "rc", scope: !5525, file: !2697, line: 1836, type: !125)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !2697, line: 1836, column: 4)
!5526 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1835, column: 21)
!5527 = !DILabel(scope: !5483, name: "prec_int_pad0", file: !2697, line: 1634)
!5528 = !DILocation(line: 0, scope: !5389)
!5529 = !DILocation(line: 1341, column: 2, scope: !5389)
!5530 = !DILocation(line: 1341, column: 7, scope: !5389)
!5531 = !DILocation(line: 1375, column: 2, scope: !5389)
!5532 = !DILocation(line: 1342, column: 9, scope: !5389)
!5533 = !DILocation(line: 1375, column: 9, scope: !5389)
!5534 = !DILocation(line: 1377, column: 4, scope: !5413)
!5535 = !DILocation(line: 0, scope: !5413)
!5536 = !DILocation(line: 1377, column: 4, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5413, file: !2697, line: 1377, column: 4)
!5538 = distinct !{!5538, !5531, !5539}
!5539 = !DILocation(line: 1839, column: 2, scope: !5389)
!5540 = !DILocation(line: 1392, column: 3, scope: !5416)
!5541 = !DILocation(line: 1395, column: 5, scope: !5416)
!5542 = !DILocation(line: 0, scope: !5416)
!5543 = !DILocation(line: 1409, column: 8, scope: !5416)
!5544 = !DILocation(line: 1414, column: 13, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1414, column: 7)
!5546 = !DILocation(line: 1414, column: 7, scope: !5416)
!5547 = !DILocation(line: 1415, column: 12, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5545, file: !2697, line: 1414, column: 25)
!5549 = !DILocation(line: 1417, column: 14, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5548, file: !2697, line: 1417, column: 8)
!5551 = !DILocation(line: 1417, column: 8, scope: !5548)
!5552 = !DILocation(line: 1418, column: 21, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5550, file: !2697, line: 1417, column: 19)
!5554 = !DILocation(line: 1419, column: 13, scope: !5553)
!5555 = !DILocation(line: 1420, column: 4, scope: !5553)
!5556 = !DILocation(line: 1421, column: 20, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5545, file: !2697, line: 1421, column: 14)
!5558 = !DILocation(line: 1421, column: 14, scope: !5545)
!5559 = !DILocation(line: 1431, column: 13, scope: !5474)
!5560 = !DILocation(line: 1431, column: 7, scope: !5416)
!5561 = !DILocation(line: 1432, column: 14, scope: !5473)
!5562 = !DILocation(line: 0, scope: !5473)
!5563 = !DILocation(line: 1434, column: 12, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5473, file: !2697, line: 1434, column: 8)
!5565 = !DILocation(line: 1434, column: 8, scope: !5473)
!5566 = !DILocation(line: 1435, column: 24, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5564, file: !2697, line: 1434, column: 17)
!5568 = !DILocation(line: 1436, column: 4, scope: !5567)
!5569 = !DILocation(line: 1439, column: 20, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5474, file: !2697, line: 1439, column: 14)
!5571 = !DILocation(line: 1439, column: 14, scope: !5474)
!5572 = !DILocation(line: 1469, column: 37, scope: !5416)
!5573 = !DILocation(line: 1448, column: 20, scope: !5416)
!5574 = !DILocation(line: 1449, column: 22, scope: !5416)
!5575 = !DILocation(line: 1471, column: 34, scope: !5416)
!5576 = !DILocation(line: 1478, column: 7, scope: !5416)
!5577 = !DILocation(line: 1479, column: 4, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2697, line: 1478, column: 40)
!5579 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1478, column: 7)
!5580 = !DILocation(line: 1484, column: 19, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5578, file: !2697, line: 1479, column: 24)
!5582 = !DILocation(line: 1484, column: 17, scope: !5581)
!5583 = !DILocation(line: 1485, column: 5, scope: !5581)
!5584 = !DILocation(line: 1492, column: 20, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !2697, line: 1491, column: 12)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !2697, line: 1487, column: 9)
!5587 = !DILocation(line: 1492, column: 18, scope: !5585)
!5588 = !DILocation(line: 1494, column: 5, scope: !5581)
!5589 = !DILocation(line: 1497, column: 23, scope: !5581)
!5590 = !DILocation(line: 1496, column: 17, scope: !5581)
!5591 = !DILocation(line: 1498, column: 5, scope: !5581)
!5592 = !DILocation(line: 1501, column: 23, scope: !5581)
!5593 = !DILocation(line: 1500, column: 17, scope: !5581)
!5594 = !DILocation(line: 1502, column: 5, scope: !5581)
!5595 = !DILocation(line: 1513, column: 23, scope: !5581)
!5596 = !DILocation(line: 1513, column: 6, scope: !5581)
!5597 = !DILocation(line: 1512, column: 17, scope: !5581)
!5598 = !DILocation(line: 1514, column: 5, scope: !5581)
!5599 = !DILocation(line: 0, scope: !5581)
!5600 = !DILocation(line: 1516, column: 8, scope: !5578)
!5601 = !DILocation(line: 1517, column: 19, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5603, file: !2697, line: 1516, column: 33)
!5603 = distinct !DILexicalBlock(scope: !5578, file: !2697, line: 1516, column: 8)
!5604 = !DILocation(line: 1517, column: 17, scope: !5602)
!5605 = !DILocation(line: 1518, column: 4, scope: !5602)
!5606 = !DILocation(line: 1519, column: 19, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !2697, line: 1518, column: 39)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !2697, line: 1518, column: 15)
!5609 = !DILocation(line: 1519, column: 17, scope: !5607)
!5610 = !DILocation(line: 1520, column: 4, scope: !5607)
!5611 = !DILocation(line: 1522, column: 4, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5613, file: !2697, line: 1521, column: 47)
!5613 = distinct !DILexicalBlock(scope: !5579, file: !2697, line: 1521, column: 14)
!5614 = !DILocation(line: 1527, column: 19, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !2697, line: 1522, column: 24)
!5616 = !DILocation(line: 1527, column: 17, scope: !5615)
!5617 = !DILocation(line: 1528, column: 5, scope: !5615)
!5618 = !DILocation(line: 0, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !2697, line: 1530, column: 9)
!5620 = !DILocation(line: 1540, column: 23, scope: !5615)
!5621 = !DILocation(line: 1539, column: 17, scope: !5615)
!5622 = !DILocation(line: 1542, column: 5, scope: !5615)
!5623 = !DILocation(line: 1545, column: 23, scope: !5615)
!5624 = !DILocation(line: 1544, column: 17, scope: !5615)
!5625 = !DILocation(line: 1547, column: 5, scope: !5615)
!5626 = !DILocation(line: 1551, column: 23, scope: !5615)
!5627 = !DILocation(line: 1551, column: 6, scope: !5615)
!5628 = !DILocation(line: 1550, column: 17, scope: !5615)
!5629 = !DILocation(line: 1552, column: 5, scope: !5615)
!5630 = !DILocation(line: 0, scope: !5615)
!5631 = !DILocation(line: 1554, column: 8, scope: !5612)
!5632 = !DILocation(line: 1555, column: 19, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !2697, line: 1554, column: 33)
!5634 = distinct !DILexicalBlock(scope: !5612, file: !2697, line: 1554, column: 8)
!5635 = !DILocation(line: 1555, column: 17, scope: !5633)
!5636 = !DILocation(line: 1556, column: 4, scope: !5633)
!5637 = !DILocation(line: 1557, column: 19, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !2697, line: 1556, column: 39)
!5639 = distinct !DILexicalBlock(scope: !5634, file: !2697, line: 1556, column: 15)
!5640 = !DILocation(line: 1557, column: 17, scope: !5638)
!5641 = !DILocation(line: 1558, column: 4, scope: !5638)
!5642 = !DILocation(line: 0, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !2697, line: 1560, column: 8)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2697, line: 1559, column: 45)
!5645 = distinct !DILexicalBlock(scope: !5613, file: !2697, line: 1559, column: 14)
!5646 = !DILocation(line: 1566, column: 17, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !2697, line: 1565, column: 46)
!5648 = distinct !DILexicalBlock(scope: !5645, file: !2697, line: 1565, column: 14)
!5649 = !DILocation(line: 1566, column: 15, scope: !5647)
!5650 = !DILocation(line: 1567, column: 3, scope: !5647)
!5651 = !DILocation(line: 1574, column: 21, scope: !5480)
!5652 = !DILocation(line: 1575, column: 4, scope: !5478)
!5653 = !DILocation(line: 0, scope: !5478)
!5654 = !DILocation(line: 1575, column: 4, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5478, file: !2697, line: 1575, column: 4)
!5656 = !DILocation(line: 1582, column: 17, scope: !5416)
!5657 = !DILocation(line: 1582, column: 3, scope: !5416)
!5658 = !DILocation(line: 1584, column: 4, scope: !5482)
!5659 = !DILocation(line: 0, scope: !5482)
!5660 = !DILocation(line: 1584, column: 4, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5482, file: !2697, line: 1584, column: 4)
!5662 = !DILocation(line: 1587, column: 31, scope: !5485)
!5663 = !DILocation(line: 1591, column: 18, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5485, file: !2697, line: 1591, column: 8)
!5665 = !DILocation(line: 1591, column: 8, scope: !5485)
!5666 = !DILocation(line: 1592, column: 11, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5664, file: !2697, line: 1591, column: 24)
!5668 = !DILocation(line: 0, scope: !5485)
!5669 = !DILocation(line: 1593, column: 4, scope: !5667)
!5670 = !DILocation(line: 1594, column: 11, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5664, file: !2697, line: 1593, column: 11)
!5672 = !DILocation(line: 1604, column: 51, scope: !5483)
!5673 = !DILocation(line: 1604, column: 13, scope: !5483)
!5674 = !DILocation(line: 1604, column: 11, scope: !5483)
!5675 = !DILocation(line: 1606, column: 4, scope: !5483)
!5676 = !DILocation(line: 1609, column: 14, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1609, column: 8)
!5678 = !DILocation(line: 1609, column: 8, scope: !5483)
!5679 = !DILocation(line: 1619, column: 18, scope: !5483)
!5680 = !DILocation(line: 1620, column: 13, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1620, column: 8)
!5682 = !DILocation(line: 1620, column: 8, scope: !5483)
!5683 = !DILocation(line: 1622, column: 36, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5681, file: !2697, line: 1620, column: 18)
!5685 = !DILocation(line: 1622, column: 17, scope: !5684)
!5686 = !DILocation(line: 1623, column: 4, scope: !5684)
!5687 = !DILocation(line: 1632, column: 29, scope: !5483)
!5688 = !DILocation(line: 1632, column: 10, scope: !5483)
!5689 = !DILocation(line: 1632, column: 4, scope: !5483)
!5690 = !DILocation(line: 1407, column: 8, scope: !5416)
!5691 = !DILocation(line: 0, scope: !5483)
!5692 = !DILocation(line: 1634, column: 3, scope: !5483)
!5693 = !DILocation(line: 1640, column: 18, scope: !5488)
!5694 = !DILocation(line: 1640, column: 8, scope: !5483)
!5695 = !DILocation(line: 1729, column: 13, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1729, column: 7)
!5697 = !DILocation(line: 1641, column: 22, scope: !5487)
!5698 = !DILocation(line: 0, scope: !5487)
!5699 = !DILocation(line: 1646, column: 21, scope: !5487)
!5700 = !DILocation(line: 1649, column: 13, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5487, file: !2697, line: 1649, column: 9)
!5702 = !DILocation(line: 1649, column: 9, scope: !5487)
!5703 = !DILocation(line: 1650, column: 35, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5701, file: !2697, line: 1649, column: 34)
!5705 = !DILocation(line: 1650, column: 23, scope: !5704)
!5706 = !DILocation(line: 1651, column: 5, scope: !5704)
!5707 = !DILocation(line: 1660, column: 15, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1660, column: 8)
!5709 = !DILocation(line: 1660, column: 19, scope: !5708)
!5710 = !DILocation(line: 1660, column: 8, scope: !5483)
!5711 = !DILocation(line: 1661, column: 23, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5708, file: !2697, line: 1660, column: 28)
!5713 = !DILocation(line: 1661, column: 11, scope: !5712)
!5714 = !DILocation(line: 1665, column: 22, scope: !5712)
!5715 = !DILocation(line: 1666, column: 21, scope: !5712)
!5716 = !DILocation(line: 1668, column: 5, scope: !5712)
!5717 = !DILocation(line: 1677, column: 30, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !2697, line: 1676, column: 49)
!5719 = distinct !DILexicalBlock(scope: !5483, file: !2697, line: 1676, column: 8)
!5720 = !DILocation(line: 1677, column: 5, scope: !5718)
!5721 = !DILocation(line: 1680, column: 4, scope: !5483)
!5722 = !DILocation(line: 0, scope: !5664)
!5723 = !DILocation(line: 1597, column: 14, scope: !5485)
!5724 = !DILocation(line: 1699, column: 11, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1699, column: 7)
!5726 = !DILocation(line: 1699, column: 7, scope: !5416)
!5727 = !DILocation(line: 1725, column: 7, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1725, column: 7)
!5729 = !DILocation(line: 1725, column: 12, scope: !5728)
!5730 = !DILocation(line: 1747, column: 13, scope: !5495)
!5731 = !DILocation(line: 1747, column: 7, scope: !5416)
!5732 = !DILocation(line: 1722, column: 24, scope: !5416)
!5733 = !DILocation(line: 1725, column: 7, scope: !5416)
!5734 = !DILocation(line: 1729, column: 7, scope: !5416)
!5735 = !DILocation(line: 1736, column: 13, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5416, file: !2697, line: 1736, column: 7)
!5737 = !DILocation(line: 1735, column: 19, scope: !5416)
!5738 = !DILocation(line: 1736, column: 7, scope: !5416)
!5739 = !DILocation(line: 1748, column: 10, scope: !5494)
!5740 = !DILocation(line: 1750, column: 15, scope: !5493)
!5741 = !DILocation(line: 1750, column: 8, scope: !5494)
!5742 = !DILocation(line: 0, scope: !5492)
!5743 = !DILocation(line: 1756, column: 15, scope: !5501)
!5744 = !DILocation(line: 1756, column: 9, scope: !5492)
!5745 = !DILocation(line: 1758, column: 7, scope: !5497)
!5746 = !DILocation(line: 0, scope: !5497)
!5747 = !DILocation(line: 1758, column: 7, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5497, file: !2697, line: 1758, column: 7)
!5749 = !DILocation(line: 1764, column: 5, scope: !5492)
!5750 = !DILocation(line: 0, scope: !5494)
!5751 = !DILocation(line: 1764, column: 20, scope: !5492)
!5752 = !DILocation(line: 1764, column: 17, scope: !5492)
!5753 = !DILocation(line: 1765, column: 6, scope: !5503)
!5754 = !DILocation(line: 0, scope: !5503)
!5755 = !DILocation(line: 1765, column: 6, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5503, file: !2697, line: 1765, column: 6)
!5757 = distinct !{!5757, !5749, !5758}
!5758 = !DILocation(line: 1766, column: 5, scope: !5492)
!5759 = !DILocation(line: 1773, column: 12, scope: !5508)
!5760 = !DILocation(line: 1773, column: 7, scope: !5416)
!5761 = !DILocation(line: 1773, column: 7, scope: !5508)
!5762 = !DILocation(line: 1774, column: 4, scope: !5506)
!5763 = !DILocation(line: 0, scope: !5506)
!5764 = !DILocation(line: 1774, column: 4, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5506, file: !2697, line: 1774, column: 4)
!5766 = !DILocation(line: 1818, column: 8, scope: !5512)
!5767 = !DILocation(line: 1818, column: 27, scope: !5512)
!5768 = !DILocation(line: 1818, column: 25, scope: !5512)
!5769 = !DILocation(line: 1818, column: 8, scope: !5513)
!5770 = !DILocation(line: 1819, column: 5, scope: !5510)
!5771 = !DILocation(line: 0, scope: !5510)
!5772 = !DILocation(line: 1819, column: 5, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5510, file: !2697, line: 1819, column: 5)
!5774 = !DILocation(line: 1822, column: 14, scope: !5518)
!5775 = !DILocation(line: 1822, column: 8, scope: !5513)
!5776 = !DILocation(line: 1823, column: 5, scope: !5516)
!5777 = !DILocation(line: 0, scope: !5516)
!5778 = !DILocation(line: 1823, column: 5, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5516, file: !2697, line: 1823, column: 5)
!5780 = !DILocation(line: 1826, column: 20, scope: !5513)
!5781 = !DILocation(line: 1827, column: 4, scope: !5513)
!5782 = !DILocation(line: 0, scope: !5513)
!5783 = !DILocation(line: 1827, column: 21, scope: !5513)
!5784 = !DILocation(line: 1827, column: 18, scope: !5513)
!5785 = !DILocation(line: 1828, column: 5, scope: !5520)
!5786 = !DILocation(line: 0, scope: !5520)
!5787 = !DILocation(line: 1828, column: 5, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5520, file: !2697, line: 1828, column: 5)
!5789 = distinct !{!5789, !5781, !5790}
!5790 = !DILocation(line: 1829, column: 4, scope: !5513)
!5791 = !DILocation(line: 1831, column: 4, scope: !5523)
!5792 = !DILocation(line: 0, scope: !5523)
!5793 = !DILocation(line: 1831, column: 4, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5523, file: !2697, line: 1831, column: 4)
!5795 = !DILocation(line: 1835, column: 16, scope: !5416)
!5796 = !DILocation(line: 1835, column: 3, scope: !5416)
!5797 = !DILocation(line: 1836, column: 4, scope: !5525)
!5798 = !DILocation(line: 0, scope: !5525)
!5799 = !DILocation(line: 1836, column: 4, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5525, file: !2697, line: 1836, column: 4)
!5801 = !DILocation(line: 1837, column: 4, scope: !5526)
!5802 = distinct !{!5802, !5796, !5803}
!5803 = !DILocation(line: 1838, column: 3, scope: !5416)
!5804 = !DILocation(line: 1844, column: 1, scope: !5389)
!5805 = distinct !DISubprogram(name: "extract_conversion", scope: !2697, file: !2697, line: 642, type: !5806, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5808)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!140, !5462, !140}
!5808 = !{!5809, !5810}
!5809 = !DILocalVariable(name: "conv", arg: 1, scope: !5805, file: !2697, line: 642, type: !5462)
!5810 = !DILocalVariable(name: "sp", arg: 2, scope: !5805, file: !2697, line: 643, type: !140)
!5811 = !DILocation(line: 0, scope: !5805)
!5812 = !DILocation(line: 645, column: 10, scope: !5805)
!5813 = !DILocation(line: 653, column: 2, scope: !5805)
!5814 = !DILocation(line: 654, column: 6, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5805, file: !2697, line: 654, column: 6)
!5816 = !DILocation(line: 654, column: 10, scope: !5815)
!5817 = !DILocation(line: 654, column: 6, scope: !5805)
!5818 = !DILocation(line: 655, column: 24, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5815, file: !2697, line: 654, column: 18)
!5820 = !DILocation(line: 655, column: 19, scope: !5819)
!5821 = !DILocation(line: 656, column: 3, scope: !5819)
!5822 = !DILocation(line: 659, column: 7, scope: !5805)
!5823 = !DILocation(line: 660, column: 7, scope: !5805)
!5824 = !DILocation(line: 661, column: 7, scope: !5805)
!5825 = !DILocation(line: 662, column: 7, scope: !5805)
!5826 = !DILocation(line: 663, column: 7, scope: !5805)
!5827 = !DILocation(line: 665, column: 2, scope: !5805)
!5828 = !DILocation(line: 666, column: 1, scope: !5805)
!5829 = distinct !DISubprogram(name: "outs", scope: !2697, file: !2697, line: 1319, type: !5830, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5832)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!125, !4580, !124, !140, !140}
!5832 = !{!5833, !5834, !5835, !5836, !5837, !5838}
!5833 = !DILocalVariable(name: "out", arg: 1, scope: !5829, file: !2697, line: 1319, type: !4580)
!5834 = !DILocalVariable(name: "ctx", arg: 2, scope: !5829, file: !2697, line: 1320, type: !124)
!5835 = !DILocalVariable(name: "sp", arg: 3, scope: !5829, file: !2697, line: 1321, type: !140)
!5836 = !DILocalVariable(name: "ep", arg: 4, scope: !5829, file: !2697, line: 1322, type: !140)
!5837 = !DILocalVariable(name: "count", scope: !5829, file: !2697, line: 1324, type: !272)
!5838 = !DILocalVariable(name: "rc", scope: !5839, file: !2697, line: 1327, type: !125)
!5839 = distinct !DILexicalBlock(scope: !5829, file: !2697, line: 1326, column: 45)
!5840 = !DILocation(line: 0, scope: !5829)
!5841 = !DILocation(line: 1326, column: 2, scope: !5829)
!5842 = !DILocation(line: 1324, column: 9, scope: !5829)
!5843 = !DILocation(line: 1326, column: 13, scope: !5829)
!5844 = !DILocation(line: 1326, column: 19, scope: !5829)
!5845 = !DILocation(line: 1327, column: 21, scope: !5839)
!5846 = !DILocation(line: 1326, column: 36, scope: !5829)
!5847 = !DILocation(line: 1326, column: 39, scope: !5829)
!5848 = !DILocation(line: 1327, column: 24, scope: !5839)
!5849 = !DILocation(line: 1327, column: 16, scope: !5839)
!5850 = !DILocation(line: 1327, column: 12, scope: !5839)
!5851 = !DILocation(line: 0, scope: !5839)
!5852 = !DILocation(line: 1329, column: 10, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5839, file: !2697, line: 1329, column: 7)
!5854 = !DILocation(line: 1329, column: 7, scope: !5839)
!5855 = distinct !{!5855, !5841, !5856}
!5856 = !DILocation(line: 1333, column: 2, scope: !5829)
!5857 = !DILocation(line: 1336, column: 1, scope: !5829)
!5858 = distinct !DISubprogram(name: "encode_uint", scope: !2697, file: !2697, line: 788, type: !5859, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5861)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!393, !2719, !5462, !393, !140}
!5861 = !{!5862, !5863, !5864, !5865, !5866, !5867, !5869, !5870}
!5862 = !DILocalVariable(name: "value", arg: 1, scope: !5858, file: !2697, line: 788, type: !2719)
!5863 = !DILocalVariable(name: "conv", arg: 2, scope: !5858, file: !2697, line: 789, type: !5462)
!5864 = !DILocalVariable(name: "bps", arg: 3, scope: !5858, file: !2697, line: 790, type: !393)
!5865 = !DILocalVariable(name: "bpe", arg: 4, scope: !5858, file: !2697, line: 791, type: !140)
!5866 = !DILocalVariable(name: "upcase", scope: !5858, file: !2697, line: 793, type: !153)
!5867 = !DILocalVariable(name: "radix", scope: !5858, file: !2697, line: 794, type: !5868)
!5868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5869 = !DILocalVariable(name: "bp", scope: !5858, file: !2697, line: 795, type: !393)
!5870 = !DILocalVariable(name: "lsv", scope: !5871, file: !2697, line: 798, type: !32)
!5871 = distinct !DILexicalBlock(scope: !5858, file: !2697, line: 797, column: 5)
!5872 = !DILocation(line: 0, scope: !5858)
!5873 = !DILocation(line: 793, column: 35, scope: !5858)
!5874 = !DILocation(line: 793, column: 24, scope: !5858)
!5875 = !DILocation(line: 793, column: 16, scope: !5858)
!5876 = !DILocation(line: 794, column: 29, scope: !5858)
!5877 = !DILocation(line: 795, column: 24, scope: !5858)
!5878 = !DILocation(line: 795, column: 17, scope: !5858)
!5879 = !DILocation(line: 797, column: 2, scope: !5858)
!5880 = !DILocation(line: 802, column: 9, scope: !5871)
!5881 = !DILocation(line: 798, column: 22, scope: !5871)
!5882 = !DILocation(line: 0, scope: !5871)
!5883 = !DILocation(line: 800, column: 16, scope: !5871)
!5884 = !DILocation(line: 800, column: 11, scope: !5871)
!5885 = !DILocation(line: 800, column: 4, scope: !5871)
!5886 = !DILocation(line: 800, column: 9, scope: !5871)
!5887 = !DILocation(line: 803, column: 18, scope: !5858)
!5888 = !DILocation(line: 803, column: 24, scope: !5858)
!5889 = !DILocation(line: 803, column: 2, scope: !5871)
!5890 = distinct !{!5890, !5879, !5891}
!5891 = !DILocation(line: 803, column: 37, scope: !5858)
!5892 = !DILocation(line: 808, column: 12, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5858, file: !2697, line: 808, column: 6)
!5894 = !DILocation(line: 808, column: 6, scope: !5858)
!5895 = !DILocation(line: 809, column: 7, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !2697, line: 808, column: 23)
!5897 = !DILocation(line: 813, column: 3, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !2697, line: 811, column: 27)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !2697, line: 811, column: 14)
!5900 = distinct !DILexicalBlock(scope: !5896, file: !2697, line: 809, column: 7)
!5901 = !DILocation(line: 0, scope: !5900)
!5902 = !DILocation(line: 818, column: 2, scope: !5858)
!5903 = distinct !DISubprogram(name: "store_count", scope: !2697, file: !2697, line: 1280, type: !5904, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5908)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{null, !5906, !124, !125}
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5907, size: 32)
!5907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5429)
!5908 = !{!5909, !5910, !5911}
!5909 = !DILocalVariable(name: "conv", arg: 1, scope: !5903, file: !2697, line: 1280, type: !5906)
!5910 = !DILocalVariable(name: "dp", arg: 2, scope: !5903, file: !2697, line: 1281, type: !124)
!5911 = !DILocalVariable(name: "count", arg: 3, scope: !5903, file: !2697, line: 1282, type: !125)
!5912 = !DILocation(line: 0, scope: !5903)
!5913 = !DILocation(line: 1284, column: 38, scope: !5903)
!5914 = !DILocation(line: 1284, column: 2, scope: !5903)
!5915 = !DILocation(line: 1286, column: 4, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5903, file: !2697, line: 1284, column: 50)
!5917 = !DILocation(line: 1286, column: 14, scope: !5916)
!5918 = !DILocation(line: 1287, column: 3, scope: !5916)
!5919 = !DILocation(line: 1289, column: 24, scope: !5916)
!5920 = !DILocation(line: 1289, column: 22, scope: !5916)
!5921 = !DILocation(line: 1290, column: 3, scope: !5916)
!5922 = !DILocation(line: 1292, column: 18, scope: !5916)
!5923 = !DILocation(line: 1292, column: 4, scope: !5916)
!5924 = !DILocation(line: 1292, column: 16, scope: !5916)
!5925 = !DILocation(line: 1293, column: 3, scope: !5916)
!5926 = !DILocation(line: 1295, column: 4, scope: !5916)
!5927 = !DILocation(line: 1295, column: 15, scope: !5916)
!5928 = !DILocation(line: 1296, column: 3, scope: !5916)
!5929 = !DILocation(line: 1298, column: 22, scope: !5916)
!5930 = !DILocation(line: 1298, column: 4, scope: !5916)
!5931 = !DILocation(line: 1298, column: 20, scope: !5916)
!5932 = !DILocation(line: 1299, column: 3, scope: !5916)
!5933 = !DILocation(line: 1301, column: 21, scope: !5916)
!5934 = !DILocation(line: 1301, column: 4, scope: !5916)
!5935 = !DILocation(line: 1301, column: 19, scope: !5916)
!5936 = !DILocation(line: 1302, column: 3, scope: !5916)
!5937 = !DILocation(line: 1304, column: 4, scope: !5916)
!5938 = !DILocation(line: 1304, column: 17, scope: !5916)
!5939 = !DILocation(line: 1305, column: 3, scope: !5916)
!5940 = !DILocation(line: 1307, column: 4, scope: !5916)
!5941 = !DILocation(line: 1307, column: 20, scope: !5916)
!5942 = !DILocation(line: 1308, column: 3, scope: !5916)
!5943 = !DILocation(line: 1316, column: 1, scope: !5903)
!5944 = distinct !DISubprogram(name: "isupper", scope: !5945, file: !5945, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5946)
!5945 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5946 = !{!5947}
!5947 = !DILocalVariable(name: "a", arg: 1, scope: !5944, file: !5945, line: 16, type: !125)
!5948 = !DILocation(line: 0, scope: !5944)
!5949 = !DILocation(line: 18, column: 29, scope: !5944)
!5950 = !DILocation(line: 18, column: 45, scope: !5944)
!5951 = !DILocation(line: 18, column: 2, scope: !5944)
!5952 = distinct !DISubprogram(name: "conversion_radix", scope: !2697, file: !2697, line: 761, type: !5953, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5955)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!272, !142}
!5955 = !{!5956}
!5956 = !DILocalVariable(name: "specifier", arg: 1, scope: !5952, file: !2697, line: 761, type: !142)
!5957 = !DILocation(line: 0, scope: !5952)
!5958 = !DILocation(line: 763, column: 2, scope: !5952)
!5959 = !DILocation(line: 770, column: 3, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5952, file: !2697, line: 763, column: 21)
!5961 = !DILocation(line: 774, column: 3, scope: !5960)
!5962 = !DILocation(line: 0, scope: !5960)
!5963 = !DILocation(line: 776, column: 1, scope: !5952)
!5964 = distinct !DISubprogram(name: "extract_flags", scope: !2697, file: !2697, line: 339, type: !5806, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5965)
!5965 = !{!5966, !5967, !5968}
!5966 = !DILocalVariable(name: "conv", arg: 1, scope: !5964, file: !2697, line: 339, type: !5462)
!5967 = !DILocalVariable(name: "sp", arg: 2, scope: !5964, file: !2697, line: 340, type: !140)
!5968 = !DILocalVariable(name: "loop", scope: !5964, file: !2697, line: 342, type: !153)
!5969 = !DILocation(line: 0, scope: !5964)
!5970 = !DILocation(line: 344, column: 2, scope: !5964)
!5971 = !DILocation(line: 345, column: 11, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5964, file: !2697, line: 344, column: 5)
!5973 = !DILocation(line: 345, column: 3, scope: !5972)
!5974 = !DILocation(line: 351, column: 4, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5972, file: !2697, line: 345, column: 16)
!5976 = !DILocation(line: 354, column: 4, scope: !5975)
!5977 = !DILocation(line: 357, column: 4, scope: !5975)
!5978 = !DILocation(line: 360, column: 4, scope: !5975)
!5979 = !DILocation(line: 0, scope: !5975)
!5980 = !DILocation(line: 370, column: 12, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5964, file: !2697, line: 370, column: 6)
!5982 = !DILocation(line: 370, column: 22, scope: !5981)
!5983 = !DILocation(line: 371, column: 19, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5981, file: !2697, line: 370, column: 42)
!5985 = !DILocation(line: 372, column: 2, scope: !5984)
!5986 = !DILocation(line: 376, column: 2, scope: !5964)
!5987 = distinct !DISubprogram(name: "extract_width", scope: !2697, file: !2697, line: 388, type: !5806, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5988)
!5988 = !{!5989, !5990, !5991, !5992}
!5989 = !DILocalVariable(name: "conv", arg: 1, scope: !5987, file: !2697, line: 388, type: !5462)
!5990 = !DILocalVariable(name: "sp", arg: 2, scope: !5987, file: !2697, line: 389, type: !140)
!5991 = !DILocalVariable(name: "wp", scope: !5987, file: !2697, line: 398, type: !140)
!5992 = !DILocalVariable(name: "width", scope: !5987, file: !2697, line: 399, type: !272)
!5993 = !DILocation(line: 0, scope: !5987)
!5994 = !DILocation(line: 391, column: 8, scope: !5987)
!5995 = !DILocation(line: 391, column: 22, scope: !5987)
!5996 = !DILocation(line: 393, column: 6, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5987, file: !2697, line: 393, column: 6)
!5998 = !DILocation(line: 393, column: 10, scope: !5997)
!5999 = !DILocation(line: 393, column: 6, scope: !5987)
!6000 = !DILocation(line: 394, column: 20, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !2697, line: 393, column: 18)
!6002 = !DILocation(line: 395, column: 10, scope: !6001)
!6003 = !DILocation(line: 395, column: 3, scope: !6001)
!6004 = !DILocation(line: 399, column: 17, scope: !5987)
!6005 = !DILocation(line: 401, column: 6, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5987, file: !2697, line: 401, column: 6)
!6007 = !DILocation(line: 401, column: 9, scope: !6006)
!6008 = !DILocation(line: 401, column: 6, scope: !5987)
!6009 = !DILocation(line: 402, column: 23, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !2697, line: 401, column: 16)
!6011 = !DILocation(line: 403, column: 9, scope: !6010)
!6012 = !DILocation(line: 403, column: 21, scope: !6010)
!6013 = !DILocation(line: 405, column: 11, scope: !6010)
!6014 = !DILocation(line: 404, column: 21, scope: !6010)
!6015 = !DILocation(line: 406, column: 2, scope: !6010)
!6016 = !DILocation(line: 409, column: 1, scope: !5987)
!6017 = distinct !DISubprogram(name: "extract_prec", scope: !2697, file: !2697, line: 420, type: !5806, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6018)
!6018 = !{!6019, !6020, !6021}
!6019 = !DILocalVariable(name: "conv", arg: 1, scope: !6017, file: !2697, line: 420, type: !5462)
!6020 = !DILocalVariable(name: "sp", arg: 2, scope: !6017, file: !2697, line: 421, type: !140)
!6021 = !DILocalVariable(name: "prec", scope: !6017, file: !2697, line: 435, type: !272)
!6022 = !DILocation(line: 0, scope: !6017)
!6023 = !DILocation(line: 423, column: 24, scope: !6017)
!6024 = !DILocation(line: 423, column: 28, scope: !6017)
!6025 = !DILocation(line: 423, column: 8, scope: !6017)
!6026 = !DILocation(line: 423, column: 21, scope: !6017)
!6027 = !DILocation(line: 425, column: 6, scope: !6017)
!6028 = !DILocation(line: 428, column: 2, scope: !6017)
!6029 = !DILocation(line: 430, column: 6, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6017, file: !2697, line: 430, column: 6)
!6031 = !DILocation(line: 430, column: 10, scope: !6030)
!6032 = !DILocation(line: 430, column: 6, scope: !6017)
!6033 = !DILocation(line: 431, column: 19, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6030, file: !2697, line: 430, column: 18)
!6035 = !DILocation(line: 432, column: 10, scope: !6034)
!6036 = !DILocation(line: 432, column: 3, scope: !6034)
!6037 = !DILocation(line: 435, column: 16, scope: !6017)
!6038 = !DILocation(line: 437, column: 8, scope: !6017)
!6039 = !DILocation(line: 437, column: 19, scope: !6017)
!6040 = !DILocation(line: 439, column: 10, scope: !6017)
!6041 = !DILocation(line: 438, column: 20, scope: !6017)
!6042 = !DILocation(line: 441, column: 9, scope: !6017)
!6043 = !DILocation(line: 442, column: 1, scope: !6017)
!6044 = distinct !DISubprogram(name: "extract_length", scope: !2697, file: !2697, line: 453, type: !5806, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6045)
!6045 = !{!6046, !6047}
!6046 = !DILocalVariable(name: "conv", arg: 1, scope: !6044, file: !2697, line: 453, type: !5462)
!6047 = !DILocalVariable(name: "sp", arg: 2, scope: !6044, file: !2697, line: 454, type: !140)
!6048 = !DILocation(line: 0, scope: !6044)
!6049 = !DILocation(line: 456, column: 10, scope: !6044)
!6050 = !DILocation(line: 456, column: 2, scope: !6044)
!6051 = !DILocation(line: 458, column: 8, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !2697, line: 458, column: 7)
!6053 = distinct !DILexicalBlock(scope: !6044, file: !2697, line: 456, column: 15)
!6054 = !DILocation(line: 458, column: 7, scope: !6052)
!6055 = !DILocation(line: 458, column: 13, scope: !6052)
!6056 = !DILocation(line: 0, scope: !6052)
!6057 = !DILocation(line: 458, column: 7, scope: !6053)
!6058 = !DILocation(line: 459, column: 21, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6052, file: !2697, line: 458, column: 21)
!6060 = !DILocation(line: 460, column: 4, scope: !6059)
!6061 = !DILocation(line: 461, column: 3, scope: !6059)
!6062 = !DILocation(line: 462, column: 21, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6052, file: !2697, line: 461, column: 10)
!6064 = !DILocation(line: 466, column: 8, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6053, file: !2697, line: 466, column: 7)
!6066 = !DILocation(line: 466, column: 7, scope: !6065)
!6067 = !DILocation(line: 466, column: 13, scope: !6065)
!6068 = !DILocation(line: 0, scope: !6065)
!6069 = !DILocation(line: 466, column: 7, scope: !6053)
!6070 = !DILocation(line: 467, column: 21, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6065, file: !2697, line: 466, column: 21)
!6072 = !DILocation(line: 468, column: 4, scope: !6071)
!6073 = !DILocation(line: 469, column: 3, scope: !6071)
!6074 = !DILocation(line: 470, column: 21, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6065, file: !2697, line: 469, column: 10)
!6076 = !DILocation(line: 474, column: 9, scope: !6053)
!6077 = !DILocation(line: 474, column: 20, scope: !6053)
!6078 = !DILocation(line: 475, column: 3, scope: !6053)
!6079 = !DILocation(line: 476, column: 3, scope: !6053)
!6080 = !DILocation(line: 478, column: 9, scope: !6053)
!6081 = !DILocation(line: 478, column: 20, scope: !6053)
!6082 = !DILocation(line: 479, column: 3, scope: !6053)
!6083 = !DILocation(line: 480, column: 3, scope: !6053)
!6084 = !DILocation(line: 482, column: 9, scope: !6053)
!6085 = !DILocation(line: 482, column: 20, scope: !6053)
!6086 = !DILocation(line: 483, column: 3, scope: !6053)
!6087 = !DILocation(line: 484, column: 3, scope: !6053)
!6088 = !DILocation(line: 486, column: 9, scope: !6053)
!6089 = !DILocation(line: 486, column: 20, scope: !6053)
!6090 = !DILocation(line: 487, column: 3, scope: !6053)
!6091 = !DILocation(line: 492, column: 21, scope: !6053)
!6092 = !DILocation(line: 493, column: 3, scope: !6053)
!6093 = !DILocation(line: 495, column: 9, scope: !6053)
!6094 = !DILocation(line: 495, column: 20, scope: !6053)
!6095 = !DILocation(line: 496, column: 3, scope: !6053)
!6096 = !DILocation(line: 498, column: 2, scope: !6044)
!6097 = distinct !DISubprogram(name: "extract_specifier", scope: !2697, file: !2697, line: 513, type: !5806, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6098)
!6098 = !{!6099, !6100, !6101, !6102}
!6099 = !DILocalVariable(name: "conv", arg: 1, scope: !6097, file: !2697, line: 513, type: !5462)
!6100 = !DILocalVariable(name: "sp", arg: 2, scope: !6097, file: !2697, line: 514, type: !140)
!6101 = !DILocalVariable(name: "unsupported", scope: !6097, file: !2697, line: 516, type: !153)
!6102 = !DILabel(scope: !6103, name: "int_conv", file: !2697, line: 526)
!6103 = distinct !DILexicalBlock(scope: !6097, file: !2697, line: 520, column: 27)
!6104 = !DILocation(line: 0, scope: !6097)
!6105 = !DILocation(line: 518, column: 20, scope: !6097)
!6106 = !DILocation(line: 518, column: 8, scope: !6097)
!6107 = !DILocation(line: 518, column: 18, scope: !6097)
!6108 = !DILocation(line: 520, column: 2, scope: !6097)
!6109 = !DILocation(line: 525, column: 3, scope: !6103)
!6110 = !DILocation(line: 0, scope: !6103)
!6111 = !DILocation(line: 526, column: 1, scope: !6103)
!6112 = !DILocation(line: 528, column: 24, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6103, file: !2697, line: 528, column: 7)
!6114 = !DILocation(line: 528, column: 7, scope: !6103)
!6115 = !DILocation(line: 535, column: 23, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6103, file: !2697, line: 535, column: 7)
!6117 = !DILocation(line: 535, column: 7, scope: !6103)
!6118 = !DILocation(line: 536, column: 36, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !2697, line: 535, column: 31)
!6120 = !DILocation(line: 537, column: 3, scope: !6119)
!6121 = !DILocation(line: 570, column: 9, scope: !6103)
!6122 = !DILocation(line: 570, column: 23, scope: !6103)
!6123 = !DILocation(line: 575, column: 4, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !2697, line: 573, column: 48)
!6125 = distinct !DILexicalBlock(scope: !6103, file: !2697, line: 573, column: 7)
!6126 = !DILocation(line: 603, column: 9, scope: !6103)
!6127 = !DILocation(line: 603, column: 23, scope: !6103)
!6128 = !DILocation(line: 605, column: 24, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6103, file: !2697, line: 605, column: 7)
!6130 = !DILocation(line: 605, column: 7, scope: !6103)
!6131 = !DILocation(line: 612, column: 9, scope: !6103)
!6132 = !DILocation(line: 612, column: 23, scope: !6103)
!6133 = !DILocation(line: 619, column: 24, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6103, file: !2697, line: 619, column: 7)
!6135 = !DILocation(line: 619, column: 7, scope: !6103)
!6136 = !DILocation(line: 625, column: 9, scope: !6103)
!6137 = !DILocation(line: 625, column: 17, scope: !6103)
!6138 = !DILocation(line: 626, column: 3, scope: !6103)
!6139 = !DILocation(line: 629, column: 20, scope: !6097)
!6140 = !DILocation(line: 629, column: 8, scope: !6097)
!6141 = !DILocation(line: 518, column: 23, scope: !6097)
!6142 = !DILocation(line: 631, column: 2, scope: !6097)
!6143 = distinct !DISubprogram(name: "extract_decimal", scope: !2697, file: !2697, line: 318, type: !6144, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{!272, !386}
!6146 = !{!6147, !6148, !6149}
!6147 = !DILocalVariable(name: "str", arg: 1, scope: !6143, file: !2697, line: 318, type: !386)
!6148 = !DILocalVariable(name: "sp", scope: !6143, file: !2697, line: 320, type: !140)
!6149 = !DILocalVariable(name: "val", scope: !6143, file: !2697, line: 321, type: !272)
!6150 = !DILocation(line: 0, scope: !6143)
!6151 = !DILocation(line: 320, column: 19, scope: !6143)
!6152 = !DILocation(line: 323, column: 37, scope: !6143)
!6153 = !DILocation(line: 323, column: 17, scope: !6143)
!6154 = !DILocation(line: 323, column: 9, scope: !6143)
!6155 = !DILocation(line: 323, column: 2, scope: !6143)
!6156 = !DILocation(line: 324, column: 13, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6143, file: !2697, line: 323, column: 43)
!6158 = !DILocation(line: 324, column: 24, scope: !6157)
!6159 = !DILocation(line: 324, column: 19, scope: !6157)
!6160 = !DILocation(line: 324, column: 27, scope: !6157)
!6161 = distinct !{!6161, !6155, !6162}
!6162 = !DILocation(line: 325, column: 2, scope: !6143)
!6163 = !DILocation(line: 326, column: 7, scope: !6143)
!6164 = !DILocation(line: 327, column: 2, scope: !6143)
!6165 = distinct !DISubprogram(name: "isdigit", scope: !5945, file: !5945, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6166)
!6166 = !{!6167}
!6167 = !DILocalVariable(name: "a", arg: 1, scope: !6165, file: !5945, line: 43, type: !125)
!6168 = !DILocation(line: 0, scope: !6165)
!6169 = !DILocation(line: 45, column: 29, scope: !6165)
!6170 = !DILocation(line: 45, column: 45, scope: !6165)
!6171 = !DILocation(line: 45, column: 2, scope: !6165)
!6172 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6173, file: !6173, line: 9, type: !3300, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !639)
!6173 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!6174 = !DILocation(line: 11, column: 1, scope: !6172)
!6175 = !{i64 2147565797, i64 2147565840, i64 2147565880}
!6176 = !DILocation(line: 12, column: 1, scope: !6172)
!6177 = !{i64 2147570024, i64 2147570067, i64 2147570107}
!6178 = !DILocation(line: 13, column: 1, scope: !6172)
!6179 = !{i64 2147570233, i64 2147570276, i64 2147570316}
!6180 = !DILocation(line: 14, column: 1, scope: !6172)
!6181 = !{i64 2147570402, i64 2147570445, i64 2147570485}
!6182 = !DILocation(line: 15, column: 1, scope: !6172)
!6183 = !{i64 2147570565, i64 2147570608, i64 2147570648}
!6184 = !DILocation(line: 16, column: 1, scope: !6172)
!6185 = !{i64 2147570749, i64 2147570792, i64 2147570832}
!6186 = !DILocation(line: 17, column: 1, scope: !6172)
!6187 = !{i64 2147570928, i64 2147570971, i64 2147571011}
!6188 = !DILocation(line: 18, column: 1, scope: !6172)
!6189 = !{i64 2147571171, i64 2147571214, i64 2147571254}
!6190 = !DILocation(line: 19, column: 1, scope: !6172)
!6191 = !{i64 2147571406, i64 2147571449, i64 2147571489}
!6192 = !DILocation(line: 20, column: 1, scope: !6172)
!6193 = !{i64 2147571593, i64 2147571636, i64 2147571676}
!6194 = !DILocation(line: 21, column: 1, scope: !6172)
!6195 = !{i64 2147571809, i64 2147571852, i64 2147571892}
!6196 = !DILocation(line: 22, column: 1, scope: !6172)
!6197 = !{i64 2147572012, i64 2147572055, i64 2147572095}
!6198 = !DILocation(line: 23, column: 1, scope: !6172)
!6199 = !{i64 2147572215, i64 2147572258, i64 2147572298}
!6200 = !DILocation(line: 24, column: 1, scope: !6172)
!6201 = !{i64 2147572390, i64 2147572433, i64 2147572473}
!6202 = !DILocation(line: 25, column: 1, scope: !6172)
!6203 = !{i64 2147572598, i64 2147572641, i64 2147572681}
!6204 = !DILocation(line: 26, column: 1, scope: !6172)
!6205 = !{i64 2147572802, i64 2147572845, i64 2147572885}
!6206 = !DILocation(line: 27, column: 1, scope: !6172)
!6207 = !{i64 2147572995, i64 2147573038, i64 2147573078}
!6208 = !DILocation(line: 28, column: 1, scope: !6172)
!6209 = !{i64 2147573197, i64 2147573240, i64 2147573280}
!6210 = !DILocation(line: 29, column: 1, scope: !6172)
!6211 = !{i64 2147573396, i64 2147573439, i64 2147573479}
!6212 = !DILocation(line: 30, column: 1, scope: !6172)
!6213 = !{i64 2147573623, i64 2147573666, i64 2147573706}
!6214 = !DILocation(line: 31, column: 1, scope: !6172)
!6215 = !{i64 2147573825, i64 2147573868, i64 2147573908}
!6216 = !DILocation(line: 32, column: 1, scope: !6172)
!6217 = !{i64 2147574040, i64 2147574083, i64 2147574123}
!6218 = !DILocation(line: 33, column: 1, scope: !6172)
!6219 = !{i64 2147574221, i64 2147574264, i64 2147574304}
!6220 = !DILocation(line: 34, column: 1, scope: !6172)
!6221 = !{i64 2147574393, i64 2147574436, i64 2147574476}
!6222 = !DILocation(line: 35, column: 1, scope: !6172)
!6223 = !{i64 2147574595, i64 2147574638, i64 2147574678}
!6224 = !DILocation(line: 36, column: 1, scope: !6172)
!6225 = !{i64 2147574821, i64 2147574864, i64 2147574904}
!6226 = !DILocation(line: 37, column: 1, scope: !6172)
!6227 = !{i64 2147575020, i64 2147575063, i64 2147575103}
!6228 = !DILocation(line: 38, column: 1, scope: !6172)
!6229 = !{i64 2147575195, i64 2147575238, i64 2147575278}
!6230 = !DILocation(line: 39, column: 1, scope: !6172)
!6231 = !{i64 2147575463, i64 2147575506, i64 2147575546}
!6232 = !DILocation(line: 40, column: 1, scope: !6172)
!6233 = !{i64 2147575716, i64 2147575759, i64 2147575799}
!6234 = !DILocation(line: 41, column: 1, scope: !6172)
!6235 = !{i64 2147575957, i64 2147576000, i64 2147576040}
!6236 = !DILocation(line: 42, column: 1, scope: !6172)
!6237 = !{i64 2147576192, i64 2147576235, i64 2147576275}
!6238 = !DILocation(line: 43, column: 1, scope: !6172)
!6239 = !{i64 2147576424, i64 2147576467, i64 2147576507}
!6240 = !DILocation(line: 44, column: 1, scope: !6172)
!6241 = !{i64 2147576650, i64 2147576693, i64 2147576733}
!6242 = !DILocation(line: 45, column: 1, scope: !6172)
!6243 = !{i64 2147576888, i64 2147576931, i64 2147576971}
!6244 = !DILocation(line: 46, column: 1, scope: !6172)
!6245 = !{i64 2147577114, i64 2147577157, i64 2147577197}
!6246 = !DILocation(line: 47, column: 1, scope: !6172)
!6247 = !{i64 2147577349, i64 2147577392, i64 2147577432}
!6248 = !DILocation(line: 48, column: 1, scope: !6172)
!6249 = !{i64 2147577584, i64 2147577627, i64 2147577667}
!6250 = !DILocation(line: 49, column: 1, scope: !6172)
!6251 = !{i64 2147577822, i64 2147577865, i64 2147577905}
!6252 = !DILocation(line: 50, column: 1, scope: !6172)
!6253 = !{i64 2147578096, i64 2147578139, i64 2147578179}
!6254 = !DILocation(line: 51, column: 1, scope: !6172)
!6255 = !{i64 2147578334, i64 2147578377, i64 2147578417}
!6256 = !DILocation(line: 52, column: 1, scope: !6172)
!6257 = !{i64 2147578587, i64 2147578630, i64 2147578670}
!6258 = !DILocation(line: 53, column: 1, scope: !6172)
!6259 = !{i64 2147582892, i64 2147582935, i64 2147582975}
!6260 = !DILocation(line: 54, column: 1, scope: !6172)
!6261 = !{i64 2147583142, i64 2147583185, i64 2147583225}
!6262 = !DILocation(line: 55, column: 1, scope: !6172)
!6263 = !{i64 2147583383, i64 2147583426, i64 2147583466}
!6264 = !DILocation(line: 56, column: 1, scope: !6172)
!6265 = !{i64 2147583630, i64 2147583673, i64 2147583713}
!6266 = !DILocation(line: 57, column: 1, scope: !6172)
!6267 = !{i64 2147583865, i64 2147583908, i64 2147583948}
!6268 = !DILocation(line: 58, column: 1, scope: !6172)
!6269 = !{i64 2147584100, i64 2147584143, i64 2147584183}
!6270 = !DILocation(line: 59, column: 1, scope: !6172)
!6271 = !{i64 2147584335, i64 2147584378, i64 2147584418}
!6272 = !DILocation(line: 60, column: 1, scope: !6172)
!6273 = !{i64 2147584573, i64 2147584616, i64 2147584656}
!6274 = !DILocation(line: 61, column: 1, scope: !6172)
!6275 = !{i64 2147584814, i64 2147584857, i64 2147584897}
!6276 = !DILocation(line: 62, column: 1, scope: !6172)
!6277 = !{i64 2147585094, i64 2147585137, i64 2147585177}
!6278 = !DILocation(line: 63, column: 1, scope: !6172)
!6279 = !{i64 2147585353, i64 2147585396, i64 2147585436}
!6280 = !DILocation(line: 64, column: 1, scope: !6172)
!6281 = !{i64 2147585591, i64 2147585634, i64 2147585674}
!6282 = !DILocation(line: 65, column: 1, scope: !6172)
!6283 = !{i64 2147585850, i64 2147585893, i64 2147585933}
!6284 = !DILocation(line: 66, column: 1, scope: !6172)
!6285 = !{i64 2147586079, i64 2147586122, i64 2147586162}
!6286 = !DILocation(line: 67, column: 1, scope: !6172)
!6287 = !{i64 2147586287, i64 2147586330, i64 2147586370}
!6288 = !DILocation(line: 68, column: 1, scope: !6172)
!6289 = !{i64 2147586498, i64 2147586541, i64 2147586581}
!6290 = !DILocation(line: 69, column: 1, scope: !6172)
!6291 = !{i64 2147586733, i64 2147586776, i64 2147586816}
!6292 = !DILocation(line: 70, column: 1, scope: !6172)
!6293 = !{i64 2147586962, i64 2147587005, i64 2147587045}
!6294 = !DILocation(line: 71, column: 1, scope: !6172)
!6295 = !{i64 2147587179, i64 2147587222, i64 2147587262}
!6296 = !DILocation(line: 72, column: 1, scope: !6172)
!6297 = !{i64 2147587408, i64 2147587451, i64 2147587491}
!6298 = !DILocation(line: 73, column: 1, scope: !6172)
!6299 = !{i64 2147587646, i64 2147587689, i64 2147587729}
!6300 = !DILocation(line: 74, column: 1, scope: !6172)
!6301 = !{i64 2147587878, i64 2147587921, i64 2147587961}
!6302 = !DILocation(line: 75, column: 1, scope: !6172)
!6303 = !{i64 2147588104, i64 2147588147, i64 2147588187}
!6304 = !DILocation(line: 76, column: 1, scope: !6172)
!6305 = !{i64 2147588321, i64 2147588364, i64 2147588404}
!6306 = !DILocation(line: 77, column: 1, scope: !6172)
!6307 = !{i64 2147588553, i64 2147588596, i64 2147588636}
!6308 = !DILocation(line: 78, column: 1, scope: !6172)
!6309 = !{i64 2147588779, i64 2147588822, i64 2147588862}
!6310 = !DILocation(line: 79, column: 1, scope: !6172)
!6311 = !{i64 2147588993, i64 2147589036, i64 2147589076}
!6312 = !DILocation(line: 80, column: 1, scope: !6172)
!6313 = !{i64 2147589213, i64 2147589256, i64 2147589296}
!6314 = !DILocation(line: 81, column: 1, scope: !6172)
!6315 = !{i64 2147589445, i64 2147589488, i64 2147589528}
!6316 = !DILocation(line: 82, column: 1, scope: !6172)
!6317 = !{i64 2147589653, i64 2147589696, i64 2147589736}
!6318 = !DILocation(line: 83, column: 1, scope: !6172)
!6319 = !{i64 2147589858, i64 2147589901, i64 2147589941}
!6320 = !DILocation(line: 84, column: 1, scope: !6172)
!6321 = !{i64 2147590075, i64 2147590118, i64 2147590158}
!6322 = !DILocation(line: 85, column: 1, scope: !6172)
!6323 = !{i64 2147590289, i64 2147590332, i64 2147590372}
!6324 = !DILocation(line: 86, column: 1, scope: !6172)
!6325 = !{i64 2147590515, i64 2147590558, i64 2147590598}
!6326 = !DILocation(line: 87, column: 1, scope: !6172)
!6327 = !{i64 2147590735, i64 2147590778, i64 2147590818}
!6328 = !DILocation(line: 88, column: 1, scope: !6172)
!6329 = !{i64 2147590940, i64 2147590983, i64 2147591023}
!6330 = !DILocation(line: 89, column: 1, scope: !6172)
!6331 = !{i64 2147595233, i64 2147595276, i64 2147595316}
!6332 = !DILocation(line: 90, column: 1, scope: !6172)
!6333 = !{i64 2147595468, i64 2147595511, i64 2147595551}
!6334 = !DILocation(line: 91, column: 1, scope: !6172)
!6335 = !{i64 2147595718, i64 2147595761, i64 2147595801}
!6336 = !DILocation(line: 92, column: 1, scope: !6172)
!6337 = !{i64 2147595968, i64 2147596011, i64 2147596051}
!6338 = !DILocation(line: 93, column: 1, scope: !6172)
!6339 = !{i64 2147596206, i64 2147596249, i64 2147596289}
!6340 = !DILocation(line: 94, column: 1, scope: !6172)
!6341 = !{i64 2147596417, i64 2147596460, i64 2147596500}
!6342 = !DILocation(line: 95, column: 1, scope: !6172)
!6343 = !{i64 2147596634, i64 2147596677, i64 2147596717}
!6344 = !DILocation(line: 96, column: 1, scope: !6172)
!6345 = !{i64 2147596830, i64 2147596873, i64 2147596913}
!6346 = !DILocation(line: 97, column: 1, scope: !6172)
!6347 = !{i64 2147597032, i64 2147597075, i64 2147597115}
!6348 = !DILocation(line: 98, column: 1, scope: !6172)
!6349 = !{i64 2147597225, i64 2147597268, i64 2147597308}
!6350 = !DILocation(line: 99, column: 1, scope: !6172)
!6351 = !{i64 2147597433, i64 2147597476, i64 2147597516}
!6352 = !DILocation(line: 100, column: 1, scope: !6172)
!6353 = !{i64 2147597626, i64 2147597669, i64 2147597709}
!6354 = !DILocation(line: 101, column: 1, scope: !6172)
!6355 = !{i64 2147597831, i64 2147597874, i64 2147597914}
!6356 = !DILocation(line: 102, column: 1, scope: !6172)
!6357 = !{i64 2147598036, i64 2147598079, i64 2147598119}
!6358 = !DILocation(line: 103, column: 1, scope: !6172)
!6359 = !{i64 2147598241, i64 2147598284, i64 2147598324}
!6360 = !DILocation(line: 104, column: 1, scope: !6172)
!6361 = !{i64 2147598449, i64 2147598492, i64 2147598532}
!6362 = !DILocation(line: 105, column: 1, scope: !6172)
!6363 = !{i64 2147598645, i64 2147598688, i64 2147598728}
!6364 = !DILocation(line: 106, column: 1, scope: !6172)
!6365 = !{i64 2147598895, i64 2147598938, i64 2147598978}
!6366 = !DILocation(line: 107, column: 1, scope: !6172)
!6367 = !{i64 2147599106, i64 2147599149, i64 2147599189}
!6368 = !DILocation(line: 108, column: 1, scope: !6172)
!6369 = !{i64 2147599305, i64 2147599348, i64 2147599388}
!6370 = !DILocation(line: 109, column: 1, scope: !6172)
!6371 = !{i64 2147599480, i64 2147599523, i64 2147599563}
!6372 = !DILocation(line: 110, column: 1, scope: !6172)
!6373 = !{i64 2147599664, i64 2147599707, i64 2147599747}
!6374 = !DILocation(line: 111, column: 1, scope: !6172)
!6375 = !{i64 2147599866, i64 2147599909, i64 2147599949}
!6376 = !DILocation(line: 112, column: 1, scope: !6172)
!6377 = !{i64 2147600047, i64 2147600090, i64 2147600130}
!6378 = !DILocation(line: 113, column: 1, scope: !6172)
!6379 = !{i64 2147600246, i64 2147600289, i64 2147600329}
!6380 = !DILocation(line: 114, column: 1, scope: !6172)
!6381 = !{i64 2147600451, i64 2147600494, i64 2147600534}
!6382 = !DILocation(line: 115, column: 1, scope: !6172)
!6383 = !{i64 2147600644, i64 2147600687, i64 2147600727}
!6384 = !DILocation(line: 116, column: 1, scope: !6172)
!6385 = !{i64 2147600810, i64 2147600853, i64 2147600893}
!6386 = !DILocation(line: 117, column: 1, scope: !6172)
!6387 = !{i64 2147600994, i64 2147601037, i64 2147601077}
!6388 = !DILocation(line: 118, column: 1, scope: !6172)
!6389 = !{i64 2147601184, i64 2147601227, i64 2147601267}
!6390 = !DILocation(line: 119, column: 1, scope: !6172)
!6391 = !{i64 2147601368, i64 2147601411, i64 2147601451}
!6392 = !DILocation(line: 120, column: 1, scope: !6172)
!6393 = !{i64 2147601582, i64 2147601625, i64 2147601665}
!6394 = !DILocation(line: 121, column: 1, scope: !6172)
!6395 = !{i64 2147601793, i64 2147601836, i64 2147601876}
!6396 = !DILocation(line: 122, column: 1, scope: !6172)
!6397 = !{i64 2147602016, i64 2147602059, i64 2147602099}
!6398 = !DILocation(line: 123, column: 1, scope: !6172)
!6399 = !{i64 2147602200, i64 2147602243, i64 2147602283}
!6400 = !DILocation(line: 124, column: 1, scope: !6172)
!6401 = !{i64 2147602414, i64 2147602457, i64 2147602497}
!6402 = !DILocation(line: 125, column: 1, scope: !6172)
!6403 = !{i64 2147602580, i64 2147602623, i64 2147602663}
!6404 = !DILocation(line: 126, column: 1, scope: !6172)
!6405 = !{i64 2147602761, i64 2147602804, i64 2147602844}
!6406 = !DILocation(line: 127, column: 1, scope: !6172)
!6407 = !{i64 2147602954, i64 2147602997, i64 2147603037}
!6408 = !DILocation(line: 128, column: 1, scope: !6172)
!6409 = !{i64 2147603180, i64 2147603223, i64 2147603263}
!6410 = !DILocation(line: 129, column: 1, scope: !6172)
!6411 = !{i64 2147603394, i64 2147603437, i64 2147603477}
!6412 = !DILocation(line: 130, column: 1, scope: !6172)
!6413 = !{i64 2147603620, i64 2147603663, i64 2147603703}
!6414 = !DILocation(line: 131, column: 1, scope: !6172)
!6415 = !{i64 2147603837, i64 2147603880, i64 2147603920}
!6416 = !DILocation(line: 132, column: 1, scope: !6172)
!6417 = !{i64 2147604114, i64 2147604157, i64 2147604197}
!6418 = !DILocation(line: 133, column: 1, scope: !6172)
!6419 = !{i64 2147608401, i64 2147608444, i64 2147608484}
!6420 = !DILocation(line: 134, column: 1, scope: !6172)
!6421 = !{i64 2147608609, i64 2147608652, i64 2147608692}
!6422 = !DILocation(line: 135, column: 1, scope: !6172)
!6423 = !{i64 2147608805, i64 2147608848, i64 2147608888}
!6424 = !DILocation(line: 136, column: 1, scope: !6172)
!6425 = !{i64 2147609070, i64 2147609113, i64 2147609153}
!6426 = !DILocation(line: 137, column: 1, scope: !6172)
!6427 = !{i64 2147609284, i64 2147609327, i64 2147609367}
!6428 = !DILocation(line: 138, column: 1, scope: !6172)
!6429 = !{i64 2147609459, i64 2147609502, i64 2147609542}
!6430 = !DILocation(line: 139, column: 1, scope: !6172)
!6431 = !{i64 2147609713, i64 2147609756, i64 2147609796}
!6432 = !DILocation(line: 140, column: 1, scope: !6172)
!6433 = !{i64 2147609912, i64 2147609955, i64 2147609995}
!6434 = !DILocation(line: 141, column: 1, scope: !6172)
!6435 = !{i64 2147610154, i64 2147610197, i64 2147610237}
!6436 = !DILocation(line: 142, column: 1, scope: !6172)
!6437 = !{i64 2147610317, i64 2147610360, i64 2147610400}
!6438 = !DILocation(line: 143, column: 1, scope: !6172)
!6439 = !{i64 2147610504, i64 2147610547, i64 2147610587}
!6440 = !DILocation(line: 144, column: 1, scope: !6172)
!6441 = !{i64 2147610712, i64 2147610755, i64 2147610795}
!6442 = !DILocation(line: 145, column: 1, scope: !6172)
!6443 = !{i64 2147610908, i64 2147610951, i64 2147610991}
!6444 = !DILocation(line: 146, column: 1, scope: !6172)
!6445 = !{i64 2147611101, i64 2147611144, i64 2147611184}
!6446 = !DILocation(line: 147, column: 1, scope: !6172)
!6447 = !{i64 2147611284, i64 2147611327, i64 2147611367}
!6448 = !DILocation(line: 148, column: 1, scope: !6172)
!6449 = !{i64 2147611498, i64 2147611541, i64 2147611581}
!6450 = !DILocation(line: 149, column: 1, scope: !6172)
!6451 = !{i64 2147611709, i64 2147611752, i64 2147611792}
!6452 = !DILocation(line: 150, column: 1, scope: !6172)
!6453 = !{i64 2147611929, i64 2147611972, i64 2147612012}
!6454 = !DILocation(line: 151, column: 1, scope: !6172)
!6455 = !{i64 2147612136, i64 2147612179, i64 2147612219}
!6456 = !DILocation(line: 152, column: 1, scope: !6172)
!6457 = !{i64 2147612409, i64 2147612452, i64 2147612492}
!6458 = !DILocation(line: 153, column: 1, scope: !6172)
!6459 = !{i64 2147612657, i64 2147612700, i64 2147612740}
!6460 = !DILocation(line: 154, column: 1, scope: !6172)
!6461 = !{i64 2147612856, i64 2147612899, i64 2147612939}
!6462 = !DILocation(line: 155, column: 1, scope: !6172)
!6463 = !{i64 2147613091, i64 2147613134, i64 2147613174}
!6464 = !DILocation(line: 156, column: 1, scope: !6172)
!6465 = !{i64 2147613341, i64 2147613384, i64 2147613424}
!6466 = !DILocation(line: 157, column: 1, scope: !6172)
!6467 = !{i64 2147613543, i64 2147613586, i64 2147613626}
!6468 = !DILocation(line: 158, column: 1, scope: !6172)
!6469 = !{i64 2147613766, i64 2147613809, i64 2147613849}
!6470 = !DILocation(line: 159, column: 1, scope: !6172)
!6471 = !{i64 2147613980, i64 2147614023, i64 2147614063}
!6472 = !DILocation(line: 160, column: 1, scope: !6172)
!6473 = !{i64 2147614224, i64 2147614267, i64 2147614307}
!6474 = !DILocation(line: 161, column: 1, scope: !6172)
!6475 = !{i64 2147614453, i64 2147614496, i64 2147614536}
!6476 = !DILocation(line: 162, column: 1, scope: !6172)
!6477 = !{i64 2147614682, i64 2147614725, i64 2147614765}
!6478 = !DILocation(line: 163, column: 1, scope: !6172)
!6479 = !{i64 2147614890, i64 2147614933, i64 2147614973}
!6480 = !DILocation(line: 164, column: 1, scope: !6172)
!6481 = !{i64 2147615128, i64 2147615171, i64 2147615211}
!6482 = !DILocation(line: 165, column: 1, scope: !6172)
!6483 = !{i64 2147615354, i64 2147615397, i64 2147615437}
!6484 = !DILocation(line: 166, column: 1, scope: !6172)
!6485 = !{i64 2147615613, i64 2147615656, i64 2147615696}
!6486 = !DILocation(line: 167, column: 1, scope: !6172)
!6487 = !{i64 2147615833, i64 2147615876, i64 2147615916}
!6488 = !DILocation(line: 168, column: 1, scope: !6172)
!6489 = !{i64 2147616065, i64 2147616108, i64 2147616148}
!6490 = !DILocation(line: 169, column: 1, scope: !6172)
!6491 = !{i64 2147616306, i64 2147616349, i64 2147616389}
!6492 = !DILocation(line: 170, column: 1, scope: !6172)
!6493 = !{i64 2147616547, i64 2147616590, i64 2147616630}
!6494 = !DILocation(line: 171, column: 1, scope: !6172)
!6495 = !{i64 2147616770, i64 2147616813, i64 2147616853}
!6496 = !DILocation(line: 172, column: 1, scope: !6172)
!6497 = !{i64 2147621048, i64 2147621091, i64 2147621131}
!6498 = !DILocation(line: 173, column: 1, scope: !6172)
!6499 = !{i64 2147621289, i64 2147621332, i64 2147621372}
!6500 = !DILocation(line: 174, column: 1, scope: !6172)
!6501 = !{i64 2147621476, i64 2147621519, i64 2147621559}
!6502 = !DILocation(line: 175, column: 1, scope: !6172)
!6503 = !{i64 2147621663, i64 2147621706, i64 2147621746}
!6504 = !DILocation(line: 176, column: 1, scope: !6172)
!6505 = !{i64 2147621826, i64 2147621869, i64 2147621909}
!6506 = !DILocation(line: 177, column: 1, scope: !6172)
!6507 = !{i64 2147622031, i64 2147622074, i64 2147622114}
!6508 = !DILocation(line: 178, column: 1, scope: !6172)
!6509 = !{i64 2147622224, i64 2147622267, i64 2147622307}
!6510 = !DILocation(line: 179, column: 1, scope: !6172)
!6511 = !{i64 2147622483, i64 2147622526, i64 2147622566}
!6512 = !DILocation(line: 180, column: 1, scope: !6172)
!6513 = !{i64 2147622706, i64 2147622749, i64 2147622789}
!6514 = !DILocation(line: 181, column: 1, scope: !6172)
!6515 = !{i64 2147622935, i64 2147622978, i64 2147623018}
!6516 = !DILocation(line: 182, column: 1, scope: !6172)
!6517 = !{i64 2147623149, i64 2147623192, i64 2147623232}
!6518 = !DILocation(line: 183, column: 1, scope: !6172)
!6519 = !{i64 2147623351, i64 2147623394, i64 2147623434}
!6520 = !DILocation(line: 184, column: 1, scope: !6172)
!6521 = !{i64 2147623547, i64 2147623590, i64 2147623630}
!6522 = !DILocation(line: 185, column: 1, scope: !6172)
!6523 = !{i64 2147623759, i64 2147623802, i64 2147623842}
!6524 = !DILocation(line: 186, column: 1, scope: !6172)
!6525 = !{i64 2147623980, i64 2147624023, i64 2147624063}
!6526 = !DILocation(line: 187, column: 1, scope: !6172)
!6527 = !{i64 2147624194, i64 2147624237, i64 2147624277}
!6528 = !DILocation(line: 188, column: 1, scope: !6172)
!6529 = !{i64 2147624384, i64 2147624427, i64 2147624467}
!6530 = !DILocation(line: 189, column: 1, scope: !6172)
!6531 = !{i64 2147624583, i64 2147624626, i64 2147624666}
!6532 = !DILocation(line: 190, column: 1, scope: !6172)
!6533 = !{i64 2147624788, i64 2147624831, i64 2147624871}
!6534 = !DILocation(line: 191, column: 1, scope: !6172)
!6535 = !{i64 2147625008, i64 2147625051, i64 2147625091}
!6536 = !DILocation(line: 192, column: 1, scope: !6172)
!6537 = !{i64 2147625209, i64 2147625252, i64 2147625292}
!6538 = !DILocation(line: 193, column: 1, scope: !6172)
!6539 = !{i64 2147625408, i64 2147625451, i64 2147625491}
!6540 = !DILocation(line: 194, column: 1, scope: !6172)
!6541 = !{i64 2147625613, i64 2147625656, i64 2147625696}
!6542 = !DILocation(line: 195, column: 1, scope: !6172)
!6543 = !{i64 2147625782, i64 2147625825, i64 2147625865}
!6544 = !DILocation(line: 196, column: 1, scope: !6172)
!6545 = !{i64 2147625966, i64 2147626009, i64 2147626049}
!6546 = !DILocation(line: 197, column: 1, scope: !6172)
!6547 = !{i64 2147626150, i64 2147626193, i64 2147626233}
!6548 = !DILocation(line: 198, column: 1, scope: !6172)
!6549 = !{i64 2147626337, i64 2147626380, i64 2147626420}
!6550 = !DILocation(line: 199, column: 1, scope: !6172)
!6551 = !{i64 2147626521, i64 2147626564, i64 2147626604}
!6552 = !DILocation(line: 200, column: 1, scope: !6172)
!6553 = !{i64 2147626759, i64 2147626802, i64 2147626842}
!6554 = !DILocation(line: 201, column: 1, scope: !6172)
!6555 = !{i64 2147626989, i64 2147627032, i64 2147627072}
!6556 = !DILocation(line: 202, column: 1, scope: !6172)
!6557 = !{i64 2147627218, i64 2147627261, i64 2147627301}
!6558 = !DILocation(line: 203, column: 1, scope: !6172)
!6559 = !{i64 2147627405, i64 2147627448, i64 2147627488}
!6560 = !DILocation(line: 204, column: 1, scope: !6172)
!6561 = !{i64 2147627601, i64 2147627644, i64 2147627684}
!6562 = !DILocation(line: 205, column: 1, scope: !6172)
!6563 = !{i64 2147627809, i64 2147627852, i64 2147627892}
!6564 = !DILocation(line: 206, column: 1, scope: !6172)
!6565 = !{i64 2147628021, i64 2147628064, i64 2147628104}
!6566 = !DILocation(line: 207, column: 1, scope: !6172)
!6567 = !{i64 2147628220, i64 2147628263, i64 2147628303}
!6568 = !DILocation(line: 208, column: 1, scope: !6172)
!6569 = !{i64 2147628458, i64 2147628501, i64 2147628541}
!6570 = !DILocation(line: 209, column: 1, scope: !6172)
!6571 = !{i64 2147628654, i64 2147628697, i64 2147628737}
!6572 = !DILocation(line: 210, column: 1, scope: !6172)
!6573 = !{i64 2147628856, i64 2147628899, i64 2147628939}
!6574 = !DILocation(line: 211, column: 1, scope: !6172)
!6575 = !{i64 2147629049, i64 2147629092, i64 2147629132}
!6576 = !DILocation(line: 212, column: 1, scope: !6172)
!6577 = !{i64 2147629283, i64 2147629326, i64 2147629366}
!6578 = !DILocation(line: 213, column: 1, scope: !6172)
!6579 = !{i64 2147629446, i64 2147629489, i64 2147629529}
!6580 = !DILocation(line: 214, column: 1, scope: !6172)
!6581 = !{i64 2147629685, i64 2147629728, i64 2147629768}
!6582 = !DILocation(line: 215, column: 1, scope: !6172)
!6583 = !{i64 2147629924, i64 2147629967, i64 2147630007}
!6584 = !DILocation(line: 216, column: 1, scope: !6172)
!6585 = !{i64 2147634221, i64 2147634264, i64 2147634304}
!6586 = !DILocation(line: 217, column: 1, scope: !6172)
!6587 = !{i64 2147634451, i64 2147634494, i64 2147634534}
!6588 = !DILocation(line: 218, column: 1, scope: !6172)
!6589 = !{i64 2147634638, i64 2147634681, i64 2147634721}
!6590 = !DILocation(line: 219, column: 1, scope: !6172)
!6591 = !{i64 2147634837, i64 2147634880, i64 2147634920}
!6592 = !DILocation(line: 220, column: 1, scope: !6172)
!6593 = !{i64 2147635108, i64 2147635151, i64 2147635191}
!6594 = !DILocation(line: 221, column: 1, scope: !6172)
!6595 = !{i64 2147635283, i64 2147635326, i64 2147635366}
!6596 = !DILocation(line: 222, column: 1, scope: !6172)
!6597 = !{i64 2147635517, i64 2147635560, i64 2147635600}
!6598 = !DILocation(line: 223, column: 1, scope: !6172)
!6599 = !{i64 2147635725, i64 2147635768, i64 2147635808}
!6600 = !DILocation(line: 224, column: 1, scope: !6172)
!6601 = !{i64 2147635943, i64 2147635986, i64 2147636026}
!6602 = !DILocation(line: 225, column: 1, scope: !6172)
!6603 = !{i64 2147636133, i64 2147636176, i64 2147636216}
!6604 = !DILocation(line: 226, column: 1, scope: !6172)
!6605 = !{i64 2147636365, i64 2147636408, i64 2147636448}
!6606 = !DILocation(line: 227, column: 1, scope: !6172)
!6607 = !{i64 2147636585, i64 2147636628, i64 2147636668}
!6608 = !DILocation(line: 228, column: 1, scope: !6172)
!6609 = !{i64 2147636781, i64 2147636824, i64 2147636864}
!6610 = !DILocation(line: 229, column: 1, scope: !6172)
!6611 = !{i64 2147636987, i64 2147637030, i64 2147637070}
!6612 = !DILocation(line: 230, column: 1, scope: !6172)
!6613 = !{i64 2147637192, i64 2147637235, i64 2147637275}
!6614 = !DILocation(line: 231, column: 1, scope: !6172)
!6615 = !{i64 2147637418, i64 2147637461, i64 2147637501}
!6616 = !DILocation(line: 232, column: 1, scope: !6172)
!6617 = !{i64 2147637626, i64 2147637669, i64 2147637709}
!6618 = !DILocation(line: 233, column: 1, scope: !6172)
!6619 = !{i64 2147637822, i64 2147637865, i64 2147637905}
!6620 = !DILocation(line: 234, column: 1, scope: !6172)
!6621 = !{i64 2147638054, i64 2147638097, i64 2147638137}
!6622 = !DILocation(line: 235, column: 1, scope: !6172)
!6623 = !{i64 2147638238, i64 2147638281, i64 2147638321}
!6624 = !DILocation(line: 236, column: 1, scope: !6172)
!6625 = !{i64 2147638447, i64 2147638490, i64 2147638530}
!6626 = !DILocation(line: 237, column: 1, scope: !6172)
!6627 = !{i64 2147638655, i64 2147638698, i64 2147638738}
!6628 = !DILocation(line: 238, column: 1, scope: !6172)
!6629 = !{i64 2147638851, i64 2147638894, i64 2147638934}
!6630 = !DILocation(line: 239, column: 1, scope: !6172)
!6631 = !{i64 2147639035, i64 2147639078, i64 2147639118}
!6632 = !DILocation(line: 240, column: 1, scope: !6172)
!6633 = !{i64 2147639261, i64 2147639304, i64 2147639344}
!6634 = !DILocation(line: 241, column: 1, scope: !6172)
!6635 = !{i64 2147639487, i64 2147639530, i64 2147639570}
!6636 = !DILocation(line: 242, column: 1, scope: !6172)
!6637 = !{i64 2147639713, i64 2147639756, i64 2147639796}
!6638 = !DILocation(line: 243, column: 1, scope: !6172)
!6639 = !{i64 2147639939, i64 2147639982, i64 2147640022}
!6640 = !DILocation(line: 244, column: 1, scope: !6172)
!6641 = !{i64 2147640165, i64 2147640208, i64 2147640248}
!6642 = !DILocation(line: 245, column: 1, scope: !6172)
!6643 = !{i64 2147640397, i64 2147640440, i64 2147640480}
!6644 = !DILocation(line: 246, column: 1, scope: !6172)
!6645 = !{i64 2147640635, i64 2147640678, i64 2147640718}
!6646 = !DILocation(line: 247, column: 1, scope: !6172)
!6647 = !{i64 2147640855, i64 2147640898, i64 2147640938}
!6648 = !DILocation(line: 248, column: 1, scope: !6172)
!6649 = !{i64 2147641099, i64 2147641142, i64 2147641182}
!6650 = !DILocation(line: 249, column: 1, scope: !6172)
!6651 = !{i64 2147641340, i64 2147641383, i64 2147641423}
!6652 = !DILocation(line: 250, column: 1, scope: !6172)
!6653 = !{i64 2147641575, i64 2147641618, i64 2147641658}
!6654 = !DILocation(line: 251, column: 1, scope: !6172)
!6655 = !{i64 2147641807, i64 2147641850, i64 2147641890}
!6656 = !DILocation(line: 252, column: 1, scope: !6172)
!6657 = !{i64 2147642009, i64 2147642052, i64 2147642092}
!6658 = !DILocation(line: 253, column: 1, scope: !6172)
!6659 = !{i64 2147642259, i64 2147642302, i64 2147642342}
!6660 = !DILocation(line: 254, column: 1, scope: !6172)
!6661 = !{i64 2147642497, i64 2147642540, i64 2147642580}
!6662 = !DILocation(line: 255, column: 1, scope: !6172)
!6663 = !{i64 2147642705, i64 2147642748, i64 2147642788}
!6664 = !DILocation(line: 256, column: 1, scope: !6172)
!6665 = !{i64 2147646962, i64 2147647005, i64 2147647045}
!6666 = !DILocation(line: 257, column: 1, scope: !6172)
!6667 = !{i64 2147647146, i64 2147647189, i64 2147647229}
!6668 = !DILocation(line: 258, column: 1, scope: !6172)
!6669 = !{i64 2147647363, i64 2147647406, i64 2147647446}
!6670 = !DILocation(line: 259, column: 1, scope: !6172)
!6671 = !{i64 2147647568, i64 2147647611, i64 2147647651}
!6672 = !DILocation(line: 260, column: 1, scope: !6172)
!6673 = !{i64 2147647803, i64 2147647846, i64 2147647886}
!6674 = !DILocation(line: 261, column: 1, scope: !6172)
!6675 = !{i64 2147648026, i64 2147648069, i64 2147648109}
!6676 = !DILocation(line: 262, column: 1, scope: !6172)
!6677 = !{i64 2147648250, i64 2147648293, i64 2147648333}
!6678 = !DILocation(line: 263, column: 1, scope: !6172)
!6679 = !{i64 2147648488, i64 2147648531, i64 2147648571}
!6680 = !DILocation(line: 264, column: 1, scope: !6172)
!6681 = !{i64 2147648726, i64 2147648769, i64 2147648809}
!6682 = !DILocation(line: 265, column: 1, scope: !6172)
!6683 = !{i64 2147648898, i64 2147648941, i64 2147648981}
!6684 = !DILocation(line: 266, column: 1, scope: !6172)
!6685 = !{i64 2147649113, i64 2147649156, i64 2147649196}
!6686 = !DILocation(line: 267, column: 1, scope: !6172)
!6687 = !{i64 2147649327, i64 2147649370, i64 2147649410}
!6688 = !DILocation(line: 268, column: 1, scope: !6172)
!6689 = !{i64 2147649529, i64 2147649572, i64 2147649612}
!6690 = !DILocation(line: 269, column: 1, scope: !6172)
!6691 = !{i64 2147649746, i64 2147649789, i64 2147649829}
!6692 = !DILocation(line: 270, column: 1, scope: !6172)
!6693 = !{i64 2147649999, i64 2147650042, i64 2147650082}
!6694 = !DILocation(line: 271, column: 1, scope: !6172)
!6695 = !{i64 2147650243, i64 2147650286, i64 2147650326}
!6696 = !DILocation(line: 272, column: 1, scope: !6172)
!6697 = !{i64 2147650460, i64 2147650503, i64 2147650543}
!6698 = !DILocation(line: 273, column: 1, scope: !6172)
!6699 = !{i64 2147650665, i64 2147650708, i64 2147650748}
!6700 = !DILocation(line: 274, column: 1, scope: !6172)
!6701 = !{i64 2147650858, i64 2147650901, i64 2147650941}
!6702 = !DILocation(line: 275, column: 1, scope: !6172)
!6703 = !{i64 2147651111, i64 2147651154, i64 2147651194}
!6704 = !DILocation(line: 276, column: 1, scope: !6172)
!6705 = !{i64 2147651319, i64 2147651362, i64 2147651402}
!6706 = !DILocation(line: 277, column: 1, scope: !6172)
!6707 = !{i64 2147651515, i64 2147651558, i64 2147651598}
!6708 = !DILocation(line: 278, column: 1, scope: !6172)
!6709 = !{i64 2147651729, i64 2147651772, i64 2147651812}
!6710 = !DILocation(line: 279, column: 1, scope: !6172)
!6711 = !{i64 2147651937, i64 2147651980, i64 2147652020}
!6712 = !DILocation(line: 280, column: 1, scope: !6172)
!6713 = !{i64 2147652127, i64 2147652170, i64 2147652210}
!6714 = !DILocation(line: 281, column: 1, scope: !6172)
!6715 = !{i64 2147652341, i64 2147652384, i64 2147652424}
!6716 = !DILocation(line: 282, column: 1, scope: !6172)
!6717 = !{i64 2147652603, i64 2147652646, i64 2147652686}
!6718 = !DILocation(line: 283, column: 1, scope: !6172)
!6719 = !{i64 2147652814, i64 2147652857, i64 2147652897}
!6720 = !DILocation(line: 284, column: 1, scope: !6172)
!6721 = !{i64 2147653058, i64 2147653101, i64 2147653141}
!6722 = !DILocation(line: 285, column: 1, scope: !6172)
!6723 = !{i64 2147653269, i64 2147653312, i64 2147653352}
!6724 = !DILocation(line: 286, column: 1, scope: !6172)
!6725 = !{i64 2147653498, i64 2147653541, i64 2147653581}
!6726 = !DILocation(line: 287, column: 1, scope: !6172)
!6727 = !{i64 2147653763, i64 2147653806, i64 2147653846}
!6728 = !DILocation(line: 288, column: 1, scope: !6172)
!6729 = !{i64 2147653968, i64 2147654011, i64 2147654051}
!6730 = !DILocation(line: 289, column: 1, scope: !6172)
!6731 = !{i64 2147654164, i64 2147654207, i64 2147654247}
!6732 = !DILocation(line: 290, column: 1, scope: !6172)
!6733 = !{i64 2147654387, i64 2147654430, i64 2147654470}
!6734 = !DILocation(line: 291, column: 1, scope: !6172)
!6735 = !{i64 2147654550, i64 2147654593, i64 2147654633}
!6736 = !DILocation(line: 292, column: 1, scope: !6172)
!6737 = !{i64 2147654755, i64 2147654798, i64 2147654838}
!6738 = !DILocation(line: 293, column: 1, scope: !6172)
!6739 = !{i64 2147654975, i64 2147655018, i64 2147655058}
!6740 = !DILocation(line: 294, column: 1, scope: !6172)
!6741 = !{i64 2147655189, i64 2147655232, i64 2147655272}
!6742 = !DILocation(line: 295, column: 1, scope: !6172)
!6743 = !{i64 2147655433, i64 2147655476, i64 2147655516}
!6744 = !DILocation(line: 296, column: 1, scope: !6172)
!6745 = !{i64 2147659726, i64 2147659769, i64 2147659809}
!6746 = !DILocation(line: 297, column: 1, scope: !6172)
!6747 = !{i64 2147659940, i64 2147659983, i64 2147660023}
!6748 = !DILocation(line: 298, column: 1, scope: !6172)
!6749 = !{i64 2147660151, i64 2147660194, i64 2147660234}
!6750 = !DILocation(line: 299, column: 1, scope: !6172)
!6751 = !{i64 2147660344, i64 2147660387, i64 2147660427}
!6752 = !DILocation(line: 300, column: 1, scope: !6172)
!6753 = !{i64 2147660543, i64 2147660586, i64 2147660626}
!6754 = !DILocation(line: 301, column: 1, scope: !6172)
!6755 = !{i64 2147660715, i64 2147660758, i64 2147660798}
!6756 = !DILocation(line: 302, column: 1, scope: !6172)
!6757 = !{i64 2147660908, i64 2147660951, i64 2147660991}
!6758 = !DILocation(line: 303, column: 1, scope: !6172)
!6759 = !{i64 2147661104, i64 2147661147, i64 2147661187}
!6760 = !DILocation(line: 304, column: 1, scope: !6172)
!6761 = !{i64 2147661267, i64 2147661310, i64 2147661350}
!6762 = !DILocation(line: 305, column: 1, scope: !6172)
!6763 = !{i64 2147661469, i64 2147661512, i64 2147661552}
!6764 = !DILocation(line: 306, column: 1, scope: !6172)
!6765 = !{i64 2147661674, i64 2147661717, i64 2147661757}
!6766 = !DILocation(line: 307, column: 1, scope: !6172)
!6767 = !{i64 2147661882, i64 2147661925, i64 2147661965}
!6768 = !DILocation(line: 308, column: 1, scope: !6172)
!6769 = !{i64 2147662075, i64 2147662118, i64 2147662158}
!6770 = !DILocation(line: 309, column: 1, scope: !6172)
!6771 = !{i64 2147662262, i64 2147662305, i64 2147662345}
!6772 = !DILocation(line: 310, column: 1, scope: !6172)
!6773 = !{i64 2147662489, i64 2147662532, i64 2147662572}
!6774 = !DILocation(line: 311, column: 1, scope: !6172)
!6775 = !{i64 2147662706, i64 2147662749, i64 2147662789}
!6776 = !DILocation(line: 312, column: 1, scope: !6172)
!6777 = !{i64 2147662998, i64 2147663041, i64 2147663081}
!6778 = !DILocation(line: 313, column: 1, scope: !6172)
!6779 = !{i64 2147663230, i64 2147663273, i64 2147663313}
!6780 = !DILocation(line: 314, column: 1, scope: !6172)
!6781 = !{i64 2147663447, i64 2147663490, i64 2147663530}
!6782 = !DILocation(line: 315, column: 1, scope: !6172)
!6783 = !{i64 2147663654, i64 2147663697, i64 2147663737}
!6784 = !DILocation(line: 316, column: 1, scope: !6172)
!6785 = !{i64 2147663855, i64 2147663898, i64 2147663938}
!6786 = !DILocation(line: 317, column: 1, scope: !6172)
!6787 = !{i64 2147664087, i64 2147664130, i64 2147664170}
!6788 = !DILocation(line: 318, column: 1, scope: !6172)
!6789 = !{i64 2147664295, i64 2147664338, i64 2147664378}
!6790 = !DILocation(line: 319, column: 1, scope: !6172)
!6791 = !{i64 2147664485, i64 2147664528, i64 2147664568}
!6792 = !DILocation(line: 320, column: 1, scope: !6172)
!6793 = !{i64 2147664711, i64 2147664754, i64 2147664794}
!6794 = !DILocation(line: 321, column: 1, scope: !6172)
!6795 = !{i64 2147664900, i64 2147664943, i64 2147664983}
!6796 = !DILocation(line: 322, column: 1, scope: !6172)
!6797 = !{i64 2147665171, i64 2147665214, i64 2147665254}
!6798 = !DILocation(line: 323, column: 1, scope: !6172)
!6799 = !{i64 2147665391, i64 2147665434, i64 2147665474}
!6800 = !DILocation(line: 324, column: 1, scope: !6172)
!6801 = !{i64 2147665644, i64 2147665687, i64 2147665727}
!6802 = !DILocation(line: 325, column: 1, scope: !6172)
!6803 = !{i64 2147665852, i64 2147665895, i64 2147665935}
!6804 = !DILocation(line: 326, column: 1, scope: !6172)
!6805 = !{i64 2147666084, i64 2147666127, i64 2147666167}
!6806 = !DILocation(line: 327, column: 1, scope: !6172)
!6807 = !{i64 2147666295, i64 2147666338, i64 2147666378}
!6808 = !DILocation(line: 328, column: 1, scope: !6172)
!6809 = !{i64 2147666485, i64 2147666528, i64 2147666568}
!6810 = !DILocation(line: 329, column: 1, scope: !6172)
!6811 = !{i64 2147666699, i64 2147666742, i64 2147666782}
!6812 = !DILocation(line: 330, column: 1, scope: !6172)
!6813 = !{i64 2147666898, i64 2147666941, i64 2147666981}
!6814 = !DILocation(line: 331, column: 1, scope: !6172)
!6815 = !{i64 2147667085, i64 2147667128, i64 2147667168}
!6816 = !DILocation(line: 332, column: 1, scope: !6172)
!6817 = !{i64 2147667293, i64 2147667336, i64 2147667376}
!6818 = !DILocation(line: 333, column: 1, scope: !6172)
!6819 = !{i64 2147667522, i64 2147667565, i64 2147667605}
!6820 = !DILocation(line: 334, column: 1, scope: !6172)
!6821 = !{i64 2147667724, i64 2147667767, i64 2147667807}
!6822 = !DILocation(line: 335, column: 1, scope: !6172)
!6823 = !{i64 2147667923, i64 2147667966, i64 2147668006}
!6824 = !DILocation(line: 336, column: 1, scope: !6172)
!6825 = !{i64 2147668113, i64 2147668156, i64 2147668196}
!6826 = !DILocation(line: 337, column: 1, scope: !6172)
!6827 = !{i64 2147668330, i64 2147668373, i64 2147668413}
!6828 = !DILocation(line: 339, column: 1, scope: !6172)
!6829 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !431, file: !431, line: 30, type: !438, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6830)
!6830 = !{!6831, !6832}
!6831 = !DILocalVariable(name: "arg", arg: 1, scope: !6829, file: !431, line: 30, type: !440)
!6832 = !DILocalVariable(name: "key", scope: !6829, file: !431, line: 32, type: !208)
!6833 = !DILocation(line: 0, scope: !6829)
!6834 = !DILocation(line: 37, column: 2, scope: !6829)
!6835 = !DILocation(line: 38, column: 2, scope: !6829)
!6836 = !DILocation(line: 55, column: 2, scope: !6837, inlinedAt: !6844)
!6837 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6841)
!6838 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6839 = !DISubroutineType(types: !6840)
!6840 = !{!32}
!6841 = !{!6842, !6843}
!6842 = !DILocalVariable(name: "key", scope: !6837, file: !6838, line: 44, type: !32)
!6843 = !DILocalVariable(name: "tmp", scope: !6837, file: !6838, line: 53, type: !32)
!6844 = distinct !DILocation(line: 40, column: 8, scope: !6829)
!6845 = !{i64 2103142}
!6846 = !DILocation(line: 0, scope: !6837, inlinedAt: !6844)
!6847 = !DILocalVariable(name: "key", arg: 1, scope: !6848, file: !6838, line: 84, type: !32)
!6848 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6851)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !32}
!6851 = !{!6847}
!6852 = !DILocation(line: 0, scope: !6848, inlinedAt: !6853)
!6853 = distinct !DILocation(line: 47, column: 2, scope: !6829)
!6854 = !DILocation(line: 95, column: 2, scope: !6848, inlinedAt: !6853)
!6855 = !{i64 2103959}
!6856 = !DILocation(line: 51, column: 18, scope: !6829)
!6857 = !DILocation(line: 53, column: 2, scope: !6829)
!6858 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6859, file: !6859, line: 1609, type: !3300, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6859 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6860 = !DILocation(line: 1611, column: 3, scope: !6858)
!6861 = !DILocation(line: 1612, column: 1, scope: !6858)
!6862 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6859, file: !6859, line: 1629, type: !3300, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6863 = !DILocation(line: 1631, column: 3, scope: !6862)
!6864 = !DILocation(line: 1632, column: 1, scope: !6862)
!6865 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !461, file: !461, line: 26, type: !467, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !6866)
!6866 = !{!6867}
!6867 = !DILocalVariable(name: "dev", arg: 1, scope: !6865, file: !461, line: 26, type: !469)
!6868 = !DILocation(line: 0, scope: !6865)
!6869 = !DILocation(line: 68, column: 2, scope: !6865)
!6870 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6871, file: !6871, line: 14, type: !5152, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6872)
!6871 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6872 = !{!6873, !6874}
!6873 = !DILocalVariable(name: "fmt", arg: 1, scope: !6870, file: !6871, line: 14, type: !140)
!6874 = !DILocalVariable(name: "ap", scope: !6870, file: !6871, line: 16, type: !6875)
!6875 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4220, line: 99, baseType: !6876)
!6876 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4220, line: 40, baseType: !6877)
!6877 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6871, baseType: !6878)
!6878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6879)
!6879 = !{!6880}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6878, file: !6871, line: 16, baseType: !124, size: 32)
!6881 = !DILocation(line: 0, scope: !6870)
!6882 = !DILocation(line: 16, column: 2, scope: !6870)
!6883 = !DILocation(line: 16, column: 10, scope: !6870)
!6884 = !DILocation(line: 18, column: 2, scope: !6870)
!6885 = !DILocation(line: 19, column: 2, scope: !6870)
!6886 = !DILocation(line: 20, column: 2, scope: !6870)
!6887 = !DILocation(line: 21, column: 1, scope: !6870)
!6888 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6871, file: !6871, line: 23, type: !6889, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6891)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{null, !140, !6875}
!6891 = !{!6892, !6893}
!6892 = !DILocalVariable(name: "fmt", arg: 1, scope: !6888, file: !6871, line: 23, type: !140)
!6893 = !DILocalVariable(name: "ap", arg: 2, scope: !6888, file: !6871, line: 23, type: !6875)
!6894 = !DILocation(line: 0, scope: !6888)
!6895 = !DILocation(line: 25, column: 2, scope: !6888)
!6896 = !DILocation(line: 26, column: 1, scope: !6888)
!6897 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6871, file: !6871, line: 52, type: !6898, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6900)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{null, !125, !13, !272}
!6900 = !{!6901, !6902, !6903, !6904}
!6901 = !DILocalVariable(name: "level", arg: 1, scope: !6897, file: !6871, line: 52, type: !125)
!6902 = !DILocalVariable(name: "data", arg: 2, scope: !6897, file: !6871, line: 52, type: !13)
!6903 = !DILocalVariable(name: "size", arg: 3, scope: !6897, file: !6871, line: 52, type: !272)
!6904 = !DILocalVariable(name: "data_buffer", scope: !6897, file: !6871, line: 54, type: !140)
!6905 = !DILocation(line: 0, scope: !6897)
!6906 = !DILocation(line: 55, column: 14, scope: !6897)
!6907 = !DILocation(line: 55, column: 2, scope: !6897)
!6908 = !DILocation(line: 56, column: 3, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6897, file: !6871, line: 55, column: 20)
!6910 = !DILocation(line: 57, column: 3, scope: !6909)
!6911 = !DILocation(line: 59, column: 7, scope: !6909)
!6912 = distinct !{!6912, !6907, !6913}
!6913 = !DILocation(line: 65, column: 2, scope: !6897)
!6914 = !DILocation(line: 66, column: 1, scope: !6897)
!6915 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3464, file: !3464, line: 175, type: !3465, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6916)
!6916 = !{!6917}
!6917 = !DILocalVariable(name: "level", arg: 1, scope: !6915, file: !3464, line: 175, type: !125)
!6918 = !DILocation(line: 0, scope: !6915)
!6919 = !DILocation(line: 177, column: 2, scope: !6915)
!6920 = !DILocation(line: 189, column: 1, scope: !6915)
!6921 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6871, file: !6871, line: 28, type: !6922, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6924)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{null, !140, !272}
!6924 = !{!6925, !6926, !6927, !6929, !6931}
!6925 = !DILocalVariable(name: "data", arg: 1, scope: !6921, file: !6871, line: 28, type: !140)
!6926 = !DILocalVariable(name: "length", arg: 2, scope: !6921, file: !6871, line: 28, type: !272)
!6927 = !DILocalVariable(name: "i", scope: !6928, file: !6871, line: 30, type: !272)
!6928 = distinct !DILexicalBlock(scope: !6921, file: !6871, line: 30, column: 2)
!6929 = !DILocalVariable(name: "i", scope: !6930, file: !6871, line: 40, type: !272)
!6930 = distinct !DILexicalBlock(scope: !6921, file: !6871, line: 40, column: 2)
!6931 = !DILocalVariable(name: "c", scope: !6932, file: !6871, line: 42, type: !151)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6871, line: 41, column: 19)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6871, line: 41, column: 7)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6871, line: 40, column: 54)
!6935 = distinct !DILexicalBlock(scope: !6930, file: !6871, line: 40, column: 2)
!6936 = !DILocation(line: 0, scope: !6921)
!6937 = !DILocation(line: 0, scope: !6928)
!6938 = !DILocation(line: 30, column: 2, scope: !6928)
!6939 = !DILocation(line: 38, column: 2, scope: !6921)
!6940 = !DILocation(line: 0, scope: !6930)
!6941 = !DILocation(line: 40, column: 2, scope: !6930)
!6942 = !DILocation(line: 31, column: 9, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6871, line: 31, column: 7)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6871, line: 30, column: 54)
!6945 = distinct !DILexicalBlock(scope: !6928, file: !6871, line: 30, column: 2)
!6946 = !DILocation(line: 31, column: 7, scope: !6944)
!6947 = !DILocation(line: 32, column: 35, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6943, file: !6871, line: 31, column: 19)
!6949 = !DILocation(line: 32, column: 20, scope: !6948)
!6950 = !DILocation(line: 32, column: 4, scope: !6948)
!6951 = !DILocation(line: 33, column: 3, scope: !6948)
!6952 = !DILocation(line: 34, column: 4, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6943, file: !6871, line: 33, column: 10)
!6954 = !DILocation(line: 30, column: 50, scope: !6945)
!6955 = !DILocation(line: 30, column: 24, scope: !6945)
!6956 = distinct !{!6956, !6938, !6957}
!6957 = !DILocation(line: 36, column: 2, scope: !6928)
!6958 = !DILocation(line: 49, column: 2, scope: !6921)
!6959 = !DILocation(line: 50, column: 1, scope: !6921)
!6960 = !DILocation(line: 41, column: 9, scope: !6933)
!6961 = !DILocation(line: 41, column: 7, scope: !6934)
!6962 = !DILocation(line: 42, column: 22, scope: !6932)
!6963 = !DILocation(line: 0, scope: !6932)
!6964 = !DILocation(line: 44, column: 25, scope: !6932)
!6965 = !DILocation(line: 44, column: 17, scope: !6932)
!6966 = !DILocation(line: 44, column: 33, scope: !6932)
!6967 = !DILocation(line: 44, column: 4, scope: !6932)
!6968 = !DILocation(line: 45, column: 3, scope: !6932)
!6969 = !DILocation(line: 46, column: 4, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6933, file: !6871, line: 45, column: 10)
!6971 = !DILocation(line: 40, column: 50, scope: !6935)
!6972 = !DILocation(line: 40, column: 24, scope: !6935)
!6973 = distinct !{!6973, !6941, !6974}
!6974 = !DILocation(line: 48, column: 2, scope: !6930)
!6975 = distinct !DISubprogram(name: "isprint", scope: !5945, file: !5945, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6976)
!6976 = !{!6977}
!6977 = !DILocalVariable(name: "c", arg: 1, scope: !6975, file: !5945, line: 37, type: !125)
!6978 = !DILocation(line: 0, scope: !6975)
!6979 = !DILocation(line: 39, column: 38, scope: !6975)
!6980 = !DILocation(line: 39, column: 2, scope: !6975)
!6981 = distinct !DISubprogram(name: "_copy", scope: !6982, file: !6982, line: 40, type: !6983, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !6985)
!6982 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!32, !184, !32, !490, !32}
!6985 = !{!6986, !6987, !6988, !6989}
!6986 = !DILocalVariable(name: "to", arg: 1, scope: !6981, file: !6982, line: 40, type: !184)
!6987 = !DILocalVariable(name: "to_len", arg: 2, scope: !6981, file: !6982, line: 40, type: !32)
!6988 = !DILocalVariable(name: "from", arg: 3, scope: !6981, file: !6982, line: 41, type: !490)
!6989 = !DILocalVariable(name: "from_len", arg: 4, scope: !6981, file: !6982, line: 41, type: !32)
!6990 = !DILocation(line: 0, scope: !6981)
!6991 = !DILocation(line: 43, column: 15, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6981, file: !6982, line: 43, column: 6)
!6993 = !DILocation(line: 43, column: 6, scope: !6981)
!6994 = !DILocation(line: 44, column: 9, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6992, file: !6982, line: 43, column: 26)
!6996 = !DILocation(line: 45, column: 3, scope: !6995)
!6997 = !DILocation(line: 0, scope: !6992)
!6998 = !DILocation(line: 49, column: 1, scope: !6981)
!6999 = distinct !DISubprogram(name: "_set", scope: !6982, file: !6982, line: 51, type: !7000, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7002)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{null, !124, !150, !32}
!7002 = !{!7003, !7004, !7005}
!7003 = !DILocalVariable(name: "to", arg: 1, scope: !6999, file: !6982, line: 51, type: !124)
!7004 = !DILocalVariable(name: "val", arg: 2, scope: !6999, file: !6982, line: 51, type: !150)
!7005 = !DILocalVariable(name: "len", arg: 3, scope: !6999, file: !6982, line: 51, type: !32)
!7006 = !DILocation(line: 0, scope: !6999)
!7007 = !DILocation(line: 53, column: 19, scope: !6999)
!7008 = !DILocation(line: 53, column: 8, scope: !6999)
!7009 = !DILocation(line: 54, column: 1, scope: !6999)
!7010 = distinct !DISubprogram(name: "_double_byte", scope: !6982, file: !6982, line: 59, type: !7011, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7013)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{!150, !150}
!7013 = !{!7014}
!7014 = !DILocalVariable(name: "a", arg: 1, scope: !7010, file: !6982, line: 59, type: !150)
!7015 = !DILocation(line: 0, scope: !7010)
!7016 = !DILocation(line: 61, column: 12, scope: !7010)
!7017 = !DILocation(line: 61, column: 27, scope: !7010)
!7018 = !DILocation(line: 61, column: 17, scope: !7010)
!7019 = !DILocation(line: 61, column: 2, scope: !7010)
!7020 = distinct !DISubprogram(name: "_compare", scope: !6982, file: !6982, line: 64, type: !7021, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7023)
!7021 = !DISubroutineType(types: !7022)
!7022 = !{!125, !490, !490, !272}
!7023 = !{!7024, !7025, !7026, !7027, !7028, !7029, !7030}
!7024 = !DILocalVariable(name: "a", arg: 1, scope: !7020, file: !6982, line: 64, type: !490)
!7025 = !DILocalVariable(name: "b", arg: 2, scope: !7020, file: !6982, line: 64, type: !490)
!7026 = !DILocalVariable(name: "size", arg: 3, scope: !7020, file: !6982, line: 64, type: !272)
!7027 = !DILocalVariable(name: "tempa", scope: !7020, file: !6982, line: 66, type: !490)
!7028 = !DILocalVariable(name: "tempb", scope: !7020, file: !6982, line: 67, type: !490)
!7029 = !DILocalVariable(name: "result", scope: !7020, file: !6982, line: 68, type: !150)
!7030 = !DILocalVariable(name: "i", scope: !7031, file: !6982, line: 70, type: !32)
!7031 = distinct !DILexicalBlock(scope: !7020, file: !6982, line: 70, column: 2)
!7032 = !DILocation(line: 0, scope: !7020)
!7033 = !DILocation(line: 0, scope: !7031)
!7034 = !DILocation(line: 70, column: 29, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7031, file: !6982, line: 70, column: 2)
!7036 = !DILocation(line: 70, column: 2, scope: !7031)
!7037 = !DILocation(line: 73, column: 2, scope: !7020)
!7038 = !DILocation(line: 71, column: 13, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7035, file: !6982, line: 70, column: 42)
!7040 = !DILocation(line: 71, column: 24, scope: !7039)
!7041 = !DILocation(line: 71, column: 22, scope: !7039)
!7042 = !DILocation(line: 71, column: 10, scope: !7039)
!7043 = !DILocation(line: 70, column: 38, scope: !7035)
!7044 = distinct !{!7044, !7036, !7045}
!7045 = !DILocation(line: 72, column: 2, scope: !7031)
!7046 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !501, file: !501, line: 62, type: !7047, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7049)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!125, !491, !490}
!7049 = !{!7050, !7051}
!7050 = !DILocalVariable(name: "s", arg: 1, scope: !7046, file: !501, line: 62, type: !491)
!7051 = !DILocalVariable(name: "k", arg: 2, scope: !7046, file: !501, line: 62, type: !490)
!7052 = !DILocation(line: 0, scope: !7046)
!7053 = !DILocation(line: 64, column: 9, scope: !7046)
!7054 = !DILocation(line: 64, column: 2, scope: !7046)
!7055 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !501, file: !501, line: 129, type: !7056, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7059)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!125, !184, !490, !7058}
!7058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!7059 = !{!7060, !7061, !7062, !7063, !7064}
!7060 = !DILocalVariable(name: "out", arg: 1, scope: !7055, file: !501, line: 129, type: !184)
!7061 = !DILocalVariable(name: "in", arg: 2, scope: !7055, file: !501, line: 129, type: !490)
!7062 = !DILocalVariable(name: "s", arg: 3, scope: !7055, file: !501, line: 129, type: !7058)
!7063 = !DILocalVariable(name: "state", scope: !7055, file: !501, line: 131, type: !311)
!7064 = !DILocalVariable(name: "i", scope: !7055, file: !501, line: 132, type: !32)
!7065 = !DILocation(line: 0, scope: !7055)
!7066 = !DILocation(line: 131, column: 2, scope: !7055)
!7067 = !DILocation(line: 131, column: 10, scope: !7055)
!7068 = !DILocation(line: 134, column: 10, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7055, file: !501, line: 134, column: 6)
!7070 = !DILocation(line: 134, column: 6, scope: !7055)
!7071 = !DILocation(line: 142, column: 8, scope: !7055)
!7072 = !DILocation(line: 144, column: 32, scope: !7055)
!7073 = !DILocation(line: 144, column: 2, scope: !7055)
!7074 = !DILocation(line: 146, column: 2, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7055, file: !501, line: 146, column: 2)
!7076 = !DILocation(line: 147, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !501, line: 146, column: 31)
!7078 = distinct !DILexicalBlock(scope: !7075, file: !501, line: 146, column: 2)
!7079 = !DILocation(line: 148, column: 3, scope: !7077)
!7080 = !DILocation(line: 149, column: 37, scope: !7077)
!7081 = !DILocation(line: 149, column: 33, scope: !7077)
!7082 = !DILocation(line: 149, column: 3, scope: !7077)
!7083 = !DILocation(line: 150, column: 3, scope: !7077)
!7084 = !DILocation(line: 146, column: 26, scope: !7078)
!7085 = !DILocation(line: 146, column: 21, scope: !7078)
!7086 = distinct !{!7086, !7074, !7087}
!7087 = !DILocation(line: 151, column: 2, scope: !7075)
!7088 = !DILocation(line: 144, column: 23, scope: !7055)
!7089 = !DILocation(line: 153, column: 2, scope: !7055)
!7090 = !DILocation(line: 154, column: 2, scope: !7055)
!7091 = !DILocation(line: 155, column: 2, scope: !7055)
!7092 = !DILocation(line: 157, column: 8, scope: !7055)
!7093 = !DILocation(line: 160, column: 2, scope: !7055)
!7094 = !DILocation(line: 163, column: 2, scope: !7055)
!7095 = !DILocation(line: 164, column: 1, scope: !7055)
!7096 = distinct !DISubprogram(name: "add_round_key", scope: !501, file: !501, line: 92, type: !7097, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7100)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{null, !184, !7099}
!7099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 32)
!7100 = !{!7101, !7102}
!7101 = !DILocalVariable(name: "s", arg: 1, scope: !7096, file: !501, line: 92, type: !184)
!7102 = !DILocalVariable(name: "k", arg: 2, scope: !7096, file: !501, line: 92, type: !7099)
!7103 = !DILocation(line: 0, scope: !7096)
!7104 = !DILocation(line: 94, column: 20, scope: !7096)
!7105 = !DILocation(line: 94, column: 25, scope: !7096)
!7106 = !DILocation(line: 94, column: 7, scope: !7096)
!7107 = !DILocation(line: 94, column: 51, scope: !7096)
!7108 = !DILocation(line: 94, column: 56, scope: !7096)
!7109 = !DILocation(line: 94, column: 33, scope: !7096)
!7110 = !DILocation(line: 94, column: 38, scope: !7096)
!7111 = !DILocation(line: 95, column: 20, scope: !7096)
!7112 = !DILocation(line: 95, column: 25, scope: !7096)
!7113 = !DILocation(line: 95, column: 2, scope: !7096)
!7114 = !DILocation(line: 95, column: 7, scope: !7096)
!7115 = !DILocation(line: 95, column: 50, scope: !7096)
!7116 = !DILocation(line: 95, column: 32, scope: !7096)
!7117 = !DILocation(line: 95, column: 37, scope: !7096)
!7118 = !DILocation(line: 96, column: 20, scope: !7096)
!7119 = !DILocation(line: 96, column: 25, scope: !7096)
!7120 = !DILocation(line: 96, column: 2, scope: !7096)
!7121 = !DILocation(line: 96, column: 7, scope: !7096)
!7122 = !DILocation(line: 96, column: 51, scope: !7096)
!7123 = !DILocation(line: 96, column: 56, scope: !7096)
!7124 = !DILocation(line: 96, column: 33, scope: !7096)
!7125 = !DILocation(line: 96, column: 38, scope: !7096)
!7126 = !DILocation(line: 97, column: 20, scope: !7096)
!7127 = !DILocation(line: 97, column: 25, scope: !7096)
!7128 = !DILocation(line: 97, column: 2, scope: !7096)
!7129 = !DILocation(line: 97, column: 7, scope: !7096)
!7130 = !DILocation(line: 97, column: 50, scope: !7096)
!7131 = !DILocation(line: 97, column: 32, scope: !7096)
!7132 = !DILocation(line: 97, column: 37, scope: !7096)
!7133 = !DILocation(line: 98, column: 20, scope: !7096)
!7134 = !DILocation(line: 98, column: 25, scope: !7096)
!7135 = !DILocation(line: 98, column: 2, scope: !7096)
!7136 = !DILocation(line: 98, column: 7, scope: !7096)
!7137 = !DILocation(line: 98, column: 51, scope: !7096)
!7138 = !DILocation(line: 98, column: 56, scope: !7096)
!7139 = !DILocation(line: 98, column: 33, scope: !7096)
!7140 = !DILocation(line: 98, column: 38, scope: !7096)
!7141 = !DILocation(line: 99, column: 21, scope: !7096)
!7142 = !DILocation(line: 99, column: 26, scope: !7096)
!7143 = !DILocation(line: 99, column: 2, scope: !7096)
!7144 = !DILocation(line: 99, column: 8, scope: !7096)
!7145 = !DILocation(line: 99, column: 52, scope: !7096)
!7146 = !DILocation(line: 99, column: 33, scope: !7096)
!7147 = !DILocation(line: 99, column: 39, scope: !7096)
!7148 = !DILocation(line: 100, column: 21, scope: !7096)
!7149 = !DILocation(line: 100, column: 26, scope: !7096)
!7150 = !DILocation(line: 100, column: 2, scope: !7096)
!7151 = !DILocation(line: 100, column: 8, scope: !7096)
!7152 = !DILocation(line: 100, column: 53, scope: !7096)
!7153 = !DILocation(line: 100, column: 58, scope: !7096)
!7154 = !DILocation(line: 100, column: 34, scope: !7096)
!7155 = !DILocation(line: 100, column: 40, scope: !7096)
!7156 = !DILocation(line: 101, column: 21, scope: !7096)
!7157 = !DILocation(line: 101, column: 26, scope: !7096)
!7158 = !DILocation(line: 101, column: 2, scope: !7096)
!7159 = !DILocation(line: 101, column: 8, scope: !7096)
!7160 = !DILocation(line: 101, column: 52, scope: !7096)
!7161 = !DILocation(line: 101, column: 33, scope: !7096)
!7162 = !DILocation(line: 101, column: 39, scope: !7096)
!7163 = !DILocation(line: 102, column: 1, scope: !7096)
!7164 = distinct !DISubprogram(name: "inv_shift_rows", scope: !501, file: !501, line: 118, type: !7165, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7167)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{null, !184}
!7167 = !{!7168, !7169}
!7168 = !DILocalVariable(name: "s", arg: 1, scope: !7164, file: !501, line: 118, type: !184)
!7169 = !DILocalVariable(name: "t", scope: !7164, file: !501, line: 120, type: !311)
!7170 = !DILocation(line: 0, scope: !7164)
!7171 = !DILocation(line: 120, column: 2, scope: !7164)
!7172 = !DILocation(line: 120, column: 10, scope: !7164)
!7173 = !DILocation(line: 122, column: 10, scope: !7164)
!7174 = !DILocation(line: 122, column: 8, scope: !7164)
!7175 = !DILocation(line: 122, column: 23, scope: !7164)
!7176 = !DILocation(line: 122, column: 16, scope: !7164)
!7177 = !DILocation(line: 122, column: 21, scope: !7164)
!7178 = !DILocation(line: 122, column: 37, scope: !7164)
!7179 = !DILocation(line: 122, column: 30, scope: !7164)
!7180 = !DILocation(line: 122, column: 35, scope: !7164)
!7181 = !DILocation(line: 122, column: 51, scope: !7164)
!7182 = !DILocation(line: 122, column: 44, scope: !7164)
!7183 = !DILocation(line: 122, column: 49, scope: !7164)
!7184 = !DILocation(line: 123, column: 10, scope: !7164)
!7185 = !DILocation(line: 123, column: 2, scope: !7164)
!7186 = !DILocation(line: 123, column: 8, scope: !7164)
!7187 = !DILocation(line: 123, column: 23, scope: !7164)
!7188 = !DILocation(line: 123, column: 16, scope: !7164)
!7189 = !DILocation(line: 123, column: 21, scope: !7164)
!7190 = !DILocation(line: 123, column: 36, scope: !7164)
!7191 = !DILocation(line: 123, column: 29, scope: !7164)
!7192 = !DILocation(line: 123, column: 34, scope: !7164)
!7193 = !DILocation(line: 123, column: 50, scope: !7164)
!7194 = !DILocation(line: 123, column: 43, scope: !7164)
!7195 = !DILocation(line: 123, column: 48, scope: !7164)
!7196 = !DILocation(line: 124, column: 10, scope: !7164)
!7197 = !DILocation(line: 124, column: 2, scope: !7164)
!7198 = !DILocation(line: 124, column: 8, scope: !7164)
!7199 = !DILocation(line: 124, column: 23, scope: !7164)
!7200 = !DILocation(line: 124, column: 16, scope: !7164)
!7201 = !DILocation(line: 124, column: 21, scope: !7164)
!7202 = !DILocation(line: 124, column: 37, scope: !7164)
!7203 = !DILocation(line: 124, column: 29, scope: !7164)
!7204 = !DILocation(line: 124, column: 35, scope: !7164)
!7205 = !DILocation(line: 124, column: 51, scope: !7164)
!7206 = !DILocation(line: 124, column: 43, scope: !7164)
!7207 = !DILocation(line: 124, column: 49, scope: !7164)
!7208 = !DILocation(line: 125, column: 10, scope: !7164)
!7209 = !DILocation(line: 125, column: 2, scope: !7164)
!7210 = !DILocation(line: 125, column: 8, scope: !7164)
!7211 = !DILocation(line: 125, column: 25, scope: !7164)
!7212 = !DILocation(line: 125, column: 17, scope: !7164)
!7213 = !DILocation(line: 125, column: 23, scope: !7164)
!7214 = !DILocation(line: 125, column: 39, scope: !7164)
!7215 = !DILocation(line: 125, column: 31, scope: !7164)
!7216 = !DILocation(line: 125, column: 37, scope: !7164)
!7217 = !DILocation(line: 125, column: 53, scope: !7164)
!7218 = !DILocation(line: 125, column: 45, scope: !7164)
!7219 = !DILocation(line: 125, column: 51, scope: !7164)
!7220 = !DILocation(line: 126, column: 8, scope: !7164)
!7221 = !DILocation(line: 127, column: 1, scope: !7164)
!7222 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !501, file: !501, line: 104, type: !7165, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7223)
!7223 = !{!7224, !7225}
!7224 = !DILocalVariable(name: "s", arg: 1, scope: !7222, file: !501, line: 104, type: !184)
!7225 = !DILocalVariable(name: "i", scope: !7222, file: !501, line: 106, type: !32)
!7226 = !DILocation(line: 0, scope: !7222)
!7227 = !DILocation(line: 108, column: 2, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7222, file: !501, line: 108, column: 2)
!7229 = !DILocation(line: 109, column: 19, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !501, line: 108, column: 32)
!7231 = distinct !DILexicalBlock(scope: !7228, file: !501, line: 108, column: 2)
!7232 = !DILocation(line: 109, column: 10, scope: !7230)
!7233 = !DILocation(line: 109, column: 8, scope: !7230)
!7234 = !DILocation(line: 108, column: 27, scope: !7231)
!7235 = !DILocation(line: 108, column: 16, scope: !7231)
!7236 = distinct !{!7236, !7227, !7237}
!7237 = !DILocation(line: 110, column: 2, scope: !7228)
!7238 = !DILocation(line: 111, column: 1, scope: !7222)
!7239 = distinct !DISubprogram(name: "inv_mix_columns", scope: !501, file: !501, line: 81, type: !7165, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7240)
!7240 = !{!7241, !7242}
!7241 = !DILocalVariable(name: "s", arg: 1, scope: !7239, file: !501, line: 81, type: !184)
!7242 = !DILocalVariable(name: "t", scope: !7239, file: !501, line: 83, type: !311)
!7243 = !DILocation(line: 0, scope: !7239)
!7244 = !DILocation(line: 83, column: 2, scope: !7239)
!7245 = !DILocation(line: 83, column: 10, scope: !7239)
!7246 = !DILocation(line: 85, column: 2, scope: !7239)
!7247 = !DILocation(line: 86, column: 19, scope: !7239)
!7248 = !DILocation(line: 86, column: 27, scope: !7239)
!7249 = !DILocation(line: 86, column: 2, scope: !7239)
!7250 = !DILocation(line: 87, column: 19, scope: !7239)
!7251 = !DILocation(line: 87, column: 29, scope: !7239)
!7252 = !DILocation(line: 87, column: 2, scope: !7239)
!7253 = !DILocation(line: 88, column: 19, scope: !7239)
!7254 = !DILocation(line: 88, column: 29, scope: !7239)
!7255 = !DILocation(line: 88, column: 2, scope: !7239)
!7256 = !DILocation(line: 89, column: 8, scope: !7239)
!7257 = !DILocation(line: 90, column: 1, scope: !7239)
!7258 = distinct !DISubprogram(name: "mult_row_column", scope: !501, file: !501, line: 73, type: !7259, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7261)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{null, !184, !490}
!7261 = !{!7262, !7263}
!7262 = !DILocalVariable(name: "out", arg: 1, scope: !7258, file: !501, line: 73, type: !184)
!7263 = !DILocalVariable(name: "in", arg: 2, scope: !7258, file: !501, line: 73, type: !490)
!7264 = !DILocation(line: 0, scope: !7258)
!7265 = !DILocation(line: 75, column: 11, scope: !7258)
!7266 = !DILocation(line: 75, column: 26, scope: !7258)
!7267 = !DILocation(line: 75, column: 41, scope: !7258)
!7268 = !DILocation(line: 75, column: 56, scope: !7258)
!7269 = !DILocation(line: 75, column: 24, scope: !7258)
!7270 = !DILocation(line: 75, column: 39, scope: !7258)
!7271 = !DILocation(line: 75, column: 54, scope: !7258)
!7272 = !DILocation(line: 75, column: 9, scope: !7258)
!7273 = !DILocation(line: 76, column: 11, scope: !7258)
!7274 = !DILocation(line: 76, column: 26, scope: !7258)
!7275 = !DILocation(line: 76, column: 41, scope: !7258)
!7276 = !DILocation(line: 76, column: 56, scope: !7258)
!7277 = !DILocation(line: 76, column: 24, scope: !7258)
!7278 = !DILocation(line: 76, column: 39, scope: !7258)
!7279 = !DILocation(line: 76, column: 54, scope: !7258)
!7280 = !DILocation(line: 76, column: 2, scope: !7258)
!7281 = !DILocation(line: 76, column: 9, scope: !7258)
!7282 = !DILocation(line: 77, column: 11, scope: !7258)
!7283 = !DILocation(line: 77, column: 26, scope: !7258)
!7284 = !DILocation(line: 77, column: 41, scope: !7258)
!7285 = !DILocation(line: 77, column: 56, scope: !7258)
!7286 = !DILocation(line: 77, column: 24, scope: !7258)
!7287 = !DILocation(line: 77, column: 39, scope: !7258)
!7288 = !DILocation(line: 77, column: 54, scope: !7258)
!7289 = !DILocation(line: 77, column: 2, scope: !7258)
!7290 = !DILocation(line: 77, column: 9, scope: !7258)
!7291 = !DILocation(line: 78, column: 11, scope: !7258)
!7292 = !DILocation(line: 78, column: 26, scope: !7258)
!7293 = !DILocation(line: 78, column: 41, scope: !7258)
!7294 = !DILocation(line: 78, column: 56, scope: !7258)
!7295 = !DILocation(line: 78, column: 24, scope: !7258)
!7296 = !DILocation(line: 78, column: 39, scope: !7258)
!7297 = !DILocation(line: 78, column: 54, scope: !7258)
!7298 = !DILocation(line: 78, column: 2, scope: !7258)
!7299 = !DILocation(line: 78, column: 9, scope: !7258)
!7300 = !DILocation(line: 79, column: 1, scope: !7258)
!7301 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !516, file: !516, line: 70, type: !7302, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7304)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{!125, !510, !490}
!7304 = !{!7305, !7306, !7307, !7309, !7310}
!7305 = !DILocalVariable(name: "s", arg: 1, scope: !7301, file: !516, line: 70, type: !510)
!7306 = !DILocalVariable(name: "k", arg: 2, scope: !7301, file: !516, line: 70, type: !490)
!7307 = !DILocalVariable(name: "rconst", scope: !7301, file: !516, line: 72, type: !7308)
!7308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5868, size: 352, elements: !2091)
!7309 = !DILocalVariable(name: "i", scope: !7301, file: !516, line: 76, type: !32)
!7310 = !DILocalVariable(name: "t", scope: !7301, file: !516, line: 77, type: !32)
!7311 = !DILocation(line: 0, scope: !7301)
!7312 = !DILocation(line: 72, column: 21, scope: !7301)
!7313 = !DILocation(line: 79, column: 8, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7301, file: !516, line: 79, column: 6)
!7315 = !DILocation(line: 79, column: 6, scope: !7301)
!7316 = !DILocation(line: 91, column: 7, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !516, line: 90, column: 35)
!7318 = distinct !DILexicalBlock(scope: !7319, file: !516, line: 90, column: 2)
!7319 = distinct !DILexicalBlock(scope: !7301, file: !516, line: 90, column: 2)
!7320 = !DILocation(line: 90, column: 2, scope: !7319)
!7321 = !DILocation(line: 86, column: 22, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !516, line: 85, column: 27)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !516, line: 85, column: 2)
!7324 = distinct !DILexicalBlock(scope: !7301, file: !516, line: 85, column: 2)
!7325 = !DILocation(line: 86, column: 18, scope: !7322)
!7326 = !DILocation(line: 86, column: 25, scope: !7322)
!7327 = !DILocation(line: 86, column: 40, scope: !7322)
!7328 = !DILocation(line: 86, column: 34, scope: !7322)
!7329 = !DILocation(line: 86, column: 43, scope: !7322)
!7330 = !DILocation(line: 86, column: 31, scope: !7322)
!7331 = !DILocation(line: 87, column: 17, scope: !7322)
!7332 = !DILocation(line: 87, column: 11, scope: !7322)
!7333 = !DILocation(line: 87, column: 20, scope: !7322)
!7334 = !DILocation(line: 86, column: 49, scope: !7322)
!7335 = !DILocation(line: 87, column: 34, scope: !7322)
!7336 = !DILocation(line: 87, column: 28, scope: !7322)
!7337 = !DILocation(line: 87, column: 27, scope: !7322)
!7338 = !DILocation(line: 87, column: 25, scope: !7322)
!7339 = !DILocation(line: 86, column: 3, scope: !7322)
!7340 = !DILocation(line: 86, column: 15, scope: !7322)
!7341 = !DILocation(line: 85, column: 22, scope: !7323)
!7342 = !DILocation(line: 85, column: 16, scope: !7323)
!7343 = !DILocation(line: 85, column: 2, scope: !7324)
!7344 = distinct !{!7344, !7343, !7345}
!7345 = !DILocation(line: 88, column: 2, scope: !7324)
!7346 = !DILocation(line: 92, column: 10, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7317, file: !516, line: 92, column: 7)
!7348 = !DILocation(line: 92, column: 16, scope: !7347)
!7349 = !DILocation(line: 92, column: 7, scope: !7317)
!7350 = !DILocation(line: 93, column: 8, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7347, file: !516, line: 92, column: 22)
!7352 = !DILocation(line: 93, column: 38, scope: !7351)
!7353 = !DILocation(line: 93, column: 30, scope: !7351)
!7354 = !DILocation(line: 93, column: 28, scope: !7351)
!7355 = !DILocation(line: 94, column: 3, scope: !7351)
!7356 = !DILocation(line: 0, scope: !7317)
!7357 = !DILocation(line: 95, column: 27, scope: !7317)
!7358 = !DILocation(line: 95, column: 17, scope: !7317)
!7359 = !DILocation(line: 95, column: 32, scope: !7317)
!7360 = !DILocation(line: 95, column: 3, scope: !7317)
!7361 = !DILocation(line: 95, column: 15, scope: !7317)
!7362 = !DILocation(line: 90, column: 30, scope: !7318)
!7363 = !DILocation(line: 90, column: 11, scope: !7318)
!7364 = distinct !{!7364, !7320, !7365}
!7365 = !DILocation(line: 96, column: 2, scope: !7319)
!7366 = !DILocation(line: 99, column: 1, scope: !7301)
!7367 = distinct !DISubprogram(name: "rotword", scope: !516, file: !516, line: 62, type: !7368, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7370)
!7368 = !DISubroutineType(types: !7369)
!7369 = !{!32, !32}
!7370 = !{!7371}
!7371 = !DILocalVariable(name: "a", arg: 1, scope: !7367, file: !516, line: 62, type: !32)
!7372 = !DILocation(line: 0, scope: !7367)
!7373 = !DILocation(line: 64, column: 21, scope: !7367)
!7374 = !DILocation(line: 64, column: 2, scope: !7367)
!7375 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !516, file: !516, line: 158, type: !7376, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7379)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{!125, !184, !490, !7378}
!7378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!7379 = !{!7380, !7381, !7382, !7383, !7384}
!7380 = !DILocalVariable(name: "out", arg: 1, scope: !7375, file: !516, line: 158, type: !184)
!7381 = !DILocalVariable(name: "in", arg: 2, scope: !7375, file: !516, line: 158, type: !490)
!7382 = !DILocalVariable(name: "s", arg: 3, scope: !7375, file: !516, line: 158, type: !7378)
!7383 = !DILocalVariable(name: "state", scope: !7375, file: !516, line: 160, type: !311)
!7384 = !DILocalVariable(name: "i", scope: !7375, file: !516, line: 161, type: !32)
!7385 = !DILocation(line: 0, scope: !7375)
!7386 = !DILocation(line: 160, column: 2, scope: !7375)
!7387 = !DILocation(line: 160, column: 10, scope: !7375)
!7388 = !DILocation(line: 163, column: 10, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7375, file: !516, line: 163, column: 6)
!7390 = !DILocation(line: 163, column: 6, scope: !7375)
!7391 = !DILocation(line: 171, column: 8, scope: !7375)
!7392 = !DILocation(line: 172, column: 23, scope: !7375)
!7393 = !DILocation(line: 172, column: 2, scope: !7375)
!7394 = !DILocation(line: 174, column: 2, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7375, file: !516, line: 174, column: 2)
!7396 = !DILocation(line: 175, column: 3, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !516, line: 174, column: 33)
!7398 = distinct !DILexicalBlock(scope: !7395, file: !516, line: 174, column: 2)
!7399 = !DILocation(line: 176, column: 3, scope: !7397)
!7400 = !DILocation(line: 177, column: 3, scope: !7397)
!7401 = !DILocation(line: 178, column: 40, scope: !7397)
!7402 = !DILocation(line: 178, column: 37, scope: !7397)
!7403 = !DILocation(line: 178, column: 33, scope: !7397)
!7404 = !DILocation(line: 178, column: 3, scope: !7397)
!7405 = !DILocation(line: 174, column: 16, scope: !7398)
!7406 = distinct !{!7406, !7394, !7407}
!7407 = !DILocation(line: 179, column: 2, scope: !7395)
!7408 = !DILocation(line: 181, column: 2, scope: !7375)
!7409 = !DILocation(line: 182, column: 2, scope: !7375)
!7410 = !DILocation(line: 183, column: 32, scope: !7375)
!7411 = !DILocation(line: 183, column: 2, scope: !7375)
!7412 = !DILocation(line: 185, column: 8, scope: !7375)
!7413 = !DILocation(line: 188, column: 2, scope: !7375)
!7414 = !DILocation(line: 190, column: 2, scope: !7375)
!7415 = !DILocation(line: 191, column: 1, scope: !7375)
!7416 = distinct !DISubprogram(name: "add_round_key", scope: !516, file: !516, line: 101, type: !7097, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7417)
!7417 = !{!7418, !7419}
!7418 = !DILocalVariable(name: "s", arg: 1, scope: !7416, file: !516, line: 101, type: !184)
!7419 = !DILocalVariable(name: "k", arg: 2, scope: !7416, file: !516, line: 101, type: !7099)
!7420 = !DILocation(line: 0, scope: !7416)
!7421 = !DILocation(line: 103, column: 20, scope: !7416)
!7422 = !DILocation(line: 103, column: 25, scope: !7416)
!7423 = !DILocation(line: 103, column: 7, scope: !7416)
!7424 = !DILocation(line: 103, column: 51, scope: !7416)
!7425 = !DILocation(line: 103, column: 56, scope: !7416)
!7426 = !DILocation(line: 103, column: 33, scope: !7416)
!7427 = !DILocation(line: 103, column: 38, scope: !7416)
!7428 = !DILocation(line: 104, column: 20, scope: !7416)
!7429 = !DILocation(line: 104, column: 25, scope: !7416)
!7430 = !DILocation(line: 104, column: 2, scope: !7416)
!7431 = !DILocation(line: 104, column: 7, scope: !7416)
!7432 = !DILocation(line: 104, column: 50, scope: !7416)
!7433 = !DILocation(line: 104, column: 32, scope: !7416)
!7434 = !DILocation(line: 104, column: 37, scope: !7416)
!7435 = !DILocation(line: 105, column: 20, scope: !7416)
!7436 = !DILocation(line: 105, column: 25, scope: !7416)
!7437 = !DILocation(line: 105, column: 2, scope: !7416)
!7438 = !DILocation(line: 105, column: 7, scope: !7416)
!7439 = !DILocation(line: 105, column: 51, scope: !7416)
!7440 = !DILocation(line: 105, column: 56, scope: !7416)
!7441 = !DILocation(line: 105, column: 33, scope: !7416)
!7442 = !DILocation(line: 105, column: 38, scope: !7416)
!7443 = !DILocation(line: 106, column: 20, scope: !7416)
!7444 = !DILocation(line: 106, column: 25, scope: !7416)
!7445 = !DILocation(line: 106, column: 2, scope: !7416)
!7446 = !DILocation(line: 106, column: 7, scope: !7416)
!7447 = !DILocation(line: 106, column: 50, scope: !7416)
!7448 = !DILocation(line: 106, column: 32, scope: !7416)
!7449 = !DILocation(line: 106, column: 37, scope: !7416)
!7450 = !DILocation(line: 107, column: 20, scope: !7416)
!7451 = !DILocation(line: 107, column: 25, scope: !7416)
!7452 = !DILocation(line: 107, column: 2, scope: !7416)
!7453 = !DILocation(line: 107, column: 7, scope: !7416)
!7454 = !DILocation(line: 107, column: 51, scope: !7416)
!7455 = !DILocation(line: 107, column: 56, scope: !7416)
!7456 = !DILocation(line: 107, column: 33, scope: !7416)
!7457 = !DILocation(line: 107, column: 38, scope: !7416)
!7458 = !DILocation(line: 108, column: 21, scope: !7416)
!7459 = !DILocation(line: 108, column: 26, scope: !7416)
!7460 = !DILocation(line: 108, column: 2, scope: !7416)
!7461 = !DILocation(line: 108, column: 8, scope: !7416)
!7462 = !DILocation(line: 108, column: 52, scope: !7416)
!7463 = !DILocation(line: 108, column: 33, scope: !7416)
!7464 = !DILocation(line: 108, column: 39, scope: !7416)
!7465 = !DILocation(line: 109, column: 21, scope: !7416)
!7466 = !DILocation(line: 109, column: 26, scope: !7416)
!7467 = !DILocation(line: 109, column: 2, scope: !7416)
!7468 = !DILocation(line: 109, column: 8, scope: !7416)
!7469 = !DILocation(line: 109, column: 53, scope: !7416)
!7470 = !DILocation(line: 109, column: 58, scope: !7416)
!7471 = !DILocation(line: 109, column: 34, scope: !7416)
!7472 = !DILocation(line: 109, column: 40, scope: !7416)
!7473 = !DILocation(line: 110, column: 21, scope: !7416)
!7474 = !DILocation(line: 110, column: 26, scope: !7416)
!7475 = !DILocation(line: 110, column: 2, scope: !7416)
!7476 = !DILocation(line: 110, column: 8, scope: !7416)
!7477 = !DILocation(line: 110, column: 52, scope: !7416)
!7478 = !DILocation(line: 110, column: 33, scope: !7416)
!7479 = !DILocation(line: 110, column: 39, scope: !7416)
!7480 = !DILocation(line: 111, column: 1, scope: !7416)
!7481 = distinct !DISubprogram(name: "sub_bytes", scope: !516, file: !516, line: 113, type: !7165, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7482)
!7482 = !{!7483, !7484}
!7483 = !DILocalVariable(name: "s", arg: 1, scope: !7481, file: !516, line: 113, type: !184)
!7484 = !DILocalVariable(name: "i", scope: !7481, file: !516, line: 115, type: !32)
!7485 = !DILocation(line: 0, scope: !7481)
!7486 = !DILocation(line: 117, column: 2, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7481, file: !516, line: 117, column: 2)
!7488 = !DILocation(line: 118, column: 15, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !516, line: 117, column: 34)
!7490 = distinct !DILexicalBlock(scope: !7487, file: !516, line: 117, column: 2)
!7491 = !DILocation(line: 118, column: 10, scope: !7489)
!7492 = !DILocation(line: 118, column: 8, scope: !7489)
!7493 = !DILocation(line: 117, column: 29, scope: !7490)
!7494 = !DILocation(line: 117, column: 16, scope: !7490)
!7495 = distinct !{!7495, !7486, !7496}
!7496 = !DILocation(line: 119, column: 2, scope: !7487)
!7497 = !DILocation(line: 120, column: 1, scope: !7481)
!7498 = distinct !DISubprogram(name: "shift_rows", scope: !516, file: !516, line: 147, type: !7165, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7499)
!7499 = !{!7500, !7501}
!7500 = !DILocalVariable(name: "s", arg: 1, scope: !7498, file: !516, line: 147, type: !184)
!7501 = !DILocalVariable(name: "t", scope: !7498, file: !516, line: 149, type: !311)
!7502 = !DILocation(line: 0, scope: !7498)
!7503 = !DILocation(line: 149, column: 2, scope: !7498)
!7504 = !DILocation(line: 149, column: 10, scope: !7498)
!7505 = !DILocation(line: 151, column: 10, scope: !7498)
!7506 = !DILocation(line: 151, column: 8, scope: !7498)
!7507 = !DILocation(line: 151, column: 23, scope: !7498)
!7508 = !DILocation(line: 151, column: 16, scope: !7498)
!7509 = !DILocation(line: 151, column: 21, scope: !7498)
!7510 = !DILocation(line: 151, column: 36, scope: !7498)
!7511 = !DILocation(line: 151, column: 29, scope: !7498)
!7512 = !DILocation(line: 151, column: 34, scope: !7498)
!7513 = !DILocation(line: 151, column: 50, scope: !7498)
!7514 = !DILocation(line: 151, column: 43, scope: !7498)
!7515 = !DILocation(line: 151, column: 48, scope: !7498)
!7516 = !DILocation(line: 152, column: 10, scope: !7498)
!7517 = !DILocation(line: 152, column: 2, scope: !7498)
!7518 = !DILocation(line: 152, column: 8, scope: !7498)
!7519 = !DILocation(line: 152, column: 23, scope: !7498)
!7520 = !DILocation(line: 152, column: 16, scope: !7498)
!7521 = !DILocation(line: 152, column: 21, scope: !7498)
!7522 = !DILocation(line: 152, column: 36, scope: !7498)
!7523 = !DILocation(line: 152, column: 29, scope: !7498)
!7524 = !DILocation(line: 152, column: 34, scope: !7498)
!7525 = !DILocation(line: 152, column: 50, scope: !7498)
!7526 = !DILocation(line: 152, column: 43, scope: !7498)
!7527 = !DILocation(line: 152, column: 48, scope: !7498)
!7528 = !DILocation(line: 153, column: 10, scope: !7498)
!7529 = !DILocation(line: 153, column: 2, scope: !7498)
!7530 = !DILocation(line: 153, column: 8, scope: !7498)
!7531 = !DILocation(line: 153, column: 23, scope: !7498)
!7532 = !DILocation(line: 153, column: 16, scope: !7498)
!7533 = !DILocation(line: 153, column: 21, scope: !7498)
!7534 = !DILocation(line: 153, column: 38, scope: !7498)
!7535 = !DILocation(line: 153, column: 30, scope: !7498)
!7536 = !DILocation(line: 153, column: 36, scope: !7498)
!7537 = !DILocation(line: 153, column: 52, scope: !7498)
!7538 = !DILocation(line: 153, column: 44, scope: !7498)
!7539 = !DILocation(line: 153, column: 50, scope: !7498)
!7540 = !DILocation(line: 154, column: 10, scope: !7498)
!7541 = !DILocation(line: 154, column: 2, scope: !7498)
!7542 = !DILocation(line: 154, column: 8, scope: !7498)
!7543 = !DILocation(line: 154, column: 25, scope: !7498)
!7544 = !DILocation(line: 154, column: 17, scope: !7498)
!7545 = !DILocation(line: 154, column: 23, scope: !7498)
!7546 = !DILocation(line: 154, column: 39, scope: !7498)
!7547 = !DILocation(line: 154, column: 31, scope: !7498)
!7548 = !DILocation(line: 154, column: 37, scope: !7498)
!7549 = !DILocation(line: 154, column: 53, scope: !7498)
!7550 = !DILocation(line: 154, column: 45, scope: !7498)
!7551 = !DILocation(line: 154, column: 51, scope: !7498)
!7552 = !DILocation(line: 155, column: 9, scope: !7498)
!7553 = !DILocation(line: 156, column: 1, scope: !7498)
!7554 = distinct !DISubprogram(name: "mix_columns", scope: !516, file: !516, line: 132, type: !7165, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7555)
!7555 = !{!7556, !7557}
!7556 = !DILocalVariable(name: "s", arg: 1, scope: !7554, file: !516, line: 132, type: !184)
!7557 = !DILocalVariable(name: "t", scope: !7554, file: !516, line: 134, type: !311)
!7558 = !DILocation(line: 0, scope: !7554)
!7559 = !DILocation(line: 134, column: 2, scope: !7554)
!7560 = !DILocation(line: 134, column: 10, scope: !7554)
!7561 = !DILocation(line: 136, column: 2, scope: !7554)
!7562 = !DILocation(line: 137, column: 19, scope: !7554)
!7563 = !DILocation(line: 137, column: 27, scope: !7554)
!7564 = !DILocation(line: 137, column: 2, scope: !7554)
!7565 = !DILocation(line: 138, column: 19, scope: !7554)
!7566 = !DILocation(line: 138, column: 32, scope: !7554)
!7567 = !DILocation(line: 138, column: 2, scope: !7554)
!7568 = !DILocation(line: 139, column: 19, scope: !7554)
!7569 = !DILocation(line: 139, column: 32, scope: !7554)
!7570 = !DILocation(line: 139, column: 2, scope: !7554)
!7571 = !DILocation(line: 140, column: 9, scope: !7554)
!7572 = !DILocation(line: 141, column: 1, scope: !7554)
!7573 = distinct !DISubprogram(name: "mult_row_column", scope: !516, file: !516, line: 124, type: !7259, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7574)
!7574 = !{!7575, !7576}
!7575 = !DILocalVariable(name: "out", arg: 1, scope: !7573, file: !516, line: 124, type: !184)
!7576 = !DILocalVariable(name: "in", arg: 2, scope: !7573, file: !516, line: 124, type: !490)
!7577 = !DILocation(line: 0, scope: !7573)
!7578 = !DILocation(line: 126, column: 24, scope: !7573)
!7579 = !DILocation(line: 126, column: 11, scope: !7573)
!7580 = !DILocation(line: 126, column: 33, scope: !7573)
!7581 = !DILocation(line: 126, column: 49, scope: !7573)
!7582 = !DILocation(line: 126, column: 57, scope: !7573)
!7583 = !DILocation(line: 126, column: 31, scope: !7573)
!7584 = !DILocation(line: 126, column: 47, scope: !7573)
!7585 = !DILocation(line: 126, column: 55, scope: !7573)
!7586 = !DILocation(line: 126, column: 9, scope: !7573)
!7587 = !DILocation(line: 127, column: 11, scope: !7573)
!7588 = !DILocation(line: 127, column: 32, scope: !7573)
!7589 = !DILocation(line: 127, column: 19, scope: !7573)
!7590 = !DILocation(line: 127, column: 41, scope: !7573)
!7591 = !DILocation(line: 127, column: 57, scope: !7573)
!7592 = !DILocation(line: 127, column: 17, scope: !7573)
!7593 = !DILocation(line: 127, column: 39, scope: !7573)
!7594 = !DILocation(line: 127, column: 55, scope: !7573)
!7595 = !DILocation(line: 127, column: 2, scope: !7573)
!7596 = !DILocation(line: 127, column: 9, scope: !7573)
!7597 = !DILocation(line: 128, column: 11, scope: !7573)
!7598 = !DILocation(line: 128, column: 19, scope: !7573)
!7599 = !DILocation(line: 128, column: 40, scope: !7573)
!7600 = !DILocation(line: 128, column: 27, scope: !7573)
!7601 = !DILocation(line: 128, column: 49, scope: !7573)
!7602 = !DILocation(line: 128, column: 17, scope: !7573)
!7603 = !DILocation(line: 128, column: 25, scope: !7573)
!7604 = !DILocation(line: 128, column: 47, scope: !7573)
!7605 = !DILocation(line: 128, column: 2, scope: !7573)
!7606 = !DILocation(line: 128, column: 9, scope: !7573)
!7607 = !DILocation(line: 129, column: 11, scope: !7573)
!7608 = !DILocation(line: 129, column: 27, scope: !7573)
!7609 = !DILocation(line: 129, column: 25, scope: !7573)
!7610 = !DILocation(line: 129, column: 35, scope: !7573)
!7611 = !DILocation(line: 129, column: 33, scope: !7573)
!7612 = !DILocation(line: 129, column: 56, scope: !7573)
!7613 = !DILocation(line: 129, column: 43, scope: !7573)
!7614 = !DILocation(line: 129, column: 41, scope: !7573)
!7615 = !DILocation(line: 129, column: 2, scope: !7573)
!7616 = !DILocation(line: 129, column: 9, scope: !7573)
!7617 = !DILocation(line: 130, column: 1, scope: !7573)
!7618 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7619, file: !7619, line: 37, type: !7620, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7623)
!7619 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!125, !184, !32, !490, !32, !490, !7622}
!7622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2737)
!7623 = !{!7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632}
!7624 = !DILocalVariable(name: "out", arg: 1, scope: !7618, file: !7619, line: 37, type: !184)
!7625 = !DILocalVariable(name: "outlen", arg: 2, scope: !7618, file: !7619, line: 37, type: !32)
!7626 = !DILocalVariable(name: "in", arg: 3, scope: !7618, file: !7619, line: 37, type: !490)
!7627 = !DILocalVariable(name: "inlen", arg: 4, scope: !7618, file: !7619, line: 38, type: !32)
!7628 = !DILocalVariable(name: "iv", arg: 5, scope: !7618, file: !7619, line: 38, type: !490)
!7629 = !DILocalVariable(name: "sched", arg: 6, scope: !7618, file: !7619, line: 39, type: !7622)
!7630 = !DILocalVariable(name: "buffer", scope: !7618, file: !7619, line: 42, type: !311)
!7631 = !DILocalVariable(name: "n", scope: !7618, file: !7619, line: 43, type: !32)
!7632 = !DILocalVariable(name: "m", scope: !7618, file: !7619, line: 43, type: !32)
!7633 = !DILocation(line: 0, scope: !7618)
!7634 = !DILocation(line: 42, column: 2, scope: !7618)
!7635 = !DILocation(line: 42, column: 10, scope: !7618)
!7636 = !DILocation(line: 46, column: 10, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7618, file: !7619, line: 46, column: 6)
!7638 = !DILocation(line: 46, column: 27, scope: !7637)
!7639 = !DILocation(line: 58, column: 8, scope: !7618)
!7640 = !DILocation(line: 60, column: 8, scope: !7618)
!7641 = !DILocation(line: 63, column: 2, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7618, file: !7619, line: 63, column: 2)
!7643 = !DILocation(line: 61, column: 6, scope: !7618)
!7644 = !DILocation(line: 64, column: 21, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !7619, line: 63, column: 34)
!7646 = distinct !DILexicalBlock(scope: !7642, file: !7619, line: 63, column: 2)
!7647 = !DILocation(line: 64, column: 18, scope: !7645)
!7648 = !DILocation(line: 64, column: 11, scope: !7645)
!7649 = !DILocation(line: 64, column: 3, scope: !7645)
!7650 = !DILocation(line: 64, column: 15, scope: !7645)
!7651 = !DILocation(line: 65, column: 9, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7645, file: !7619, line: 65, column: 7)
!7653 = !DILocation(line: 65, column: 7, scope: !7645)
!7654 = !DILocation(line: 66, column: 10, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7652, file: !7619, line: 65, column: 31)
!7656 = !DILocation(line: 67, column: 10, scope: !7655)
!7657 = !DILocation(line: 69, column: 8, scope: !7655)
!7658 = !DILocation(line: 71, column: 3, scope: !7655)
!7659 = !DILocation(line: 0, scope: !7645)
!7660 = !DILocation(line: 63, column: 29, scope: !7646)
!7661 = !DILocation(line: 63, column: 20, scope: !7646)
!7662 = distinct !{!7662, !7641, !7663}
!7663 = !DILocation(line: 72, column: 2, scope: !7642)
!7664 = !DILocation(line: 75, column: 1, scope: !7618)
!7665 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7619, file: !7619, line: 77, type: !7620, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7666)
!7666 = !{!7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7676}
!7667 = !DILocalVariable(name: "out", arg: 1, scope: !7665, file: !7619, line: 77, type: !184)
!7668 = !DILocalVariable(name: "outlen", arg: 2, scope: !7665, file: !7619, line: 77, type: !32)
!7669 = !DILocalVariable(name: "in", arg: 3, scope: !7665, file: !7619, line: 77, type: !490)
!7670 = !DILocalVariable(name: "inlen", arg: 4, scope: !7665, file: !7619, line: 78, type: !32)
!7671 = !DILocalVariable(name: "iv", arg: 5, scope: !7665, file: !7619, line: 78, type: !490)
!7672 = !DILocalVariable(name: "sched", arg: 6, scope: !7665, file: !7619, line: 79, type: !7622)
!7673 = !DILocalVariable(name: "buffer", scope: !7665, file: !7619, line: 82, type: !311)
!7674 = !DILocalVariable(name: "p", scope: !7665, file: !7619, line: 83, type: !490)
!7675 = !DILocalVariable(name: "n", scope: !7665, file: !7619, line: 84, type: !32)
!7676 = !DILocalVariable(name: "m", scope: !7665, file: !7619, line: 84, type: !32)
!7677 = !DILocation(line: 0, scope: !7665)
!7678 = !DILocation(line: 82, column: 2, scope: !7665)
!7679 = !DILocation(line: 82, column: 10, scope: !7665)
!7680 = !DILocation(line: 87, column: 10, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7665, file: !7619, line: 87, column: 6)
!7682 = !DILocation(line: 87, column: 27, scope: !7681)
!7683 = !DILocation(line: 105, column: 10, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !7619, line: 105, column: 7)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !7619, line: 104, column: 35)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !7619, line: 104, column: 2)
!7687 = distinct !DILexicalBlock(scope: !7665, file: !7619, line: 104, column: 2)
!7688 = !DILocation(line: 105, column: 31, scope: !7684)
!7689 = !DILocation(line: 105, column: 7, scope: !7685)
!7690 = !DILocation(line: 106, column: 10, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7684, file: !7619, line: 105, column: 37)
!7692 = !DILocation(line: 107, column: 7, scope: !7691)
!7693 = !DILocation(line: 109, column: 3, scope: !7691)
!7694 = !DILocation(line: 0, scope: !7687)
!7695 = !DILocation(line: 110, column: 20, scope: !7685)
!7696 = !DILocation(line: 110, column: 12, scope: !7685)
!7697 = !DILocation(line: 110, column: 28, scope: !7685)
!7698 = !DILocation(line: 110, column: 26, scope: !7685)
!7699 = !DILocation(line: 110, column: 24, scope: !7685)
!7700 = !DILocation(line: 110, column: 7, scope: !7685)
!7701 = !DILocation(line: 110, column: 10, scope: !7685)
!7702 = !DILocation(line: 104, column: 30, scope: !7686)
!7703 = !DILocation(line: 104, column: 20, scope: !7686)
!7704 = !DILocation(line: 104, column: 2, scope: !7687)
!7705 = distinct !{!7705, !7704, !7706}
!7706 = !DILocation(line: 111, column: 2, scope: !7687)
!7707 = !DILocation(line: 114, column: 1, scope: !7665)
!7708 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7709, file: !7709, line: 37, type: !7710, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7713)
!7709 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7710 = !DISubroutineType(types: !7711)
!7711 = !{!125, !184, !32, !490, !32, !184, !7712}
!7712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2745)
!7713 = !{!7714, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723}
!7714 = !DILocalVariable(name: "out", arg: 1, scope: !7708, file: !7709, line: 37, type: !184)
!7715 = !DILocalVariable(name: "outlen", arg: 2, scope: !7708, file: !7709, line: 37, type: !32)
!7716 = !DILocalVariable(name: "in", arg: 3, scope: !7708, file: !7709, line: 37, type: !490)
!7717 = !DILocalVariable(name: "inlen", arg: 4, scope: !7708, file: !7709, line: 38, type: !32)
!7718 = !DILocalVariable(name: "ctr", arg: 5, scope: !7708, file: !7709, line: 38, type: !184)
!7719 = !DILocalVariable(name: "sched", arg: 6, scope: !7708, file: !7709, line: 38, type: !7712)
!7720 = !DILocalVariable(name: "buffer", scope: !7708, file: !7709, line: 41, type: !311)
!7721 = !DILocalVariable(name: "nonce", scope: !7708, file: !7709, line: 42, type: !311)
!7722 = !DILocalVariable(name: "block_num", scope: !7708, file: !7709, line: 43, type: !32)
!7723 = !DILocalVariable(name: "i", scope: !7708, file: !7709, line: 44, type: !32)
!7724 = !DILocation(line: 0, scope: !7708)
!7725 = !DILocation(line: 41, column: 2, scope: !7708)
!7726 = !DILocation(line: 41, column: 10, scope: !7708)
!7727 = !DILocation(line: 42, column: 2, scope: !7708)
!7728 = !DILocation(line: 42, column: 10, scope: !7708)
!7729 = !DILocation(line: 47, column: 10, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7708, file: !7709, line: 47, column: 6)
!7731 = !DILocation(line: 47, column: 27, scope: !7730)
!7732 = !DILocation(line: 58, column: 8, scope: !7708)
!7733 = !DILocation(line: 61, column: 15, scope: !7708)
!7734 = !DILocation(line: 61, column: 35, scope: !7708)
!7735 = !DILocation(line: 62, column: 8, scope: !7708)
!7736 = !DILocation(line: 62, column: 27, scope: !7708)
!7737 = !DILocation(line: 61, column: 45, scope: !7708)
!7738 = !DILocation(line: 61, column: 25, scope: !7708)
!7739 = !DILocation(line: 61, column: 32, scope: !7708)
!7740 = !DILocation(line: 62, column: 18, scope: !7708)
!7741 = !DILocation(line: 61, column: 52, scope: !7708)
!7742 = !DILocation(line: 62, column: 26, scope: !7708)
!7743 = !DILocation(line: 62, column: 24, scope: !7708)
!7744 = !DILocation(line: 63, column: 2, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7708, file: !7709, line: 63, column: 2)
!7746 = !DILocation(line: 64, column: 10, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7709, line: 64, column: 7)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7709, line: 63, column: 30)
!7749 = distinct !DILexicalBlock(scope: !7745, file: !7709, line: 63, column: 2)
!7750 = !DILocation(line: 64, column: 33, scope: !7747)
!7751 = !DILocation(line: 64, column: 7, scope: !7748)
!7752 = !DILocation(line: 66, column: 8, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !7709, line: 66, column: 8)
!7754 = distinct !DILexicalBlock(scope: !7747, file: !7709, line: 64, column: 39)
!7755 = !DILocation(line: 66, column: 8, scope: !7754)
!7756 = !DILocation(line: 67, column: 14, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7753, file: !7709, line: 66, column: 46)
!7758 = !DILocation(line: 68, column: 37, scope: !7757)
!7759 = !DILocation(line: 68, column: 17, scope: !7757)
!7760 = !DILocation(line: 68, column: 15, scope: !7757)
!7761 = !DILocation(line: 69, column: 37, scope: !7757)
!7762 = !DILocation(line: 69, column: 17, scope: !7757)
!7763 = !DILocation(line: 69, column: 15, scope: !7757)
!7764 = !DILocation(line: 70, column: 37, scope: !7757)
!7765 = !DILocation(line: 70, column: 17, scope: !7757)
!7766 = !DILocation(line: 70, column: 15, scope: !7757)
!7767 = !DILocation(line: 71, column: 17, scope: !7757)
!7768 = !DILocation(line: 71, column: 15, scope: !7757)
!7769 = !DILocation(line: 75, column: 3, scope: !7754)
!7770 = !DILocation(line: 77, column: 12, scope: !7748)
!7771 = !DILocation(line: 77, column: 47, scope: !7748)
!7772 = !DILocation(line: 77, column: 44, scope: !7748)
!7773 = !DILocation(line: 77, column: 42, scope: !7748)
!7774 = !DILocation(line: 77, column: 7, scope: !7748)
!7775 = !DILocation(line: 77, column: 10, scope: !7748)
!7776 = !DILocation(line: 63, column: 25, scope: !7749)
!7777 = !DILocation(line: 63, column: 16, scope: !7749)
!7778 = distinct !{!7778, !7744, !7779}
!7779 = !DILocation(line: 78, column: 2, scope: !7745)
!7780 = !DILocation(line: 81, column: 2, scope: !7708)
!7781 = !DILocation(line: 81, column: 10, scope: !7708)
!7782 = !DILocation(line: 81, column: 23, scope: !7708)
!7783 = !DILocation(line: 81, column: 31, scope: !7708)
!7784 = !DILocation(line: 82, column: 2, scope: !7708)
!7785 = !DILocation(line: 82, column: 10, scope: !7708)
!7786 = !DILocation(line: 82, column: 23, scope: !7708)
!7787 = !DILocation(line: 82, column: 31, scope: !7708)
!7788 = !DILocation(line: 84, column: 2, scope: !7708)
!7789 = !DILocation(line: 85, column: 1, scope: !7708)
!7790 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7791, file: !7791, line: 39, type: !7792, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7794)
!7791 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!125, !2753, !2759, !184, !32, !32}
!7794 = !{!7795, !7796, !7797, !7798, !7799}
!7795 = !DILocalVariable(name: "c", arg: 1, scope: !7790, file: !7791, line: 39, type: !2753)
!7796 = !DILocalVariable(name: "sched", arg: 2, scope: !7790, file: !7791, line: 39, type: !2759)
!7797 = !DILocalVariable(name: "nonce", arg: 3, scope: !7790, file: !7791, line: 39, type: !184)
!7798 = !DILocalVariable(name: "nlen", arg: 4, scope: !7790, file: !7791, line: 40, type: !32)
!7799 = !DILocalVariable(name: "mlen", arg: 5, scope: !7790, file: !7791, line: 40, type: !32)
!7800 = !DILocation(line: 0, scope: !7790)
!7801 = !DILocation(line: 44, column: 8, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7790, file: !7791, line: 44, column: 6)
!7803 = !DILocation(line: 44, column: 27, scope: !7802)
!7804 = !DILocation(line: 50, column: 24, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !7791, line: 50, column: 13)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !7791, line: 48, column: 13)
!7807 = !DILocation(line: 54, column: 5, scope: !7790)
!7808 = !DILocation(line: 54, column: 10, scope: !7790)
!7809 = !DILocation(line: 55, column: 5, scope: !7790)
!7810 = !DILocation(line: 55, column: 11, scope: !7790)
!7811 = !DILocation(line: 56, column: 5, scope: !7790)
!7812 = !DILocation(line: 56, column: 11, scope: !7790)
!7813 = !DILocation(line: 58, column: 2, scope: !7790)
!7814 = !DILocation(line: 59, column: 1, scope: !7790)
!7815 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7791, file: !7791, line: 137, type: !7816, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7818)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!125, !184, !32, !490, !32, !490, !32, !2753}
!7818 = !{!7819, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828}
!7819 = !DILocalVariable(name: "out", arg: 1, scope: !7815, file: !7791, line: 137, type: !184)
!7820 = !DILocalVariable(name: "olen", arg: 2, scope: !7815, file: !7791, line: 137, type: !32)
!7821 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7815, file: !7791, line: 138, type: !490)
!7822 = !DILocalVariable(name: "alen", arg: 4, scope: !7815, file: !7791, line: 139, type: !32)
!7823 = !DILocalVariable(name: "payload", arg: 5, scope: !7815, file: !7791, line: 139, type: !490)
!7824 = !DILocalVariable(name: "plen", arg: 6, scope: !7815, file: !7791, line: 140, type: !32)
!7825 = !DILocalVariable(name: "c", arg: 7, scope: !7815, file: !7791, line: 140, type: !2753)
!7826 = !DILocalVariable(name: "b", scope: !7815, file: !7791, line: 154, type: !311)
!7827 = !DILocalVariable(name: "tag", scope: !7815, file: !7791, line: 155, type: !311)
!7828 = !DILocalVariable(name: "i", scope: !7815, file: !7791, line: 156, type: !32)
!7829 = !DILocation(line: 0, scope: !7815)
!7830 = !DILocation(line: 144, column: 11, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7815, file: !7791, line: 144, column: 6)
!7832 = !DILocation(line: 144, column: 29, scope: !7831)
!7833 = !DILocation(line: 146, column: 10, scope: !7831)
!7834 = !DILocation(line: 146, column: 15, scope: !7831)
!7835 = !DILocation(line: 147, column: 10, scope: !7831)
!7836 = !DILocation(line: 147, column: 15, scope: !7831)
!7837 = !DILocation(line: 150, column: 22, scope: !7831)
!7838 = !DILocation(line: 150, column: 17, scope: !7831)
!7839 = !DILocation(line: 150, column: 9, scope: !7831)
!7840 = !DILocation(line: 144, column: 6, scope: !7815)
!7841 = !DILocation(line: 154, column: 2, scope: !7815)
!7842 = !DILocation(line: 154, column: 10, scope: !7815)
!7843 = !DILocation(line: 155, column: 2, scope: !7815)
!7844 = !DILocation(line: 155, column: 10, scope: !7815)
!7845 = !DILocation(line: 161, column: 10, scope: !7815)
!7846 = !DILocation(line: 161, column: 53, scope: !7815)
!7847 = !DILocation(line: 161, column: 31, scope: !7815)
!7848 = !DILocation(line: 161, column: 9, scope: !7815)
!7849 = !DILocation(line: 161, column: 7, scope: !7815)
!7850 = !DILocation(line: 162, column: 2, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7815, file: !7791, line: 162, column: 2)
!7852 = !DILocation(line: 163, column: 21, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7791, line: 162, column: 28)
!7854 = distinct !DILexicalBlock(scope: !7851, file: !7791, line: 162, column: 2)
!7855 = !DILocation(line: 163, column: 10, scope: !7853)
!7856 = !DILocation(line: 163, column: 3, scope: !7853)
!7857 = !DILocation(line: 163, column: 8, scope: !7853)
!7858 = !DILocation(line: 162, column: 23, scope: !7854)
!7859 = !DILocation(line: 162, column: 16, scope: !7854)
!7860 = distinct !{!7860, !7850, !7861}
!7861 = !DILocation(line: 164, column: 2, scope: !7851)
!7862 = !DILocation(line: 165, column: 25, scope: !7815)
!7863 = !DILocation(line: 165, column: 10, scope: !7815)
!7864 = !DILocation(line: 165, column: 2, scope: !7815)
!7865 = !DILocation(line: 165, column: 8, scope: !7815)
!7866 = !DILocation(line: 166, column: 10, scope: !7815)
!7867 = !DILocation(line: 166, column: 2, scope: !7815)
!7868 = !DILocation(line: 166, column: 8, scope: !7815)
!7869 = !DILocation(line: 169, column: 35, scope: !7815)
!7870 = !DILocation(line: 169, column: 9, scope: !7815)
!7871 = !DILocation(line: 170, column: 6, scope: !7815)
!7872 = !DILocation(line: 171, column: 49, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7791, line: 170, column: 16)
!7874 = distinct !DILexicalBlock(scope: !7815, file: !7791, line: 170, column: 6)
!7875 = !DILocation(line: 171, column: 3, scope: !7873)
!7876 = !DILocation(line: 172, column: 2, scope: !7873)
!7877 = !DILocation(line: 173, column: 6, scope: !7815)
!7878 = !DILocation(line: 174, column: 41, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !7791, line: 173, column: 16)
!7880 = distinct !DILexicalBlock(scope: !7815, file: !7791, line: 173, column: 6)
!7881 = !DILocation(line: 174, column: 3, scope: !7879)
!7882 = !DILocation(line: 175, column: 2, scope: !7879)
!7883 = !DILocation(line: 180, column: 7, scope: !7815)
!7884 = !DILocation(line: 181, column: 16, scope: !7815)
!7885 = !DILocation(line: 181, column: 8, scope: !7815)
!7886 = !DILocation(line: 184, column: 47, scope: !7815)
!7887 = !DILocation(line: 184, column: 2, scope: !7815)
!7888 = !DILocation(line: 186, column: 16, scope: !7815)
!7889 = !DILocation(line: 186, column: 8, scope: !7815)
!7890 = !DILocation(line: 189, column: 33, scope: !7815)
!7891 = !DILocation(line: 189, column: 9, scope: !7815)
!7892 = !DILocation(line: 191, column: 21, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7791, line: 191, column: 2)
!7894 = distinct !DILexicalBlock(scope: !7815, file: !7791, line: 191, column: 2)
!7895 = !DILocation(line: 191, column: 16, scope: !7893)
!7896 = !DILocation(line: 191, column: 2, scope: !7894)
!7897 = !DILocation(line: 190, column: 6, scope: !7815)
!7898 = !DILocation(line: 192, column: 12, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7893, file: !7791, line: 191, column: 32)
!7900 = !DILocation(line: 192, column: 21, scope: !7899)
!7901 = !DILocation(line: 192, column: 19, scope: !7899)
!7902 = !DILocation(line: 192, column: 7, scope: !7899)
!7903 = !DILocation(line: 192, column: 10, scope: !7899)
!7904 = !DILocation(line: 191, column: 27, scope: !7893)
!7905 = distinct !{!7905, !7896, !7906}
!7906 = !DILocation(line: 193, column: 2, scope: !7894)
!7907 = !DILocation(line: 196, column: 1, scope: !7815)
!7908 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7791, file: !7791, line: 64, type: !7909, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7911)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{null, !184, !490, !32, !32, !2759}
!7911 = !{!7912, !7913, !7914, !7915, !7916, !7917}
!7912 = !DILocalVariable(name: "T", arg: 1, scope: !7908, file: !7791, line: 64, type: !184)
!7913 = !DILocalVariable(name: "data", arg: 2, scope: !7908, file: !7791, line: 64, type: !490)
!7914 = !DILocalVariable(name: "dlen", arg: 3, scope: !7908, file: !7791, line: 64, type: !32)
!7915 = !DILocalVariable(name: "flag", arg: 4, scope: !7908, file: !7791, line: 65, type: !32)
!7916 = !DILocalVariable(name: "sched", arg: 5, scope: !7908, file: !7791, line: 65, type: !2759)
!7917 = !DILocalVariable(name: "i", scope: !7908, file: !7791, line: 68, type: !32)
!7918 = !DILocation(line: 0, scope: !7908)
!7919 = !DILocation(line: 70, column: 11, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7908, file: !7791, line: 70, column: 6)
!7921 = !DILocation(line: 70, column: 6, scope: !7908)
!7922 = !DILocation(line: 71, column: 26, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7920, file: !7791, line: 70, column: 16)
!7924 = !DILocation(line: 71, column: 8, scope: !7923)
!7925 = !DILocation(line: 72, column: 3, scope: !7923)
!7926 = !DILocation(line: 72, column: 8, scope: !7923)
!7927 = !DILocation(line: 73, column: 8, scope: !7923)
!7928 = !DILocation(line: 74, column: 2, scope: !7923)
!7929 = !DILocation(line: 0, scope: !7920)
!7930 = !DILocation(line: 78, column: 11, scope: !7908)
!7931 = !DILocation(line: 78, column: 2, scope: !7908)
!7932 = !DILocation(line: 79, column: 30, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7908, file: !7791, line: 78, column: 19)
!7934 = !DILocation(line: 79, column: 25, scope: !7933)
!7935 = !DILocation(line: 79, column: 6, scope: !7933)
!7936 = !DILocation(line: 79, column: 9, scope: !7933)
!7937 = !DILocation(line: 79, column: 3, scope: !7933)
!7938 = !DILocation(line: 79, column: 22, scope: !7933)
!7939 = !DILocation(line: 80, column: 11, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7933, file: !7791, line: 80, column: 7)
!7941 = !DILocation(line: 80, column: 24, scope: !7940)
!7942 = !DILocation(line: 80, column: 30, scope: !7940)
!7943 = !DILocation(line: 81, column: 11, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7940, file: !7791, line: 80, column: 44)
!7945 = !DILocation(line: 82, column: 3, scope: !7944)
!7946 = distinct !{!7946, !7931, !7947}
!7947 = !DILocation(line: 83, column: 2, scope: !7908)
!7948 = !DILocation(line: 84, column: 1, scope: !7908)
!7949 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7791, file: !7791, line: 93, type: !7950, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7953)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!125, !184, !32, !490, !32, !184, !7952}
!7952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2759)
!7953 = !{!7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963}
!7954 = !DILocalVariable(name: "out", arg: 1, scope: !7949, file: !7791, line: 93, type: !184)
!7955 = !DILocalVariable(name: "outlen", arg: 2, scope: !7949, file: !7791, line: 93, type: !32)
!7956 = !DILocalVariable(name: "in", arg: 3, scope: !7949, file: !7791, line: 93, type: !490)
!7957 = !DILocalVariable(name: "inlen", arg: 4, scope: !7949, file: !7791, line: 94, type: !32)
!7958 = !DILocalVariable(name: "ctr", arg: 5, scope: !7949, file: !7791, line: 94, type: !184)
!7959 = !DILocalVariable(name: "sched", arg: 6, scope: !7949, file: !7791, line: 94, type: !7952)
!7960 = !DILocalVariable(name: "buffer", scope: !7949, file: !7791, line: 97, type: !311)
!7961 = !DILocalVariable(name: "nonce", scope: !7949, file: !7791, line: 98, type: !311)
!7962 = !DILocalVariable(name: "block_num", scope: !7949, file: !7791, line: 99, type: !227)
!7963 = !DILocalVariable(name: "i", scope: !7949, file: !7791, line: 100, type: !32)
!7964 = !DILocation(line: 0, scope: !7949)
!7965 = !DILocation(line: 97, column: 2, scope: !7949)
!7966 = !DILocation(line: 97, column: 10, scope: !7949)
!7967 = !DILocation(line: 98, column: 2, scope: !7949)
!7968 = !DILocation(line: 98, column: 10, scope: !7949)
!7969 = !DILocation(line: 103, column: 10, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7949, file: !7791, line: 103, column: 6)
!7971 = !DILocation(line: 103, column: 27, scope: !7970)
!7972 = !DILocation(line: 114, column: 9, scope: !7949)
!7973 = !DILocation(line: 117, column: 27, scope: !7949)
!7974 = !DILocation(line: 117, column: 44, scope: !7949)
!7975 = !DILocation(line: 117, column: 37, scope: !7949)
!7976 = !DILocation(line: 117, column: 43, scope: !7949)
!7977 = !DILocation(line: 117, column: 42, scope: !7949)
!7978 = !DILocation(line: 118, column: 2, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7949, file: !7791, line: 118, column: 2)
!7980 = !DILocation(line: 119, column: 10, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7982, file: !7791, line: 119, column: 7)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !7791, line: 118, column: 30)
!7983 = distinct !DILexicalBlock(scope: !7979, file: !7791, line: 118, column: 2)
!7984 = !DILocation(line: 119, column: 33, scope: !7981)
!7985 = !DILocation(line: 119, column: 7, scope: !7982)
!7986 = !DILocation(line: 120, column: 13, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7981, file: !7791, line: 119, column: 39)
!7988 = !DILocation(line: 121, column: 36, scope: !7987)
!7989 = !DILocation(line: 121, column: 16, scope: !7987)
!7990 = !DILocation(line: 121, column: 14, scope: !7987)
!7991 = !DILocation(line: 122, column: 16, scope: !7987)
!7992 = !DILocation(line: 122, column: 14, scope: !7987)
!7993 = !DILocation(line: 123, column: 9, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7987, file: !7791, line: 123, column: 8)
!7995 = !DILocation(line: 123, column: 8, scope: !7987)
!7996 = !DILocation(line: 128, column: 12, scope: !7982)
!7997 = !DILocation(line: 128, column: 49, scope: !7982)
!7998 = !DILocation(line: 128, column: 46, scope: !7982)
!7999 = !DILocation(line: 128, column: 44, scope: !7982)
!8000 = !DILocation(line: 128, column: 7, scope: !7982)
!8001 = !DILocation(line: 128, column: 10, scope: !7982)
!8002 = !DILocation(line: 118, column: 25, scope: !7983)
!8003 = !DILocation(line: 118, column: 16, scope: !7983)
!8004 = distinct !{!8004, !7978, !8005}
!8005 = !DILocation(line: 129, column: 2, scope: !7979)
!8006 = !DILocation(line: 132, column: 12, scope: !7949)
!8007 = !DILocation(line: 132, column: 33, scope: !7949)
!8008 = !DILocation(line: 132, column: 2, scope: !7949)
!8009 = !DILocation(line: 132, column: 10, scope: !7949)
!8010 = !DILocation(line: 132, column: 23, scope: !7949)
!8011 = !DILocation(line: 132, column: 31, scope: !7949)
!8012 = !DILocation(line: 134, column: 2, scope: !7949)
!8013 = !DILocation(line: 135, column: 1, scope: !7949)
!8014 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7791, file: !7791, line: 198, type: !7816, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !8015)
!8015 = !{!8016, !8017, !8018, !8019, !8020, !8021, !8022, !8023, !8024, !8025}
!8016 = !DILocalVariable(name: "out", arg: 1, scope: !8014, file: !7791, line: 198, type: !184)
!8017 = !DILocalVariable(name: "olen", arg: 2, scope: !8014, file: !7791, line: 198, type: !32)
!8018 = !DILocalVariable(name: "associated_data", arg: 3, scope: !8014, file: !7791, line: 199, type: !490)
!8019 = !DILocalVariable(name: "alen", arg: 4, scope: !8014, file: !7791, line: 200, type: !32)
!8020 = !DILocalVariable(name: "payload", arg: 5, scope: !8014, file: !7791, line: 200, type: !490)
!8021 = !DILocalVariable(name: "plen", arg: 6, scope: !8014, file: !7791, line: 201, type: !32)
!8022 = !DILocalVariable(name: "c", arg: 7, scope: !8014, file: !7791, line: 201, type: !2753)
!8023 = !DILocalVariable(name: "b", scope: !8014, file: !7791, line: 215, type: !311)
!8024 = !DILocalVariable(name: "tag", scope: !8014, file: !7791, line: 216, type: !311)
!8025 = !DILocalVariable(name: "i", scope: !8014, file: !7791, line: 217, type: !32)
!8026 = !DILocation(line: 0, scope: !8014)
!8027 = !DILocation(line: 205, column: 11, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 205, column: 6)
!8029 = !DILocation(line: 205, column: 29, scope: !8028)
!8030 = !DILocation(line: 207, column: 13, scope: !8028)
!8031 = !DILocation(line: 207, column: 18, scope: !8028)
!8032 = !DILocation(line: 208, column: 13, scope: !8028)
!8033 = !DILocation(line: 208, column: 18, scope: !8028)
!8034 = !DILocation(line: 211, column: 24, scope: !8028)
!8035 = !DILocation(line: 211, column: 19, scope: !8028)
!8036 = !DILocation(line: 211, column: 12, scope: !8028)
!8037 = !DILocation(line: 205, column: 6, scope: !8014)
!8038 = !DILocation(line: 215, column: 2, scope: !8014)
!8039 = !DILocation(line: 215, column: 10, scope: !8014)
!8040 = !DILocation(line: 216, column: 2, scope: !8014)
!8041 = !DILocation(line: 216, column: 10, scope: !8014)
!8042 = !DILocation(line: 222, column: 7, scope: !8014)
!8043 = !DILocation(line: 223, column: 2, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 223, column: 2)
!8045 = !DILocation(line: 224, column: 21, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !7791, line: 223, column: 27)
!8047 = distinct !DILexicalBlock(scope: !8044, file: !7791, line: 223, column: 2)
!8048 = !DILocation(line: 224, column: 10, scope: !8046)
!8049 = !DILocation(line: 224, column: 3, scope: !8046)
!8050 = !DILocation(line: 224, column: 8, scope: !8046)
!8051 = !DILocation(line: 223, column: 22, scope: !8047)
!8052 = !DILocation(line: 223, column: 16, scope: !8047)
!8053 = distinct !{!8053, !8043, !8054}
!8054 = !DILocation(line: 225, column: 2, scope: !8044)
!8055 = !DILocation(line: 226, column: 10, scope: !8014)
!8056 = !DILocation(line: 226, column: 16, scope: !8014)
!8057 = !DILocation(line: 226, column: 2, scope: !8014)
!8058 = !DILocation(line: 226, column: 8, scope: !8014)
!8059 = !DILocation(line: 229, column: 67, scope: !8014)
!8060 = !DILocation(line: 229, column: 2, scope: !8014)
!8061 = !DILocation(line: 231, column: 16, scope: !8014)
!8062 = !DILocation(line: 231, column: 8, scope: !8014)
!8063 = !DILocation(line: 234, column: 33, scope: !8014)
!8064 = !DILocation(line: 234, column: 9, scope: !8014)
!8065 = !DILocation(line: 235, column: 16, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !7791, line: 235, column: 2)
!8067 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 235, column: 2)
!8068 = !DILocation(line: 235, column: 2, scope: !8067)
!8069 = !DILocation(line: 236, column: 39, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8066, file: !7791, line: 235, column: 32)
!8071 = !DILocation(line: 236, column: 12, scope: !8070)
!8072 = !DILocation(line: 236, column: 46, scope: !8070)
!8073 = !DILocation(line: 236, column: 44, scope: !8070)
!8074 = !DILocation(line: 236, column: 3, scope: !8070)
!8075 = !DILocation(line: 236, column: 10, scope: !8070)
!8076 = !DILocation(line: 235, column: 27, scope: !8066)
!8077 = distinct !{!8077, !8068, !8078}
!8078 = !DILocation(line: 237, column: 2, scope: !8067)
!8079 = !DILocation(line: 242, column: 10, scope: !8014)
!8080 = !DILocation(line: 242, column: 51, scope: !8014)
!8081 = !DILocation(line: 242, column: 30, scope: !8014)
!8082 = !DILocation(line: 242, column: 9, scope: !8014)
!8083 = !DILocation(line: 242, column: 7, scope: !8014)
!8084 = !DILocation(line: 243, column: 2, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 243, column: 2)
!8086 = !DILocation(line: 244, column: 21, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7791, line: 243, column: 27)
!8088 = distinct !DILexicalBlock(scope: !8085, file: !7791, line: 243, column: 2)
!8089 = !DILocation(line: 244, column: 10, scope: !8087)
!8090 = !DILocation(line: 244, column: 3, scope: !8087)
!8091 = !DILocation(line: 244, column: 8, scope: !8087)
!8092 = !DILocation(line: 243, column: 22, scope: !8088)
!8093 = !DILocation(line: 243, column: 16, scope: !8088)
!8094 = distinct !{!8094, !8084, !8095}
!8095 = !DILocation(line: 245, column: 2, scope: !8085)
!8096 = !DILocation(line: 246, column: 26, scope: !8014)
!8097 = !DILocation(line: 246, column: 37, scope: !8014)
!8098 = !DILocation(line: 246, column: 10, scope: !8014)
!8099 = !DILocation(line: 246, column: 8, scope: !8014)
!8100 = !DILocation(line: 247, column: 10, scope: !8014)
!8101 = !DILocation(line: 247, column: 8, scope: !8014)
!8102 = !DILocation(line: 250, column: 33, scope: !8014)
!8103 = !DILocation(line: 250, column: 9, scope: !8014)
!8104 = !DILocation(line: 251, column: 6, scope: !8014)
!8105 = !DILocation(line: 252, column: 47, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !7791, line: 251, column: 16)
!8107 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 251, column: 6)
!8108 = !DILocation(line: 252, column: 3, scope: !8106)
!8109 = !DILocation(line: 253, column: 2, scope: !8106)
!8110 = !DILocation(line: 254, column: 6, scope: !8014)
!8111 = !DILocation(line: 255, column: 33, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !7791, line: 254, column: 16)
!8113 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 254, column: 6)
!8114 = !DILocation(line: 255, column: 28, scope: !8112)
!8115 = !DILocation(line: 255, column: 45, scope: !8112)
!8116 = !DILocation(line: 255, column: 3, scope: !8112)
!8117 = !DILocation(line: 256, column: 2, scope: !8112)
!8118 = !DILocation(line: 259, column: 26, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8014, file: !7791, line: 259, column: 6)
!8120 = !DILocation(line: 259, column: 6, scope: !8119)
!8121 = !DILocation(line: 259, column: 32, scope: !8119)
!8122 = !DILocation(line: 259, column: 6, scope: !8014)
!8123 = !DILocation(line: 263, column: 26, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8119, file: !7791, line: 261, column: 11)
!8125 = !DILocation(line: 263, column: 21, scope: !8124)
!8126 = !DILocation(line: 263, column: 3, scope: !8124)
!8127 = !DILocation(line: 264, column: 3, scope: !8124)
!8128 = !DILocation(line: 0, scope: !8119)
!8129 = !DILocation(line: 266, column: 1, scope: !8014)
!8130 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8131, file: !8131, line: 57, type: !8132, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2766, retainedNodes: !8178)
!8131 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8132 = !DISubroutineType(types: !8133)
!8133 = !{null, !32, !8134}
!8134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8135, size: 32)
!8135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8136)
!8136 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2886, line: 141, baseType: !8137)
!8137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2886, line: 97, size: 256, elements: !8138)
!8138 = !{!8139}
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8137, file: !2886, line: 107, baseType: !8140, size: 256)
!8140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2886, line: 98, size: 256, elements: !8141)
!8141 = !{!8142, !8147, !8152, !8157, !8162, !8167, !8172, !8177}
!8142 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 99, baseType: !8143, size: 32)
!8143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 99, size: 32, elements: !8144)
!8144 = !{!8145, !8146}
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8143, file: !2886, line: 99, baseType: !208, size: 32)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8143, file: !2886, line: 99, baseType: !208, size: 32)
!8147 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 100, baseType: !8148, size: 32, offset: 32)
!8148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 100, size: 32, elements: !8149)
!8149 = !{!8150, !8151}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8148, file: !2886, line: 100, baseType: !208, size: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8148, file: !2886, line: 100, baseType: !208, size: 32)
!8152 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 101, baseType: !8153, size: 32, offset: 64)
!8153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 101, size: 32, elements: !8154)
!8154 = !{!8155, !8156}
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8153, file: !2886, line: 101, baseType: !208, size: 32)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8153, file: !2886, line: 101, baseType: !208, size: 32)
!8157 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 102, baseType: !8158, size: 32, offset: 96)
!8158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 102, size: 32, elements: !8159)
!8159 = !{!8160, !8161}
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8158, file: !2886, line: 102, baseType: !208, size: 32)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8158, file: !2886, line: 102, baseType: !208, size: 32)
!8162 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 103, baseType: !8163, size: 32, offset: 128)
!8163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 103, size: 32, elements: !8164)
!8164 = !{!8165, !8166}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8163, file: !2886, line: 103, baseType: !208, size: 32)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8163, file: !2886, line: 103, baseType: !208, size: 32)
!8167 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 104, baseType: !8168, size: 32, offset: 160)
!8168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 104, size: 32, elements: !8169)
!8169 = !{!8170, !8171}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8168, file: !2886, line: 104, baseType: !208, size: 32)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8168, file: !2886, line: 104, baseType: !208, size: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, scope: !8140, file: !2886, line: 105, baseType: !8173, size: 32, offset: 192)
!8173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8140, file: !2886, line: 105, size: 32, elements: !8174)
!8174 = !{!8175, !8176}
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8173, file: !2886, line: 105, baseType: !208, size: 32)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8173, file: !2886, line: 105, baseType: !208, size: 32)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8140, file: !2886, line: 106, baseType: !208, size: 32, offset: 224)
!8178 = !{!8179, !8180}
!8179 = !DILocalVariable(name: "reason", arg: 1, scope: !8130, file: !8131, line: 57, type: !32)
!8180 = !DILocalVariable(name: "esf", arg: 2, scope: !8130, file: !8131, line: 57, type: !8134)
!8181 = !DILocation(line: 0, scope: !8130)
!8182 = !DILocation(line: 60, column: 10, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8130, file: !8131, line: 60, column: 6)
!8184 = !DILocation(line: 60, column: 6, scope: !8130)
!8185 = !DILocation(line: 61, column: 3, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8183, file: !8131, line: 60, column: 19)
!8187 = !DILocation(line: 62, column: 2, scope: !8186)
!8188 = !DILocation(line: 63, column: 2, scope: !8130)
!8189 = !DILocation(line: 64, column: 1, scope: !8130)
!8190 = distinct !DISubprogram(name: "esf_dump", scope: !8131, file: !8131, line: 20, type: !8191, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2766, retainedNodes: !8193)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{null, !8134}
!8193 = !{!8194}
!8194 = !DILocalVariable(name: "esf", arg: 1, scope: !8190, file: !8131, line: 20, type: !8134)
!8195 = !DILocation(line: 0, scope: !8190)
!8196 = !DILocation(line: 22, column: 2, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8131, line: 22, column: 2)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !8131, line: 22, column: 2)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !8131, line: 22, column: 2)
!8200 = distinct !DILexicalBlock(scope: !8190, file: !8131, line: 22, column: 2)
!8201 = !DILocation(line: 24, column: 2, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !8131, line: 24, column: 2)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !8131, line: 24, column: 2)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !8131, line: 24, column: 2)
!8205 = distinct !DILexicalBlock(scope: !8190, file: !8131, line: 24, column: 2)
!8206 = !DILocation(line: 26, column: 2, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !8131, line: 26, column: 2)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !8131, line: 26, column: 2)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8131, line: 26, column: 2)
!8210 = distinct !DILexicalBlock(scope: !8190, file: !8131, line: 26, column: 2)
!8211 = !DILocation(line: 53, column: 2, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8213, file: !8131, line: 53, column: 2)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !8131, line: 53, column: 2)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !8131, line: 53, column: 2)
!8215 = distinct !DILexicalBlock(scope: !8190, file: !8131, line: 53, column: 2)
!8216 = !DILocation(line: 55, column: 1, scope: !8190)
!8217 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8131, file: !8131, line: 82, type: !8218, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2766, retainedNodes: !8233)
!8218 = !DISubroutineType(types: !8219)
!8219 = !{null, !8134, !8220}
!8220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8221, size: 32)
!8221 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8222)
!8222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8223)
!8223 = !{!8224, !8225, !8226, !8227, !8228, !8229, !8230, !8231, !8232}
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8222, file: !601, line: 26, baseType: !208, size: 32)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8222, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8222, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8222, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8222, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8222, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8222, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8222, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8222, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8233 = !{!8234, !8235, !8236}
!8234 = !DILocalVariable(name: "esf", arg: 1, scope: !8217, file: !8131, line: 82, type: !8134)
!8235 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8217, file: !8131, line: 82, type: !8220)
!8236 = !DILocalVariable(name: "reason", scope: !8217, file: !8131, line: 88, type: !32)
!8237 = !DILocation(line: 0, scope: !8217)
!8238 = !DILocation(line: 88, column: 35, scope: !8217)
!8239 = !DILocation(line: 108, column: 2, scope: !8217)
!8240 = !DILocation(line: 131, column: 1, scope: !8217)
!8241 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8131, file: !8131, line: 133, type: !8242, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2766, retainedNodes: !8244)
!8242 = !DISubroutineType(types: !8243)
!8243 = !{null, !124}
!8244 = !{!8245, !8246, !8247}
!8245 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8241, file: !8131, line: 133, type: !124)
!8246 = !DILocalVariable(name: "ssf_contents", scope: !8241, file: !8131, line: 135, type: !1029)
!8247 = !DILocalVariable(name: "oops_esf", scope: !8241, file: !8131, line: 136, type: !8136)
!8248 = !DILocation(line: 0, scope: !8241)
!8249 = !DILocation(line: 136, column: 2, scope: !8241)
!8250 = !DILocation(line: 136, column: 15, scope: !8241)
!8251 = !DILocation(line: 139, column: 22, scope: !8241)
!8252 = !DILocation(line: 139, column: 17, scope: !8241)
!8253 = !DILocation(line: 139, column: 20, scope: !8241)
!8254 = !DILocation(line: 141, column: 2, scope: !8241)
!8255 = !DILocation(line: 142, column: 2, scope: !8241)
!8256 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8257, file: !8257, line: 40, type: !6849, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8258)
!8257 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8258 = !{!8259}
!8259 = !DILocalVariable(name: "irq", arg: 1, scope: !8256, file: !8257, line: 40, type: !32)
!8260 = !DILocation(line: 0, scope: !8256)
!8261 = !DILocation(line: 42, column: 2, scope: !8256)
!8262 = !DILocation(line: 43, column: 1, scope: !8256)
!8263 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !680, file: !680, line: 1684, type: !8264, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8266)
!8264 = !DISubroutineType(types: !8265)
!8265 = !{null, !935}
!8266 = !{!8267}
!8267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8263, file: !680, line: 1684, type: !935)
!8268 = !DILocation(line: 0, scope: !8263)
!8269 = !DILocation(line: 1686, column: 23, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8263, file: !680, line: 1686, column: 7)
!8271 = !DILocation(line: 1686, column: 7, scope: !8263)
!8272 = !DILocation(line: 1688, column: 5, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8270, file: !680, line: 1687, column: 3)
!8274 = !{i64 2151071067}
!8275 = !DILocation(line: 1689, column: 81, scope: !8273)
!8276 = !DILocation(line: 1689, column: 60, scope: !8273)
!8277 = !DILocation(line: 1689, column: 34, scope: !8273)
!8278 = !DILocation(line: 1689, column: 5, scope: !8273)
!8279 = !DILocation(line: 1689, column: 43, scope: !8273)
!8280 = !DILocation(line: 1690, column: 5, scope: !8273)
!8281 = !{i64 2151071181}
!8282 = !DILocation(line: 1691, column: 3, scope: !8273)
!8283 = !DILocation(line: 1692, column: 1, scope: !8263)
!8284 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8257, file: !8257, line: 45, type: !6849, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8285)
!8285 = !{!8286}
!8286 = !DILocalVariable(name: "irq", arg: 1, scope: !8284, file: !8257, line: 45, type: !32)
!8287 = !DILocation(line: 0, scope: !8284)
!8288 = !DILocation(line: 47, column: 2, scope: !8284)
!8289 = !DILocation(line: 48, column: 1, scope: !8284)
!8290 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !680, file: !680, line: 1722, type: !8264, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8291)
!8291 = !{!8292}
!8292 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8290, file: !680, line: 1722, type: !935)
!8293 = !DILocation(line: 0, scope: !8290)
!8294 = !DILocation(line: 1724, column: 23, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8290, file: !680, line: 1724, column: 7)
!8296 = !DILocation(line: 1724, column: 7, scope: !8290)
!8297 = !DILocation(line: 1726, column: 81, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8295, file: !680, line: 1725, column: 3)
!8299 = !DILocation(line: 1726, column: 60, scope: !8298)
!8300 = !DILocation(line: 1726, column: 34, scope: !8298)
!8301 = !DILocation(line: 1726, column: 5, scope: !8298)
!8302 = !DILocation(line: 1726, column: 43, scope: !8298)
!8303 = !DILocation(line: 271, column: 3, scope: !8304, inlinedAt: !8306)
!8304 = distinct !DISubprogram(name: "__DSB", scope: !8305, file: !8305, line: 269, type: !3300, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !639)
!8305 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8306 = distinct !DILocation(line: 1727, column: 5, scope: !8298)
!8307 = !{i64 3525450}
!8308 = !DILocation(line: 260, column: 3, scope: !8309, inlinedAt: !8310)
!8309 = distinct !DISubprogram(name: "__ISB", scope: !8305, file: !8305, line: 258, type: !3300, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !639)
!8310 = distinct !DILocation(line: 1728, column: 5, scope: !8298)
!8311 = !{i64 3525167}
!8312 = !DILocation(line: 1729, column: 3, scope: !8298)
!8313 = !DILocation(line: 1730, column: 1, scope: !8290)
!8314 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8257, file: !8257, line: 50, type: !8315, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8317)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{!125, !32}
!8317 = !{!8318}
!8318 = !DILocalVariable(name: "irq", arg: 1, scope: !8314, file: !8257, line: 50, type: !32)
!8319 = !DILocation(line: 0, scope: !8314)
!8320 = !DILocation(line: 52, column: 20, scope: !8314)
!8321 = !DILocation(line: 52, column: 9, scope: !8314)
!8322 = !DILocation(line: 52, column: 41, scope: !8314)
!8323 = !DILocation(line: 52, column: 39, scope: !8314)
!8324 = !DILocation(line: 52, column: 2, scope: !8314)
!8325 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8257, file: !8257, line: 64, type: !8326, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8328)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{null, !32, !32, !208}
!8328 = !{!8329, !8330, !8331}
!8329 = !DILocalVariable(name: "irq", arg: 1, scope: !8325, file: !8257, line: 64, type: !32)
!8330 = !DILocalVariable(name: "prio", arg: 2, scope: !8325, file: !8257, line: 64, type: !32)
!8331 = !DILocalVariable(name: "flags", arg: 3, scope: !8325, file: !8257, line: 64, type: !208)
!8332 = !DILocation(line: 0, scope: !8325)
!8333 = !DILocation(line: 83, column: 8, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !8257, line: 82, column: 9)
!8335 = distinct !DILexicalBlock(scope: !8325, file: !8257, line: 76, column: 6)
!8336 = !DILocation(line: 95, column: 2, scope: !8325)
!8337 = !DILocation(line: 96, column: 1, scope: !8325)
!8338 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8339, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8341)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{null, !935, !208}
!8341 = !{!8342, !8343}
!8342 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8338, file: !680, line: 1814, type: !935)
!8343 = !DILocalVariable(name: "priority", arg: 2, scope: !8338, file: !680, line: 1814, type: !208)
!8344 = !DILocation(line: 0, scope: !8338)
!8345 = !DILocation(line: 0, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8338, file: !680, line: 1816, column: 7)
!8347 = !DILocation(line: 1816, column: 7, scope: !8338)
!8348 = !DILocation(line: 1824, column: 1, scope: !8338)
!8349 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8257, file: !8257, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !8350)
!8350 = !{!8351}
!8351 = !DILocalVariable(name: "unused", arg: 1, scope: !8349, file: !8257, line: 155, type: !13)
!8352 = !DILocation(line: 0, scope: !8349)
!8353 = !DILocation(line: 159, column: 2, scope: !8349)
!8354 = !DILocation(line: 160, column: 1, scope: !8349)
!8355 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8356, file: !8356, line: 87, type: !3300, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2823, retainedNodes: !639)
!8356 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8357 = !DILocation(line: 89, column: 2, scope: !8355)
!8358 = !DILocation(line: 90, column: 2, scope: !8355)
!8359 = !DILocation(line: 91, column: 1, scope: !8355)
!8360 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8356, file: !8356, line: 23, type: !3300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8361 = !DISubprogram(name: "z_arm_int_exit", scope: !8362, file: !8362, line: 153, type: !3300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8362 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8363 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8364, file: !8364, line: 256, type: !3300, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!8364 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8365 = !DILocation(line: 258, column: 2, scope: !8363)
!8366 = !DILocation(line: 260, column: 2, scope: !8363)
!8367 = !DILocation(line: 262, column: 2, scope: !8363)
!8368 = !DILocation(line: 263, column: 2, scope: !8363)
!8369 = !DILocation(line: 267, column: 2, scope: !8363)
!8370 = !DILocation(line: 268, column: 2, scope: !8363)
!8371 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8364, file: !8364, line: 53, type: !3300, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!8372 = !DILocation(line: 55, column: 12, scope: !8371)
!8373 = !DILocation(line: 271, column: 3, scope: !8374, inlinedAt: !8375)
!8374 = distinct !DISubprogram(name: "__DSB", scope: !8305, file: !8305, line: 269, type: !3300, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!8375 = distinct !DILocation(line: 56, column: 2, scope: !8371)
!8376 = !{i64 3524121}
!8377 = !DILocation(line: 260, column: 3, scope: !8378, inlinedAt: !8379)
!8378 = distinct !DISubprogram(name: "__ISB", scope: !8305, file: !8305, line: 258, type: !3300, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!8379 = distinct !DILocation(line: 57, column: 2, scope: !8371)
!8380 = !{i64 3523838}
!8381 = !DILocation(line: 58, column: 1, scope: !8371)
!8382 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8364, file: !8364, line: 96, type: !3300, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !639)
!8383 = !DILocation(line: 103, column: 13, scope: !8382)
!8384 = !DILocation(line: 975, column: 3, scope: !8385, inlinedAt: !8390)
!8385 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8305, file: !8305, line: 971, type: !8386, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8388)
!8386 = !DISubroutineType(types: !8387)
!8387 = !{!208}
!8388 = !{!8389}
!8389 = !DILocalVariable(name: "result", scope: !8385, file: !8305, line: 973, type: !208)
!8390 = distinct !DILocation(line: 189, column: 16, scope: !8382)
!8391 = !{i64 3544951}
!8392 = !DILocation(line: 0, scope: !8385, inlinedAt: !8390)
!8393 = !DILocation(line: 189, column: 32, scope: !8382)
!8394 = !DILocalVariable(name: "control", arg: 1, scope: !8395, file: !8305, line: 1001, type: !208)
!8395 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8305, file: !8305, line: 1001, type: !8396, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8398)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{null, !208}
!8398 = !{!8394}
!8399 = !DILocation(line: 0, scope: !8395, inlinedAt: !8400)
!8400 = distinct !DILocation(line: 189, column: 2, scope: !8382)
!8401 = !DILocation(line: 1003, column: 3, scope: !8395, inlinedAt: !8400)
!8402 = !{i64 3545671}
!8403 = !DILocation(line: 260, column: 3, scope: !8378, inlinedAt: !8404)
!8404 = distinct !DILocation(line: 1004, column: 3, scope: !8395, inlinedAt: !8400)
!8405 = !DILocation(line: 191, column: 1, scope: !8382)
!8406 = distinct !DISubprogram(name: "arch_swap", scope: !8407, file: !8407, line: 33, type: !8315, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8408)
!8407 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8408 = !{!8409}
!8409 = !DILocalVariable(name: "key", arg: 1, scope: !8406, file: !8407, line: 33, type: !32)
!8410 = !DILocation(line: 0, scope: !8406)
!8411 = !DILocation(line: 36, column: 2, scope: !8406)
!8412 = !DILocation(line: 36, column: 17, scope: !8406)
!8413 = !DILocation(line: 36, column: 25, scope: !8406)
!8414 = !DILocation(line: 37, column: 37, scope: !8406)
!8415 = !DILocation(line: 37, column: 17, scope: !8406)
!8416 = !DILocation(line: 37, column: 35, scope: !8406)
!8417 = !DILocation(line: 41, column: 12, scope: !8406)
!8418 = !DILocalVariable(name: "key", arg: 1, scope: !8419, file: !6838, line: 84, type: !32)
!8419 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8420)
!8420 = !{!8418}
!8421 = !DILocation(line: 0, scope: !8419, inlinedAt: !8422)
!8422 = distinct !DILocation(line: 44, column: 2, scope: !8406)
!8423 = !DILocation(line: 95, column: 2, scope: !8419, inlinedAt: !8422)
!8424 = !{i64 2223443}
!8425 = !DILocation(line: 53, column: 9, scope: !8406)
!8426 = !DILocation(line: 53, column: 24, scope: !8406)
!8427 = !DILocation(line: 53, column: 2, scope: !8406)
!8428 = distinct !DISubprogram(name: "arch_new_thread", scope: !8429, file: !8429, line: 56, type: !8430, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8537)
!8429 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8430 = !DISubroutineType(types: !8431)
!8431 = !{null, !8432, !8532, !393, !5250, !124, !124, !124}
!8432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8433, size: 32)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !8434)
!8434 = !{!8435, !8493, !8505, !8506, !8507, !8508, !8514, !8527}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8433, file: !531, line: 247, baseType: !8436, size: 384)
!8436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !8437)
!8437 = !{!8438, !8462, !8469, !8470, !8471, !8480, !8481, !8482}
!8438 = !DIDerivedType(tag: DW_TAG_member, scope: !8436, file: !531, line: 60, baseType: !8439, size: 64)
!8439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8436, file: !531, line: 60, size: 64, elements: !8440)
!8440 = !{!8441, !8456}
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8439, file: !531, line: 61, baseType: !8442, size: 64)
!8442 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !8443)
!8443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !8444)
!8444 = !{!8445, !8451}
!8445 = !DIDerivedType(tag: DW_TAG_member, scope: !8443, file: !541, line: 38, baseType: !8446, size: 32)
!8446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8443, file: !541, line: 38, size: 32, elements: !8447)
!8447 = !{!8448, !8450}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8446, file: !541, line: 39, baseType: !8449, size: 32)
!8449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8443, size: 32)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8446, file: !541, line: 40, baseType: !8449, size: 32)
!8451 = !DIDerivedType(tag: DW_TAG_member, scope: !8443, file: !541, line: 42, baseType: !8452, size: 32, offset: 32)
!8452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8443, file: !541, line: 42, size: 32, elements: !8453)
!8453 = !{!8454, !8455}
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8452, file: !541, line: 43, baseType: !8449, size: 32)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8452, file: !541, line: 44, baseType: !8449, size: 32)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8439, file: !531, line: 62, baseType: !8457, size: 64)
!8457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !8458)
!8458 = !{!8459}
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8457, file: !557, line: 50, baseType: !8460, size: 64)
!8460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8461, size: 64, elements: !562)
!8461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 32)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8436, file: !531, line: 68, baseType: !8463, size: 32, offset: 64)
!8463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8464, size: 32)
!8464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !8465)
!8465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !8466)
!8466 = !{!8467}
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8465, file: !567, line: 232, baseType: !8468, size: 64)
!8468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !8443)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8436, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8436, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!8471 = !DIDerivedType(tag: DW_TAG_member, scope: !8436, file: !531, line: 90, baseType: !8472, size: 16, offset: 112)
!8472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8436, file: !531, line: 90, size: 16, elements: !8473)
!8473 = !{!8474, !8479}
!8474 = !DIDerivedType(tag: DW_TAG_member, scope: !8472, file: !531, line: 91, baseType: !8475, size: 16)
!8475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8472, file: !531, line: 91, size: 16, elements: !8476)
!8476 = !{!8477, !8478}
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8475, file: !531, line: 96, baseType: !581, size: 8)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8475, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8472, file: !531, line: 100, baseType: !227, size: 16)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8436, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8436, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8436, file: !531, line: 131, baseType: !8483, size: 192, offset: 192)
!8483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !8484)
!8484 = !{!8485, !8486, !8492}
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8483, file: !567, line: 245, baseType: !8442, size: 64)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8483, file: !567, line: 246, baseType: !8487, size: 32, offset: 64)
!8487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !8488)
!8488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8489, size: 32)
!8489 = !DISubroutineType(types: !8490)
!8490 = !{null, !8491}
!8491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8483, size: 32)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8483, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8433, file: !531, line: 250, baseType: !8494, size: 288, offset: 384)
!8494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8495)
!8495 = !{!8496, !8497, !8498, !8499, !8500, !8501, !8502, !8503, !8504}
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8494, file: !601, line: 26, baseType: !208, size: 32)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8494, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8494, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8494, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8494, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8494, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8494, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8494, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8494, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8433, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8433, file: !531, line: 256, baseType: !8464, size: 64, offset: 704)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8433, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8433, file: !531, line: 300, baseType: !8509, size: 96, offset: 800)
!8509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !8510)
!8510 = !{!8511, !8512, !8513}
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8509, file: !531, line: 153, baseType: !22, size: 32)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8509, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8509, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8433, file: !531, line: 325, baseType: !8515, size: 32, offset: 896)
!8515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8516, size: 32)
!8516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !8517)
!8517 = !{!8518, !8524, !8525}
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8516, file: !624, line: 5074, baseType: !8519, size: 96)
!8519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !8520)
!8520 = !{!8521, !8522, !8523}
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8519, file: !628, line: 57, baseType: !631, size: 32)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8519, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8519, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8516, file: !624, line: 5075, baseType: !8464, size: 64, offset: 96)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8516, file: !624, line: 5076, baseType: !8526, offset: 160)
!8526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8433, file: !531, line: 343, baseType: !8528, size: 64, offset: 928)
!8528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !8529)
!8529 = !{!8530, !8531}
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8528, file: !601, line: 63, baseType: !208, size: 32)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8528, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!8532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8533, size: 32)
!8533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5251, line: 44, baseType: !8534)
!8534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2360, line: 47, size: 8, elements: !8535)
!8535 = !{!8536}
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8534, file: !2360, line: 48, baseType: !142, size: 8)
!8537 = !{!8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545}
!8538 = !DILocalVariable(name: "thread", arg: 1, scope: !8428, file: !8429, line: 56, type: !8432)
!8539 = !DILocalVariable(name: "stack", arg: 2, scope: !8428, file: !8429, line: 56, type: !8532)
!8540 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8428, file: !8429, line: 57, type: !393)
!8541 = !DILocalVariable(name: "entry", arg: 4, scope: !8428, file: !8429, line: 57, type: !5250)
!8542 = !DILocalVariable(name: "p1", arg: 5, scope: !8428, file: !8429, line: 58, type: !124)
!8543 = !DILocalVariable(name: "p2", arg: 6, scope: !8428, file: !8429, line: 58, type: !124)
!8544 = !DILocalVariable(name: "p3", arg: 7, scope: !8428, file: !8429, line: 58, type: !124)
!8545 = !DILocalVariable(name: "iframe", scope: !8428, file: !8429, line: 60, type: !2884)
!8546 = !DILocation(line: 0, scope: !8428)
!8547 = !DILocation(line: 85, column: 11, scope: !8428)
!8548 = !DILocation(line: 93, column: 10, scope: !8428)
!8549 = !DILocation(line: 98, column: 13, scope: !8428)
!8550 = !DILocation(line: 100, column: 15, scope: !8428)
!8551 = !DILocation(line: 100, column: 10, scope: !8428)
!8552 = !DILocation(line: 100, column: 13, scope: !8428)
!8553 = !DILocation(line: 101, column: 15, scope: !8428)
!8554 = !DILocation(line: 101, column: 10, scope: !8428)
!8555 = !DILocation(line: 101, column: 13, scope: !8428)
!8556 = !DILocation(line: 102, column: 15, scope: !8428)
!8557 = !DILocation(line: 102, column: 10, scope: !8428)
!8558 = !DILocation(line: 102, column: 13, scope: !8428)
!8559 = !DILocation(line: 103, column: 15, scope: !8428)
!8560 = !DILocation(line: 103, column: 10, scope: !8428)
!8561 = !DILocation(line: 103, column: 13, scope: !8428)
!8562 = !DILocation(line: 106, column: 10, scope: !8428)
!8563 = !DILocation(line: 106, column: 15, scope: !8428)
!8564 = !DILocation(line: 122, column: 29, scope: !8428)
!8565 = !DILocation(line: 122, column: 23, scope: !8428)
!8566 = !DILocation(line: 122, column: 27, scope: !8428)
!8567 = !DILocation(line: 123, column: 15, scope: !8428)
!8568 = !DILocation(line: 123, column: 23, scope: !8428)
!8569 = !DILocation(line: 143, column: 1, scope: !8428)
!8570 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8429, file: !8429, line: 385, type: !8571, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8574)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!208, !8573, !8573}
!8573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8574 = !{!8575, !8576, !8577, !8580}
!8575 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8570, file: !8429, line: 385, type: !8573)
!8576 = !DILocalVariable(name: "psp", arg: 2, scope: !8570, file: !8429, line: 385, type: !8573)
!8577 = !DILocalVariable(name: "thread", scope: !8570, file: !8429, line: 388, type: !8578)
!8578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8579, size: 32)
!8579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8433)
!8580 = !DILocalVariable(name: "guard_len", scope: !8570, file: !8429, line: 405, type: !208)
!8581 = !DILocation(line: 0, scope: !8570)
!8582 = !DILocation(line: 388, column: 34, scope: !8570)
!8583 = !DILocation(line: 390, column: 13, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8570, file: !8429, line: 390, column: 6)
!8585 = !DILocation(line: 390, column: 6, scope: !8570)
!8586 = !DILocation(line: 438, column: 6, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8570, file: !8429, line: 438, column: 6)
!8588 = !DILocation(line: 438, column: 6, scope: !8570)
!8589 = !DILocation(line: 442, column: 3, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8587, file: !8429, line: 440, column: 22)
!8591 = !DILocation(line: 455, column: 1, scope: !8570)
!8592 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8429, file: !8429, line: 530, type: !8593, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{null, !8432, !393, !5250}
!8595 = !{!8596, !8597, !8598}
!8596 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8592, file: !8429, line: 530, type: !8432)
!8597 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8592, file: !8429, line: 530, type: !393)
!8598 = !DILocalVariable(name: "_main", arg: 3, scope: !8592, file: !8429, line: 531, type: !5250)
!8599 = !DILocation(line: 0, scope: !8592)
!8600 = !DILocation(line: 535, column: 11, scope: !8592)
!8601 = !DILocation(line: 560, column: 2, scope: !8592)
!8602 = !DILocation(line: 576, column: 2, scope: !8592)
!8603 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8604 = !DILocation(line: 603, column: 2, scope: !8592)
!8605 = distinct !DISubprogram(name: "z_arm_fault", scope: !8606, file: !8606, line: 1036, type: !8607, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8622)
!8606 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8607 = !DISubroutineType(types: !8608)
!8608 = !{null, !208, !208, !208, !8609}
!8609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8610, size: 32)
!8610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8611)
!8611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8612)
!8612 = !{!8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621}
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8611, file: !601, line: 26, baseType: !208, size: 32)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8611, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8611, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8611, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8611, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8611, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8611, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8611, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8611, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8622 = !{!8623, !8624, !8625, !8626, !8627, !8628, !8629, !8630, !8631, !8632}
!8623 = !DILocalVariable(name: "msp", arg: 1, scope: !8605, file: !8606, line: 1036, type: !208)
!8624 = !DILocalVariable(name: "psp", arg: 2, scope: !8605, file: !8606, line: 1036, type: !208)
!8625 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8605, file: !8606, line: 1036, type: !208)
!8626 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8605, file: !8606, line: 1037, type: !8609)
!8627 = !DILocalVariable(name: "reason", scope: !8605, file: !8606, line: 1039, type: !208)
!8628 = !DILocalVariable(name: "fault", scope: !8605, file: !8606, line: 1040, type: !125)
!8629 = !DILocalVariable(name: "recoverable", scope: !8605, file: !8606, line: 1041, type: !153)
!8630 = !DILocalVariable(name: "nested_exc", scope: !8605, file: !8606, line: 1041, type: !153)
!8631 = !DILocalVariable(name: "esf", scope: !8605, file: !8606, line: 1042, type: !2952)
!8632 = !DILocalVariable(name: "esf_copy", scope: !8605, file: !8606, line: 1047, type: !2953)
!8633 = !DILocation(line: 0, scope: !8605)
!8634 = !DILocation(line: 1040, column: 19, scope: !8605)
!8635 = !DILocation(line: 1040, column: 24, scope: !8605)
!8636 = !DILocation(line: 1041, column: 2, scope: !8605)
!8637 = !DILocation(line: 1047, column: 2, scope: !8605)
!8638 = !DILocation(line: 1047, column: 15, scope: !8605)
!8639 = !DILocalVariable(name: "key", arg: 1, scope: !8640, file: !6838, line: 84, type: !32)
!8640 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8641)
!8641 = !{!8639}
!8642 = !DILocation(line: 0, scope: !8640, inlinedAt: !8643)
!8643 = distinct !DILocation(line: 1050, column: 2, scope: !8605)
!8644 = !DILocation(line: 95, column: 2, scope: !8640, inlinedAt: !8643)
!8645 = !{i64 2256687}
!8646 = !DILocation(line: 1055, column: 9, scope: !8605)
!8647 = !DILocation(line: 1063, column: 11, scope: !8605)
!8648 = !DILocation(line: 1064, column: 6, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8605, file: !8606, line: 1064, column: 6)
!8650 = !{i8 0, i8 2}
!8651 = !DILocation(line: 1064, column: 6, scope: !8605)
!8652 = !DILocation(line: 1070, column: 20, scope: !8605)
!8653 = !DILocation(line: 1070, column: 2, scope: !8605)
!8654 = !DILocation(line: 1089, column: 6, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8605, file: !8606, line: 1089, column: 6)
!8656 = !DILocation(line: 0, scope: !8655)
!8657 = !DILocation(line: 1089, column: 6, scope: !8605)
!8658 = !DILocation(line: 1090, column: 28, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !8606, line: 1090, column: 7)
!8660 = distinct !DILexicalBlock(scope: !8655, file: !8606, line: 1089, column: 18)
!8661 = !DILocation(line: 1090, column: 44, scope: !8659)
!8662 = !DILocation(line: 1090, column: 7, scope: !8660)
!8663 = !DILocation(line: 1091, column: 24, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8659, file: !8606, line: 1090, column: 50)
!8665 = !DILocation(line: 1092, column: 3, scope: !8664)
!8666 = !DILocation(line: 1094, column: 23, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8655, file: !8606, line: 1093, column: 9)
!8668 = !DILocation(line: 1097, column: 2, scope: !8605)
!8669 = !DILocation(line: 1098, column: 1, scope: !8605)
!8670 = distinct !DISubprogram(name: "get_esf", scope: !8606, file: !8606, line: 894, type: !8671, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8674)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{!2952, !208, !208, !208, !8673}
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8674 = !{!8675, !8676, !8677, !8678, !8679, !8680}
!8675 = !DILocalVariable(name: "msp", arg: 1, scope: !8670, file: !8606, line: 894, type: !208)
!8676 = !DILocalVariable(name: "psp", arg: 2, scope: !8670, file: !8606, line: 894, type: !208)
!8677 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8670, file: !8606, line: 894, type: !208)
!8678 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8670, file: !8606, line: 895, type: !8673)
!8679 = !DILocalVariable(name: "alternative_state_exc", scope: !8670, file: !8606, line: 897, type: !153)
!8680 = !DILocalVariable(name: "ptr_esf", scope: !8670, file: !8606, line: 898, type: !2952)
!8681 = !DILocation(line: 0, scope: !8670)
!8682 = !DILocation(line: 900, column: 14, scope: !8670)
!8683 = !DILocation(line: 902, column: 49, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8670, file: !8606, line: 902, column: 6)
!8685 = !DILocation(line: 902, column: 6, scope: !8670)
!8686 = !DILocation(line: 983, column: 44, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8670, file: !8606, line: 983, column: 6)
!8688 = !DILocation(line: 985, column: 3, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !8606, line: 985, column: 3)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !8606, line: 985, column: 3)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !8606, line: 985, column: 3)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !8606, line: 985, column: 3)
!8693 = distinct !DILexicalBlock(scope: !8687, file: !8606, line: 984, column: 47)
!8694 = !DILocation(line: 986, column: 3, scope: !8693)
!8695 = !DILocation(line: 983, column: 18, scope: !8687)
!8696 = !DILocation(line: 991, column: 7, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !8606, line: 990, column: 30)
!8698 = distinct !DILexicalBlock(scope: !8670, file: !8606, line: 990, column: 6)
!8699 = !DILocation(line: 998, column: 16, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !8606, line: 995, column: 10)
!8701 = distinct !DILexicalBlock(scope: !8697, file: !8606, line: 991, column: 7)
!8702 = !DILocation(line: 1002, column: 2, scope: !8670)
!8703 = !DILocation(line: 1003, column: 1, scope: !8670)
!8704 = distinct !DISubprogram(name: "fault_handle", scope: !8606, file: !8606, line: 786, type: !8705, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8707)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{!208, !2952, !125, !8673}
!8707 = !{!8708, !8709, !8710, !8711}
!8708 = !DILocalVariable(name: "esf", arg: 1, scope: !8704, file: !8606, line: 786, type: !2952)
!8709 = !DILocalVariable(name: "fault", arg: 2, scope: !8704, file: !8606, line: 786, type: !125)
!8710 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8704, file: !8606, line: 786, type: !8673)
!8711 = !DILocalVariable(name: "reason", scope: !8704, file: !8606, line: 788, type: !208)
!8712 = !DILocation(line: 0, scope: !8704)
!8713 = !DILocation(line: 790, column: 15, scope: !8704)
!8714 = !DILocation(line: 792, column: 2, scope: !8704)
!8715 = !DILocation(line: 794, column: 12, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8704, file: !8606, line: 792, column: 17)
!8717 = !DILocation(line: 795, column: 3, scope: !8716)
!8718 = !DILocation(line: 800, column: 12, scope: !8716)
!8719 = !DILocation(line: 801, column: 3, scope: !8716)
!8720 = !DILocation(line: 803, column: 12, scope: !8716)
!8721 = !DILocation(line: 804, column: 3, scope: !8716)
!8722 = !DILocation(line: 806, column: 12, scope: !8716)
!8723 = !DILocation(line: 807, column: 3, scope: !8716)
!8724 = !DILocation(line: 814, column: 3, scope: !8716)
!8725 = !DILocation(line: 815, column: 3, scope: !8716)
!8726 = !DILocation(line: 820, column: 3, scope: !8716)
!8727 = !DILocation(line: 821, column: 3, scope: !8716)
!8728 = !DILocation(line: 829, column: 2, scope: !8704)
!8729 = distinct !DISubprogram(name: "hard_fault", scope: !8606, file: !8606, line: 709, type: !8730, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8732)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!208, !2952, !8673}
!8732 = !{!8733, !8734, !8735}
!8733 = !DILocalVariable(name: "esf", arg: 1, scope: !8729, file: !8606, line: 709, type: !2952)
!8734 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8729, file: !8606, line: 709, type: !8673)
!8735 = !DILocalVariable(name: "reason", scope: !8729, file: !8606, line: 711, type: !208)
!8736 = !DILocation(line: 0, scope: !8729)
!8737 = !DILocation(line: 713, column: 2, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !8606, line: 713, column: 2)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !8606, line: 713, column: 2)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !8606, line: 713, column: 2)
!8741 = distinct !DILexicalBlock(scope: !8729, file: !8606, line: 713, column: 2)
!8742 = !DILocation(line: 732, column: 15, scope: !8729)
!8743 = !DILocation(line: 734, column: 12, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8729, file: !8606, line: 734, column: 6)
!8745 = !DILocation(line: 734, column: 17, scope: !8744)
!8746 = !DILocation(line: 734, column: 41, scope: !8744)
!8747 = !DILocation(line: 734, column: 6, scope: !8729)
!8748 = !DILocation(line: 735, column: 3, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8750, file: !8606, line: 735, column: 3)
!8750 = distinct !DILexicalBlock(scope: !8751, file: !8606, line: 735, column: 3)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !8606, line: 735, column: 3)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !8606, line: 735, column: 3)
!8753 = distinct !DILexicalBlock(scope: !8744, file: !8606, line: 734, column: 47)
!8754 = !DILocation(line: 736, column: 2, scope: !8753)
!8755 = !DILocation(line: 736, column: 19, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8744, file: !8606, line: 736, column: 13)
!8757 = !DILocation(line: 736, column: 49, scope: !8756)
!8758 = !DILocation(line: 736, column: 13, scope: !8744)
!8759 = !DILocation(line: 737, column: 3, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !8606, line: 737, column: 3)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !8606, line: 737, column: 3)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !8606, line: 737, column: 3)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !8606, line: 737, column: 3)
!8764 = distinct !DILexicalBlock(scope: !8756, file: !8606, line: 736, column: 55)
!8765 = !DILocation(line: 738, column: 2, scope: !8764)
!8766 = !DILocation(line: 738, column: 19, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8756, file: !8606, line: 738, column: 13)
!8768 = !DILocation(line: 738, column: 24, scope: !8767)
!8769 = !DILocation(line: 738, column: 47, scope: !8767)
!8770 = !DILocation(line: 738, column: 13, scope: !8756)
!8771 = !DILocation(line: 739, column: 3, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !8606, line: 739, column: 3)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !8606, line: 739, column: 3)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !8606, line: 739, column: 3)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !8606, line: 739, column: 3)
!8776 = distinct !DILexicalBlock(scope: !8767, file: !8606, line: 738, column: 53)
!8777 = !DILocation(line: 740, column: 7, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8776, file: !8606, line: 740, column: 7)
!8779 = !DILocation(line: 740, column: 7, scope: !8776)
!8780 = !DILocation(line: 741, column: 4, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8782, file: !8606, line: 741, column: 4)
!8782 = distinct !DILexicalBlock(scope: !8783, file: !8606, line: 741, column: 4)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !8606, line: 741, column: 4)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !8606, line: 741, column: 4)
!8785 = distinct !DILexicalBlock(scope: !8778, file: !8606, line: 740, column: 38)
!8786 = !DILocation(line: 742, column: 24, scope: !8785)
!8787 = !DILocation(line: 743, column: 3, scope: !8785)
!8788 = !DILocation(line: 743, column: 20, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8778, file: !8606, line: 743, column: 14)
!8790 = !DILocation(line: 743, column: 25, scope: !8789)
!8791 = !DILocation(line: 743, column: 52, scope: !8789)
!8792 = !DILocation(line: 743, column: 14, scope: !8778)
!8793 = !DILocation(line: 744, column: 13, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8789, file: !8606, line: 743, column: 58)
!8795 = !DILocation(line: 745, column: 3, scope: !8794)
!8796 = !DILocation(line: 745, column: 20, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8789, file: !8606, line: 745, column: 14)
!8798 = !DILocation(line: 745, column: 25, scope: !8797)
!8799 = !DILocation(line: 745, column: 52, scope: !8797)
!8800 = !DILocation(line: 745, column: 14, scope: !8789)
!8801 = !DILocation(line: 746, column: 13, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8797, file: !8606, line: 745, column: 58)
!8803 = !DILocation(line: 747, column: 3, scope: !8802)
!8804 = !DILocation(line: 747, column: 20, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8797, file: !8606, line: 747, column: 14)
!8806 = !DILocation(line: 747, column: 52, scope: !8805)
!8807 = !DILocation(line: 747, column: 14, scope: !8797)
!8808 = !DILocation(line: 748, column: 13, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8805, file: !8606, line: 747, column: 58)
!8810 = !DILocation(line: 753, column: 3, scope: !8809)
!8811 = !DILocation(line: 766, column: 2, scope: !8729)
!8812 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8606, file: !8606, line: 229, type: !8705, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8813)
!8813 = !{!8814, !8815, !8816, !8817, !8818, !8819, !8822}
!8814 = !DILocalVariable(name: "esf", arg: 1, scope: !8812, file: !8606, line: 229, type: !2952)
!8815 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8812, file: !8606, line: 229, type: !125)
!8816 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8812, file: !8606, line: 230, type: !8673)
!8817 = !DILocalVariable(name: "reason", scope: !8812, file: !8606, line: 232, type: !208)
!8818 = !DILocalVariable(name: "mmfar", scope: !8812, file: !8606, line: 233, type: !208)
!8819 = !DILocalVariable(name: "temp", scope: !8820, file: !8606, line: 254, type: !208)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8606, line: 244, column: 48)
!8821 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 244, column: 6)
!8822 = !DILocalVariable(name: "min_stack_ptr", scope: !8823, file: !8606, line: 309, type: !208)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !8606, line: 308, column: 43)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !8606, line: 308, column: 7)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !8606, line: 289, column: 40)
!8826 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 288, column: 6)
!8827 = !DILocation(line: 0, scope: !8812)
!8828 = !DILocation(line: 235, column: 2, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !8606, line: 235, column: 2)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8606, line: 235, column: 2)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !8606, line: 235, column: 2)
!8832 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 235, column: 2)
!8833 = !DILocation(line: 237, column: 12, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 237, column: 6)
!8835 = !DILocation(line: 237, column: 17, scope: !8834)
!8836 = !DILocation(line: 237, column: 41, scope: !8834)
!8837 = !DILocation(line: 237, column: 6, scope: !8812)
!8838 = !DILocation(line: 238, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !8606, line: 238, column: 3)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !8606, line: 238, column: 3)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !8606, line: 238, column: 3)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !8606, line: 238, column: 3)
!8843 = distinct !DILexicalBlock(scope: !8834, file: !8606, line: 237, column: 47)
!8844 = !DILocation(line: 240, column: 2, scope: !8843)
!8845 = !DILocation(line: 241, column: 12, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 241, column: 6)
!8847 = !DILocation(line: 241, column: 17, scope: !8846)
!8848 = !DILocation(line: 241, column: 43, scope: !8846)
!8849 = !DILocation(line: 241, column: 6, scope: !8812)
!8850 = !DILocation(line: 242, column: 3, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !8606, line: 242, column: 3)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !8606, line: 242, column: 3)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !8606, line: 242, column: 3)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !8606, line: 242, column: 3)
!8855 = distinct !DILexicalBlock(scope: !8846, file: !8606, line: 241, column: 49)
!8856 = !DILocation(line: 243, column: 2, scope: !8855)
!8857 = !DILocation(line: 244, column: 12, scope: !8821)
!8858 = !DILocation(line: 244, column: 17, scope: !8821)
!8859 = !DILocation(line: 244, column: 42, scope: !8821)
!8860 = !DILocation(line: 244, column: 6, scope: !8812)
!8861 = !DILocation(line: 245, column: 3, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !8606, line: 245, column: 3)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !8606, line: 245, column: 3)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !8606, line: 245, column: 3)
!8865 = distinct !DILexicalBlock(scope: !8820, file: !8606, line: 245, column: 3)
!8866 = !DILocation(line: 254, column: 24, scope: !8820)
!8867 = !DILocation(line: 0, scope: !8820)
!8868 = !DILocation(line: 256, column: 13, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8820, file: !8606, line: 256, column: 7)
!8870 = !DILocation(line: 256, column: 18, scope: !8869)
!8871 = !DILocation(line: 256, column: 44, scope: !8869)
!8872 = !DILocation(line: 256, column: 7, scope: !8820)
!8873 = !DILocation(line: 258, column: 4, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !8606, line: 258, column: 4)
!8875 = distinct !DILexicalBlock(scope: !8876, file: !8606, line: 258, column: 4)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !8606, line: 258, column: 4)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !8606, line: 258, column: 4)
!8878 = distinct !DILexicalBlock(scope: !8869, file: !8606, line: 256, column: 50)
!8879 = !DILocation(line: 259, column: 24, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8878, file: !8606, line: 259, column: 8)
!8881 = !DILocation(line: 259, column: 8, scope: !8878)
!8882 = !DILocation(line: 261, column: 15, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8880, file: !8606, line: 259, column: 30)
!8884 = !DILocation(line: 262, column: 4, scope: !8883)
!8885 = !DILocation(line: 265, column: 12, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 265, column: 6)
!8887 = !DILocation(line: 265, column: 17, scope: !8886)
!8888 = !DILocation(line: 265, column: 42, scope: !8886)
!8889 = !DILocation(line: 265, column: 6, scope: !8812)
!8890 = !DILocation(line: 266, column: 3, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !8606, line: 266, column: 3)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !8606, line: 266, column: 3)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !8606, line: 266, column: 3)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !8606, line: 266, column: 3)
!8895 = distinct !DILexicalBlock(scope: !8886, file: !8606, line: 265, column: 48)
!8896 = !DILocation(line: 267, column: 2, scope: !8895)
!8897 = !DILocation(line: 269, column: 12, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 269, column: 6)
!8899 = !DILocation(line: 269, column: 17, scope: !8898)
!8900 = !DILocation(line: 269, column: 41, scope: !8898)
!8901 = !DILocation(line: 269, column: 6, scope: !8812)
!8902 = !DILocation(line: 270, column: 3, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !8606, line: 270, column: 3)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !8606, line: 270, column: 3)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !8606, line: 270, column: 3)
!8906 = distinct !DILexicalBlock(scope: !8907, file: !8606, line: 270, column: 3)
!8907 = distinct !DILexicalBlock(scope: !8898, file: !8606, line: 269, column: 47)
!8908 = !DILocation(line: 272, column: 2, scope: !8907)
!8909 = !DILocation(line: 288, column: 12, scope: !8826)
!8910 = !DILocation(line: 288, column: 17, scope: !8826)
!8911 = !DILocation(line: 288, column: 41, scope: !8826)
!8912 = !DILocation(line: 289, column: 9, scope: !8826)
!8913 = !DILocation(line: 289, column: 14, scope: !8826)
!8914 = !DILocation(line: 288, column: 6, scope: !8812)
!8915 = !DILocation(line: 308, column: 12, scope: !8824)
!8916 = !DILocation(line: 308, column: 17, scope: !8824)
!8917 = !DILocation(line: 308, column: 7, scope: !8825)
!8918 = !DILocation(line: 310, column: 6, scope: !8823)
!8919 = !DILocation(line: 309, column: 29, scope: !8823)
!8920 = !DILocation(line: 0, scope: !8823)
!8921 = !DILocation(line: 312, column: 8, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8823, file: !8606, line: 312, column: 8)
!8923 = !DILocation(line: 312, column: 8, scope: !8823)
!8924 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8925, file: !8305, line: 1099, type: !208)
!8925 = distinct !DISubprogram(name: "__set_PSP", scope: !8305, file: !8305, line: 1099, type: !8396, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8926)
!8926 = !{!8924}
!8927 = !DILocation(line: 0, scope: !8925, inlinedAt: !8928)
!8928 = distinct !DILocation(line: 338, column: 5, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8922, file: !8606, line: 312, column: 23)
!8930 = !DILocation(line: 1101, column: 3, scope: !8925, inlinedAt: !8928)
!8931 = !{i64 3575090}
!8932 = !DILocation(line: 341, column: 4, scope: !8929)
!8933 = !DILocation(line: 360, column: 12, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8812, file: !8606, line: 360, column: 6)
!8935 = !DILocation(line: 360, column: 17, scope: !8934)
!8936 = !DILocation(line: 360, column: 41, scope: !8934)
!8937 = !DILocation(line: 360, column: 6, scope: !8812)
!8938 = !DILocation(line: 361, column: 14, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8934, file: !8606, line: 360, column: 47)
!8940 = !DILocation(line: 362, column: 2, scope: !8939)
!8941 = !DILocation(line: 366, column: 12, scope: !8812)
!8942 = !DILocation(line: 369, column: 15, scope: !8812)
!8943 = !DILocation(line: 371, column: 2, scope: !8812)
!8944 = distinct !DISubprogram(name: "bus_fault", scope: !8606, file: !8606, line: 383, type: !8945, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !8947)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!125, !2952, !125, !8673}
!8947 = !{!8948, !8949, !8950, !8951, !8952}
!8948 = !DILocalVariable(name: "esf", arg: 1, scope: !8944, file: !8606, line: 383, type: !2952)
!8949 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8944, file: !8606, line: 383, type: !125)
!8950 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8944, file: !8606, line: 383, type: !8673)
!8951 = !DILocalVariable(name: "reason", scope: !8944, file: !8606, line: 385, type: !208)
!8952 = !DILocalVariable(name: "bfar", scope: !8953, file: !8606, line: 405, type: !208)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !8606, line: 395, column: 42)
!8954 = distinct !DILexicalBlock(scope: !8944, file: !8606, line: 395, column: 6)
!8955 = !DILocation(line: 0, scope: !8944)
!8956 = !DILocation(line: 387, column: 2, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !8606, line: 387, column: 2)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !8606, line: 387, column: 2)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !8606, line: 387, column: 2)
!8960 = distinct !DILexicalBlock(scope: !8944, file: !8606, line: 387, column: 2)
!8961 = !DILocation(line: 389, column: 11, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8944, file: !8606, line: 389, column: 6)
!8963 = !DILocation(line: 389, column: 16, scope: !8962)
!8964 = !DILocation(line: 389, column: 6, scope: !8944)
!8965 = !DILocation(line: 390, column: 3, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !8606, line: 390, column: 3)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !8606, line: 390, column: 3)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !8606, line: 390, column: 3)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !8606, line: 390, column: 3)
!8970 = distinct !DILexicalBlock(scope: !8962, file: !8606, line: 389, column: 39)
!8971 = !DILocation(line: 391, column: 2, scope: !8970)
!8972 = !DILocation(line: 392, column: 11, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8944, file: !8606, line: 392, column: 6)
!8974 = !DILocation(line: 392, column: 16, scope: !8973)
!8975 = !DILocation(line: 392, column: 6, scope: !8944)
!8976 = !DILocation(line: 393, column: 3, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !8606, line: 393, column: 3)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !8606, line: 393, column: 3)
!8979 = distinct !DILexicalBlock(scope: !8980, file: !8606, line: 393, column: 3)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !8606, line: 393, column: 3)
!8981 = distinct !DILexicalBlock(scope: !8973, file: !8606, line: 392, column: 41)
!8982 = !DILocation(line: 394, column: 2, scope: !8981)
!8983 = !DILocation(line: 395, column: 11, scope: !8954)
!8984 = !DILocation(line: 395, column: 16, scope: !8954)
!8985 = !DILocation(line: 395, column: 6, scope: !8944)
!8986 = !DILocation(line: 396, column: 3, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !8606, line: 396, column: 3)
!8988 = distinct !DILexicalBlock(scope: !8989, file: !8606, line: 396, column: 3)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !8606, line: 396, column: 3)
!8990 = distinct !DILexicalBlock(scope: !8953, file: !8606, line: 396, column: 3)
!8991 = !DILocation(line: 405, column: 3, scope: !8953)
!8992 = !DILocation(line: 0, scope: !8953)
!8993 = !DILocation(line: 407, column: 13, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8953, file: !8606, line: 407, column: 7)
!8995 = !DILocation(line: 407, column: 18, scope: !8994)
!8996 = !DILocation(line: 407, column: 44, scope: !8994)
!8997 = !DILocation(line: 407, column: 7, scope: !8953)
!8998 = !DILocation(line: 408, column: 4, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !8606, line: 408, column: 4)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !8606, line: 408, column: 4)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !8606, line: 408, column: 4)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !8606, line: 408, column: 4)
!9003 = distinct !DILexicalBlock(scope: !8994, file: !8606, line: 407, column: 50)
!9004 = !DILocation(line: 409, column: 24, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9003, file: !8606, line: 409, column: 8)
!9006 = !DILocation(line: 409, column: 8, scope: !9003)
!9007 = !DILocation(line: 411, column: 15, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9005, file: !8606, line: 409, column: 30)
!9009 = !DILocation(line: 412, column: 4, scope: !9008)
!9010 = !DILocation(line: 415, column: 11, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8944, file: !8606, line: 415, column: 6)
!9012 = !DILocation(line: 415, column: 16, scope: !9011)
!9013 = !DILocation(line: 415, column: 6, scope: !8944)
!9014 = !DILocation(line: 416, column: 3, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !8606, line: 416, column: 3)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !8606, line: 416, column: 3)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !8606, line: 416, column: 3)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !8606, line: 416, column: 3)
!9019 = distinct !DILexicalBlock(scope: !9011, file: !8606, line: 415, column: 44)
!9020 = !DILocation(line: 417, column: 2, scope: !9019)
!9021 = !DILocation(line: 418, column: 12, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !8944, file: !8606, line: 418, column: 6)
!9023 = !DILocation(line: 418, column: 17, scope: !9022)
!9024 = !DILocation(line: 418, column: 41, scope: !9022)
!9025 = !DILocation(line: 418, column: 6, scope: !8944)
!9026 = !DILocation(line: 423, column: 18, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9022, file: !8606, line: 423, column: 13)
!9028 = !DILocation(line: 423, column: 23, scope: !9027)
!9029 = !DILocation(line: 423, column: 13, scope: !9022)
!9030 = !DILocation(line: 0, scope: !9022)
!9031 = !DILocation(line: 524, column: 12, scope: !8944)
!9032 = !DILocation(line: 526, column: 15, scope: !8944)
!9033 = !DILocation(line: 528, column: 2, scope: !8944)
!9034 = distinct !DISubprogram(name: "usage_fault", scope: !8606, file: !8606, line: 539, type: !9035, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !9039)
!9035 = !DISubroutineType(types: !9036)
!9036 = !{!208, !9037}
!9037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9038, size: 32)
!9038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2953)
!9039 = !{!9040, !9041}
!9040 = !DILocalVariable(name: "esf", arg: 1, scope: !9034, file: !8606, line: 539, type: !9037)
!9041 = !DILocalVariable(name: "reason", scope: !9034, file: !8606, line: 541, type: !208)
!9042 = !DILocation(line: 0, scope: !9034)
!9043 = !DILocation(line: 543, column: 2, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !8606, line: 543, column: 2)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !8606, line: 543, column: 2)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8606, line: 543, column: 2)
!9047 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 543, column: 2)
!9048 = !DILocation(line: 546, column: 12, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 546, column: 6)
!9050 = !DILocation(line: 546, column: 17, scope: !9049)
!9051 = !DILocation(line: 546, column: 43, scope: !9049)
!9052 = !DILocation(line: 546, column: 6, scope: !9034)
!9053 = !DILocation(line: 547, column: 3, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !8606, line: 547, column: 3)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !8606, line: 547, column: 3)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !8606, line: 547, column: 3)
!9057 = distinct !DILexicalBlock(scope: !9058, file: !8606, line: 547, column: 3)
!9058 = distinct !DILexicalBlock(scope: !9049, file: !8606, line: 546, column: 49)
!9059 = !DILocation(line: 548, column: 2, scope: !9058)
!9060 = !DILocation(line: 549, column: 12, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 549, column: 6)
!9062 = !DILocation(line: 549, column: 17, scope: !9061)
!9063 = !DILocation(line: 549, column: 43, scope: !9061)
!9064 = !DILocation(line: 549, column: 6, scope: !9034)
!9065 = !DILocation(line: 550, column: 3, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !8606, line: 550, column: 3)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !8606, line: 550, column: 3)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !8606, line: 550, column: 3)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !8606, line: 550, column: 3)
!9070 = distinct !DILexicalBlock(scope: !9061, file: !8606, line: 549, column: 49)
!9071 = !DILocation(line: 551, column: 2, scope: !9070)
!9072 = !DILocation(line: 567, column: 12, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 567, column: 6)
!9074 = !DILocation(line: 567, column: 17, scope: !9073)
!9075 = !DILocation(line: 567, column: 38, scope: !9073)
!9076 = !DILocation(line: 567, column: 6, scope: !9034)
!9077 = !DILocation(line: 568, column: 3, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !8606, line: 568, column: 3)
!9079 = distinct !DILexicalBlock(scope: !9080, file: !8606, line: 568, column: 3)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !8606, line: 568, column: 3)
!9081 = distinct !DILexicalBlock(scope: !9082, file: !8606, line: 568, column: 3)
!9082 = distinct !DILexicalBlock(scope: !9073, file: !8606, line: 567, column: 44)
!9083 = !DILocation(line: 569, column: 2, scope: !9082)
!9084 = !DILocation(line: 570, column: 12, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 570, column: 6)
!9086 = !DILocation(line: 570, column: 17, scope: !9085)
!9087 = !DILocation(line: 570, column: 39, scope: !9085)
!9088 = !DILocation(line: 570, column: 6, scope: !9034)
!9089 = !DILocation(line: 571, column: 3, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !8606, line: 571, column: 3)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !8606, line: 571, column: 3)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !8606, line: 571, column: 3)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !8606, line: 571, column: 3)
!9094 = distinct !DILexicalBlock(scope: !9085, file: !8606, line: 570, column: 45)
!9095 = !DILocation(line: 572, column: 2, scope: !9094)
!9096 = !DILocation(line: 573, column: 12, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 573, column: 6)
!9098 = !DILocation(line: 573, column: 17, scope: !9097)
!9099 = !DILocation(line: 573, column: 42, scope: !9097)
!9100 = !DILocation(line: 573, column: 6, scope: !9034)
!9101 = !DILocation(line: 574, column: 3, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !8606, line: 574, column: 3)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !8606, line: 574, column: 3)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !8606, line: 574, column: 3)
!9105 = distinct !DILexicalBlock(scope: !9106, file: !8606, line: 574, column: 3)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !8606, line: 573, column: 48)
!9107 = !DILocation(line: 575, column: 2, scope: !9106)
!9108 = !DILocation(line: 576, column: 12, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9034, file: !8606, line: 576, column: 6)
!9110 = !DILocation(line: 576, column: 17, scope: !9109)
!9111 = !DILocation(line: 576, column: 44, scope: !9109)
!9112 = !DILocation(line: 576, column: 6, scope: !9034)
!9113 = !DILocation(line: 577, column: 3, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !8606, line: 577, column: 3)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !8606, line: 577, column: 3)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !8606, line: 577, column: 3)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !8606, line: 577, column: 3)
!9118 = distinct !DILexicalBlock(scope: !9109, file: !8606, line: 576, column: 50)
!9119 = !DILocation(line: 578, column: 2, scope: !9118)
!9120 = !DILocation(line: 581, column: 12, scope: !9034)
!9121 = !DILocation(line: 583, column: 2, scope: !9034)
!9122 = distinct !DISubprogram(name: "debug_monitor", scope: !8606, file: !8606, line: 632, type: !9123, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !9125)
!9123 = !DISubroutineType(types: !9124)
!9124 = !{null, !2952, !8673}
!9125 = !{!9126, !9127}
!9126 = !DILocalVariable(name: "esf", arg: 1, scope: !9122, file: !8606, line: 632, type: !2952)
!9127 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9122, file: !8606, line: 632, type: !8673)
!9128 = !DILocation(line: 0, scope: !9122)
!9129 = !DILocation(line: 634, column: 15, scope: !9122)
!9130 = !DILocation(line: 636, column: 2, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !8606, line: 636, column: 2)
!9132 = distinct !DILexicalBlock(scope: !9133, file: !8606, line: 636, column: 2)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !8606, line: 636, column: 2)
!9134 = distinct !DILexicalBlock(scope: !9122, file: !8606, line: 636, column: 2)
!9135 = !DILocation(line: 652, column: 1, scope: !9122)
!9136 = distinct !DISubprogram(name: "reserved_exception", scope: !8606, file: !8606, line: 776, type: !9137, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{null, !9037, !125}
!9139 = !{!9140, !9141}
!9140 = !DILocalVariable(name: "esf", arg: 1, scope: !9136, file: !8606, line: 776, type: !9037)
!9141 = !DILocalVariable(name: "fault", arg: 2, scope: !9136, file: !8606, line: 776, type: !125)
!9142 = !DILocation(line: 0, scope: !9136)
!9143 = !DILocation(line: 780, column: 2, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9145, file: !8606, line: 780, column: 2)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !8606, line: 780, column: 2)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !8606, line: 780, column: 2)
!9147 = distinct !DILexicalBlock(scope: !9136, file: !8606, line: 780, column: 2)
!9148 = !DILocation(line: 783, column: 1, scope: !9136)
!9149 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8606, file: !8606, line: 658, type: !9150, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !9152)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!153, !2952}
!9152 = !{!9153, !9154, !9155}
!9153 = !DILocalVariable(name: "esf", arg: 1, scope: !9149, file: !8606, line: 658, type: !2952)
!9154 = !DILocalVariable(name: "ret_addr", scope: !9149, file: !8606, line: 660, type: !2995)
!9155 = !DILocalVariable(name: "fault_insn", scope: !9149, file: !8606, line: 686, type: !227)
!9156 = !DILocation(line: 0, scope: !9149)
!9157 = !DILocation(line: 660, column: 46, scope: !9149)
!9158 = !DILocation(line: 660, column: 23, scope: !9149)
!9159 = !DILocation(line: 682, column: 11, scope: !9149)
!9160 = !DILocation(line: 271, column: 3, scope: !9161, inlinedAt: !9162)
!9161 = distinct !DISubprogram(name: "__DSB", scope: !8305, file: !8305, line: 269, type: !3300, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !639)
!9162 = distinct !DILocation(line: 683, column: 2, scope: !9149)
!9163 = !{i64 3551225}
!9164 = !DILocation(line: 260, column: 3, scope: !9165, inlinedAt: !9166)
!9165 = distinct !DISubprogram(name: "__ISB", scope: !8305, file: !8305, line: 258, type: !3300, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !639)
!9166 = distinct !DILocation(line: 684, column: 2, scope: !9149)
!9167 = !{i64 3550942}
!9168 = !DILocation(line: 686, column: 35, scope: !9149)
!9169 = !DILocation(line: 686, column: 24, scope: !9149)
!9170 = !DILocation(line: 688, column: 11, scope: !9149)
!9171 = !DILocation(line: 271, column: 3, scope: !9161, inlinedAt: !9172)
!9172 = distinct !DILocation(line: 689, column: 2, scope: !9149)
!9173 = !DILocation(line: 260, column: 3, scope: !9165, inlinedAt: !9174)
!9174 = distinct !DILocation(line: 690, column: 2, scope: !9149)
!9175 = !DILocation(line: 693, column: 45, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9149, file: !8606, line: 693, column: 6)
!9177 = !DILocation(line: 699, column: 1, scope: !9149)
!9178 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8606, file: !8606, line: 1107, type: !3300, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !639)
!9179 = !DILocation(line: 1111, column: 11, scope: !9178)
!9180 = !DILocation(line: 1136, column: 1, scope: !9178)
!9181 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9182, file: !9182, line: 26, type: !3300, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !9183)
!9182 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9183 = !{!9184}
!9184 = !DILocalVariable(name: "irq", scope: !9181, file: !9182, line: 28, type: !125)
!9185 = !DILocation(line: 0, scope: !9181)
!9186 = !DILocation(line: 30, column: 2, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9181, file: !9182, line: 30, column: 2)
!9188 = !DILocation(line: 31, column: 3, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !9182, line: 30, column: 39)
!9190 = distinct !DILexicalBlock(scope: !9187, file: !9182, line: 30, column: 2)
!9191 = !DILocation(line: 30, column: 35, scope: !9190)
!9192 = !DILocation(line: 30, column: 13, scope: !9190)
!9193 = distinct !{!9193, !9186, !9194}
!9194 = !DILocation(line: 32, column: 2, scope: !9187)
!9195 = !DILocation(line: 33, column: 1, scope: !9181)
!9196 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8339, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2996, retainedNodes: !9197)
!9197 = !{!9198, !9199}
!9198 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9196, file: !680, line: 1814, type: !935)
!9199 = !DILocalVariable(name: "priority", arg: 2, scope: !9196, file: !680, line: 1814, type: !208)
!9200 = !DILocation(line: 0, scope: !9196)
!9201 = !DILocation(line: 1816, column: 7, scope: !9196)
!9202 = !DILocation(line: 0, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9196, file: !680, line: 1816, column: 7)
!9204 = !DILocation(line: 1824, column: 1, scope: !9196)
!9205 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9206, file: !9206, line: 27, type: !9207, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9310)
!9206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9207 = !DISubroutineType(types: !9208)
!9208 = !{null, !9209}
!9209 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !9210)
!9210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9211, size: 32)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !9212)
!9212 = !{!9213, !9271, !9283, !9284, !9285, !9286, !9292, !9305}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9211, file: !531, line: 247, baseType: !9214, size: 384)
!9214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !9215)
!9215 = !{!9216, !9240, !9247, !9248, !9249, !9258, !9259, !9260}
!9216 = !DIDerivedType(tag: DW_TAG_member, scope: !9214, file: !531, line: 60, baseType: !9217, size: 64)
!9217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9214, file: !531, line: 60, size: 64, elements: !9218)
!9218 = !{!9219, !9234}
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9217, file: !531, line: 61, baseType: !9220, size: 64)
!9220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !9221)
!9221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !9222)
!9222 = !{!9223, !9229}
!9223 = !DIDerivedType(tag: DW_TAG_member, scope: !9221, file: !541, line: 38, baseType: !9224, size: 32)
!9224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9221, file: !541, line: 38, size: 32, elements: !9225)
!9225 = !{!9226, !9228}
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9224, file: !541, line: 39, baseType: !9227, size: 32)
!9227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9221, size: 32)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9224, file: !541, line: 40, baseType: !9227, size: 32)
!9229 = !DIDerivedType(tag: DW_TAG_member, scope: !9221, file: !541, line: 42, baseType: !9230, size: 32, offset: 32)
!9230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9221, file: !541, line: 42, size: 32, elements: !9231)
!9231 = !{!9232, !9233}
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9230, file: !541, line: 43, baseType: !9227, size: 32)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9230, file: !541, line: 44, baseType: !9227, size: 32)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9217, file: !531, line: 62, baseType: !9235, size: 64)
!9235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !9236)
!9236 = !{!9237}
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9235, file: !557, line: 50, baseType: !9238, size: 64)
!9238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9239, size: 64, elements: !562)
!9239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9235, size: 32)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9214, file: !531, line: 68, baseType: !9241, size: 32, offset: 64)
!9241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9242, size: 32)
!9242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !9243)
!9243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !9244)
!9244 = !{!9245}
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9243, file: !567, line: 232, baseType: !9246, size: 64)
!9246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !9221)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9214, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9214, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!9249 = !DIDerivedType(tag: DW_TAG_member, scope: !9214, file: !531, line: 90, baseType: !9250, size: 16, offset: 112)
!9250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9214, file: !531, line: 90, size: 16, elements: !9251)
!9251 = !{!9252, !9257}
!9252 = !DIDerivedType(tag: DW_TAG_member, scope: !9250, file: !531, line: 91, baseType: !9253, size: 16)
!9253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9250, file: !531, line: 91, size: 16, elements: !9254)
!9254 = !{!9255, !9256}
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9253, file: !531, line: 96, baseType: !581, size: 8)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9253, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9250, file: !531, line: 100, baseType: !227, size: 16)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9214, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9214, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9214, file: !531, line: 131, baseType: !9261, size: 192, offset: 192)
!9261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !9262)
!9262 = !{!9263, !9264, !9270}
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9261, file: !567, line: 245, baseType: !9220, size: 64)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9261, file: !567, line: 246, baseType: !9265, size: 32, offset: 64)
!9265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !9266)
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 32)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{null, !9269}
!9269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9261, size: 32)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9261, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9211, file: !531, line: 250, baseType: !9272, size: 288, offset: 384)
!9272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !9273)
!9273 = !{!9274, !9275, !9276, !9277, !9278, !9279, !9280, !9281, !9282}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9272, file: !601, line: 26, baseType: !208, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9272, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9272, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9272, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9272, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9272, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9272, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9272, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9272, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9211, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9211, file: !531, line: 256, baseType: !9242, size: 64, offset: 704)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9211, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9211, file: !531, line: 300, baseType: !9287, size: 96, offset: 800)
!9287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !9288)
!9288 = !{!9289, !9290, !9291}
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9287, file: !531, line: 153, baseType: !22, size: 32)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9287, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9287, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9211, file: !531, line: 325, baseType: !9293, size: 32, offset: 896)
!9293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9294, size: 32)
!9294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !9295)
!9295 = !{!9296, !9302, !9303}
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9294, file: !624, line: 5074, baseType: !9297, size: 96)
!9297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !9298)
!9298 = !{!9299, !9300, !9301}
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9297, file: !628, line: 57, baseType: !631, size: 32)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9297, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9297, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9294, file: !624, line: 5075, baseType: !9242, size: 64, offset: 96)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9294, file: !624, line: 5076, baseType: !9304, offset: 160)
!9304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9211, file: !531, line: 343, baseType: !9306, size: 64, offset: 928)
!9306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !9307)
!9307 = !{!9308, !9309}
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9306, file: !601, line: 63, baseType: !208, size: 32)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9306, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!9310 = !{!9311}
!9311 = !DILocalVariable(name: "thread", arg: 1, scope: !9205, file: !9206, line: 27, type: !9209)
!9312 = !DILocation(line: 0, scope: !9205)
!9313 = !DILocation(line: 29, column: 6, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9205, file: !9206, line: 29, column: 6)
!9315 = !DILocation(line: 29, column: 15, scope: !9314)
!9316 = !DILocation(line: 29, column: 6, scope: !9205)
!9317 = !DILocation(line: 1031, column: 3, scope: !9318, inlinedAt: !9321)
!9318 = distinct !DISubprogram(name: "__get_IPSR", scope: !8305, file: !8305, line: 1027, type: !8386, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9319)
!9319 = !{!9320}
!9320 = !DILocalVariable(name: "result", scope: !9318, file: !8305, line: 1029, type: !208)
!9321 = distinct !DILocation(line: 48, column: 10, scope: !9322, inlinedAt: !9326)
!9322 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9323, file: !9323, line: 46, type: !9324, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !639)
!9323 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!153}
!9326 = distinct !DILocation(line: 30, column: 7, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !9206, line: 30, column: 7)
!9328 = distinct !DILexicalBlock(scope: !9314, file: !9206, line: 29, column: 26)
!9329 = !{i64 3540073}
!9330 = !DILocation(line: 0, scope: !9318, inlinedAt: !9321)
!9331 = !DILocation(line: 48, column: 9, scope: !9322, inlinedAt: !9326)
!9332 = !DILocation(line: 30, column: 7, scope: !9328)
!9333 = !DILocation(line: 42, column: 14, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9327, file: !9206, line: 30, column: 25)
!9335 = !DILocation(line: 48, column: 15, scope: !9334)
!9336 = !DILocation(line: 49, column: 3, scope: !9334)
!9337 = !DILocation(line: 52, column: 2, scope: !9205)
!9338 = !DILocation(line: 53, column: 1, scope: !9205)
!9339 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !526, file: !526, line: 127, type: !3300, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !639)
!9340 = !DILocation(line: 134, column: 2, scope: !9339)
!9341 = !DILocation(line: 156, column: 1, scope: !9339)
!9342 = !DILocation(line: 0, scope: !525)
!9343 = !DILocation(line: 289, column: 36, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !525, file: !526, line: 285, column: 2)
!9345 = !DILocation(line: 289, column: 42, scope: !9344)
!9346 = !DILocation(line: 300, column: 36, scope: !525)
!9347 = !DILocation(line: 301, column: 35, scope: !525)
!9348 = !DILocation(line: 302, column: 37, scope: !525)
!9349 = !DILocation(line: 311, column: 2, scope: !525)
!9350 = !DILocation(line: 316, column: 1, scope: !525)
!9351 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !708, file: !708, line: 180, type: !3300, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9352 = !DILocation(line: 188, column: 12, scope: !9351)
!9353 = !DILocation(line: 271, column: 3, scope: !9354, inlinedAt: !9355)
!9354 = distinct !DISubprogram(name: "__DSB", scope: !8305, file: !8305, line: 269, type: !3300, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9355 = distinct !DILocation(line: 192, column: 2, scope: !9351)
!9356 = !{i64 3700751}
!9357 = !DILocation(line: 260, column: 3, scope: !9358, inlinedAt: !9359)
!9358 = distinct !DISubprogram(name: "__ISB", scope: !8305, file: !8305, line: 258, type: !3300, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9359 = distinct !DILocation(line: 193, column: 2, scope: !9351)
!9360 = !{i64 3700468}
!9361 = !DILocation(line: 194, column: 1, scope: !9351)
!9362 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !708, file: !708, line: 199, type: !3300, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9363 = !DILocation(line: 282, column: 3, scope: !9364, inlinedAt: !9365)
!9364 = distinct !DISubprogram(name: "__DMB", scope: !8305, file: !8305, line: 280, type: !3300, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9365 = distinct !DILocation(line: 202, column: 2, scope: !9362)
!9366 = !{i64 3701027}
!9367 = !DILocation(line: 205, column: 12, scope: !9362)
!9368 = !DILocation(line: 206, column: 1, scope: !9362)
!9369 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !708, file: !708, line: 275, type: !9370, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9383)
!9370 = !DISubroutineType(types: !9371)
!9371 = !{null, !9372, !323, !8573, !8573}
!9372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9373, size: 32)
!9373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9374)
!9374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !9375)
!9375 = !{!9376, !9377, !9378}
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9374, file: !652, line: 53, baseType: !22, size: 32)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9374, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9374, file: !652, line: 55, baseType: !9379, size: 32, offset: 64)
!9379 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !9380)
!9380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !9381)
!9381 = !{!9382}
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9380, file: !658, line: 150, baseType: !208, size: 32)
!9383 = !{!9384, !9385, !9386, !9387}
!9384 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9369, file: !708, line: 276, type: !9372)
!9385 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9369, file: !708, line: 276, type: !323)
!9386 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9369, file: !708, line: 277, type: !8573)
!9387 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9369, file: !708, line: 277, type: !8573)
!9388 = !DILocation(line: 0, scope: !9369)
!9389 = !DILocation(line: 279, column: 6, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9369, file: !708, line: 279, column: 6)
!9391 = !DILocation(line: 285, column: 1, scope: !9369)
!9392 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9393, file: !9393, line: 220, type: !9394, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9396)
!9393 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9394 = !DISubroutineType(types: !9395)
!9395 = !{!125, !9372, !323, !8573, !8573}
!9396 = !{!9397, !9398, !9399, !9400, !9401}
!9397 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9392, file: !9393, line: 221, type: !9372)
!9398 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9392, file: !9393, line: 221, type: !323)
!9399 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9392, file: !9393, line: 222, type: !8573)
!9400 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9392, file: !9393, line: 223, type: !8573)
!9401 = !DILocalVariable(name: "mpu_reg_index", scope: !9392, file: !9393, line: 225, type: !125)
!9402 = !DILocation(line: 0, scope: !9392)
!9403 = !DILocation(line: 225, column: 22, scope: !9392)
!9404 = !DILocation(line: 233, column: 18, scope: !9392)
!9405 = !DILocation(line: 236, column: 23, scope: !9392)
!9406 = !DILocation(line: 236, column: 21, scope: !9392)
!9407 = !DILocation(line: 238, column: 2, scope: !9392)
!9408 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !708, file: !708, line: 105, type: !9409, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9411)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!125, !9372, !150, !150, !153}
!9411 = !{!9412, !9413, !9414, !9415, !9416, !9417}
!9412 = !DILocalVariable(name: "regions", arg: 1, scope: !9408, file: !708, line: 106, type: !9372)
!9413 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9408, file: !708, line: 106, type: !150)
!9414 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9408, file: !708, line: 106, type: !150)
!9415 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9408, file: !708, line: 107, type: !153)
!9416 = !DILocalVariable(name: "i", scope: !9408, file: !708, line: 109, type: !125)
!9417 = !DILocalVariable(name: "reg_index", scope: !9408, file: !708, line: 110, type: !125)
!9418 = !DILocation(line: 0, scope: !9408)
!9419 = !DILocation(line: 110, column: 18, scope: !9408)
!9420 = !DILocation(line: 112, column: 16, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !708, line: 112, column: 2)
!9422 = distinct !DILexicalBlock(scope: !9408, file: !708, line: 112, column: 2)
!9423 = !DILocation(line: 112, column: 2, scope: !9422)
!9424 = !DILocation(line: 113, column: 7, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9426, file: !708, line: 113, column: 7)
!9426 = distinct !DILexicalBlock(scope: !9421, file: !708, line: 112, column: 36)
!9427 = !DILocation(line: 113, column: 18, scope: !9425)
!9428 = !DILocation(line: 113, column: 23, scope: !9425)
!9429 = !DILocation(line: 113, column: 7, scope: !9426)
!9430 = !DILocation(line: 118, column: 23, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9426, file: !708, line: 118, column: 7)
!9432 = !DILocation(line: 119, column: 7, scope: !9431)
!9433 = !DILocation(line: 118, column: 7, scope: !9426)
!9434 = !DILocation(line: 120, column: 4, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !708, line: 120, column: 4)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !708, line: 120, column: 4)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !708, line: 120, column: 4)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !708, line: 120, column: 4)
!9439 = distinct !DILexicalBlock(scope: !9431, file: !708, line: 119, column: 45)
!9440 = !DILocation(line: 121, column: 4, scope: !9439)
!9441 = !DILocation(line: 124, column: 36, scope: !9426)
!9442 = !DILocation(line: 124, column: 15, scope: !9426)
!9443 = !DILocation(line: 126, column: 17, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9426, file: !708, line: 126, column: 7)
!9445 = !DILocation(line: 126, column: 7, scope: !9426)
!9446 = !DILocation(line: 131, column: 12, scope: !9426)
!9447 = !DILocation(line: 132, column: 2, scope: !9426)
!9448 = !DILocation(line: 112, column: 32, scope: !9421)
!9449 = distinct !{!9449, !9423, !9450}
!9450 = !DILocation(line: 132, column: 2, scope: !9422)
!9451 = !DILocation(line: 135, column: 1, scope: !9408)
!9452 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9393, file: !9393, line: 63, type: !9453, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9455)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!125, !9372}
!9455 = !{!9456, !9457}
!9456 = !DILocalVariable(name: "part", arg: 1, scope: !9452, file: !9393, line: 63, type: !9372)
!9457 = !DILocalVariable(name: "partition_is_valid", scope: !9452, file: !9393, line: 70, type: !125)
!9458 = !DILocation(line: 0, scope: !9452)
!9459 = !DILocation(line: 71, column: 11, scope: !9452)
!9460 = !DILocation(line: 71, column: 37, scope: !9452)
!9461 = !{i32 0, i32 33}
!9462 = !DILocation(line: 72, column: 3, scope: !9452)
!9463 = !DILocation(line: 71, column: 30, scope: !9452)
!9464 = !DILocation(line: 75, column: 11, scope: !9452)
!9465 = !DILocation(line: 75, column: 17, scope: !9452)
!9466 = !DILocation(line: 75, column: 38, scope: !9452)
!9467 = !DILocation(line: 77, column: 2, scope: !9452)
!9468 = distinct !DISubprogram(name: "mpu_configure_region", scope: !708, file: !708, line: 79, type: !9469, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9471)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!125, !323, !9372}
!9471 = !{!9472, !9473, !9474}
!9472 = !DILocalVariable(name: "index", arg: 1, scope: !9468, file: !708, line: 79, type: !323)
!9473 = !DILocalVariable(name: "new_region", arg: 2, scope: !9468, file: !708, line: 80, type: !9372)
!9474 = !DILocalVariable(name: "region_conf", scope: !9468, file: !708, line: 82, type: !697)
!9475 = !DILocation(line: 0, scope: !9468)
!9476 = !DILocation(line: 82, column: 2, scope: !9468)
!9477 = !DILocation(line: 82, column: 24, scope: !9468)
!9478 = !DILocation(line: 87, column: 33, scope: !9468)
!9479 = !DILocation(line: 87, column: 14, scope: !9468)
!9480 = !DILocation(line: 87, column: 19, scope: !9468)
!9481 = !DILocation(line: 91, column: 55, scope: !9468)
!9482 = !DILocation(line: 92, column: 16, scope: !9468)
!9483 = !DILocation(line: 92, column: 53, scope: !9468)
!9484 = !DILocation(line: 91, column: 2, scope: !9468)
!9485 = !DILocation(line: 95, column: 9, scope: !9468)
!9486 = !DILocation(line: 97, column: 1, scope: !9468)
!9487 = !DILocation(line: 95, column: 2, scope: !9468)
!9488 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9393, file: !9393, line: 113, type: !9489, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9494)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{null, !9491, !9492, !208, !208}
!9491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!9492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9493, size: 32)
!9493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9379)
!9494 = !{!9495, !9496, !9497, !9498}
!9495 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9488, file: !9393, line: 114, type: !9491)
!9496 = !DILocalVariable(name: "attr", arg: 2, scope: !9488, file: !9393, line: 115, type: !9492)
!9497 = !DILocalVariable(name: "base", arg: 3, scope: !9488, file: !9393, line: 115, type: !208)
!9498 = !DILocalVariable(name: "size", arg: 4, scope: !9488, file: !9393, line: 115, type: !208)
!9499 = !DILocation(line: 0, scope: !9488)
!9500 = !DILocation(line: 127, column: 23, scope: !9488)
!9501 = !DILocation(line: 127, column: 35, scope: !9488)
!9502 = !DILocation(line: 127, column: 33, scope: !9488)
!9503 = !DILocation(line: 127, column: 10, scope: !9488)
!9504 = !DILocation(line: 127, column: 15, scope: !9488)
!9505 = !DILocation(line: 129, column: 1, scope: !9488)
!9506 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !708, file: !708, line: 57, type: !9507, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9509)
!9507 = !DISubroutineType(types: !9508)
!9508 = !{!125, !323, !695}
!9509 = !{!9510, !9511}
!9510 = !DILocalVariable(name: "index", arg: 1, scope: !9506, file: !708, line: 57, type: !323)
!9511 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9506, file: !708, line: 58, type: !695)
!9512 = !DILocation(line: 0, scope: !9506)
!9513 = !DILocation(line: 61, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9506, file: !708, line: 61, column: 6)
!9515 = !DILocation(line: 61, column: 12, scope: !9514)
!9516 = !DILocation(line: 61, column: 6, scope: !9506)
!9517 = !DILocation(line: 64, column: 3, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !708, line: 64, column: 3)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !708, line: 64, column: 3)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !708, line: 64, column: 3)
!9521 = distinct !DILexicalBlock(scope: !9522, file: !708, line: 64, column: 3)
!9522 = distinct !DILexicalBlock(scope: !9514, file: !708, line: 61, column: 40)
!9523 = !DILocation(line: 65, column: 3, scope: !9522)
!9524 = !DILocation(line: 71, column: 2, scope: !9506)
!9525 = !DILocation(line: 73, column: 2, scope: !9506)
!9526 = !DILocation(line: 74, column: 1, scope: !9506)
!9527 = distinct !DISubprogram(name: "region_init", scope: !9393, file: !9393, line: 29, type: !9528, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9530)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{null, !8573, !695}
!9530 = !{!9531, !9532}
!9531 = !DILocalVariable(name: "index", arg: 1, scope: !9527, file: !9393, line: 29, type: !8573)
!9532 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9527, file: !9393, line: 30, type: !695)
!9533 = !DILocation(line: 0, scope: !9527)
!9534 = !DILocation(line: 33, column: 2, scope: !9527)
!9535 = !DILocation(line: 47, column: 28, scope: !9527)
!9536 = !DILocation(line: 47, column: 33, scope: !9527)
!9537 = !DILocation(line: 48, column: 26, scope: !9527)
!9538 = !DILocation(line: 47, column: 12, scope: !9527)
!9539 = !DILocation(line: 49, column: 32, scope: !9527)
!9540 = !DILocation(line: 49, column: 37, scope: !9527)
!9541 = !DILocation(line: 49, column: 12, scope: !9527)
!9542 = !DILocation(line: 53, column: 1, scope: !9527)
!9543 = distinct !DISubprogram(name: "set_region_number", scope: !9544, file: !9544, line: 32, type: !8396, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9545)
!9544 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9545 = !{!9546}
!9546 = !DILocalVariable(name: "index", arg: 1, scope: !9543, file: !9544, line: 32, type: !208)
!9547 = !DILocation(line: 0, scope: !9543)
!9548 = !DILocation(line: 34, column: 11, scope: !9543)
!9549 = !DILocation(line: 35, column: 1, scope: !9543)
!9550 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9393, file: !9393, line: 88, type: !9551, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9553)
!9551 = !DISubroutineType(types: !9552)
!9552 = !{!208, !208}
!9553 = !{!9554}
!9554 = !DILocalVariable(name: "size", arg: 1, scope: !9550, file: !9393, line: 88, type: !208)
!9555 = !DILocation(line: 0, scope: !9550)
!9556 = !DILocation(line: 91, column: 11, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9550, file: !9393, line: 91, column: 6)
!9558 = !DILocation(line: 91, column: 6, scope: !9550)
!9559 = !DILocation(line: 100, column: 11, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9550, file: !9393, line: 100, column: 6)
!9561 = !DILocation(line: 100, column: 6, scope: !9550)
!9562 = !DILocation(line: 104, column: 35, scope: !9550)
!9563 = !DILocation(line: 104, column: 16, scope: !9550)
!9564 = !DILocation(line: 104, column: 50, scope: !9550)
!9565 = !DILocation(line: 104, column: 72, scope: !9550)
!9566 = !DILocation(line: 104, column: 2, scope: !9550)
!9567 = !DILocation(line: 106, column: 1, scope: !9550)
!9568 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !708, file: !708, line: 307, type: !9569, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9571)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{null, !9372, !150}
!9571 = !{!9572, !9573}
!9572 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9568, file: !708, line: 308, type: !9372)
!9573 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9568, file: !708, line: 308, type: !150)
!9574 = !DILocation(line: 0, scope: !9568)
!9575 = !DILocation(line: 310, column: 6, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9568, file: !708, line: 310, column: 6)
!9577 = !DILocation(line: 316, column: 1, scope: !9568)
!9578 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9393, file: !9393, line: 249, type: !9579, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9581)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{!125, !9372, !150}
!9581 = !{!9582, !9583, !9584, !9585}
!9582 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9578, file: !9393, line: 250, type: !9372)
!9583 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9578, file: !9393, line: 250, type: !150)
!9584 = !DILocalVariable(name: "mpu_reg_index", scope: !9578, file: !9393, line: 252, type: !125)
!9585 = !DILocalVariable(name: "i", scope: !9586, file: !9393, line: 264, type: !125)
!9586 = distinct !DILexicalBlock(scope: !9587, file: !9393, line: 264, column: 3)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !9393, line: 261, column: 32)
!9588 = distinct !DILexicalBlock(scope: !9578, file: !9393, line: 261, column: 6)
!9589 = !DILocation(line: 0, scope: !9578)
!9590 = !DILocation(line: 252, column: 22, scope: !9578)
!9591 = !DILocation(line: 258, column: 18, scope: !9578)
!9592 = !DILocation(line: 261, column: 20, scope: !9588)
!9593 = !DILocation(line: 261, column: 6, scope: !9578)
!9594 = !DILocation(line: 0, scope: !9586)
!9595 = !DILocation(line: 265, column: 4, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9597, file: !9393, line: 264, column: 59)
!9597 = distinct !DILexicalBlock(scope: !9586, file: !9393, line: 264, column: 3)
!9598 = !DILocation(line: 264, column: 55, scope: !9597)
!9599 = !DILocation(line: 264, column: 33, scope: !9597)
!9600 = !DILocation(line: 264, column: 3, scope: !9586)
!9601 = distinct !{!9601, !9600, !9602}
!9602 = !DILocation(line: 266, column: 3, scope: !9586)
!9603 = !DILocation(line: 269, column: 2, scope: !9578)
!9604 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9605, file: !9605, line: 218, type: !8396, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9606)
!9605 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9606 = !{!9607}
!9607 = !DILocalVariable(name: "rnr", arg: 1, scope: !9604, file: !9605, line: 218, type: !208)
!9608 = !DILocation(line: 0, scope: !9604)
!9609 = !DILocation(line: 220, column: 12, scope: !9604)
!9610 = !DILocation(line: 221, column: 13, scope: !9604)
!9611 = !DILocation(line: 222, column: 1, scope: !9604)
!9612 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !708, file: !708, line: 326, type: !9613, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9615)
!9613 = !DISubroutineType(types: !9614)
!9614 = !{!125}
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "r_index", scope: !9612, file: !708, line: 328, type: !208)
!9617 = !DILocation(line: 330, column: 17, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9612, file: !708, line: 330, column: 6)
!9619 = !DILocation(line: 330, column: 29, scope: !9618)
!9620 = !DILocation(line: 330, column: 6, scope: !9612)
!9621 = !DILocation(line: 347, column: 2, scope: !9612)
!9622 = !DILocation(line: 0, scope: !9612)
!9623 = !DILocation(line: 364, column: 29, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !708, line: 364, column: 2)
!9625 = distinct !DILexicalBlock(scope: !9612, file: !708, line: 364, column: 2)
!9626 = !DILocation(line: 364, column: 2, scope: !9625)
!9627 = !DILocation(line: 365, column: 25, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9624, file: !708, line: 364, column: 66)
!9629 = !DILocation(line: 365, column: 3, scope: !9628)
!9630 = !DILocation(line: 364, column: 62, scope: !9624)
!9631 = distinct !{!9631, !9626, !9632}
!9632 = !DILocation(line: 366, column: 2, scope: !9625)
!9633 = !DILocation(line: 369, column: 23, scope: !9612)
!9634 = !DILocation(line: 369, column: 21, scope: !9612)
!9635 = !DILocation(line: 372, column: 2, scope: !9612)
!9636 = !DILocation(line: 443, column: 2, scope: !9612)
!9637 = !DILocation(line: 444, column: 1, scope: !9612)
!9638 = distinct !DISubprogram(name: "strcpy", scope: !9639, file: !9639, line: 20, type: !9640, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9644)
!9639 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9640 = !DISubroutineType(types: !9641)
!9641 = !{!393, !9642, !9643}
!9642 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9643 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9644 = !{!9645, !9646, !9647}
!9645 = !DILocalVariable(name: "d", arg: 1, scope: !9638, file: !9639, line: 20, type: !9642)
!9646 = !DILocalVariable(name: "s", arg: 2, scope: !9638, file: !9639, line: 20, type: !9643)
!9647 = !DILocalVariable(name: "dest", scope: !9638, file: !9639, line: 22, type: !393)
!9648 = !DILocation(line: 0, scope: !9638)
!9649 = !DILocation(line: 24, column: 9, scope: !9638)
!9650 = !DILocation(line: 24, column: 12, scope: !9638)
!9651 = !DILocation(line: 24, column: 2, scope: !9638)
!9652 = !DILocation(line: 25, column: 6, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9638, file: !9639, line: 24, column: 21)
!9654 = !DILocation(line: 26, column: 4, scope: !9653)
!9655 = !DILocation(line: 27, column: 4, scope: !9653)
!9656 = distinct !{!9656, !9651, !9657}
!9657 = !DILocation(line: 28, column: 2, scope: !9638)
!9658 = !DILocation(line: 30, column: 5, scope: !9638)
!9659 = !DILocation(line: 32, column: 2, scope: !9638)
!9660 = distinct !DISubprogram(name: "strncpy", scope: !9639, file: !9639, line: 42, type: !9661, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9663)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{!393, !9642, !9643, !272}
!9663 = !{!9664, !9665, !9666, !9667}
!9664 = !DILocalVariable(name: "d", arg: 1, scope: !9660, file: !9639, line: 42, type: !9642)
!9665 = !DILocalVariable(name: "s", arg: 2, scope: !9660, file: !9639, line: 42, type: !9643)
!9666 = !DILocalVariable(name: "n", arg: 3, scope: !9660, file: !9639, line: 42, type: !272)
!9667 = !DILocalVariable(name: "dest", scope: !9660, file: !9639, line: 44, type: !393)
!9668 = !DILocation(line: 0, scope: !9660)
!9669 = !DILocation(line: 46, column: 12, scope: !9660)
!9670 = !DILocation(line: 46, column: 17, scope: !9660)
!9671 = !DILocation(line: 46, column: 20, scope: !9660)
!9672 = !DILocation(line: 46, column: 23, scope: !9660)
!9673 = !DILocation(line: 46, column: 2, scope: !9660)
!9674 = !DILocation(line: 47, column: 6, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9660, file: !9639, line: 46, column: 32)
!9676 = !DILocation(line: 48, column: 4, scope: !9675)
!9677 = !DILocation(line: 49, column: 4, scope: !9675)
!9678 = !DILocation(line: 50, column: 4, scope: !9675)
!9679 = distinct !{!9679, !9673, !9680}
!9680 = !DILocation(line: 51, column: 2, scope: !9660)
!9681 = !DILocation(line: 54, column: 6, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9660, file: !9639, line: 53, column: 16)
!9683 = !DILocation(line: 55, column: 4, scope: !9682)
!9684 = !DILocation(line: 56, column: 4, scope: !9682)
!9685 = !DILocation(line: 53, column: 11, scope: !9660)
!9686 = !DILocation(line: 53, column: 2, scope: !9660)
!9687 = distinct !{!9687, !9686, !9688}
!9688 = !DILocation(line: 57, column: 2, scope: !9660)
!9689 = !DILocation(line: 59, column: 2, scope: !9660)
!9690 = distinct !DISubprogram(name: "strchr", scope: !9639, file: !9639, line: 69, type: !9691, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9693)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{!393, !140, !125}
!9693 = !{!9694, !9695, !9696}
!9694 = !DILocalVariable(name: "s", arg: 1, scope: !9690, file: !9639, line: 69, type: !140)
!9695 = !DILocalVariable(name: "c", arg: 2, scope: !9690, file: !9639, line: 69, type: !125)
!9696 = !DILocalVariable(name: "tmp", scope: !9690, file: !9639, line: 71, type: !142)
!9697 = !DILocation(line: 0, scope: !9690)
!9698 = !DILocation(line: 73, column: 2, scope: !9690)
!9699 = !DILocation(line: 73, column: 10, scope: !9690)
!9700 = !DILocation(line: 73, column: 13, scope: !9690)
!9701 = !DILocation(line: 73, column: 21, scope: !9690)
!9702 = !DILocation(line: 74, column: 4, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9690, file: !9639, line: 73, column: 38)
!9704 = distinct !{!9704, !9698, !9705}
!9705 = !DILocation(line: 75, column: 2, scope: !9690)
!9706 = !DILocation(line: 77, column: 9, scope: !9690)
!9707 = !DILocation(line: 77, column: 2, scope: !9690)
!9708 = distinct !DISubprogram(name: "strrchr", scope: !9639, file: !9639, line: 87, type: !9691, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9709)
!9709 = !{!9710, !9711, !9712}
!9710 = !DILocalVariable(name: "s", arg: 1, scope: !9708, file: !9639, line: 87, type: !140)
!9711 = !DILocalVariable(name: "c", arg: 2, scope: !9708, file: !9639, line: 87, type: !125)
!9712 = !DILocalVariable(name: "match", scope: !9708, file: !9639, line: 89, type: !393)
!9713 = !DILocation(line: 0, scope: !9708)
!9714 = !DILocation(line: 91, column: 2, scope: !9708)
!9715 = !DILocation(line: 92, column: 7, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !9639, line: 92, column: 7)
!9717 = distinct !DILexicalBlock(scope: !9708, file: !9639, line: 91, column: 5)
!9718 = !DILocation(line: 92, column: 10, scope: !9716)
!9719 = !DILocation(line: 92, column: 7, scope: !9717)
!9720 = !DILocation(line: 95, column: 13, scope: !9708)
!9721 = !DILocation(line: 95, column: 2, scope: !9717)
!9722 = distinct !{!9722, !9714, !9723}
!9723 = !DILocation(line: 95, column: 15, scope: !9708)
!9724 = !DILocation(line: 97, column: 2, scope: !9708)
!9725 = distinct !DISubprogram(name: "strlen", scope: !9639, file: !9639, line: 107, type: !9726, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9728)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!272, !140}
!9728 = !{!9729, !9730}
!9729 = !DILocalVariable(name: "s", arg: 1, scope: !9725, file: !9639, line: 107, type: !140)
!9730 = !DILocalVariable(name: "n", scope: !9725, file: !9639, line: 109, type: !272)
!9731 = !DILocation(line: 0, scope: !9725)
!9732 = !DILocation(line: 111, column: 9, scope: !9725)
!9733 = !DILocation(line: 111, column: 12, scope: !9725)
!9734 = !DILocation(line: 111, column: 2, scope: !9725)
!9735 = !DILocation(line: 112, column: 4, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9725, file: !9639, line: 111, column: 21)
!9737 = !DILocation(line: 113, column: 4, scope: !9736)
!9738 = distinct !{!9738, !9734, !9739}
!9739 = !DILocation(line: 114, column: 2, scope: !9725)
!9740 = !DILocation(line: 116, column: 2, scope: !9725)
!9741 = distinct !DISubprogram(name: "strnlen", scope: !9639, file: !9639, line: 126, type: !9742, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!272, !140, !272}
!9744 = !{!9745, !9746, !9747}
!9745 = !DILocalVariable(name: "s", arg: 1, scope: !9741, file: !9639, line: 126, type: !140)
!9746 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9741, file: !9639, line: 126, type: !272)
!9747 = !DILocalVariable(name: "n", scope: !9741, file: !9639, line: 128, type: !272)
!9748 = !DILocation(line: 0, scope: !9741)
!9749 = !DILocation(line: 130, column: 9, scope: !9741)
!9750 = !DILocation(line: 130, column: 12, scope: !9741)
!9751 = !DILocation(line: 130, column: 20, scope: !9741)
!9752 = !DILocation(line: 130, column: 2, scope: !9741)
!9753 = !DILocation(line: 131, column: 4, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9741, file: !9639, line: 130, column: 35)
!9755 = !DILocation(line: 132, column: 4, scope: !9754)
!9756 = distinct !{!9756, !9752, !9757}
!9757 = !DILocation(line: 133, column: 2, scope: !9741)
!9758 = !DILocation(line: 135, column: 2, scope: !9741)
!9759 = distinct !DISubprogram(name: "strcmp", scope: !9639, file: !9639, line: 145, type: !9760, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9762)
!9760 = !DISubroutineType(types: !9761)
!9761 = !{!125, !140, !140}
!9762 = !{!9763, !9764}
!9763 = !DILocalVariable(name: "s1", arg: 1, scope: !9759, file: !9639, line: 145, type: !140)
!9764 = !DILocalVariable(name: "s2", arg: 2, scope: !9759, file: !9639, line: 145, type: !140)
!9765 = !DILocation(line: 0, scope: !9759)
!9766 = !DILocation(line: 147, column: 10, scope: !9759)
!9767 = !DILocation(line: 147, column: 17, scope: !9759)
!9768 = !DILocation(line: 147, column: 14, scope: !9759)
!9769 = !DILocation(line: 147, column: 22, scope: !9759)
!9770 = !DILocation(line: 148, column: 5, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9759, file: !9639, line: 147, column: 40)
!9772 = !DILocation(line: 149, column: 5, scope: !9771)
!9773 = distinct !{!9773, !9774, !9775}
!9774 = !DILocation(line: 147, column: 2, scope: !9759)
!9775 = !DILocation(line: 150, column: 2, scope: !9759)
!9776 = !DILocation(line: 152, column: 9, scope: !9759)
!9777 = !DILocation(line: 152, column: 15, scope: !9759)
!9778 = !DILocation(line: 152, column: 13, scope: !9759)
!9779 = !DILocation(line: 152, column: 2, scope: !9759)
!9780 = distinct !DISubprogram(name: "strncmp", scope: !9639, file: !9639, line: 162, type: !9781, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9783)
!9781 = !DISubroutineType(types: !9782)
!9782 = !{!125, !140, !140, !272}
!9783 = !{!9784, !9785, !9786}
!9784 = !DILocalVariable(name: "s1", arg: 1, scope: !9780, file: !9639, line: 162, type: !140)
!9785 = !DILocalVariable(name: "s2", arg: 2, scope: !9780, file: !9639, line: 162, type: !140)
!9786 = !DILocalVariable(name: "n", arg: 3, scope: !9780, file: !9639, line: 162, type: !272)
!9787 = !DILocation(line: 0, scope: !9780)
!9788 = !DILocation(line: 164, column: 17, scope: !9780)
!9789 = !DILocation(line: 164, column: 21, scope: !9780)
!9790 = !DILocation(line: 164, column: 28, scope: !9780)
!9791 = !DILocation(line: 164, column: 25, scope: !9780)
!9792 = !DILocation(line: 164, column: 33, scope: !9780)
!9793 = !DILocation(line: 165, column: 5, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9780, file: !9639, line: 164, column: 51)
!9795 = !DILocation(line: 166, column: 5, scope: !9794)
!9796 = !DILocation(line: 167, column: 4, scope: !9794)
!9797 = distinct !{!9797, !9798, !9799}
!9798 = !DILocation(line: 164, column: 2, scope: !9780)
!9799 = !DILocation(line: 168, column: 2, scope: !9780)
!9800 = !DILocation(line: 170, column: 25, scope: !9780)
!9801 = !DILocation(line: 170, column: 31, scope: !9780)
!9802 = !DILocation(line: 170, column: 29, scope: !9780)
!9803 = !DILocation(line: 170, column: 9, scope: !9780)
!9804 = !DILocation(line: 170, column: 2, scope: !9780)
!9805 = distinct !DISubprogram(name: "strtok_r", scope: !9639, file: !9639, line: 180, type: !9806, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9808)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!393, !393, !140, !392}
!9808 = !{!9809, !9810, !9811, !9812, !9813}
!9809 = !DILocalVariable(name: "str", arg: 1, scope: !9805, file: !9639, line: 180, type: !393)
!9810 = !DILocalVariable(name: "sep", arg: 2, scope: !9805, file: !9639, line: 180, type: !140)
!9811 = !DILocalVariable(name: "state", arg: 3, scope: !9805, file: !9639, line: 180, type: !392)
!9812 = !DILocalVariable(name: "start", scope: !9805, file: !9639, line: 182, type: !393)
!9813 = !DILocalVariable(name: "end", scope: !9805, file: !9639, line: 182, type: !393)
!9814 = !DILocation(line: 0, scope: !9805)
!9815 = !DILocation(line: 184, column: 10, scope: !9805)
!9816 = !DILocation(line: 184, column: 22, scope: !9805)
!9817 = !DILocation(line: 187, column: 9, scope: !9805)
!9818 = !DILocation(line: 187, column: 16, scope: !9805)
!9819 = !DILocation(line: 187, column: 19, scope: !9805)
!9820 = !DILocation(line: 187, column: 2, scope: !9805)
!9821 = !DILocation(line: 188, column: 8, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9805, file: !9639, line: 187, column: 40)
!9823 = distinct !{!9823, !9820, !9824}
!9824 = !DILocation(line: 189, column: 2, scope: !9805)
!9825 = !DILocation(line: 198, column: 9, scope: !9805)
!9826 = !DILocation(line: 198, column: 18, scope: !9805)
!9827 = !DILocation(line: 198, column: 17, scope: !9805)
!9828 = !DILocation(line: 198, column: 2, scope: !9805)
!9829 = !DILocation(line: 199, column: 6, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9805, file: !9639, line: 198, column: 37)
!9831 = !DILocation(line: 198, column: 14, scope: !9805)
!9832 = distinct !{!9832, !9828, !9833}
!9833 = !DILocation(line: 200, column: 2, scope: !9805)
!9834 = !DILocation(line: 203, column: 8, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !9639, line: 202, column: 20)
!9836 = distinct !DILexicalBlock(scope: !9805, file: !9639, line: 202, column: 6)
!9837 = !DILocation(line: 204, column: 16, scope: !9835)
!9838 = !DILocation(line: 205, column: 2, scope: !9835)
!9839 = !DILocation(line: 210, column: 1, scope: !9805)
!9840 = distinct !DISubprogram(name: "strcat", scope: !9639, file: !9639, line: 212, type: !9640, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9841)
!9841 = !{!9842, !9843}
!9842 = !DILocalVariable(name: "dest", arg: 1, scope: !9840, file: !9639, line: 212, type: !9642)
!9843 = !DILocalVariable(name: "src", arg: 2, scope: !9840, file: !9639, line: 212, type: !9643)
!9844 = !DILocation(line: 0, scope: !9840)
!9845 = !DILocation(line: 214, column: 16, scope: !9840)
!9846 = !DILocation(line: 214, column: 14, scope: !9840)
!9847 = !DILocation(line: 214, column: 2, scope: !9840)
!9848 = !DILocation(line: 215, column: 2, scope: !9840)
!9849 = distinct !DISubprogram(name: "strncat", scope: !9639, file: !9639, line: 218, type: !9661, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9850)
!9850 = !{!9851, !9852, !9853, !9854, !9855}
!9851 = !DILocalVariable(name: "dest", arg: 1, scope: !9849, file: !9639, line: 218, type: !9642)
!9852 = !DILocalVariable(name: "src", arg: 2, scope: !9849, file: !9639, line: 218, type: !9643)
!9853 = !DILocalVariable(name: "n", arg: 3, scope: !9849, file: !9639, line: 219, type: !272)
!9854 = !DILocalVariable(name: "orig_dest", scope: !9849, file: !9639, line: 221, type: !393)
!9855 = !DILocalVariable(name: "len", scope: !9849, file: !9639, line: 222, type: !272)
!9856 = !DILocation(line: 0, scope: !9849)
!9857 = !DILocation(line: 222, column: 15, scope: !9849)
!9858 = !DILocation(line: 224, column: 7, scope: !9849)
!9859 = !DILocation(line: 225, column: 14, scope: !9849)
!9860 = !DILocation(line: 225, column: 19, scope: !9849)
!9861 = !DILocation(line: 225, column: 11, scope: !9849)
!9862 = !DILocation(line: 225, column: 23, scope: !9849)
!9863 = !DILocation(line: 225, column: 28, scope: !9849)
!9864 = !DILocation(line: 225, column: 2, scope: !9849)
!9865 = !DILocation(line: 226, column: 17, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9849, file: !9639, line: 225, column: 38)
!9867 = !DILocation(line: 226, column: 8, scope: !9866)
!9868 = !DILocation(line: 226, column: 11, scope: !9866)
!9869 = distinct !{!9869, !9864, !9870}
!9870 = !DILocation(line: 227, column: 2, scope: !9849)
!9871 = !DILocation(line: 228, column: 8, scope: !9849)
!9872 = !DILocation(line: 230, column: 2, scope: !9849)
!9873 = distinct !DISubprogram(name: "memcmp", scope: !9639, file: !9639, line: 239, type: !9874, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9876)
!9874 = !DISubroutineType(types: !9875)
!9875 = !{!125, !13, !13, !272}
!9876 = !{!9877, !9878, !9879, !9880, !9881}
!9877 = !DILocalVariable(name: "m1", arg: 1, scope: !9873, file: !9639, line: 239, type: !13)
!9878 = !DILocalVariable(name: "m2", arg: 2, scope: !9873, file: !9639, line: 239, type: !13)
!9879 = !DILocalVariable(name: "n", arg: 3, scope: !9873, file: !9639, line: 239, type: !272)
!9880 = !DILocalVariable(name: "c1", scope: !9873, file: !9639, line: 241, type: !140)
!9881 = !DILocalVariable(name: "c2", scope: !9873, file: !9639, line: 242, type: !140)
!9882 = !DILocation(line: 0, scope: !9873)
!9883 = !DILocation(line: 244, column: 7, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9873, file: !9639, line: 244, column: 6)
!9885 = !DILocation(line: 244, column: 6, scope: !9873)
!9886 = !DILocation(line: 248, column: 10, scope: !9873)
!9887 = !DILocation(line: 248, column: 14, scope: !9873)
!9888 = !DILocation(line: 248, column: 19, scope: !9873)
!9889 = !DILocation(line: 248, column: 2, scope: !9873)
!9890 = !DILocation(line: 248, column: 23, scope: !9873)
!9891 = !DILocation(line: 248, column: 30, scope: !9873)
!9892 = !DILocation(line: 248, column: 27, scope: !9873)
!9893 = !DILocation(line: 249, column: 5, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9873, file: !9639, line: 248, column: 36)
!9895 = !DILocation(line: 250, column: 5, scope: !9894)
!9896 = distinct !{!9896, !9889, !9897}
!9897 = !DILocation(line: 251, column: 2, scope: !9873)
!9898 = !DILocation(line: 253, column: 9, scope: !9873)
!9899 = !DILocation(line: 253, column: 15, scope: !9873)
!9900 = !DILocation(line: 253, column: 13, scope: !9873)
!9901 = !DILocation(line: 253, column: 2, scope: !9873)
!9902 = !DILocation(line: 254, column: 1, scope: !9873)
!9903 = distinct !DISubprogram(name: "memmove", scope: !9639, file: !9639, line: 263, type: !9904, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9906)
!9904 = !DISubroutineType(types: !9905)
!9905 = !{!124, !124, !13, !272}
!9906 = !{!9907, !9908, !9909, !9910, !9911}
!9907 = !DILocalVariable(name: "d", arg: 1, scope: !9903, file: !9639, line: 263, type: !124)
!9908 = !DILocalVariable(name: "s", arg: 2, scope: !9903, file: !9639, line: 263, type: !13)
!9909 = !DILocalVariable(name: "n", arg: 3, scope: !9903, file: !9639, line: 263, type: !272)
!9910 = !DILocalVariable(name: "dest", scope: !9903, file: !9639, line: 265, type: !393)
!9911 = !DILocalVariable(name: "src", scope: !9903, file: !9639, line: 266, type: !140)
!9912 = !DILocation(line: 0, scope: !9903)
!9913 = !DILocation(line: 268, column: 21, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9903, file: !9639, line: 268, column: 6)
!9915 = !DILocation(line: 268, column: 28, scope: !9914)
!9916 = !DILocation(line: 268, column: 6, scope: !9903)
!9917 = !DILocation(line: 280, column: 12, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9914, file: !9639, line: 278, column: 9)
!9919 = !DILocation(line: 280, column: 3, scope: !9918)
!9920 = !DILocation(line: 275, column: 5, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !9639, line: 274, column: 17)
!9922 = distinct !DILexicalBlock(scope: !9914, file: !9639, line: 268, column: 33)
!9923 = !DILocation(line: 276, column: 14, scope: !9921)
!9924 = !DILocation(line: 276, column: 4, scope: !9921)
!9925 = !DILocation(line: 276, column: 12, scope: !9921)
!9926 = !DILocation(line: 274, column: 12, scope: !9922)
!9927 = !DILocation(line: 274, column: 3, scope: !9922)
!9928 = distinct !{!9928, !9927, !9929}
!9929 = !DILocation(line: 277, column: 3, scope: !9922)
!9930 = !DILocation(line: 281, column: 12, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9918, file: !9639, line: 280, column: 17)
!9932 = !DILocation(line: 281, column: 10, scope: !9931)
!9933 = !DILocation(line: 282, column: 8, scope: !9931)
!9934 = !DILocation(line: 283, column: 7, scope: !9931)
!9935 = !DILocation(line: 284, column: 5, scope: !9931)
!9936 = distinct !{!9936, !9919, !9937}
!9937 = !DILocation(line: 285, column: 3, scope: !9918)
!9938 = !DILocation(line: 288, column: 2, scope: !9903)
!9939 = distinct !DISubprogram(name: "memcpy", scope: !9639, file: !9639, line: 298, type: !9940, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9944)
!9940 = !DISubroutineType(types: !9941)
!9941 = !{!124, !9942, !9943, !272}
!9942 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!9943 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9944 = !{!9945, !9946, !9947, !9948, !9949}
!9945 = !DILocalVariable(name: "d", arg: 1, scope: !9939, file: !9639, line: 298, type: !9942)
!9946 = !DILocalVariable(name: "s", arg: 2, scope: !9939, file: !9639, line: 298, type: !9943)
!9947 = !DILocalVariable(name: "n", arg: 3, scope: !9939, file: !9639, line: 298, type: !272)
!9948 = !DILocalVariable(name: "d_byte", scope: !9939, file: !9639, line: 302, type: !1132)
!9949 = !DILocalVariable(name: "s_byte", scope: !9939, file: !9639, line: 303, type: !3072)
!9950 = !DILocation(line: 0, scope: !9939)
!9951 = !DILocation(line: 337, column: 11, scope: !9939)
!9952 = !DILocation(line: 337, column: 2, scope: !9939)
!9953 = !DILocation(line: 338, column: 25, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9939, file: !9639, line: 337, column: 16)
!9955 = !DILocation(line: 338, column: 17, scope: !9954)
!9956 = !DILocation(line: 338, column: 11, scope: !9954)
!9957 = !DILocation(line: 338, column: 15, scope: !9954)
!9958 = !DILocation(line: 339, column: 4, scope: !9954)
!9959 = distinct !{!9959, !9952, !9960}
!9960 = !DILocation(line: 340, column: 2, scope: !9939)
!9961 = !DILocation(line: 342, column: 2, scope: !9939)
!9962 = distinct !DISubprogram(name: "memset", scope: !9639, file: !9639, line: 352, type: !9963, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9965)
!9963 = !DISubroutineType(types: !9964)
!9964 = !{!124, !124, !125, !272}
!9965 = !{!9966, !9967, !9968, !9969, !9970}
!9966 = !DILocalVariable(name: "buf", arg: 1, scope: !9962, file: !9639, line: 352, type: !124)
!9967 = !DILocalVariable(name: "c", arg: 2, scope: !9962, file: !9639, line: 352, type: !125)
!9968 = !DILocalVariable(name: "n", arg: 3, scope: !9962, file: !9639, line: 352, type: !272)
!9969 = !DILocalVariable(name: "d_byte", scope: !9962, file: !9639, line: 356, type: !1132)
!9970 = !DILocalVariable(name: "c_byte", scope: !9962, file: !9639, line: 357, type: !151)
!9971 = !DILocation(line: 0, scope: !9962)
!9972 = !DILocation(line: 357, column: 25, scope: !9962)
!9973 = !DILocation(line: 389, column: 11, scope: !9962)
!9974 = !DILocation(line: 389, column: 2, scope: !9962)
!9975 = !DILocation(line: 390, column: 11, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9962, file: !9639, line: 389, column: 16)
!9977 = !DILocation(line: 390, column: 15, scope: !9976)
!9978 = !DILocation(line: 391, column: 4, scope: !9976)
!9979 = distinct !{!9979, !9974, !9980}
!9980 = !DILocation(line: 392, column: 2, scope: !9962)
!9981 = !DILocation(line: 394, column: 2, scope: !9962)
!9982 = distinct !DISubprogram(name: "memchr", scope: !9639, file: !9639, line: 404, type: !9983, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !9985)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{!124, !13, !125, !272}
!9985 = !{!9986, !9987, !9988, !9989}
!9986 = !DILocalVariable(name: "s", arg: 1, scope: !9982, file: !9639, line: 404, type: !13)
!9987 = !DILocalVariable(name: "c", arg: 2, scope: !9982, file: !9639, line: 404, type: !125)
!9988 = !DILocalVariable(name: "n", arg: 3, scope: !9982, file: !9639, line: 404, type: !272)
!9989 = !DILocalVariable(name: "p", scope: !9990, file: !9639, line: 407, type: !3072)
!9990 = distinct !DILexicalBlock(scope: !9991, file: !9639, line: 406, column: 14)
!9991 = distinct !DILexicalBlock(scope: !9982, file: !9639, line: 406, column: 6)
!9992 = !DILocation(line: 0, scope: !9982)
!9993 = !DILocation(line: 406, column: 8, scope: !9991)
!9994 = !DILocation(line: 406, column: 6, scope: !9982)
!9995 = !DILocation(line: 409, column: 3, scope: !9990)
!9996 = !DILocation(line: 0, scope: !9990)
!9997 = !DILocation(line: 410, column: 8, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !9639, line: 410, column: 8)
!9999 = distinct !DILexicalBlock(scope: !9990, file: !9639, line: 409, column: 6)
!10000 = !DILocation(line: 410, column: 13, scope: !9998)
!10001 = !DILocation(line: 410, column: 8, scope: !9999)
!10002 = distinct !{!10002, !9995, !10003}
!10003 = !DILocation(line: 414, column: 20, scope: !9990)
!10004 = !DILocation(line: 417, column: 2, scope: !9982)
!10005 = !DILocation(line: 418, column: 1, scope: !9982)
!10006 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !718, file: !718, line: 23, type: !5074, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10007)
!10007 = !{!10008}
!10008 = !DILocalVariable(name: "hook", arg: 1, scope: !10006, file: !718, line: 23, type: !409)
!10009 = !DILocation(line: 0, scope: !10006)
!10010 = !DILocation(line: 25, column: 15, scope: !10006)
!10011 = !DILocation(line: 26, column: 1, scope: !10006)
!10012 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !718, file: !718, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10013)
!10013 = !{!10014}
!10014 = !DILocalVariable(name: "c", arg: 1, scope: !10012, file: !718, line: 14, type: !125)
!10015 = !DILocation(line: 0, scope: !10012)
!10016 = !DILocation(line: 18, column: 2, scope: !10012)
!10017 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !718, file: !718, line: 28, type: !10018, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10020)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!125, !125, !714}
!10020 = !{!10021, !10022}
!10021 = !DILocalVariable(name: "c", arg: 1, scope: !10017, file: !718, line: 28, type: !125)
!10022 = !DILocalVariable(name: "stream", arg: 2, scope: !10017, file: !718, line: 28, type: !714)
!10023 = !DILocation(line: 0, scope: !10017)
!10024 = !DILocation(line: 30, column: 27, scope: !10017)
!10025 = !DILocation(line: 30, column: 50, scope: !10017)
!10026 = !DILocation(line: 30, column: 9, scope: !10017)
!10027 = !DILocation(line: 30, column: 2, scope: !10017)
!10028 = distinct !DISubprogram(name: "fputc", scope: !718, file: !718, line: 41, type: !10018, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10029)
!10029 = !{!10030, !10031}
!10030 = !DILocalVariable(name: "c", arg: 1, scope: !10028, file: !718, line: 41, type: !125)
!10031 = !DILocalVariable(name: "stream", arg: 2, scope: !10028, file: !718, line: 41, type: !714)
!10032 = !DILocation(line: 0, scope: !10028)
!10033 = !DILocation(line: 43, column: 9, scope: !10028)
!10034 = !DILocation(line: 43, column: 2, scope: !10028)
!10035 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10036, file: !10036, line: 72, type: !10018, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10037)
!10036 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!10037 = !{!10038, !10039}
!10038 = !DILocalVariable(name: "c", arg: 1, scope: !10035, file: !10036, line: 72, type: !125)
!10039 = !DILocalVariable(name: "stream", arg: 2, scope: !10035, file: !10036, line: 72, type: !714)
!10040 = !DILocation(line: 0, scope: !10035)
!10041 = !DILocation(line: 81, column: 2, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10035, file: !10036, line: 81, column: 2)
!10043 = !{i64 2154905126}
!10044 = !DILocation(line: 82, column: 9, scope: !10035)
!10045 = !DILocation(line: 82, column: 2, scope: !10035)
!10046 = distinct !DISubprogram(name: "fputs", scope: !718, file: !718, line: 46, type: !10047, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10050)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!125, !9643, !10049}
!10049 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!10050 = !{!10051, !10052, !10053, !10054}
!10051 = !DILocalVariable(name: "s", arg: 1, scope: !10046, file: !718, line: 46, type: !9643)
!10052 = !DILocalVariable(name: "stream", arg: 2, scope: !10046, file: !718, line: 46, type: !10049)
!10053 = !DILocalVariable(name: "len", scope: !10046, file: !718, line: 48, type: !125)
!10054 = !DILocalVariable(name: "ret", scope: !10046, file: !718, line: 49, type: !125)
!10055 = !DILocation(line: 0, scope: !10046)
!10056 = !DILocation(line: 48, column: 12, scope: !10046)
!10057 = !DILocation(line: 51, column: 8, scope: !10046)
!10058 = !DILocation(line: 53, column: 13, scope: !10046)
!10059 = !DILocation(line: 53, column: 9, scope: !10046)
!10060 = !DILocation(line: 53, column: 2, scope: !10046)
!10061 = distinct !DISubprogram(name: "fwrite", scope: !718, file: !718, line: 99, type: !10062, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10064)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!272, !9943, !272, !272, !10049}
!10064 = !{!10065, !10066, !10067, !10068}
!10065 = !DILocalVariable(name: "ptr", arg: 1, scope: !10061, file: !718, line: 99, type: !9943)
!10066 = !DILocalVariable(name: "size", arg: 2, scope: !10061, file: !718, line: 99, type: !272)
!10067 = !DILocalVariable(name: "nitems", arg: 3, scope: !10061, file: !718, line: 99, type: !272)
!10068 = !DILocalVariable(name: "stream", arg: 4, scope: !10061, file: !718, line: 100, type: !10049)
!10069 = !DILocation(line: 0, scope: !10061)
!10070 = !DILocation(line: 102, column: 9, scope: !10061)
!10071 = !DILocation(line: 102, column: 2, scope: !10061)
!10072 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10036, file: !10036, line: 96, type: !10062, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10073)
!10073 = !{!10074, !10075, !10076, !10077}
!10074 = !DILocalVariable(name: "ptr", arg: 1, scope: !10072, file: !10036, line: 96, type: !9943)
!10075 = !DILocalVariable(name: "size", arg: 2, scope: !10072, file: !10036, line: 96, type: !272)
!10076 = !DILocalVariable(name: "nitems", arg: 3, scope: !10072, file: !10036, line: 96, type: !272)
!10077 = !DILocalVariable(name: "stream", arg: 4, scope: !10072, file: !10036, line: 96, type: !10049)
!10078 = !DILocation(line: 0, scope: !10072)
!10079 = !DILocation(line: 107, column: 2, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10072, file: !10036, line: 107, column: 2)
!10081 = !{i64 2154905230}
!10082 = !DILocation(line: 108, column: 9, scope: !10072)
!10083 = !DILocation(line: 108, column: 2, scope: !10072)
!10084 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !718, file: !718, line: 56, type: !10062, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10085)
!10085 = !{!10086, !10087, !10088, !10089, !10090, !10091, !10092, !10093}
!10086 = !DILocalVariable(name: "ptr", arg: 1, scope: !10084, file: !718, line: 56, type: !9943)
!10087 = !DILocalVariable(name: "size", arg: 2, scope: !10084, file: !718, line: 56, type: !272)
!10088 = !DILocalVariable(name: "nitems", arg: 3, scope: !10084, file: !718, line: 57, type: !272)
!10089 = !DILocalVariable(name: "stream", arg: 4, scope: !10084, file: !718, line: 57, type: !10049)
!10090 = !DILocalVariable(name: "i", scope: !10084, file: !718, line: 59, type: !272)
!10091 = !DILocalVariable(name: "j", scope: !10084, file: !718, line: 60, type: !272)
!10092 = !DILocalVariable(name: "p", scope: !10084, file: !718, line: 61, type: !3072)
!10093 = !DILabel(scope: !10084, name: "done", file: !718, line: 82)
!10094 = !DILocation(line: 0, scope: !10084)
!10095 = !DILocation(line: 63, column: 14, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10084, file: !718, line: 63, column: 6)
!10097 = !DILocation(line: 63, column: 24, scope: !10096)
!10098 = !DILocation(line: 72, column: 3, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10084, file: !718, line: 70, column: 5)
!10100 = !DILocation(line: 0, scope: !10099)
!10101 = !DILocation(line: 73, column: 8, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10103, file: !718, line: 73, column: 8)
!10103 = distinct !DILexicalBlock(scope: !10099, file: !718, line: 72, column: 6)
!10104 = !DILocation(line: 73, column: 29, scope: !10102)
!10105 = !DILocation(line: 73, column: 27, scope: !10102)
!10106 = !DILocation(line: 73, column: 21, scope: !10102)
!10107 = !DILocation(line: 73, column: 33, scope: !10102)
!10108 = !DILocation(line: 73, column: 8, scope: !10103)
!10109 = !DILocation(line: 76, column: 5, scope: !10103)
!10110 = !DILocation(line: 77, column: 14, scope: !10099)
!10111 = !DILocation(line: 77, column: 3, scope: !10103)
!10112 = distinct !{!10112, !10098, !10113}
!10113 = !DILocation(line: 77, column: 17, scope: !10099)
!10114 = !DILocation(line: 79, column: 4, scope: !10099)
!10115 = !DILocation(line: 80, column: 13, scope: !10084)
!10116 = !DILocation(line: 80, column: 2, scope: !10099)
!10117 = distinct !{!10117, !10118, !10119}
!10118 = !DILocation(line: 70, column: 2, scope: !10084)
!10119 = !DILocation(line: 80, column: 16, scope: !10084)
!10120 = !DILocation(line: 82, column: 1, scope: !10084)
!10121 = !DILocation(line: 83, column: 17, scope: !10084)
!10122 = !DILocation(line: 83, column: 2, scope: !10084)
!10123 = !DILocation(line: 84, column: 1, scope: !10084)
!10124 = distinct !DISubprogram(name: "puts", scope: !718, file: !718, line: 106, type: !10125, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10127)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!125, !140}
!10127 = !{!10128}
!10128 = !DILocalVariable(name: "s", arg: 1, scope: !10124, file: !718, line: 106, type: !140)
!10129 = !DILocation(line: 0, scope: !10124)
!10130 = !DILocation(line: 108, column: 6, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10124, file: !718, line: 108, column: 6)
!10132 = !DILocation(line: 108, column: 23, scope: !10131)
!10133 = !DILocation(line: 108, column: 6, scope: !10124)
!10134 = !DILocation(line: 112, column: 9, scope: !10124)
!10135 = !DILocation(line: 112, column: 29, scope: !10124)
!10136 = !DILocation(line: 112, column: 2, scope: !10124)
!10137 = !DILocation(line: 113, column: 1, scope: !10124)
!10138 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !851, file: !851, line: 368, type: !902, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10139)
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "dev", arg: 1, scope: !10138, file: !851, line: 368, type: !880)
!10141 = !DILocation(line: 0, scope: !10138)
!10142 = !DILocation(line: 370, column: 2, scope: !10138)
!10143 = !DILocation(line: 371, column: 1, scope: !10138)
!10144 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !851, file: !851, line: 243, type: !10145, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10147)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{null, !125, !125, !880}
!10147 = !{!10148, !10149, !10150, !10151, !10153}
!10148 = !DILocalVariable(name: "min", arg: 1, scope: !10144, file: !851, line: 243, type: !125)
!10149 = !DILocalVariable(name: "max", arg: 2, scope: !10144, file: !851, line: 243, type: !125)
!10150 = !DILocalVariable(name: "dev", arg: 3, scope: !10144, file: !851, line: 243, type: !880)
!10151 = !DILocalVariable(name: "data", scope: !10144, file: !851, line: 245, type: !10152)
!10152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!10153 = !DILocalVariable(name: "line", scope: !10144, file: !851, line: 246, type: !125)
!10154 = !DILocation(line: 0, scope: !10144)
!10155 = !DILocation(line: 245, column: 38, scope: !10144)
!10156 = !DILocation(line: 249, column: 24, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10158, file: !851, line: 249, column: 2)
!10158 = distinct !DILexicalBlock(scope: !10144, file: !851, line: 249, column: 2)
!10159 = !DILocation(line: 249, column: 2, scope: !10158)
!10160 = !DILocation(line: 251, column: 7, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !851, line: 251, column: 7)
!10162 = distinct !DILexicalBlock(scope: !10157, file: !851, line: 249, column: 39)
!10163 = !DILocation(line: 251, column: 7, scope: !10162)
!10164 = !DILocation(line: 253, column: 4, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !851, line: 251, column: 36)
!10166 = !DILocation(line: 256, column: 24, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10165, file: !851, line: 256, column: 8)
!10168 = !DILocation(line: 256, column: 9, scope: !10167)
!10169 = !DILocation(line: 256, column: 8, scope: !10165)
!10170 = !DILocation(line: 260, column: 43, scope: !10165)
!10171 = !DILocation(line: 260, column: 4, scope: !10165)
!10172 = !DILocation(line: 261, column: 3, scope: !10165)
!10173 = !DILocation(line: 249, column: 35, scope: !10157)
!10174 = distinct !{!10174, !10159, !10175}
!10175 = !DILocation(line: 262, column: 2, scope: !10158)
!10176 = !DILocation(line: 263, column: 1, scope: !10144)
!10177 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !851, file: !851, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10178)
!10178 = !{!10179}
!10179 = !DILocalVariable(name: "line", arg: 1, scope: !10177, file: !851, line: 158, type: !125)
!10180 = !DILocation(line: 0, scope: !10177)
!10181 = !DILocation(line: 170, column: 38, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !851, line: 160, column: 17)
!10183 = distinct !DILexicalBlock(scope: !10177, file: !851, line: 160, column: 6)
!10184 = !DILocation(line: 170, column: 10, scope: !10182)
!10185 = !DILocation(line: 176, column: 1, scope: !10177)
!10186 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !851, file: !851, line: 183, type: !10187, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10189)
!10187 = !DISubroutineType(types: !10188)
!10188 = !{null, !125}
!10189 = !{!10190}
!10190 = !DILocalVariable(name: "line", arg: 1, scope: !10186, file: !851, line: 183, type: !125)
!10191 = !DILocation(line: 0, scope: !10186)
!10192 = !DILocation(line: 195, column: 28, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !851, line: 185, column: 17)
!10194 = distinct !DILexicalBlock(scope: !10186, file: !851, line: 185, column: 6)
!10195 = !DILocation(line: 195, column: 3, scope: !10193)
!10196 = !DILocation(line: 200, column: 1, scope: !10186)
!10197 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10198, file: !10198, line: 910, type: !8396, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10199)
!10198 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10199 = !{!10200}
!10200 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10197, file: !10198, line: 910, type: !208)
!10201 = !DILocation(line: 0, scope: !10197)
!10202 = !DILocation(line: 912, column: 3, scope: !10197)
!10203 = !DILocation(line: 913, column: 1, scope: !10197)
!10204 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10198, file: !10198, line: 834, type: !9551, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10205)
!10205 = !{!10206}
!10206 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10204, file: !10198, line: 834, type: !208)
!10207 = !DILocation(line: 0, scope: !10204)
!10208 = !DILocation(line: 836, column: 11, scope: !10204)
!10209 = !DILocation(line: 836, column: 40, scope: !10204)
!10210 = !DILocation(line: 836, column: 3, scope: !10204)
!10211 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !851, file: !851, line: 304, type: !902, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10212)
!10212 = !{!10213}
!10213 = !DILocalVariable(name: "dev", arg: 1, scope: !10211, file: !851, line: 304, type: !880)
!10214 = !DILocation(line: 0, scope: !10211)
!10215 = !DILocation(line: 306, column: 2, scope: !10211)
!10216 = !DILocation(line: 307, column: 1, scope: !10211)
!10217 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !851, file: !851, line: 299, type: !902, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10218)
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "dev", arg: 1, scope: !10217, file: !851, line: 299, type: !880)
!10220 = !DILocation(line: 0, scope: !10217)
!10221 = !DILocation(line: 301, column: 2, scope: !10217)
!10222 = !DILocation(line: 302, column: 1, scope: !10217)
!10223 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !851, file: !851, line: 294, type: !902, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10224)
!10224 = !{!10225}
!10225 = !DILocalVariable(name: "dev", arg: 1, scope: !10223, file: !851, line: 294, type: !880)
!10226 = !DILocation(line: 0, scope: !10223)
!10227 = !DILocation(line: 296, column: 2, scope: !10223)
!10228 = !DILocation(line: 297, column: 1, scope: !10223)
!10229 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !851, file: !851, line: 397, type: !902, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10230)
!10230 = !{!10231}
!10231 = !DILocalVariable(name: "dev", arg: 1, scope: !10229, file: !851, line: 397, type: !880)
!10232 = !DILocation(line: 0, scope: !10229)
!10233 = !DILocation(line: 399, column: 2, scope: !10229)
!10234 = !DILocation(line: 400, column: 1, scope: !10229)
!10235 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !851, file: !851, line: 392, type: !902, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10236)
!10236 = !{!10237}
!10237 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !851, line: 392, type: !880)
!10238 = !DILocation(line: 0, scope: !10235)
!10239 = !DILocation(line: 394, column: 2, scope: !10235)
!10240 = !DILocation(line: 395, column: 1, scope: !10235)
!10241 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !851, file: !851, line: 289, type: !902, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10242)
!10242 = !{!10243}
!10243 = !DILocalVariable(name: "dev", arg: 1, scope: !10241, file: !851, line: 289, type: !880)
!10244 = !DILocation(line: 0, scope: !10241)
!10245 = !DILocation(line: 291, column: 2, scope: !10241)
!10246 = !DILocation(line: 292, column: 1, scope: !10241)
!10247 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !851, file: !851, line: 387, type: !902, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10248)
!10248 = !{!10249}
!10249 = !DILocalVariable(name: "dev", arg: 1, scope: !10247, file: !851, line: 387, type: !880)
!10250 = !DILocation(line: 0, scope: !10247)
!10251 = !DILocation(line: 389, column: 2, scope: !10247)
!10252 = !DILocation(line: 390, column: 1, scope: !10247)
!10253 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !851, file: !851, line: 382, type: !902, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10254)
!10254 = !{!10255}
!10255 = !DILocalVariable(name: "dev", arg: 1, scope: !10253, file: !851, line: 382, type: !880)
!10256 = !DILocation(line: 0, scope: !10253)
!10257 = !DILocation(line: 384, column: 2, scope: !10253)
!10258 = !DILocation(line: 385, column: 1, scope: !10253)
!10259 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !851, file: !851, line: 373, type: !902, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10260)
!10260 = !{!10261}
!10261 = !DILocalVariable(name: "dev", arg: 1, scope: !10259, file: !851, line: 373, type: !880)
!10262 = !DILocation(line: 0, scope: !10259)
!10263 = !DILocation(line: 375, column: 2, scope: !10259)
!10264 = !DILocation(line: 376, column: 1, scope: !10259)
!10265 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !851, file: !851, line: 284, type: !902, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10266)
!10266 = !{!10267}
!10267 = !DILocalVariable(name: "dev", arg: 1, scope: !10265, file: !851, line: 284, type: !880)
!10268 = !DILocation(line: 0, scope: !10265)
!10269 = !DILocation(line: 286, column: 2, scope: !10265)
!10270 = !DILocation(line: 287, column: 1, scope: !10265)
!10271 = distinct !DISubprogram(name: "stm32_exti_init", scope: !851, file: !851, line: 416, type: !878, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10272)
!10272 = !{!10273}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !851, line: 416, type: !880)
!10274 = !DILocation(line: 0, scope: !10271)
!10275 = !DILocation(line: 418, column: 2, scope: !10271)
!10276 = !DILocation(line: 420, column: 2, scope: !10271)
!10277 = !DILocation(line: 0, scope: !901)
!10278 = !DILocation(line: 493, column: 2, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !901, file: !851, line: 493, column: 2)
!10280 = !DILocation(line: 497, column: 2, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !901, file: !851, line: 497, column: 2)
!10282 = !DILocation(line: 507, column: 2, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !901, file: !851, line: 507, column: 2)
!10284 = !DILocation(line: 512, column: 2, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !901, file: !851, line: 512, column: 2)
!10286 = !DILocation(line: 516, column: 2, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !901, file: !851, line: 516, column: 2)
!10288 = !DILocation(line: 523, column: 2, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !901, file: !851, line: 523, column: 2)
!10290 = !DILocation(line: 527, column: 2, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !901, file: !851, line: 527, column: 2)
!10292 = !DILocation(line: 581, column: 2, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !901, file: !851, line: 581, column: 2)
!10294 = !DILocation(line: 586, column: 2, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !901, file: !851, line: 586, column: 2)
!10296 = !DILocation(line: 591, column: 2, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !901, file: !851, line: 591, column: 2)
!10298 = !DILocation(line: 595, column: 2, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !901, file: !851, line: 595, column: 2)
!10300 = !DILocation(line: 607, column: 1, scope: !901)
!10301 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !851, file: !851, line: 112, type: !10187, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10302)
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "line", arg: 1, scope: !10301, file: !851, line: 112, type: !125)
!10304 = !DILocalVariable(name: "irqnum", scope: !10301, file: !851, line: 114, type: !125)
!10305 = !DILocation(line: 0, scope: !10301)
!10306 = !DILocation(line: 121, column: 11, scope: !10301)
!10307 = !DILocation(line: 130, column: 26, scope: !10301)
!10308 = !DILocation(line: 130, column: 2, scope: !10301)
!10309 = !DILocation(line: 134, column: 2, scope: !10301)
!10310 = !DILocation(line: 135, column: 1, scope: !10301)
!10311 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10198, file: !10198, line: 268, type: !8396, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10312)
!10312 = !{!10313}
!10313 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10311, file: !10198, line: 268, type: !208)
!10314 = !DILocation(line: 0, scope: !10311)
!10315 = !DILocation(line: 270, column: 3, scope: !10311)
!10316 = !DILocation(line: 271, column: 1, scope: !10311)
!10317 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !851, file: !851, line: 137, type: !10187, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10318)
!10318 = !{!10319}
!10319 = !DILocalVariable(name: "line", arg: 1, scope: !10317, file: !851, line: 137, type: !125)
!10320 = !DILocation(line: 0, scope: !10317)
!10321 = !DILocation(line: 141, column: 11, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10317, file: !851, line: 141, column: 6)
!10323 = !DILocation(line: 141, column: 6, scope: !10317)
!10324 = !DILocation(line: 145, column: 28, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10322, file: !851, line: 141, column: 17)
!10326 = !DILocation(line: 145, column: 3, scope: !10325)
!10327 = !DILocation(line: 147, column: 2, scope: !10325)
!10328 = !DILocation(line: 151, column: 1, scope: !10317)
!10329 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10198, file: !10198, line: 309, type: !8396, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10330)
!10330 = !{!10331}
!10331 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10329, file: !10198, line: 309, type: !208)
!10332 = !DILocation(line: 0, scope: !10329)
!10333 = !DILocation(line: 311, column: 3, scope: !10329)
!10334 = !DILocation(line: 312, column: 1, scope: !10329)
!10335 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !851, file: !851, line: 202, type: !10336, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10338)
!10336 = !DISubroutineType(types: !10337)
!10337 = !{null, !125, !125}
!10338 = !{!10339, !10340}
!10339 = !DILocalVariable(name: "line", arg: 1, scope: !10335, file: !851, line: 202, type: !125)
!10340 = !DILocalVariable(name: "trigger", arg: 2, scope: !10335, file: !851, line: 202, type: !125)
!10341 = !DILocation(line: 0, scope: !10335)
!10342 = !DILocation(line: 211, column: 2, scope: !10335)
!10343 = !DILocation(line: 213, column: 36, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10335, file: !851, line: 211, column: 19)
!10345 = !DILocation(line: 213, column: 3, scope: !10344)
!10346 = !DILocation(line: 214, column: 3, scope: !10344)
!10347 = !DILocation(line: 215, column: 3, scope: !10344)
!10348 = !DILocation(line: 217, column: 35, scope: !10344)
!10349 = !DILocation(line: 217, column: 3, scope: !10344)
!10350 = !DILocation(line: 218, column: 3, scope: !10344)
!10351 = !DILocation(line: 219, column: 3, scope: !10344)
!10352 = !DILocation(line: 221, column: 36, scope: !10344)
!10353 = !DILocation(line: 221, column: 3, scope: !10344)
!10354 = !DILocation(line: 222, column: 3, scope: !10344)
!10355 = !DILocation(line: 223, column: 3, scope: !10344)
!10356 = !DILocation(line: 225, column: 35, scope: !10344)
!10357 = !DILocation(line: 225, column: 3, scope: !10344)
!10358 = !DILocation(line: 226, column: 3, scope: !10344)
!10359 = !DILocation(line: 227, column: 3, scope: !10344)
!10360 = !DILocation(line: 232, column: 1, scope: !10335)
!10361 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10198, file: !10198, line: 573, type: !8396, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10362)
!10362 = !{!10363}
!10363 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10361, file: !10198, line: 573, type: !208)
!10364 = !DILocation(line: 0, scope: !10361)
!10365 = !DILocation(line: 575, column: 3, scope: !10361)
!10366 = !DILocation(line: 577, column: 1, scope: !10361)
!10367 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10198, file: !10198, line: 703, type: !8396, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10368)
!10368 = !{!10369}
!10369 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10367, file: !10198, line: 703, type: !208)
!10370 = !DILocation(line: 0, scope: !10367)
!10371 = !DILocation(line: 705, column: 3, scope: !10367)
!10372 = !DILocation(line: 706, column: 1, scope: !10367)
!10373 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10198, file: !10198, line: 529, type: !8396, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10374)
!10374 = !{!10375}
!10375 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10373, file: !10198, line: 529, type: !208)
!10376 = !DILocation(line: 0, scope: !10373)
!10377 = !DILocation(line: 531, column: 3, scope: !10373)
!10378 = !DILocation(line: 533, column: 1, scope: !10373)
!10379 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10198, file: !10198, line: 661, type: !8396, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10380)
!10380 = !{!10381}
!10381 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10379, file: !10198, line: 661, type: !208)
!10382 = !DILocation(line: 0, scope: !10379)
!10383 = !DILocation(line: 663, column: 3, scope: !10379)
!10384 = !DILocation(line: 664, column: 1, scope: !10379)
!10385 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !851, file: !851, line: 433, type: !10386, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10388)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{!125, !125, !891, !124}
!10388 = !{!10389, !10390, !10391, !10392, !10394}
!10389 = !DILocalVariable(name: "line", arg: 1, scope: !10385, file: !851, line: 433, type: !125)
!10390 = !DILocalVariable(name: "cb", arg: 2, scope: !10385, file: !851, line: 433, type: !891)
!10391 = !DILocalVariable(name: "arg", arg: 3, scope: !10385, file: !851, line: 433, type: !124)
!10392 = !DILocalVariable(name: "dev", scope: !10385, file: !851, line: 435, type: !10393)
!10393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!10394 = !DILocalVariable(name: "data", scope: !10385, file: !851, line: 436, type: !10152)
!10395 = !DILocation(line: 0, scope: !10385)
!10396 = !DILocation(line: 438, column: 21, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10385, file: !851, line: 438, column: 6)
!10398 = !DILocation(line: 438, column: 6, scope: !10397)
!10399 = !DILocation(line: 438, column: 6, scope: !10385)
!10400 = !DILocation(line: 442, column: 20, scope: !10385)
!10401 = !DILocation(line: 443, column: 17, scope: !10385)
!10402 = !DILocation(line: 443, column: 22, scope: !10385)
!10403 = !DILocation(line: 445, column: 2, scope: !10385)
!10404 = !DILocation(line: 446, column: 1, scope: !10385)
!10405 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !851, file: !851, line: 448, type: !10187, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10406)
!10406 = !{!10407, !10408, !10409}
!10407 = !DILocalVariable(name: "line", arg: 1, scope: !10405, file: !851, line: 448, type: !125)
!10408 = !DILocalVariable(name: "dev", scope: !10405, file: !851, line: 450, type: !10393)
!10409 = !DILocalVariable(name: "data", scope: !10405, file: !851, line: 451, type: !10152)
!10410 = !DILocation(line: 0, scope: !10405)
!10411 = !DILocation(line: 453, column: 17, scope: !10405)
!10412 = !DILocation(line: 453, column: 20, scope: !10405)
!10413 = !DILocation(line: 454, column: 17, scope: !10405)
!10414 = !DILocation(line: 454, column: 22, scope: !10405)
!10415 = !DILocation(line: 455, column: 1, scope: !10405)
!10416 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1033, file: !1033, line: 183, type: !1069, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10417)
!10417 = !{!10418, !10419, !10420, !10421, !10422}
!10418 = !DILocalVariable(name: "dev", arg: 1, scope: !10416, file: !1033, line: 183, type: !1060)
!10419 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10416, file: !1033, line: 184, type: !1071)
!10420 = !DILocalVariable(name: "pclken", scope: !10416, file: !1033, line: 186, type: !1023)
!10421 = !DILocalVariable(name: "reg", scope: !10416, file: !1033, line: 187, type: !1805)
!10422 = !DILocalVariable(name: "reg_val", scope: !10416, file: !1033, line: 188, type: !208)
!10423 = !DILocation(line: 0, scope: !10416)
!10424 = !DILocation(line: 192, column: 6, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10416, file: !1033, line: 192, column: 6)
!10426 = !DILocation(line: 192, column: 6, scope: !10416)
!10427 = !DILocation(line: 197, column: 52, scope: !10416)
!10428 = !DILocation(line: 197, column: 8, scope: !10416)
!10429 = !DILocation(line: 198, column: 12, scope: !10416)
!10430 = !DILocation(line: 199, column: 21, scope: !10416)
!10431 = !DILocation(line: 199, column: 10, scope: !10416)
!10432 = !DILocation(line: 200, column: 7, scope: !10416)
!10433 = !DILocation(line: 202, column: 2, scope: !10416)
!10434 = !DILocation(line: 203, column: 1, scope: !10416)
!10435 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1033, file: !1033, line: 205, type: !1069, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10436)
!10436 = !{!10437, !10438, !10439, !10440, !10441}
!10437 = !DILocalVariable(name: "dev", arg: 1, scope: !10435, file: !1033, line: 205, type: !1060)
!10438 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10435, file: !1033, line: 206, type: !1071)
!10439 = !DILocalVariable(name: "pclken", scope: !10435, file: !1033, line: 208, type: !1023)
!10440 = !DILocalVariable(name: "reg", scope: !10435, file: !1033, line: 209, type: !1805)
!10441 = !DILocalVariable(name: "reg_val", scope: !10435, file: !1033, line: 210, type: !208)
!10442 = !DILocation(line: 0, scope: !10435)
!10443 = !DILocation(line: 214, column: 6, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10435, file: !1033, line: 214, column: 6)
!10445 = !DILocation(line: 214, column: 6, scope: !10435)
!10446 = !DILocation(line: 219, column: 52, scope: !10435)
!10447 = !DILocation(line: 219, column: 8, scope: !10435)
!10448 = !DILocation(line: 220, column: 12, scope: !10435)
!10449 = !DILocation(line: 221, column: 22, scope: !10435)
!10450 = !DILocation(line: 221, column: 13, scope: !10435)
!10451 = !DILocation(line: 221, column: 10, scope: !10435)
!10452 = !DILocation(line: 222, column: 7, scope: !10435)
!10453 = !DILocation(line: 224, column: 2, scope: !10435)
!10454 = !DILocation(line: 225, column: 1, scope: !10435)
!10455 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1033, file: !1033, line: 262, type: !1085, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10456)
!10456 = !{!10457, !10458, !10459, !10460, !10461, !10462, !10463, !10464}
!10457 = !DILocalVariable(name: "clock", arg: 1, scope: !10455, file: !1033, line: 262, type: !1060)
!10458 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10455, file: !1033, line: 263, type: !1071)
!10459 = !DILocalVariable(name: "rate", arg: 3, scope: !10455, file: !1033, line: 264, type: !1029)
!10460 = !DILocalVariable(name: "pclken", scope: !10455, file: !1033, line: 266, type: !1023)
!10461 = !DILocalVariable(name: "ahb_clock", scope: !10455, file: !1033, line: 273, type: !208)
!10462 = !DILocalVariable(name: "apb1_clock", scope: !10455, file: !1033, line: 274, type: !208)
!10463 = !DILocalVariable(name: "apb2_clock", scope: !10455, file: !1033, line: 276, type: !208)
!10464 = !DILocalVariable(name: "ahb3_clock", scope: !10455, file: !1033, line: 286, type: !208)
!10465 = !DILocation(line: 0, scope: !10455)
!10466 = !DILocation(line: 273, column: 23, scope: !10455)
!10467 = !DILocation(line: 299, column: 18, scope: !10455)
!10468 = !DILocation(line: 299, column: 2, scope: !10455)
!10469 = !DILocation(line: 274, column: 24, scope: !10455)
!10470 = !DILocation(line: 319, column: 3, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10455, file: !1033, line: 299, column: 23)
!10472 = !DILocation(line: 276, column: 24, scope: !10455)
!10473 = !DILocation(line: 323, column: 3, scope: !10471)
!10474 = !DILocation(line: 346, column: 33, scope: !10471)
!10475 = !DILocation(line: 346, column: 11, scope: !10471)
!10476 = !DILocation(line: 350, column: 3, scope: !10471)
!10477 = !DILocation(line: 354, column: 33, scope: !10471)
!10478 = !DILocation(line: 354, column: 11, scope: !10471)
!10479 = !DILocation(line: 358, column: 3, scope: !10471)
!10480 = !DILocation(line: 374, column: 3, scope: !10471)
!10481 = !DILocation(line: 379, column: 3, scope: !10471)
!10482 = !DILocation(line: 0, scope: !10471)
!10483 = !DILocation(line: 396, column: 1, scope: !10455)
!10484 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1033, file: !1033, line: 227, type: !1101, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10485)
!10485 = !{!10486, !10487, !10488, !10489, !10490, !10491, !10492, !10493}
!10486 = !DILocalVariable(name: "dev", arg: 1, scope: !10484, file: !1033, line: 227, type: !1060)
!10487 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10484, file: !1033, line: 228, type: !1071)
!10488 = !DILocalVariable(name: "data", arg: 3, scope: !10484, file: !1033, line: 229, type: !124)
!10489 = !DILocalVariable(name: "pclken", scope: !10484, file: !1033, line: 233, type: !1023)
!10490 = !DILocalVariable(name: "reg", scope: !10484, file: !1033, line: 234, type: !1805)
!10491 = !DILocalVariable(name: "reg_val", scope: !10484, file: !1033, line: 235, type: !208)
!10492 = !DILocalVariable(name: "dt_val", scope: !10484, file: !1033, line: 235, type: !208)
!10493 = !DILocalVariable(name: "err", scope: !10484, file: !1033, line: 236, type: !125)
!10494 = !DILocation(line: 0, scope: !10484)
!10495 = !DILocation(line: 241, column: 30, scope: !10484)
!10496 = !DILocation(line: 241, column: 8, scope: !10484)
!10497 = !DILocation(line: 242, column: 10, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10484, file: !1033, line: 242, column: 6)
!10499 = !DILocation(line: 242, column: 6, scope: !10484)
!10500 = !DILocation(line: 247, column: 11, scope: !10484)
!10501 = !DILocation(line: 248, column: 6, scope: !10484)
!10502 = !DILocation(line: 247, column: 44, scope: !10484)
!10503 = !DILocation(line: 250, column: 6, scope: !10484)
!10504 = !DILocation(line: 249, column: 52, scope: !10484)
!10505 = !DILocation(line: 249, column: 8, scope: !10484)
!10506 = !DILocation(line: 251, column: 12, scope: !10484)
!10507 = !DILocation(line: 252, column: 10, scope: !10484)
!10508 = !DILocation(line: 253, column: 7, scope: !10484)
!10509 = !DILocation(line: 255, column: 2, scope: !10484)
!10510 = !DILocation(line: 260, column: 1, scope: !10484)
!10511 = distinct !DISubprogram(name: "enabled_clock", scope: !1033, file: !1033, line: 100, type: !10512, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10514)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{!125, !208}
!10514 = !{!10515, !10516}
!10515 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10511, file: !1033, line: 100, type: !208)
!10516 = !DILocalVariable(name: "r", scope: !10511, file: !1033, line: 102, type: !125)
!10517 = !DILocation(line: 0, scope: !10511)
!10518 = !DILocation(line: 104, column: 2, scope: !10511)
!10519 = !DILocation(line: 180, column: 2, scope: !10511)
!10520 = !DILocation(line: 181, column: 1, scope: !10511)
!10521 = distinct !DISubprogram(name: "get_bus_clock", scope: !1033, file: !1033, line: 79, type: !10522, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10524)
!10522 = !DISubroutineType(types: !10523)
!10523 = !{!208, !208, !208}
!10524 = !{!10525, !10526}
!10525 = !DILocalVariable(name: "clock", arg: 1, scope: !10521, file: !1033, line: 79, type: !208)
!10526 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10521, file: !1033, line: 79, type: !208)
!10527 = !DILocation(line: 0, scope: !10521)
!10528 = !DILocation(line: 81, column: 15, scope: !10521)
!10529 = !DILocation(line: 81, column: 2, scope: !10521)
!10530 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1033, file: !1033, line: 68, type: !10531, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10533)
!10531 = !DISubroutineType(types: !10532)
!10532 = !{!208, !208, !125, !125, !125}
!10533 = !{!10534, !10535, !10536, !10537}
!10534 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10530, file: !1033, line: 68, type: !208)
!10535 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10530, file: !1033, line: 69, type: !125)
!10536 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10530, file: !1033, line: 70, type: !125)
!10537 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10530, file: !1033, line: 71, type: !125)
!10538 = !DILocation(line: 0, scope: !10530)
!10539 = !DILocation(line: 75, column: 22, scope: !10530)
!10540 = !DILocation(line: 76, column: 13, scope: !10530)
!10541 = !DILocation(line: 75, column: 34, scope: !10530)
!10542 = !DILocation(line: 75, column: 2, scope: !10530)
!10543 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1033, file: !1033, line: 641, type: !1058, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10544)
!10544 = !{!10545, !10546, !10547}
!10545 = !DILocalVariable(name: "dev", arg: 1, scope: !10543, file: !1033, line: 641, type: !1060)
!10546 = !DILocalVariable(name: "old_flash_freq", scope: !10543, file: !1033, line: 664, type: !208)
!10547 = !DILocalVariable(name: "new_flash_freq", scope: !10543, file: !1033, line: 665, type: !208)
!10548 = !DILocation(line: 0, scope: !10543)
!10549 = !DILocation(line: 646, column: 2, scope: !10543)
!10550 = !DILocation(line: 667, column: 19, scope: !10543)
!10551 = !DILocation(line: 674, column: 21, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10543, file: !1033, line: 674, column: 6)
!10553 = !DILocation(line: 674, column: 6, scope: !10543)
!10554 = !DILocation(line: 675, column: 3, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10552, file: !1033, line: 674, column: 59)
!10556 = !DILocation(line: 676, column: 2, scope: !10555)
!10557 = !DILocation(line: 680, column: 2, scope: !10543)
!10558 = !DILocation(line: 683, column: 2, scope: !10543)
!10559 = !DILocation(line: 690, column: 3, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !1033, line: 689, column: 9)
!10561 = distinct !DILexicalBlock(scope: !10543, file: !1033, line: 685, column: 6)
!10562 = !DILocation(line: 695, column: 2, scope: !10543)
!10563 = !DILocation(line: 696, column: 2, scope: !10543)
!10564 = !DILocation(line: 696, column: 9, scope: !10543)
!10565 = !DILocation(line: 696, column: 34, scope: !10543)
!10566 = distinct !{!10566, !10563, !10567}
!10567 = !DILocation(line: 697, column: 2, scope: !10543)
!10568 = !DILocation(line: 720, column: 21, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10543, file: !1033, line: 720, column: 6)
!10570 = !DILocation(line: 720, column: 6, scope: !10543)
!10571 = !DILocation(line: 721, column: 3, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10569, file: !1033, line: 720, column: 60)
!10573 = !DILocation(line: 722, column: 2, scope: !10572)
!10574 = !DILocation(line: 725, column: 18, scope: !10543)
!10575 = !DILocation(line: 728, column: 2, scope: !10543)
!10576 = !DILocation(line: 730, column: 2, scope: !10543)
!10577 = !DILocation(line: 745, column: 2, scope: !10543)
!10578 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10579, file: !10579, line: 3275, type: !8386, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10579 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10580 = !DILocation(line: 3277, column: 21, scope: !10578)
!10581 = !DILocation(line: 3277, column: 3, scope: !10578)
!10582 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1033, file: !1033, line: 507, type: !3300, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10583 = !DILocation(line: 516, column: 4, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !1033, line: 515, column: 10)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !1033, line: 513, column: 7)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !1033, line: 510, column: 37)
!10587 = distinct !DILexicalBlock(scope: !10582, file: !1033, line: 510, column: 6)
!10588 = !DILocation(line: 526, column: 3, scope: !10586)
!10589 = !DILocation(line: 527, column: 3, scope: !10586)
!10590 = !DILocation(line: 527, column: 10, scope: !10586)
!10591 = !DILocation(line: 527, column: 31, scope: !10586)
!10592 = distinct !{!10592, !10589, !10593}
!10593 = !DILocation(line: 529, column: 3, scope: !10586)
!10594 = !DILocation(line: 583, column: 3, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !1033, line: 577, column: 37)
!10596 = distinct !DILexicalBlock(scope: !10582, file: !1033, line: 577, column: 6)
!10597 = !DILocation(line: 584, column: 3, scope: !10595)
!10598 = !DILocation(line: 584, column: 10, scope: !10595)
!10599 = !DILocation(line: 584, column: 31, scope: !10595)
!10600 = distinct !{!10600, !10597, !10601}
!10601 = !DILocation(line: 585, column: 3, scope: !10595)
!10602 = !DILocation(line: 627, column: 1, scope: !10582)
!10603 = distinct !DISubprogram(name: "set_up_plls", scope: !1033, file: !1033, line: 448, type: !3300, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10604 = !DILocation(line: 460, column: 6, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10603, file: !1033, line: 460, column: 6)
!10606 = !DILocation(line: 460, column: 31, scope: !10605)
!10607 = !DILocation(line: 460, column: 6, scope: !10603)
!10608 = !DILocation(line: 461, column: 3, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10605, file: !1033, line: 460, column: 67)
!10610 = !DILocation(line: 462, column: 3, scope: !10609)
!10611 = !DILocation(line: 463, column: 2, scope: !10609)
!10612 = !DILocation(line: 464, column: 2, scope: !10603)
!10613 = !DILocation(line: 488, column: 2, scope: !10603)
!10614 = !DILocation(line: 492, column: 2, scope: !10603)
!10615 = !DILocation(line: 496, column: 2, scope: !10603)
!10616 = !DILocation(line: 499, column: 2, scope: !10603)
!10617 = !DILocation(line: 500, column: 2, scope: !10603)
!10618 = !DILocation(line: 500, column: 9, scope: !10603)
!10619 = !DILocation(line: 500, column: 30, scope: !10603)
!10620 = distinct !{!10620, !10617, !10621}
!10621 = !DILocation(line: 502, column: 2, scope: !10603)
!10622 = !DILocation(line: 505, column: 1, scope: !10603)
!10623 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10579, file: !10579, line: 3224, type: !8396, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10624)
!10624 = !{!10625}
!10625 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10623, file: !10579, line: 3224, type: !208)
!10626 = !DILocation(line: 0, scope: !10623)
!10627 = !DILocation(line: 3226, column: 3, scope: !10623)
!10628 = !DILocation(line: 3227, column: 1, scope: !10623)
!10629 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10579, file: !10579, line: 3188, type: !8396, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10630)
!10630 = !{!10631}
!10631 = !DILocalVariable(name: "Source", arg: 1, scope: !10629, file: !10579, line: 3188, type: !208)
!10632 = !DILocation(line: 0, scope: !10629)
!10633 = !DILocation(line: 3190, column: 3, scope: !10629)
!10634 = !DILocation(line: 3191, column: 1, scope: !10629)
!10635 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10579, file: !10579, line: 3204, type: !8386, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10636 = !DILocation(line: 3206, column: 21, scope: !10635)
!10637 = !DILocation(line: 3206, column: 3, scope: !10635)
!10638 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10579, file: !10579, line: 3240, type: !8396, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10639)
!10639 = !{!10640}
!10640 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10638, file: !10579, line: 3240, type: !208)
!10641 = !DILocation(line: 0, scope: !10638)
!10642 = !DILocation(line: 3242, column: 3, scope: !10638)
!10643 = !DILocation(line: 3243, column: 1, scope: !10638)
!10644 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10579, file: !10579, line: 3256, type: !8396, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !10645)
!10645 = !{!10646}
!10646 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10644, file: !10579, line: 3256, type: !208)
!10647 = !DILocation(line: 0, scope: !10644)
!10648 = !DILocation(line: 3258, column: 3, scope: !10644)
!10649 = !DILocation(line: 3259, column: 1, scope: !10644)
!10650 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1033, file: !1033, line: 409, type: !3300, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10651 = !DILocation(line: 412, column: 6, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10650, file: !1033, line: 412, column: 6)
!10653 = !DILocation(line: 412, column: 27, scope: !10652)
!10654 = !DILocation(line: 412, column: 6, scope: !10650)
!10655 = !DILocation(line: 414, column: 3, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10652, file: !1033, line: 412, column: 33)
!10657 = !DILocation(line: 415, column: 3, scope: !10656)
!10658 = !DILocation(line: 415, column: 10, scope: !10656)
!10659 = !DILocation(line: 415, column: 31, scope: !10656)
!10660 = distinct !{!10660, !10657, !10661}
!10661 = !DILocation(line: 417, column: 3, scope: !10656)
!10662 = !DILocation(line: 421, column: 2, scope: !10650)
!10663 = !DILocation(line: 422, column: 2, scope: !10650)
!10664 = !DILocation(line: 422, column: 9, scope: !10650)
!10665 = !DILocation(line: 422, column: 34, scope: !10650)
!10666 = distinct !{!10666, !10663, !10667}
!10667 = !DILocation(line: 423, column: 2, scope: !10650)
!10668 = !DILocation(line: 424, column: 1, scope: !10650)
!10669 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10579, file: !10579, line: 4195, type: !3300, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10670 = !DILocation(line: 4197, column: 3, scope: !10669)
!10671 = !DILocation(line: 4198, column: 1, scope: !10669)
!10672 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10579, file: !10579, line: 4184, type: !3300, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10673 = !DILocation(line: 4186, column: 3, scope: !10672)
!10674 = !DILocation(line: 4187, column: 1, scope: !10672)
!10675 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10579, file: !10579, line: 4205, type: !8386, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10676 = !DILocation(line: 4207, column: 11, scope: !10675)
!10677 = !DILocation(line: 4207, column: 44, scope: !10675)
!10678 = !DILocation(line: 4207, column: 3, scope: !10675)
!10679 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10579, file: !10579, line: 3007, type: !8386, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10680 = !DILocation(line: 3009, column: 11, scope: !10679)
!10681 = !DILocation(line: 3009, column: 44, scope: !10679)
!10682 = !DILocation(line: 3009, column: 3, scope: !10679)
!10683 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10579, file: !10579, line: 2987, type: !3300, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10684 = !DILocation(line: 2989, column: 3, scope: !10683)
!10685 = !DILocation(line: 2990, column: 1, scope: !10683)
!10686 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10579, file: !10579, line: 2939, type: !3300, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10687 = !DILocation(line: 2941, column: 3, scope: !10686)
!10688 = !DILocation(line: 2942, column: 1, scope: !10686)
!10689 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10579, file: !10579, line: 2949, type: !3300, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10690 = !DILocation(line: 2951, column: 3, scope: !10689)
!10691 = !DILocation(line: 2952, column: 1, scope: !10689)
!10692 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10579, file: !10579, line: 2969, type: !8386, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10693 = !DILocation(line: 2971, column: 11, scope: !10692)
!10694 = !DILocation(line: 2971, column: 44, scope: !10692)
!10695 = !DILocation(line: 2971, column: 3, scope: !10692)
!10696 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10579, file: !10579, line: 3143, type: !3300, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10697 = !DILocation(line: 3145, column: 3, scope: !10696)
!10698 = !DILocation(line: 3146, column: 1, scope: !10696)
!10699 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10579, file: !10579, line: 3163, type: !8386, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !972, retainedNodes: !639)
!10700 = !DILocation(line: 3165, column: 11, scope: !10699)
!10701 = !DILocation(line: 3165, column: 46, scope: !10699)
!10702 = !DILocation(line: 3165, column: 3, scope: !10699)
!10703 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10704, file: !10704, line: 40, type: !8386, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !639)
!10704 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10705 = !DILocation(line: 45, column: 3, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !10704, line: 44, column: 44)
!10707 = distinct !DILexicalBlock(scope: !10708, file: !10704, line: 44, column: 13)
!10708 = distinct !DILexicalBlock(scope: !10703, file: !10704, line: 42, column: 6)
!10709 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10704, file: !10704, line: 56, type: !3300, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !639)
!10710 = !DILocation(line: 58, column: 2, scope: !10709)
!10711 = !DILocation(line: 62, column: 1, scope: !10709)
!10712 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10579, file: !10579, line: 4304, type: !10713, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !10715)
!10713 = !DISubroutineType(types: !10714)
!10714 = !{null, !208, !208, !208, !208}
!10715 = !{!10716, !10717, !10718, !10719}
!10716 = !DILocalVariable(name: "Source", arg: 1, scope: !10712, file: !10579, line: 4304, type: !208)
!10717 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10712, file: !10579, line: 4304, type: !208)
!10718 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10712, file: !10579, line: 4304, type: !208)
!10719 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10712, file: !10579, line: 4304, type: !208)
!10720 = !DILocation(line: 0, scope: !10712)
!10721 = !DILocation(line: 4306, column: 3, scope: !10712)
!10722 = !DILocation(line: 4308, column: 3, scope: !10712)
!10723 = !DILocation(line: 4312, column: 1, scope: !10712)
!10724 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10704, file: !10704, line: 69, type: !3300, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !639)
!10725 = !DILocation(line: 72, column: 2, scope: !10724)
!10726 = !DILocation(line: 73, column: 1, scope: !10724)
!10727 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10728, file: !10728, line: 1185, type: !8396, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !10729)
!10728 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10729 = !{!10730, !10731}
!10730 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10727, file: !10728, line: 1185, type: !208)
!10731 = !DILocalVariable(name: "tmpreg", scope: !10727, file: !10728, line: 1187, type: !423)
!10732 = !DILocation(line: 0, scope: !10727)
!10733 = !DILocation(line: 1187, column: 3, scope: !10727)
!10734 = !DILocation(line: 1187, column: 17, scope: !10727)
!10735 = !DILocation(line: 1188, column: 3, scope: !10727)
!10736 = !DILocation(line: 1190, column: 12, scope: !10727)
!10737 = !DILocation(line: 1190, column: 10, scope: !10727)
!10738 = !DILocation(line: 1191, column: 9, scope: !10727)
!10739 = !DILocation(line: 1192, column: 1, scope: !10727)
!10740 = distinct !DISubprogram(name: "uart_console_init", scope: !1162, file: !1162, line: 588, type: !1139, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10741)
!10741 = !{!10742}
!10742 = !DILocalVariable(name: "arg", arg: 1, scope: !10740, file: !1162, line: 588, type: !1117)
!10743 = !DILocation(line: 0, scope: !10740)
!10744 = !DILocation(line: 593, column: 7, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10740, file: !1162, line: 593, column: 6)
!10746 = !DILocation(line: 593, column: 6, scope: !10740)
!10747 = !DILocation(line: 597, column: 2, scope: !10740)
!10748 = !DILocation(line: 599, column: 2, scope: !10740)
!10749 = !DILocation(line: 600, column: 1, scope: !10740)
!10750 = distinct !DISubprogram(name: "device_is_ready", scope: !4205, file: !4205, line: 47, type: !10751, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10753)
!10751 = !DISubroutineType(types: !10752)
!10752 = !{!153, !1117}
!10753 = !{!10754}
!10754 = !DILocalVariable(name: "dev", arg: 1, scope: !10750, file: !4205, line: 47, type: !1117)
!10755 = !DILocation(line: 0, scope: !10750)
!10756 = !DILocation(line: 55, column: 2, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10750, file: !4205, line: 55, column: 2)
!10758 = !{i64 2155045140}
!10759 = !DILocation(line: 56, column: 9, scope: !10750)
!10760 = !DILocation(line: 56, column: 2, scope: !10750)
!10761 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1162, file: !1162, line: 573, type: !3300, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !639)
!10762 = !DILocation(line: 576, column: 2, scope: !10761)
!10763 = !DILocation(line: 579, column: 2, scope: !10761)
!10764 = !DILocation(line: 581, column: 1, scope: !10761)
!10765 = distinct !DISubprogram(name: "console_out", scope: !1162, file: !1162, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10766)
!10766 = !{!10767}
!10767 = !DILocalVariable(name: "c", arg: 1, scope: !10765, file: !1162, line: 77, type: !125)
!10768 = !DILocation(line: 0, scope: !10765)
!10769 = !DILocation(line: 89, column: 11, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10765, file: !1162, line: 89, column: 6)
!10771 = !DILocation(line: 89, column: 6, scope: !10765)
!10772 = !DILocation(line: 90, column: 3, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10770, file: !1162, line: 89, column: 17)
!10774 = !DILocation(line: 91, column: 2, scope: !10773)
!10775 = !DILocation(line: 92, column: 34, scope: !10765)
!10776 = !DILocation(line: 92, column: 2, scope: !10765)
!10777 = !DILocation(line: 94, column: 2, scope: !10765)
!10778 = distinct !DISubprogram(name: "uart_poll_out", scope: !10779, file: !10779, line: 95, type: !1135, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10780)
!10779 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/drivers/crypto")
!10780 = !{!10781, !10782}
!10781 = !DILocalVariable(name: "dev", arg: 1, scope: !10778, file: !10779, line: 95, type: !1117)
!10782 = !DILocalVariable(name: "out_char", arg: 2, scope: !10778, file: !10779, line: 95, type: !151)
!10783 = !DILocation(line: 0, scope: !10778)
!10784 = !DILocation(line: 105, column: 2, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10778, file: !10779, line: 105, column: 2)
!10786 = !{i64 2155128531}
!10787 = !DILocation(line: 106, column: 2, scope: !10778)
!10788 = !DILocation(line: 107, column: 1, scope: !10778)
!10789 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1111, file: !1111, line: 574, type: !1135, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10790)
!10790 = !{!10791, !10792, !10793}
!10791 = !DILocalVariable(name: "dev", arg: 1, scope: !10789, file: !1111, line: 574, type: !1117)
!10792 = !DILocalVariable(name: "out_char", arg: 2, scope: !10789, file: !1111, line: 575, type: !151)
!10793 = !DILocalVariable(name: "api", scope: !10789, file: !1111, line: 577, type: !1108)
!10794 = !DILocation(line: 0, scope: !10789)
!10795 = !DILocation(line: 578, column: 40, scope: !10789)
!10796 = !DILocation(line: 580, column: 7, scope: !10789)
!10797 = !DILocation(line: 580, column: 2, scope: !10789)
!10798 = !DILocation(line: 581, column: 1, scope: !10789)
!10799 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10751, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10800)
!10800 = !{!10801}
!10801 = !DILocalVariable(name: "dev", arg: 1, scope: !10799, file: !137, line: 730, type: !1117)
!10802 = !DILocation(line: 0, scope: !10799)
!10803 = !DILocation(line: 732, column: 9, scope: !10799)
!10804 = !DILocation(line: 732, column: 2, scope: !10799)
!10805 = distinct !DISubprogram(name: "uart_register_input", scope: !1162, file: !1162, line: 560, type: !10806, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10851)
!10806 = !DISubroutineType(types: !10807)
!10807 = !{null, !10808, !10808, !10848}
!10808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10809, size: 32)
!10809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !624, line: 2208, size: 128, elements: !10810)
!10810 = !{!10811}
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10809, file: !624, line: 2209, baseType: !10812, size: 128)
!10812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !624, line: 1709, size: 128, elements: !10813)
!10813 = !{!10814, !10827, !10829}
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10812, file: !624, line: 1710, baseType: !10815, size: 64)
!10815 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10816, line: 46, baseType: !10817)
!10816 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10816, line: 41, size: 64, elements: !10818)
!10818 = !{!10819, !10826}
!10819 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10817, file: !10816, line: 42, baseType: !10820, size: 32)
!10820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10821, size: 32)
!10821 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10816, line: 39, baseType: !10822)
!10822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10816, line: 35, size: 32, elements: !10823)
!10823 = !{!10824}
!10824 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10822, file: !10816, line: 36, baseType: !10825, size: 32)
!10825 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10816, line: 32, baseType: !208)
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10817, file: !10816, line: 43, baseType: !10820, size: 32, offset: 32)
!10827 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10812, file: !624, line: 1711, baseType: !10828, offset: 64)
!10828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10812, file: !624, line: 1712, baseType: !10830, size: 64, offset: 64)
!10830 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !10831)
!10831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !10832)
!10832 = !{!10833}
!10833 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10831, file: !567, line: 232, baseType: !10834, size: 64)
!10834 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !10835)
!10835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !10836)
!10836 = !{!10837, !10843}
!10837 = !DIDerivedType(tag: DW_TAG_member, scope: !10835, file: !541, line: 38, baseType: !10838, size: 32)
!10838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10835, file: !541, line: 38, size: 32, elements: !10839)
!10839 = !{!10840, !10842}
!10840 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10838, file: !541, line: 39, baseType: !10841, size: 32)
!10841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10835, size: 32)
!10842 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10838, file: !541, line: 40, baseType: !10841, size: 32)
!10843 = !DIDerivedType(tag: DW_TAG_member, scope: !10835, file: !541, line: 42, baseType: !10844, size: 32, offset: 32)
!10844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10835, file: !541, line: 42, size: 32, elements: !10845)
!10845 = !{!10846, !10847}
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10844, file: !541, line: 43, baseType: !10841, size: 32)
!10847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10844, file: !541, line: 44, baseType: !10841, size: 32)
!10848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10849, size: 32)
!10849 = !DISubroutineType(types: !10850)
!10850 = !{!150, !393, !150}
!10851 = !{!10852, !10853, !10854}
!10852 = !DILocalVariable(name: "avail", arg: 1, scope: !10805, file: !1162, line: 560, type: !10808)
!10853 = !DILocalVariable(name: "lines", arg: 2, scope: !10805, file: !1162, line: 560, type: !10808)
!10854 = !DILocalVariable(name: "completion", arg: 3, scope: !10805, file: !1162, line: 561, type: !10848)
!10855 = !DILocation(line: 0, scope: !10805)
!10856 = !DILocation(line: 566, column: 1, scope: !10805)
!10857 = distinct !DISubprogram(name: "tc_shim_init", scope: !1177, file: !1177, line: 305, type: !1201, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10858)
!10858 = !{!10859, !10860}
!10859 = !DILocalVariable(name: "dev", arg: 1, scope: !10857, file: !1177, line: 305, type: !1203)
!10860 = !DILocalVariable(name: "i", scope: !10857, file: !1177, line: 307, type: !125)
!10861 = !DILocation(line: 0, scope: !10857)
!10862 = !DILocation(line: 311, column: 29, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !1177, line: 310, column: 43)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !1177, line: 310, column: 2)
!10865 = distinct !DILexicalBlock(scope: !10857, file: !1177, line: 310, column: 2)
!10866 = !DILocation(line: 314, column: 2, scope: !10857)
!10867 = distinct !DISubprogram(name: "tc_query_caps", scope: !1177, file: !1177, line: 289, type: !1201, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10868)
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "dev", arg: 1, scope: !10867, file: !1177, line: 289, type: !1203)
!10870 = !DILocation(line: 0, scope: !10867)
!10871 = !DILocation(line: 291, column: 2, scope: !10867)
!10872 = distinct !DISubprogram(name: "tc_session_setup", scope: !1177, file: !1177, line: 193, type: !1214, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10873)
!10873 = !{!10874, !10875, !10876, !10877, !10878, !10879, !10881}
!10874 = !DILocalVariable(name: "dev", arg: 1, scope: !10872, file: !1177, line: 193, type: !1203)
!10875 = !DILocalVariable(name: "ctx", arg: 2, scope: !10872, file: !1177, line: 193, type: !1216)
!10876 = !DILocalVariable(name: "algo", arg: 3, scope: !10872, file: !1177, line: 194, type: !39)
!10877 = !DILocalVariable(name: "mode", arg: 4, scope: !10872, file: !1177, line: 194, type: !30)
!10878 = !DILocalVariable(name: "op_type", arg: 5, scope: !10872, file: !1177, line: 195, type: !42)
!10879 = !DILocalVariable(name: "data", scope: !10872, file: !1177, line: 197, type: !10880)
!10880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!10881 = !DILocalVariable(name: "idx", scope: !10872, file: !1177, line: 198, type: !125)
!10882 = !DILocation(line: 0, scope: !10872)
!10883 = !DILocation(line: 203, column: 11, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10872, file: !1177, line: 203, column: 6)
!10885 = !DILocation(line: 203, column: 6, scope: !10872)
!10886 = !DILocation(line: 204, column: 3, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !1177, line: 204, column: 3)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !1177, line: 204, column: 3)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !1177, line: 204, column: 3)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !1177, line: 204, column: 3)
!10891 = distinct !DILexicalBlock(scope: !10884, file: !1177, line: 203, column: 38)
!10892 = !DILocation(line: 205, column: 3, scope: !10891)
!10893 = !DILocation(line: 211, column: 13, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10872, file: !1177, line: 211, column: 6)
!10895 = !DILocation(line: 211, column: 19, scope: !10894)
!10896 = !DILocation(line: 211, column: 6, scope: !10872)
!10897 = !DILocation(line: 212, column: 3, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !1177, line: 212, column: 3)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !1177, line: 212, column: 3)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !1177, line: 212, column: 3)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !1177, line: 212, column: 3)
!10902 = distinct !DILexicalBlock(scope: !10894, file: !1177, line: 211, column: 36)
!10903 = !DILocation(line: 213, column: 3, scope: !10902)
!10904 = !DILocation(line: 216, column: 11, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10872, file: !1177, line: 216, column: 6)
!10906 = !DILocation(line: 216, column: 18, scope: !10905)
!10907 = !DILocation(line: 216, column: 6, scope: !10872)
!10908 = !DILocation(line: 218, column: 3, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !1177, line: 218, column: 3)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !1177, line: 218, column: 3)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1177, line: 218, column: 3)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !1177, line: 218, column: 3)
!10913 = distinct !DILexicalBlock(scope: !10905, file: !1177, line: 216, column: 38)
!10914 = !DILocation(line: 219, column: 3, scope: !10913)
!10915 = !DILocation(line: 222, column: 14, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10872, file: !1177, line: 222, column: 6)
!10917 = !DILocation(line: 222, column: 6, scope: !10872)
!10918 = !DILocation(line: 223, column: 3, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10916, file: !1177, line: 222, column: 43)
!10920 = !DILocation(line: 225, column: 13, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10919, file: !1177, line: 223, column: 17)
!10922 = !DILocation(line: 225, column: 29, scope: !10921)
!10923 = !DILocation(line: 226, column: 4, scope: !10921)
!10924 = !DILocation(line: 228, column: 34, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10921, file: !1177, line: 228, column: 8)
!10926 = !DILocation(line: 228, column: 42, scope: !10925)
!10927 = !DILocation(line: 228, column: 8, scope: !10921)
!10928 = !DILocation(line: 229, column: 5, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !1177, line: 229, column: 5)
!10930 = distinct !DILexicalBlock(scope: !10931, file: !1177, line: 229, column: 5)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !1177, line: 229, column: 5)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !1177, line: 229, column: 5)
!10933 = distinct !DILexicalBlock(scope: !10925, file: !1177, line: 228, column: 50)
!10934 = !DILocation(line: 231, column: 5, scope: !10933)
!10935 = !DILocation(line: 233, column: 13, scope: !10921)
!10936 = !DILocation(line: 233, column: 29, scope: !10921)
!10937 = !DILocation(line: 234, column: 4, scope: !10921)
!10938 = !DILocation(line: 236, column: 13, scope: !10921)
!10939 = !DILocation(line: 236, column: 29, scope: !10921)
!10940 = !DILocation(line: 237, column: 4, scope: !10921)
!10941 = !DILocation(line: 239, column: 4, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !1177, line: 239, column: 4)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !1177, line: 239, column: 4)
!10944 = distinct !DILexicalBlock(scope: !10945, file: !1177, line: 239, column: 4)
!10945 = distinct !DILexicalBlock(scope: !10921, file: !1177, line: 239, column: 4)
!10946 = !DILocation(line: 240, column: 4, scope: !10921)
!10947 = !DILocation(line: 243, column: 3, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10916, file: !1177, line: 242, column: 9)
!10949 = !DILocation(line: 245, column: 13, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10948, file: !1177, line: 243, column: 17)
!10951 = !DILocation(line: 245, column: 29, scope: !10950)
!10952 = !DILocation(line: 246, column: 4, scope: !10950)
!10953 = !DILocation(line: 249, column: 34, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !1177, line: 249, column: 8)
!10955 = !DILocation(line: 249, column: 42, scope: !10954)
!10956 = !DILocation(line: 249, column: 8, scope: !10950)
!10957 = !DILocation(line: 250, column: 5, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !1177, line: 250, column: 5)
!10959 = distinct !DILexicalBlock(scope: !10960, file: !1177, line: 250, column: 5)
!10960 = distinct !DILexicalBlock(scope: !10961, file: !1177, line: 250, column: 5)
!10961 = distinct !DILexicalBlock(scope: !10962, file: !1177, line: 250, column: 5)
!10962 = distinct !DILexicalBlock(scope: !10954, file: !1177, line: 249, column: 50)
!10963 = !DILocation(line: 252, column: 5, scope: !10962)
!10964 = !DILocation(line: 254, column: 13, scope: !10950)
!10965 = !DILocation(line: 254, column: 29, scope: !10950)
!10966 = !DILocation(line: 255, column: 4, scope: !10950)
!10967 = !DILocation(line: 257, column: 13, scope: !10950)
!10968 = !DILocation(line: 257, column: 29, scope: !10950)
!10969 = !DILocation(line: 258, column: 4, scope: !10950)
!10970 = !DILocation(line: 260, column: 4, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !1177, line: 260, column: 4)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !1177, line: 260, column: 4)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !1177, line: 260, column: 4)
!10974 = distinct !DILexicalBlock(scope: !10950, file: !1177, line: 260, column: 4)
!10975 = !DILocation(line: 261, column: 4, scope: !10950)
!10976 = !DILocation(line: 266, column: 11, scope: !10872)
!10977 = !DILocation(line: 266, column: 23, scope: !10872)
!10978 = !DILocation(line: 268, column: 8, scope: !10872)
!10979 = !DILocation(line: 269, column: 10, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10872, file: !1177, line: 269, column: 6)
!10981 = !DILocation(line: 269, column: 6, scope: !10872)
!10982 = !DILocation(line: 270, column: 3, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !1177, line: 270, column: 3)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !1177, line: 270, column: 3)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !1177, line: 270, column: 3)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !1177, line: 270, column: 3)
!10987 = distinct !DILexicalBlock(scope: !10980, file: !1177, line: 269, column: 33)
!10988 = !DILocation(line: 271, column: 3, scope: !10987)
!10989 = !DILocation(line: 274, column: 10, scope: !10872)
!10990 = !DILocation(line: 276, column: 39, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10872, file: !1177, line: 276, column: 6)
!10992 = !DILocation(line: 276, column: 61, scope: !10991)
!10993 = !DILocation(line: 276, column: 6, scope: !10991)
!10994 = !DILocation(line: 277, column: 5, scope: !10991)
!10995 = !DILocation(line: 276, column: 6, scope: !10872)
!10996 = !DILocation(line: 278, column: 3, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1177, line: 278, column: 3)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !1177, line: 278, column: 3)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !1177, line: 278, column: 3)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !1177, line: 278, column: 3)
!11001 = distinct !DILexicalBlock(scope: !10991, file: !1177, line: 277, column: 24)
!11002 = !DILocation(line: 279, column: 24, scope: !11001)
!11003 = !DILocation(line: 279, column: 31, scope: !11001)
!11004 = !DILocation(line: 281, column: 3, scope: !11001)
!11005 = !DILocation(line: 284, column: 7, scope: !10872)
!11006 = !DILocation(line: 284, column: 23, scope: !10872)
!11007 = !DILocation(line: 286, column: 2, scope: !10872)
!11008 = !DILocation(line: 287, column: 1, scope: !10872)
!11009 = distinct !DISubprogram(name: "tc_session_free", scope: !1177, file: !1177, line: 294, type: !1290, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11010)
!11010 = !{!11011, !11012, !11013}
!11011 = !DILocalVariable(name: "dev", arg: 1, scope: !11009, file: !1177, line: 294, type: !1203)
!11012 = !DILocalVariable(name: "sessn", arg: 2, scope: !11009, file: !1177, line: 294, type: !1216)
!11013 = !DILocalVariable(name: "data", scope: !11009, file: !1177, line: 296, type: !10880)
!11014 = !DILocation(line: 0, scope: !11009)
!11015 = !DILocation(line: 296, column: 43, scope: !11009)
!11016 = !DILocation(line: 299, column: 8, scope: !11009)
!11017 = !DILocation(line: 300, column: 8, scope: !11009)
!11018 = !DILocation(line: 300, column: 15, scope: !11009)
!11019 = !DILocation(line: 302, column: 2, scope: !11009)
!11020 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1177, file: !1177, line: 28, type: !1243, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11021)
!11021 = !{!11022, !11023, !11024, !11025}
!11022 = !DILocalVariable(name: "ctx", arg: 1, scope: !11020, file: !1177, line: 28, type: !1216)
!11023 = !DILocalVariable(name: "op", arg: 2, scope: !11020, file: !1177, line: 28, type: !1231)
!11024 = !DILocalVariable(name: "iv", arg: 3, scope: !11020, file: !1177, line: 29, type: !184)
!11025 = !DILocalVariable(name: "data", scope: !11020, file: !1177, line: 31, type: !10880)
!11026 = !DILocation(line: 0, scope: !11020)
!11027 = !DILocation(line: 31, column: 41, scope: !11020)
!11028 = !DILocation(line: 33, column: 30, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11020, file: !1177, line: 33, column: 6)
!11030 = !DILocation(line: 34, column: 9, scope: !11029)
!11031 = !DILocation(line: 35, column: 9, scope: !11029)
!11032 = !DILocation(line: 35, column: 21, scope: !11029)
!11033 = !DILocation(line: 37, column: 12, scope: !11029)
!11034 = !DILocation(line: 33, column: 6, scope: !11029)
!11035 = !DILocation(line: 37, column: 25, scope: !11029)
!11036 = !DILocation(line: 33, column: 6, scope: !11020)
!11037 = !DILocation(line: 38, column: 3, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !1177, line: 38, column: 3)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !1177, line: 38, column: 3)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !1177, line: 38, column: 3)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !1177, line: 38, column: 3)
!11042 = distinct !DILexicalBlock(scope: !11029, file: !1177, line: 37, column: 44)
!11043 = !DILocation(line: 39, column: 3, scope: !11042)
!11044 = !DILocation(line: 43, column: 20, scope: !11020)
!11045 = !DILocation(line: 43, column: 6, scope: !11020)
!11046 = !DILocation(line: 43, column: 14, scope: !11020)
!11047 = !DILocation(line: 45, column: 2, scope: !11020)
!11048 = !DILocation(line: 46, column: 1, scope: !11020)
!11049 = distinct !DISubprogram(name: "do_ctr_op", scope: !1177, file: !1177, line: 76, type: !1243, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11050)
!11050 = !{!11051, !11052, !11053, !11054, !11055, !11056}
!11051 = !DILocalVariable(name: "ctx", arg: 1, scope: !11049, file: !1177, line: 76, type: !1216)
!11052 = !DILocalVariable(name: "op", arg: 2, scope: !11049, file: !1177, line: 76, type: !1231)
!11053 = !DILocalVariable(name: "iv", arg: 3, scope: !11049, file: !1177, line: 77, type: !184)
!11054 = !DILocalVariable(name: "data", scope: !11049, file: !1177, line: 79, type: !10880)
!11055 = !DILocalVariable(name: "ctr", scope: !11049, file: !1177, line: 80, type: !311)
!11056 = !DILocalVariable(name: "ivlen", scope: !11049, file: !1177, line: 81, type: !125)
!11057 = !DILocation(line: 0, scope: !11049)
!11058 = !DILocation(line: 79, column: 41, scope: !11049)
!11059 = !DILocation(line: 80, column: 2, scope: !11049)
!11060 = !DILocation(line: 80, column: 10, scope: !11049)
!11061 = !DILocation(line: 81, column: 19, scope: !11049)
!11062 = !DILocation(line: 81, column: 14, scope: !11049)
!11063 = !DILocation(line: 81, column: 55, scope: !11049)
!11064 = !DILocation(line: 81, column: 63, scope: !11049)
!11065 = !DILocation(line: 81, column: 26, scope: !11049)
!11066 = !DILocation(line: 86, column: 2, scope: !11049)
!11067 = !DILocation(line: 88, column: 22, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11049, file: !1177, line: 88, column: 6)
!11069 = !DILocation(line: 88, column: 35, scope: !11068)
!11070 = !DILocation(line: 88, column: 52, scope: !11068)
!11071 = !DILocation(line: 89, column: 8, scope: !11068)
!11072 = !DILocation(line: 90, column: 11, scope: !11068)
!11073 = !DILocation(line: 88, column: 6, scope: !11068)
!11074 = !DILocation(line: 90, column: 24, scope: !11068)
!11075 = !DILocation(line: 88, column: 6, scope: !11049)
!11076 = !DILocation(line: 91, column: 3, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11078, file: !1177, line: 91, column: 3)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !1177, line: 91, column: 3)
!11079 = distinct !DILexicalBlock(scope: !11080, file: !1177, line: 91, column: 3)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !1177, line: 91, column: 3)
!11081 = distinct !DILexicalBlock(scope: !11068, file: !1177, line: 90, column: 43)
!11082 = !DILocation(line: 92, column: 3, scope: !11081)
!11083 = !DILocation(line: 96, column: 20, scope: !11049)
!11084 = !DILocation(line: 96, column: 6, scope: !11049)
!11085 = !DILocation(line: 96, column: 14, scope: !11049)
!11086 = !DILocation(line: 98, column: 2, scope: !11049)
!11087 = !DILocation(line: 99, column: 1, scope: !11049)
!11088 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1177, file: !1177, line: 101, type: !1250, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11089)
!11089 = !{!11090, !11091, !11092, !11093, !11101, !11102, !11104}
!11090 = !DILocalVariable(name: "ctx", arg: 1, scope: !11088, file: !1177, line: 101, type: !1216)
!11091 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11088, file: !1177, line: 102, type: !1252)
!11092 = !DILocalVariable(name: "nonce", arg: 3, scope: !11088, file: !1177, line: 102, type: !184)
!11093 = !DILocalVariable(name: "ccm", scope: !11088, file: !1177, line: 104, type: !11094)
!11094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2754, line: 91, size: 96, elements: !11095)
!11095 = !{!11096, !11099, !11100}
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11094, file: !2754, line: 92, baseType: !11097, size: 32)
!11097 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !11098)
!11098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11094, file: !2754, line: 93, baseType: !184, size: 32, offset: 32)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11094, file: !2754, line: 94, baseType: !32, size: 32, offset: 64)
!11101 = !DILocalVariable(name: "data", scope: !11088, file: !1177, line: 105, type: !10880)
!11102 = !DILocalVariable(name: "ccm_param", scope: !11088, file: !1177, line: 106, type: !11103)
!11103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!11104 = !DILocalVariable(name: "op", scope: !11088, file: !1177, line: 107, type: !1231)
!11105 = !DILocation(line: 0, scope: !11088)
!11106 = !DILocation(line: 104, column: 2, scope: !11088)
!11107 = !DILocation(line: 104, column: 28, scope: !11088)
!11108 = !DILocation(line: 105, column: 41, scope: !11088)
!11109 = !DILocation(line: 106, column: 39, scope: !11088)
!11110 = !DILocation(line: 106, column: 51, scope: !11088)
!11111 = !DILocation(line: 107, column: 35, scope: !11088)
!11112 = !DILocation(line: 109, column: 33, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11088, file: !1177, line: 109, column: 6)
!11114 = !DILocation(line: 110, column: 15, scope: !11113)
!11115 = !DILocation(line: 110, column: 4, scope: !11113)
!11116 = !DILocation(line: 111, column: 15, scope: !11113)
!11117 = !DILocation(line: 111, column: 4, scope: !11113)
!11118 = !DILocation(line: 109, column: 6, scope: !11113)
!11119 = !DILocation(line: 111, column: 24, scope: !11113)
!11120 = !DILocation(line: 109, column: 6, scope: !11088)
!11121 = !DILocation(line: 112, column: 3, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !1177, line: 112, column: 3)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !1177, line: 112, column: 3)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !1177, line: 112, column: 3)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !1177, line: 112, column: 3)
!11126 = distinct !DILexicalBlock(scope: !11113, file: !1177, line: 111, column: 43)
!11127 = !DILocation(line: 113, column: 3, scope: !11126)
!11128 = !DILocation(line: 116, column: 39, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11088, file: !1177, line: 116, column: 6)
!11130 = !DILocation(line: 116, column: 52, scope: !11129)
!11131 = !DILocation(line: 117, column: 16, scope: !11129)
!11132 = !DILocation(line: 117, column: 29, scope: !11129)
!11133 = !DILocation(line: 117, column: 41, scope: !11129)
!11134 = !DILocation(line: 118, column: 11, scope: !11129)
!11135 = !DILocation(line: 116, column: 6, scope: !11129)
!11136 = !DILocation(line: 118, column: 25, scope: !11129)
!11137 = !DILocation(line: 116, column: 6, scope: !11088)
!11138 = !DILocation(line: 119, column: 3, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !1177, line: 119, column: 3)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !1177, line: 119, column: 3)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !1177, line: 119, column: 3)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1177, line: 119, column: 3)
!11143 = distinct !DILexicalBlock(scope: !11129, file: !1177, line: 118, column: 44)
!11144 = !DILocation(line: 120, column: 3, scope: !11143)
!11145 = !DILocation(line: 128, column: 15, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11088, file: !1177, line: 128, column: 6)
!11147 = !DILocation(line: 128, column: 6, scope: !11146)
!11148 = !DILocation(line: 128, column: 6, scope: !11088)
!11149 = !DILocation(line: 129, column: 28, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11146, file: !1177, line: 128, column: 20)
!11151 = !DILocation(line: 129, column: 42, scope: !11150)
!11152 = !DILocation(line: 129, column: 36, scope: !11150)
!11153 = !DILocation(line: 129, column: 54, scope: !11150)
!11154 = !DILocation(line: 129, column: 3, scope: !11150)
!11155 = !DILocation(line: 130, column: 2, scope: !11150)
!11156 = !DILocation(line: 136, column: 20, scope: !11088)
!11157 = !DILocation(line: 136, column: 33, scope: !11088)
!11158 = !DILocation(line: 136, column: 27, scope: !11088)
!11159 = !DILocation(line: 136, column: 6, scope: !11088)
!11160 = !DILocation(line: 136, column: 14, scope: !11088)
!11161 = !DILocation(line: 138, column: 2, scope: !11088)
!11162 = !DILocation(line: 139, column: 1, scope: !11088)
!11163 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1177, file: !1177, line: 48, type: !1243, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11164)
!11164 = !{!11165, !11166, !11167, !11168}
!11165 = !DILocalVariable(name: "ctx", arg: 1, scope: !11163, file: !1177, line: 48, type: !1216)
!11166 = !DILocalVariable(name: "op", arg: 2, scope: !11163, file: !1177, line: 48, type: !1231)
!11167 = !DILocalVariable(name: "iv", arg: 3, scope: !11163, file: !1177, line: 49, type: !184)
!11168 = !DILocalVariable(name: "data", scope: !11163, file: !1177, line: 51, type: !10880)
!11169 = !DILocation(line: 0, scope: !11163)
!11170 = !DILocation(line: 56, column: 16, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11163, file: !1177, line: 56, column: 6)
!11172 = !DILocation(line: 56, column: 9, scope: !11171)
!11173 = !DILocation(line: 56, column: 6, scope: !11163)
!11174 = !DILocation(line: 57, column: 3, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11176, file: !1177, line: 57, column: 3)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !1177, line: 57, column: 3)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !1177, line: 57, column: 3)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !1177, line: 57, column: 3)
!11179 = distinct !DILexicalBlock(scope: !11171, file: !1177, line: 56, column: 24)
!11180 = !DILocation(line: 58, column: 3, scope: !11179)
!11181 = !DILocation(line: 51, column: 41, scope: !11163)
!11182 = !DILocation(line: 61, column: 30, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11163, file: !1177, line: 61, column: 6)
!11184 = !DILocation(line: 62, column: 8, scope: !11183)
!11185 = !DILocation(line: 63, column: 15, scope: !11183)
!11186 = !DILocation(line: 64, column: 8, scope: !11183)
!11187 = !DILocation(line: 64, column: 15, scope: !11183)
!11188 = !DILocation(line: 65, column: 23, scope: !11183)
!11189 = !DILocation(line: 61, column: 6, scope: !11183)
!11190 = !DILocation(line: 65, column: 36, scope: !11183)
!11191 = !DILocation(line: 61, column: 6, scope: !11163)
!11192 = !DILocation(line: 66, column: 3, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !1177, line: 66, column: 3)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !1177, line: 66, column: 3)
!11195 = distinct !DILexicalBlock(scope: !11196, file: !1177, line: 66, column: 3)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !1177, line: 66, column: 3)
!11197 = distinct !DILexicalBlock(scope: !11183, file: !1177, line: 65, column: 55)
!11198 = !DILocation(line: 67, column: 3, scope: !11197)
!11199 = !DILocation(line: 71, column: 20, scope: !11163)
!11200 = !DILocation(line: 71, column: 6, scope: !11163)
!11201 = !DILocation(line: 71, column: 14, scope: !11163)
!11202 = !DILocation(line: 73, column: 2, scope: !11163)
!11203 = !DILocation(line: 74, column: 1, scope: !11163)
!11204 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1177, file: !1177, line: 141, type: !1250, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11205)
!11205 = !{!11206, !11207, !11208, !11209, !11210, !11211, !11212}
!11206 = !DILocalVariable(name: "ctx", arg: 1, scope: !11204, file: !1177, line: 141, type: !1216)
!11207 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11204, file: !1177, line: 142, type: !1252)
!11208 = !DILocalVariable(name: "nonce", arg: 3, scope: !11204, file: !1177, line: 142, type: !184)
!11209 = !DILocalVariable(name: "ccm", scope: !11204, file: !1177, line: 144, type: !11094)
!11210 = !DILocalVariable(name: "data", scope: !11204, file: !1177, line: 145, type: !10880)
!11211 = !DILocalVariable(name: "ccm_param", scope: !11204, file: !1177, line: 146, type: !11103)
!11212 = !DILocalVariable(name: "op", scope: !11204, file: !1177, line: 147, type: !1231)
!11213 = !DILocation(line: 0, scope: !11204)
!11214 = !DILocation(line: 144, column: 2, scope: !11204)
!11215 = !DILocation(line: 144, column: 28, scope: !11204)
!11216 = !DILocation(line: 145, column: 41, scope: !11204)
!11217 = !DILocation(line: 146, column: 39, scope: !11204)
!11218 = !DILocation(line: 146, column: 51, scope: !11204)
!11219 = !DILocation(line: 147, column: 35, scope: !11204)
!11220 = !DILocation(line: 149, column: 33, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11204, file: !1177, line: 149, column: 6)
!11222 = !DILocation(line: 150, column: 17, scope: !11221)
!11223 = !DILocation(line: 150, column: 6, scope: !11221)
!11224 = !DILocation(line: 151, column: 17, scope: !11221)
!11225 = !DILocation(line: 151, column: 6, scope: !11221)
!11226 = !DILocation(line: 149, column: 6, scope: !11221)
!11227 = !DILocation(line: 151, column: 26, scope: !11221)
!11228 = !DILocation(line: 149, column: 6, scope: !11204)
!11229 = !DILocation(line: 152, column: 3, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !1177, line: 152, column: 3)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !1177, line: 152, column: 3)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !1177, line: 152, column: 3)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !1177, line: 152, column: 3)
!11234 = distinct !DILexicalBlock(scope: !11221, file: !1177, line: 151, column: 45)
!11235 = !DILocation(line: 153, column: 3, scope: !11234)
!11236 = !DILocation(line: 160, column: 15, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11204, file: !1177, line: 160, column: 6)
!11238 = !DILocation(line: 160, column: 26, scope: !11237)
!11239 = !DILocation(line: 160, column: 39, scope: !11237)
!11240 = !DILocation(line: 160, column: 33, scope: !11237)
!11241 = !DILocation(line: 160, column: 19, scope: !11237)
!11242 = !DILocation(line: 160, column: 6, scope: !11204)
!11243 = !DILocation(line: 161, column: 3, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !1177, line: 161, column: 3)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !1177, line: 161, column: 3)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !1177, line: 161, column: 3)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !1177, line: 161, column: 3)
!11248 = distinct !DILexicalBlock(scope: !11237, file: !1177, line: 160, column: 47)
!11249 = !DILocation(line: 162, column: 3, scope: !11248)
!11250 = !DILocation(line: 165, column: 41, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11204, file: !1177, line: 165, column: 6)
!11252 = !DILocation(line: 165, column: 54, scope: !11251)
!11253 = !DILocation(line: 166, column: 18, scope: !11251)
!11254 = !DILocation(line: 166, column: 31, scope: !11251)
!11255 = !DILocation(line: 168, column: 33, scope: !11251)
!11256 = !DILocation(line: 168, column: 22, scope: !11251)
!11257 = !DILocation(line: 168, column: 20, scope: !11251)
!11258 = !DILocation(line: 165, column: 6, scope: !11251)
!11259 = !DILocation(line: 169, column: 15, scope: !11251)
!11260 = !DILocation(line: 165, column: 6, scope: !11204)
!11261 = !DILocation(line: 170, column: 3, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !1177, line: 170, column: 3)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !1177, line: 170, column: 3)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !1177, line: 170, column: 3)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !1177, line: 170, column: 3)
!11266 = distinct !DILexicalBlock(scope: !11251, file: !1177, line: 169, column: 34)
!11267 = !DILocation(line: 171, column: 3, scope: !11266)
!11268 = !DILocation(line: 174, column: 20, scope: !11204)
!11269 = !DILocation(line: 174, column: 40, scope: !11204)
!11270 = !DILocation(line: 174, column: 29, scope: !11204)
!11271 = !DILocation(line: 174, column: 27, scope: !11204)
!11272 = !DILocation(line: 174, column: 6, scope: !11204)
!11273 = !DILocation(line: 174, column: 14, scope: !11204)
!11274 = !DILocation(line: 176, column: 2, scope: !11204)
!11275 = !DILocation(line: 177, column: 1, scope: !11204)
!11276 = distinct !DISubprogram(name: "get_unused_session", scope: !1177, file: !1177, line: 179, type: !9613, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11277)
!11277 = !{!11278}
!11278 = !DILocalVariable(name: "i", scope: !11276, file: !1177, line: 181, type: !125)
!11279 = !DILocation(line: 0, scope: !11276)
!11280 = !DILocation(line: 183, column: 2, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11276, file: !1177, line: 183, column: 2)
!11282 = !DILocation(line: 184, column: 26, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11284, file: !1177, line: 184, column: 7)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !1177, line: 183, column: 43)
!11285 = distinct !DILexicalBlock(scope: !11281, file: !1177, line: 183, column: 2)
!11286 = !DILocation(line: 184, column: 33, scope: !11283)
!11287 = !DILocation(line: 184, column: 7, scope: !11284)
!11288 = !DILocation(line: 185, column: 30, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11283, file: !1177, line: 184, column: 39)
!11290 = !DILocation(line: 186, column: 4, scope: !11289)
!11291 = distinct !{!11291, !11280, !11292}
!11292 = !DILocation(line: 188, column: 2, scope: !11281)
!11293 = !DILocation(line: 190, column: 2, scope: !11276)
!11294 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1522, file: !1522, line: 523, type: !1380, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11295)
!11295 = !{!11296, !11297, !11298, !11299, !11300}
!11296 = !DILocalVariable(name: "dev", arg: 1, scope: !11294, file: !1522, line: 523, type: !1382)
!11297 = !DILocalVariable(name: "pin", arg: 2, scope: !11294, file: !1522, line: 524, type: !1397)
!11298 = !DILocalVariable(name: "flags", arg: 3, scope: !11294, file: !1522, line: 524, type: !1398)
!11299 = !DILocalVariable(name: "err", scope: !11294, file: !1522, line: 526, type: !125)
!11300 = !DILocalVariable(name: "pincfg", scope: !11294, file: !1522, line: 527, type: !125)
!11301 = !DILocation(line: 0, scope: !11294)
!11302 = !DILocation(line: 527, column: 2, scope: !11294)
!11303 = !DILocation(line: 532, column: 8, scope: !11294)
!11304 = !DILocation(line: 533, column: 10, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11294, file: !1522, line: 533, column: 6)
!11306 = !DILocation(line: 533, column: 6, scope: !11294)
!11307 = !DILocation(line: 543, column: 13, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11294, file: !1522, line: 543, column: 6)
!11309 = !DILocation(line: 543, column: 28, scope: !11308)
!11310 = !DILocation(line: 543, column: 6, scope: !11294)
!11311 = !DILocation(line: 544, column: 14, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !1522, line: 544, column: 7)
!11313 = distinct !DILexicalBlock(scope: !11308, file: !1522, line: 543, column: 34)
!11314 = !DILocation(line: 544, column: 39, scope: !11312)
!11315 = !DILocation(line: 544, column: 7, scope: !11313)
!11316 = !DILocation(line: 545, column: 38, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11312, file: !1522, line: 544, column: 45)
!11318 = !DILocation(line: 545, column: 4, scope: !11317)
!11319 = !DILocation(line: 546, column: 3, scope: !11317)
!11320 = !DILocation(line: 546, column: 21, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11312, file: !1522, line: 546, column: 14)
!11322 = !DILocation(line: 546, column: 45, scope: !11321)
!11323 = !DILocation(line: 546, column: 14, scope: !11312)
!11324 = !DILocation(line: 547, column: 40, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11321, file: !1522, line: 546, column: 51)
!11326 = !DILocation(line: 547, column: 4, scope: !11325)
!11327 = !DILocation(line: 548, column: 3, scope: !11325)
!11328 = !DILocation(line: 551, column: 32, scope: !11294)
!11329 = !DILocation(line: 551, column: 37, scope: !11294)
!11330 = !DILocation(line: 551, column: 2, scope: !11294)
!11331 = !DILocation(line: 554, column: 6, scope: !11294)
!11332 = !DILocation(line: 562, column: 1, scope: !11294)
!11333 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1522, file: !1522, line: 410, type: !11334, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11336)
!11334 = !DISubroutineType(types: !11335)
!11335 = !{!125, !1382, !1029}
!11336 = !{!11337, !11338, !11339, !11341}
!11337 = !DILocalVariable(name: "dev", arg: 1, scope: !11333, file: !1522, line: 410, type: !1382)
!11338 = !DILocalVariable(name: "value", arg: 2, scope: !11333, file: !1522, line: 410, type: !1029)
!11339 = !DILocalVariable(name: "cfg", scope: !11333, file: !1522, line: 412, type: !11340)
!11340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!11341 = !DILocalVariable(name: "gpio", scope: !11333, file: !1522, line: 413, type: !1455)
!11342 = !DILocation(line: 0, scope: !11333)
!11343 = !DILocation(line: 412, column: 45, scope: !11333)
!11344 = !DILocation(line: 413, column: 44, scope: !11333)
!11345 = !DILocation(line: 415, column: 11, scope: !11333)
!11346 = !DILocation(line: 415, column: 9, scope: !11333)
!11347 = !DILocation(line: 417, column: 2, scope: !11333)
!11348 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1522, file: !1522, line: 420, type: !1407, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11349)
!11349 = !{!11350, !11351, !11352, !11353, !11354, !11355}
!11350 = !DILocalVariable(name: "dev", arg: 1, scope: !11348, file: !1522, line: 420, type: !1382)
!11351 = !DILocalVariable(name: "mask", arg: 2, scope: !11348, file: !1522, line: 421, type: !1409)
!11352 = !DILocalVariable(name: "value", arg: 3, scope: !11348, file: !1522, line: 422, type: !1404)
!11353 = !DILocalVariable(name: "cfg", scope: !11348, file: !1522, line: 424, type: !11340)
!11354 = !DILocalVariable(name: "gpio", scope: !11348, file: !1522, line: 425, type: !1455)
!11355 = !DILocalVariable(name: "port_value", scope: !11348, file: !1522, line: 426, type: !208)
!11356 = !DILocation(line: 0, scope: !11348)
!11357 = !DILocation(line: 424, column: 45, scope: !11348)
!11358 = !DILocation(line: 425, column: 44, scope: !11348)
!11359 = !DILocation(line: 430, column: 15, scope: !11348)
!11360 = !DILocation(line: 431, column: 46, scope: !11348)
!11361 = !DILocation(line: 431, column: 44, scope: !11348)
!11362 = !DILocation(line: 431, column: 61, scope: !11348)
!11363 = !DILocation(line: 431, column: 53, scope: !11348)
!11364 = !DILocation(line: 431, column: 2, scope: !11348)
!11365 = !DILocation(line: 435, column: 2, scope: !11348)
!11366 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1522, file: !1522, line: 438, type: !1412, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11367)
!11367 = !{!11368, !11369, !11370, !11371}
!11368 = !DILocalVariable(name: "dev", arg: 1, scope: !11366, file: !1522, line: 438, type: !1382)
!11369 = !DILocalVariable(name: "pins", arg: 2, scope: !11366, file: !1522, line: 439, type: !1409)
!11370 = !DILocalVariable(name: "cfg", scope: !11366, file: !1522, line: 441, type: !11340)
!11371 = !DILocalVariable(name: "gpio", scope: !11366, file: !1522, line: 442, type: !1455)
!11372 = !DILocation(line: 0, scope: !11366)
!11373 = !DILocation(line: 441, column: 45, scope: !11366)
!11374 = !DILocation(line: 442, column: 44, scope: !11366)
!11375 = !DILocation(line: 448, column: 2, scope: !11366)
!11376 = !DILocation(line: 450, column: 2, scope: !11366)
!11377 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1522, file: !1522, line: 453, type: !1412, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11378)
!11378 = !{!11379, !11380, !11381, !11382}
!11379 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !1522, line: 453, type: !1382)
!11380 = !DILocalVariable(name: "pins", arg: 2, scope: !11377, file: !1522, line: 454, type: !1409)
!11381 = !DILocalVariable(name: "cfg", scope: !11377, file: !1522, line: 456, type: !11340)
!11382 = !DILocalVariable(name: "gpio", scope: !11377, file: !1522, line: 457, type: !1455)
!11383 = !DILocation(line: 0, scope: !11377)
!11384 = !DILocation(line: 456, column: 45, scope: !11377)
!11385 = !DILocation(line: 457, column: 44, scope: !11377)
!11386 = !DILocation(line: 467, column: 2, scope: !11377)
!11387 = !DILocation(line: 470, column: 2, scope: !11377)
!11388 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1522, file: !1522, line: 473, type: !1412, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11389)
!11389 = !{!11390, !11391, !11392, !11393}
!11390 = !DILocalVariable(name: "dev", arg: 1, scope: !11388, file: !1522, line: 473, type: !1382)
!11391 = !DILocalVariable(name: "pins", arg: 2, scope: !11388, file: !1522, line: 474, type: !1409)
!11392 = !DILocalVariable(name: "cfg", scope: !11388, file: !1522, line: 476, type: !11340)
!11393 = !DILocalVariable(name: "gpio", scope: !11388, file: !1522, line: 477, type: !1455)
!11394 = !DILocation(line: 0, scope: !11388)
!11395 = !DILocation(line: 476, column: 45, scope: !11388)
!11396 = !DILocation(line: 477, column: 44, scope: !11388)
!11397 = !DILocation(line: 484, column: 2, scope: !11388)
!11398 = !DILocation(line: 487, column: 2, scope: !11388)
!11399 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1522, file: !1522, line: 594, type: !1418, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11400)
!11400 = !{!11401, !11402, !11403, !11404, !11405, !11406, !11408, !11409, !11410}
!11401 = !DILocalVariable(name: "dev", arg: 1, scope: !11399, file: !1522, line: 594, type: !1382)
!11402 = !DILocalVariable(name: "pin", arg: 2, scope: !11399, file: !1522, line: 595, type: !1397)
!11403 = !DILocalVariable(name: "mode", arg: 3, scope: !11399, file: !1522, line: 596, type: !1356)
!11404 = !DILocalVariable(name: "trig", arg: 4, scope: !11399, file: !1522, line: 597, type: !1362)
!11405 = !DILocalVariable(name: "cfg", scope: !11399, file: !1522, line: 599, type: !11340)
!11406 = !DILocalVariable(name: "data", scope: !11399, file: !1522, line: 600, type: !11407)
!11407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!11408 = !DILocalVariable(name: "edge", scope: !11399, file: !1522, line: 601, type: !125)
!11409 = !DILocalVariable(name: "err", scope: !11399, file: !1522, line: 602, type: !125)
!11410 = !DILabel(scope: !11399, name: "exit", file: !1522, line: 643)
!11411 = !DILocation(line: 0, scope: !11399)
!11412 = !DILocation(line: 599, column: 45, scope: !11399)
!11413 = !DILocation(line: 604, column: 6, scope: !11399)
!11414 = !DILocation(line: 605, column: 34, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !1522, line: 605, column: 7)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !1522, line: 604, column: 38)
!11417 = distinct !DILexicalBlock(scope: !11399, file: !1522, line: 604, column: 6)
!11418 = !DILocation(line: 605, column: 7, scope: !11415)
!11419 = !DILocation(line: 605, column: 47, scope: !11415)
!11420 = !DILocation(line: 605, column: 39, scope: !11415)
!11421 = !DILocation(line: 605, column: 7, scope: !11416)
!11422 = !DILocation(line: 606, column: 4, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11415, file: !1522, line: 605, column: 53)
!11424 = !DILocation(line: 607, column: 4, scope: !11423)
!11425 = !DILocation(line: 608, column: 4, scope: !11423)
!11426 = !DILocation(line: 609, column: 3, scope: !11423)
!11427 = !DILocation(line: 600, column: 38, scope: !11399)
!11428 = !DILocation(line: 620, column: 30, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11399, file: !1522, line: 620, column: 6)
!11430 = !DILocation(line: 620, column: 6, scope: !11429)
!11431 = !DILocation(line: 620, column: 57, scope: !11429)
!11432 = !DILocation(line: 620, column: 6, scope: !11399)
!11433 = !DILocation(line: 625, column: 29, scope: !11399)
!11434 = !DILocation(line: 625, column: 2, scope: !11399)
!11435 = !DILocation(line: 627, column: 2, scope: !11399)
!11436 = !DILocation(line: 630, column: 3, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11399, file: !1522, line: 627, column: 16)
!11438 = !DILocation(line: 633, column: 3, scope: !11437)
!11439 = !DILocation(line: 636, column: 3, scope: !11437)
!11440 = !DILocation(line: 639, column: 2, scope: !11399)
!11441 = !DILocation(line: 641, column: 2, scope: !11399)
!11442 = !DILocation(line: 643, column: 1, scope: !11399)
!11443 = !DILocation(line: 644, column: 2, scope: !11399)
!11444 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1522, file: !1522, line: 647, type: !1422, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11445)
!11445 = !{!11446, !11447, !11448, !11449}
!11446 = !DILocalVariable(name: "dev", arg: 1, scope: !11444, file: !1522, line: 647, type: !1382)
!11447 = !DILocalVariable(name: "callback", arg: 2, scope: !11444, file: !1522, line: 648, type: !1424)
!11448 = !DILocalVariable(name: "set", arg: 3, scope: !11444, file: !1522, line: 649, type: !153)
!11449 = !DILocalVariable(name: "data", scope: !11444, file: !1522, line: 651, type: !11407)
!11450 = !DILocation(line: 0, scope: !11444)
!11451 = !DILocation(line: 651, column: 38, scope: !11444)
!11452 = !DILocation(line: 653, column: 37, scope: !11444)
!11453 = !DILocation(line: 653, column: 9, scope: !11444)
!11454 = !DILocation(line: 653, column: 2, scope: !11444)
!11455 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11456, file: !11456, line: 38, type: !11457, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11460)
!11456 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11457 = !DISubroutineType(types: !11458)
!11458 = !{!125, !11459, !1424, !153}
!11459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!11460 = !{!11461, !11462, !11463}
!11461 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11455, file: !11456, line: 38, type: !11459)
!11462 = !DILocalVariable(name: "callback", arg: 2, scope: !11455, file: !11456, line: 39, type: !1424)
!11463 = !DILocalVariable(name: "set", arg: 3, scope: !11455, file: !11456, line: 40, type: !153)
!11464 = !DILocation(line: 0, scope: !11455)
!11465 = !DILocation(line: 45, column: 7, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11455, file: !11456, line: 45, column: 6)
!11467 = !DILocation(line: 45, column: 6, scope: !11455)
!11468 = !DILocation(line: 46, column: 56, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !11456, line: 46, column: 7)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !11456, line: 45, column: 38)
!11471 = !DILocation(line: 46, column: 8, scope: !11469)
!11472 = !DILocation(line: 46, column: 7, scope: !11470)
!11473 = !DILocation(line: 51, column: 13, scope: !11466)
!11474 = !DILocation(line: 56, column: 43, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !11456, line: 55, column: 11)
!11476 = distinct !DILexicalBlock(scope: !11455, file: !11456, line: 55, column: 6)
!11477 = !DILocation(line: 56, column: 3, scope: !11475)
!11478 = !DILocation(line: 57, column: 2, scope: !11475)
!11479 = !DILocation(line: 60, column: 1, scope: !11455)
!11480 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1429, file: !1429, line: 261, type: !11481, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11483)
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!153, !11459}
!11483 = !{!11484}
!11484 = !DILocalVariable(name: "list", arg: 1, scope: !11480, file: !1429, line: 261, type: !11459)
!11485 = !DILocation(line: 0, scope: !11480)
!11486 = !DILocation(line: 261, column: 1, scope: !11480)
!11487 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1429, file: !1429, line: 417, type: !11488, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11490)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{!153, !11459, !1601}
!11490 = !{!11491, !11492, !11493, !11494}
!11491 = !DILocalVariable(name: "list", arg: 1, scope: !11487, file: !1429, line: 417, type: !11459)
!11492 = !DILocalVariable(name: "node", arg: 2, scope: !11487, file: !1429, line: 417, type: !1601)
!11493 = !DILocalVariable(name: "prev", scope: !11487, file: !1429, line: 417, type: !1601)
!11494 = !DILocalVariable(name: "test", scope: !11487, file: !1429, line: 417, type: !1601)
!11495 = !DILocation(line: 0, scope: !11487)
!11496 = !DILocation(line: 417, column: 1, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11487, file: !1429, line: 417, column: 1)
!11498 = !DILocation(line: 417, column: 1, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11497, file: !1429, line: 417, column: 1)
!11500 = !DILocation(line: 417, column: 1, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !1429, line: 417, column: 1)
!11502 = distinct !DILexicalBlock(scope: !11499, file: !1429, line: 417, column: 1)
!11503 = !DILocation(line: 417, column: 1, scope: !11502)
!11504 = distinct !{!11504, !11496, !11496}
!11505 = !DILocation(line: 417, column: 1, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11501, file: !1429, line: 417, column: 1)
!11507 = !DILocation(line: 417, column: 1, scope: !11487)
!11508 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1429, file: !1429, line: 298, type: !11509, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11511)
!11509 = !DISubroutineType(types: !11510)
!11510 = !{null, !11459, !1601}
!11511 = !{!11512, !11513}
!11512 = !DILocalVariable(name: "list", arg: 1, scope: !11508, file: !1429, line: 298, type: !11459)
!11513 = !DILocalVariable(name: "node", arg: 2, scope: !11508, file: !1429, line: 298, type: !1601)
!11514 = !DILocation(line: 0, scope: !11508)
!11515 = !DILocation(line: 298, column: 1, scope: !11508)
!11516 = !DILocation(line: 298, column: 1, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11508, file: !1429, line: 298, column: 1)
!11518 = !DILocation(line: 298, column: 1, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11517, file: !1429, line: 298, column: 1)
!11520 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1429, file: !1429, line: 231, type: !11521, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11523)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{!1601, !11459}
!11523 = !{!11524}
!11524 = !DILocalVariable(name: "list", arg: 1, scope: !11520, file: !1429, line: 231, type: !11459)
!11525 = !DILocation(line: 0, scope: !11520)
!11526 = !DILocation(line: 233, column: 15, scope: !11520)
!11527 = !DILocation(line: 233, column: 2, scope: !11520)
!11528 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1429, file: !1429, line: 209, type: !11529, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11531)
!11529 = !DISubroutineType(types: !11530)
!11530 = !{null, !1601, !1601}
!11531 = !{!11532, !11533}
!11532 = !DILocalVariable(name: "parent", arg: 1, scope: !11528, file: !1429, line: 209, type: !1601)
!11533 = !DILocalVariable(name: "child", arg: 2, scope: !11528, file: !1429, line: 209, type: !1601)
!11534 = !DILocation(line: 0, scope: !11528)
!11535 = !DILocation(line: 211, column: 10, scope: !11528)
!11536 = !DILocation(line: 211, column: 15, scope: !11528)
!11537 = !DILocation(line: 212, column: 1, scope: !11528)
!11538 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1429, file: !1429, line: 214, type: !11509, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11539)
!11539 = !{!11540, !11541}
!11540 = !DILocalVariable(name: "list", arg: 1, scope: !11538, file: !1429, line: 214, type: !11459)
!11541 = !DILocalVariable(name: "node", arg: 2, scope: !11538, file: !1429, line: 214, type: !1601)
!11542 = !DILocation(line: 0, scope: !11538)
!11543 = !DILocation(line: 216, column: 8, scope: !11538)
!11544 = !DILocation(line: 216, column: 13, scope: !11538)
!11545 = !DILocation(line: 217, column: 1, scope: !11538)
!11546 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1429, file: !1429, line: 243, type: !11521, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11547)
!11547 = !{!11548}
!11548 = !DILocalVariable(name: "list", arg: 1, scope: !11546, file: !1429, line: 243, type: !11459)
!11549 = !DILocation(line: 0, scope: !11546)
!11550 = !DILocation(line: 245, column: 15, scope: !11546)
!11551 = !DILocation(line: 245, column: 2, scope: !11546)
!11552 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1429, file: !1429, line: 219, type: !11509, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11553)
!11553 = !{!11554, !11555}
!11554 = !DILocalVariable(name: "list", arg: 1, scope: !11552, file: !1429, line: 219, type: !11459)
!11555 = !DILocalVariable(name: "node", arg: 2, scope: !11552, file: !1429, line: 219, type: !1601)
!11556 = !DILocation(line: 0, scope: !11552)
!11557 = !DILocation(line: 221, column: 8, scope: !11552)
!11558 = !DILocation(line: 221, column: 13, scope: !11552)
!11559 = !DILocation(line: 222, column: 1, scope: !11552)
!11560 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1429, file: !1429, line: 401, type: !11561, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11563)
!11561 = !DISubroutineType(types: !11562)
!11562 = !{null, !11459, !1601, !1601}
!11563 = !{!11564, !11565, !11566}
!11564 = !DILocalVariable(name: "list", arg: 1, scope: !11560, file: !1429, line: 401, type: !11459)
!11565 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11560, file: !1429, line: 401, type: !1601)
!11566 = !DILocalVariable(name: "node", arg: 3, scope: !11560, file: !1429, line: 401, type: !1601)
!11567 = !DILocation(line: 0, scope: !11560)
!11568 = !DILocation(line: 401, column: 1, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11560, file: !1429, line: 401, column: 1)
!11570 = !DILocation(line: 0, scope: !11569)
!11571 = !DILocation(line: 401, column: 1, scope: !11560)
!11572 = !DILocation(line: 401, column: 1, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11569, file: !1429, line: 401, column: 1)
!11574 = !DILocation(line: 401, column: 1, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11573, file: !1429, line: 401, column: 1)
!11576 = !DILocation(line: 401, column: 1, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11575, file: !1429, line: 401, column: 1)
!11578 = !DILocation(line: 401, column: 1, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11569, file: !1429, line: 401, column: 1)
!11580 = !DILocation(line: 401, column: 1, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !1429, line: 401, column: 1)
!11582 = !DILocation(line: 401, column: 1, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11581, file: !1429, line: 401, column: 1)
!11584 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1429, file: !1429, line: 285, type: !11585, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11587)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!1601, !1601}
!11587 = !{!11588}
!11588 = !DILocalVariable(name: "node", arg: 1, scope: !11584, file: !1429, line: 285, type: !1601)
!11589 = !DILocation(line: 0, scope: !11584)
!11590 = !DILocation(line: 285, column: 1, scope: !11584)
!11591 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1429, file: !1429, line: 274, type: !11585, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11592)
!11592 = !{!11593}
!11593 = !DILocalVariable(name: "node", arg: 1, scope: !11591, file: !1429, line: 274, type: !1601)
!11594 = !DILocation(line: 0, scope: !11591)
!11595 = !DILocation(line: 274, column: 1, scope: !11591)
!11596 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1429, file: !1429, line: 204, type: !11585, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11597)
!11597 = !{!11598}
!11598 = !DILocalVariable(name: "node", arg: 1, scope: !11596, file: !1429, line: 204, type: !1601)
!11599 = !DILocation(line: 0, scope: !11596)
!11600 = !DILocation(line: 206, column: 15, scope: !11596)
!11601 = !DILocation(line: 206, column: 2, scope: !11596)
!11602 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1522, file: !1522, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11603)
!11603 = !{!11604, !11605, !11606}
!11604 = !DILocalVariable(name: "pin", arg: 1, scope: !11602, file: !1522, line: 342, type: !125)
!11605 = !DILocalVariable(name: "line", scope: !11602, file: !1522, line: 344, type: !208)
!11606 = !DILocalVariable(name: "port", scope: !11602, file: !1522, line: 345, type: !125)
!11607 = !DILocation(line: 0, scope: !11602)
!11608 = !DILocation(line: 344, column: 18, scope: !11602)
!11609 = !{i32 983040, i32 0}
!11610 = !DILocation(line: 356, column: 9, scope: !11602)
!11611 = !DILocation(line: 370, column: 2, scope: !11602)
!11612 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1522, file: !1522, line: 37, type: !894, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11613)
!11613 = !{!11614, !11615, !11616}
!11614 = !DILocalVariable(name: "line", arg: 1, scope: !11612, file: !1522, line: 37, type: !125)
!11615 = !DILocalVariable(name: "arg", arg: 2, scope: !11612, file: !1522, line: 37, type: !124)
!11616 = !DILocalVariable(name: "data", scope: !11612, file: !1522, line: 39, type: !11407)
!11617 = !DILocation(line: 0, scope: !11612)
!11618 = !DILocation(line: 41, column: 29, scope: !11612)
!11619 = !DILocation(line: 41, column: 39, scope: !11612)
!11620 = !DILocation(line: 41, column: 44, scope: !11612)
!11621 = !DILocation(line: 41, column: 2, scope: !11612)
!11622 = !DILocation(line: 42, column: 1, scope: !11612)
!11623 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1522, file: !1522, line: 376, type: !11624, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11626)
!11624 = !DISubroutineType(types: !11625)
!11625 = !{!125, !125, !125}
!11626 = !{!11627, !11628, !11629, !11631, !11632}
!11627 = !DILocalVariable(name: "port", arg: 1, scope: !11623, file: !1522, line: 376, type: !125)
!11628 = !DILocalVariable(name: "pin", arg: 2, scope: !11623, file: !1522, line: 376, type: !125)
!11629 = !DILocalVariable(name: "clk", scope: !11623, file: !1522, line: 386, type: !11630)
!11630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!11631 = !DILocalVariable(name: "pclken", scope: !11623, file: !1522, line: 387, type: !1648)
!11632 = !DILocalVariable(name: "ret", scope: !11623, file: !1522, line: 396, type: !125)
!11633 = !DILocation(line: 0, scope: !11623)
!11634 = !DILocation(line: 387, column: 2, scope: !11623)
!11635 = !DILocation(line: 387, column: 22, scope: !11623)
!11636 = !DILocation(line: 399, column: 8, scope: !11623)
!11637 = !DILocation(line: 400, column: 10, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11623, file: !1522, line: 400, column: 6)
!11639 = !DILocation(line: 400, column: 6, scope: !11623)
!11640 = !DILocation(line: 405, column: 2, scope: !11623)
!11641 = !DILocation(line: 407, column: 2, scope: !11623)
!11642 = !DILocation(line: 408, column: 1, scope: !11623)
!11643 = distinct !DISubprogram(name: "clock_control_on", scope: !981, file: !981, line: 123, type: !1487, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11644)
!11644 = !{!11645, !11646, !11647}
!11645 = !DILocalVariable(name: "dev", arg: 1, scope: !11643, file: !981, line: 123, type: !1382)
!11646 = !DILocalVariable(name: "sys", arg: 2, scope: !11643, file: !981, line: 124, type: !1071)
!11647 = !DILocalVariable(name: "api", scope: !11643, file: !981, line: 126, type: !1480)
!11648 = !DILocation(line: 0, scope: !11643)
!11649 = !DILocation(line: 127, column: 49, scope: !11643)
!11650 = !DILocation(line: 129, column: 14, scope: !11643)
!11651 = !DILocation(line: 129, column: 9, scope: !11643)
!11652 = !DILocation(line: 129, column: 2, scope: !11643)
!11653 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1522, file: !1522, line: 311, type: !10336, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11654)
!11654 = !{!11655, !11656, !11657}
!11655 = !DILocalVariable(name: "port", arg: 1, scope: !11653, file: !1522, line: 311, type: !125)
!11656 = !DILocalVariable(name: "pin", arg: 2, scope: !11653, file: !1522, line: 311, type: !125)
!11657 = !DILocalVariable(name: "line", scope: !11653, file: !1522, line: 313, type: !208)
!11658 = !DILocation(line: 0, scope: !11653)
!11659 = !DILocation(line: 313, column: 18, scope: !11653)
!11660 = !DILocation(line: 337, column: 2, scope: !11653)
!11661 = !DILocation(line: 340, column: 1, scope: !11653)
!11662 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1522, file: !1522, line: 295, type: !11663, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11665)
!11663 = !DISubroutineType(types: !11664)
!11664 = !{!208, !125}
!11665 = !{!11666}
!11666 = !DILocalVariable(name: "pin", arg: 1, scope: !11662, file: !1522, line: 295, type: !125)
!11667 = !DILocation(line: 0, scope: !11662)
!11668 = !DILocation(line: 307, column: 46, scope: !11662)
!11669 = !DILocation(line: 307, column: 27, scope: !11662)
!11670 = !DILocation(line: 307, column: 32, scope: !11662)
!11671 = !DILocation(line: 307, column: 14, scope: !11662)
!11672 = !DILocation(line: 307, column: 39, scope: !11662)
!11673 = !DILocation(line: 307, column: 2, scope: !11662)
!11674 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6859, file: !6859, line: 671, type: !11675, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11677)
!11675 = !DISubroutineType(types: !11676)
!11676 = !{null, !208, !208}
!11677 = !{!11678, !11679}
!11678 = !DILocalVariable(name: "Port", arg: 1, scope: !11674, file: !6859, line: 671, type: !208)
!11679 = !DILocalVariable(name: "Line", arg: 2, scope: !11674, file: !6859, line: 671, type: !208)
!11680 = !DILocation(line: 0, scope: !11674)
!11681 = !DILocation(line: 673, column: 3, scope: !11674)
!11682 = !DILocalVariable(name: "value", arg: 1, scope: !11683, file: !8305, line: 373, type: !208)
!11683 = distinct !DISubprogram(name: "__RBIT", scope: !8305, file: !8305, line: 373, type: !9551, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11684)
!11684 = !{!11682, !11685}
!11685 = !DILocalVariable(name: "result", scope: !11683, file: !8305, line: 375, type: !208)
!11686 = !DILocation(line: 0, scope: !11683, inlinedAt: !11687)
!11687 = distinct !DILocation(line: 673, column: 3, scope: !11674)
!11688 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11687)
!11689 = !{i64 3547373}
!11690 = !DILocalVariable(name: "value", arg: 1, scope: !11691, file: !8305, line: 403, type: !208)
!11691 = distinct !DISubprogram(name: "__CLZ", scope: !8305, file: !8305, line: 403, type: !11692, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11694)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{!150, !208}
!11694 = !{!11690}
!11695 = !DILocation(line: 0, scope: !11691, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 673, column: 3, scope: !11674)
!11697 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11696)
!11698 = !DILocation(line: 674, column: 1, scope: !11674)
!11699 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11456, file: !11456, line: 69, type: !11700, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11702)
!11700 = !DISubroutineType(types: !11701)
!11701 = !{null, !11459, !1382, !208}
!11702 = !{!11703, !11704, !11705, !11706, !11707}
!11703 = !DILocalVariable(name: "list", arg: 1, scope: !11699, file: !11456, line: 69, type: !11459)
!11704 = !DILocalVariable(name: "port", arg: 2, scope: !11699, file: !11456, line: 70, type: !1382)
!11705 = !DILocalVariable(name: "pins", arg: 3, scope: !11699, file: !11456, line: 71, type: !208)
!11706 = !DILocalVariable(name: "cb", scope: !11699, file: !11456, line: 73, type: !1424)
!11707 = !DILocalVariable(name: "tmp", scope: !11699, file: !11456, line: 73, type: !1424)
!11708 = !DILocation(line: 0, scope: !11699)
!11709 = !DILocation(line: 75, column: 2, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11699, file: !11456, line: 75, column: 2)
!11711 = !DILocation(line: 0, scope: !11710)
!11712 = !DILocation(line: 76, column: 11, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !11456, line: 76, column: 7)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !11456, line: 75, column: 57)
!11715 = distinct !DILexicalBlock(scope: !11710, file: !11456, line: 75, column: 2)
!11716 = !DILocation(line: 76, column: 20, scope: !11713)
!11717 = !DILocation(line: 76, column: 7, scope: !11714)
!11718 = !DILocation(line: 78, column: 8, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11713, file: !11456, line: 76, column: 28)
!11720 = !DILocation(line: 78, column: 4, scope: !11719)
!11721 = !DILocation(line: 79, column: 3, scope: !11719)
!11722 = !DILocation(line: 75, column: 2, scope: !11715)
!11723 = !DILocation(line: 81, column: 1, scope: !11699)
!11724 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6859, file: !6859, line: 710, type: !9551, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11725)
!11725 = !{!11726}
!11726 = !DILocalVariable(name: "Line", arg: 1, scope: !11724, file: !6859, line: 710, type: !208)
!11727 = !DILocation(line: 0, scope: !11724)
!11728 = !DILocation(line: 712, column: 21, scope: !11724)
!11729 = !DILocation(line: 0, scope: !11683, inlinedAt: !11730)
!11730 = distinct !DILocation(line: 712, column: 76, scope: !11724)
!11731 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11730)
!11732 = !DILocation(line: 0, scope: !11691, inlinedAt: !11733)
!11733 = distinct !DILocation(line: 712, column: 76, scope: !11724)
!11734 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11733)
!11735 = !DILocation(line: 712, column: 73, scope: !11724)
!11736 = !DILocation(line: 712, column: 3, scope: !11724)
!11737 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11738, file: !11738, line: 910, type: !11739, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11741)
!11738 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11739 = !DISubroutineType(types: !11740)
!11740 = !{null, !1455, !208}
!11741 = !{!11742, !11743}
!11742 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11737, file: !11738, line: 910, type: !1455)
!11743 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11737, file: !11738, line: 910, type: !208)
!11744 = !DILocation(line: 0, scope: !11737)
!11745 = !DILocation(line: 912, column: 3, scope: !11737)
!11746 = !DILocation(line: 913, column: 1, scope: !11737)
!11747 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11738, file: !11738, line: 823, type: !11748, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11750)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!208, !1455}
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11747, file: !11738, line: 823, type: !1455)
!11752 = !DILocation(line: 0, scope: !11747)
!11753 = !DILocation(line: 825, column: 21, scope: !11747)
!11754 = !DILocation(line: 825, column: 3, scope: !11747)
!11755 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11738, file: !11738, line: 812, type: !11739, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11756)
!11756 = !{!11757, !11758}
!11757 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11755, file: !11738, line: 812, type: !1455)
!11758 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11755, file: !11738, line: 812, type: !208)
!11759 = !DILocation(line: 0, scope: !11755)
!11760 = !DILocation(line: 814, column: 3, scope: !11755)
!11761 = !DILocation(line: 815, column: 1, scope: !11755)
!11762 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11738, file: !11738, line: 771, type: !11748, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11763)
!11763 = !{!11764}
!11764 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11762, file: !11738, line: 771, type: !1455)
!11765 = !DILocation(line: 0, scope: !11762)
!11766 = !DILocation(line: 773, column: 21, scope: !11762)
!11767 = !DILocation(line: 773, column: 3, scope: !11762)
!11768 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1522, file: !1522, line: 47, type: !11769, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11771)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{!125, !1398, !387}
!11771 = !{!11772, !11773}
!11772 = !DILocalVariable(name: "flags", arg: 1, scope: !11768, file: !1522, line: 47, type: !1398)
!11773 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11768, file: !1522, line: 47, type: !387)
!11774 = !DILocation(line: 0, scope: !11768)
!11775 = !DILocation(line: 50, column: 13, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11768, file: !1522, line: 50, column: 6)
!11777 = !DILocation(line: 50, column: 28, scope: !11776)
!11778 = !DILocation(line: 50, column: 6, scope: !11768)
!11779 = !DILocation(line: 53, column: 11, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11776, file: !1522, line: 50, column: 34)
!11781 = !DILocation(line: 55, column: 14, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11780, file: !1522, line: 55, column: 7)
!11783 = !DILocation(line: 55, column: 35, scope: !11782)
!11784 = !DILocation(line: 55, column: 7, scope: !11780)
!11785 = !DILocation(line: 56, column: 14, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !1522, line: 56, column: 8)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !1522, line: 55, column: 41)
!11788 = !DILocation(line: 56, column: 8, scope: !11787)
!11789 = !DILocation(line: 0, scope: !11782)
!11790 = !DILocation(line: 66, column: 14, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11780, file: !1522, line: 66, column: 7)
!11792 = !DILocation(line: 66, column: 30, scope: !11791)
!11793 = !DILocation(line: 66, column: 7, scope: !11780)
!11794 = !DILocation(line: 67, column: 12, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11791, file: !1522, line: 66, column: 36)
!11796 = !DILocation(line: 68, column: 3, scope: !11795)
!11797 = !DILocation(line: 68, column: 21, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11791, file: !1522, line: 68, column: 14)
!11799 = !DILocation(line: 68, column: 39, scope: !11798)
!11800 = !DILocation(line: 68, column: 14, scope: !11791)
!11801 = !DILocation(line: 69, column: 12, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11798, file: !1522, line: 68, column: 45)
!11803 = !DILocation(line: 70, column: 3, scope: !11802)
!11804 = !DILocation(line: 72, column: 21, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11776, file: !1522, line: 72, column: 14)
!11806 = !DILocation(line: 72, column: 35, scope: !11805)
!11807 = !DILocation(line: 72, column: 14, scope: !11776)
!11808 = !DILocation(line: 77, column: 14, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11810, file: !1522, line: 77, column: 7)
!11810 = distinct !DILexicalBlock(scope: !11805, file: !1522, line: 72, column: 41)
!11811 = !DILocation(line: 77, column: 30, scope: !11809)
!11812 = !DILocation(line: 77, column: 7, scope: !11810)
!11813 = !DILocation(line: 0, scope: !11776)
!11814 = !DILocation(line: 90, column: 1, scope: !11768)
!11815 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1522, file: !1522, line: 157, type: !11816, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{null, !1382, !125, !125, !125}
!11818 = !{!11819, !11820, !11821, !11822, !11823, !11824, !11825, !11826, !11827, !11828, !11829}
!11819 = !DILocalVariable(name: "dev", arg: 1, scope: !11815, file: !1522, line: 157, type: !1382)
!11820 = !DILocalVariable(name: "pin", arg: 2, scope: !11815, file: !1522, line: 157, type: !125)
!11821 = !DILocalVariable(name: "conf", arg: 3, scope: !11815, file: !1522, line: 158, type: !125)
!11822 = !DILocalVariable(name: "func", arg: 4, scope: !11815, file: !1522, line: 158, type: !125)
!11823 = !DILocalVariable(name: "cfg", scope: !11815, file: !1522, line: 160, type: !11340)
!11824 = !DILocalVariable(name: "gpio", scope: !11815, file: !1522, line: 161, type: !1455)
!11825 = !DILocalVariable(name: "pin_ll", scope: !11815, file: !1522, line: 163, type: !125)
!11826 = !DILocalVariable(name: "mode", scope: !11815, file: !1522, line: 227, type: !32)
!11827 = !DILocalVariable(name: "otype", scope: !11815, file: !1522, line: 227, type: !32)
!11828 = !DILocalVariable(name: "ospeed", scope: !11815, file: !1522, line: 227, type: !32)
!11829 = !DILocalVariable(name: "pupd", scope: !11815, file: !1522, line: 227, type: !32)
!11830 = !DILocation(line: 0, scope: !11815)
!11831 = !DILocation(line: 160, column: 45, scope: !11815)
!11832 = !DILocation(line: 161, column: 44, scope: !11815)
!11833 = !DILocation(line: 163, column: 15, scope: !11815)
!11834 = !DILocation(line: 229, column: 14, scope: !11815)
!11835 = !DILocation(line: 246, column: 47, scope: !11815)
!11836 = !DILocation(line: 246, column: 2, scope: !11815)
!11837 = !DILocation(line: 248, column: 43, scope: !11815)
!11838 = !DILocation(line: 248, column: 2, scope: !11815)
!11839 = !DILocation(line: 250, column: 40, scope: !11815)
!11840 = !DILocation(line: 250, column: 2, scope: !11815)
!11841 = !DILocation(line: 252, column: 11, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11815, file: !1522, line: 252, column: 6)
!11843 = !DILocation(line: 252, column: 6, scope: !11815)
!11844 = !DILocation(line: 253, column: 11, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !1522, line: 253, column: 7)
!11846 = distinct !DILexicalBlock(scope: !11842, file: !1522, line: 252, column: 36)
!11847 = !DILocation(line: 253, column: 7, scope: !11846)
!11848 = !DILocation(line: 254, column: 4, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11845, file: !1522, line: 253, column: 16)
!11850 = !DILocation(line: 255, column: 3, scope: !11849)
!11851 = !DILocation(line: 256, column: 4, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11845, file: !1522, line: 255, column: 10)
!11853 = !DILocation(line: 260, column: 40, scope: !11815)
!11854 = !DILocation(line: 260, column: 2, scope: !11815)
!11855 = !DILocation(line: 265, column: 1, scope: !11815)
!11856 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1522, file: !1522, line: 137, type: !11663, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11857)
!11857 = !{!11858, !11859}
!11858 = !DILocalVariable(name: "pin", arg: 1, scope: !11856, file: !1522, line: 137, type: !125)
!11859 = !DILocalVariable(name: "pinval", scope: !11856, file: !1522, line: 139, type: !208)
!11860 = !DILocation(line: 0, scope: !11856)
!11861 = !DILocation(line: 149, column: 13, scope: !11856)
!11862 = !DILocation(line: 151, column: 2, scope: !11856)
!11863 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11738, file: !11738, line: 342, type: !11864, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11866)
!11864 = !DISubroutineType(types: !11865)
!11865 = !{null, !1455, !208, !208}
!11866 = !{!11867, !11868, !11869}
!11867 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11863, file: !11738, line: 342, type: !1455)
!11868 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11863, file: !11738, line: 342, type: !208)
!11869 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11863, file: !11738, line: 342, type: !208)
!11870 = !DILocation(line: 0, scope: !11863)
!11871 = !DILocation(line: 344, column: 3, scope: !11863)
!11872 = !DILocation(line: 345, column: 1, scope: !11863)
!11873 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11738, file: !11738, line: 413, type: !11864, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11874)
!11874 = !{!11875, !11876, !11877}
!11875 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11873, file: !11738, line: 413, type: !1455)
!11876 = !DILocalVariable(name: "Pin", arg: 2, scope: !11873, file: !11738, line: 413, type: !208)
!11877 = !DILocalVariable(name: "Speed", arg: 3, scope: !11873, file: !11738, line: 413, type: !208)
!11878 = !DILocation(line: 0, scope: !11873)
!11879 = !DILocation(line: 415, column: 3, scope: !11873)
!11880 = !DILocation(line: 0, scope: !11683, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 415, column: 3, scope: !11873)
!11882 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11881)
!11883 = !DILocation(line: 0, scope: !11691, inlinedAt: !11884)
!11884 = distinct !DILocation(line: 415, column: 3, scope: !11873)
!11885 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11884)
!11886 = !DILocation(line: 0, scope: !11683, inlinedAt: !11887)
!11887 = distinct !DILocation(line: 415, column: 3, scope: !11873)
!11888 = !DILocation(line: 0, scope: !11691, inlinedAt: !11889)
!11889 = distinct !DILocation(line: 415, column: 3, scope: !11873)
!11890 = !DILocation(line: 417, column: 1, scope: !11873)
!11891 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11738, file: !11738, line: 484, type: !11864, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11892)
!11892 = !{!11893, !11894, !11895}
!11893 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11891, file: !11738, line: 484, type: !1455)
!11894 = !DILocalVariable(name: "Pin", arg: 2, scope: !11891, file: !11738, line: 484, type: !208)
!11895 = !DILocalVariable(name: "Pull", arg: 3, scope: !11891, file: !11738, line: 484, type: !208)
!11896 = !DILocation(line: 0, scope: !11891)
!11897 = !DILocation(line: 486, column: 3, scope: !11891)
!11898 = !DILocation(line: 0, scope: !11683, inlinedAt: !11899)
!11899 = distinct !DILocation(line: 486, column: 3, scope: !11891)
!11900 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11899)
!11901 = !DILocation(line: 0, scope: !11691, inlinedAt: !11902)
!11902 = distinct !DILocation(line: 486, column: 3, scope: !11891)
!11903 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11902)
!11904 = !DILocation(line: 0, scope: !11683, inlinedAt: !11905)
!11905 = distinct !DILocation(line: 486, column: 3, scope: !11891)
!11906 = !DILocation(line: 0, scope: !11691, inlinedAt: !11907)
!11907 = distinct !DILocation(line: 486, column: 3, scope: !11891)
!11908 = !DILocation(line: 487, column: 1, scope: !11891)
!11909 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11738, file: !11738, line: 556, type: !11864, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11910)
!11910 = !{!11911, !11912, !11913}
!11911 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11909, file: !11738, line: 556, type: !1455)
!11912 = !DILocalVariable(name: "Pin", arg: 2, scope: !11909, file: !11738, line: 556, type: !208)
!11913 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11909, file: !11738, line: 556, type: !208)
!11914 = !DILocation(line: 0, scope: !11909)
!11915 = !DILocation(line: 558, column: 3, scope: !11909)
!11916 = !DILocation(line: 0, scope: !11683, inlinedAt: !11917)
!11917 = distinct !DILocation(line: 558, column: 3, scope: !11909)
!11918 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11917)
!11919 = !DILocation(line: 0, scope: !11691, inlinedAt: !11920)
!11920 = distinct !DILocation(line: 558, column: 3, scope: !11909)
!11921 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11920)
!11922 = !DILocation(line: 0, scope: !11683, inlinedAt: !11923)
!11923 = distinct !DILocation(line: 558, column: 3, scope: !11909)
!11924 = !DILocation(line: 0, scope: !11691, inlinedAt: !11925)
!11925 = distinct !DILocation(line: 558, column: 3, scope: !11909)
!11926 = !DILocation(line: 560, column: 1, scope: !11909)
!11927 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11738, file: !11738, line: 633, type: !11864, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11928)
!11928 = !{!11929, !11930, !11931}
!11929 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11927, file: !11738, line: 633, type: !1455)
!11930 = !DILocalVariable(name: "Pin", arg: 2, scope: !11927, file: !11738, line: 633, type: !208)
!11931 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11927, file: !11738, line: 633, type: !208)
!11932 = !DILocation(line: 0, scope: !11927)
!11933 = !DILocation(line: 635, column: 3, scope: !11927)
!11934 = !DILocation(line: 0, scope: !11683, inlinedAt: !11935)
!11935 = distinct !DILocation(line: 635, column: 3, scope: !11927)
!11936 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11935)
!11937 = !DILocation(line: 0, scope: !11691, inlinedAt: !11938)
!11938 = distinct !DILocation(line: 635, column: 3, scope: !11927)
!11939 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11938)
!11940 = !DILocation(line: 0, scope: !11683, inlinedAt: !11941)
!11941 = distinct !DILocation(line: 635, column: 3, scope: !11927)
!11942 = !DILocation(line: 0, scope: !11691, inlinedAt: !11943)
!11943 = distinct !DILocation(line: 635, column: 3, scope: !11927)
!11944 = !DILocation(line: 637, column: 1, scope: !11927)
!11945 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11738, file: !11738, line: 273, type: !11864, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11946)
!11946 = !{!11947, !11948, !11949}
!11947 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11945, file: !11738, line: 273, type: !1455)
!11948 = !DILocalVariable(name: "Pin", arg: 2, scope: !11945, file: !11738, line: 273, type: !208)
!11949 = !DILocalVariable(name: "Mode", arg: 3, scope: !11945, file: !11738, line: 273, type: !208)
!11950 = !DILocation(line: 0, scope: !11945)
!11951 = !DILocation(line: 275, column: 3, scope: !11945)
!11952 = !DILocation(line: 0, scope: !11683, inlinedAt: !11953)
!11953 = distinct !DILocation(line: 275, column: 3, scope: !11945)
!11954 = !DILocation(line: 380, column: 4, scope: !11683, inlinedAt: !11953)
!11955 = !DILocation(line: 0, scope: !11691, inlinedAt: !11956)
!11956 = distinct !DILocation(line: 275, column: 3, scope: !11945)
!11957 = !DILocation(line: 414, column: 7, scope: !11691, inlinedAt: !11956)
!11958 = !DILocation(line: 0, scope: !11683, inlinedAt: !11959)
!11959 = distinct !DILocation(line: 275, column: 3, scope: !11945)
!11960 = !DILocation(line: 0, scope: !11691, inlinedAt: !11961)
!11961 = distinct !DILocation(line: 275, column: 3, scope: !11945)
!11962 = !DILocation(line: 276, column: 1, scope: !11945)
!11963 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1522, file: !1522, line: 698, type: !1535, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11964)
!11964 = !{!11965, !11966, !11967}
!11965 = !DILocalVariable(name: "dev", arg: 1, scope: !11963, file: !1522, line: 698, type: !1382)
!11966 = !DILocalVariable(name: "data", scope: !11963, file: !1522, line: 700, type: !11407)
!11967 = !DILocalVariable(name: "ret", scope: !11963, file: !1522, line: 701, type: !125)
!11968 = !DILocation(line: 0, scope: !11963)
!11969 = !DILocation(line: 700, column: 38, scope: !11963)
!11970 = !DILocation(line: 703, column: 8, scope: !11963)
!11971 = !DILocation(line: 703, column: 12, scope: !11963)
!11972 = !DILocation(line: 705, column: 7, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11963, file: !1522, line: 705, column: 6)
!11974 = !DILocation(line: 705, column: 6, scope: !11963)
!11975 = !DILocation(line: 722, column: 8, scope: !11963)
!11976 = !DILocation(line: 723, column: 10, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11963, file: !1522, line: 723, column: 6)
!11978 = !DILocation(line: 723, column: 6, scope: !11963)
!11979 = !DILocation(line: 731, column: 1, scope: !11963)
!11980 = distinct !DISubprogram(name: "device_is_ready", scope: !4205, file: !4205, line: 47, type: !11981, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11983)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!153, !1382}
!11983 = !{!11984}
!11984 = !DILocalVariable(name: "dev", arg: 1, scope: !11980, file: !4205, line: 47, type: !1382)
!11985 = !DILocation(line: 0, scope: !11980)
!11986 = !DILocation(line: 55, column: 2, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11980, file: !4205, line: 55, column: 2)
!11988 = !{i64 2155036347}
!11989 = !DILocation(line: 56, column: 9, scope: !11980)
!11990 = !DILocation(line: 56, column: 2, scope: !11980)
!11991 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1522, file: !1522, line: 270, type: !11992, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11994)
!11992 = !DISubroutineType(types: !11993)
!11993 = !{!125, !1382, !153}
!11994 = !{!11995, !11996, !11997, !11998, !11999}
!11995 = !DILocalVariable(name: "dev", arg: 1, scope: !11991, file: !1522, line: 270, type: !1382)
!11996 = !DILocalVariable(name: "on", arg: 2, scope: !11991, file: !1522, line: 270, type: !153)
!11997 = !DILocalVariable(name: "cfg", scope: !11991, file: !1522, line: 272, type: !11340)
!11998 = !DILocalVariable(name: "ret", scope: !11991, file: !1522, line: 273, type: !125)
!11999 = !DILocalVariable(name: "clk", scope: !11991, file: !1522, line: 278, type: !11630)
!12000 = !DILocation(line: 0, scope: !11991)
!12001 = !DILocation(line: 272, column: 45, scope: !11991)
!12002 = !DILocation(line: 282, column: 38, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !1522, line: 280, column: 10)
!12004 = distinct !DILexicalBlock(scope: !11991, file: !1522, line: 280, column: 6)
!12005 = !DILocation(line: 282, column: 6, scope: !12003)
!12006 = !DILocation(line: 281, column: 9, scope: !12003)
!12007 = !DILocation(line: 293, column: 1, scope: !11991)
!12008 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !11981, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !12009)
!12009 = !{!12010}
!12010 = !DILocalVariable(name: "dev", arg: 1, scope: !12008, file: !137, line: 730, type: !1382)
!12011 = !DILocation(line: 0, scope: !12008)
!12012 = !DILocation(line: 732, column: 9, scope: !12008)
!12013 = !DILocation(line: 732, column: 2, scope: !12008)
!12014 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1522, file: !1522, line: 496, type: !12015, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !12017)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{!125, !1382, !125, !125, !125}
!12017 = !{!12018, !12019, !12020, !12021, !12022, !12023}
!12018 = !DILocalVariable(name: "dev", arg: 1, scope: !12014, file: !1522, line: 496, type: !1382)
!12019 = !DILocalVariable(name: "pin", arg: 2, scope: !12014, file: !1522, line: 496, type: !125)
!12020 = !DILocalVariable(name: "conf", arg: 3, scope: !12014, file: !1522, line: 496, type: !125)
!12021 = !DILocalVariable(name: "func", arg: 4, scope: !12014, file: !1522, line: 496, type: !125)
!12022 = !DILocalVariable(name: "ret", scope: !12014, file: !1522, line: 498, type: !125)
!12023 = !DILocalVariable(name: "gpio_out", scope: !12024, file: !1522, line: 508, type: !208)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !1522, line: 507, column: 27)
!12025 = distinct !DILexicalBlock(scope: !12014, file: !1522, line: 507, column: 6)
!12026 = !DILocation(line: 0, scope: !12014)
!12027 = !DILocation(line: 505, column: 2, scope: !12014)
!12028 = !DILocation(line: 507, column: 11, scope: !12025)
!12029 = !DILocation(line: 507, column: 6, scope: !12014)
!12030 = !DILocation(line: 508, column: 28, scope: !12024)
!12031 = !DILocation(line: 0, scope: !12024)
!12032 = !DILocation(line: 510, column: 16, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12024, file: !1522, line: 510, column: 7)
!12034 = !DILocation(line: 0, scope: !12033)
!12035 = !DILocation(line: 510, column: 7, scope: !12024)
!12036 = !DILocation(line: 511, column: 4, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12033, file: !1522, line: 510, column: 32)
!12038 = !DILocation(line: 512, column: 3, scope: !12037)
!12039 = !DILocation(line: 513, column: 4, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !1522, line: 512, column: 39)
!12041 = distinct !DILexicalBlock(scope: !12033, file: !1522, line: 512, column: 14)
!12042 = !DILocation(line: 514, column: 3, scope: !12040)
!12043 = !DILocation(line: 518, column: 1, scope: !12014)
!12044 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1809, file: !1809, line: 526, type: !1710, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12045)
!12045 = !{!12046, !12047, !12048}
!12046 = !DILocalVariable(name: "dev", arg: 1, scope: !12044, file: !1809, line: 526, type: !1712)
!12047 = !DILocalVariable(name: "c", arg: 2, scope: !12044, file: !1809, line: 526, type: !1132)
!12048 = !DILocalVariable(name: "config", scope: !12044, file: !1809, line: 528, type: !12049)
!12049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!12050 = !DILocation(line: 0, scope: !12044)
!12051 = !DILocation(line: 528, column: 48, scope: !12044)
!12052 = !DILocation(line: 531, column: 40, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12044, file: !1809, line: 531, column: 6)
!12054 = !DILocation(line: 531, column: 6, scope: !12053)
!12055 = !DILocation(line: 531, column: 6, scope: !12044)
!12056 = !DILocation(line: 532, column: 34, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12053, file: !1809, line: 531, column: 48)
!12058 = !DILocation(line: 532, column: 3, scope: !12057)
!12059 = !DILocation(line: 533, column: 2, scope: !12057)
!12060 = !DILocation(line: 539, column: 42, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12044, file: !1809, line: 539, column: 6)
!12062 = !DILocation(line: 539, column: 7, scope: !12061)
!12063 = !DILocation(line: 539, column: 6, scope: !12044)
!12064 = !DILocation(line: 543, column: 52, scope: !12044)
!12065 = !DILocation(line: 543, column: 22, scope: !12044)
!12066 = !DILocation(line: 543, column: 5, scope: !12044)
!12067 = !DILocation(line: 545, column: 2, scope: !12044)
!12068 = !DILocation(line: 546, column: 1, scope: !12044)
!12069 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1809, file: !1809, line: 548, type: !1729, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12070)
!12070 = !{!12071, !12072, !12073, !12074}
!12071 = !DILocalVariable(name: "dev", arg: 1, scope: !12069, file: !1809, line: 548, type: !1712)
!12072 = !DILocalVariable(name: "c", arg: 2, scope: !12069, file: !1809, line: 549, type: !151)
!12073 = !DILocalVariable(name: "config", scope: !12069, file: !1809, line: 551, type: !12049)
!12074 = !DILocalVariable(name: "key", scope: !12069, file: !1809, line: 555, type: !32)
!12075 = !DILocation(line: 0, scope: !12069)
!12076 = !DILocation(line: 551, column: 48, scope: !12069)
!12077 = !DILocation(line: 562, column: 2, scope: !12069)
!12078 = !DILocation(line: 563, column: 41, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !1809, line: 563, column: 7)
!12080 = distinct !DILexicalBlock(scope: !12069, file: !1809, line: 562, column: 12)
!12081 = !DILocation(line: 563, column: 7, scope: !12079)
!12082 = !DILocation(line: 563, column: 7, scope: !12080)
!12083 = !DILocation(line: 55, column: 2, scope: !12084, inlinedAt: !12088)
!12084 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12085)
!12085 = !{!12086, !12087}
!12086 = !DILocalVariable(name: "key", scope: !12084, file: !6838, line: 44, type: !32)
!12087 = !DILocalVariable(name: "tmp", scope: !12084, file: !6838, line: 53, type: !32)
!12088 = distinct !DILocation(line: 564, column: 10, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12079, file: !1809, line: 563, column: 49)
!12090 = !{i64 2273044}
!12091 = !DILocation(line: 0, scope: !12084, inlinedAt: !12088)
!12092 = !DILocation(line: 565, column: 42, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12089, file: !1809, line: 565, column: 8)
!12094 = !DILocation(line: 565, column: 8, scope: !12093)
!12095 = !DILocation(line: 565, column: 8, scope: !12089)
!12096 = !DILocalVariable(name: "key", arg: 1, scope: !12097, file: !6838, line: 84, type: !32)
!12097 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12098)
!12098 = !{!12096}
!12099 = !DILocation(line: 0, scope: !12097, inlinedAt: !12100)
!12100 = distinct !DILocation(line: 568, column: 4, scope: !12089)
!12101 = !DILocation(line: 95, column: 2, scope: !12097, inlinedAt: !12100)
!12102 = !{i64 2273861}
!12103 = !DILocation(line: 569, column: 3, scope: !12089)
!12104 = distinct !{!12104, !12077, !12105}
!12105 = !DILocation(line: 570, column: 2, scope: !12069)
!12106 = !DILocation(line: 592, column: 33, scope: !12069)
!12107 = !DILocation(line: 592, column: 2, scope: !12069)
!12108 = !DILocation(line: 0, scope: !12097, inlinedAt: !12109)
!12109 = distinct !DILocation(line: 593, column: 2, scope: !12069)
!12110 = !DILocation(line: 95, column: 2, scope: !12097, inlinedAt: !12109)
!12111 = !DILocation(line: 594, column: 1, scope: !12069)
!12112 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1809, file: !1809, line: 596, type: !1733, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12113)
!12113 = !{!12114, !12115, !12116}
!12114 = !DILocalVariable(name: "dev", arg: 1, scope: !12112, file: !1809, line: 596, type: !1712)
!12115 = !DILocalVariable(name: "config", scope: !12112, file: !1809, line: 598, type: !12049)
!12116 = !DILocalVariable(name: "err", scope: !12112, file: !1809, line: 599, type: !208)
!12117 = !DILocation(line: 0, scope: !12112)
!12118 = !DILocation(line: 598, column: 48, scope: !12112)
!12119 = !DILocation(line: 606, column: 40, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 606, column: 6)
!12121 = !DILocation(line: 606, column: 6, scope: !12120)
!12122 = !DILocation(line: 606, column: 6, scope: !12112)
!12123 = !DILocation(line: 610, column: 39, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 610, column: 6)
!12125 = !DILocation(line: 610, column: 6, scope: !12124)
!12126 = !DILocation(line: 610, column: 6, scope: !12112)
!12127 = !DILocation(line: 614, column: 39, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 614, column: 6)
!12129 = !DILocation(line: 614, column: 6, scope: !12128)
!12130 = !DILocation(line: 614, column: 6, scope: !12112)
!12131 = !DILocation(line: 619, column: 40, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 619, column: 6)
!12133 = !DILocation(line: 619, column: 6, scope: !12132)
!12134 = !DILocation(line: 619, column: 6, scope: !12112)
!12135 = !DILocation(line: 623, column: 10, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 623, column: 6)
!12137 = !DILocation(line: 623, column: 6, scope: !12112)
!12138 = !DILocation(line: 624, column: 34, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12136, file: !1809, line: 623, column: 24)
!12140 = !DILocation(line: 624, column: 3, scope: !12139)
!12141 = !DILocation(line: 625, column: 2, scope: !12139)
!12142 = !DILocation(line: 632, column: 10, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 632, column: 6)
!12144 = !DILocation(line: 632, column: 6, scope: !12112)
!12145 = !DILocation(line: 633, column: 34, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12143, file: !1809, line: 632, column: 32)
!12147 = !DILocation(line: 633, column: 3, scope: !12146)
!12148 = !DILocation(line: 634, column: 2, scope: !12146)
!12149 = !DILocation(line: 636, column: 10, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 636, column: 6)
!12151 = !DILocation(line: 636, column: 6, scope: !12112)
!12152 = !DILocation(line: 637, column: 33, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12150, file: !1809, line: 636, column: 31)
!12154 = !DILocation(line: 637, column: 3, scope: !12153)
!12155 = !DILocation(line: 638, column: 2, scope: !12153)
!12156 = !DILocation(line: 640, column: 10, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12112, file: !1809, line: 640, column: 6)
!12158 = !DILocation(line: 640, column: 6, scope: !12112)
!12159 = !DILocation(line: 641, column: 33, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12157, file: !1809, line: 640, column: 32)
!12161 = !DILocation(line: 641, column: 3, scope: !12160)
!12162 = !DILocation(line: 642, column: 2, scope: !12160)
!12163 = !DILocation(line: 646, column: 32, scope: !12112)
!12164 = !DILocation(line: 646, column: 2, scope: !12112)
!12165 = !DILocation(line: 648, column: 2, scope: !12112)
!12166 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1809, file: !1809, line: 419, type: !1737, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12167)
!12167 = !{!12168, !12169, !12170, !12171, !12173, !12174, !12175, !12176}
!12168 = !DILocalVariable(name: "dev", arg: 1, scope: !12166, file: !1809, line: 419, type: !1712)
!12169 = !DILocalVariable(name: "cfg", arg: 2, scope: !12166, file: !1809, line: 420, type: !1739)
!12170 = !DILocalVariable(name: "config", scope: !12166, file: !1809, line: 422, type: !12049)
!12171 = !DILocalVariable(name: "data", scope: !12166, file: !1809, line: 423, type: !12172)
!12172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!12173 = !DILocalVariable(name: "parity", scope: !12166, file: !1809, line: 424, type: !8573)
!12174 = !DILocalVariable(name: "stopbits", scope: !12166, file: !1809, line: 425, type: !8573)
!12175 = !DILocalVariable(name: "databits", scope: !12166, file: !1809, line: 426, type: !8573)
!12176 = !DILocalVariable(name: "flowctrl", scope: !12166, file: !1809, line: 428, type: !8573)
!12177 = !DILocation(line: 0, scope: !12166)
!12178 = !DILocation(line: 422, column: 48, scope: !12166)
!12179 = !DILocation(line: 423, column: 38, scope: !12166)
!12180 = !DILocation(line: 424, column: 56, scope: !12166)
!12181 = !DILocation(line: 424, column: 51, scope: !12166)
!12182 = !DILocation(line: 424, column: 26, scope: !12166)
!12183 = !DILocation(line: 425, column: 60, scope: !12166)
!12184 = !DILocation(line: 425, column: 55, scope: !12166)
!12185 = !DILocation(line: 425, column: 28, scope: !12166)
!12186 = !DILocation(line: 426, column: 60, scope: !12166)
!12187 = !DILocation(line: 426, column: 55, scope: !12166)
!12188 = !DILocation(line: 426, column: 28, scope: !12166)
!12189 = !DILocation(line: 428, column: 58, scope: !12166)
!12190 = !DILocation(line: 428, column: 53, scope: !12166)
!12191 = !DILocation(line: 428, column: 28, scope: !12166)
!12192 = !DILocation(line: 431, column: 44, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 431, column: 6)
!12194 = !DILocation(line: 438, column: 22, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 437, column: 6)
!12196 = !DILocation(line: 437, column: 6, scope: !12166)
!12197 = !DILocation(line: 448, column: 6, scope: !12166)
!12198 = !DILocation(line: 465, column: 47, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 465, column: 6)
!12200 = !DILocation(line: 475, column: 21, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 475, column: 6)
!12202 = !DILocation(line: 475, column: 6, scope: !12166)
!12203 = !DILocation(line: 476, column: 8, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !1809, line: 476, column: 7)
!12205 = distinct !DILexicalBlock(scope: !12201, file: !1809, line: 475, column: 49)
!12206 = !DILocation(line: 477, column: 34, scope: !12204)
!12207 = !DILocation(line: 476, column: 7, scope: !12205)
!12208 = !DILocation(line: 482, column: 27, scope: !12166)
!12209 = !DILocation(line: 482, column: 2, scope: !12166)
!12210 = !DILocation(line: 484, column: 16, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 484, column: 6)
!12212 = !DILocation(line: 484, column: 13, scope: !12211)
!12213 = !DILocation(line: 484, column: 6, scope: !12166)
!12214 = !DILocation(line: 485, column: 3, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12211, file: !1809, line: 484, column: 44)
!12216 = !DILocation(line: 486, column: 2, scope: !12215)
!12217 = !DILocation(line: 488, column: 18, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 488, column: 6)
!12219 = !DILocation(line: 488, column: 15, scope: !12218)
!12220 = !DILocation(line: 488, column: 6, scope: !12166)
!12221 = !DILocation(line: 489, column: 3, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12218, file: !1809, line: 488, column: 48)
!12223 = !DILocation(line: 490, column: 2, scope: !12222)
!12224 = !DILocation(line: 492, column: 18, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 492, column: 6)
!12226 = !DILocation(line: 492, column: 15, scope: !12225)
!12227 = !DILocation(line: 492, column: 6, scope: !12166)
!12228 = !DILocation(line: 493, column: 3, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12225, file: !1809, line: 492, column: 48)
!12230 = !DILocation(line: 494, column: 2, scope: !12229)
!12231 = !DILocation(line: 496, column: 18, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 496, column: 6)
!12233 = !DILocation(line: 496, column: 15, scope: !12232)
!12234 = !DILocation(line: 496, column: 6, scope: !12166)
!12235 = !DILocation(line: 497, column: 3, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12232, file: !1809, line: 496, column: 46)
!12237 = !DILocation(line: 498, column: 2, scope: !12236)
!12238 = !DILocation(line: 500, column: 11, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12166, file: !1809, line: 500, column: 6)
!12240 = !DILocation(line: 500, column: 29, scope: !12239)
!12241 = !DILocation(line: 500, column: 20, scope: !12239)
!12242 = !DILocation(line: 500, column: 6, scope: !12166)
!12243 = !DILocation(line: 501, column: 3, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12239, file: !1809, line: 500, column: 40)
!12245 = !DILocation(line: 502, column: 26, scope: !12244)
!12246 = !DILocation(line: 502, column: 19, scope: !12244)
!12247 = !DILocation(line: 503, column: 2, scope: !12244)
!12248 = !DILocation(line: 505, column: 26, scope: !12166)
!12249 = !DILocation(line: 505, column: 2, scope: !12166)
!12250 = !DILocation(line: 506, column: 2, scope: !12166)
!12251 = !DILocation(line: 507, column: 1, scope: !12166)
!12252 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1809, file: !1809, line: 509, type: !1750, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12253)
!12253 = !{!12254, !12255, !12256}
!12254 = !DILocalVariable(name: "dev", arg: 1, scope: !12252, file: !1809, line: 509, type: !1712)
!12255 = !DILocalVariable(name: "cfg", arg: 2, scope: !12252, file: !1809, line: 510, type: !1752)
!12256 = !DILocalVariable(name: "data", scope: !12252, file: !1809, line: 512, type: !12172)
!12257 = !DILocation(line: 0, scope: !12252)
!12258 = !DILocation(line: 512, column: 38, scope: !12252)
!12259 = !DILocation(line: 514, column: 24, scope: !12252)
!12260 = !DILocation(line: 514, column: 7, scope: !12252)
!12261 = !DILocation(line: 514, column: 16, scope: !12252)
!12262 = !DILocation(line: 515, column: 41, scope: !12252)
!12263 = !{i32 0, i32 1537}
!12264 = !DILocation(line: 515, column: 16, scope: !12252)
!12265 = !DILocation(line: 515, column: 7, scope: !12252)
!12266 = !DILocation(line: 515, column: 14, scope: !12252)
!12267 = !DILocation(line: 517, column: 3, scope: !12252)
!12268 = !{i32 0, i32 12289}
!12269 = !DILocation(line: 516, column: 19, scope: !12252)
!12270 = !DILocation(line: 516, column: 7, scope: !12252)
!12271 = !DILocation(line: 516, column: 17, scope: !12252)
!12272 = !DILocation(line: 519, column: 3, scope: !12252)
!12273 = !DILocation(line: 519, column: 33, scope: !12252)
!12274 = !DILocation(line: 518, column: 19, scope: !12252)
!12275 = !DILocation(line: 518, column: 7, scope: !12252)
!12276 = !DILocation(line: 518, column: 17, scope: !12252)
!12277 = !DILocation(line: 521, column: 3, scope: !12252)
!12278 = !{i32 0, i32 769}
!12279 = !DILocation(line: 520, column: 19, scope: !12252)
!12280 = !DILocation(line: 520, column: 7, scope: !12252)
!12281 = !DILocation(line: 520, column: 17, scope: !12252)
!12282 = !DILocation(line: 522, column: 2, scope: !12252)
!12283 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1809, file: !1809, line: 205, type: !12284, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12286)
!12284 = !DISubroutineType(types: !12285)
!12285 = !{!208, !1712}
!12286 = !{!12287, !12288}
!12287 = !DILocalVariable(name: "dev", arg: 1, scope: !12283, file: !1809, line: 205, type: !1712)
!12288 = !DILocalVariable(name: "config", scope: !12283, file: !1809, line: 207, type: !12049)
!12289 = !DILocation(line: 0, scope: !12283)
!12290 = !DILocation(line: 207, column: 48, scope: !12283)
!12291 = !DILocation(line: 209, column: 36, scope: !12283)
!12292 = !DILocation(line: 209, column: 9, scope: !12283)
!12293 = !DILocation(line: 209, column: 2, scope: !12283)
!12294 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1809, file: !1809, line: 270, type: !12295, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12297)
!12295 = !DISubroutineType(types: !12296)
!12296 = !{!1678, !208}
!12297 = !{!12298}
!12298 = !DILocalVariable(name: "parity", arg: 1, scope: !12294, file: !1809, line: 270, type: !208)
!12299 = !DILocation(line: 0, scope: !12294)
!12300 = !DILocation(line: 272, column: 2, scope: !12294)
!12301 = !DILocation(line: 281, column: 1, scope: !12294)
!12302 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1809, file: !1809, line: 220, type: !12284, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12303)
!12303 = !{!12304, !12305}
!12304 = !DILocalVariable(name: "dev", arg: 1, scope: !12302, file: !1809, line: 220, type: !1712)
!12305 = !DILocalVariable(name: "config", scope: !12302, file: !1809, line: 222, type: !12049)
!12306 = !DILocation(line: 0, scope: !12302)
!12307 = !DILocation(line: 222, column: 48, scope: !12302)
!12308 = !DILocation(line: 224, column: 44, scope: !12302)
!12309 = !DILocation(line: 224, column: 9, scope: !12302)
!12310 = !DILocation(line: 224, column: 2, scope: !12302)
!12311 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1809, file: !1809, line: 304, type: !12312, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12314)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{!1692, !208}
!12314 = !{!12315}
!12315 = !DILocalVariable(name: "sb", arg: 1, scope: !12311, file: !1809, line: 304, type: !208)
!12316 = !DILocation(line: 0, scope: !12311)
!12317 = !DILocation(line: 306, column: 2, scope: !12311)
!12318 = !DILocation(line: 0, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12311, file: !1809, line: 306, column: 14)
!12320 = !DILocation(line: 323, column: 1, scope: !12311)
!12321 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1809, file: !1809, line: 235, type: !12284, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12322)
!12322 = !{!12323, !12324}
!12323 = !DILocalVariable(name: "dev", arg: 1, scope: !12321, file: !1809, line: 235, type: !1712)
!12324 = !DILocalVariable(name: "config", scope: !12321, file: !1809, line: 237, type: !12049)
!12325 = !DILocation(line: 0, scope: !12321)
!12326 = !DILocation(line: 237, column: 48, scope: !12321)
!12327 = !DILocation(line: 239, column: 39, scope: !12321)
!12328 = !DILocation(line: 239, column: 9, scope: !12321)
!12329 = !DILocation(line: 239, column: 2, scope: !12321)
!12330 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1809, file: !1809, line: 355, type: !12331, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12333)
!12331 = !DISubroutineType(types: !12332)
!12332 = !{!1685, !208, !208}
!12333 = !{!12334, !12335}
!12334 = !DILocalVariable(name: "db", arg: 1, scope: !12330, file: !1809, line: 355, type: !208)
!12335 = !DILocalVariable(name: "p", arg: 2, scope: !12330, file: !1809, line: 356, type: !208)
!12336 = !DILocation(line: 0, scope: !12330)
!12337 = !DILocation(line: 358, column: 2, scope: !12330)
!12338 = !DILocation(line: 384, column: 1, scope: !12330)
!12339 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1809, file: !1809, line: 250, type: !12284, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12340)
!12340 = !{!12341, !12342}
!12341 = !DILocalVariable(name: "dev", arg: 1, scope: !12339, file: !1809, line: 250, type: !1712)
!12342 = !DILocalVariable(name: "config", scope: !12339, file: !1809, line: 252, type: !12049)
!12343 = !DILocation(line: 0, scope: !12339)
!12344 = !DILocation(line: 252, column: 48, scope: !12339)
!12345 = !DILocation(line: 254, column: 40, scope: !12339)
!12346 = !DILocation(line: 254, column: 9, scope: !12339)
!12347 = !DILocation(line: 254, column: 2, scope: !12339)
!12348 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1809, file: !1809, line: 409, type: !12349, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12351)
!12349 = !DISubroutineType(types: !12350)
!12350 = !{!1698, !208}
!12351 = !{!12352}
!12352 = !DILocalVariable(name: "fc", arg: 1, scope: !12348, file: !1809, line: 409, type: !208)
!12353 = !DILocation(line: 0, scope: !12348)
!12354 = !DILocation(line: 411, column: 9, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12348, file: !1809, line: 411, column: 6)
!12356 = !DILocation(line: 416, column: 1, scope: !12348)
!12357 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12358, file: !12358, line: 967, type: !12359, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12361)
!12358 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12359 = !DISubroutineType(types: !12360)
!12360 = !{!208, !1753}
!12361 = !{!12362}
!12362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12357, file: !12358, line: 967, type: !1753)
!12363 = !DILocation(line: 0, scope: !12357)
!12364 = !DILocation(line: 969, column: 21, scope: !12357)
!12365 = !DILocation(line: 969, column: 3, scope: !12357)
!12366 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12358, file: !12358, line: 601, type: !12359, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12367)
!12367 = !{!12368}
!12368 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12366, file: !12358, line: 601, type: !1753)
!12369 = !DILocation(line: 0, scope: !12366)
!12370 = !DILocation(line: 603, column: 21, scope: !12366)
!12371 = !DILocation(line: 603, column: 3, scope: !12366)
!12372 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12358, file: !12358, line: 820, type: !12359, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12373)
!12373 = !{!12374}
!12374 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12372, file: !12358, line: 820, type: !1753)
!12375 = !DILocation(line: 0, scope: !12372)
!12376 = !DILocation(line: 822, column: 21, scope: !12372)
!12377 = !DILocation(line: 822, column: 3, scope: !12372)
!12378 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12358, file: !12358, line: 547, type: !12359, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12379)
!12379 = !{!12380}
!12380 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12378, file: !12358, line: 547, type: !1753)
!12381 = !DILocation(line: 0, scope: !12378)
!12382 = !DILocation(line: 549, column: 21, scope: !12378)
!12383 = !DILocation(line: 549, column: 3, scope: !12378)
!12384 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1809, file: !1809, line: 257, type: !12385, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12387)
!12385 = !DISubroutineType(types: !12386)
!12386 = !{!208, !1678}
!12387 = !{!12388}
!12388 = !DILocalVariable(name: "parity", arg: 1, scope: !12384, file: !1809, line: 257, type: !1678)
!12389 = !DILocation(line: 0, scope: !12384)
!12390 = !DILocation(line: 259, column: 2, scope: !12384)
!12391 = !DILocation(line: 268, column: 1, scope: !12384)
!12392 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1809, file: !1809, line: 283, type: !12393, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12395)
!12393 = !DISubroutineType(types: !12394)
!12394 = !{!208, !1692}
!12395 = !{!12396}
!12396 = !DILocalVariable(name: "sb", arg: 1, scope: !12392, file: !1809, line: 283, type: !1692)
!12397 = !DILocation(line: 0, scope: !12392)
!12398 = !DILocation(line: 285, column: 2, scope: !12392)
!12399 = !DILocation(line: 0, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12392, file: !1809, line: 285, column: 14)
!12401 = !DILocation(line: 302, column: 1, scope: !12392)
!12402 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1809, file: !1809, line: 325, type: !12403, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12405)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{!208, !1685, !1678}
!12405 = !{!12406, !12407}
!12406 = !DILocalVariable(name: "db", arg: 1, scope: !12402, file: !1809, line: 325, type: !1685)
!12407 = !DILocalVariable(name: "p", arg: 2, scope: !12402, file: !1809, line: 326, type: !1678)
!12408 = !DILocation(line: 0, scope: !12402)
!12409 = !DILocation(line: 328, column: 2, scope: !12402)
!12410 = !DILocation(line: 353, column: 1, scope: !12402)
!12411 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1809, file: !1809, line: 393, type: !12412, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!208, !1698}
!12414 = !{!12415}
!12415 = !DILocalVariable(name: "fc", arg: 1, scope: !12411, file: !1809, line: 393, type: !1698)
!12416 = !DILocation(line: 0, scope: !12411)
!12417 = !DILocation(line: 395, column: 9, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12411, file: !1809, line: 395, column: 6)
!12419 = !DILocation(line: 400, column: 1, scope: !12411)
!12420 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12358, file: !12358, line: 424, type: !12421, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12423)
!12421 = !DISubroutineType(types: !12422)
!12422 = !{null, !1753}
!12423 = !{!12424}
!12424 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12420, file: !12358, line: 424, type: !1753)
!12425 = !DILocation(line: 0, scope: !12420)
!12426 = !DILocation(line: 426, column: 3, scope: !12420)
!12427 = !DILocation(line: 427, column: 1, scope: !12420)
!12428 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1809, file: !1809, line: 197, type: !12429, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12431)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{null, !1712, !208}
!12431 = !{!12432, !12433, !12434}
!12432 = !DILocalVariable(name: "dev", arg: 1, scope: !12428, file: !1809, line: 197, type: !1712)
!12433 = !DILocalVariable(name: "parity", arg: 2, scope: !12428, file: !1809, line: 198, type: !208)
!12434 = !DILocalVariable(name: "config", scope: !12428, file: !1809, line: 200, type: !12049)
!12435 = !DILocation(line: 0, scope: !12428)
!12436 = !DILocation(line: 200, column: 48, scope: !12428)
!12437 = !DILocation(line: 202, column: 29, scope: !12428)
!12438 = !DILocation(line: 202, column: 2, scope: !12428)
!12439 = !DILocation(line: 203, column: 1, scope: !12428)
!12440 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1809, file: !1809, line: 212, type: !12429, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12441)
!12441 = !{!12442, !12443, !12444}
!12442 = !DILocalVariable(name: "dev", arg: 1, scope: !12440, file: !1809, line: 212, type: !1712)
!12443 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12440, file: !1809, line: 213, type: !208)
!12444 = !DILocalVariable(name: "config", scope: !12440, file: !1809, line: 215, type: !12049)
!12445 = !DILocation(line: 0, scope: !12440)
!12446 = !DILocation(line: 215, column: 48, scope: !12440)
!12447 = !DILocation(line: 217, column: 37, scope: !12440)
!12448 = !DILocation(line: 217, column: 2, scope: !12440)
!12449 = !DILocation(line: 218, column: 1, scope: !12440)
!12450 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1809, file: !1809, line: 227, type: !12429, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12451)
!12451 = !{!12452, !12453, !12454}
!12452 = !DILocalVariable(name: "dev", arg: 1, scope: !12450, file: !1809, line: 227, type: !1712)
!12453 = !DILocalVariable(name: "databits", arg: 2, scope: !12450, file: !1809, line: 228, type: !208)
!12454 = !DILocalVariable(name: "config", scope: !12450, file: !1809, line: 230, type: !12049)
!12455 = !DILocation(line: 0, scope: !12450)
!12456 = !DILocation(line: 230, column: 48, scope: !12450)
!12457 = !DILocation(line: 232, column: 32, scope: !12450)
!12458 = !DILocation(line: 232, column: 2, scope: !12450)
!12459 = !DILocation(line: 233, column: 1, scope: !12450)
!12460 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1809, file: !1809, line: 242, type: !12429, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12461)
!12461 = !{!12462, !12463, !12464}
!12462 = !DILocalVariable(name: "dev", arg: 1, scope: !12460, file: !1809, line: 242, type: !1712)
!12463 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12460, file: !1809, line: 243, type: !208)
!12464 = !DILocalVariable(name: "config", scope: !12460, file: !1809, line: 245, type: !12049)
!12465 = !DILocation(line: 0, scope: !12460)
!12466 = !DILocation(line: 245, column: 48, scope: !12460)
!12467 = !DILocation(line: 247, column: 33, scope: !12460)
!12468 = !DILocation(line: 247, column: 2, scope: !12460)
!12469 = !DILocation(line: 248, column: 1, scope: !12460)
!12470 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1809, file: !1809, line: 107, type: !12429, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12471)
!12471 = !{!12472, !12473, !12474, !12475, !12476}
!12472 = !DILocalVariable(name: "dev", arg: 1, scope: !12470, file: !1809, line: 107, type: !1712)
!12473 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12470, file: !1809, line: 107, type: !208)
!12474 = !DILocalVariable(name: "config", scope: !12470, file: !1809, line: 109, type: !12049)
!12475 = !DILocalVariable(name: "data", scope: !12470, file: !1809, line: 110, type: !12172)
!12476 = !DILocalVariable(name: "clock_rate", scope: !12470, file: !1809, line: 112, type: !208)
!12477 = !DILocation(line: 0, scope: !12470)
!12478 = !DILocation(line: 109, column: 48, scope: !12470)
!12479 = !DILocation(line: 110, column: 38, scope: !12470)
!12480 = !DILocation(line: 112, column: 2, scope: !12470)
!12481 = !DILocation(line: 123, column: 36, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !1809, line: 123, column: 7)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !1809, line: 122, column: 9)
!12484 = distinct !DILexicalBlock(scope: !12470, file: !1809, line: 115, column: 6)
!12485 = !DILocation(line: 124, column: 42, scope: !12482)
!12486 = !DILocation(line: 123, column: 7, scope: !12482)
!12487 = !DILocation(line: 125, column: 22, scope: !12482)
!12488 = !DILocation(line: 123, column: 7, scope: !12483)
!12489 = !DILocation(line: 126, column: 4, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !1809, line: 126, column: 4)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !1809, line: 126, column: 4)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !1809, line: 126, column: 4)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !1809, line: 126, column: 4)
!12494 = distinct !DILexicalBlock(scope: !12482, file: !1809, line: 125, column: 27)
!12495 = !DILocation(line: 127, column: 4, scope: !12494)
!12496 = !DILocation(line: 176, column: 36, scope: !12470)
!12497 = !DILocation(line: 176, column: 3, scope: !12470)
!12498 = !DILocation(line: 179, column: 32, scope: !12470)
!12499 = !DILocation(line: 180, column: 10, scope: !12470)
!12500 = !DILocation(line: 179, column: 3, scope: !12470)
!12501 = !DILocation(line: 195, column: 1, scope: !12470)
!12502 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12358, file: !12358, line: 410, type: !12421, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12503)
!12503 = !{!12504}
!12504 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12502, file: !12358, line: 410, type: !1753)
!12505 = !DILocation(line: 0, scope: !12502)
!12506 = !DILocation(line: 412, column: 3, scope: !12502)
!12507 = !DILocation(line: 413, column: 1, scope: !12502)
!12508 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !981, file: !981, line: 216, type: !1786, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12509)
!12509 = !{!12510, !12511, !12512, !12513}
!12510 = !DILocalVariable(name: "dev", arg: 1, scope: !12508, file: !981, line: 216, type: !1712)
!12511 = !DILocalVariable(name: "sys", arg: 2, scope: !12508, file: !981, line: 217, type: !1071)
!12512 = !DILocalVariable(name: "rate", arg: 3, scope: !12508, file: !981, line: 218, type: !1029)
!12513 = !DILocalVariable(name: "api", scope: !12508, file: !981, line: 220, type: !1764)
!12514 = !DILocation(line: 0, scope: !12508)
!12515 = !DILocation(line: 221, column: 49, scope: !12508)
!12516 = !DILocation(line: 223, column: 11, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12508, file: !981, line: 223, column: 6)
!12518 = !DILocation(line: 223, column: 20, scope: !12517)
!12519 = !DILocation(line: 223, column: 6, scope: !12508)
!12520 = !DILocation(line: 227, column: 9, scope: !12508)
!12521 = !DILocation(line: 227, column: 2, scope: !12508)
!12522 = !DILocation(line: 228, column: 1, scope: !12508)
!12523 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3464, file: !3464, line: 175, type: !3465, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12524)
!12524 = !{!12525}
!12525 = !DILocalVariable(name: "level", arg: 1, scope: !12523, file: !3464, line: 175, type: !125)
!12526 = !DILocation(line: 0, scope: !12523)
!12527 = !DILocation(line: 177, column: 2, scope: !12523)
!12528 = !DILocation(line: 189, column: 1, scope: !12523)
!12529 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12358, file: !12358, line: 615, type: !12530, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12532)
!12530 = !DISubroutineType(types: !12531)
!12531 = !{null, !1753, !208}
!12532 = !{!12533, !12534}
!12533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12529, file: !12358, line: 615, type: !1753)
!12534 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12529, file: !12358, line: 615, type: !208)
!12535 = !DILocation(line: 0, scope: !12529)
!12536 = !DILocation(line: 617, column: 3, scope: !12529)
!12537 = !DILocation(line: 618, column: 1, scope: !12529)
!12538 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12358, file: !12358, line: 1020, type: !12539, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12541)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{null, !1753, !208, !208, !208}
!12541 = !{!12542, !12543, !12544, !12545}
!12542 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12538, file: !12358, line: 1020, type: !1753)
!12543 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12538, file: !12358, line: 1020, type: !208)
!12544 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12538, file: !12358, line: 1020, type: !208)
!12545 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12538, file: !12358, line: 1021, type: !208)
!12546 = !DILocation(line: 0, scope: !12538)
!12547 = !DILocation(line: 1029, column: 30, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12358, line: 1028, column: 3)
!12549 = distinct !DILexicalBlock(scope: !12538, file: !12358, line: 1023, column: 7)
!12550 = !DILocation(line: 1029, column: 19, scope: !12548)
!12551 = !DILocation(line: 1029, column: 13, scope: !12548)
!12552 = !DILocation(line: 1029, column: 17, scope: !12548)
!12553 = !DILocation(line: 1031, column: 1, scope: !12538)
!12554 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12358, file: !12358, line: 949, type: !12530, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12555)
!12555 = !{!12556, !12557}
!12556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12554, file: !12358, line: 949, type: !1753)
!12557 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12554, file: !12358, line: 949, type: !208)
!12558 = !DILocation(line: 0, scope: !12554)
!12559 = !DILocation(line: 951, column: 3, scope: !12554)
!12560 = !DILocation(line: 952, column: 1, scope: !12554)
!12561 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12358, file: !12358, line: 588, type: !12530, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12562)
!12562 = !{!12563, !12564}
!12563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12561, file: !12358, line: 588, type: !1753)
!12564 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12561, file: !12358, line: 588, type: !208)
!12565 = !DILocation(line: 0, scope: !12561)
!12566 = !DILocation(line: 590, column: 3, scope: !12561)
!12567 = !DILocation(line: 591, column: 1, scope: !12561)
!12568 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12358, file: !12358, line: 805, type: !12530, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12569)
!12569 = !{!12570, !12571}
!12570 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12568, file: !12358, line: 805, type: !1753)
!12571 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12568, file: !12358, line: 805, type: !208)
!12572 = !DILocation(line: 0, scope: !12568)
!12573 = !DILocation(line: 807, column: 3, scope: !12568)
!12574 = !DILocation(line: 808, column: 1, scope: !12568)
!12575 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12358, file: !12358, line: 532, type: !12530, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12576)
!12576 = !{!12577, !12578}
!12577 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12575, file: !12358, line: 532, type: !1753)
!12578 = !DILocalVariable(name: "Parity", arg: 2, scope: !12575, file: !12358, line: 532, type: !208)
!12579 = !DILocation(line: 0, scope: !12575)
!12580 = !DILocation(line: 534, column: 3, scope: !12575)
!12581 = !DILocation(line: 535, column: 1, scope: !12575)
!12582 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12358, file: !12358, line: 1770, type: !12359, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12583)
!12583 = !{!12584}
!12584 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12582, file: !12358, line: 1770, type: !1753)
!12585 = !DILocation(line: 0, scope: !12582)
!12586 = !DILocation(line: 1772, column: 11, scope: !12582)
!12587 = !DILocation(line: 1772, column: 46, scope: !12582)
!12588 = !DILocation(line: 1772, column: 3, scope: !12582)
!12589 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12358, file: !12358, line: 1737, type: !12359, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12590)
!12590 = !{!12591}
!12591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12589, file: !12358, line: 1737, type: !1753)
!12592 = !DILocation(line: 0, scope: !12589)
!12593 = !DILocation(line: 1739, column: 11, scope: !12589)
!12594 = !DILocation(line: 1739, column: 3, scope: !12589)
!12595 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12358, file: !12358, line: 1748, type: !12359, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12596)
!12596 = !{!12597}
!12597 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12595, file: !12358, line: 1748, type: !1753)
!12598 = !DILocation(line: 0, scope: !12595)
!12599 = !DILocation(line: 1750, column: 11, scope: !12595)
!12600 = !DILocation(line: 1750, column: 45, scope: !12595)
!12601 = !DILocation(line: 1750, column: 3, scope: !12595)
!12602 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12358, file: !12358, line: 1827, type: !12359, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12603)
!12603 = !{!12604}
!12604 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12602, file: !12358, line: 1827, type: !1753)
!12605 = !DILocation(line: 0, scope: !12602)
!12606 = !DILocation(line: 1829, column: 11, scope: !12602)
!12607 = !DILocation(line: 1829, column: 46, scope: !12602)
!12608 = !DILocation(line: 1829, column: 3, scope: !12602)
!12609 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12358, file: !12358, line: 1992, type: !12421, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12610)
!12610 = !{!12611}
!12611 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12609, file: !12358, line: 1992, type: !1753)
!12612 = !DILocation(line: 0, scope: !12609)
!12613 = !DILocation(line: 1994, column: 3, scope: !12609)
!12614 = !DILocation(line: 1995, column: 1, scope: !12609)
!12615 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12358, file: !12358, line: 1934, type: !12421, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12616)
!12616 = !{!12617, !12618}
!12617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12615, file: !12358, line: 1934, type: !1753)
!12618 = !DILocalVariable(name: "tmpreg", scope: !12615, file: !12358, line: 1936, type: !423)
!12619 = !DILocation(line: 0, scope: !12615)
!12620 = !DILocation(line: 1936, column: 3, scope: !12615)
!12621 = !DILocation(line: 1936, column: 17, scope: !12615)
!12622 = !DILocation(line: 1937, column: 20, scope: !12615)
!12623 = !DILocation(line: 1937, column: 10, scope: !12615)
!12624 = !DILocation(line: 1938, column: 10, scope: !12615)
!12625 = !DILocation(line: 1939, column: 20, scope: !12615)
!12626 = !DILocation(line: 1939, column: 10, scope: !12615)
!12627 = !DILocation(line: 1940, column: 10, scope: !12615)
!12628 = !DILocation(line: 1941, column: 1, scope: !12615)
!12629 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12358, file: !12358, line: 1877, type: !12421, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12630)
!12630 = !{!12631, !12632}
!12631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12629, file: !12358, line: 1877, type: !1753)
!12632 = !DILocalVariable(name: "tmpreg", scope: !12629, file: !12358, line: 1879, type: !423)
!12633 = !DILocation(line: 0, scope: !12629)
!12634 = !DILocation(line: 1879, column: 3, scope: !12629)
!12635 = !DILocation(line: 1879, column: 17, scope: !12629)
!12636 = !DILocation(line: 1880, column: 20, scope: !12629)
!12637 = !DILocation(line: 1880, column: 10, scope: !12629)
!12638 = !DILocation(line: 1881, column: 10, scope: !12629)
!12639 = !DILocation(line: 1882, column: 20, scope: !12629)
!12640 = !DILocation(line: 1882, column: 10, scope: !12629)
!12641 = !DILocation(line: 1883, column: 10, scope: !12629)
!12642 = !DILocation(line: 1884, column: 1, scope: !12629)
!12643 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12358, file: !12358, line: 1896, type: !12421, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12644)
!12644 = !{!12645, !12646}
!12645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12643, file: !12358, line: 1896, type: !1753)
!12646 = !DILocalVariable(name: "tmpreg", scope: !12643, file: !12358, line: 1898, type: !423)
!12647 = !DILocation(line: 0, scope: !12643)
!12648 = !DILocation(line: 1898, column: 3, scope: !12643)
!12649 = !DILocation(line: 1898, column: 17, scope: !12643)
!12650 = !DILocation(line: 1899, column: 20, scope: !12643)
!12651 = !DILocation(line: 1899, column: 10, scope: !12643)
!12652 = !DILocation(line: 1900, column: 10, scope: !12643)
!12653 = !DILocation(line: 1901, column: 20, scope: !12643)
!12654 = !DILocation(line: 1901, column: 10, scope: !12643)
!12655 = !DILocation(line: 1902, column: 10, scope: !12643)
!12656 = !DILocation(line: 1903, column: 1, scope: !12643)
!12657 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12358, file: !12358, line: 1915, type: !12421, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12658)
!12658 = !{!12659, !12660}
!12659 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12657, file: !12358, line: 1915, type: !1753)
!12660 = !DILocalVariable(name: "tmpreg", scope: !12657, file: !12358, line: 1917, type: !423)
!12661 = !DILocation(line: 0, scope: !12657)
!12662 = !DILocation(line: 1917, column: 3, scope: !12657)
!12663 = !DILocation(line: 1917, column: 17, scope: !12657)
!12664 = !DILocation(line: 1918, column: 20, scope: !12657)
!12665 = !DILocation(line: 1918, column: 10, scope: !12657)
!12666 = !DILocation(line: 1919, column: 10, scope: !12657)
!12667 = !DILocation(line: 1920, column: 20, scope: !12657)
!12668 = !DILocation(line: 1920, column: 10, scope: !12657)
!12669 = !DILocation(line: 1921, column: 10, scope: !12657)
!12670 = !DILocation(line: 1922, column: 1, scope: !12657)
!12671 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12358, file: !12358, line: 1814, type: !12359, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12672)
!12672 = !{!12673}
!12673 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12671, file: !12358, line: 1814, type: !1753)
!12674 = !DILocation(line: 0, scope: !12671)
!12675 = !DILocation(line: 1816, column: 11, scope: !12671)
!12676 = !DILocation(line: 1816, column: 46, scope: !12671)
!12677 = !DILocation(line: 1816, column: 3, scope: !12671)
!12678 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12358, file: !12358, line: 2426, type: !12679, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12681)
!12679 = !DISubroutineType(types: !12680)
!12680 = !{null, !1753, !150}
!12681 = !{!12682, !12683}
!12682 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12678, file: !12358, line: 2426, type: !1753)
!12683 = !DILocalVariable(name: "Value", arg: 2, scope: !12678, file: !12358, line: 2426, type: !150)
!12684 = !DILocation(line: 0, scope: !12678)
!12685 = !DILocation(line: 2428, column: 16, scope: !12678)
!12686 = !DILocation(line: 2428, column: 11, scope: !12678)
!12687 = !DILocation(line: 2428, column: 14, scope: !12678)
!12688 = !DILocation(line: 2429, column: 1, scope: !12678)
!12689 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12358, file: !12358, line: 1792, type: !12359, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12690)
!12690 = !{!12691}
!12691 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12689, file: !12358, line: 1792, type: !1753)
!12692 = !DILocation(line: 0, scope: !12689)
!12693 = !DILocation(line: 1794, column: 11, scope: !12689)
!12694 = !DILocation(line: 1794, column: 47, scope: !12689)
!12695 = !DILocation(line: 1794, column: 3, scope: !12689)
!12696 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12358, file: !12358, line: 2403, type: !12697, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12699)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{!150, !1753}
!12699 = !{!12700}
!12700 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12696, file: !12358, line: 2403, type: !1753)
!12701 = !DILocation(line: 0, scope: !12696)
!12702 = !DILocation(line: 2405, column: 20, scope: !12696)
!12703 = !DILocation(line: 2405, column: 10, scope: !12696)
!12704 = !DILocation(line: 2405, column: 3, scope: !12696)
!12705 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1809, file: !1809, line: 1583, type: !1733, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12706)
!12706 = !{!12707, !12708, !12709, !12710, !12711, !12712}
!12707 = !DILocalVariable(name: "dev", arg: 1, scope: !12705, file: !1809, line: 1583, type: !1712)
!12708 = !DILocalVariable(name: "config", scope: !12705, file: !1809, line: 1585, type: !12049)
!12709 = !DILocalVariable(name: "data", scope: !12705, file: !1809, line: 1586, type: !12172)
!12710 = !DILocalVariable(name: "ll_parity", scope: !12705, file: !1809, line: 1587, type: !208)
!12711 = !DILocalVariable(name: "ll_datawidth", scope: !12705, file: !1809, line: 1588, type: !208)
!12712 = !DILocalVariable(name: "err", scope: !12705, file: !1809, line: 1589, type: !125)
!12713 = !DILocation(line: 0, scope: !12705)
!12714 = !DILocation(line: 1585, column: 48, scope: !12705)
!12715 = !DILocation(line: 1586, column: 38, scope: !12705)
!12716 = !DILocation(line: 1591, column: 2, scope: !12705)
!12717 = !DILocation(line: 1593, column: 29, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12705, file: !1809, line: 1593, column: 6)
!12719 = !DILocation(line: 1593, column: 7, scope: !12718)
!12720 = !DILocation(line: 1593, column: 6, scope: !12705)
!12721 = !DILocation(line: 1594, column: 3, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !1809, line: 1594, column: 3)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !1809, line: 1594, column: 3)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !1809, line: 1594, column: 3)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !1809, line: 1594, column: 3)
!12726 = distinct !DILexicalBlock(scope: !12718, file: !1809, line: 1593, column: 37)
!12727 = !DILocation(line: 1595, column: 3, scope: !12726)
!12728 = !DILocation(line: 1599, column: 31, scope: !12705)
!12729 = !DILocation(line: 1599, column: 71, scope: !12705)
!12730 = !DILocation(line: 1599, column: 8, scope: !12705)
!12731 = !DILocation(line: 1600, column: 10, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12705, file: !1809, line: 1600, column: 6)
!12733 = !DILocation(line: 1600, column: 6, scope: !12705)
!12734 = !DILocation(line: 1601, column: 3, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12736, file: !1809, line: 1601, column: 3)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !1809, line: 1601, column: 3)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !1809, line: 1601, column: 3)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !1809, line: 1601, column: 3)
!12739 = distinct !DILexicalBlock(scope: !12732, file: !1809, line: 1600, column: 16)
!12740 = !DILocation(line: 1602, column: 3, scope: !12739)
!12741 = !DILocation(line: 1616, column: 36, scope: !12705)
!12742 = !DILocation(line: 1616, column: 8, scope: !12705)
!12743 = !DILocation(line: 1617, column: 10, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12705, file: !1809, line: 1617, column: 6)
!12745 = !DILocation(line: 1617, column: 6, scope: !12705)
!12746 = !DILocation(line: 1621, column: 27, scope: !12705)
!12747 = !DILocation(line: 1621, column: 2, scope: !12705)
!12748 = !DILocation(line: 1624, column: 40, scope: !12705)
!12749 = !DILocation(line: 1624, column: 2, scope: !12705)
!12750 = !DILocation(line: 1630, column: 14, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12705, file: !1809, line: 1630, column: 6)
!12752 = !DILocation(line: 1630, column: 6, scope: !12705)
!12753 = !DILocation(line: 1640, column: 4, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !1809, line: 1640, column: 4)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !1809, line: 1640, column: 4)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !1809, line: 1640, column: 4)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !1809, line: 1640, column: 4)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !1809, line: 1639, column: 28)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !1809, line: 1639, column: 7)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !1809, line: 1638, column: 9)
!12761 = distinct !DILexicalBlock(scope: !12751, file: !1809, line: 1634, column: 13)
!12762 = !DILocation(line: 0, scope: !12751)
!12763 = !DILocation(line: 1649, column: 35, scope: !12705)
!12764 = !DILocation(line: 1649, column: 2, scope: !12705)
!12765 = !DILocation(line: 1654, column: 14, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12705, file: !1809, line: 1654, column: 6)
!12767 = !DILocation(line: 1654, column: 6, scope: !12705)
!12768 = !DILocation(line: 1655, column: 3, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12766, file: !1809, line: 1654, column: 31)
!12770 = !DILocation(line: 1656, column: 2, scope: !12769)
!12771 = !DILocation(line: 1659, column: 37, scope: !12705)
!12772 = !DILocation(line: 1659, column: 2, scope: !12705)
!12773 = !DILocation(line: 1662, column: 14, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12705, file: !1809, line: 1662, column: 6)
!12775 = !DILocation(line: 1662, column: 6, scope: !12705)
!12776 = !DILocation(line: 1663, column: 37, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12774, file: !1809, line: 1662, column: 27)
!12778 = !DILocation(line: 1663, column: 3, scope: !12777)
!12779 = !DILocation(line: 1664, column: 2, scope: !12777)
!12780 = !DILocation(line: 1684, column: 26, scope: !12705)
!12781 = !DILocation(line: 1684, column: 2, scope: !12705)
!12782 = !DILocation(line: 1722, column: 2, scope: !12705)
!12783 = !DILocation(line: 1724, column: 1, scope: !12705)
!12784 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1809, file: !1809, line: 651, type: !12785, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12787)
!12785 = !DISubroutineType(types: !12786)
!12786 = !{null, !1712}
!12787 = !{!12788, !12789, !12790}
!12788 = !DILocalVariable(name: "dev", arg: 1, scope: !12784, file: !1809, line: 651, type: !1712)
!12789 = !DILocalVariable(name: "data", scope: !12784, file: !1809, line: 653, type: !12172)
!12790 = !DILocalVariable(name: "clk", scope: !12784, file: !1809, line: 654, type: !12791)
!12791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1712)
!12792 = !DILocation(line: 0, scope: !12784)
!12793 = !DILocation(line: 653, column: 38, scope: !12784)
!12794 = !DILocation(line: 656, column: 8, scope: !12784)
!12795 = !DILocation(line: 656, column: 14, scope: !12784)
!12796 = !DILocation(line: 657, column: 1, scope: !12784)
!12797 = distinct !DISubprogram(name: "device_is_ready", scope: !4205, file: !4205, line: 47, type: !12798, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12800)
!12798 = !DISubroutineType(types: !12799)
!12799 = !{!153, !1712}
!12800 = !{!12801}
!12801 = !DILocalVariable(name: "dev", arg: 1, scope: !12797, file: !4205, line: 47, type: !1712)
!12802 = !DILocation(line: 0, scope: !12797)
!12803 = !DILocation(line: 55, column: 2, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12797, file: !4205, line: 55, column: 2)
!12805 = !{i64 2155127510}
!12806 = !DILocation(line: 56, column: 9, scope: !12797)
!12807 = !DILocation(line: 56, column: 2, scope: !12797)
!12808 = distinct !DISubprogram(name: "clock_control_on", scope: !981, file: !981, line: 123, type: !1771, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12809)
!12809 = !{!12810, !12811, !12812}
!12810 = !DILocalVariable(name: "dev", arg: 1, scope: !12808, file: !981, line: 123, type: !1712)
!12811 = !DILocalVariable(name: "sys", arg: 2, scope: !12808, file: !981, line: 124, type: !1071)
!12812 = !DILocalVariable(name: "api", scope: !12808, file: !981, line: 126, type: !1764)
!12813 = !DILocation(line: 0, scope: !12808)
!12814 = !DILocation(line: 127, column: 49, scope: !12808)
!12815 = !DILocation(line: 129, column: 14, scope: !12808)
!12816 = !DILocation(line: 129, column: 9, scope: !12808)
!12817 = !DILocation(line: 129, column: 2, scope: !12808)
!12818 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1847, file: !1847, line: 342, type: !12819, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12821)
!12819 = !DISubroutineType(types: !12820)
!12820 = !{!125, !1844, !150}
!12821 = !{!12822, !12823, !12824, !12825}
!12822 = !DILocalVariable(name: "config", arg: 1, scope: !12818, file: !1847, line: 342, type: !1844)
!12823 = !DILocalVariable(name: "id", arg: 2, scope: !12818, file: !1847, line: 343, type: !150)
!12824 = !DILocalVariable(name: "ret", scope: !12818, file: !1847, line: 345, type: !125)
!12825 = !DILocalVariable(name: "state", scope: !12818, file: !1847, line: 346, type: !1850)
!12826 = !DILocation(line: 0, scope: !12818)
!12827 = !DILocation(line: 346, column: 2, scope: !12818)
!12828 = !DILocation(line: 348, column: 8, scope: !12818)
!12829 = !DILocation(line: 349, column: 10, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12818, file: !1847, line: 349, column: 6)
!12831 = !DILocation(line: 349, column: 6, scope: !12818)
!12832 = !DILocation(line: 353, column: 44, scope: !12818)
!12833 = !DILocation(line: 353, column: 9, scope: !12818)
!12834 = !DILocation(line: 353, column: 2, scope: !12818)
!12835 = !DILocation(line: 354, column: 1, scope: !12818)
!12836 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12358, file: !12358, line: 497, type: !12530, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12837)
!12837 = !{!12838, !12839, !12840}
!12838 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12836, file: !12358, line: 497, type: !1753)
!12839 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12836, file: !12358, line: 497, type: !208)
!12840 = !DILocalVariable(name: "val", scope: !12841, file: !12358, line: 499, type: !208)
!12841 = distinct !DILexicalBlock(scope: !12836, file: !12358, line: 499, column: 3)
!12842 = !DILocation(line: 0, scope: !12836)
!12843 = !DILocation(line: 499, column: 3, scope: !12841)
!12844 = !DILocalVariable(name: "addr", arg: 1, scope: !12845, file: !8305, line: 476, type: !1805)
!12845 = distinct !DISubprogram(name: "__LDREXW", scope: !8305, file: !8305, line: 476, type: !12846, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12848)
!12846 = !DISubroutineType(types: !12847)
!12847 = !{!208, !1805}
!12848 = !{!12844, !12849}
!12849 = !DILocalVariable(name: "result", scope: !12845, file: !8305, line: 478, type: !208)
!12850 = !DILocation(line: 0, scope: !12845, inlinedAt: !12851)
!12851 = distinct !DILocation(line: 499, column: 3, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12841, file: !12358, line: 499, column: 3)
!12853 = !DILocation(line: 480, column: 4, scope: !12845, inlinedAt: !12851)
!12854 = !{i64 3574980}
!12855 = !DILocation(line: 499, column: 3, scope: !12852)
!12856 = !DILocation(line: 0, scope: !12841)
!12857 = !DILocalVariable(name: "value", arg: 1, scope: !12858, file: !8305, line: 527, type: !208)
!12858 = distinct !DISubprogram(name: "__STREXW", scope: !8305, file: !8305, line: 527, type: !12859, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12861)
!12859 = !DISubroutineType(types: !12860)
!12860 = !{!208, !208, !1805}
!12861 = !{!12857, !12862, !12863}
!12862 = !DILocalVariable(name: "addr", arg: 2, scope: !12858, file: !8305, line: 527, type: !1805)
!12863 = !DILocalVariable(name: "result", scope: !12858, file: !8305, line: 529, type: !208)
!12864 = !DILocation(line: 0, scope: !12858, inlinedAt: !12865)
!12865 = distinct !DILocation(line: 499, column: 3, scope: !12841)
!12866 = !DILocation(line: 531, column: 4, scope: !12858, inlinedAt: !12865)
!12867 = !{i64 3576416}
!12868 = distinct !{!12868, !12843, !12843}
!12869 = !DILocation(line: 500, column: 1, scope: !12836)
!12870 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12358, file: !12358, line: 850, type: !12539, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12871)
!12871 = !{!12872, !12873, !12874, !12875}
!12872 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12870, file: !12358, line: 850, type: !1753)
!12873 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12870, file: !12358, line: 850, type: !208)
!12874 = !DILocalVariable(name: "Parity", arg: 3, scope: !12870, file: !12358, line: 850, type: !208)
!12875 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12870, file: !12358, line: 851, type: !208)
!12876 = !DILocation(line: 0, scope: !12870)
!12877 = !DILocation(line: 853, column: 3, scope: !12870)
!12878 = !DILocation(line: 854, column: 3, scope: !12870)
!12879 = !DILocation(line: 855, column: 1, scope: !12870)
!12880 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12358, file: !12358, line: 1337, type: !12421, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12881)
!12881 = !{!12882}
!12882 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12880, file: !12358, line: 1337, type: !1753)
!12883 = !DILocation(line: 0, scope: !12880)
!12884 = !DILocation(line: 1339, column: 3, scope: !12880)
!12885 = !DILocation(line: 1340, column: 1, scope: !12880)
!12886 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1847, file: !1847, line: 316, type: !12887, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12889)
!12887 = !DISubroutineType(types: !12888)
!12888 = !{!125, !1844, !1850}
!12889 = !{!12890, !12891, !12892}
!12890 = !DILocalVariable(name: "config", arg: 1, scope: !12886, file: !1847, line: 317, type: !1844)
!12891 = !DILocalVariable(name: "state", arg: 2, scope: !12886, file: !1847, line: 318, type: !1850)
!12892 = !DILocalVariable(name: "reg", scope: !12886, file: !1847, line: 320, type: !22)
!12893 = !DILocation(line: 0, scope: !12886)
!12894 = !DILocation(line: 329, column: 39, scope: !12886)
!12895 = !DILocation(line: 329, column: 52, scope: !12886)
!12896 = !DILocation(line: 329, column: 9, scope: !12886)
!12897 = !DILocation(line: 329, column: 2, scope: !12886)
!12898 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12798, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1668, retainedNodes: !12899)
!12899 = !{!12900}
!12900 = !DILocalVariable(name: "dev", arg: 1, scope: !12898, file: !137, line: 730, type: !1712)
!12901 = !DILocation(line: 0, scope: !12898)
!12902 = !DILocation(line: 732, column: 9, scope: !12898)
!12903 = !DILocation(line: 732, column: 2, scope: !12898)
!12904 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1970, file: !1970, line: 270, type: !1976, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !12905)
!12905 = !{!12906}
!12906 = !DILocalVariable(name: "dev", arg: 1, scope: !12904, file: !1970, line: 270, type: !1978)
!12907 = !DILocation(line: 0, scope: !12904)
!12908 = !DILocation(line: 274, column: 2, scope: !12904)
!12909 = !DILocation(line: 275, column: 12, scope: !12904)
!12910 = !DILocation(line: 276, column: 15, scope: !12904)
!12911 = !DILocation(line: 277, column: 16, scope: !12904)
!12912 = !DILocation(line: 278, column: 15, scope: !12904)
!12913 = !DILocation(line: 279, column: 16, scope: !12904)
!12914 = !DILocation(line: 282, column: 2, scope: !12904)
!12915 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8339, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !12916)
!12916 = !{!12917, !12918}
!12917 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12915, file: !680, line: 1814, type: !935)
!12918 = !DILocalVariable(name: "priority", arg: 2, scope: !12915, file: !680, line: 1814, type: !208)
!12919 = !DILocation(line: 0, scope: !12915)
!12920 = !DILocation(line: 1822, column: 46, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !680, line: 1821, column: 3)
!12922 = distinct !DILexicalBlock(scope: !12915, file: !680, line: 1816, column: 7)
!12923 = !DILocation(line: 1824, column: 1, scope: !12915)
!12924 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1970, file: !1970, line: 118, type: !8242, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !12925)
!12925 = !{!12926, !12927}
!12926 = !DILocalVariable(name: "arg", arg: 1, scope: !12924, file: !1970, line: 118, type: !124)
!12927 = !DILocalVariable(name: "dticks", scope: !12924, file: !1970, line: 121, type: !208)
!12928 = !DILocation(line: 0, scope: !12924)
!12929 = !DILocation(line: 124, column: 2, scope: !12924)
!12930 = !DILocation(line: 129, column: 17, scope: !12924)
!12931 = !DILocation(line: 129, column: 14, scope: !12924)
!12932 = !DILocation(line: 130, column: 15, scope: !12924)
!12933 = !DILocation(line: 145, column: 27, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !1970, line: 132, column: 16)
!12935 = distinct !DILexicalBlock(scope: !12924, file: !1970, line: 132, column: 6)
!12936 = !DILocation(line: 145, column: 25, scope: !12934)
!12937 = !DILocation(line: 145, column: 45, scope: !12934)
!12938 = !DILocation(line: 146, column: 30, scope: !12934)
!12939 = !DILocation(line: 146, column: 20, scope: !12934)
!12940 = !DILocation(line: 147, column: 3, scope: !12934)
!12941 = !DILocation(line: 151, column: 2, scope: !12924)
!12942 = !DILocation(line: 152, column: 1, scope: !12924)
!12943 = distinct !DISubprogram(name: "elapsed", scope: !1970, file: !1970, line: 85, type: !8386, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !12944)
!12944 = !{!12945, !12946, !12947}
!12945 = !DILocalVariable(name: "val1", scope: !12943, file: !1970, line: 87, type: !208)
!12946 = !DILocalVariable(name: "ctrl", scope: !12943, file: !1970, line: 88, type: !208)
!12947 = !DILocalVariable(name: "val2", scope: !12943, file: !1970, line: 89, type: !208)
!12948 = !DILocation(line: 87, column: 27, scope: !12943)
!12949 = !DILocation(line: 0, scope: !12943)
!12950 = !DILocation(line: 88, column: 27, scope: !12943)
!12951 = !DILocation(line: 89, column: 27, scope: !12943)
!12952 = !DILocation(line: 105, column: 12, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12943, file: !1970, line: 105, column: 6)
!12954 = !DILocation(line: 106, column: 6, scope: !12953)
!12955 = !DILocation(line: 107, column: 16, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12953, file: !1970, line: 106, column: 24)
!12957 = !DILocation(line: 111, column: 18, scope: !12956)
!12958 = !DILocation(line: 112, column: 2, scope: !12956)
!12959 = !DILocation(line: 114, column: 20, scope: !12943)
!12960 = !DILocation(line: 114, column: 30, scope: !12943)
!12961 = !DILocation(line: 114, column: 28, scope: !12943)
!12962 = !DILocation(line: 114, column: 2, scope: !12943)
!12963 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1970, file: !1970, line: 154, type: !12964, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !12966)
!12964 = !DISubroutineType(types: !12965)
!12965 = !{null, !909, !153}
!12966 = !{!12967, !12968, !12969, !12970, !12971, !12972, !12973, !12978, !12979}
!12967 = !DILocalVariable(name: "ticks", arg: 1, scope: !12963, file: !1970, line: 154, type: !909)
!12968 = !DILocalVariable(name: "idle", arg: 2, scope: !12963, file: !1970, line: 154, type: !153)
!12969 = !DILocalVariable(name: "delay", scope: !12963, file: !1970, line: 169, type: !208)
!12970 = !DILocalVariable(name: "val1", scope: !12963, file: !1970, line: 170, type: !208)
!12971 = !DILocalVariable(name: "val2", scope: !12963, file: !1970, line: 170, type: !208)
!12972 = !DILocalVariable(name: "last_load_", scope: !12963, file: !1970, line: 171, type: !208)
!12973 = !DILocalVariable(name: "key", scope: !12963, file: !1970, line: 176, type: !12974)
!12974 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !12975)
!12975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !12976)
!12976 = !{!12977}
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12975, file: !638, line: 33, baseType: !125, size: 32)
!12978 = !DILocalVariable(name: "pending", scope: !12963, file: !1970, line: 178, type: !208)
!12979 = !DILocalVariable(name: "unannounced", scope: !12963, file: !1970, line: 185, type: !208)
!12980 = !DILocation(line: 0, scope: !12963)
!12981 = !DILocation(line: 162, column: 49, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12963, file: !1970, line: 162, column: 6)
!12983 = !DILocation(line: 163, column: 17, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12982, file: !1970, line: 162, column: 78)
!12985 = !DILocation(line: 164, column: 13, scope: !12984)
!12986 = !DILocation(line: 165, column: 3, scope: !12984)
!12987 = !DILocation(line: 171, column: 24, scope: !12963)
!12988 = !DILocation(line: 173, column: 10, scope: !12963)
!12989 = !DILocation(line: 174, column: 10, scope: !12963)
!12990 = !DILocalVariable(name: "l", arg: 1, scope: !12991, file: !638, line: 136, type: !12994)
!12991 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !12992, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !12995)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{!12974, !12994}
!12994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!12995 = !{!12990, !12996}
!12996 = !DILocalVariable(name: "k", scope: !12991, file: !638, line: 139, type: !12974)
!12997 = !DILocation(line: 0, scope: !12991, inlinedAt: !12998)
!12998 = distinct !DILocation(line: 176, column: 25, scope: !12963)
!12999 = !DILocation(line: 55, column: 2, scope: !13000, inlinedAt: !13004)
!13000 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !13001)
!13001 = !{!13002, !13003}
!13002 = !DILocalVariable(name: "key", scope: !13000, file: !6838, line: 44, type: !32)
!13003 = !DILocalVariable(name: "tmp", scope: !13000, file: !6838, line: 53, type: !32)
!13004 = distinct !DILocation(line: 145, column: 10, scope: !12991, inlinedAt: !12998)
!13005 = !{i64 2197432}
!13006 = !DILocation(line: 0, scope: !13000, inlinedAt: !13004)
!13007 = !DILocation(line: 178, column: 21, scope: !12963)
!13008 = !DILocation(line: 180, column: 18, scope: !12963)
!13009 = !DILocation(line: 182, column: 14, scope: !12963)
!13010 = !DILocation(line: 183, column: 15, scope: !12963)
!13011 = !DILocation(line: 185, column: 39, scope: !12963)
!13012 = !DILocation(line: 185, column: 37, scope: !12963)
!13013 = !DILocation(line: 187, column: 27, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12963, file: !1970, line: 187, column: 6)
!13015 = !DILocation(line: 187, column: 6, scope: !12963)
!13016 = !DILocation(line: 202, column: 27, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13014, file: !1970, line: 195, column: 9)
!13018 = !DILocation(line: 202, column: 48, scope: !13017)
!13019 = !DILocation(line: 203, column: 9, scope: !13017)
!13020 = !DILocation(line: 204, column: 11, scope: !13017)
!13021 = !DILocation(line: 205, column: 13, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13017, file: !1970, line: 205, column: 7)
!13023 = !DILocation(line: 205, column: 7, scope: !13017)
!13024 = !DILocation(line: 0, scope: !13014)
!13025 = !DILocation(line: 212, column: 18, scope: !12963)
!13026 = !DILocation(line: 214, column: 28, scope: !12963)
!13027 = !DILocation(line: 214, column: 16, scope: !12963)
!13028 = !DILocation(line: 215, column: 15, scope: !12963)
!13029 = !DILocation(line: 227, column: 11, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !12963, file: !1970, line: 227, column: 6)
!13031 = !DILocation(line: 227, column: 6, scope: !12963)
!13032 = !DILocation(line: 228, column: 15, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13030, file: !1970, line: 227, column: 19)
!13034 = !DILocation(line: 228, column: 38, scope: !13033)
!13035 = !DILocation(line: 228, column: 24, scope: !13033)
!13036 = !DILocation(line: 229, column: 2, scope: !13033)
!13037 = !DILocation(line: 230, column: 24, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13030, file: !1970, line: 229, column: 9)
!13039 = !DILocation(line: 230, column: 15, scope: !13038)
!13040 = !DILocation(line: 0, scope: !13030)
!13041 = !DILocalVariable(name: "key", arg: 2, scope: !13042, file: !638, line: 190, type: !12974)
!13042 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !13043, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !13045)
!13043 = !DISubroutineType(types: !13044)
!13044 = !{null, !12994, !12974}
!13045 = !{!13046, !13041}
!13046 = !DILocalVariable(name: "l", arg: 1, scope: !13042, file: !638, line: 189, type: !12994)
!13047 = !DILocation(line: 0, scope: !13042, inlinedAt: !13048)
!13048 = distinct !DILocation(line: 232, column: 2, scope: !12963)
!13049 = !DILocalVariable(name: "key", arg: 1, scope: !13050, file: !6838, line: 84, type: !32)
!13050 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !13051)
!13051 = !{!13049}
!13052 = !DILocation(line: 0, scope: !13050, inlinedAt: !13053)
!13053 = distinct !DILocation(line: 215, column: 2, scope: !13042, inlinedAt: !13048)
!13054 = !DILocation(line: 95, column: 2, scope: !13050, inlinedAt: !13053)
!13055 = !{i64 2198249}
!13056 = !DILocation(line: 234, column: 1, scope: !12963)
!13057 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1970, file: !1970, line: 236, type: !8386, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !13058)
!13058 = !{!13059, !13060}
!13059 = !DILocalVariable(name: "key", scope: !13057, file: !1970, line: 242, type: !12974)
!13060 = !DILocalVariable(name: "cyc", scope: !13057, file: !1970, line: 243, type: !208)
!13061 = !DILocation(line: 0, scope: !12991, inlinedAt: !13062)
!13062 = distinct !DILocation(line: 242, column: 25, scope: !13057)
!13063 = !DILocation(line: 55, column: 2, scope: !13000, inlinedAt: !13064)
!13064 = distinct !DILocation(line: 145, column: 10, scope: !12991, inlinedAt: !13062)
!13065 = !DILocation(line: 0, scope: !13000, inlinedAt: !13064)
!13066 = !DILocation(line: 0, scope: !13057)
!13067 = !DILocation(line: 243, column: 17, scope: !13057)
!13068 = !DILocation(line: 243, column: 29, scope: !13057)
!13069 = !DILocation(line: 243, column: 27, scope: !13057)
!13070 = !DILocation(line: 243, column: 43, scope: !13057)
!13071 = !DILocation(line: 243, column: 41, scope: !13057)
!13072 = !DILocation(line: 0, scope: !13042, inlinedAt: !13073)
!13073 = distinct !DILocation(line: 245, column: 2, scope: !13057)
!13074 = !DILocation(line: 0, scope: !13050, inlinedAt: !13075)
!13075 = distinct !DILocation(line: 215, column: 2, scope: !13042, inlinedAt: !13073)
!13076 = !DILocation(line: 95, column: 2, scope: !13050, inlinedAt: !13075)
!13077 = !DILocation(line: 246, column: 13, scope: !13057)
!13078 = !DILocation(line: 246, column: 2, scope: !13057)
!13079 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1970, file: !1970, line: 249, type: !8386, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !13080)
!13080 = !{!13081, !13082}
!13081 = !DILocalVariable(name: "key", scope: !13079, file: !1970, line: 251, type: !12974)
!13082 = !DILocalVariable(name: "ret", scope: !13079, file: !1970, line: 252, type: !208)
!13083 = !DILocation(line: 0, scope: !12991, inlinedAt: !13084)
!13084 = distinct !DILocation(line: 251, column: 25, scope: !13079)
!13085 = !DILocation(line: 55, column: 2, scope: !13000, inlinedAt: !13086)
!13086 = distinct !DILocation(line: 145, column: 10, scope: !12991, inlinedAt: !13084)
!13087 = !DILocation(line: 0, scope: !13000, inlinedAt: !13086)
!13088 = !DILocation(line: 0, scope: !13079)
!13089 = !DILocation(line: 252, column: 17, scope: !13079)
!13090 = !DILocation(line: 252, column: 29, scope: !13079)
!13091 = !DILocation(line: 252, column: 27, scope: !13079)
!13092 = !DILocation(line: 0, scope: !13042, inlinedAt: !13093)
!13093 = distinct !DILocation(line: 254, column: 2, scope: !13079)
!13094 = !DILocation(line: 0, scope: !13050, inlinedAt: !13095)
!13095 = distinct !DILocation(line: 215, column: 2, scope: !13042, inlinedAt: !13093)
!13096 = !DILocation(line: 95, column: 2, scope: !13050, inlinedAt: !13095)
!13097 = !DILocation(line: 255, column: 2, scope: !13079)
!13098 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1970, file: !1970, line: 258, type: !3300, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !639)
!13099 = !DILocation(line: 260, column: 6, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13098, file: !1970, line: 260, column: 6)
!13101 = !DILocation(line: 260, column: 16, scope: !13100)
!13102 = !DILocation(line: 260, column: 6, scope: !13098)
!13103 = !DILocation(line: 261, column: 17, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13100, file: !1970, line: 260, column: 34)
!13105 = !DILocation(line: 262, column: 2, scope: !13104)
!13106 = !DILocation(line: 263, column: 1, scope: !13098)
!13107 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1970, file: !1970, line: 265, type: !3300, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !639)
!13108 = !DILocation(line: 267, column: 16, scope: !13107)
!13109 = !DILocation(line: 268, column: 1, scope: !13107)
!13110 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13111, file: !13111, line: 9, type: !13112, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !13135)
!13111 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13112 = !DISubroutineType(types: !13113)
!13113 = !{!125, !13114, !150, !13134}
!13114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13115, size: 32)
!13115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13116)
!13116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1847, line: 60, size: 64, elements: !13117)
!13117 = !{!13118, !13133}
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13116, file: !1847, line: 69, baseType: !13119, size: 32)
!13119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13120, size: 32)
!13120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13121)
!13121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1847, line: 50, size: 64, elements: !13122)
!13122 = !{!13123, !13131, !13132}
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13121, file: !1847, line: 52, baseType: !13124, size: 32)
!13124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13125, size: 32)
!13125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13126)
!13126 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1858, line: 37, baseType: !13127)
!13127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1858, line: 32, size: 64, elements: !13128)
!13128 = !{!13129, !13130}
!13129 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13127, file: !1858, line: 34, baseType: !208, size: 32)
!13130 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13127, file: !1858, line: 36, baseType: !208, size: 32, offset: 32)
!13131 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13121, file: !1847, line: 54, baseType: !150, size: 8, offset: 32)
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13121, file: !1847, line: 56, baseType: !150, size: 8, offset: 40)
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13116, file: !1847, line: 71, baseType: !150, size: 8, offset: 32)
!13134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13119, size: 32)
!13135 = !{!13136, !13137, !13138}
!13136 = !DILocalVariable(name: "config", arg: 1, scope: !13110, file: !13111, line: 9, type: !13114)
!13137 = !DILocalVariable(name: "id", arg: 2, scope: !13110, file: !13111, line: 9, type: !150)
!13138 = !DILocalVariable(name: "state", arg: 3, scope: !13110, file: !13111, line: 10, type: !13134)
!13139 = !DILocation(line: 0, scope: !13110)
!13140 = !DILocation(line: 12, column: 20, scope: !13110)
!13141 = !DILocation(line: 13, column: 27, scope: !13110)
!13142 = !DILocation(line: 13, column: 42, scope: !13110)
!13143 = !DILocation(line: 13, column: 19, scope: !13110)
!13144 = !DILocation(line: 13, column: 16, scope: !13110)
!13145 = !DILocation(line: 13, column: 2, scope: !13110)
!13146 = distinct !{!13146, !13145, !13147}
!13147 = !DILocation(line: 19, column: 2, scope: !13110)
!13148 = !DILocation(line: 14, column: 23, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13150, file: !13111, line: 14, column: 7)
!13150 = distinct !DILexicalBlock(scope: !13110, file: !13111, line: 13, column: 54)
!13151 = !DILocation(line: 14, column: 10, scope: !13149)
!13152 = !DILocation(line: 18, column: 11, scope: !13150)
!13153 = !DILocation(line: 14, column: 7, scope: !13150)
!13154 = !DILocation(line: 22, column: 1, scope: !13110)
!13155 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2087, file: !2087, line: 193, type: !13156, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2005, retainedNodes: !13165)
!13156 = !DISubroutineType(types: !13157)
!13157 = !{!125, !13158, !150, !22}
!13158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13159, size: 32)
!13159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13160)
!13160 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1858, line: 37, baseType: !13161)
!13161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1858, line: 32, size: 64, elements: !13162)
!13162 = !{!13163, !13164}
!13163 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13161, file: !1858, line: 34, baseType: !208, size: 32)
!13164 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13161, file: !1858, line: 36, baseType: !208, size: 32, offset: 32)
!13165 = !{!13166, !13167, !13168, !13169, !13170, !13171, !13172, !13173, !13175}
!13166 = !DILocalVariable(name: "pins", arg: 1, scope: !13155, file: !2087, line: 193, type: !13158)
!13167 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13155, file: !2087, line: 193, type: !150)
!13168 = !DILocalVariable(name: "reg", arg: 3, scope: !13155, file: !2087, line: 194, type: !22)
!13169 = !DILocalVariable(name: "pin", scope: !13155, file: !2087, line: 196, type: !208)
!13170 = !DILocalVariable(name: "mux", scope: !13155, file: !2087, line: 196, type: !208)
!13171 = !DILocalVariable(name: "pin_cgf", scope: !13155, file: !2087, line: 197, type: !208)
!13172 = !DILocalVariable(name: "ret", scope: !13155, file: !2087, line: 198, type: !125)
!13173 = !DILocalVariable(name: "i", scope: !13174, file: !2087, line: 209, type: !150)
!13174 = distinct !DILexicalBlock(scope: !13155, file: !2087, line: 209, column: 2)
!13175 = !DILocalVariable(name: "gpio_out", scope: !13176, file: !2087, line: 239, type: !208)
!13176 = distinct !DILexicalBlock(scope: !13177, file: !2087, line: 238, column: 55)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !2087, line: 238, column: 14)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !2087, line: 236, column: 14)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !2087, line: 234, column: 7)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !2087, line: 209, column: 41)
!13181 = distinct !DILexicalBlock(scope: !13174, file: !2087, line: 209, column: 2)
!13182 = !DILocation(line: 0, scope: !13155)
!13183 = !DILocation(line: 0, scope: !13174)
!13184 = !DILocation(line: 209, column: 25, scope: !13181)
!13185 = !DILocation(line: 209, column: 2, scope: !13174)
!13186 = distinct !{!13186, !13185, !13187}
!13187 = !DILocation(line: 259, column: 2, scope: !13174)
!13188 = !DILocation(line: 210, column: 17, scope: !13180)
!13189 = !DILocation(line: 234, column: 7, scope: !13179)
!13190 = !DILocation(line: 234, column: 33, scope: !13179)
!13191 = !DILocation(line: 234, column: 7, scope: !13180)
!13192 = !DILocation(line: 235, column: 22, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13179, file: !2087, line: 234, column: 49)
!13194 = !DILocation(line: 235, column: 29, scope: !13193)
!13195 = !DILocation(line: 236, column: 3, scope: !13193)
!13196 = !DILocation(line: 236, column: 14, scope: !13179)
!13197 = !DILocation(line: 239, column: 32, scope: !13176)
!13198 = !DILocation(line: 0, scope: !13176)
!13199 = !DILocation(line: 241, column: 8, scope: !13176)
!13200 = !DILocation(line: 246, column: 3, scope: !13176)
!13201 = !DILocation(line: 252, column: 9, scope: !13180)
!13202 = !DILocation(line: 255, column: 9, scope: !13180)
!13203 = !DILocation(line: 256, column: 11, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13180, file: !2087, line: 256, column: 7)
!13205 = !DILocation(line: 209, column: 37, scope: !13181)
!13206 = !DILocation(line: 256, column: 7, scope: !13180)
!13207 = !DILocation(line: 262, column: 1, scope: !13155)
!13208 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2087, file: !2087, line: 176, type: !13209, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2005, retainedNodes: !13211)
!13209 = !DISubroutineType(types: !13210)
!13210 = !{!125, !208, !208, !208}
!13211 = !{!13212, !13213, !13214, !13215}
!13212 = !DILocalVariable(name: "pin", arg: 1, scope: !13208, file: !2087, line: 176, type: !208)
!13213 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13208, file: !2087, line: 176, type: !208)
!13214 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13208, file: !2087, line: 176, type: !208)
!13215 = !DILocalVariable(name: "port_device", scope: !13208, file: !2087, line: 178, type: !2017)
!13216 = !DILocation(line: 0, scope: !13208)
!13217 = !DILocation(line: 180, column: 22, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13208, file: !2087, line: 180, column: 6)
!13219 = !DILocation(line: 180, column: 6, scope: !13208)
!13220 = !DILocation(line: 180, column: 6, scope: !13218)
!13221 = !DILocation(line: 184, column: 16, scope: !13208)
!13222 = !DILocation(line: 186, column: 19, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13208, file: !2087, line: 186, column: 6)
!13224 = !DILocation(line: 186, column: 28, scope: !13223)
!13225 = !DILocation(line: 186, column: 33, scope: !13223)
!13226 = !DILocation(line: 186, column: 6, scope: !13208)
!13227 = !DILocation(line: 190, column: 43, scope: !13208)
!13228 = !DILocation(line: 190, column: 9, scope: !13208)
!13229 = !DILocation(line: 190, column: 2, scope: !13208)
!13230 = !DILocation(line: 191, column: 1, scope: !13208)
!13231 = distinct !DISubprogram(name: "device_is_ready", scope: !4205, file: !4205, line: 47, type: !13232, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2005, retainedNodes: !13234)
!13232 = !DISubroutineType(types: !13233)
!13233 = !{!153, !2017}
!13234 = !{!13235}
!13235 = !DILocalVariable(name: "dev", arg: 1, scope: !13231, file: !4205, line: 47, type: !2017)
!13236 = !DILocation(line: 0, scope: !13231)
!13237 = !DILocation(line: 55, column: 2, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13231, file: !4205, line: 55, column: 2)
!13239 = !{i64 2149431438}
!13240 = !DILocation(line: 56, column: 9, scope: !13231)
!13241 = !DILocation(line: 56, column: 2, scope: !13231)
!13242 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13232, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2005, retainedNodes: !13243)
!13243 = !{!13244}
!13244 = !DILocalVariable(name: "dev", arg: 1, scope: !13242, file: !137, line: 730, type: !2017)
!13245 = !DILocation(line: 0, scope: !13242)
!13246 = !DILocation(line: 732, column: 9, scope: !13242)
!13247 = !DILocation(line: 732, column: 2, scope: !13242)
!13248 = distinct !DISubprogram(name: "SystemInit", scope: !2135, file: !2135, line: 167, type: !3300, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2095, retainedNodes: !639)
!13249 = !DILocation(line: 182, column: 1, scope: !13248)
!13250 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2135, file: !2135, line: 220, type: !3300, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2095, retainedNodes: !13251)
!13251 = !{!13252, !13253, !13254, !13255, !13256}
!13252 = !DILocalVariable(name: "tmp", scope: !13250, file: !2135, line: 222, type: !208)
!13253 = !DILocalVariable(name: "pllvco", scope: !13250, file: !2135, line: 222, type: !208)
!13254 = !DILocalVariable(name: "pllp", scope: !13250, file: !2135, line: 222, type: !208)
!13255 = !DILocalVariable(name: "pllsource", scope: !13250, file: !2135, line: 222, type: !208)
!13256 = !DILocalVariable(name: "pllm", scope: !13250, file: !2135, line: 222, type: !208)
!13257 = !DILocation(line: 0, scope: !13250)
!13258 = !DILocation(line: 225, column: 14, scope: !13250)
!13259 = !DILocation(line: 225, column: 19, scope: !13250)
!13260 = !DILocation(line: 227, column: 3, scope: !13250)
!13261 = !DILocation(line: 234, column: 7, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13250, file: !2135, line: 228, column: 3)
!13263 = !DILocation(line: 240, column: 25, scope: !13262)
!13264 = !DILocation(line: 241, column: 19, scope: !13262)
!13265 = !DILocation(line: 241, column: 27, scope: !13262)
!13266 = !DILocation(line: 243, column: 21, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13262, file: !2135, line: 243, column: 11)
!13268 = !DILocation(line: 0, scope: !13267)
!13269 = !DILocation(line: 254, column: 22, scope: !13262)
!13270 = !DILocation(line: 254, column: 62, scope: !13262)
!13271 = !DILocation(line: 255, column: 31, scope: !13262)
!13272 = !DILocation(line: 256, column: 7, scope: !13262)
!13273 = !DILocation(line: 0, scope: !13262)
!13274 = !DILocation(line: 263, column: 30, scope: !13250)
!13275 = !DILocation(line: 263, column: 52, scope: !13250)
!13276 = !DILocation(line: 263, column: 9, scope: !13250)
!13277 = !DILocation(line: 265, column: 19, scope: !13250)
!13278 = !DILocation(line: 266, column: 1, scope: !13250)
!13279 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13280, file: !13280, line: 200, type: !13281, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!13280 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13281 = !DISubroutineType(types: !13282)
!13282 = !{!13283}
!13283 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3117, line: 44, baseType: !3116)
!13284 = !DILocation(line: 202, column: 3, scope: !13279)
!13285 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13280, file: !13280, line: 219, type: !13286, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13310)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{!13283, !13288}
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13289, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13290, line: 70, baseType: !13291)
!13290 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13290, line: 49, size: 384, elements: !13292)
!13292 = !{!13293, !13294, !13295, !13296, !13297, !13298, !13299}
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13291, file: !13290, line: 51, baseType: !208, size: 32)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13291, file: !13290, line: 54, baseType: !208, size: 32, offset: 32)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13291, file: !13290, line: 57, baseType: !208, size: 32, offset: 64)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13291, file: !13290, line: 60, baseType: !208, size: 32, offset: 96)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13291, file: !13290, line: 63, baseType: !208, size: 32, offset: 128)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13291, file: !13290, line: 66, baseType: !208, size: 32, offset: 160)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13291, file: !13290, line: 69, baseType: !13300, size: 192, offset: 192)
!13300 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13301, line: 73, baseType: !13302)
!13301 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13301, line: 45, size: 192, elements: !13303)
!13303 = !{!13304, !13305, !13306, !13307, !13308, !13309}
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13302, file: !13301, line: 47, baseType: !208, size: 32)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13302, file: !13301, line: 50, baseType: !208, size: 32, offset: 32)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13302, file: !13301, line: 53, baseType: !208, size: 32, offset: 64)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13302, file: !13301, line: 56, baseType: !208, size: 32, offset: 96)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13302, file: !13301, line: 60, baseType: !208, size: 32, offset: 128)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13302, file: !13301, line: 63, baseType: !208, size: 32, offset: 160)
!13310 = !{!13311, !13312, !13313, !13314, !13318}
!13311 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13285, file: !13280, line: 219, type: !13288)
!13312 = !DILocalVariable(name: "tickstart", scope: !13285, file: !13280, line: 221, type: !208)
!13313 = !DILocalVariable(name: "pll_config", scope: !13285, file: !13280, line: 221, type: !208)
!13314 = !DILocalVariable(name: "pwrclkchanged", scope: !13315, file: !13280, line: 391, type: !13317)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !13280, line: 390, column: 3)
!13316 = distinct !DILexicalBlock(scope: !13285, file: !13280, line: 389, column: 6)
!13317 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !976, line: 188, baseType: !3123)
!13318 = !DILocalVariable(name: "tmpreg", scope: !13319, file: !13280, line: 400, type: !423)
!13319 = distinct !DILexicalBlock(scope: !13320, file: !13280, line: 400, column: 7)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !13280, line: 399, column: 5)
!13321 = distinct !DILexicalBlock(scope: !13315, file: !13280, line: 398, column: 8)
!13322 = !DILocation(line: 0, scope: !13285)
!13323 = !DILocation(line: 224, column: 24, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13285, file: !13280, line: 224, column: 6)
!13325 = !DILocation(line: 224, column: 6, scope: !13285)
!13326 = !DILocation(line: 232, column: 27, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13285, file: !13280, line: 232, column: 6)
!13328 = !DILocation(line: 232, column: 43, scope: !13327)
!13329 = !DILocation(line: 232, column: 69, scope: !13327)
!13330 = !DILocation(line: 232, column: 6, scope: !13285)
!13331 = !DILocation(line: 237, column: 9, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !13280, line: 237, column: 8)
!13333 = distinct !DILexicalBlock(scope: !13327, file: !13280, line: 233, column: 3)
!13334 = !DILocation(line: 237, column: 39, scope: !13332)
!13335 = !DILocation(line: 237, column: 60, scope: !13332)
!13336 = !DILocation(line: 238, column: 9, scope: !13332)
!13337 = !DILocation(line: 238, column: 39, scope: !13332)
!13338 = !DILocation(line: 238, column: 60, scope: !13332)
!13339 = !DILocation(line: 238, column: 70, scope: !13332)
!13340 = !DILocation(line: 238, column: 78, scope: !13332)
!13341 = !DILocation(line: 238, column: 100, scope: !13332)
!13342 = !DILocation(line: 237, column: 8, scope: !13333)
!13343 = !DILocation(line: 240, column: 11, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13345, file: !13280, line: 240, column: 10)
!13345 = distinct !DILexicalBlock(scope: !13332, file: !13280, line: 239, column: 5)
!13346 = !DILocation(line: 240, column: 57, scope: !13344)
!13347 = !DILocation(line: 240, column: 80, scope: !13344)
!13348 = !DILocation(line: 240, column: 89, scope: !13344)
!13349 = !DILocation(line: 240, column: 10, scope: !13345)
!13350 = !DILocation(line: 248, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !13280, line: 248, column: 7)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !13280, line: 248, column: 7)
!13353 = distinct !DILexicalBlock(scope: !13332, file: !13280, line: 246, column: 5)
!13354 = !DILocation(line: 248, column: 7, scope: !13352)
!13355 = !DILocation(line: 248, column: 7, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13351, file: !13280, line: 248, column: 7)
!13357 = !DILocation(line: 248, column: 7, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !13280, line: 248, column: 7)
!13359 = distinct !DILexicalBlock(scope: !13351, file: !13280, line: 248, column: 7)
!13360 = !DILocation(line: 248, column: 7, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13359, file: !13280, line: 248, column: 7)
!13362 = !DILocation(line: 0, scope: !13351)
!13363 = !DILocation(line: 251, column: 30, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13353, file: !13280, line: 251, column: 10)
!13365 = !DILocation(line: 251, column: 40, scope: !13364)
!13366 = !DILocation(line: 0, scope: !13364)
!13367 = !DILocation(line: 251, column: 10, scope: !13353)
!13368 = !DILocation(line: 257, column: 15, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13364, file: !13280, line: 252, column: 7)
!13370 = !DILocation(line: 257, column: 51, scope: !13369)
!13371 = !DILocation(line: 257, column: 9, scope: !13369)
!13372 = !DILocation(line: 259, column: 15, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !13280, line: 259, column: 14)
!13374 = distinct !DILexicalBlock(scope: !13369, file: !13280, line: 258, column: 9)
!13375 = !DILocation(line: 259, column: 29, scope: !13373)
!13376 = !DILocation(line: 259, column: 43, scope: !13373)
!13377 = !DILocation(line: 259, column: 14, scope: !13374)
!13378 = distinct !{!13378, !13371, !13379}
!13379 = !DILocation(line: 263, column: 9, scope: !13369)
!13380 = !DILocation(line: 271, column: 15, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13364, file: !13280, line: 266, column: 7)
!13382 = !DILocation(line: 271, column: 9, scope: !13381)
!13383 = !DILocation(line: 273, column: 15, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13385, file: !13280, line: 273, column: 14)
!13385 = distinct !DILexicalBlock(scope: !13381, file: !13280, line: 272, column: 9)
!13386 = !DILocation(line: 273, column: 29, scope: !13384)
!13387 = !DILocation(line: 273, column: 43, scope: !13384)
!13388 = !DILocation(line: 273, column: 14, scope: !13385)
!13389 = distinct !{!13389, !13382, !13390}
!13390 = !DILocation(line: 277, column: 9, scope: !13381)
!13391 = !DILocation(line: 282, column: 27, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13285, file: !13280, line: 282, column: 6)
!13393 = !DILocation(line: 282, column: 43, scope: !13392)
!13394 = !DILocation(line: 282, column: 69, scope: !13392)
!13395 = !DILocation(line: 282, column: 6, scope: !13285)
!13396 = !DILocation(line: 289, column: 9, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13398, file: !13280, line: 289, column: 8)
!13398 = distinct !DILexicalBlock(scope: !13392, file: !13280, line: 283, column: 3)
!13399 = !DILocation(line: 289, column: 39, scope: !13397)
!13400 = !DILocation(line: 289, column: 60, scope: !13397)
!13401 = !DILocation(line: 290, column: 9, scope: !13397)
!13402 = !DILocation(line: 290, column: 39, scope: !13397)
!13403 = !DILocation(line: 290, column: 60, scope: !13397)
!13404 = !DILocation(line: 290, column: 70, scope: !13397)
!13405 = !DILocation(line: 290, column: 78, scope: !13397)
!13406 = !DILocation(line: 290, column: 100, scope: !13397)
!13407 = !DILocation(line: 289, column: 8, scope: !13398)
!13408 = !DILocation(line: 293, column: 11, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !13280, line: 293, column: 10)
!13410 = distinct !DILexicalBlock(scope: !13397, file: !13280, line: 291, column: 5)
!13411 = !DILocation(line: 293, column: 57, scope: !13409)
!13412 = !DILocation(line: 293, column: 80, scope: !13409)
!13413 = !DILocation(line: 293, column: 89, scope: !13409)
!13414 = !DILocation(line: 293, column: 10, scope: !13410)
!13415 = !DILocation(line: 307, column: 30, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !13280, line: 307, column: 10)
!13417 = distinct !DILexicalBlock(scope: !13397, file: !13280, line: 305, column: 5)
!13418 = !DILocation(line: 307, column: 39, scope: !13416)
!13419 = !DILocation(line: 307, column: 10, scope: !13417)
!13420 = !DILocation(line: 310, column: 9, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13416, file: !13280, line: 308, column: 7)
!13422 = !DILocation(line: 313, column: 21, scope: !13421)
!13423 = !DILocation(line: 316, column: 9, scope: !13421)
!13424 = !DILocation(line: 316, column: 15, scope: !13421)
!13425 = !DILocation(line: 316, column: 51, scope: !13421)
!13426 = !DILocation(line: 318, column: 15, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13428, file: !13280, line: 318, column: 14)
!13428 = distinct !DILexicalBlock(scope: !13421, file: !13280, line: 317, column: 9)
!13429 = !DILocation(line: 318, column: 29, scope: !13427)
!13430 = !DILocation(line: 318, column: 43, scope: !13427)
!13431 = !DILocation(line: 318, column: 14, scope: !13428)
!13432 = distinct !{!13432, !13423, !13433}
!13433 = !DILocation(line: 322, column: 9, scope: !13421)
!13434 = !DILocation(line: 330, column: 9, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13416, file: !13280, line: 328, column: 7)
!13436 = !DILocation(line: 333, column: 21, scope: !13435)
!13437 = !DILocation(line: 336, column: 9, scope: !13435)
!13438 = !DILocation(line: 336, column: 15, scope: !13435)
!13439 = !DILocation(line: 338, column: 15, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !13280, line: 338, column: 14)
!13441 = distinct !DILexicalBlock(scope: !13435, file: !13280, line: 337, column: 9)
!13442 = !DILocation(line: 338, column: 29, scope: !13440)
!13443 = !DILocation(line: 338, column: 43, scope: !13440)
!13444 = !DILocation(line: 338, column: 14, scope: !13441)
!13445 = distinct !{!13445, !13437, !13446}
!13446 = !DILocation(line: 342, column: 9, scope: !13435)
!13447 = !DILocation(line: 0, scope: !13397)
!13448 = !DILocation(line: 347, column: 27, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13285, file: !13280, line: 347, column: 6)
!13450 = !DILocation(line: 347, column: 43, scope: !13449)
!13451 = !DILocation(line: 347, column: 69, scope: !13449)
!13452 = !DILocation(line: 347, column: 6, scope: !13285)
!13453 = !DILocation(line: 353, column: 28, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !13280, line: 353, column: 8)
!13455 = distinct !DILexicalBlock(scope: !13449, file: !13280, line: 348, column: 3)
!13456 = !DILocation(line: 353, column: 37, scope: !13454)
!13457 = !DILocation(line: 353, column: 8, scope: !13455)
!13458 = !DILocation(line: 356, column: 7, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13454, file: !13280, line: 354, column: 5)
!13460 = !DILocation(line: 359, column: 19, scope: !13459)
!13461 = !DILocation(line: 362, column: 7, scope: !13459)
!13462 = !DILocation(line: 362, column: 13, scope: !13459)
!13463 = !DILocation(line: 362, column: 49, scope: !13459)
!13464 = !DILocation(line: 364, column: 13, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !13280, line: 364, column: 12)
!13466 = distinct !DILexicalBlock(scope: !13459, file: !13280, line: 363, column: 7)
!13467 = !DILocation(line: 364, column: 27, scope: !13465)
!13468 = !DILocation(line: 364, column: 41, scope: !13465)
!13469 = !DILocation(line: 364, column: 12, scope: !13466)
!13470 = distinct !{!13470, !13461, !13471}
!13471 = !DILocation(line: 368, column: 7, scope: !13459)
!13472 = !DILocation(line: 373, column: 7, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13454, file: !13280, line: 371, column: 5)
!13474 = !DILocation(line: 376, column: 19, scope: !13473)
!13475 = !DILocation(line: 379, column: 7, scope: !13473)
!13476 = !DILocation(line: 379, column: 13, scope: !13473)
!13477 = !DILocation(line: 381, column: 13, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13280, line: 381, column: 12)
!13479 = distinct !DILexicalBlock(scope: !13473, file: !13280, line: 380, column: 7)
!13480 = !DILocation(line: 381, column: 27, scope: !13478)
!13481 = !DILocation(line: 381, column: 41, scope: !13478)
!13482 = !DILocation(line: 381, column: 12, scope: !13479)
!13483 = distinct !{!13483, !13475, !13484}
!13484 = !DILocation(line: 385, column: 7, scope: !13473)
!13485 = !DILocation(line: 389, column: 27, scope: !13316)
!13486 = !DILocation(line: 389, column: 43, scope: !13316)
!13487 = !DILocation(line: 389, column: 69, scope: !13316)
!13488 = !DILocation(line: 389, column: 6, scope: !13285)
!13489 = !DILocation(line: 0, scope: !13315)
!13490 = !DILocation(line: 398, column: 8, scope: !13321)
!13491 = !DILocation(line: 398, column: 8, scope: !13315)
!13492 = !DILocation(line: 400, column: 7, scope: !13319)
!13493 = !DILocation(line: 400, column: 7, scope: !13320)
!13494 = !DILocation(line: 402, column: 5, scope: !13320)
!13495 = !DILocation(line: 404, column: 8, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13315, file: !13280, line: 404, column: 8)
!13497 = !DILocation(line: 404, column: 8, scope: !13315)
!13498 = !DILocation(line: 407, column: 7, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13496, file: !13280, line: 405, column: 5)
!13500 = !DILocation(line: 410, column: 19, scope: !13499)
!13501 = !DILocation(line: 412, column: 7, scope: !13499)
!13502 = !DILocation(line: 412, column: 13, scope: !13499)
!13503 = !DILocation(line: 414, column: 13, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13505, file: !13280, line: 414, column: 12)
!13505 = distinct !DILexicalBlock(scope: !13499, file: !13280, line: 413, column: 7)
!13506 = !DILocation(line: 414, column: 27, scope: !13504)
!13507 = !DILocation(line: 414, column: 40, scope: !13504)
!13508 = !DILocation(line: 414, column: 12, scope: !13505)
!13509 = distinct !{!13509, !13501, !13510}
!13510 = !DILocation(line: 418, column: 7, scope: !13499)
!13511 = !DILocation(line: 422, column: 5, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !13280, line: 422, column: 5)
!13513 = distinct !DILexicalBlock(scope: !13315, file: !13280, line: 422, column: 5)
!13514 = !DILocation(line: 422, column: 5, scope: !13513)
!13515 = !DILocation(line: 422, column: 5, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13512, file: !13280, line: 422, column: 5)
!13517 = !DILocation(line: 422, column: 5, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !13280, line: 422, column: 5)
!13519 = distinct !DILexicalBlock(scope: !13512, file: !13280, line: 422, column: 5)
!13520 = !DILocation(line: 422, column: 5, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13519, file: !13280, line: 422, column: 5)
!13522 = !DILocation(line: 0, scope: !13512)
!13523 = !DILocation(line: 424, column: 28, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13315, file: !13280, line: 424, column: 8)
!13525 = !DILocation(line: 424, column: 38, scope: !13524)
!13526 = !DILocation(line: 0, scope: !13524)
!13527 = !DILocation(line: 424, column: 8, scope: !13315)
!13528 = !DILocation(line: 430, column: 13, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13524, file: !13280, line: 425, column: 5)
!13530 = !DILocation(line: 430, column: 49, scope: !13529)
!13531 = !DILocation(line: 430, column: 7, scope: !13529)
!13532 = !DILocation(line: 432, column: 13, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13534, file: !13280, line: 432, column: 12)
!13534 = distinct !DILexicalBlock(scope: !13529, file: !13280, line: 431, column: 7)
!13535 = !DILocation(line: 432, column: 27, scope: !13533)
!13536 = !DILocation(line: 432, column: 41, scope: !13533)
!13537 = !DILocation(line: 432, column: 12, scope: !13534)
!13538 = distinct !{!13538, !13531, !13539}
!13539 = !DILocation(line: 436, column: 7, scope: !13529)
!13540 = !DILocation(line: 444, column: 13, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13524, file: !13280, line: 439, column: 5)
!13542 = !DILocation(line: 444, column: 7, scope: !13541)
!13543 = !DILocation(line: 446, column: 13, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13545, file: !13280, line: 446, column: 12)
!13545 = distinct !DILexicalBlock(scope: !13541, file: !13280, line: 445, column: 7)
!13546 = !DILocation(line: 446, column: 27, scope: !13544)
!13547 = !DILocation(line: 446, column: 41, scope: !13544)
!13548 = !DILocation(line: 446, column: 12, scope: !13545)
!13549 = distinct !{!13549, !13542, !13550}
!13550 = !DILocation(line: 450, column: 7, scope: !13541)
!13551 = !DILocation(line: 454, column: 8, scope: !13315)
!13552 = !DILocation(line: 456, column: 7, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !13280, line: 455, column: 5)
!13554 = distinct !DILexicalBlock(scope: !13315, file: !13280, line: 454, column: 8)
!13555 = !DILocation(line: 457, column: 5, scope: !13553)
!13556 = !DILocation(line: 462, column: 31, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13285, file: !13280, line: 462, column: 7)
!13558 = !DILocation(line: 462, column: 41, scope: !13557)
!13559 = !DILocation(line: 462, column: 7, scope: !13285)
!13560 = !DILocation(line: 465, column: 8, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13562, file: !13280, line: 465, column: 8)
!13562 = distinct !DILexicalBlock(scope: !13557, file: !13280, line: 463, column: 3)
!13563 = !DILocation(line: 465, column: 38, scope: !13561)
!13564 = !DILocation(line: 465, column: 8, scope: !13562)
!13565 = !DILocation(line: 467, column: 44, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !13280, line: 467, column: 10)
!13567 = distinct !DILexicalBlock(scope: !13561, file: !13280, line: 466, column: 5)
!13568 = !DILocation(line: 0, scope: !13566)
!13569 = !DILocation(line: 467, column: 10, scope: !13567)
!13570 = !DILocation(line: 483, column: 15, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13566, file: !13280, line: 468, column: 7)
!13572 = !DILocation(line: 483, column: 9, scope: !13571)
!13573 = !DILocation(line: 485, column: 15, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !13280, line: 485, column: 14)
!13575 = distinct !DILexicalBlock(scope: !13571, file: !13280, line: 484, column: 9)
!13576 = !DILocation(line: 485, column: 29, scope: !13574)
!13577 = !DILocation(line: 485, column: 43, scope: !13574)
!13578 = !DILocation(line: 485, column: 14, scope: !13575)
!13579 = distinct !{!13579, !13572, !13580}
!13580 = !DILocation(line: 489, column: 9, scope: !13571)
!13581 = !DILocation(line: 492, column: 9, scope: !13571)
!13582 = !DILocation(line: 498, column: 9, scope: !13571)
!13583 = !DILocation(line: 501, column: 21, scope: !13571)
!13584 = !DILocation(line: 504, column: 9, scope: !13571)
!13585 = !DILocation(line: 504, column: 15, scope: !13571)
!13586 = !DILocation(line: 504, column: 51, scope: !13571)
!13587 = !DILocation(line: 506, column: 15, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !13280, line: 506, column: 14)
!13589 = distinct !DILexicalBlock(scope: !13571, file: !13280, line: 505, column: 9)
!13590 = !DILocation(line: 506, column: 29, scope: !13588)
!13591 = !DILocation(line: 506, column: 43, scope: !13588)
!13592 = !DILocation(line: 506, column: 14, scope: !13589)
!13593 = distinct !{!13593, !13584, !13594}
!13594 = !DILocation(line: 510, column: 9, scope: !13571)
!13595 = !DILocation(line: 521, column: 15, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13566, file: !13280, line: 513, column: 7)
!13597 = !DILocation(line: 521, column: 9, scope: !13596)
!13598 = !DILocation(line: 523, column: 15, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13600, file: !13280, line: 523, column: 14)
!13600 = distinct !DILexicalBlock(scope: !13596, file: !13280, line: 522, column: 9)
!13601 = !DILocation(line: 523, column: 29, scope: !13599)
!13602 = !DILocation(line: 523, column: 43, scope: !13599)
!13603 = !DILocation(line: 523, column: 14, scope: !13600)
!13604 = distinct !{!13604, !13597, !13605}
!13605 = !DILocation(line: 527, column: 9, scope: !13596)
!13606 = !DILocation(line: 533, column: 44, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !13280, line: 533, column: 10)
!13608 = distinct !DILexicalBlock(scope: !13561, file: !13280, line: 531, column: 5)
!13609 = !DILocation(line: 533, column: 10, scope: !13608)
!13610 = !DILocation(line: 540, column: 27, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13607, file: !13280, line: 538, column: 7)
!13612 = !DILocation(line: 551, column: 14, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13611, file: !13280, line: 550, column: 13)
!13614 = !DILocation(line: 551, column: 81, scope: !13613)
!13615 = !DILocation(line: 551, column: 55, scope: !13613)
!13616 = !DILocation(line: 551, column: 92, scope: !13613)
!13617 = !DILocation(line: 552, column: 14, scope: !13613)
!13618 = !DILocation(line: 552, column: 80, scope: !13613)
!13619 = !DILocation(line: 552, column: 53, scope: !13613)
!13620 = !DILocation(line: 552, column: 111, scope: !13613)
!13621 = !DILocation(line: 553, column: 14, scope: !13613)
!13622 = !DILocation(line: 553, column: 80, scope: !13613)
!13623 = !DILocation(line: 553, column: 86, scope: !13613)
!13624 = !DILocation(line: 553, column: 53, scope: !13613)
!13625 = !DILocation(line: 553, column: 111, scope: !13613)
!13626 = !DILocation(line: 554, column: 14, scope: !13613)
!13627 = !DILocation(line: 554, column: 82, scope: !13613)
!13628 = !DILocation(line: 554, column: 101, scope: !13613)
!13629 = !DILocation(line: 554, column: 53, scope: !13613)
!13630 = !DILocation(line: 554, column: 126, scope: !13613)
!13631 = !DILocation(line: 555, column: 14, scope: !13613)
!13632 = !DILocation(line: 555, column: 80, scope: !13613)
!13633 = !DILocation(line: 555, column: 85, scope: !13613)
!13634 = !DILocation(line: 555, column: 53, scope: !13613)
!13635 = !DILocation(line: 550, column: 13, scope: !13611)
!13636 = !DILocation(line: 563, column: 3, scope: !13285)
!13637 = !DILocation(line: 564, column: 1, scope: !13285)
!13638 = !DISubprogram(name: "HAL_GetTick", scope: !13639, file: !13639, line: 234, type: !8386, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13639 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13640 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13280, file: !13280, line: 591, type: !13641, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13652)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{!13283, !13643, !208}
!13643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13644, size: 32)
!13644 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13290, line: 92, baseType: !13645)
!13645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13290, line: 75, size: 160, elements: !13646)
!13646 = !{!13647, !13648, !13649, !13650, !13651}
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13645, file: !13290, line: 77, baseType: !208, size: 32)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13645, file: !13290, line: 80, baseType: !208, size: 32, offset: 32)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13645, file: !13290, line: 83, baseType: !208, size: 32, offset: 64)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13645, file: !13290, line: 86, baseType: !208, size: 32, offset: 96)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13645, file: !13290, line: 89, baseType: !208, size: 32, offset: 128)
!13652 = !{!13653, !13654, !13655}
!13653 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13640, file: !13280, line: 591, type: !13643)
!13654 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13640, file: !13280, line: 591, type: !208)
!13655 = !DILocalVariable(name: "tickstart", scope: !13640, file: !13280, line: 593, type: !208)
!13656 = !DILocation(line: 0, scope: !13640)
!13657 = !DILocation(line: 596, column: 24, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 596, column: 6)
!13659 = !DILocation(line: 596, column: 6, scope: !13640)
!13660 = !DILocation(line: 610, column: 17, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 610, column: 6)
!13662 = !DILocation(line: 610, column: 15, scope: !13661)
!13663 = !DILocation(line: 610, column: 6, scope: !13640)
!13664 = !DILocation(line: 613, column: 5, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13661, file: !13280, line: 611, column: 3)
!13666 = !DILocation(line: 617, column: 8, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13665, file: !13280, line: 617, column: 8)
!13668 = !DILocation(line: 617, column: 34, scope: !13667)
!13669 = !DILocation(line: 617, column: 8, scope: !13665)
!13670 = !DILocation(line: 624, column: 27, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 624, column: 6)
!13672 = !DILocation(line: 624, column: 38, scope: !13671)
!13673 = !DILocation(line: 624, column: 60, scope: !13671)
!13674 = !DILocation(line: 624, column: 6, scope: !13640)
!13675 = !DILocation(line: 628, column: 40, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13677, file: !13280, line: 628, column: 8)
!13677 = distinct !DILexicalBlock(scope: !13671, file: !13280, line: 625, column: 3)
!13678 = !DILocation(line: 628, column: 63, scope: !13676)
!13679 = !DILocation(line: 628, column: 8, scope: !13677)
!13680 = !DILocation(line: 630, column: 7, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13676, file: !13280, line: 629, column: 5)
!13682 = !DILocation(line: 633, column: 29, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13677, file: !13280, line: 633, column: 8)
!13684 = !DILocation(line: 631, column: 5, scope: !13681)
!13685 = !DILocation(line: 633, column: 40, scope: !13683)
!13686 = !DILocation(line: 633, column: 63, scope: !13683)
!13687 = !DILocation(line: 633, column: 8, scope: !13677)
!13688 = !DILocation(line: 635, column: 7, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13683, file: !13280, line: 634, column: 5)
!13690 = !DILocation(line: 636, column: 5, scope: !13689)
!13691 = !DILocation(line: 639, column: 5, scope: !13677)
!13692 = !DILocation(line: 643, column: 27, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 643, column: 6)
!13694 = !DILocation(line: 640, column: 3, scope: !13677)
!13695 = !DILocation(line: 643, column: 38, scope: !13693)
!13696 = !DILocation(line: 643, column: 62, scope: !13693)
!13697 = !DILocation(line: 643, column: 6, scope: !13640)
!13698 = !DILocation(line: 648, column: 27, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13700, file: !13280, line: 648, column: 8)
!13700 = distinct !DILexicalBlock(scope: !13693, file: !13280, line: 644, column: 3)
!13701 = !DILocation(line: 648, column: 8, scope: !13700)
!13702 = !DILocation(line: 651, column: 10, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13704, file: !13280, line: 651, column: 10)
!13704 = distinct !DILexicalBlock(scope: !13699, file: !13280, line: 649, column: 5)
!13705 = !DILocation(line: 651, column: 46, scope: !13703)
!13706 = !DILocation(line: 651, column: 10, scope: !13704)
!13707 = !DILocation(line: 661, column: 10, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13709, file: !13280, line: 661, column: 10)
!13709 = distinct !DILexicalBlock(scope: !13710, file: !13280, line: 659, column: 5)
!13710 = distinct !DILexicalBlock(scope: !13699, file: !13280, line: 657, column: 13)
!13711 = !DILocation(line: 661, column: 46, scope: !13708)
!13712 = !DILocation(line: 661, column: 10, scope: !13709)
!13713 = !DILocation(line: 670, column: 10, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13715, file: !13280, line: 670, column: 10)
!13715 = distinct !DILexicalBlock(scope: !13710, file: !13280, line: 668, column: 5)
!13716 = !DILocation(line: 670, column: 46, scope: !13714)
!13717 = !DILocation(line: 670, column: 10, scope: !13715)
!13718 = !DILocation(line: 676, column: 5, scope: !13700)
!13719 = !DILocation(line: 679, column: 17, scope: !13700)
!13720 = !DILocation(line: 681, column: 5, scope: !13700)
!13721 = !DILocation(line: 681, column: 12, scope: !13700)
!13722 = !DILocation(line: 681, column: 65, scope: !13700)
!13723 = !DILocation(line: 681, column: 78, scope: !13700)
!13724 = !DILocation(line: 681, column: 42, scope: !13700)
!13725 = !DILocation(line: 683, column: 12, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13727, file: !13280, line: 683, column: 11)
!13727 = distinct !DILexicalBlock(scope: !13700, file: !13280, line: 682, column: 5)
!13728 = !DILocation(line: 683, column: 26, scope: !13726)
!13729 = !DILocation(line: 683, column: 39, scope: !13726)
!13730 = !DILocation(line: 683, column: 11, scope: !13727)
!13731 = distinct !{!13731, !13720, !13732}
!13732 = !DILocation(line: 687, column: 5, scope: !13700)
!13733 = !DILocation(line: 691, column: 17, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 691, column: 6)
!13735 = !DILocation(line: 691, column: 15, scope: !13734)
!13736 = !DILocation(line: 691, column: 6, scope: !13640)
!13737 = !DILocation(line: 694, column: 5, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13734, file: !13280, line: 692, column: 3)
!13739 = !DILocation(line: 698, column: 8, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13738, file: !13280, line: 698, column: 8)
!13741 = !DILocation(line: 698, column: 34, scope: !13740)
!13742 = !DILocation(line: 698, column: 8, scope: !13738)
!13743 = !DILocation(line: 705, column: 27, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 705, column: 6)
!13745 = !DILocation(line: 705, column: 38, scope: !13744)
!13746 = !DILocation(line: 705, column: 61, scope: !13744)
!13747 = !DILocation(line: 705, column: 6, scope: !13640)
!13748 = !DILocation(line: 708, column: 5, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13744, file: !13280, line: 706, column: 3)
!13750 = !DILocation(line: 712, column: 27, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13640, file: !13280, line: 712, column: 6)
!13752 = !DILocation(line: 709, column: 3, scope: !13749)
!13753 = !DILocation(line: 712, column: 38, scope: !13751)
!13754 = !DILocation(line: 712, column: 61, scope: !13751)
!13755 = !DILocation(line: 712, column: 6, scope: !13640)
!13756 = !DILocation(line: 715, column: 5, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13751, file: !13280, line: 713, column: 3)
!13758 = !DILocation(line: 716, column: 3, scope: !13757)
!13759 = !DILocation(line: 719, column: 21, scope: !13640)
!13760 = !DILocation(line: 719, column: 70, scope: !13640)
!13761 = !DILocation(line: 719, column: 91, scope: !13640)
!13762 = !DILocation(line: 719, column: 50, scope: !13640)
!13763 = !DILocation(line: 719, column: 47, scope: !13640)
!13764 = !DILocation(line: 719, column: 19, scope: !13640)
!13765 = !DILocation(line: 722, column: 17, scope: !13640)
!13766 = !DILocation(line: 722, column: 3, scope: !13640)
!13767 = !DILocation(line: 724, column: 3, scope: !13640)
!13768 = !DILocation(line: 725, column: 1, scope: !13640)
!13769 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13280, file: !13280, line: 885, type: !8386, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13770)
!13770 = !{!13771, !13772, !13773, !13774}
!13771 = !DILocalVariable(name: "pllm", scope: !13769, file: !13280, line: 887, type: !208)
!13772 = !DILocalVariable(name: "pllvco", scope: !13769, file: !13280, line: 887, type: !208)
!13773 = !DILocalVariable(name: "pllp", scope: !13769, file: !13280, line: 887, type: !208)
!13774 = !DILocalVariable(name: "sysclockfreq", scope: !13769, file: !13280, line: 888, type: !208)
!13775 = !DILocation(line: 0, scope: !13769)
!13776 = !DILocation(line: 891, column: 16, scope: !13769)
!13777 = !DILocation(line: 891, column: 21, scope: !13769)
!13778 = !DILocation(line: 891, column: 3, scope: !13769)
!13779 = !DILocation(line: 901, column: 7, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13781, file: !13280, line: 899, column: 5)
!13781 = distinct !DILexicalBlock(scope: !13769, file: !13280, line: 892, column: 3)
!13782 = !DILocation(line: 907, column: 19, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13781, file: !13280, line: 904, column: 5)
!13784 = !DILocation(line: 907, column: 27, scope: !13783)
!13785 = !DILocation(line: 908, column: 10, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13783, file: !13280, line: 908, column: 10)
!13787 = !DILocation(line: 908, column: 40, scope: !13786)
!13788 = !DILocation(line: 0, scope: !13786)
!13789 = !DILocation(line: 918, column: 23, scope: !13783)
!13790 = !DILocation(line: 918, column: 82, scope: !13783)
!13791 = !DILocation(line: 920, column: 28, scope: !13783)
!13792 = !DILocation(line: 921, column: 7, scope: !13783)
!13793 = !DILocation(line: 0, scope: !13781)
!13794 = !DILocation(line: 929, column: 3, scope: !13769)
!13795 = !DISubprogram(name: "HAL_InitTick", scope: !13639, file: !13639, line: 223, type: !13796, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13796 = !DISubroutineType(types: !13797)
!13797 = !{!13283, !208}
!13798 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13280, file: !13280, line: 775, type: !13799, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13801)
!13799 = !DISubroutineType(types: !13800)
!13800 = !{null, !208, !208, !208}
!13801 = !{!13802, !13803, !13804, !13805, !13815, !13819}
!13802 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13798, file: !13280, line: 775, type: !208)
!13803 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13798, file: !13280, line: 775, type: !208)
!13804 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13798, file: !13280, line: 775, type: !208)
!13805 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13798, file: !13280, line: 777, type: !13806)
!13806 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13807, line: 62, baseType: !13808)
!13807 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13807, line: 46, size: 160, elements: !13809)
!13809 = !{!13810, !13811, !13812, !13813, !13814}
!13810 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13808, file: !13807, line: 48, baseType: !208, size: 32)
!13811 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13808, file: !13807, line: 51, baseType: !208, size: 32, offset: 32)
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13808, file: !13807, line: 54, baseType: !208, size: 32, offset: 64)
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13808, file: !13807, line: 57, baseType: !208, size: 32, offset: 96)
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13808, file: !13807, line: 60, baseType: !208, size: 32, offset: 128)
!13815 = !DILocalVariable(name: "tmpreg", scope: !13816, file: !13280, line: 787, type: !423)
!13816 = distinct !DILexicalBlock(scope: !13817, file: !13280, line: 787, column: 5)
!13817 = distinct !DILexicalBlock(scope: !13818, file: !13280, line: 783, column: 3)
!13818 = distinct !DILexicalBlock(scope: !13798, file: !13280, line: 782, column: 6)
!13819 = !DILocalVariable(name: "tmpreg", scope: !13820, file: !13280, line: 811, type: !423)
!13820 = distinct !DILexicalBlock(scope: !13821, file: !13280, line: 811, column: 5)
!13821 = distinct !DILexicalBlock(scope: !13818, file: !13280, line: 807, column: 3)
!13822 = !DILocation(line: 0, scope: !13798)
!13823 = !DILocation(line: 777, column: 3, scope: !13798)
!13824 = !DILocation(line: 777, column: 20, scope: !13798)
!13825 = !DILocation(line: 782, column: 15, scope: !13818)
!13826 = !DILocation(line: 782, column: 6, scope: !13798)
!13827 = !DILocation(line: 787, column: 5, scope: !13816)
!13828 = !DILocation(line: 787, column: 5, scope: !13817)
!13829 = !DILocation(line: 790, column: 21, scope: !13817)
!13830 = !DILocation(line: 790, column: 25, scope: !13817)
!13831 = !DILocation(line: 791, column: 21, scope: !13817)
!13832 = !DILocation(line: 791, column: 26, scope: !13817)
!13833 = !DILocation(line: 792, column: 21, scope: !13817)
!13834 = !DILocation(line: 792, column: 27, scope: !13817)
!13835 = !DILocation(line: 793, column: 21, scope: !13817)
!13836 = !DILocation(line: 793, column: 26, scope: !13817)
!13837 = !DILocation(line: 794, column: 21, scope: !13817)
!13838 = !DILocation(line: 794, column: 31, scope: !13817)
!13839 = !DILocation(line: 795, column: 5, scope: !13817)
!13840 = !DILocation(line: 798, column: 5, scope: !13817)
!13841 = !DILocation(line: 804, column: 3, scope: !13817)
!13842 = !DILocation(line: 811, column: 5, scope: !13820)
!13843 = !DILocation(line: 811, column: 5, scope: !13821)
!13844 = !DILocation(line: 814, column: 21, scope: !13821)
!13845 = !DILocation(line: 814, column: 25, scope: !13821)
!13846 = !DILocation(line: 815, column: 21, scope: !13821)
!13847 = !DILocation(line: 815, column: 26, scope: !13821)
!13848 = !DILocation(line: 816, column: 21, scope: !13821)
!13849 = !DILocation(line: 816, column: 27, scope: !13821)
!13850 = !DILocation(line: 817, column: 21, scope: !13821)
!13851 = !DILocation(line: 817, column: 26, scope: !13821)
!13852 = !DILocation(line: 818, column: 21, scope: !13821)
!13853 = !DILocation(line: 818, column: 31, scope: !13821)
!13854 = !DILocation(line: 819, column: 5, scope: !13821)
!13855 = !DILocation(line: 822, column: 5, scope: !13821)
!13856 = !DILocation(line: 0, scope: !13818)
!13857 = !DILocation(line: 830, column: 1, scope: !13798)
!13858 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13807, file: !13807, line: 224, type: !13859, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13859 = !DISubroutineType(types: !13860)
!13860 = !{null, !3184, !13861}
!13861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13806, size: 32)
!13862 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13280, file: !13280, line: 841, type: !3300, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!13863 = !DILocation(line: 843, column: 38, scope: !13862)
!13864 = !DILocation(line: 844, column: 1, scope: !13862)
!13865 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13280, file: !13280, line: 850, type: !3300, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!13866 = !DILocation(line: 852, column: 38, scope: !13865)
!13867 = !DILocation(line: 853, column: 1, scope: !13865)
!13868 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13280, file: !13280, line: 941, type: !8386, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!13869 = !DILocation(line: 943, column: 10, scope: !13868)
!13870 = !DILocation(line: 943, column: 3, scope: !13868)
!13871 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13280, file: !13280, line: 952, type: !8386, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!13872 = !DILocation(line: 955, column: 11, scope: !13871)
!13873 = !DILocation(line: 955, column: 56, scope: !13871)
!13874 = !DILocation(line: 955, column: 78, scope: !13871)
!13875 = !DILocation(line: 955, column: 36, scope: !13871)
!13876 = !DILocation(line: 955, column: 33, scope: !13871)
!13877 = !DILocation(line: 955, column: 3, scope: !13871)
!13878 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13280, file: !13280, line: 964, type: !8386, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!13879 = !DILocation(line: 967, column: 11, scope: !13878)
!13880 = !DILocation(line: 967, column: 55, scope: !13878)
!13881 = !DILocation(line: 967, column: 77, scope: !13878)
!13882 = !DILocation(line: 967, column: 35, scope: !13878)
!13883 = !DILocation(line: 967, column: 32, scope: !13878)
!13884 = !DILocation(line: 967, column: 3, scope: !13878)
!13885 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13280, file: !13280, line: 977, type: !13886, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13888)
!13886 = !DISubroutineType(types: !13887)
!13887 = !{null, !13288}
!13888 = !{!13889}
!13889 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13885, file: !13280, line: 977, type: !13288)
!13890 = !DILocation(line: 0, scope: !13885)
!13891 = !DILocation(line: 980, column: 22, scope: !13885)
!13892 = !DILocation(line: 980, column: 37, scope: !13885)
!13893 = !DILocation(line: 983, column: 12, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13885, file: !13280, line: 983, column: 6)
!13895 = !DILocation(line: 983, column: 15, scope: !13894)
!13896 = !DILocation(line: 983, column: 31, scope: !13894)
!13897 = !DILocation(line: 983, column: 6, scope: !13885)
!13898 = !DILocation(line: 985, column: 24, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13894, file: !13280, line: 984, column: 3)
!13900 = !DILocation(line: 985, column: 33, scope: !13899)
!13901 = !DILocation(line: 986, column: 3, scope: !13899)
!13902 = !DILocation(line: 987, column: 17, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13894, file: !13280, line: 987, column: 11)
!13904 = !DILocation(line: 987, column: 20, scope: !13903)
!13905 = !DILocation(line: 987, column: 35, scope: !13903)
!13906 = !DILocation(line: 0, scope: !13903)
!13907 = !DILocation(line: 987, column: 11, scope: !13894)
!13908 = !DILocation(line: 989, column: 33, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13903, file: !13280, line: 988, column: 3)
!13910 = !DILocation(line: 990, column: 3, scope: !13909)
!13911 = !DILocation(line: 993, column: 33, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13903, file: !13280, line: 992, column: 3)
!13913 = !DILocation(line: 997, column: 12, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13885, file: !13280, line: 997, column: 6)
!13915 = !DILocation(line: 997, column: 15, scope: !13914)
!13916 = !DILocation(line: 1003, column: 24, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13914, file: !13280, line: 1002, column: 3)
!13918 = !DILocation(line: 1003, column: 33, scope: !13917)
!13919 = !DILocation(line: 1006, column: 61, scope: !13885)
!13920 = !DILocation(line: 1006, column: 81, scope: !13885)
!13921 = !DILocation(line: 1006, column: 22, scope: !13885)
!13922 = !DILocation(line: 1006, column: 42, scope: !13885)
!13923 = !DILocation(line: 1009, column: 12, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13885, file: !13280, line: 1009, column: 6)
!13925 = !DILocation(line: 1009, column: 17, scope: !13924)
!13926 = !DILocation(line: 1009, column: 35, scope: !13924)
!13927 = !DILocation(line: 1009, column: 6, scope: !13885)
!13928 = !DILocation(line: 1011, column: 24, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13924, file: !13280, line: 1010, column: 3)
!13930 = !DILocation(line: 1011, column: 33, scope: !13929)
!13931 = !DILocation(line: 1012, column: 3, scope: !13929)
!13932 = !DILocation(line: 1013, column: 17, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13924, file: !13280, line: 1013, column: 11)
!13934 = !DILocation(line: 1013, column: 22, scope: !13933)
!13935 = !DILocation(line: 1013, column: 39, scope: !13933)
!13936 = !DILocation(line: 0, scope: !13933)
!13937 = !DILocation(line: 1013, column: 11, scope: !13924)
!13938 = !DILocation(line: 1015, column: 33, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13933, file: !13280, line: 1014, column: 3)
!13940 = !DILocation(line: 1016, column: 3, scope: !13939)
!13941 = !DILocation(line: 1019, column: 33, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13933, file: !13280, line: 1018, column: 3)
!13943 = !DILocation(line: 1023, column: 12, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13885, file: !13280, line: 1023, column: 6)
!13945 = !DILocation(line: 1023, column: 16, scope: !13944)
!13946 = !DILocation(line: 1029, column: 24, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13944, file: !13280, line: 1028, column: 3)
!13948 = !DILocation(line: 1029, column: 33, scope: !13947)
!13949 = !DILocation(line: 1033, column: 12, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13885, file: !13280, line: 1033, column: 6)
!13951 = !DILocation(line: 1033, column: 15, scope: !13950)
!13952 = !DILocation(line: 1033, column: 30, scope: !13950)
!13953 = !DILocation(line: 1033, column: 6, scope: !13885)
!13954 = !DILocation(line: 1039, column: 28, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13950, file: !13280, line: 1038, column: 3)
!13956 = !DILocation(line: 1039, column: 37, scope: !13955)
!13957 = !DILocation(line: 1041, column: 54, scope: !13885)
!13958 = !DILocation(line: 1041, column: 62, scope: !13885)
!13959 = !DILocation(line: 1041, column: 26, scope: !13885)
!13960 = !DILocation(line: 1041, column: 36, scope: !13885)
!13961 = !DILocation(line: 1042, column: 49, scope: !13885)
!13962 = !DILocation(line: 1042, column: 57, scope: !13885)
!13963 = !DILocation(line: 1042, column: 26, scope: !13885)
!13964 = !DILocation(line: 1042, column: 31, scope: !13885)
!13965 = !DILocation(line: 1043, column: 50, scope: !13885)
!13966 = !DILocation(line: 1043, column: 78, scope: !13885)
!13967 = !DILocation(line: 1043, column: 26, scope: !13885)
!13968 = !DILocation(line: 1043, column: 31, scope: !13885)
!13969 = !DILocation(line: 1044, column: 52, scope: !13885)
!13970 = !DILocation(line: 1044, column: 102, scope: !13885)
!13971 = !DILocation(line: 1044, column: 109, scope: !13885)
!13972 = !DILocation(line: 1044, column: 26, scope: !13885)
!13973 = !DILocation(line: 1044, column: 31, scope: !13885)
!13974 = !DILocation(line: 1045, column: 50, scope: !13885)
!13975 = !DILocation(line: 1045, column: 78, scope: !13885)
!13976 = !DILocation(line: 1045, column: 26, scope: !13885)
!13977 = !DILocation(line: 1045, column: 31, scope: !13885)
!13978 = !DILocation(line: 1046, column: 1, scope: !13885)
!13979 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13280, file: !13280, line: 1056, type: !13980, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13982)
!13980 = !DISubroutineType(types: !13981)
!13981 = !{null, !13643, !1029}
!13982 = !{!13983, !13984}
!13983 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13979, file: !13280, line: 1056, type: !13643)
!13984 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13979, file: !13280, line: 1056, type: !1029)
!13985 = !DILocation(line: 0, scope: !13979)
!13986 = !DILocation(line: 1059, column: 22, scope: !13979)
!13987 = !DILocation(line: 1059, column: 32, scope: !13979)
!13988 = !DILocation(line: 1062, column: 53, scope: !13979)
!13989 = !DILocation(line: 1062, column: 58, scope: !13979)
!13990 = !DILocation(line: 1062, column: 22, scope: !13979)
!13991 = !DILocation(line: 1062, column: 35, scope: !13979)
!13992 = !DILocation(line: 1065, column: 54, scope: !13979)
!13993 = !DILocation(line: 1065, column: 59, scope: !13979)
!13994 = !DILocation(line: 1065, column: 22, scope: !13979)
!13995 = !DILocation(line: 1065, column: 36, scope: !13979)
!13996 = !DILocation(line: 1068, column: 55, scope: !13979)
!13997 = !DILocation(line: 1068, column: 60, scope: !13979)
!13998 = !DILocation(line: 1068, column: 22, scope: !13979)
!13999 = !DILocation(line: 1068, column: 37, scope: !13979)
!14000 = !DILocation(line: 1071, column: 56, scope: !13979)
!14001 = !DILocation(line: 1071, column: 79, scope: !13979)
!14002 = !DILocation(line: 1071, column: 22, scope: !13979)
!14003 = !DILocation(line: 1071, column: 37, scope: !13979)
!14004 = !DILocation(line: 1074, column: 34, scope: !13979)
!14005 = !DILocation(line: 1074, column: 38, scope: !13979)
!14006 = !DILocation(line: 1074, column: 14, scope: !13979)
!14007 = !DILocation(line: 1075, column: 1, scope: !13979)
!14008 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13280, file: !13280, line: 1082, type: !3300, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!14009 = !DILocation(line: 1085, column: 6, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14008, file: !13280, line: 1085, column: 6)
!14011 = !DILocation(line: 1085, column: 6, scope: !14008)
!14012 = !DILocation(line: 1088, column: 5, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14010, file: !13280, line: 1086, column: 3)
!14014 = !DILocation(line: 1091, column: 5, scope: !14013)
!14015 = !DILocation(line: 1092, column: 3, scope: !14013)
!14016 = !DILocation(line: 1093, column: 1, scope: !14008)
!14017 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13280, file: !13280, line: 1099, type: !3300, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !639)
!14018 = !DILocation(line: 1104, column: 1, scope: !14017)
!14019 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14020, file: !14020, line: 257, type: !8396, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14021)
!14020 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14021 = !{!14022}
!14022 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14019, file: !14020, line: 257, type: !208)
!14023 = !DILocation(line: 0, scope: !14019)
!14024 = !DILocation(line: 260, column: 3, scope: !14019)
!14025 = !DILocation(line: 261, column: 1, scope: !14019)
!14026 = distinct !DISubprogram(name: "LL_InitTick", scope: !14027, file: !14027, line: 260, type: !11675, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14028)
!14027 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14028 = !{!14029, !14030}
!14029 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14026, file: !14027, line: 260, type: !208)
!14030 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14026, file: !14027, line: 260, type: !208)
!14031 = !DILocation(line: 0, scope: !14026)
!14032 = !DILocation(line: 263, column: 46, scope: !14026)
!14033 = !DILocation(line: 263, column: 55, scope: !14026)
!14034 = !DILocation(line: 263, column: 18, scope: !14026)
!14035 = !DILocation(line: 264, column: 18, scope: !14026)
!14036 = !DILocation(line: 265, column: 18, scope: !14026)
!14037 = !DILocation(line: 267, column: 1, scope: !14026)
!14038 = distinct !DISubprogram(name: "LL_mDelay", scope: !14020, file: !14020, line: 273, type: !8396, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14039)
!14039 = !{!14040, !14041}
!14040 = !DILocalVariable(name: "Delay", arg: 1, scope: !14038, file: !14020, line: 273, type: !208)
!14041 = !DILocalVariable(name: "tmp", scope: !14038, file: !14020, line: 275, type: !423)
!14042 = !DILocation(line: 0, scope: !14038)
!14043 = !DILocation(line: 275, column: 3, scope: !14038)
!14044 = !DILocation(line: 275, column: 18, scope: !14038)
!14045 = !DILocation(line: 275, column: 33, scope: !14038)
!14046 = !DILocation(line: 277, column: 10, scope: !14038)
!14047 = !DILocation(line: 280, column: 12, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14038, file: !14020, line: 280, column: 6)
!14049 = !DILocation(line: 285, column: 3, scope: !14038)
!14050 = !DILocation(line: 287, column: 18, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !14020, line: 287, column: 8)
!14052 = distinct !DILexicalBlock(scope: !14038, file: !14020, line: 286, column: 3)
!14053 = !DILocation(line: 292, column: 1, scope: !14038)
!14054 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14020, file: !14020, line: 323, type: !8396, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14055)
!14055 = !{!14056}
!14056 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14054, file: !14020, line: 323, type: !208)
!14057 = !DILocation(line: 0, scope: !14054)
!14058 = !DILocation(line: 326, column: 19, scope: !14054)
!14059 = !DILocation(line: 327, column: 1, scope: !14054)
!14060 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14020, file: !14020, line: 338, type: !14061, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14064)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{!14063, !208}
!14063 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !976, line: 201, baseType: !975)
!14064 = !{!14065, !14066, !14067, !14068, !14069}
!14065 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14060, file: !14020, line: 338, type: !208)
!14066 = !DILocalVariable(name: "timeout", scope: !14060, file: !14020, line: 340, type: !208)
!14067 = !DILocalVariable(name: "getlatency", scope: !14060, file: !14020, line: 341, type: !208)
!14068 = !DILocalVariable(name: "latency", scope: !14060, file: !14020, line: 342, type: !208)
!14069 = !DILocalVariable(name: "status", scope: !14060, file: !14020, line: 343, type: !14063)
!14070 = !DILocation(line: 0, scope: !14060)
!14071 = !DILocation(line: 347, column: 21, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14060, file: !14020, line: 347, column: 6)
!14073 = !DILocation(line: 347, column: 6, scope: !14060)
!14074 = !DILocation(line: 353, column: 8, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !14020, line: 353, column: 8)
!14076 = distinct !DILexicalBlock(scope: !14072, file: !14020, line: 352, column: 3)
!14077 = !DILocation(line: 353, column: 40, scope: !14075)
!14078 = !DILocation(line: 353, column: 8, scope: !14076)
!14079 = !DILocation(line: 356, column: 26, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !14020, line: 356, column: 10)
!14081 = distinct !DILexicalBlock(scope: !14075, file: !14020, line: 354, column: 5)
!14082 = !DILocation(line: 356, column: 55, scope: !14080)
!14083 = !DILocation(line: 362, column: 55, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14081, file: !14020, line: 362, column: 10)
!14085 = !DILocation(line: 368, column: 55, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14081, file: !14020, line: 368, column: 10)
!14087 = !DILocation(line: 374, column: 26, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14081, file: !14020, line: 374, column: 10)
!14089 = !DILocation(line: 374, column: 55, scope: !14088)
!14090 = !DILocation(line: 380, column: 28, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !14020, line: 380, column: 12)
!14092 = distinct !DILexicalBlock(scope: !14088, file: !14020, line: 379, column: 7)
!14093 = !DILocation(line: 380, column: 57, scope: !14091)
!14094 = !DILocation(line: 387, column: 8, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14076, file: !14020, line: 387, column: 8)
!14096 = !DILocation(line: 387, column: 40, scope: !14095)
!14097 = !DILocation(line: 387, column: 8, scope: !14076)
!14098 = !DILocation(line: 396, column: 26, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14100, file: !14020, line: 396, column: 10)
!14100 = distinct !DILexicalBlock(scope: !14095, file: !14020, line: 388, column: 5)
!14101 = !DILocation(line: 396, column: 55, scope: !14099)
!14102 = !DILocation(line: 402, column: 26, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14100, file: !14020, line: 402, column: 10)
!14104 = !DILocation(line: 402, column: 55, scope: !14103)
!14105 = !DILocation(line: 407, column: 26, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14100, file: !14020, line: 407, column: 10)
!14107 = !DILocation(line: 407, column: 55, scope: !14106)
!14108 = !DILocation(line: 413, column: 28, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14110, file: !14020, line: 413, column: 12)
!14110 = distinct !DILexicalBlock(scope: !14106, file: !14020, line: 412, column: 7)
!14111 = !DILocation(line: 413, column: 57, scope: !14109)
!14112 = !DILocation(line: 0, scope: !14076)
!14113 = !DILocation(line: 444, column: 5, scope: !14076)
!14114 = !DILocation(line: 448, column: 5, scope: !14076)
!14115 = !DILocation(line: 451, column: 18, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14076, file: !14020, line: 449, column: 5)
!14117 = !DILocation(line: 452, column: 12, scope: !14116)
!14118 = !DILocation(line: 453, column: 26, scope: !14076)
!14119 = !DILocation(line: 453, column: 38, scope: !14076)
!14120 = !DILocation(line: 453, column: 5, scope: !14116)
!14121 = distinct !{!14121, !14114, !14122}
!14122 = !DILocation(line: 453, column: 54, scope: !14076)
!14123 = !DILocation(line: 0, scope: !14072)
!14124 = !DILocation(line: 464, column: 3, scope: !14060)
!14125 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14126, file: !14126, line: 519, type: !8386, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14126 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14127 = !DILocation(line: 521, column: 21, scope: !14125)
!14128 = !DILocation(line: 521, column: 3, scope: !14125)
!14129 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6859, file: !6859, line: 1543, type: !8396, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14130)
!14130 = !{!14131}
!14131 = !DILocalVariable(name: "Latency", arg: 1, scope: !14129, file: !6859, line: 1543, type: !208)
!14132 = !DILocation(line: 0, scope: !14129)
!14133 = !DILocation(line: 1545, column: 3, scope: !14129)
!14134 = !DILocation(line: 1546, column: 1, scope: !14129)
!14135 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6859, file: !6859, line: 1569, type: !8386, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14136 = !DILocation(line: 1571, column: 21, scope: !14135)
!14137 = !DILocation(line: 1571, column: 3, scope: !14135)
!14138 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14020, file: !14020, line: 483, type: !14139, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14155)
!14139 = !DISubroutineType(types: !14140)
!14140 = !{!14063, !14141, !14148}
!14141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14142, size: 32)
!14142 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14027, line: 114, baseType: !14143)
!14143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14027, line: 94, size: 96, elements: !14144)
!14144 = !{!14145, !14146, !14147}
!14145 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14143, file: !14027, line: 96, baseType: !208, size: 32)
!14146 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14143, file: !14027, line: 102, baseType: !208, size: 32, offset: 32)
!14147 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14143, file: !14027, line: 109, baseType: !208, size: 32, offset: 64)
!14148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14149, size: 32)
!14149 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14027, line: 139, baseType: !14150)
!14150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14027, line: 119, size: 96, elements: !14151)
!14151 = !{!14152, !14153, !14154}
!14152 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14150, file: !14027, line: 121, baseType: !208, size: 32)
!14153 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14150, file: !14027, line: 127, baseType: !208, size: 32, offset: 32)
!14154 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14150, file: !14027, line: 133, baseType: !208, size: 32, offset: 64)
!14155 = !{!14156, !14157, !14158, !14159}
!14156 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14138, file: !14020, line: 483, type: !14141)
!14157 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14138, file: !14020, line: 484, type: !14148)
!14158 = !DILocalVariable(name: "status", scope: !14138, file: !14020, line: 486, type: !14063)
!14159 = !DILocalVariable(name: "pllfreq", scope: !14138, file: !14020, line: 487, type: !208)
!14160 = !DILocation(line: 0, scope: !14138)
!14161 = !DILocation(line: 490, column: 6, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14138, file: !14020, line: 490, column: 6)
!14163 = !DILocation(line: 490, column: 25, scope: !14162)
!14164 = !DILocation(line: 490, column: 6, scope: !14138)
!14165 = !DILocation(line: 493, column: 15, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14162, file: !14020, line: 491, column: 3)
!14167 = !DILocation(line: 496, column: 8, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14166, file: !14020, line: 496, column: 8)
!14169 = !DILocation(line: 496, column: 29, scope: !14168)
!14170 = !DILocation(line: 496, column: 8, scope: !14166)
!14171 = !DILocation(line: 498, column: 7, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14168, file: !14020, line: 497, column: 5)
!14173 = !DILocation(line: 499, column: 7, scope: !14172)
!14174 = !DILocation(line: 499, column: 14, scope: !14172)
!14175 = !DILocation(line: 499, column: 35, scope: !14172)
!14176 = distinct !{!14176, !14173, !14177}
!14177 = !DILocation(line: 502, column: 7, scope: !14172)
!14178 = !DILocation(line: 506, column: 76, scope: !14166)
!14179 = !DILocation(line: 506, column: 103, scope: !14166)
!14180 = !DILocation(line: 507, column: 54, scope: !14166)
!14181 = !DILocation(line: 506, column: 5, scope: !14166)
!14182 = !DILocation(line: 510, column: 14, scope: !14166)
!14183 = !DILocation(line: 511, column: 3, scope: !14166)
!14184 = !DILocation(line: 0, scope: !14162)
!14185 = !DILocation(line: 518, column: 3, scope: !14138)
!14186 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14020, file: !14020, line: 642, type: !14187, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14189)
!14187 = !DISubroutineType(types: !14188)
!14188 = !{!14063}
!14189 = !{!14190}
!14190 = !DILocalVariable(name: "status", scope: !14186, file: !14020, line: 644, type: !14063)
!14191 = !DILocation(line: 0, scope: !14186)
!14192 = !DILocation(line: 647, column: 6, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14186, file: !14020, line: 647, column: 6)
!14194 = !DILocation(line: 647, column: 27, scope: !14193)
!14195 = !DILocation(line: 663, column: 6, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14186, file: !14020, line: 663, column: 6)
!14197 = !DILocation(line: 663, column: 30, scope: !14196)
!14198 = !DILocation(line: 663, column: 6, scope: !14186)
!14199 = !DILocation(line: 669, column: 3, scope: !14186)
!14200 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14020, file: !14020, line: 611, type: !14201, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14203)
!14201 = !DISubroutineType(types: !14202)
!14202 = !{!208, !208, !14141}
!14203 = !{!14204, !14205, !14206}
!14204 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14200, file: !14020, line: 611, type: !208)
!14205 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14200, file: !14020, line: 611, type: !14141)
!14206 = !DILocalVariable(name: "pllfreq", scope: !14200, file: !14020, line: 613, type: !208)
!14207 = !DILocation(line: 0, scope: !14200)
!14208 = !DILocation(line: 622, column: 56, scope: !14200)
!14209 = !DILocation(line: 622, column: 61, scope: !14200)
!14210 = !DILocation(line: 622, column: 32, scope: !14200)
!14211 = !DILocation(line: 626, column: 45, scope: !14200)
!14212 = !DILocation(line: 626, column: 50, scope: !14200)
!14213 = !DILocation(line: 626, column: 21, scope: !14200)
!14214 = !DILocation(line: 630, column: 47, scope: !14200)
!14215 = !DILocation(line: 630, column: 82, scope: !14200)
!14216 = !DILocation(line: 630, column: 21, scope: !14200)
!14217 = !DILocation(line: 633, column: 3, scope: !14200)
!14218 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10579, file: !10579, line: 3007, type: !8386, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14219 = !DILocation(line: 3009, column: 11, scope: !14218)
!14220 = !DILocation(line: 3009, column: 44, scope: !14218)
!14221 = !DILocation(line: 3009, column: 3, scope: !14218)
!14222 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10579, file: !10579, line: 2987, type: !3300, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14223 = !DILocation(line: 2989, column: 3, scope: !14222)
!14224 = !DILocation(line: 2990, column: 1, scope: !14222)
!14225 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10579, file: !10579, line: 4304, type: !10713, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14226)
!14226 = !{!14227, !14228, !14229, !14230}
!14227 = !DILocalVariable(name: "Source", arg: 1, scope: !14225, file: !10579, line: 4304, type: !208)
!14228 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14225, file: !10579, line: 4304, type: !208)
!14229 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14225, file: !10579, line: 4304, type: !208)
!14230 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14225, file: !10579, line: 4304, type: !208)
!14231 = !DILocation(line: 0, scope: !14225)
!14232 = !DILocation(line: 4306, column: 3, scope: !14225)
!14233 = !DILocation(line: 4308, column: 3, scope: !14225)
!14234 = !DILocation(line: 4312, column: 1, scope: !14225)
!14235 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14020, file: !14020, line: 681, type: !14236, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14238)
!14236 = !DISubroutineType(types: !14237)
!14237 = !{!14063, !208, !14148}
!14238 = !{!14239, !14240, !14241, !14242}
!14239 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14235, file: !14020, line: 681, type: !208)
!14240 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14235, file: !14020, line: 681, type: !14148)
!14241 = !DILocalVariable(name: "status", scope: !14235, file: !14020, line: 683, type: !14063)
!14242 = !DILocalVariable(name: "hclk_frequency", scope: !14235, file: !14020, line: 684, type: !208)
!14243 = !DILocation(line: 0, scope: !14235)
!14244 = !DILocation(line: 691, column: 20, scope: !14235)
!14245 = !DILocation(line: 694, column: 6, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14235, file: !14020, line: 694, column: 6)
!14247 = !DILocation(line: 694, column: 22, scope: !14246)
!14248 = !DILocation(line: 694, column: 6, scope: !14235)
!14249 = !DILocation(line: 697, column: 14, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !14020, line: 695, column: 3)
!14251 = !DILocation(line: 701, column: 13, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14235, file: !14020, line: 701, column: 6)
!14253 = !DILocation(line: 701, column: 6, scope: !14235)
!14254 = !DILocation(line: 704, column: 5, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14252, file: !14020, line: 702, column: 3)
!14256 = !DILocation(line: 705, column: 5, scope: !14255)
!14257 = !DILocation(line: 705, column: 12, scope: !14255)
!14258 = !DILocation(line: 705, column: 33, scope: !14255)
!14259 = distinct !{!14259, !14256, !14260}
!14260 = !DILocation(line: 708, column: 5, scope: !14255)
!14261 = !DILocation(line: 711, column: 49, scope: !14255)
!14262 = !DILocation(line: 711, column: 5, scope: !14255)
!14263 = !DILocation(line: 712, column: 5, scope: !14255)
!14264 = !DILocation(line: 713, column: 5, scope: !14255)
!14265 = !DILocation(line: 713, column: 12, scope: !14255)
!14266 = !DILocation(line: 713, column: 37, scope: !14255)
!14267 = distinct !{!14267, !14264, !14268}
!14268 = !DILocation(line: 716, column: 5, scope: !14255)
!14269 = !DILocation(line: 719, column: 50, scope: !14255)
!14270 = !DILocation(line: 719, column: 5, scope: !14255)
!14271 = !DILocation(line: 720, column: 50, scope: !14255)
!14272 = !DILocation(line: 720, column: 5, scope: !14255)
!14273 = !DILocation(line: 721, column: 3, scope: !14255)
!14274 = !DILocation(line: 724, column: 6, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14235, file: !14020, line: 724, column: 6)
!14276 = !DILocation(line: 724, column: 22, scope: !14275)
!14277 = !DILocation(line: 724, column: 6, scope: !14235)
!14278 = !DILocation(line: 727, column: 14, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14275, file: !14020, line: 725, column: 3)
!14280 = !DILocation(line: 728, column: 3, scope: !14279)
!14281 = !DILocation(line: 731, column: 13, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14235, file: !14020, line: 731, column: 6)
!14283 = !DILocation(line: 731, column: 6, scope: !14235)
!14284 = !DILocation(line: 733, column: 5, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14282, file: !14020, line: 732, column: 3)
!14286 = !DILocation(line: 734, column: 3, scope: !14285)
!14287 = !DILocation(line: 736, column: 3, scope: !14235)
!14288 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10579, file: !10579, line: 4184, type: !3300, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14289 = !DILocation(line: 4186, column: 3, scope: !14288)
!14290 = !DILocation(line: 4187, column: 1, scope: !14288)
!14291 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10579, file: !10579, line: 4205, type: !8386, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14292 = !DILocation(line: 4207, column: 11, scope: !14291)
!14293 = !DILocation(line: 4207, column: 44, scope: !14291)
!14294 = !DILocation(line: 4207, column: 3, scope: !14291)
!14295 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10579, file: !10579, line: 3224, type: !8396, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14296)
!14296 = !{!14297}
!14297 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14295, file: !10579, line: 3224, type: !208)
!14298 = !DILocation(line: 0, scope: !14295)
!14299 = !DILocation(line: 3226, column: 3, scope: !14295)
!14300 = !DILocation(line: 3227, column: 1, scope: !14295)
!14301 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10579, file: !10579, line: 3188, type: !8396, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14302)
!14302 = !{!14303}
!14303 = !DILocalVariable(name: "Source", arg: 1, scope: !14301, file: !10579, line: 3188, type: !208)
!14304 = !DILocation(line: 0, scope: !14301)
!14305 = !DILocation(line: 3190, column: 3, scope: !14301)
!14306 = !DILocation(line: 3191, column: 1, scope: !14301)
!14307 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10579, file: !10579, line: 3204, type: !8386, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14308 = !DILocation(line: 3206, column: 21, scope: !14307)
!14309 = !DILocation(line: 3206, column: 3, scope: !14307)
!14310 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10579, file: !10579, line: 3240, type: !8396, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14311)
!14311 = !{!14312}
!14312 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14310, file: !10579, line: 3240, type: !208)
!14313 = !DILocation(line: 0, scope: !14310)
!14314 = !DILocation(line: 3242, column: 3, scope: !14310)
!14315 = !DILocation(line: 3243, column: 1, scope: !14310)
!14316 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10579, file: !10579, line: 3256, type: !8396, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14317)
!14317 = !{!14318}
!14318 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14316, file: !10579, line: 3256, type: !208)
!14319 = !DILocation(line: 0, scope: !14316)
!14320 = !DILocation(line: 3258, column: 3, scope: !14316)
!14321 = !DILocation(line: 3259, column: 1, scope: !14316)
!14322 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10579, file: !10579, line: 5153, type: !8386, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14323 = !DILocation(line: 5155, column: 11, scope: !14322)
!14324 = !DILocation(line: 5155, column: 47, scope: !14322)
!14325 = !DILocation(line: 5155, column: 3, scope: !14322)
!14326 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14020, file: !14020, line: 540, type: !14327, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !14329)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!14063, !208, !208, !14141, !14148}
!14329 = !{!14330, !14331, !14332, !14333, !14334, !14335}
!14330 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14326, file: !14020, line: 540, type: !208)
!14331 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14326, file: !14020, line: 540, type: !208)
!14332 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14326, file: !14020, line: 541, type: !14141)
!14333 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14326, file: !14020, line: 541, type: !14148)
!14334 = !DILocalVariable(name: "status", scope: !14326, file: !14020, line: 543, type: !14063)
!14335 = !DILocalVariable(name: "pllfreq", scope: !14326, file: !14020, line: 544, type: !208)
!14336 = !DILocation(line: 0, scope: !14326)
!14337 = !DILocation(line: 551, column: 6, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14326, file: !14020, line: 551, column: 6)
!14339 = !DILocation(line: 551, column: 25, scope: !14338)
!14340 = !DILocation(line: 551, column: 6, scope: !14326)
!14341 = !DILocation(line: 554, column: 15, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14338, file: !14020, line: 552, column: 3)
!14343 = !DILocation(line: 557, column: 8, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14342, file: !14020, line: 557, column: 8)
!14345 = !DILocation(line: 557, column: 29, scope: !14344)
!14346 = !DILocation(line: 557, column: 8, scope: !14342)
!14347 = !DILocation(line: 560, column: 20, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !14020, line: 560, column: 10)
!14349 = distinct !DILexicalBlock(scope: !14344, file: !14020, line: 558, column: 5)
!14350 = !DILocation(line: 560, column: 10, scope: !14349)
!14351 = !DILocation(line: 562, column: 9, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14348, file: !14020, line: 561, column: 7)
!14353 = !DILocation(line: 563, column: 7, scope: !14352)
!14354 = !DILocation(line: 566, column: 9, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14348, file: !14020, line: 565, column: 7)
!14356 = !DILocation(line: 570, column: 7, scope: !14349)
!14357 = !DILocation(line: 571, column: 7, scope: !14349)
!14358 = !DILocation(line: 571, column: 14, scope: !14349)
!14359 = !DILocation(line: 571, column: 35, scope: !14349)
!14360 = distinct !{!14360, !14357, !14361}
!14361 = !DILocation(line: 574, column: 7, scope: !14349)
!14362 = !DILocation(line: 578, column: 76, scope: !14342)
!14363 = !DILocation(line: 578, column: 103, scope: !14342)
!14364 = !DILocation(line: 579, column: 54, scope: !14342)
!14365 = !DILocation(line: 578, column: 5, scope: !14342)
!14366 = !DILocation(line: 582, column: 14, scope: !14342)
!14367 = !DILocation(line: 583, column: 3, scope: !14342)
!14368 = !DILocation(line: 0, scope: !14338)
!14369 = !DILocation(line: 590, column: 3, scope: !14326)
!14370 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10579, file: !10579, line: 2969, type: !8386, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14371 = !DILocation(line: 2971, column: 11, scope: !14370)
!14372 = !DILocation(line: 2971, column: 44, scope: !14370)
!14373 = !DILocation(line: 2971, column: 3, scope: !14370)
!14374 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10579, file: !10579, line: 2929, type: !3300, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14375 = !DILocation(line: 2931, column: 3, scope: !14374)
!14376 = !DILocation(line: 2932, column: 1, scope: !14374)
!14377 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10579, file: !10579, line: 2939, type: !3300, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14378 = !DILocation(line: 2941, column: 3, scope: !14377)
!14379 = !DILocation(line: 2942, column: 1, scope: !14377)
!14380 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10579, file: !10579, line: 2949, type: !3300, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !639)
!14381 = !DILocation(line: 2951, column: 3, scope: !14380)
!14382 = !DILocation(line: 2952, column: 1, scope: !14380)
!14383 = distinct !DISubprogram(name: "z_device_state_init", scope: !14384, file: !14384, line: 23, type: !3300, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14385)
!14384 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14385 = !{!14386}
!14386 = !DILocalVariable(name: "dev", scope: !14383, file: !14384, line: 25, type: !14387)
!14387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14388, size: 32)
!14388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14389)
!14389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !14390)
!14390 = !{!14391, !14392, !14393, !14394, !14400, !14401}
!14391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14389, file: !137, line: 380, baseType: !140, size: 32)
!14392 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14389, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!14393 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14389, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!14394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14389, file: !137, line: 386, baseType: !14395, size: 32, offset: 96)
!14395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14396, size: 32)
!14396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !14397)
!14397 = !{!14398, !14399}
!14398 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14396, file: !137, line: 359, baseType: !150, size: 8)
!14399 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14396, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14389, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!14401 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14389, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!14402 = !DILocation(line: 0, scope: !14383)
!14403 = !DILocation(line: 31, column: 1, scope: !14383)
!14404 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14384, file: !14384, line: 33, type: !14405, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14407)
!14405 = !DISubroutineType(types: !14406)
!14406 = !{!14387, !140}
!14407 = !{!14408, !14409}
!14408 = !DILocalVariable(name: "name", arg: 1, scope: !14404, file: !14384, line: 33, type: !140)
!14409 = !DILocalVariable(name: "dev", scope: !14404, file: !14384, line: 35, type: !14387)
!14410 = !DILocation(line: 0, scope: !14404)
!14411 = !DILocation(line: 40, column: 12, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14404, file: !14384, line: 40, column: 6)
!14413 = !DILocation(line: 40, column: 21, scope: !14412)
!14414 = !DILocation(line: 40, column: 25, scope: !14412)
!14415 = !DILocation(line: 40, column: 33, scope: !14412)
!14416 = !DILocation(line: 40, column: 6, scope: !14404)
!14417 = !DILocation(line: 55, column: 2, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14404, file: !14384, line: 55, column: 2)
!14419 = !DILocation(line: 50, column: 7, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14421, file: !14384, line: 50, column: 7)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !14384, line: 49, column: 57)
!14422 = distinct !DILexicalBlock(scope: !14423, file: !14384, line: 49, column: 2)
!14423 = distinct !DILexicalBlock(scope: !14404, file: !14384, line: 49, column: 2)
!14424 = !DILocation(line: 50, column: 30, scope: !14420)
!14425 = !DILocation(line: 50, column: 39, scope: !14420)
!14426 = !DILocation(line: 50, column: 44, scope: !14420)
!14427 = !DILocation(line: 50, column: 7, scope: !14421)
!14428 = !DILocation(line: 49, column: 53, scope: !14422)
!14429 = !DILocation(line: 49, column: 33, scope: !14422)
!14430 = !DILocation(line: 49, column: 2, scope: !14423)
!14431 = distinct !{!14431, !14430, !14432}
!14432 = !DILocation(line: 53, column: 2, scope: !14423)
!14433 = !DILocation(line: 56, column: 7, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !14384, line: 56, column: 7)
!14435 = distinct !DILexicalBlock(scope: !14436, file: !14384, line: 55, column: 57)
!14436 = distinct !DILexicalBlock(scope: !14418, file: !14384, line: 55, column: 2)
!14437 = !DILocation(line: 56, column: 30, scope: !14434)
!14438 = !DILocation(line: 56, column: 52, scope: !14434)
!14439 = !DILocation(line: 56, column: 34, scope: !14434)
!14440 = !DILocation(line: 56, column: 58, scope: !14434)
!14441 = !DILocation(line: 56, column: 7, scope: !14435)
!14442 = !DILocation(line: 55, column: 53, scope: !14436)
!14443 = !DILocation(line: 55, column: 33, scope: !14436)
!14444 = distinct !{!14444, !14417, !14445}
!14445 = !DILocation(line: 59, column: 2, scope: !14418)
!14446 = !DILocation(line: 62, column: 1, scope: !14404)
!14447 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14384, file: !14384, line: 93, type: !14448, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14450)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{!153, !14387}
!14450 = !{!14451}
!14451 = !DILocalVariable(name: "dev", arg: 1, scope: !14447, file: !14384, line: 93, type: !14387)
!14452 = !DILocation(line: 0, scope: !14447)
!14453 = !DILocation(line: 99, column: 10, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14447, file: !14384, line: 99, column: 6)
!14455 = !DILocation(line: 99, column: 6, scope: !14447)
!14456 = !DILocation(line: 103, column: 14, scope: !14447)
!14457 = !DILocation(line: 103, column: 21, scope: !14447)
!14458 = !DILocation(line: 103, column: 33, scope: !14447)
!14459 = !DILocation(line: 103, column: 49, scope: !14447)
!14460 = !DILocation(line: 103, column: 58, scope: !14447)
!14461 = !DILocation(line: 104, column: 1, scope: !14447)
!14462 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14384, file: !14384, line: 87, type: !14463, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14466)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{!272, !14465}
!14465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14387, size: 32)
!14466 = !{!14467}
!14467 = !DILocalVariable(name: "devices", arg: 1, scope: !14462, file: !14384, line: 87, type: !14465)
!14468 = !DILocation(line: 0, scope: !14462)
!14469 = !DILocation(line: 89, column: 11, scope: !14462)
!14470 = !DILocation(line: 90, column: 2, scope: !14462)
!14471 = distinct !DISubprogram(name: "device_required_foreach", scope: !14384, file: !14384, line: 125, type: !14472, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14478)
!14472 = !DISubroutineType(types: !14473)
!14473 = !{!125, !14387, !14474, !124}
!14474 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !14475)
!14475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14476, size: 32)
!14476 = !DISubroutineType(types: !14477)
!14477 = !{!125, !14387, !124}
!14478 = !{!14479, !14480, !14481, !14482, !14483}
!14479 = !DILocalVariable(name: "dev", arg: 1, scope: !14471, file: !14384, line: 125, type: !14387)
!14480 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14471, file: !14384, line: 126, type: !14474)
!14481 = !DILocalVariable(name: "context", arg: 3, scope: !14471, file: !14384, line: 127, type: !124)
!14482 = !DILocalVariable(name: "handle_count", scope: !14471, file: !14384, line: 129, type: !272)
!14483 = !DILocalVariable(name: "handles", scope: !14471, file: !14384, line: 130, type: !156)
!14484 = !DILocation(line: 0, scope: !14471)
!14485 = !DILocation(line: 129, column: 2, scope: !14471)
!14486 = !DILocation(line: 129, column: 9, scope: !14471)
!14487 = !DILocation(line: 130, column: 35, scope: !14471)
!14488 = !DILocation(line: 132, column: 33, scope: !14471)
!14489 = !DILocation(line: 132, column: 9, scope: !14471)
!14490 = !DILocation(line: 133, column: 1, scope: !14471)
!14491 = !DILocation(line: 132, column: 2, scope: !14471)
!14492 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !14493, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14495)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{!156, !14387, !2724}
!14495 = !{!14496, !14497, !14498, !14499}
!14496 = !DILocalVariable(name: "dev", arg: 1, scope: !14492, file: !137, line: 493, type: !14387)
!14497 = !DILocalVariable(name: "count", arg: 2, scope: !14492, file: !137, line: 493, type: !2724)
!14498 = !DILocalVariable(name: "rv", scope: !14492, file: !137, line: 495, type: !156)
!14499 = !DILocalVariable(name: "i", scope: !14500, file: !137, line: 498, type: !272)
!14500 = distinct !DILexicalBlock(scope: !14501, file: !137, line: 497, column: 18)
!14501 = distinct !DILexicalBlock(scope: !14492, file: !137, line: 497, column: 6)
!14502 = !DILocation(line: 0, scope: !14492)
!14503 = !DILocation(line: 495, column: 35, scope: !14492)
!14504 = !DILocation(line: 497, column: 9, scope: !14501)
!14505 = !DILocation(line: 497, column: 6, scope: !14492)
!14506 = !DILocation(line: 0, scope: !14500)
!14507 = !DILocation(line: 500, column: 11, scope: !14500)
!14508 = !DILocation(line: 500, column: 40, scope: !14500)
!14509 = !DILocation(line: 502, column: 4, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14500, file: !137, line: 501, column: 40)
!14511 = distinct !{!14511, !14512, !14513}
!14512 = !DILocation(line: 500, column: 3, scope: !14500)
!14513 = !DILocation(line: 503, column: 3, scope: !14500)
!14514 = !DILocation(line: 504, column: 10, scope: !14500)
!14515 = !DILocation(line: 505, column: 2, scope: !14500)
!14516 = !DILocation(line: 507, column: 2, scope: !14492)
!14517 = distinct !DISubprogram(name: "device_visitor", scope: !14384, file: !14384, line: 106, type: !14518, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14520)
!14518 = !DISubroutineType(types: !14519)
!14519 = !{!125, !156, !272, !14474, !124}
!14520 = !{!14521, !14522, !14523, !14524, !14525, !14527, !14530, !14531}
!14521 = !DILocalVariable(name: "handles", arg: 1, scope: !14517, file: !14384, line: 106, type: !156)
!14522 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14517, file: !14384, line: 107, type: !272)
!14523 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14517, file: !14384, line: 108, type: !14474)
!14524 = !DILocalVariable(name: "context", arg: 4, scope: !14517, file: !14384, line: 109, type: !124)
!14525 = !DILocalVariable(name: "i", scope: !14526, file: !14384, line: 112, type: !272)
!14526 = distinct !DILexicalBlock(scope: !14517, file: !14384, line: 112, column: 2)
!14527 = !DILocalVariable(name: "dh", scope: !14528, file: !14384, line: 113, type: !158)
!14528 = distinct !DILexicalBlock(scope: !14529, file: !14384, line: 112, column: 44)
!14529 = distinct !DILexicalBlock(scope: !14526, file: !14384, line: 112, column: 2)
!14530 = !DILocalVariable(name: "rdev", scope: !14528, file: !14384, line: 114, type: !14387)
!14531 = !DILocalVariable(name: "rc", scope: !14528, file: !14384, line: 115, type: !125)
!14532 = !DILocation(line: 0, scope: !14517)
!14533 = !DILocation(line: 0, scope: !14526)
!14534 = !DILocation(line: 112, column: 23, scope: !14529)
!14535 = !DILocation(line: 112, column: 2, scope: !14526)
!14536 = distinct !{!14536, !14535, !14537}
!14537 = !DILocation(line: 120, column: 2, scope: !14526)
!14538 = !DILocation(line: 113, column: 24, scope: !14528)
!14539 = !DILocation(line: 0, scope: !14528)
!14540 = !DILocation(line: 114, column: 31, scope: !14528)
!14541 = !DILocation(line: 115, column: 12, scope: !14528)
!14542 = !DILocation(line: 117, column: 10, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14528, file: !14384, line: 117, column: 7)
!14544 = !DILocation(line: 112, column: 39, scope: !14529)
!14545 = !DILocation(line: 123, column: 1, scope: !14517)
!14546 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !14547, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14549)
!14547 = !DISubroutineType(types: !14548)
!14548 = !{!14387, !158}
!14549 = !{!14550, !14551, !14552}
!14550 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14546, file: !137, line: 439, type: !158)
!14551 = !DILocalVariable(name: "dev", scope: !14546, file: !137, line: 443, type: !14387)
!14552 = !DILocalVariable(name: "numdev", scope: !14546, file: !137, line: 444, type: !272)
!14553 = !DILocation(line: 0, scope: !14546)
!14554 = !DILocation(line: 446, column: 7, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14546, file: !137, line: 446, column: 6)
!14556 = !DILocation(line: 446, column: 18, scope: !14555)
!14557 = !DILocation(line: 446, column: 23, scope: !14555)
!14558 = !DILocation(line: 450, column: 2, scope: !14546)
!14559 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14384, file: !14384, line: 135, type: !14472, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14560)
!14560 = !{!14561, !14562, !14563, !14564, !14565}
!14561 = !DILocalVariable(name: "dev", arg: 1, scope: !14559, file: !14384, line: 135, type: !14387)
!14562 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14559, file: !14384, line: 136, type: !14474)
!14563 = !DILocalVariable(name: "context", arg: 3, scope: !14559, file: !14384, line: 137, type: !124)
!14564 = !DILocalVariable(name: "handle_count", scope: !14559, file: !14384, line: 139, type: !272)
!14565 = !DILocalVariable(name: "handles", scope: !14559, file: !14384, line: 140, type: !156)
!14566 = !DILocation(line: 0, scope: !14559)
!14567 = !DILocation(line: 139, column: 2, scope: !14559)
!14568 = !DILocation(line: 139, column: 9, scope: !14559)
!14569 = !DILocation(line: 140, column: 35, scope: !14559)
!14570 = !DILocation(line: 142, column: 33, scope: !14559)
!14571 = !DILocation(line: 142, column: 9, scope: !14559)
!14572 = !DILocation(line: 143, column: 1, scope: !14559)
!14573 = !DILocation(line: 142, column: 2, scope: !14559)
!14574 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !14493, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14575)
!14575 = !{!14576, !14577, !14578, !14579, !14580}
!14576 = !DILocalVariable(name: "dev", arg: 1, scope: !14574, file: !137, line: 573, type: !14387)
!14577 = !DILocalVariable(name: "count", arg: 2, scope: !14574, file: !137, line: 573, type: !2724)
!14578 = !DILocalVariable(name: "rv", scope: !14574, file: !137, line: 575, type: !156)
!14579 = !DILocalVariable(name: "region", scope: !14574, file: !137, line: 576, type: !272)
!14580 = !DILocalVariable(name: "i", scope: !14574, file: !137, line: 577, type: !272)
!14581 = !DILocation(line: 0, scope: !14574)
!14582 = !DILocation(line: 575, column: 35, scope: !14574)
!14583 = !DILocation(line: 579, column: 9, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14574, file: !137, line: 579, column: 6)
!14585 = !DILocation(line: 579, column: 6, scope: !14574)
!14586 = !DILocation(line: 582, column: 8, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14588, file: !137, line: 582, column: 8)
!14588 = distinct !DILexicalBlock(scope: !14589, file: !137, line: 581, column: 23)
!14589 = distinct !DILexicalBlock(scope: !14584, file: !137, line: 579, column: 18)
!14590 = !DILocation(line: 582, column: 12, scope: !14587)
!14591 = !DILocation(line: 585, column: 6, scope: !14588)
!14592 = !DILocation(line: 0, scope: !14589)
!14593 = !DILocation(line: 581, column: 17, scope: !14589)
!14594 = !DILocation(line: 581, column: 3, scope: !14589)
!14595 = !DILocation(line: 588, column: 10, scope: !14589)
!14596 = !DILocation(line: 588, column: 16, scope: !14589)
!14597 = !DILocation(line: 589, column: 4, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14589, file: !137, line: 588, column: 39)
!14599 = !DILocation(line: 588, column: 3, scope: !14589)
!14600 = distinct !{!14600, !14599, !14601}
!14601 = !DILocation(line: 590, column: 3, scope: !14589)
!14602 = !DILocation(line: 591, column: 10, scope: !14589)
!14603 = !DILocation(line: 592, column: 2, scope: !14589)
!14604 = !DILocation(line: 575, column: 25, scope: !14574)
!14605 = !DILocation(line: 594, column: 2, scope: !14574)
!14606 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2145, file: !2145, line: 49, type: !14607, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !639)
!14607 = !DISubroutineType(types: !14608)
!14608 = !{!387}
!14609 = !DILocation(line: 51, column: 10, scope: !14606)
!14610 = !DILocation(line: 51, column: 20, scope: !14606)
!14611 = !DILocation(line: 51, column: 2, scope: !14606)
!14612 = distinct !DISubprogram(name: "coredump", scope: !3267, file: !3267, line: 209, type: !14613, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14759)
!14613 = !DISubroutineType(types: !14614)
!14614 = !{null, !32, !14615, !14659}
!14615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14616, size: 32)
!14616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14617)
!14617 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2886, line: 141, baseType: !14618)
!14618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2886, line: 97, size: 256, elements: !14619)
!14619 = !{!14620}
!14620 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14618, file: !2886, line: 107, baseType: !14621, size: 256)
!14621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2886, line: 98, size: 256, elements: !14622)
!14622 = !{!14623, !14628, !14633, !14638, !14643, !14648, !14653, !14658}
!14623 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 99, baseType: !14624, size: 32)
!14624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 99, size: 32, elements: !14625)
!14625 = !{!14626, !14627}
!14626 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14624, file: !2886, line: 99, baseType: !208, size: 32)
!14627 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14624, file: !2886, line: 99, baseType: !208, size: 32)
!14628 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 100, baseType: !14629, size: 32, offset: 32)
!14629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 100, size: 32, elements: !14630)
!14630 = !{!14631, !14632}
!14631 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14629, file: !2886, line: 100, baseType: !208, size: 32)
!14632 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14629, file: !2886, line: 100, baseType: !208, size: 32)
!14633 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 101, baseType: !14634, size: 32, offset: 64)
!14634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 101, size: 32, elements: !14635)
!14635 = !{!14636, !14637}
!14636 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14634, file: !2886, line: 101, baseType: !208, size: 32)
!14637 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14634, file: !2886, line: 101, baseType: !208, size: 32)
!14638 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 102, baseType: !14639, size: 32, offset: 96)
!14639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 102, size: 32, elements: !14640)
!14640 = !{!14641, !14642}
!14641 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14639, file: !2886, line: 102, baseType: !208, size: 32)
!14642 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14639, file: !2886, line: 102, baseType: !208, size: 32)
!14643 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 103, baseType: !14644, size: 32, offset: 128)
!14644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 103, size: 32, elements: !14645)
!14645 = !{!14646, !14647}
!14646 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14644, file: !2886, line: 103, baseType: !208, size: 32)
!14647 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14644, file: !2886, line: 103, baseType: !208, size: 32)
!14648 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 104, baseType: !14649, size: 32, offset: 160)
!14649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 104, size: 32, elements: !14650)
!14650 = !{!14651, !14652}
!14651 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14649, file: !2886, line: 104, baseType: !208, size: 32)
!14652 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14649, file: !2886, line: 104, baseType: !208, size: 32)
!14653 = !DIDerivedType(tag: DW_TAG_member, scope: !14621, file: !2886, line: 105, baseType: !14654, size: 32, offset: 192)
!14654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14621, file: !2886, line: 105, size: 32, elements: !14655)
!14655 = !{!14656, !14657}
!14656 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14654, file: !2886, line: 105, baseType: !208, size: 32)
!14657 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14654, file: !2886, line: 105, baseType: !208, size: 32)
!14658 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14621, file: !2886, line: 106, baseType: !208, size: 32, offset: 224)
!14659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14660, size: 32)
!14660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !14661)
!14661 = !{!14662, !14720, !14732, !14733, !14734, !14735, !14741, !14754}
!14662 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14660, file: !531, line: 247, baseType: !14663, size: 384)
!14663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !14664)
!14664 = !{!14665, !14689, !14696, !14697, !14698, !14707, !14708, !14709}
!14665 = !DIDerivedType(tag: DW_TAG_member, scope: !14663, file: !531, line: 60, baseType: !14666, size: 64)
!14666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14663, file: !531, line: 60, size: 64, elements: !14667)
!14667 = !{!14668, !14683}
!14668 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14666, file: !531, line: 61, baseType: !14669, size: 64)
!14669 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !14670)
!14670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !14671)
!14671 = !{!14672, !14678}
!14672 = !DIDerivedType(tag: DW_TAG_member, scope: !14670, file: !541, line: 38, baseType: !14673, size: 32)
!14673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14670, file: !541, line: 38, size: 32, elements: !14674)
!14674 = !{!14675, !14677}
!14675 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14673, file: !541, line: 39, baseType: !14676, size: 32)
!14676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14670, size: 32)
!14677 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14673, file: !541, line: 40, baseType: !14676, size: 32)
!14678 = !DIDerivedType(tag: DW_TAG_member, scope: !14670, file: !541, line: 42, baseType: !14679, size: 32, offset: 32)
!14679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14670, file: !541, line: 42, size: 32, elements: !14680)
!14680 = !{!14681, !14682}
!14681 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14679, file: !541, line: 43, baseType: !14676, size: 32)
!14682 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14679, file: !541, line: 44, baseType: !14676, size: 32)
!14683 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14666, file: !531, line: 62, baseType: !14684, size: 64)
!14684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !14685)
!14685 = !{!14686}
!14686 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14684, file: !557, line: 50, baseType: !14687, size: 64)
!14687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14688, size: 64, elements: !562)
!14688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14684, size: 32)
!14689 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14663, file: !531, line: 68, baseType: !14690, size: 32, offset: 64)
!14690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14691, size: 32)
!14691 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !14692)
!14692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !14693)
!14693 = !{!14694}
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14692, file: !567, line: 232, baseType: !14695, size: 64)
!14695 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !14670)
!14696 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14663, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!14697 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14663, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!14698 = !DIDerivedType(tag: DW_TAG_member, scope: !14663, file: !531, line: 90, baseType: !14699, size: 16, offset: 112)
!14699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14663, file: !531, line: 90, size: 16, elements: !14700)
!14700 = !{!14701, !14706}
!14701 = !DIDerivedType(tag: DW_TAG_member, scope: !14699, file: !531, line: 91, baseType: !14702, size: 16)
!14702 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14699, file: !531, line: 91, size: 16, elements: !14703)
!14703 = !{!14704, !14705}
!14704 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14702, file: !531, line: 96, baseType: !581, size: 8)
!14705 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14702, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!14706 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14699, file: !531, line: 100, baseType: !227, size: 16)
!14707 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14663, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!14708 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14663, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!14709 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14663, file: !531, line: 131, baseType: !14710, size: 192, offset: 192)
!14710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !14711)
!14711 = !{!14712, !14713, !14719}
!14712 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14710, file: !567, line: 245, baseType: !14669, size: 64)
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14710, file: !567, line: 246, baseType: !14714, size: 32, offset: 64)
!14714 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !14715)
!14715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14716, size: 32)
!14716 = !DISubroutineType(types: !14717)
!14717 = !{null, !14718}
!14718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14710, size: 32)
!14719 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14710, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!14720 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14660, file: !531, line: 250, baseType: !14721, size: 288, offset: 384)
!14721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !14722)
!14722 = !{!14723, !14724, !14725, !14726, !14727, !14728, !14729, !14730, !14731}
!14723 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14721, file: !601, line: 26, baseType: !208, size: 32)
!14724 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14721, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!14725 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14721, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!14726 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14721, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!14727 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14721, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!14728 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14721, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!14729 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14721, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!14730 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14721, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!14731 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14721, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14660, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!14733 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14660, file: !531, line: 256, baseType: !14691, size: 64, offset: 704)
!14734 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14660, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!14735 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14660, file: !531, line: 300, baseType: !14736, size: 96, offset: 800)
!14736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !14737)
!14737 = !{!14738, !14739, !14740}
!14738 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14736, file: !531, line: 153, baseType: !22, size: 32)
!14739 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14736, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!14740 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14736, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14660, file: !531, line: 325, baseType: !14742, size: 32, offset: 896)
!14742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14743, size: 32)
!14743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !14744)
!14744 = !{!14745, !14751, !14752}
!14745 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14743, file: !624, line: 5074, baseType: !14746, size: 96)
!14746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !14747)
!14747 = !{!14748, !14749, !14750}
!14748 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14746, file: !628, line: 57, baseType: !631, size: 32)
!14749 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14746, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!14750 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14746, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!14751 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14743, file: !624, line: 5075, baseType: !14691, size: 64, offset: 96)
!14752 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14743, file: !624, line: 5076, baseType: !14753, offset: 160)
!14753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!14754 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14660, file: !531, line: 343, baseType: !14755, size: 64, offset: 928)
!14755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !14756)
!14756 = !{!14757, !14758}
!14757 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14755, file: !601, line: 63, baseType: !208, size: 32)
!14758 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14755, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!14759 = !{!14760, !14761, !14762}
!14760 = !DILocalVariable(name: "reason", arg: 1, scope: !14612, file: !3267, line: 209, type: !32)
!14761 = !DILocalVariable(name: "esf", arg: 2, scope: !14612, file: !3267, line: 209, type: !14615)
!14762 = !DILocalVariable(name: "thread", arg: 3, scope: !14612, file: !3267, line: 210, type: !14659)
!14763 = !DILocation(line: 0, scope: !14612)
!14764 = !DILocation(line: 212, column: 1, scope: !14612)
!14765 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3267, file: !3267, line: 214, type: !14766, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14768)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{null, !22, !22}
!14768 = !{!14769, !14770}
!14769 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14765, file: !3267, line: 214, type: !22)
!14770 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14765, file: !3267, line: 214, type: !22)
!14771 = !DILocation(line: 0, scope: !14765)
!14772 = !DILocation(line: 216, column: 1, scope: !14765)
!14773 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3267, file: !3267, line: 218, type: !14774, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14776)
!14774 = !DISubroutineType(types: !14775)
!14775 = !{null, !184, !272}
!14776 = !{!14777, !14778}
!14777 = !DILocalVariable(name: "buf", arg: 1, scope: !14773, file: !3267, line: 218, type: !184)
!14778 = !DILocalVariable(name: "buflen", arg: 2, scope: !14773, file: !3267, line: 218, type: !272)
!14779 = !DILocation(line: 0, scope: !14773)
!14780 = !DILocation(line: 220, column: 1, scope: !14773)
!14781 = distinct !DISubprogram(name: "coredump_query", scope: !3267, file: !3267, line: 222, type: !14782, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14784)
!14782 = !DISubroutineType(types: !14783)
!14783 = !{!125, !3266, !124}
!14784 = !{!14785, !14786}
!14785 = !DILocalVariable(name: "query_id", arg: 1, scope: !14781, file: !3267, line: 222, type: !3266)
!14786 = !DILocalVariable(name: "arg", arg: 2, scope: !14781, file: !3267, line: 222, type: !124)
!14787 = !DILocation(line: 0, scope: !14781)
!14788 = !DILocation(line: 224, column: 2, scope: !14781)
!14789 = distinct !DISubprogram(name: "coredump_cmd", scope: !3267, file: !3267, line: 227, type: !14790, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14792)
!14790 = !DISubroutineType(types: !14791)
!14791 = !{!125, !3273, !124}
!14792 = !{!14793, !14794}
!14793 = !DILocalVariable(name: "query_id", arg: 1, scope: !14789, file: !3267, line: 227, type: !3273)
!14794 = !DILocalVariable(name: "arg", arg: 2, scope: !14789, file: !3267, line: 227, type: !124)
!14795 = !DILocation(line: 0, scope: !14789)
!14796 = !DILocation(line: 229, column: 2, scope: !14789)
!14797 = distinct !DISubprogram(name: "arch_system_halt", scope: !14798, file: !14798, line: 23, type: !6849, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14799)
!14798 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14799 = !{!14800}
!14800 = !DILocalVariable(name: "reason", arg: 1, scope: !14797, file: !14798, line: 23, type: !32)
!14801 = !DILocation(line: 0, scope: !14797)
!14802 = !DILocation(line: 55, column: 2, scope: !14803, inlinedAt: !14807)
!14803 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14804)
!14804 = !{!14805, !14806}
!14805 = !DILocalVariable(name: "key", scope: !14803, file: !6838, line: 44, type: !32)
!14806 = !DILocalVariable(name: "tmp", scope: !14803, file: !6838, line: 53, type: !32)
!14807 = distinct !DILocation(line: 31, column: 8, scope: !14797)
!14808 = !{i64 2225604}
!14809 = !DILocation(line: 0, scope: !14803, inlinedAt: !14807)
!14810 = !DILocation(line: 32, column: 2, scope: !14797)
!14811 = !DILocation(line: 32, column: 2, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14813, file: !14798, line: 32, column: 2)
!14813 = distinct !DILexicalBlock(scope: !14797, file: !14798, line: 32, column: 2)
!14814 = distinct !{!14814, !14815, !14816}
!14815 = !DILocation(line: 32, column: 2, scope: !14813)
!14816 = !DILocation(line: 34, column: 2, scope: !14813)
!14817 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14798, file: !14798, line: 39, type: !14818, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14820)
!14818 = !DISubroutineType(types: !14819)
!14819 = !{null, !32, !14615}
!14820 = !{!14821, !14822}
!14821 = !DILocalVariable(name: "reason", arg: 1, scope: !14817, file: !14798, line: 39, type: !32)
!14822 = !DILocalVariable(name: "esf", arg: 2, scope: !14817, file: !14798, line: 40, type: !14615)
!14823 = !DILocation(line: 0, scope: !14817)
!14824 = !DILocation(line: 45, column: 2, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !14798, line: 45, column: 2)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !14798, line: 45, column: 2)
!14827 = distinct !DILexicalBlock(scope: !14828, file: !14798, line: 45, column: 2)
!14828 = distinct !DILexicalBlock(scope: !14817, file: !14798, line: 45, column: 2)
!14829 = !DILocation(line: 46, column: 2, scope: !14817)
!14830 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14798, file: !14798, line: 81, type: !6849, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14831)
!14831 = !{!14832}
!14832 = !DILocalVariable(name: "reason", arg: 1, scope: !14830, file: !14798, line: 81, type: !32)
!14833 = !DILocation(line: 0, scope: !14830)
!14834 = !DILocation(line: 83, column: 2, scope: !14830)
!14835 = distinct !DISubprogram(name: "z_fatal_error", scope: !14798, file: !14798, line: 96, type: !14818, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14836)
!14836 = !{!14837, !14838, !14839, !14840}
!14837 = !DILocalVariable(name: "reason", arg: 1, scope: !14835, file: !14798, line: 96, type: !32)
!14838 = !DILocalVariable(name: "esf", arg: 2, scope: !14835, file: !14798, line: 96, type: !14615)
!14839 = !DILocalVariable(name: "key", scope: !14835, file: !14798, line: 102, type: !32)
!14840 = !DILocalVariable(name: "thread", scope: !14835, file: !14798, line: 103, type: !14659)
!14841 = !DILocation(line: 0, scope: !14835)
!14842 = !DILocation(line: 55, column: 2, scope: !14803, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 102, column: 21, scope: !14835)
!14844 = !DILocation(line: 0, scope: !14803, inlinedAt: !14843)
!14845 = !DILocation(line: 104, column: 4, scope: !14835)
!14846 = !DILocation(line: 109, column: 2, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !14798, line: 109, column: 2)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !14798, line: 109, column: 2)
!14849 = distinct !DILexicalBlock(scope: !14850, file: !14798, line: 109, column: 2)
!14850 = distinct !DILexicalBlock(scope: !14835, file: !14798, line: 109, column: 2)
!14851 = !DILocation(line: 119, column: 11, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14835, file: !14798, line: 119, column: 6)
!14853 = !DILocation(line: 119, column: 20, scope: !14852)
!14854 = !DILocalVariable(name: "esf", arg: 1, scope: !14855, file: !9323, line: 71, type: !14615)
!14855 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9323, file: !9323, line: 71, type: !14856, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!153, !14615}
!14858 = !{!14854}
!14859 = !DILocation(line: 0, scope: !14855, inlinedAt: !14860)
!14860 = distinct !DILocation(line: 119, column: 23, scope: !14852)
!14861 = !DILocation(line: 73, column: 21, scope: !14855, inlinedAt: !14860)
!14862 = !DILocation(line: 73, column: 26, scope: !14855, inlinedAt: !14860)
!14863 = !DILocation(line: 73, column: 9, scope: !14855, inlinedAt: !14860)
!14864 = !DILocation(line: 119, column: 6, scope: !14835)
!14865 = !DILocation(line: 120, column: 3, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !14798, line: 120, column: 3)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !14798, line: 120, column: 3)
!14868 = distinct !DILexicalBlock(scope: !14869, file: !14798, line: 120, column: 3)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !14798, line: 120, column: 3)
!14870 = distinct !DILexicalBlock(scope: !14852, file: !14798, line: 119, column: 57)
!14871 = !DILocation(line: 121, column: 2, scope: !14870)
!14872 = !DILocation(line: 124, column: 2, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14874, file: !14798, line: 124, column: 2)
!14874 = distinct !DILexicalBlock(scope: !14875, file: !14798, line: 124, column: 2)
!14875 = distinct !DILexicalBlock(scope: !14876, file: !14798, line: 124, column: 2)
!14876 = distinct !DILexicalBlock(scope: !14835, file: !14798, line: 124, column: 2)
!14877 = !DILocation(line: 131, column: 2, scope: !14835)
!14878 = !DILocation(line: 0, scope: !14855, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 151, column: 24, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !14798, line: 151, column: 7)
!14881 = distinct !DILexicalBlock(scope: !14882, file: !14798, line: 146, column: 32)
!14882 = distinct !DILexicalBlock(scope: !14835, file: !14798, line: 146, column: 6)
!14883 = !DILocation(line: 151, column: 7, scope: !14881)
!14884 = !DILocation(line: 151, column: 21, scope: !14880)
!14885 = !DILocalVariable(name: "key", arg: 1, scope: !14886, file: !6838, line: 84, type: !32)
!14886 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14887)
!14887 = !{!14885}
!14888 = !DILocation(line: 0, scope: !14886, inlinedAt: !14889)
!14889 = distinct !DILocation(line: 186, column: 2, scope: !14835)
!14890 = !DILocation(line: 95, column: 2, scope: !14886, inlinedAt: !14889)
!14891 = !{i64 2226421}
!14892 = !DILocation(line: 189, column: 3, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14894, file: !14798, line: 188, column: 41)
!14894 = distinct !DILexicalBlock(scope: !14835, file: !14798, line: 188, column: 6)
!14895 = !DILocation(line: 191, column: 1, scope: !14835)
!14896 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !14897, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !639)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{!14899}
!14899 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !14659)
!14900 = !DILocation(line: 535, column: 9, scope: !14896)
!14901 = !DILocation(line: 535, column: 2, scope: !14896)
!14902 = distinct !DISubprogram(name: "reason_to_str", scope: !14798, file: !14798, line: 62, type: !14903, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14905)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{!140, !32}
!14905 = !{!14906}
!14906 = !DILocalVariable(name: "reason", arg: 1, scope: !14902, file: !14798, line: 62, type: !32)
!14907 = !DILocation(line: 0, scope: !14902)
!14908 = !DILocation(line: 64, column: 2, scope: !14902)
!14909 = !DILocation(line: 0, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14902, file: !14798, line: 64, column: 18)
!14911 = !DILocation(line: 78, column: 1, scope: !14902)
!14912 = distinct !DISubprogram(name: "thread_name_get", scope: !14798, file: !14798, line: 51, type: !14913, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14915)
!14913 = !DISubroutineType(types: !14914)
!14914 = !{!140, !14659}
!14915 = !{!14916, !14917}
!14916 = !DILocalVariable(name: "thread", arg: 1, scope: !14912, file: !14798, line: 51, type: !14659)
!14917 = !DILocalVariable(name: "thread_name", scope: !14912, file: !14798, line: 53, type: !140)
!14918 = !DILocation(line: 0, scope: !14912)
!14919 = !DILocation(line: 53, column: 36, scope: !14912)
!14920 = !DILocation(line: 53, column: 28, scope: !14912)
!14921 = !DILocation(line: 53, column: 47, scope: !14912)
!14922 = !DILocation(line: 55, column: 19, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14912, file: !14798, line: 55, column: 6)
!14924 = !DILocation(line: 55, column: 28, scope: !14923)
!14925 = !DILocation(line: 55, column: 32, scope: !14923)
!14926 = !DILocation(line: 55, column: 47, scope: !14923)
!14927 = !DILocation(line: 55, column: 6, scope: !14912)
!14928 = !DILocation(line: 57, column: 2, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14923, file: !14798, line: 55, column: 57)
!14930 = !DILocation(line: 59, column: 2, scope: !14912)
!14931 = distinct !DISubprogram(name: "k_thread_abort", scope: !5372, file: !5372, line: 188, type: !14932, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !14934)
!14932 = !DISubroutineType(types: !14933)
!14933 = !{null, !14899}
!14934 = !{!14935}
!14935 = !DILocalVariable(name: "thread", arg: 1, scope: !14931, file: !5372, line: 188, type: !14899)
!14936 = !DILocation(line: 0, scope: !14931)
!14937 = !DILocation(line: 197, column: 2, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14931, file: !5372, line: 197, column: 2)
!14939 = !{i64 2154843366}
!14940 = !DILocation(line: 198, column: 2, scope: !14931)
!14941 = !DILocation(line: 199, column: 1, scope: !14931)
!14942 = distinct !DISubprogram(name: "z_current_get", scope: !5372, file: !5372, line: 173, type: !14897, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3263, retainedNodes: !639)
!14943 = !DILocation(line: 180, column: 2, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14942, file: !5372, line: 180, column: 2)
!14945 = !{i64 2154843298}
!14946 = !DILocation(line: 181, column: 9, scope: !14942)
!14947 = !DILocation(line: 181, column: 2, scope: !14942)
!14948 = distinct !DISubprogram(name: "z_early_memset", scope: !2153, file: !2153, line: 108, type: !14949, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !14951)
!14949 = !DISubroutineType(types: !14950)
!14950 = !{null, !124, !125, !272}
!14951 = !{!14952, !14953, !14954}
!14952 = !DILocalVariable(name: "dst", arg: 1, scope: !14948, file: !2153, line: 108, type: !124)
!14953 = !DILocalVariable(name: "c", arg: 2, scope: !14948, file: !2153, line: 108, type: !125)
!14954 = !DILocalVariable(name: "n", arg: 3, scope: !14948, file: !2153, line: 108, type: !272)
!14955 = !DILocation(line: 0, scope: !14948)
!14956 = !DILocation(line: 110, column: 9, scope: !14948)
!14957 = !DILocation(line: 111, column: 1, scope: !14948)
!14958 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2153, file: !2153, line: 121, type: !14959, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !14961)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{null, !124, !13, !272}
!14961 = !{!14962, !14963, !14964}
!14962 = !DILocalVariable(name: "dst", arg: 1, scope: !14958, file: !2153, line: 121, type: !124)
!14963 = !DILocalVariable(name: "src", arg: 2, scope: !14958, file: !2153, line: 121, type: !13)
!14964 = !DILocalVariable(name: "n", arg: 3, scope: !14958, file: !2153, line: 121, type: !272)
!14965 = !DILocation(line: 0, scope: !14958)
!14966 = !DILocation(line: 123, column: 9, scope: !14958)
!14967 = !DILocation(line: 124, column: 1, scope: !14958)
!14968 = distinct !DISubprogram(name: "z_bss_zero", scope: !2153, file: !2153, line: 132, type: !3300, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !639)
!14969 = !DILocation(line: 143, column: 2, scope: !14968)
!14970 = !DILocation(line: 145, column: 2, scope: !14968)
!14971 = !DILocation(line: 168, column: 1, scope: !14968)
!14972 = distinct !DISubprogram(name: "z_init_cpu", scope: !2153, file: !2153, line: 372, type: !10187, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !14973)
!14973 = !{!14974}
!14974 = !DILocalVariable(name: "id", arg: 1, scope: !14972, file: !2153, line: 372, type: !125)
!14975 = !DILocation(line: 0, scope: !14972)
!14976 = !DILocation(line: 374, column: 2, scope: !14972)
!14977 = !DILocation(line: 375, column: 34, scope: !14972)
!14978 = !DILocation(line: 375, column: 19, scope: !14972)
!14979 = !DILocation(line: 375, column: 31, scope: !14972)
!14980 = !DILocation(line: 376, column: 24, scope: !14972)
!14981 = !DILocation(line: 376, column: 19, scope: !14972)
!14982 = !DILocation(line: 376, column: 22, scope: !14972)
!14983 = !DILocation(line: 378, column: 26, scope: !14972)
!14984 = !DILocation(line: 378, column: 4, scope: !14972)
!14985 = !DILocation(line: 378, column: 50, scope: !14972)
!14986 = !DILocation(line: 377, column: 19, scope: !14972)
!14987 = !DILocation(line: 377, column: 29, scope: !14972)
!14988 = !DILocation(line: 384, column: 1, scope: !14972)
!14989 = distinct !DISubprogram(name: "init_idle_thread", scope: !2153, file: !2153, line: 343, type: !10187, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !14990)
!14990 = !{!14991, !14992, !14993, !14996}
!14991 = !DILocalVariable(name: "i", arg: 1, scope: !14989, file: !2153, line: 343, type: !125)
!14992 = !DILocalVariable(name: "thread", scope: !14989, file: !2153, line: 345, type: !2245)
!14993 = !DILocalVariable(name: "stack", scope: !14989, file: !2153, line: 346, type: !14994)
!14994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14995, size: 32)
!14995 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5251, line: 44, baseType: !2359)
!14996 = !DILocalVariable(name: "tname", scope: !14989, file: !2153, line: 358, type: !393)
!14997 = !DILocation(line: 0, scope: !14989)
!14998 = !DILocation(line: 345, column: 29, scope: !14989)
!14999 = !DILocation(line: 346, column: 28, scope: !14989)
!15000 = !DILocation(line: 362, column: 37, scope: !14989)
!15001 = !DILocation(line: 362, column: 36, scope: !14989)
!15002 = !DILocation(line: 361, column: 2, scope: !14989)
!15003 = !DILocation(line: 365, column: 2, scope: !14989)
!15004 = !DILocation(line: 370, column: 1, scope: !14989)
!15005 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2360, file: !2360, line: 331, type: !15006, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15008)
!15006 = !DISubroutineType(types: !15007)
!15007 = !{!393, !14994}
!15008 = !{!15009}
!15009 = !DILocalVariable(name: "sym", arg: 1, scope: !15005, file: !2360, line: 331, type: !14994)
!15010 = !DILocation(line: 0, scope: !15005)
!15011 = !DILocation(line: 333, column: 21, scope: !15005)
!15012 = !DILocation(line: 333, column: 2, scope: !15005)
!15013 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15014, file: !15014, line: 155, type: !15015, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15017)
!15014 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15015 = !DISubroutineType(types: !15016)
!15016 = !{null, !2245}
!15017 = !{!15018}
!15018 = !DILocalVariable(name: "thread", arg: 1, scope: !15013, file: !15014, line: 155, type: !2245)
!15019 = !DILocation(line: 0, scope: !15013)
!15020 = !DILocation(line: 157, column: 15, scope: !15013)
!15021 = !DILocation(line: 157, column: 28, scope: !15013)
!15022 = !DILocation(line: 158, column: 1, scope: !15013)
!15023 = distinct !DISubprogram(name: "z_cstart", scope: !2153, file: !2153, line: 501, type: !3300, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15024)
!15024 = !{!15025}
!15025 = !DILocalVariable(name: "dummy_thread", scope: !15023, file: !2153, line: 518, type: !2246)
!15026 = !DILocation(line: 507, column: 2, scope: !15023)
!15027 = !DILocation(line: 43, column: 14, scope: !15028, inlinedAt: !15032)
!15028 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15029, file: !15029, line: 40, type: !3300, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15030)
!15029 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15030 = !{!15031}
!15031 = !DILocalVariable(name: "msp", scope: !15028, file: !15029, line: 42, type: !208)
!15032 = distinct !DILocation(line: 44, column: 2, scope: !15033, inlinedAt: !15035)
!15033 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15034, file: !15034, line: 42, type: !3300, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !639)
!15034 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15035 = distinct !DILocation(line: 510, column: 2, scope: !15023)
!15036 = !DILocation(line: 43, column: 3, scope: !15028, inlinedAt: !15032)
!15037 = !DILocation(line: 43, column: 60, scope: !15028, inlinedAt: !15032)
!15038 = !DILocation(line: 0, scope: !15028, inlinedAt: !15032)
!15039 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15040, file: !8305, line: 1153, type: !208)
!15040 = distinct !DISubprogram(name: "__set_MSP", scope: !8305, file: !8305, line: 1153, type: !8396, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15041)
!15041 = !{!15039}
!15042 = !DILocation(line: 0, scope: !15040, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 46, column: 2, scope: !15028, inlinedAt: !15032)
!15044 = !DILocation(line: 1155, column: 3, scope: !15040, inlinedAt: !15043)
!15045 = !{i64 3562722}
!15046 = !DILocation(line: 62, column: 11, scope: !15028, inlinedAt: !15032)
!15047 = !DILocation(line: 102, column: 2, scope: !15048, inlinedAt: !15049)
!15048 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9323, file: !9323, line: 97, type: !3300, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !639)
!15049 = distinct !DILocation(line: 45, column: 2, scope: !15033, inlinedAt: !15035)
!15050 = !DILocation(line: 108, column: 2, scope: !15048, inlinedAt: !15049)
!15051 = !DILocation(line: 112, column: 2, scope: !15048, inlinedAt: !15049)
!15052 = !DILocation(line: 113, column: 2, scope: !15048, inlinedAt: !15049)
!15053 = !DILocation(line: 114, column: 2, scope: !15048, inlinedAt: !15049)
!15054 = !DILocation(line: 116, column: 2, scope: !15048, inlinedAt: !15049)
!15055 = !DILocation(line: 123, column: 13, scope: !15048, inlinedAt: !15049)
!15056 = !DILocation(line: 46, column: 2, scope: !15033, inlinedAt: !15035)
!15057 = !DILocation(line: 47, column: 2, scope: !15033, inlinedAt: !15035)
!15058 = !DILocation(line: 174, column: 12, scope: !15059, inlinedAt: !15060)
!15059 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9323, file: !9323, line: 169, type: !3300, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !639)
!15060 = distinct !DILocation(line: 48, column: 2, scope: !15033, inlinedAt: !15035)
!15061 = !DILocation(line: 179, column: 12, scope: !15059, inlinedAt: !15060)
!15062 = !DILocation(line: 50, column: 2, scope: !15033, inlinedAt: !15035)
!15063 = !DILocation(line: 57, column: 2, scope: !15033, inlinedAt: !15035)
!15064 = !DILocation(line: 518, column: 2, scope: !15023)
!15065 = !DILocation(line: 518, column: 18, scope: !15023)
!15066 = !DILocation(line: 520, column: 2, scope: !15023)
!15067 = !DILocation(line: 523, column: 2, scope: !15023)
!15068 = !DILocation(line: 526, column: 2, scope: !15023)
!15069 = !DILocation(line: 527, column: 2, scope: !15023)
!15070 = !DILocation(line: 543, column: 24, scope: !15023)
!15071 = !DILocation(line: 543, column: 2, scope: !15023)
!15072 = !DILocation(line: 0, scope: !2384)
!15073 = !DILocation(line: 246, column: 15, scope: !2402)
!15074 = !DILocation(line: 246, column: 36, scope: !2401)
!15075 = !DILocation(line: 246, column: 2, scope: !2402)
!15076 = !DILocation(line: 247, column: 37, scope: !2400)
!15077 = !DILocation(line: 0, scope: !2400)
!15078 = !DILocation(line: 248, column: 19, scope: !2400)
!15079 = !DILocation(line: 248, column: 12, scope: !2400)
!15080 = !DILocation(line: 250, column: 11, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !2400, file: !2153, line: 250, column: 7)
!15082 = !DILocation(line: 250, column: 7, scope: !2400)
!15083 = !DILocation(line: 254, column: 11, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15085, file: !2153, line: 254, column: 8)
!15085 = distinct !DILexicalBlock(scope: !15081, file: !2153, line: 250, column: 20)
!15086 = !DILocation(line: 254, column: 8, scope: !15085)
!15087 = !DILocation(line: 255, column: 9, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15084, file: !2153, line: 254, column: 17)
!15089 = !DILocation(line: 258, column: 9, scope: !15088)
!15090 = !DILocation(line: 261, column: 28, scope: !15088)
!15091 = !DILocation(line: 261, column: 10, scope: !15088)
!15092 = !DILocation(line: 261, column: 17, scope: !15088)
!15093 = !DILocation(line: 261, column: 26, scope: !15088)
!15094 = !DILocation(line: 262, column: 4, scope: !15088)
!15095 = !DILocation(line: 263, column: 9, scope: !15085)
!15096 = !DILocation(line: 263, column: 16, scope: !15085)
!15097 = !DILocation(line: 263, column: 28, scope: !15085)
!15098 = !DILocation(line: 264, column: 3, scope: !15085)
!15099 = !DILocation(line: 246, column: 60, scope: !2401)
!15100 = distinct !{!15100, !15075, !15101}
!15101 = !DILocation(line: 265, column: 2, scope: !2402)
!15102 = !DILocation(line: 266, column: 1, scope: !2384)
!15103 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8339, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15104)
!15104 = !{!15105, !15106}
!15105 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15103, file: !680, line: 1814, type: !935)
!15106 = !DILocalVariable(name: "priority", arg: 2, scope: !15103, file: !680, line: 1814, type: !208)
!15107 = !DILocation(line: 0, scope: !15103)
!15108 = !DILocation(line: 1822, column: 48, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15110, file: !680, line: 1821, column: 3)
!15110 = distinct !DILexicalBlock(scope: !15103, file: !680, line: 1816, column: 7)
!15111 = !DILocation(line: 1822, column: 32, scope: !15109)
!15112 = !DILocation(line: 1822, column: 40, scope: !15109)
!15113 = !DILocation(line: 1822, column: 5, scope: !15109)
!15114 = !DILocation(line: 1822, column: 46, scope: !15109)
!15115 = !DILocation(line: 1824, column: 1, scope: !15103)
!15116 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15034, file: !15034, line: 32, type: !3300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15117 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15118, file: !15118, line: 215, type: !15015, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15119)
!15118 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15119 = !{!15120}
!15120 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15117, file: !15118, line: 215, type: !2245)
!15121 = !DILocation(line: 0, scope: !15117)
!15122 = !DILocation(line: 217, column: 21, scope: !15117)
!15123 = !DILocation(line: 217, column: 34, scope: !15117)
!15124 = !DILocation(line: 221, column: 21, scope: !15117)
!15125 = !DILocation(line: 221, column: 34, scope: !15117)
!15126 = !DILocation(line: 223, column: 27, scope: !15117)
!15127 = !DILocation(line: 223, column: 33, scope: !15117)
!15128 = !DILocation(line: 224, column: 27, scope: !15117)
!15129 = !DILocation(line: 224, column: 32, scope: !15117)
!15130 = !DILocation(line: 232, column: 16, scope: !15117)
!15131 = !DILocation(line: 232, column: 30, scope: !15117)
!15132 = !DILocation(line: 239, column: 24, scope: !15117)
!15133 = !DILocation(line: 240, column: 1, scope: !15117)
!15134 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2153, file: !2153, line: 399, type: !15135, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15137)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{!393}
!15137 = !{!15138}
!15138 = !DILocalVariable(name: "stack_ptr", scope: !15134, file: !2153, line: 401, type: !393)
!15139 = !DILocation(line: 404, column: 2, scope: !15134)
!15140 = !DILocation(line: 416, column: 24, scope: !15134)
!15141 = !DILocation(line: 418, column: 14, scope: !15134)
!15142 = !DILocation(line: 0, scope: !15134)
!15143 = !DILocation(line: 423, column: 2, scope: !15134)
!15144 = !DILocation(line: 424, column: 2, scope: !15134)
!15145 = !DILocation(line: 426, column: 2, scope: !15134)
!15146 = !DILocation(line: 428, column: 2, scope: !15134)
!15147 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2153, file: !2153, line: 432, type: !15148, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15150)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{null, !393}
!15150 = !{!15151}
!15151 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15147, file: !2153, line: 432, type: !393)
!15152 = !DILocation(line: 0, scope: !15147)
!15153 = !DILocation(line: 435, column: 2, scope: !15147)
!15154 = !DILocation(line: 445, column: 2, scope: !15147)
!15155 = distinct !DISubprogram(name: "bg_thread_main", scope: !2153, file: !2153, line: 277, type: !5253, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !15156)
!15156 = !{!15157, !15158, !15159}
!15157 = !DILocalVariable(name: "unused1", arg: 1, scope: !15155, file: !2153, line: 277, type: !124)
!15158 = !DILocalVariable(name: "unused2", arg: 2, scope: !15155, file: !2153, line: 277, type: !124)
!15159 = !DILocalVariable(name: "unused3", arg: 3, scope: !15155, file: !2153, line: 277, type: !124)
!15160 = !DILocation(line: 0, scope: !15155)
!15161 = !DILocation(line: 291, column: 20, scope: !15155)
!15162 = !DILocation(line: 293, column: 2, scope: !15155)
!15163 = !DILocation(line: 297, column: 2, scope: !15155)
!15164 = !DILocation(line: 305, column: 2, scope: !15155)
!15165 = !DILocation(line: 307, column: 2, scope: !15155)
!15166 = !DILocation(line: 330, column: 8, scope: !15155)
!15167 = !DILocation(line: 333, column: 34, scope: !15155)
!15168 = !DILocation(line: 339, column: 1, scope: !15155)
!15169 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2413, file: !2413, line: 45, type: !15170, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15178)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{null, !15172, !124}
!15172 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !624, line: 103, baseType: !15173)
!15173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15174, size: 32)
!15174 = !DISubroutineType(types: !15175)
!15175 = !{null, !15176, !124}
!15176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15177, size: 32)
!15177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!15178 = !{!15179, !15180}
!15179 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15169, file: !2413, line: 45, type: !15172)
!15180 = !DILocalVariable(name: "user_data", arg: 2, scope: !15169, file: !2413, line: 45, type: !124)
!15181 = !DILocation(line: 0, scope: !15169)
!15182 = !DILocation(line: 71, column: 1, scope: !15169)
!15183 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2413, file: !2413, line: 73, type: !15170, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15184)
!15184 = !{!15185, !15186}
!15185 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15183, file: !2413, line: 73, type: !15172)
!15186 = !DILocalVariable(name: "user_data", arg: 2, scope: !15183, file: !2413, line: 73, type: !124)
!15187 = !DILocation(line: 0, scope: !15183)
!15188 = !DILocation(line: 95, column: 1, scope: !15183)
!15189 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2413, file: !2413, line: 97, type: !9324, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !639)
!15190 = !DILocation(line: 1031, column: 3, scope: !15191, inlinedAt: !15194)
!15191 = distinct !DISubprogram(name: "__get_IPSR", scope: !8305, file: !8305, line: 1027, type: !8386, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15192)
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "result", scope: !15191, file: !8305, line: 1029, type: !208)
!15194 = distinct !DILocation(line: 48, column: 10, scope: !15195, inlinedAt: !15196)
!15195 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9323, file: !9323, line: 46, type: !9324, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !639)
!15196 = distinct !DILocation(line: 99, column: 9, scope: !15189)
!15197 = !{i64 3568373}
!15198 = !DILocation(line: 0, scope: !15191, inlinedAt: !15194)
!15199 = !DILocation(line: 48, column: 9, scope: !15195, inlinedAt: !15196)
!15200 = !DILocation(line: 99, column: 2, scope: !15189)
!15201 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2413, file: !2413, line: 106, type: !3300, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !639)
!15202 = !DILocation(line: 108, column: 2, scope: !15201)
!15203 = !DILocation(line: 108, column: 17, scope: !15201)
!15204 = !DILocation(line: 108, column: 30, scope: !15201)
!15205 = !DILocation(line: 109, column: 1, scope: !15201)
!15206 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2413, file: !2413, line: 116, type: !3300, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !639)
!15207 = !DILocation(line: 118, column: 2, scope: !15206)
!15208 = !DILocation(line: 118, column: 17, scope: !15206)
!15209 = !DILocation(line: 118, column: 30, scope: !15206)
!15210 = !DILocation(line: 119, column: 1, scope: !15206)
!15211 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2413, file: !2413, line: 126, type: !9324, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !639)
!15212 = !DILocation(line: 128, column: 10, scope: !15211)
!15213 = !DILocation(line: 128, column: 25, scope: !15211)
!15214 = !DILocation(line: 128, column: 38, scope: !15211)
!15215 = !DILocation(line: 128, column: 53, scope: !15211)
!15216 = !DILocation(line: 128, column: 2, scope: !15211)
!15217 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2413, file: !2413, line: 187, type: !15218, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15220)
!15218 = !DISubroutineType(types: !15219)
!15219 = !{!125, !2417, !140}
!15220 = !{!15221, !15222}
!15221 = !DILocalVariable(name: "thread", arg: 1, scope: !15217, file: !2413, line: 187, type: !2417)
!15222 = !DILocalVariable(name: "value", arg: 2, scope: !15217, file: !2413, line: 187, type: !140)
!15223 = !DILocation(line: 0, scope: !15217)
!15224 = !DILocation(line: 206, column: 2, scope: !15217)
!15225 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2413, file: !2413, line: 238, type: !15226, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15228)
!15226 = !DISubroutineType(types: !15227)
!15227 = !{!140, !2417}
!15228 = !{!15229}
!15229 = !DILocalVariable(name: "thread", arg: 1, scope: !15225, file: !2413, line: 238, type: !2417)
!15230 = !DILocation(line: 0, scope: !15225)
!15231 = !DILocation(line: 244, column: 2, scope: !15225)
!15232 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2413, file: !2413, line: 248, type: !15233, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15235)
!15233 = !DISubroutineType(types: !15234)
!15234 = !{!125, !2416, !393, !272}
!15235 = !{!15236, !15237, !15238}
!15236 = !DILocalVariable(name: "thread", arg: 1, scope: !15232, file: !2413, line: 248, type: !2416)
!15237 = !DILocalVariable(name: "buf", arg: 2, scope: !15232, file: !2413, line: 248, type: !393)
!15238 = !DILocalVariable(name: "size", arg: 3, scope: !15232, file: !2413, line: 248, type: !272)
!15239 = !DILocation(line: 0, scope: !15232)
!15240 = !DILocation(line: 257, column: 2, scope: !15232)
!15241 = !DILocation(line: 0, scope: !2412)
!15242 = !DILocation(line: 281, column: 11, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !2412, file: !2413, line: 281, column: 6)
!15244 = !DILocation(line: 281, column: 20, scope: !15243)
!15245 = !DILocation(line: 275, column: 45, scope: !2412)
!15246 = !DILocation(line: 285, column: 10, scope: !2412)
!15247 = !DILocation(line: 0, scope: !2533)
!15248 = !DILocation(line: 293, column: 39, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !2533, file: !2413, line: 293, column: 2)
!15250 = !DILocation(line: 293, column: 2, scope: !2533)
!15251 = !DILocation(line: 273, column: 14, scope: !2412)
!15252 = !DILocation(line: 309, column: 2, scope: !2412)
!15253 = !DILocation(line: 309, column: 11, scope: !2412)
!15254 = !DILocation(line: 311, column: 2, scope: !2412)
!15255 = !DILocation(line: 293, column: 26, scope: !15249)
!15256 = !DILocation(line: 294, column: 9, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15249, file: !2413, line: 293, column: 54)
!15258 = !DILocation(line: 295, column: 21, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15257, file: !2413, line: 295, column: 7)
!15260 = !DILocation(line: 295, column: 28, scope: !15259)
!15261 = !DILocation(line: 295, column: 7, scope: !15257)
!15262 = !DILocation(line: 299, column: 25, scope: !15257)
!15263 = !DILocation(line: 299, column: 41, scope: !15257)
!15264 = !DILocation(line: 300, column: 7, scope: !15257)
!15265 = !DILocation(line: 300, column: 26, scope: !15257)
!15266 = !DILocation(line: 299, column: 10, scope: !15257)
!15267 = !DILocation(line: 299, column: 7, scope: !15257)
!15268 = !DILocation(line: 302, column: 16, scope: !15257)
!15269 = !DILocation(line: 304, column: 20, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15257, file: !2413, line: 304, column: 7)
!15271 = !DILocation(line: 304, column: 7, scope: !15257)
!15272 = !DILocation(line: 305, column: 26, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15270, file: !2413, line: 304, column: 26)
!15274 = !DILocation(line: 305, column: 42, scope: !15273)
!15275 = !DILocation(line: 305, column: 11, scope: !15273)
!15276 = !DILocation(line: 305, column: 8, scope: !15273)
!15277 = !DILocation(line: 306, column: 3, scope: !15273)
!15278 = !DILocation(line: 293, column: 50, scope: !15249)
!15279 = !DILocation(line: 312, column: 1, scope: !2412)
!15280 = distinct !DISubprogram(name: "copy_bytes", scope: !2413, file: !2413, line: 261, type: !15281, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15283)
!15281 = !DISubroutineType(types: !15282)
!15282 = !{!272, !393, !272, !140, !272}
!15283 = !{!15284, !15285, !15286, !15287, !15288}
!15284 = !DILocalVariable(name: "dest", arg: 1, scope: !15280, file: !2413, line: 261, type: !393)
!15285 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15280, file: !2413, line: 261, type: !272)
!15286 = !DILocalVariable(name: "src", arg: 3, scope: !15280, file: !2413, line: 261, type: !140)
!15287 = !DILocalVariable(name: "src_size", arg: 4, scope: !15280, file: !2413, line: 261, type: !272)
!15288 = !DILocalVariable(name: "bytes_to_copy", scope: !15280, file: !2413, line: 263, type: !272)
!15289 = !DILocation(line: 0, scope: !15280)
!15290 = !DILocation(line: 265, column: 18, scope: !15280)
!15291 = !DILocation(line: 266, column: 2, scope: !15280)
!15292 = !DILocation(line: 268, column: 2, scope: !15280)
!15293 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2413, file: !2413, line: 383, type: !15294, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15296)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{null, !2417}
!15296 = !{!15297}
!15297 = !DILocalVariable(name: "thread", arg: 1, scope: !15293, file: !2413, line: 383, type: !2417)
!15298 = !DILocation(line: 0, scope: !15293)
!15299 = !DILocation(line: 387, column: 2, scope: !15293)
!15300 = !DILocation(line: 388, column: 1, scope: !15293)
!15301 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2413, file: !2413, line: 528, type: !15302, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15309)
!15302 = !DISubroutineType(types: !15303)
!15303 = !{!393, !2417, !15304, !272, !5250, !124, !124, !124, !125, !208, !140}
!15304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15305, size: 32)
!15305 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5251, line: 44, baseType: !15306)
!15306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2360, line: 47, size: 8, elements: !15307)
!15307 = !{!15308}
!15308 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15306, file: !2360, line: 48, baseType: !142, size: 8)
!15309 = !{!15310, !15311, !15312, !15313, !15314, !15315, !15316, !15317, !15318, !15319, !15320}
!15310 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15301, file: !2413, line: 528, type: !2417)
!15311 = !DILocalVariable(name: "stack", arg: 2, scope: !15301, file: !2413, line: 529, type: !15304)
!15312 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15301, file: !2413, line: 529, type: !272)
!15313 = !DILocalVariable(name: "entry", arg: 4, scope: !15301, file: !2413, line: 530, type: !5250)
!15314 = !DILocalVariable(name: "p1", arg: 5, scope: !15301, file: !2413, line: 531, type: !124)
!15315 = !DILocalVariable(name: "p2", arg: 6, scope: !15301, file: !2413, line: 531, type: !124)
!15316 = !DILocalVariable(name: "p3", arg: 7, scope: !15301, file: !2413, line: 531, type: !124)
!15317 = !DILocalVariable(name: "prio", arg: 8, scope: !15301, file: !2413, line: 532, type: !125)
!15318 = !DILocalVariable(name: "options", arg: 9, scope: !15301, file: !2413, line: 532, type: !208)
!15319 = !DILocalVariable(name: "name", arg: 10, scope: !15301, file: !2413, line: 532, type: !140)
!15320 = !DILocalVariable(name: "stack_ptr", scope: !15301, file: !2413, line: 534, type: !393)
!15321 = !DILocation(line: 0, scope: !15301)
!15322 = !DILocation(line: 550, column: 28, scope: !15301)
!15323 = !DILocation(line: 550, column: 2, scope: !15301)
!15324 = !DILocation(line: 553, column: 34, scope: !15301)
!15325 = !DILocation(line: 553, column: 2, scope: !15301)
!15326 = !DILocation(line: 554, column: 14, scope: !15301)
!15327 = !DILocation(line: 564, column: 2, scope: !15301)
!15328 = !DILocation(line: 567, column: 14, scope: !15301)
!15329 = !DILocation(line: 567, column: 24, scope: !15301)
!15330 = !DILocation(line: 612, column: 7, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15301, file: !2413, line: 612, column: 6)
!15332 = !DILocation(line: 612, column: 6, scope: !15301)
!15333 = !DILocation(line: 627, column: 40, scope: !15301)
!15334 = !DILocation(line: 637, column: 2, scope: !15301)
!15335 = !DILocation(line: 613, column: 15, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15331, file: !2413, line: 612, column: 17)
!15337 = !DILocation(line: 613, column: 29, scope: !15336)
!15338 = !DILocation(line: 638, column: 1, scope: !15301)
!15339 = distinct !DISubprogram(name: "z_waitq_init", scope: !15340, file: !15340, line: 47, type: !15341, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15343)
!15340 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15341 = !DISubroutineType(types: !15342)
!15342 = !{null, !2448}
!15343 = !{!15344}
!15344 = !DILocalVariable(name: "w", arg: 1, scope: !15339, file: !15340, line: 47, type: !2448)
!15345 = !DILocation(line: 0, scope: !15339)
!15346 = !DILocation(line: 49, column: 21, scope: !15339)
!15347 = !DILocation(line: 49, column: 2, scope: !15339)
!15348 = !DILocation(line: 50, column: 1, scope: !15339)
!15349 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2413, file: !2413, line: 791, type: !15350, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15353)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{null, !15352, !125, !208, !32}
!15352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!15353 = !{!15354, !15355, !15356, !15357}
!15354 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15349, file: !2413, line: 791, type: !15352)
!15355 = !DILocalVariable(name: "priority", arg: 2, scope: !15349, file: !2413, line: 791, type: !125)
!15356 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15349, file: !2413, line: 792, type: !208)
!15357 = !DILocalVariable(name: "options", arg: 4, scope: !15349, file: !2413, line: 792, type: !32)
!15358 = !DILocation(line: 0, scope: !15349)
!15359 = !DILocation(line: 795, column: 15, scope: !15349)
!15360 = !DILocation(line: 795, column: 25, scope: !15349)
!15361 = !DILocation(line: 796, column: 30, scope: !15349)
!15362 = !DILocation(line: 796, column: 15, scope: !15349)
!15363 = !DILocation(line: 796, column: 28, scope: !15349)
!15364 = !DILocation(line: 797, column: 30, scope: !15349)
!15365 = !DILocation(line: 797, column: 15, scope: !15349)
!15366 = !DILocation(line: 797, column: 28, scope: !15349)
!15367 = !DILocation(line: 799, column: 22, scope: !15349)
!15368 = !DILocation(line: 799, column: 15, scope: !15349)
!15369 = !DILocation(line: 799, column: 20, scope: !15349)
!15370 = !DILocation(line: 801, column: 15, scope: !15349)
!15371 = !DILocation(line: 801, column: 28, scope: !15349)
!15372 = !DILocation(line: 814, column: 2, scope: !15349)
!15373 = !DILocation(line: 815, column: 1, scope: !15349)
!15374 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2413, file: !2413, line: 449, type: !15375, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15377)
!15375 = !DISubroutineType(types: !15376)
!15376 = !{!393, !2417, !15304, !272}
!15377 = !{!15378, !15379, !15380, !15381, !15382, !15383, !15384, !15385}
!15378 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15374, file: !2413, line: 449, type: !2417)
!15379 = !DILocalVariable(name: "stack", arg: 2, scope: !15374, file: !2413, line: 450, type: !15304)
!15380 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15374, file: !2413, line: 450, type: !272)
!15381 = !DILocalVariable(name: "stack_obj_size", scope: !15374, file: !2413, line: 452, type: !272)
!15382 = !DILocalVariable(name: "stack_buf_size", scope: !15374, file: !2413, line: 452, type: !272)
!15383 = !DILocalVariable(name: "stack_ptr", scope: !15374, file: !2413, line: 453, type: !393)
!15384 = !DILocalVariable(name: "stack_buf_start", scope: !15374, file: !2413, line: 453, type: !393)
!15385 = !DILocalVariable(name: "delta", scope: !15374, file: !2413, line: 454, type: !272)
!15386 = !DILocation(line: 0, scope: !15374)
!15387 = !DILocation(line: 465, column: 20, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15374, file: !2413, line: 463, column: 2)
!15389 = !DILocation(line: 466, column: 21, scope: !15388)
!15390 = !DILocation(line: 473, column: 28, scope: !15374)
!15391 = !DILocation(line: 514, column: 33, scope: !15374)
!15392 = !DILocation(line: 514, column: 25, scope: !15374)
!15393 = !DILocation(line: 514, column: 31, scope: !15374)
!15394 = !DILocation(line: 515, column: 25, scope: !15374)
!15395 = !DILocation(line: 515, column: 30, scope: !15374)
!15396 = !DILocation(line: 516, column: 25, scope: !15374)
!15397 = !DILocation(line: 516, column: 31, scope: !15374)
!15398 = !DILocation(line: 520, column: 2, scope: !15374)
!15399 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2360, file: !2360, line: 331, type: !15400, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15402)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{!393, !15304}
!15402 = !{!15403}
!15403 = !DILocalVariable(name: "sym", arg: 1, scope: !15399, file: !2360, line: 331, type: !15304)
!15404 = !DILocation(line: 0, scope: !15399)
!15405 = !DILocation(line: 333, column: 21, scope: !15399)
!15406 = !DILocation(line: 333, column: 2, scope: !15399)
!15407 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15408, file: !15408, line: 40, type: !15409, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15411)
!15408 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15409 = !DISubroutineType(types: !15410)
!15410 = !{null, !15352}
!15411 = !{!15412}
!15412 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15407, file: !15408, line: 40, type: !15352)
!15413 = !DILocation(line: 0, scope: !15407)
!15414 = !DILocation(line: 42, column: 31, scope: !15407)
!15415 = !DILocation(line: 42, column: 2, scope: !15407)
!15416 = !DILocation(line: 43, column: 1, scope: !15407)
!15417 = distinct !DISubprogram(name: "z_init_timeout", scope: !15408, file: !15408, line: 25, type: !2474, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15418)
!15418 = !{!15419}
!15419 = !DILocalVariable(name: "to", arg: 1, scope: !15417, file: !15408, line: 25, type: !2476)
!15420 = !DILocation(line: 0, scope: !15417)
!15421 = !DILocation(line: 27, column: 22, scope: !15417)
!15422 = !DILocation(line: 27, column: 2, scope: !15417)
!15423 = !DILocation(line: 28, column: 1, scope: !15417)
!15424 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !15425, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15427)
!15425 = !DISubroutineType(types: !15426)
!15426 = !{null, !2520}
!15427 = !{!15428}
!15428 = !DILocalVariable(name: "node", arg: 1, scope: !15424, file: !541, line: 211, type: !2520)
!15429 = !DILocation(line: 0, scope: !15424)
!15430 = !DILocation(line: 213, column: 8, scope: !15424)
!15431 = !DILocation(line: 213, column: 13, scope: !15424)
!15432 = !DILocation(line: 214, column: 8, scope: !15424)
!15433 = !DILocation(line: 214, column: 13, scope: !15424)
!15434 = !DILocation(line: 215, column: 1, scope: !15424)
!15435 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !15436, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15439)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{null, !15438}
!15438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!15439 = !{!15440}
!15440 = !DILocalVariable(name: "list", arg: 1, scope: !15435, file: !541, line: 197, type: !15438)
!15441 = !DILocation(line: 0, scope: !15435)
!15442 = !DILocation(line: 199, column: 8, scope: !15435)
!15443 = !DILocation(line: 199, column: 13, scope: !15435)
!15444 = !DILocation(line: 200, column: 8, scope: !15435)
!15445 = !DILocation(line: 200, column: 13, scope: !15435)
!15446 = !DILocation(line: 201, column: 1, scope: !15435)
!15447 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2413, file: !2413, line: 641, type: !15448, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15454)
!15448 = !DISubroutineType(types: !15449)
!15449 = !{!2416, !2417, !15304, !272, !5250, !124, !124, !124, !125, !208, !15450}
!15450 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1897, line: 67, baseType: !15451)
!15451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1897, line: 65, size: 64, elements: !15452)
!15452 = !{!15453}
!15453 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15451, file: !1897, line: 66, baseType: !1896, size: 64)
!15454 = !{!15455, !15456, !15457, !15458, !15459, !15460, !15461, !15462, !15463, !15464}
!15455 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15447, file: !2413, line: 641, type: !2417)
!15456 = !DILocalVariable(name: "stack", arg: 2, scope: !15447, file: !2413, line: 642, type: !15304)
!15457 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15447, file: !2413, line: 643, type: !272)
!15458 = !DILocalVariable(name: "entry", arg: 4, scope: !15447, file: !2413, line: 643, type: !5250)
!15459 = !DILocalVariable(name: "p1", arg: 5, scope: !15447, file: !2413, line: 644, type: !124)
!15460 = !DILocalVariable(name: "p2", arg: 6, scope: !15447, file: !2413, line: 644, type: !124)
!15461 = !DILocalVariable(name: "p3", arg: 7, scope: !15447, file: !2413, line: 644, type: !124)
!15462 = !DILocalVariable(name: "prio", arg: 8, scope: !15447, file: !2413, line: 645, type: !125)
!15463 = !DILocalVariable(name: "options", arg: 9, scope: !15447, file: !2413, line: 645, type: !208)
!15464 = !DILocalVariable(name: "delay", arg: 10, scope: !15447, file: !2413, line: 645, type: !15450)
!15465 = !DILocation(line: 0, scope: !15447)
!15466 = !DILocation(line: 649, column: 2, scope: !15447)
!15467 = !DILocation(line: 652, column: 7, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15447, file: !2413, line: 652, column: 6)
!15469 = !DILocation(line: 652, column: 6, scope: !15447)
!15470 = !DILocation(line: 653, column: 3, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15468, file: !2413, line: 652, column: 39)
!15472 = !DILocation(line: 654, column: 2, scope: !15471)
!15473 = !DILocation(line: 656, column: 2, scope: !15447)
!15474 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2413, file: !2413, line: 401, type: !15475, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15477)
!15475 = !DISubroutineType(types: !15476)
!15476 = !{null, !2417, !15450}
!15477 = !{!15478, !15479}
!15478 = !DILocalVariable(name: "thread", arg: 1, scope: !15474, file: !2413, line: 401, type: !2417)
!15479 = !DILocalVariable(name: "delay", arg: 2, scope: !15474, file: !2413, line: 401, type: !15450)
!15480 = !DILocation(line: 0, scope: !15474)
!15481 = !DILocation(line: 404, column: 6, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15474, file: !2413, line: 404, column: 6)
!15483 = !DILocation(line: 404, column: 6, scope: !15474)
!15484 = !DILocation(line: 405, column: 3, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15482, file: !2413, line: 404, column: 38)
!15486 = !DILocation(line: 406, column: 2, scope: !15485)
!15487 = !DILocation(line: 407, column: 3, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15482, file: !2413, line: 406, column: 9)
!15489 = !DILocation(line: 413, column: 1, scope: !15474)
!15490 = distinct !DISubprogram(name: "k_thread_start", scope: !5372, file: !5372, line: 205, type: !15491, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15493)
!15491 = !DISubroutineType(types: !15492)
!15492 = !{null, !2416}
!15493 = !{!15494}
!15494 = !DILocalVariable(name: "thread", arg: 1, scope: !15490, file: !5372, line: 205, type: !2416)
!15495 = !DILocation(line: 0, scope: !15490)
!15496 = !DILocation(line: 214, column: 2, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15490, file: !5372, line: 214, column: 2)
!15498 = !{i64 2154868590}
!15499 = !DILocation(line: 215, column: 2, scope: !15490)
!15500 = !DILocation(line: 216, column: 1, scope: !15490)
!15501 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15408, file: !15408, line: 47, type: !15475, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15502)
!15502 = !{!15503, !15504}
!15503 = !DILocalVariable(name: "thread", arg: 1, scope: !15501, file: !15408, line: 47, type: !2417)
!15504 = !DILocalVariable(name: "ticks", arg: 2, scope: !15501, file: !15408, line: 47, type: !15450)
!15505 = !DILocation(line: 0, scope: !15501)
!15506 = !DILocation(line: 49, column: 30, scope: !15501)
!15507 = !DILocation(line: 49, column: 2, scope: !15501)
!15508 = !DILocation(line: 50, column: 1, scope: !15501)
!15509 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2413, file: !2413, line: 748, type: !3300, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15510)
!15510 = !{!15511, !15529}
!15511 = !DILocalVariable(name: "thread_data", scope: !15512, file: !2413, line: 750, type: !15513)
!15512 = distinct !DILexicalBlock(scope: !15509, file: !2413, line: 750, column: 2)
!15513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15514, size: 32)
!15514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !624, line: 620, size: 384, elements: !15515)
!15515 = !{!15516, !15517, !15518, !15519, !15520, !15521, !15522, !15523, !15524, !15525, !15526, !15528}
!15516 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15514, file: !624, line: 621, baseType: !2417, size: 32)
!15517 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15514, file: !624, line: 622, baseType: !15304, size: 32, offset: 32)
!15518 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15514, file: !624, line: 623, baseType: !32, size: 32, offset: 64)
!15519 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15514, file: !624, line: 624, baseType: !5250, size: 32, offset: 96)
!15520 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15514, file: !624, line: 625, baseType: !124, size: 32, offset: 128)
!15521 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15514, file: !624, line: 626, baseType: !124, size: 32, offset: 160)
!15522 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15514, file: !624, line: 627, baseType: !124, size: 32, offset: 192)
!15523 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15514, file: !624, line: 628, baseType: !125, size: 32, offset: 224)
!15524 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15514, file: !624, line: 629, baseType: !208, size: 32, offset: 256)
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15514, file: !624, line: 630, baseType: !909, size: 32, offset: 288)
!15526 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15514, file: !624, line: 631, baseType: !15527, size: 32, offset: 320)
!15527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15514, file: !624, line: 632, baseType: !140, size: 32, offset: 352)
!15529 = !DILocalVariable(name: "thread_data", scope: !15530, file: !2413, line: 781, type: !15513)
!15530 = distinct !DILexicalBlock(scope: !15509, file: !2413, line: 781, column: 2)
!15531 = !DILocation(line: 0, scope: !15512)
!15532 = !DILocation(line: 750, column: 2, scope: !15512)
!15533 = !DILocation(line: 780, column: 2, scope: !15509)
!15534 = !DILocation(line: 0, scope: !15530)
!15535 = !DILocation(line: 781, column: 2, scope: !15530)
!15536 = !DILocation(line: 752, column: 17, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15538, file: !2413, line: 750, column: 38)
!15538 = distinct !DILexicalBlock(scope: !15512, file: !2413, line: 750, column: 2)
!15539 = !DILocation(line: 753, column: 17, scope: !15537)
!15540 = !DILocation(line: 754, column: 17, scope: !15537)
!15541 = !DILocation(line: 755, column: 17, scope: !15537)
!15542 = !DILocation(line: 756, column: 17, scope: !15537)
!15543 = !DILocation(line: 757, column: 17, scope: !15537)
!15544 = !DILocation(line: 758, column: 17, scope: !15537)
!15545 = !DILocation(line: 759, column: 17, scope: !15537)
!15546 = !DILocation(line: 760, column: 17, scope: !15537)
!15547 = !DILocation(line: 751, column: 3, scope: !15537)
!15548 = !DILocation(line: 763, column: 16, scope: !15537)
!15549 = !DILocation(line: 763, column: 29, scope: !15537)
!15550 = !DILocation(line: 763, column: 39, scope: !15537)
!15551 = !DILocation(line: 750, column: 2, scope: !15538)
!15552 = !DILocation(line: 750, column: 2, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15538, file: !2413, line: 750, column: 2)
!15554 = distinct !{!15554, !15532, !15555}
!15555 = !DILocation(line: 764, column: 2, scope: !15512)
!15556 = !DILocation(line: 787, column: 2, scope: !15509)
!15557 = !DILocation(line: 788, column: 1, scope: !15509)
!15558 = !DILocation(line: 782, column: 20, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15560, file: !2413, line: 782, column: 7)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !2413, line: 781, column: 38)
!15561 = distinct !DILexicalBlock(scope: !15530, file: !2413, line: 781, column: 2)
!15562 = !DILocation(line: 782, column: 31, scope: !15559)
!15563 = !DILocation(line: 782, column: 7, scope: !15560)
!15564 = !DILocation(line: 783, column: 37, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15559, file: !2413, line: 782, column: 51)
!15566 = !DILocation(line: 784, column: 10, scope: !15565)
!15567 = !DILocation(line: 783, column: 4, scope: !15565)
!15568 = !DILocation(line: 785, column: 3, scope: !15565)
!15569 = !DILocation(line: 781, column: 2, scope: !15561)
!15570 = !DILocation(line: 781, column: 2, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15561, file: !2413, line: 781, column: 2)
!15572 = distinct !{!15572, !15535, !15573}
!15573 = !DILocation(line: 786, column: 2, scope: !15530)
!15574 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15575, file: !15575, line: 403, type: !15576, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15578)
!15575 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15576 = !DISubroutineType(types: !15577)
!15577 = !{!1803, !1803}
!15578 = !{!15579}
!15579 = !DILocalVariable(name: "t", arg: 1, scope: !15574, file: !15575, line: 403, type: !1803)
!15580 = !DILocation(line: 0, scope: !15574)
!15581 = !DILocalVariable(name: "t", arg: 1, scope: !15582, file: !15575, line: 102, type: !1803)
!15582 = distinct !DISubprogram(name: "z_tmcvt", scope: !15575, file: !15575, line: 102, type: !15583, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15585)
!15583 = !DISubroutineType(types: !15584)
!15584 = !{!1803, !1803, !208, !208, !153, !153, !153, !153}
!15585 = !{!15581, !15586, !15587, !15588, !15589, !15590, !15591, !15592, !15593, !15594, !15595}
!15586 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15582, file: !15575, line: 102, type: !208)
!15587 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15582, file: !15575, line: 103, type: !208)
!15588 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15582, file: !15575, line: 103, type: !153)
!15589 = !DILocalVariable(name: "result32", arg: 5, scope: !15582, file: !15575, line: 104, type: !153)
!15590 = !DILocalVariable(name: "round_up", arg: 6, scope: !15582, file: !15575, line: 104, type: !153)
!15591 = !DILocalVariable(name: "round_off", arg: 7, scope: !15582, file: !15575, line: 105, type: !153)
!15592 = !DILocalVariable(name: "mul_ratio", scope: !15582, file: !15575, line: 107, type: !153)
!15593 = !DILocalVariable(name: "div_ratio", scope: !15582, file: !15575, line: 109, type: !153)
!15594 = !DILocalVariable(name: "off", scope: !15582, file: !15575, line: 116, type: !1803)
!15595 = !DILocalVariable(name: "rdivisor", scope: !15596, file: !15575, line: 119, type: !208)
!15596 = distinct !DILexicalBlock(scope: !15597, file: !15575, line: 118, column: 18)
!15597 = distinct !DILexicalBlock(scope: !15582, file: !15575, line: 118, column: 6)
!15598 = !DILocation(line: 0, scope: !15582, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 406, column: 9, scope: !15574)
!15600 = !DILocation(line: 145, column: 13, scope: !15601, inlinedAt: !15599)
!15601 = distinct !DILexicalBlock(scope: !15602, file: !15575, line: 144, column: 10)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !15575, line: 142, column: 7)
!15603 = distinct !DILexicalBlock(scope: !15604, file: !15575, line: 141, column: 24)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !15575, line: 141, column: 13)
!15605 = distinct !DILexicalBlock(scope: !15582, file: !15575, line: 134, column: 6)
!15606 = !DILocation(line: 406, column: 2, scope: !15574)
!15607 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2413, file: !2413, line: 817, type: !5248, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15608)
!15608 = !{!15609, !15610, !15611, !15612}
!15609 = !DILocalVariable(name: "entry", arg: 1, scope: !15607, file: !2413, line: 817, type: !5250)
!15610 = !DILocalVariable(name: "p1", arg: 2, scope: !15607, file: !2413, line: 818, type: !124)
!15611 = !DILocalVariable(name: "p2", arg: 3, scope: !15607, file: !2413, line: 818, type: !124)
!15612 = !DILocalVariable(name: "p3", arg: 4, scope: !15607, file: !2413, line: 818, type: !124)
!15613 = !DILocation(line: 0, scope: !15607)
!15614 = !DILocation(line: 822, column: 2, scope: !15607)
!15615 = !DILocation(line: 822, column: 17, scope: !15607)
!15616 = !DILocation(line: 822, column: 30, scope: !15607)
!15617 = !DILocation(line: 823, column: 2, scope: !15607)
!15618 = !DILocation(line: 845, column: 2, scope: !15607)
!15619 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2413, file: !2413, line: 888, type: !15620, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15622)
!15620 = !DISubroutineType(types: !15621)
!15621 = !{!125, !2417}
!15622 = !{!15623}
!15623 = !DILocalVariable(name: "thread", arg: 1, scope: !15619, file: !2413, line: 888, type: !2417)
!15624 = !DILocation(line: 0, scope: !15619)
!15625 = !DILocation(line: 893, column: 2, scope: !15619)
!15626 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2413, file: !2413, line: 897, type: !15627, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15629)
!15627 = !DISubroutineType(types: !15628)
!15628 = !{!125, !2417, !32}
!15629 = !{!15630, !15631}
!15630 = !DILocalVariable(name: "thread", arg: 1, scope: !15626, file: !2413, line: 897, type: !2417)
!15631 = !DILocalVariable(name: "options", arg: 2, scope: !15626, file: !2413, line: 897, type: !32)
!15632 = !DILocation(line: 0, scope: !15626)
!15633 = !DILocation(line: 902, column: 2, scope: !15626)
!15634 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2413, file: !2413, line: 1072, type: !15635, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15640)
!15635 = !DISubroutineType(types: !15636)
!15636 = !{!125, !2416, !15637}
!15637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15638, size: 32)
!15638 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !531, line: 234, baseType: !15639)
!15639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !531, line: 192, elements: !639)
!15640 = !{!15641, !15642}
!15641 = !DILocalVariable(name: "thread", arg: 1, scope: !15634, file: !2413, line: 1072, type: !2416)
!15642 = !DILocalVariable(name: "stats", arg: 2, scope: !15634, file: !2413, line: 1073, type: !15637)
!15643 = !DILocation(line: 0, scope: !15634)
!15644 = !DILocation(line: 1075, column: 14, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15634, file: !2413, line: 1075, column: 6)
!15646 = !DILocation(line: 1075, column: 23, scope: !15645)
!15647 = !DILocation(line: 1086, column: 1, scope: !15634)
!15648 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2413, file: !2413, line: 1088, type: !15649, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !15651)
!15649 = !DISubroutineType(types: !15650)
!15650 = !{!125, !15637}
!15651 = !{!15652}
!15652 = !DILocalVariable(name: "stats", arg: 1, scope: !15648, file: !2413, line: 1088, type: !15637)
!15653 = !DILocation(line: 0, scope: !15648)
!15654 = !DILocation(line: 1094, column: 12, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15648, file: !2413, line: 1094, column: 6)
!15656 = !DILocation(line: 1120, column: 1, scope: !15648)
!15657 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15658, file: !15658, line: 20, type: !3300, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !639)
!15658 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15659 = !DILocation(line: 30, column: 2, scope: !15657)
!15660 = !DILocation(line: 31, column: 1, scope: !15657)
!15661 = distinct !DISubprogram(name: "idle", scope: !15658, file: !15658, line: 33, type: !5253, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !15662)
!15662 = !{!15663, !15664, !15665}
!15663 = !DILocalVariable(name: "unused1", arg: 1, scope: !15661, file: !15658, line: 33, type: !124)
!15664 = !DILocalVariable(name: "unused2", arg: 2, scope: !15661, file: !15658, line: 33, type: !124)
!15665 = !DILocalVariable(name: "unused3", arg: 3, scope: !15661, file: !15658, line: 33, type: !124)
!15666 = !DILocation(line: 0, scope: !15661)
!15667 = !DILocation(line: 41, column: 2, scope: !15661)
!15668 = !DILocation(line: 55, column: 2, scope: !15669, inlinedAt: !15673)
!15669 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !15670)
!15670 = !{!15671, !15672}
!15671 = !DILocalVariable(name: "key", scope: !15669, file: !6838, line: 44, type: !32)
!15672 = !DILocalVariable(name: "tmp", scope: !15669, file: !6838, line: 53, type: !32)
!15673 = distinct !DILocation(line: 62, column: 10, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15661, file: !15658, line: 41, column: 15)
!15675 = !{i64 2223946}
!15676 = !DILocation(line: 0, scope: !15669, inlinedAt: !15673)
!15677 = !DILocation(line: 86, column: 3, scope: !15674)
!15678 = distinct !{!15678, !15667, !15679}
!15679 = !DILocation(line: 105, column: 2, scope: !15661)
!15680 = distinct !DISubprogram(name: "k_cpu_idle", scope: !624, file: !624, line: 5627, type: !3300, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3281, retainedNodes: !639)
!15681 = !DILocation(line: 5629, column: 2, scope: !15680)
!15682 = !DILocation(line: 5630, column: 1, scope: !15680)
!15683 = !DISubprogram(name: "arch_cpu_idle", scope: !5251, file: !5251, line: 167, type: !3300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15684 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2645, file: !2645, line: 93, type: !15685, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15687)
!15685 = !DISubroutineType(types: !15686)
!15686 = !{!909, !2540, !2540}
!15687 = !{!15688, !15689, !15690, !15691}
!15688 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15684, file: !2645, line: 93, type: !2540)
!15689 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15684, file: !2645, line: 94, type: !2540)
!15690 = !DILocalVariable(name: "b1", scope: !15684, file: !2645, line: 97, type: !909)
!15691 = !DILocalVariable(name: "b2", scope: !15684, file: !2645, line: 98, type: !909)
!15692 = !DILocation(line: 0, scope: !15684)
!15693 = !DILocation(line: 97, column: 30, scope: !15684)
!15694 = !DILocation(line: 98, column: 30, scope: !15684)
!15695 = !DILocation(line: 100, column: 9, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15684, file: !2645, line: 100, column: 6)
!15697 = !DILocation(line: 100, column: 6, scope: !15684)
!15698 = !DILocation(line: 125, column: 1, scope: !15684)
!15699 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2645, file: !2645, line: 428, type: !15700, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15702)
!15700 = !DISubroutineType(types: !15701)
!15701 = !{null, !2540}
!15702 = !{!15703}
!15703 = !DILocalVariable(name: "curr", arg: 1, scope: !15699, file: !2645, line: 428, type: !2540)
!15704 = !DILocation(line: 0, scope: !15699)
!15705 = !DILocation(line: 434, column: 6, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15699, file: !2645, line: 434, column: 6)
!15707 = !DILocation(line: 434, column: 23, scope: !15706)
!15708 = !DILocation(line: 434, column: 6, scope: !15699)
!15709 = !DILocation(line: 435, column: 50, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15706, file: !2645, line: 434, column: 29)
!15711 = !DILocation(line: 435, column: 48, scope: !15710)
!15712 = !DILocation(line: 435, column: 29, scope: !15710)
!15713 = !DILocation(line: 436, column: 24, scope: !15710)
!15714 = !DILocation(line: 436, column: 3, scope: !15710)
!15715 = !DILocation(line: 437, column: 2, scope: !15710)
!15716 = !DILocation(line: 438, column: 1, scope: !15699)
!15717 = distinct !DISubprogram(name: "slice_time", scope: !2645, file: !2645, line: 407, type: !15718, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15720)
!15718 = !DISubroutineType(types: !15719)
!15719 = !{!125, !2540}
!15720 = !{!15721, !15722}
!15721 = !DILocalVariable(name: "curr", arg: 1, scope: !15717, file: !2645, line: 407, type: !2540)
!15722 = !DILocalVariable(name: "ret", scope: !15717, file: !2645, line: 409, type: !125)
!15723 = !DILocation(line: 0, scope: !15717)
!15724 = !DILocation(line: 409, column: 12, scope: !15717)
!15725 = !DILocation(line: 416, column: 2, scope: !15717)
!15726 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2645, file: !2645, line: 440, type: !15727, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15729)
!15727 = !DISubroutineType(types: !15728)
!15728 = !{null, !909, !125}
!15729 = !{!15730, !15731, !15732, !15738}
!15730 = !DILocalVariable(name: "slice", arg: 1, scope: !15726, file: !2645, line: 440, type: !909)
!15731 = !DILocalVariable(name: "prio", arg: 2, scope: !15726, file: !2645, line: 440, type: !125)
!15732 = !DILocalVariable(name: "__i", scope: !15733, file: !2645, line: 442, type: !15734)
!15733 = distinct !DILexicalBlock(scope: !15726, file: !2645, line: 442, column: 2)
!15734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !15735)
!15735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !15736)
!15736 = !{!15737}
!15737 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15735, file: !638, line: 33, baseType: !125, size: 32)
!15738 = !DILocalVariable(name: "__key", scope: !15733, file: !2645, line: 442, type: !15734)
!15739 = !DILocation(line: 0, scope: !15726)
!15740 = !DILocation(line: 0, scope: !15733)
!15741 = !DILocalVariable(name: "l", arg: 1, scope: !15742, file: !638, line: 136, type: !15745)
!15742 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !15743, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15746)
!15743 = !DISubroutineType(types: !15744)
!15744 = !{!15734, !15745}
!15745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!15746 = !{!15741, !15747}
!15747 = !DILocalVariable(name: "k", scope: !15742, file: !638, line: 139, type: !15734)
!15748 = !DILocation(line: 0, scope: !15742, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 442, column: 2, scope: !15733)
!15750 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !15755)
!15751 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15752)
!15752 = !{!15753, !15754}
!15753 = !DILocalVariable(name: "key", scope: !15751, file: !6838, line: 44, type: !32)
!15754 = !DILocalVariable(name: "tmp", scope: !15751, file: !6838, line: 53, type: !32)
!15755 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !15749)
!15756 = !{i64 2267917}
!15757 = !DILocation(line: 0, scope: !15751, inlinedAt: !15755)
!15758 = !DILocation(line: 443, column: 29, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15760, file: !2645, line: 442, column: 26)
!15760 = distinct !DILexicalBlock(scope: !15733, file: !2645, line: 442, column: 2)
!15761 = !DILocation(line: 444, column: 17, scope: !15759)
!15762 = !DILocation(line: 445, column: 51, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15759, file: !2645, line: 445, column: 7)
!15764 = !DILocation(line: 445, column: 7, scope: !15759)
!15765 = !DILocation(line: 0, scope: !15759)
!15766 = !DILocation(line: 451, column: 18, scope: !15759)
!15767 = !DILocation(line: 452, column: 3, scope: !15759)
!15768 = !DILocalVariable(name: "key", arg: 2, scope: !15769, file: !638, line: 190, type: !15734)
!15769 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !15770, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15772)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{null, !15745, !15734}
!15772 = !{!15773, !15768}
!15773 = !DILocalVariable(name: "l", arg: 1, scope: !15769, file: !638, line: 189, type: !15745)
!15774 = !DILocation(line: 0, scope: !15769, inlinedAt: !15775)
!15775 = distinct !DILocation(line: 442, column: 2, scope: !15760)
!15776 = !DILocalVariable(name: "key", arg: 1, scope: !15777, file: !6838, line: 84, type: !32)
!15777 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15778)
!15778 = !{!15776}
!15779 = !DILocation(line: 0, scope: !15777, inlinedAt: !15780)
!15780 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !15775)
!15781 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !15780)
!15782 = !{i64 2268734}
!15783 = !DILocation(line: 454, column: 1, scope: !15726)
!15784 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15575, file: !15575, line: 389, type: !9551, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15785)
!15785 = !{!15786}
!15786 = !DILocalVariable(name: "t", arg: 1, scope: !15784, file: !15575, line: 389, type: !208)
!15787 = !DILocation(line: 0, scope: !15784)
!15788 = !DILocalVariable(name: "t", arg: 1, scope: !15789, file: !15575, line: 102, type: !1803)
!15789 = distinct !DISubprogram(name: "z_tmcvt", scope: !15575, file: !15575, line: 102, type: !15583, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15790)
!15790 = !{!15788, !15791, !15792, !15793, !15794, !15795, !15796, !15797, !15798, !15799, !15800}
!15791 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15789, file: !15575, line: 102, type: !208)
!15792 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15789, file: !15575, line: 103, type: !208)
!15793 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15789, file: !15575, line: 103, type: !153)
!15794 = !DILocalVariable(name: "result32", arg: 5, scope: !15789, file: !15575, line: 104, type: !153)
!15795 = !DILocalVariable(name: "round_up", arg: 6, scope: !15789, file: !15575, line: 104, type: !153)
!15796 = !DILocalVariable(name: "round_off", arg: 7, scope: !15789, file: !15575, line: 105, type: !153)
!15797 = !DILocalVariable(name: "mul_ratio", scope: !15789, file: !15575, line: 107, type: !153)
!15798 = !DILocalVariable(name: "div_ratio", scope: !15789, file: !15575, line: 109, type: !153)
!15799 = !DILocalVariable(name: "off", scope: !15789, file: !15575, line: 116, type: !1803)
!15800 = !DILocalVariable(name: "rdivisor", scope: !15801, file: !15575, line: 119, type: !208)
!15801 = distinct !DILexicalBlock(scope: !15802, file: !15575, line: 118, column: 18)
!15802 = distinct !DILexicalBlock(scope: !15789, file: !15575, line: 118, column: 6)
!15803 = !DILocation(line: 0, scope: !15789, inlinedAt: !15804)
!15804 = distinct !DILocation(line: 392, column: 9, scope: !15784)
!15805 = !DILocation(line: 143, column: 25, scope: !15806, inlinedAt: !15804)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !15575, line: 142, column: 17)
!15807 = distinct !DILexicalBlock(scope: !15808, file: !15575, line: 142, column: 7)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !15575, line: 141, column: 24)
!15809 = distinct !DILexicalBlock(scope: !15810, file: !15575, line: 141, column: 13)
!15810 = distinct !DILexicalBlock(scope: !15789, file: !15575, line: 134, column: 6)
!15811 = !DILocation(line: 392, column: 2, scope: !15784)
!15812 = distinct !DISubprogram(name: "z_time_slice", scope: !2645, file: !2645, line: 502, type: !10187, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15813)
!15813 = !{!15814, !15815}
!15814 = !DILocalVariable(name: "ticks", arg: 1, scope: !15812, file: !2645, line: 502, type: !125)
!15815 = !DILocalVariable(name: "key", scope: !15812, file: !2645, line: 511, type: !15734)
!15816 = !DILocation(line: 0, scope: !15812)
!15817 = !DILocation(line: 0, scope: !15742, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 511, column: 25, scope: !15812)
!15819 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !15818)
!15821 = !DILocation(line: 0, scope: !15751, inlinedAt: !15820)
!15822 = !DILocation(line: 514, column: 6, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15812, file: !2645, line: 514, column: 6)
!15824 = !DILocation(line: 514, column: 25, scope: !15823)
!15825 = !DILocation(line: 514, column: 22, scope: !15823)
!15826 = !DILocation(line: 514, column: 6, scope: !15812)
!15827 = !DILocation(line: 515, column: 3, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15823, file: !2645, line: 514, column: 35)
!15829 = !DILocation(line: 0, scope: !15769, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 516, column: 3, scope: !15828)
!15831 = !DILocation(line: 0, scope: !15777, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !15830)
!15833 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !15832)
!15834 = !DILocation(line: 517, column: 3, scope: !15828)
!15835 = !DILocation(line: 519, column: 18, scope: !15812)
!15836 = !DILocation(line: 522, column: 6, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15812, file: !2645, line: 522, column: 6)
!15838 = !DILocation(line: 522, column: 27, scope: !15837)
!15839 = !DILocation(line: 522, column: 30, scope: !15837)
!15840 = !DILocation(line: 522, column: 6, scope: !15812)
!15841 = !DILocation(line: 523, column: 30, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !2645, line: 523, column: 7)
!15843 = distinct !DILexicalBlock(scope: !15837, file: !2645, line: 522, column: 51)
!15844 = !DILocation(line: 523, column: 13, scope: !15842)
!15845 = !DILocation(line: 523, column: 7, scope: !15843)
!15846 = !DILocation(line: 530, column: 10, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15842, file: !2645, line: 523, column: 43)
!15848 = !DILocation(line: 531, column: 3, scope: !15847)
!15849 = !DILocation(line: 532, column: 30, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15842, file: !2645, line: 531, column: 10)
!15851 = !DILocation(line: 535, column: 29, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15837, file: !2645, line: 534, column: 9)
!15853 = !DILocation(line: 0, scope: !15769, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 537, column: 2, scope: !15812)
!15855 = !DILocation(line: 0, scope: !15777, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !15854)
!15857 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !15856)
!15858 = !DILocation(line: 538, column: 1, scope: !15812)
!15859 = distinct !DISubprogram(name: "sliceable", scope: !2645, file: !2645, line: 468, type: !15860, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15862)
!15860 = !DISubroutineType(types: !15861)
!15861 = !{!153, !2540}
!15862 = !{!15863, !15864}
!15863 = !DILocalVariable(name: "thread", arg: 1, scope: !15859, file: !2645, line: 468, type: !2540)
!15864 = !DILocalVariable(name: "ret", scope: !15859, file: !2645, line: 470, type: !153)
!15865 = !DILocation(line: 0, scope: !15859)
!15866 = !DILocation(line: 470, column: 13, scope: !15859)
!15867 = !DILocation(line: 471, column: 3, scope: !15859)
!15868 = !DILocation(line: 471, column: 7, scope: !15859)
!15869 = !DILocation(line: 472, column: 3, scope: !15859)
!15870 = !DILocation(line: 472, column: 37, scope: !15859)
!15871 = !DILocation(line: 472, column: 24, scope: !15859)
!15872 = !DILocation(line: 472, column: 43, scope: !15859)
!15873 = !DILocation(line: 472, column: 7, scope: !15859)
!15874 = !DILocation(line: 473, column: 3, scope: !15859)
!15875 = !DILocation(line: 473, column: 7, scope: !15859)
!15876 = !DILocation(line: 473, column: 6, scope: !15859)
!15877 = !DILocation(line: 479, column: 2, scope: !15859)
!15878 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2645, file: !2645, line: 482, type: !15879, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15881)
!15879 = !DISubroutineType(types: !15880)
!15880 = !{!15734, !15734}
!15881 = !{!15882, !15883}
!15882 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15878, file: !2645, line: 482, type: !15734)
!15883 = !DILocalVariable(name: "curr", scope: !15878, file: !2645, line: 484, type: !2540)
!15884 = !DILocation(line: 0, scope: !15878)
!15885 = !DILocation(line: 484, column: 26, scope: !15878)
!15886 = !DILocation(line: 493, column: 7, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15878, file: !2645, line: 493, column: 6)
!15888 = !DILocation(line: 493, column: 6, scope: !15878)
!15889 = !DILocation(line: 494, column: 3, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15887, file: !2645, line: 493, column: 49)
!15891 = !DILocation(line: 495, column: 2, scope: !15890)
!15892 = !DILocation(line: 496, column: 2, scope: !15878)
!15893 = !DILocation(line: 499, column: 1, scope: !15878)
!15894 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15014, file: !15014, line: 106, type: !15860, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15895)
!15895 = !{!15896, !15897}
!15896 = !DILocalVariable(name: "thread", arg: 1, scope: !15894, file: !15014, line: 106, type: !2540)
!15897 = !DILocalVariable(name: "state", scope: !15894, file: !15014, line: 108, type: !150)
!15898 = !DILocation(line: 0, scope: !15894)
!15899 = !DILocation(line: 108, column: 31, scope: !15894)
!15900 = !DILocation(line: 110, column: 16, scope: !15894)
!15901 = !DILocation(line: 111, column: 41, scope: !15894)
!15902 = !DILocation(line: 110, column: 2, scope: !15894)
!15903 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2645, file: !2645, line: 393, type: !15700, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15904)
!15904 = !{!15905}
!15905 = !DILocalVariable(name: "thread", arg: 1, scope: !15903, file: !2645, line: 393, type: !2540)
!15906 = !DILocation(line: 0, scope: !15903)
!15907 = !DILocation(line: 395, column: 6, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15903, file: !2645, line: 395, column: 6)
!15909 = !DILocation(line: 395, column: 6, scope: !15903)
!15910 = !DILocalVariable(name: "thread", arg: 1, scope: !15911, file: !2645, line: 264, type: !2540)
!15911 = distinct !DISubprogram(name: "dequeue_thread", scope: !2645, file: !2645, line: 264, type: !15700, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15912)
!15912 = !{!15910}
!15913 = !DILocation(line: 0, scope: !15911, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 396, column: 3, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15908, file: !2645, line: 395, column: 34)
!15916 = !DILocation(line: 266, column: 15, scope: !15911, inlinedAt: !15914)
!15917 = !DILocation(line: 266, column: 28, scope: !15911, inlinedAt: !15914)
!15918 = !DILocalVariable(name: "thread", arg: 1, scope: !15919, file: !2645, line: 232, type: !2540)
!15919 = distinct !DISubprogram(name: "runq_remove", scope: !2645, file: !2645, line: 232, type: !15700, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15920)
!15920 = !{!15918}
!15921 = !DILocation(line: 0, scope: !15919, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 268, column: 3, scope: !15923, inlinedAt: !15914)
!15923 = distinct !DILexicalBlock(scope: !15924, file: !2645, line: 267, column: 35)
!15924 = distinct !DILexicalBlock(scope: !15911, file: !2645, line: 267, column: 6)
!15925 = !DILocation(line: 234, column: 2, scope: !15919, inlinedAt: !15922)
!15926 = !DILocation(line: 397, column: 2, scope: !15915)
!15927 = !DILocalVariable(name: "thread", arg: 1, scope: !15928, file: !2645, line: 250, type: !2540)
!15928 = distinct !DISubprogram(name: "queue_thread", scope: !2645, file: !2645, line: 250, type: !15700, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15929)
!15929 = !{!15927}
!15930 = !DILocation(line: 0, scope: !15928, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 398, column: 2, scope: !15903)
!15932 = !DILocation(line: 252, column: 15, scope: !15928, inlinedAt: !15931)
!15933 = !DILocation(line: 252, column: 28, scope: !15928, inlinedAt: !15931)
!15934 = !DILocalVariable(name: "thread", arg: 1, scope: !15935, file: !2645, line: 227, type: !2540)
!15935 = distinct !DISubprogram(name: "runq_add", scope: !2645, file: !2645, line: 227, type: !15700, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15936)
!15936 = !{!15934}
!15937 = !DILocation(line: 0, scope: !15935, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 254, column: 3, scope: !15939, inlinedAt: !15931)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2645, line: 253, column: 35)
!15940 = distinct !DILexicalBlock(scope: !15928, file: !2645, line: 253, column: 6)
!15941 = !DILocalVariable(name: "pq", arg: 1, scope: !15942, file: !2645, line: 181, type: !15945)
!15942 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2645, file: !2645, line: 181, type: !15943, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15946)
!15943 = !DISubroutineType(types: !15944)
!15944 = !{null, !15945, !2540}
!15945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!15946 = !{!15941, !15947, !15948}
!15947 = !DILocalVariable(name: "thread", arg: 2, scope: !15942, file: !2645, line: 182, type: !2540)
!15948 = !DILocalVariable(name: "t", scope: !15942, file: !2645, line: 184, type: !2540)
!15949 = !DILocation(line: 0, scope: !15942, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 229, column: 2, scope: !15935, inlinedAt: !15938)
!15951 = !DILocation(line: 188, column: 2, scope: !15952, inlinedAt: !15950)
!15952 = distinct !DILexicalBlock(scope: !15942, file: !2645, line: 188, column: 2)
!15953 = !DILocation(line: 188, column: 2, scope: !15954, inlinedAt: !15950)
!15954 = distinct !DILexicalBlock(scope: !15952, file: !2645, line: 188, column: 2)
!15955 = !DILocation(line: 0, scope: !15952, inlinedAt: !15950)
!15956 = !DILocation(line: 189, column: 7, scope: !15957, inlinedAt: !15950)
!15957 = distinct !DILexicalBlock(scope: !15958, file: !2645, line: 189, column: 7)
!15958 = distinct !DILexicalBlock(scope: !15954, file: !2645, line: 188, column: 56)
!15959 = !DILocation(line: 189, column: 35, scope: !15957, inlinedAt: !15950)
!15960 = !DILocation(line: 189, column: 7, scope: !15958, inlinedAt: !15950)
!15961 = !DILocation(line: 191, column: 21, scope: !15962, inlinedAt: !15950)
!15962 = distinct !DILexicalBlock(scope: !15957, file: !2645, line: 189, column: 40)
!15963 = !DILocation(line: 190, column: 4, scope: !15962, inlinedAt: !15950)
!15964 = !DILocation(line: 192, column: 4, scope: !15962, inlinedAt: !15950)
!15965 = distinct !{!15965, !15951, !15966}
!15966 = !DILocation(line: 194, column: 2, scope: !15952, inlinedAt: !15950)
!15967 = !DILocation(line: 196, column: 37, scope: !15942, inlinedAt: !15950)
!15968 = !DILocation(line: 196, column: 2, scope: !15942, inlinedAt: !15950)
!15969 = !DILocation(line: 197, column: 1, scope: !15942, inlinedAt: !15950)
!15970 = !DILocation(line: 399, column: 25, scope: !15903)
!15971 = !DILocation(line: 399, column: 22, scope: !15903)
!15972 = !DILocation(line: 399, column: 2, scope: !15903)
!15973 = !DILocation(line: 400, column: 1, scope: !15903)
!15974 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15014, file: !15014, line: 136, type: !15860, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15975)
!15975 = !{!15976}
!15976 = !DILocalVariable(name: "thread", arg: 1, scope: !15974, file: !15014, line: 136, type: !2540)
!15977 = !DILocation(line: 0, scope: !15974)
!15978 = !DILocation(line: 138, column: 9, scope: !15974)
!15979 = !DILocation(line: 138, column: 2, scope: !15974)
!15980 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2645, file: !2645, line: 1137, type: !15943, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15981)
!15981 = !{!15982, !15983}
!15982 = !DILocalVariable(name: "pq", arg: 1, scope: !15980, file: !2645, line: 1137, type: !15945)
!15983 = !DILocalVariable(name: "thread", arg: 2, scope: !15980, file: !2645, line: 1137, type: !2540)
!15984 = !DILocation(line: 0, scope: !15980)
!15985 = !DILocation(line: 1141, column: 33, scope: !15980)
!15986 = !DILocation(line: 1141, column: 2, scope: !15980)
!15987 = !DILocation(line: 1142, column: 1, scope: !15980)
!15988 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !15989, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15991)
!15989 = !DISubroutineType(types: !15990)
!15990 = !{!2641, !15945}
!15991 = !{!15992}
!15992 = !DILocalVariable(name: "list", arg: 1, scope: !15988, file: !541, line: 294, type: !15945)
!15993 = !DILocation(line: 0, scope: !15988)
!15994 = !DILocation(line: 296, column: 9, scope: !15988)
!15995 = !DILocation(line: 296, column: 49, scope: !15988)
!15996 = !DILocation(line: 296, column: 2, scope: !15988)
!15997 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !15998, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16000)
!15998 = !DISubroutineType(types: !15999)
!15999 = !{null, !2641, !2641}
!16000 = !{!16001, !16002, !16003}
!16001 = !DILocalVariable(name: "successor", arg: 1, scope: !15997, file: !541, line: 443, type: !2641)
!16002 = !DILocalVariable(name: "node", arg: 2, scope: !15997, file: !541, line: 443, type: !2641)
!16003 = !DILocalVariable(name: "prev", scope: !15997, file: !541, line: 445, type: !16004)
!16004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2641)
!16005 = !DILocation(line: 0, scope: !15997)
!16006 = !DILocation(line: 445, column: 39, scope: !15997)
!16007 = !DILocation(line: 447, column: 8, scope: !15997)
!16008 = !DILocation(line: 447, column: 13, scope: !15997)
!16009 = !DILocation(line: 448, column: 8, scope: !15997)
!16010 = !DILocation(line: 448, column: 13, scope: !15997)
!16011 = !DILocation(line: 449, column: 8, scope: !15997)
!16012 = !DILocation(line: 449, column: 13, scope: !15997)
!16013 = !DILocation(line: 450, column: 18, scope: !15997)
!16014 = !DILocation(line: 451, column: 1, scope: !15997)
!16015 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !16016, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16018)
!16016 = !DISubroutineType(types: !16017)
!16017 = !{!2641, !15945, !2641}
!16018 = !{!16019, !16020}
!16019 = !DILocalVariable(name: "list", arg: 1, scope: !16015, file: !541, line: 341, type: !15945)
!16020 = !DILocalVariable(name: "node", arg: 2, scope: !16015, file: !541, line: 342, type: !2641)
!16021 = !DILocation(line: 0, scope: !16015)
!16022 = !DILocation(line: 344, column: 15, scope: !16015)
!16023 = !DILocation(line: 344, column: 9, scope: !16015)
!16024 = !DILocation(line: 344, column: 26, scope: !16015)
!16025 = !DILocation(line: 344, column: 2, scope: !16015)
!16026 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !16027, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16029)
!16027 = !DISubroutineType(types: !16028)
!16028 = !{null, !15945, !2641}
!16029 = !{!16030, !16031, !16032}
!16030 = !DILocalVariable(name: "list", arg: 1, scope: !16026, file: !541, line: 404, type: !15945)
!16031 = !DILocalVariable(name: "node", arg: 2, scope: !16026, file: !541, line: 404, type: !2641)
!16032 = !DILocalVariable(name: "tail", scope: !16026, file: !541, line: 406, type: !16004)
!16033 = !DILocation(line: 0, scope: !16026)
!16034 = !DILocation(line: 406, column: 34, scope: !16026)
!16035 = !DILocation(line: 408, column: 8, scope: !16026)
!16036 = !DILocation(line: 408, column: 13, scope: !16026)
!16037 = !DILocation(line: 409, column: 8, scope: !16026)
!16038 = !DILocation(line: 409, column: 13, scope: !16026)
!16039 = !DILocation(line: 411, column: 8, scope: !16026)
!16040 = !DILocation(line: 411, column: 13, scope: !16026)
!16041 = !DILocation(line: 412, column: 13, scope: !16026)
!16042 = !DILocation(line: 413, column: 1, scope: !16026)
!16043 = distinct !DISubprogram(name: "update_cache", scope: !2645, file: !2645, line: 559, type: !10187, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16044)
!16044 = !{!16045, !16046}
!16045 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16043, file: !2645, line: 559, type: !125)
!16046 = !DILocalVariable(name: "thread", scope: !16043, file: !2645, line: 562, type: !2540)
!16047 = !DILocation(line: 0, scope: !16043)
!16048 = !DILocation(line: 239, column: 9, scope: !16049, inlinedAt: !16052)
!16049 = distinct !DISubprogram(name: "runq_best", scope: !2645, file: !2645, line: 237, type: !16050, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!16050 = !DISubroutineType(types: !16051)
!16051 = !{!2540}
!16052 = distinct !DILocation(line: 314, column: 28, scope: !16053, inlinedAt: !16056)
!16053 = distinct !DISubprogram(name: "next_up", scope: !2645, file: !2645, line: 312, type: !16050, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16054)
!16054 = !{!16055}
!16055 = !DILocalVariable(name: "thread", scope: !16053, file: !2645, line: 314, type: !2540)
!16056 = distinct !DILocation(line: 562, column: 28, scope: !16043)
!16057 = !DILocation(line: 0, scope: !16053, inlinedAt: !16056)
!16058 = !DILocation(line: 340, column: 17, scope: !16053, inlinedAt: !16056)
!16059 = !DILocation(line: 340, column: 9, scope: !16053, inlinedAt: !16056)
!16060 = !DILocalVariable(name: "thread", arg: 1, scope: !16061, file: !2645, line: 127, type: !2540)
!16061 = distinct !DISubprogram(name: "should_preempt", scope: !2645, file: !2645, line: 127, type: !16062, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16064)
!16062 = !DISubroutineType(types: !16063)
!16063 = !{!153, !2540, !125}
!16064 = !{!16060, !16065}
!16065 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16061, file: !2645, line: 128, type: !125)
!16066 = !DILocation(line: 0, scope: !16061, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 564, column: 6, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16043, file: !2645, line: 564, column: 6)
!16069 = !DILocation(line: 133, column: 17, scope: !16070, inlinedAt: !16067)
!16070 = distinct !DILexicalBlock(scope: !16061, file: !2645, line: 133, column: 6)
!16071 = !DILocation(line: 0, scope: !16068)
!16072 = !DILocation(line: 133, column: 6, scope: !16061, inlinedAt: !16067)
!16073 = !DILocation(line: 140, column: 6, scope: !16074, inlinedAt: !16067)
!16074 = distinct !DILexicalBlock(scope: !16061, file: !2645, line: 140, column: 6)
!16075 = !DILocation(line: 140, column: 6, scope: !16061, inlinedAt: !16067)
!16076 = !DILocation(line: 150, column: 9, scope: !16077, inlinedAt: !16067)
!16077 = distinct !DILexicalBlock(scope: !16061, file: !2645, line: 149, column: 6)
!16078 = !DILocation(line: 149, column: 6, scope: !16061, inlinedAt: !16067)
!16079 = !DILocation(line: 157, column: 6, scope: !16080, inlinedAt: !16067)
!16080 = distinct !DILexicalBlock(scope: !16061, file: !2645, line: 157, column: 6)
!16081 = !DILocation(line: 564, column: 6, scope: !16043)
!16082 = !DILocation(line: 566, column: 14, scope: !16083)
!16083 = distinct !DILexicalBlock(scope: !16084, file: !2645, line: 566, column: 7)
!16084 = distinct !DILexicalBlock(scope: !16068, file: !2645, line: 564, column: 42)
!16085 = !DILocation(line: 566, column: 7, scope: !16084)
!16086 = !DILocation(line: 567, column: 4, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16083, file: !2645, line: 566, column: 27)
!16088 = !DILocation(line: 568, column: 3, scope: !16087)
!16089 = !DILocation(line: 585, column: 1, scope: !16043)
!16090 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2645, file: !2645, line: 1144, type: !16091, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16093)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{!2540, !15945}
!16093 = !{!16094, !16095, !16096}
!16094 = !DILocalVariable(name: "pq", arg: 1, scope: !16090, file: !2645, line: 1144, type: !15945)
!16095 = !DILocalVariable(name: "thread", scope: !16090, file: !2645, line: 1146, type: !2540)
!16096 = !DILocalVariable(name: "n", scope: !16090, file: !2645, line: 1147, type: !2641)
!16097 = !DILocation(line: 0, scope: !16090)
!16098 = !DILocation(line: 1147, column: 19, scope: !16090)
!16099 = !DILocation(line: 1152, column: 2, scope: !16090)
!16100 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15014, file: !15014, line: 115, type: !15860, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16101)
!16101 = !{!16102}
!16102 = !DILocalVariable(name: "thread", arg: 1, scope: !16100, file: !15014, line: 115, type: !2540)
!16103 = !DILocation(line: 0, scope: !16100)
!16104 = !DILocation(line: 117, column: 46, scope: !16100)
!16105 = !DILocation(line: 117, column: 10, scope: !16100)
!16106 = !DILocation(line: 117, column: 9, scope: !16100)
!16107 = !DILocation(line: 117, column: 2, scope: !16100)
!16108 = distinct !DISubprogram(name: "is_preempt", scope: !2645, file: !2645, line: 62, type: !15718, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16109)
!16109 = !{!16110}
!16110 = !DILocalVariable(name: "thread", arg: 1, scope: !16108, file: !2645, line: 62, type: !2540)
!16111 = !DILocation(line: 0, scope: !16108)
!16112 = !DILocation(line: 65, column: 22, scope: !16108)
!16113 = !DILocation(line: 65, column: 30, scope: !16108)
!16114 = !DILocation(line: 65, column: 2, scope: !16108)
!16115 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15408, file: !15408, line: 35, type: !16116, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16120)
!16116 = !DISubroutineType(types: !16117)
!16117 = !{!153, !16118}
!16118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16119, size: 32)
!16119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2591)
!16120 = !{!16121}
!16121 = !DILocalVariable(name: "to", arg: 1, scope: !16115, file: !15408, line: 35, type: !16118)
!16122 = !DILocation(line: 0, scope: !16115)
!16123 = !DILocation(line: 37, column: 35, scope: !16115)
!16124 = !DILocation(line: 37, column: 10, scope: !16115)
!16125 = !DILocation(line: 37, column: 9, scope: !16115)
!16126 = !DILocation(line: 37, column: 2, scope: !16115)
!16127 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !16128, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16132)
!16128 = !DISubroutineType(types: !16129)
!16129 = !{!153, !16130}
!16130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16131, size: 32)
!16131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2550)
!16132 = !{!16133}
!16133 = !DILocalVariable(name: "node", arg: 1, scope: !16127, file: !541, line: 225, type: !16130)
!16134 = !DILocation(line: 0, scope: !16127)
!16135 = !DILocation(line: 227, column: 15, scope: !16127)
!16136 = !DILocation(line: 227, column: 20, scope: !16127)
!16137 = !DILocation(line: 227, column: 2, scope: !16127)
!16138 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !16016, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16139)
!16139 = !{!16140, !16141}
!16140 = !DILocalVariable(name: "list", arg: 1, scope: !16138, file: !541, line: 325, type: !15945)
!16141 = !DILocalVariable(name: "node", arg: 2, scope: !16138, file: !541, line: 326, type: !2641)
!16142 = !DILocation(line: 0, scope: !16138)
!16143 = !DILocation(line: 328, column: 24, scope: !16138)
!16144 = !DILocation(line: 328, column: 15, scope: !16138)
!16145 = !DILocation(line: 328, column: 9, scope: !16138)
!16146 = !DILocation(line: 328, column: 45, scope: !16138)
!16147 = !DILocation(line: 328, column: 2, scope: !16138)
!16148 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !16149, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16151)
!16149 = !DISubroutineType(types: !16150)
!16150 = !{!153, !15945}
!16151 = !{!16152}
!16152 = !DILocalVariable(name: "list", arg: 1, scope: !16148, file: !541, line: 266, type: !15945)
!16153 = !DILocation(line: 0, scope: !16148)
!16154 = !DILocation(line: 268, column: 15, scope: !16148)
!16155 = !DILocation(line: 268, column: 20, scope: !16148)
!16156 = !DILocation(line: 268, column: 2, scope: !16148)
!16157 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !16158, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16160)
!16158 = !DISubroutineType(types: !16159)
!16159 = !{null, !2641}
!16160 = !{!16161, !16162, !16163}
!16161 = !DILocalVariable(name: "node", arg: 1, scope: !16157, file: !541, line: 496, type: !2641)
!16162 = !DILocalVariable(name: "prev", scope: !16157, file: !541, line: 498, type: !16004)
!16163 = !DILocalVariable(name: "next", scope: !16157, file: !541, line: 499, type: !16004)
!16164 = !DILocation(line: 0, scope: !16157)
!16165 = !DILocation(line: 498, column: 34, scope: !16157)
!16166 = !DILocation(line: 499, column: 34, scope: !16157)
!16167 = !DILocation(line: 501, column: 8, scope: !16157)
!16168 = !DILocation(line: 501, column: 13, scope: !16157)
!16169 = !DILocation(line: 502, column: 8, scope: !16157)
!16170 = !DILocation(line: 502, column: 13, scope: !16157)
!16171 = !DILocation(line: 503, column: 2, scope: !16157)
!16172 = !DILocation(line: 504, column: 1, scope: !16157)
!16173 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16158, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16174)
!16174 = !{!16175}
!16175 = !DILocalVariable(name: "node", arg: 1, scope: !16173, file: !541, line: 211, type: !2641)
!16176 = !DILocation(line: 0, scope: !16173)
!16177 = !DILocation(line: 213, column: 8, scope: !16173)
!16178 = !DILocation(line: 213, column: 13, scope: !16173)
!16179 = !DILocation(line: 214, column: 8, scope: !16173)
!16180 = !DILocation(line: 214, column: 13, scope: !16173)
!16181 = !DILocation(line: 215, column: 1, scope: !16173)
!16182 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15014, file: !15014, line: 131, type: !16183, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16185)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{!153, !2540, !208}
!16185 = !{!16186, !16187}
!16186 = !DILocalVariable(name: "thread", arg: 1, scope: !16182, file: !15014, line: 131, type: !2540)
!16187 = !DILocalVariable(name: "state", arg: 2, scope: !16182, file: !15014, line: 131, type: !208)
!16188 = !DILocation(line: 0, scope: !16182)
!16189 = !DILocation(line: 133, column: 23, scope: !16182)
!16190 = !DILocation(line: 133, column: 45, scope: !16182)
!16191 = !DILocation(line: 133, column: 2, scope: !16182)
!16192 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15014, file: !15014, line: 211, type: !16193, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16195)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{!153, !125, !125}
!16195 = !{!16196, !16197}
!16196 = !DILocalVariable(name: "prio", arg: 1, scope: !16192, file: !15014, line: 211, type: !125)
!16197 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16192, file: !15014, line: 211, type: !125)
!16198 = !DILocation(line: 0, scope: !16192)
!16199 = !DILocation(line: 213, column: 9, scope: !16192)
!16200 = !DILocation(line: 213, column: 2, scope: !16192)
!16201 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15014, file: !15014, line: 83, type: !15860, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16202)
!16202 = !{!16203}
!16203 = !DILocalVariable(name: "thread", arg: 1, scope: !16201, file: !15014, line: 83, type: !2540)
!16204 = !DILocation(line: 0, scope: !16201)
!16205 = !DILocation(line: 89, column: 16, scope: !16201)
!16206 = !DILocation(line: 89, column: 2, scope: !16201)
!16207 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15014, file: !15014, line: 206, type: !16193, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16208)
!16208 = !{!16209, !16210}
!16209 = !DILocalVariable(name: "prio1", arg: 1, scope: !16207, file: !15014, line: 206, type: !125)
!16210 = !DILocalVariable(name: "prio2", arg: 2, scope: !16207, file: !15014, line: 206, type: !125)
!16211 = !DILocation(line: 0, scope: !16207)
!16212 = !DILocation(line: 208, column: 15, scope: !16207)
!16213 = !DILocation(line: 208, column: 2, scope: !16207)
!16214 = distinct !DISubprogram(name: "z_ready_thread", scope: !2645, file: !2645, line: 635, type: !15700, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16215)
!16215 = !{!16216, !16217, !16219}
!16216 = !DILocalVariable(name: "thread", arg: 1, scope: !16214, file: !2645, line: 635, type: !2540)
!16217 = !DILocalVariable(name: "__i", scope: !16218, file: !2645, line: 637, type: !15734)
!16218 = distinct !DILexicalBlock(scope: !16214, file: !2645, line: 637, column: 2)
!16219 = !DILocalVariable(name: "__key", scope: !16218, file: !2645, line: 637, type: !15734)
!16220 = !DILocation(line: 0, scope: !16214)
!16221 = !DILocation(line: 0, scope: !16218)
!16222 = !DILocation(line: 0, scope: !15742, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 637, column: 2, scope: !16218)
!16224 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16225)
!16225 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16223)
!16226 = !DILocation(line: 0, scope: !15751, inlinedAt: !16225)
!16227 = !DILocation(line: 639, column: 4, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16229, file: !2645, line: 638, column: 41)
!16229 = distinct !DILexicalBlock(scope: !16230, file: !2645, line: 638, column: 7)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2645, line: 637, column: 26)
!16231 = distinct !DILexicalBlock(scope: !16218, file: !2645, line: 637, column: 2)
!16232 = !DILocation(line: 0, scope: !15769, inlinedAt: !16233)
!16233 = distinct !DILocation(line: 637, column: 2, scope: !16231)
!16234 = !DILocation(line: 0, scope: !15777, inlinedAt: !16235)
!16235 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16233)
!16236 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16235)
!16237 = !DILocation(line: 642, column: 1, scope: !16214)
!16238 = distinct !DISubprogram(name: "ready_thread", scope: !2645, file: !2645, line: 617, type: !15700, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16239)
!16239 = !{!16240}
!16240 = !DILocalVariable(name: "thread", arg: 1, scope: !16238, file: !2645, line: 617, type: !2540)
!16241 = !DILocation(line: 0, scope: !16238)
!16242 = !DILocation(line: 626, column: 7, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16238, file: !2645, line: 626, column: 6)
!16244 = !DILocation(line: 626, column: 34, scope: !16243)
!16245 = !DILocation(line: 626, column: 37, scope: !16243)
!16246 = !DILocation(line: 626, column: 6, scope: !16238)
!16247 = !DILocation(line: 0, scope: !15928, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 629, column: 3, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16243, file: !2645, line: 626, column: 64)
!16250 = !DILocation(line: 252, column: 15, scope: !15928, inlinedAt: !16248)
!16251 = !DILocation(line: 252, column: 28, scope: !15928, inlinedAt: !16248)
!16252 = !DILocation(line: 0, scope: !15935, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 254, column: 3, scope: !15939, inlinedAt: !16248)
!16254 = !DILocation(line: 0, scope: !15942, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 229, column: 2, scope: !15935, inlinedAt: !16253)
!16256 = !DILocation(line: 188, column: 2, scope: !15952, inlinedAt: !16255)
!16257 = !DILocation(line: 188, column: 2, scope: !15954, inlinedAt: !16255)
!16258 = !DILocation(line: 0, scope: !15952, inlinedAt: !16255)
!16259 = !DILocation(line: 189, column: 7, scope: !15957, inlinedAt: !16255)
!16260 = !DILocation(line: 189, column: 35, scope: !15957, inlinedAt: !16255)
!16261 = !DILocation(line: 189, column: 7, scope: !15958, inlinedAt: !16255)
!16262 = !DILocation(line: 191, column: 21, scope: !15962, inlinedAt: !16255)
!16263 = !DILocation(line: 190, column: 4, scope: !15962, inlinedAt: !16255)
!16264 = !DILocation(line: 192, column: 4, scope: !15962, inlinedAt: !16255)
!16265 = distinct !{!16265, !16256, !16266}
!16266 = !DILocation(line: 194, column: 2, scope: !15952, inlinedAt: !16255)
!16267 = !DILocation(line: 196, column: 37, scope: !15942, inlinedAt: !16255)
!16268 = !DILocation(line: 196, column: 2, scope: !15942, inlinedAt: !16255)
!16269 = !DILocation(line: 197, column: 1, scope: !15942, inlinedAt: !16255)
!16270 = !DILocation(line: 630, column: 3, scope: !16249)
!16271 = !DILocation(line: 632, column: 2, scope: !16249)
!16272 = !DILocation(line: 633, column: 1, scope: !16238)
!16273 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15014, file: !15014, line: 120, type: !15860, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16274)
!16274 = !{!16275}
!16275 = !DILocalVariable(name: "thread", arg: 1, scope: !16273, file: !15014, line: 120, type: !2540)
!16276 = !DILocation(line: 0, scope: !16273)
!16277 = !DILocation(line: 122, column: 12, scope: !16273)
!16278 = !DILocation(line: 122, column: 62, scope: !16273)
!16279 = !DILocation(line: 123, column: 4, scope: !16273)
!16280 = !DILocation(line: 122, column: 2, scope: !16273)
!16281 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2645, file: !2645, line: 644, type: !15700, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16282)
!16282 = !{!16283, !16284, !16286}
!16283 = !DILocalVariable(name: "thread", arg: 1, scope: !16281, file: !2645, line: 644, type: !2540)
!16284 = !DILocalVariable(name: "__i", scope: !16285, file: !2645, line: 646, type: !15734)
!16285 = distinct !DILexicalBlock(scope: !16281, file: !2645, line: 646, column: 2)
!16286 = !DILocalVariable(name: "__key", scope: !16285, file: !2645, line: 646, type: !15734)
!16287 = !DILocation(line: 0, scope: !16281)
!16288 = !DILocation(line: 0, scope: !16285)
!16289 = !DILocation(line: 0, scope: !15742, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 646, column: 2, scope: !16285)
!16291 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16290)
!16293 = !DILocation(line: 0, scope: !15751, inlinedAt: !16292)
!16294 = !DILocation(line: 647, column: 3, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !2645, line: 646, column: 26)
!16296 = distinct !DILexicalBlock(scope: !16285, file: !2645, line: 646, column: 2)
!16297 = !DILocation(line: 0, scope: !15769, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 646, column: 2, scope: !16296)
!16299 = !DILocation(line: 0, scope: !15777, inlinedAt: !16300)
!16300 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16298)
!16301 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16300)
!16302 = !DILocation(line: 649, column: 1, scope: !16281)
!16303 = distinct !DISubprogram(name: "z_sched_start", scope: !2645, file: !2645, line: 651, type: !15700, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16304)
!16304 = !{!16305, !16306}
!16305 = !DILocalVariable(name: "thread", arg: 1, scope: !16303, file: !2645, line: 651, type: !2540)
!16306 = !DILocalVariable(name: "key", scope: !16303, file: !2645, line: 653, type: !15734)
!16307 = !DILocation(line: 0, scope: !16303)
!16308 = !DILocation(line: 0, scope: !15742, inlinedAt: !16309)
!16309 = distinct !DILocation(line: 653, column: 25, scope: !16303)
!16310 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16311)
!16311 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16309)
!16312 = !DILocation(line: 0, scope: !15751, inlinedAt: !16311)
!16313 = !DILocation(line: 655, column: 6, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16303, file: !2645, line: 655, column: 6)
!16315 = !DILocation(line: 655, column: 6, scope: !16303)
!16316 = !DILocation(line: 0, scope: !15769, inlinedAt: !16317)
!16317 = distinct !DILocation(line: 656, column: 3, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16314, file: !2645, line: 655, column: 36)
!16319 = !DILocation(line: 0, scope: !15777, inlinedAt: !16320)
!16320 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16317)
!16321 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16320)
!16322 = !DILocation(line: 657, column: 3, scope: !16318)
!16323 = !DILocation(line: 660, column: 2, scope: !16303)
!16324 = !DILocation(line: 661, column: 2, scope: !16303)
!16325 = !DILocation(line: 662, column: 2, scope: !16303)
!16326 = !DILocation(line: 663, column: 1, scope: !16303)
!16327 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15014, file: !15014, line: 126, type: !15860, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16328)
!16328 = !{!16329}
!16329 = !DILocalVariable(name: "thread", arg: 1, scope: !16327, file: !15014, line: 126, type: !2540)
!16330 = !DILocation(line: 0, scope: !16327)
!16331 = !DILocation(line: 128, column: 23, scope: !16327)
!16332 = !DILocation(line: 128, column: 36, scope: !16327)
!16333 = !DILocation(line: 128, column: 56, scope: !16327)
!16334 = !DILocation(line: 128, column: 2, scope: !16327)
!16335 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15014, file: !15014, line: 155, type: !15700, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16336)
!16336 = !{!16337}
!16337 = !DILocalVariable(name: "thread", arg: 1, scope: !16335, file: !15014, line: 155, type: !2540)
!16338 = !DILocation(line: 0, scope: !16335)
!16339 = !DILocation(line: 157, column: 15, scope: !16335)
!16340 = !DILocation(line: 157, column: 28, scope: !16335)
!16341 = !DILocation(line: 158, column: 1, scope: !16335)
!16342 = distinct !DISubprogram(name: "z_reschedule", scope: !2645, file: !2645, line: 967, type: !15770, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16343)
!16343 = !{!16344, !16345}
!16344 = !DILocalVariable(name: "lock", arg: 1, scope: !16342, file: !2645, line: 967, type: !15745)
!16345 = !DILocalVariable(name: "key", arg: 2, scope: !16342, file: !2645, line: 967, type: !15734)
!16346 = !DILocation(line: 0, scope: !16342)
!16347 = !DILocation(line: 969, column: 6, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16342, file: !2645, line: 969, column: 6)
!16349 = !DILocation(line: 969, column: 23, scope: !16348)
!16350 = !DILocation(line: 969, column: 26, scope: !16348)
!16351 = !DILocation(line: 969, column: 6, scope: !16342)
!16352 = !DILocalVariable(name: "key", arg: 2, scope: !16353, file: !15118, line: 193, type: !15734)
!16353 = distinct !DISubprogram(name: "z_swap", scope: !15118, file: !15118, line: 193, type: !16354, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16356)
!16354 = !DISubroutineType(types: !16355)
!16355 = !{!125, !15745, !15734}
!16356 = !{!16357, !16352}
!16357 = !DILocalVariable(name: "lock", arg: 1, scope: !16353, file: !15118, line: 193, type: !15745)
!16358 = !DILocation(line: 0, scope: !16353, inlinedAt: !16359)
!16359 = distinct !DILocation(line: 970, column: 3, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16348, file: !2645, line: 969, column: 39)
!16361 = !DILocation(line: 196, column: 9, scope: !16353, inlinedAt: !16359)
!16362 = !DILocation(line: 971, column: 2, scope: !16360)
!16363 = !DILocation(line: 0, scope: !15769, inlinedAt: !16364)
!16364 = distinct !DILocation(line: 972, column: 3, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16348, file: !2645, line: 971, column: 9)
!16366 = !DILocation(line: 0, scope: !15777, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16364)
!16368 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16367)
!16369 = !DILocation(line: 975, column: 1, scope: !16342)
!16370 = distinct !DISubprogram(name: "resched", scope: !2645, file: !2645, line: 940, type: !16371, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16373)
!16371 = !DISubroutineType(types: !16372)
!16372 = !{!153, !208}
!16373 = !{!16374}
!16374 = !DILocalVariable(name: "key", arg: 1, scope: !16370, file: !2645, line: 940, type: !208)
!16375 = !DILocation(line: 0, scope: !16370)
!16376 = !DILocalVariable(name: "key", arg: 1, scope: !16377, file: !6838, line: 112, type: !32)
!16377 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6838, file: !6838, line: 112, type: !16378, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16380)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{!153, !32}
!16380 = !{!16376}
!16381 = !DILocation(line: 0, scope: !16377, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 946, column: 9, scope: !16370)
!16383 = !DILocation(line: 115, column: 13, scope: !16377, inlinedAt: !16382)
!16384 = !DILocation(line: 946, column: 32, scope: !16370)
!16385 = !DILocation(line: 1031, column: 3, scope: !16386, inlinedAt: !16389)
!16386 = distinct !DISubprogram(name: "__get_IPSR", scope: !8305, file: !8305, line: 1027, type: !8386, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16387)
!16387 = !{!16388}
!16388 = !DILocalVariable(name: "result", scope: !16386, file: !8305, line: 1029, type: !208)
!16389 = distinct !DILocation(line: 48, column: 10, scope: !16390, inlinedAt: !16391)
!16390 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9323, file: !9323, line: 46, type: !9324, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!16391 = distinct !DILocation(line: 946, column: 36, scope: !16370)
!16392 = !{i64 3585530}
!16393 = !DILocation(line: 0, scope: !16386, inlinedAt: !16389)
!16394 = !DILocation(line: 48, column: 9, scope: !16390, inlinedAt: !16391)
!16395 = !DILocation(line: 946, column: 2, scope: !16370)
!16396 = distinct !DISubprogram(name: "need_swap", scope: !2645, file: !2645, line: 953, type: !9324, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16397)
!16397 = !{!16398}
!16398 = !DILocalVariable(name: "new_thread", scope: !16396, file: !2645, line: 959, type: !2540)
!16399 = !DILocation(line: 962, column: 31, scope: !16396)
!16400 = !DILocation(line: 0, scope: !16396)
!16401 = !DILocation(line: 963, column: 23, scope: !16396)
!16402 = !DILocation(line: 963, column: 20, scope: !16396)
!16403 = !DILocation(line: 963, column: 2, scope: !16396)
!16404 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15118, file: !15118, line: 181, type: !8315, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16405)
!16405 = !{!16406, !16407}
!16406 = !DILocalVariable(name: "key", arg: 1, scope: !16404, file: !15118, line: 181, type: !32)
!16407 = !DILocalVariable(name: "ret", scope: !16404, file: !15118, line: 183, type: !125)
!16408 = !DILocation(line: 0, scope: !16404)
!16409 = !DILocation(line: 185, column: 8, scope: !16404)
!16410 = !DILocation(line: 186, column: 2, scope: !16404)
!16411 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2645, file: !2645, line: 665, type: !15700, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16412)
!16412 = !{!16413, !16414, !16416}
!16413 = !DILocalVariable(name: "thread", arg: 1, scope: !16411, file: !2645, line: 665, type: !2540)
!16414 = !DILocalVariable(name: "__i", scope: !16415, file: !2645, line: 671, type: !15734)
!16415 = distinct !DILexicalBlock(scope: !16411, file: !2645, line: 671, column: 2)
!16416 = !DILocalVariable(name: "__key", scope: !16415, file: !2645, line: 671, type: !15734)
!16417 = !DILocation(line: 0, scope: !16411)
!16418 = !DILocation(line: 669, column: 8, scope: !16411)
!16419 = !DILocation(line: 0, scope: !16415)
!16420 = !DILocation(line: 0, scope: !15742, inlinedAt: !16421)
!16421 = distinct !DILocation(line: 671, column: 2, scope: !16415)
!16422 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16421)
!16424 = !DILocation(line: 0, scope: !15751, inlinedAt: !16423)
!16425 = !DILocation(line: 672, column: 7, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !2645, line: 672, column: 7)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !2645, line: 671, column: 26)
!16428 = distinct !DILexicalBlock(scope: !16415, file: !2645, line: 671, column: 2)
!16429 = !DILocation(line: 672, column: 7, scope: !16427)
!16430 = !DILocation(line: 0, scope: !15911, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 673, column: 4, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16426, file: !2645, line: 672, column: 35)
!16433 = !DILocation(line: 266, column: 15, scope: !15911, inlinedAt: !16431)
!16434 = !DILocation(line: 266, column: 28, scope: !15911, inlinedAt: !16431)
!16435 = !DILocation(line: 0, scope: !15919, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 268, column: 3, scope: !15923, inlinedAt: !16431)
!16437 = !DILocation(line: 234, column: 2, scope: !15919, inlinedAt: !16436)
!16438 = !DILocation(line: 674, column: 3, scope: !16432)
!16439 = !DILocation(line: 675, column: 3, scope: !16427)
!16440 = !DILocation(line: 676, column: 26, scope: !16427)
!16441 = !DILocation(line: 676, column: 23, scope: !16427)
!16442 = !DILocation(line: 676, column: 3, scope: !16427)
!16443 = !DILocation(line: 0, scope: !15769, inlinedAt: !16444)
!16444 = distinct !DILocation(line: 671, column: 2, scope: !16428)
!16445 = !DILocation(line: 0, scope: !15777, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16444)
!16447 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16446)
!16448 = !DILocation(line: 679, column: 16, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16411, file: !2645, line: 679, column: 6)
!16450 = !DILocation(line: 679, column: 13, scope: !16449)
!16451 = !DILocation(line: 679, column: 6, scope: !16411)
!16452 = !DILocation(line: 680, column: 3, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16449, file: !2645, line: 679, column: 26)
!16454 = !DILocation(line: 681, column: 2, scope: !16453)
!16455 = !DILocation(line: 684, column: 1, scope: !16411)
!16456 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15408, file: !15408, line: 52, type: !15718, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16457)
!16457 = !{!16458}
!16458 = !DILocalVariable(name: "thread", arg: 1, scope: !16456, file: !15408, line: 52, type: !2540)
!16459 = !DILocation(line: 0, scope: !16456)
!16460 = !DILocation(line: 54, column: 39, scope: !16456)
!16461 = !DILocation(line: 54, column: 9, scope: !16456)
!16462 = !DILocation(line: 54, column: 2, scope: !16456)
!16463 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15014, file: !15014, line: 141, type: !15700, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16464)
!16464 = !{!16465}
!16465 = !DILocalVariable(name: "thread", arg: 1, scope: !16463, file: !15014, line: 141, type: !2540)
!16466 = !DILocation(line: 0, scope: !16463)
!16467 = !DILocation(line: 143, column: 15, scope: !16463)
!16468 = !DILocation(line: 143, column: 28, scope: !16463)
!16469 = !DILocation(line: 146, column: 1, scope: !16463)
!16470 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15014, file: !15014, line: 73, type: !3300, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!16471 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 75, column: 30, scope: !16470)
!16473 = !DILocation(line: 0, scope: !15751, inlinedAt: !16472)
!16474 = !DILocation(line: 75, column: 9, scope: !16470)
!16475 = !DILocation(line: 76, column: 1, scope: !16470)
!16476 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2645, file: !2645, line: 977, type: !8396, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16477)
!16477 = !{!16478}
!16478 = !DILocalVariable(name: "key", arg: 1, scope: !16476, file: !2645, line: 977, type: !208)
!16479 = !DILocation(line: 0, scope: !16476)
!16480 = !DILocation(line: 979, column: 6, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16476, file: !2645, line: 979, column: 6)
!16482 = !DILocation(line: 979, column: 6, scope: !16476)
!16483 = !DILocation(line: 980, column: 3, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16481, file: !2645, line: 979, column: 20)
!16485 = !DILocation(line: 981, column: 2, scope: !16484)
!16486 = !DILocation(line: 0, scope: !15777, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 982, column: 3, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16481, file: !2645, line: 981, column: 9)
!16489 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16487)
!16490 = !DILocation(line: 985, column: 1, scope: !16476)
!16491 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2645, file: !2645, line: 695, type: !15700, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16492)
!16492 = !{!16493, !16494}
!16493 = !DILocalVariable(name: "thread", arg: 1, scope: !16491, file: !2645, line: 695, type: !2540)
!16494 = !DILocalVariable(name: "key", scope: !16491, file: !2645, line: 699, type: !15734)
!16495 = !DILocation(line: 0, scope: !16491)
!16496 = !DILocation(line: 0, scope: !15742, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 699, column: 25, scope: !16491)
!16498 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16497)
!16500 = !DILocation(line: 0, scope: !15751, inlinedAt: !16499)
!16501 = !DILocation(line: 702, column: 7, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16491, file: !2645, line: 702, column: 6)
!16503 = !DILocation(line: 702, column: 6, scope: !16491)
!16504 = !DILocation(line: 0, scope: !15769, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 703, column: 3, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16502, file: !2645, line: 702, column: 38)
!16507 = !DILocation(line: 0, scope: !15777, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16505)
!16509 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16508)
!16510 = !DILocation(line: 704, column: 3, scope: !16506)
!16511 = !DILocation(line: 707, column: 2, scope: !16491)
!16512 = !DILocation(line: 708, column: 2, scope: !16491)
!16513 = !DILocation(line: 710, column: 2, scope: !16491)
!16514 = !DILocation(line: 713, column: 1, scope: !16491)
!16515 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15014, file: !15014, line: 96, type: !15860, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16516)
!16516 = !{!16517}
!16517 = !DILocalVariable(name: "thread", arg: 1, scope: !16515, file: !15014, line: 96, type: !2540)
!16518 = !DILocation(line: 0, scope: !16515)
!16519 = !DILocation(line: 98, column: 23, scope: !16515)
!16520 = !DILocation(line: 98, column: 36, scope: !16515)
!16521 = !DILocation(line: 98, column: 57, scope: !16515)
!16522 = !DILocation(line: 98, column: 2, scope: !16515)
!16523 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15014, file: !15014, line: 148, type: !15700, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16524)
!16524 = !{!16525}
!16525 = !DILocalVariable(name: "thread", arg: 1, scope: !16523, file: !15014, line: 148, type: !2540)
!16526 = !DILocation(line: 0, scope: !16523)
!16527 = !DILocation(line: 150, column: 15, scope: !16523)
!16528 = !DILocation(line: 150, column: 28, scope: !16523)
!16529 = !DILocation(line: 153, column: 1, scope: !16523)
!16530 = distinct !DISubprogram(name: "z_pend_thread", scope: !2645, file: !2645, line: 770, type: !16531, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16537)
!16531 = !DISubroutineType(types: !16532)
!16532 = !{null, !2540, !2571, !16533}
!16533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1897, line: 67, baseType: !16534)
!16534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1897, line: 65, size: 64, elements: !16535)
!16535 = !{!16536}
!16536 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16534, file: !1897, line: 66, baseType: !1896, size: 64)
!16537 = !{!16538, !16539, !16540, !16541, !16543}
!16538 = !DILocalVariable(name: "thread", arg: 1, scope: !16530, file: !2645, line: 770, type: !2540)
!16539 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16530, file: !2645, line: 770, type: !2571)
!16540 = !DILocalVariable(name: "timeout", arg: 3, scope: !16530, file: !2645, line: 771, type: !16533)
!16541 = !DILocalVariable(name: "__i", scope: !16542, file: !2645, line: 774, type: !15734)
!16542 = distinct !DILexicalBlock(scope: !16530, file: !2645, line: 774, column: 2)
!16543 = !DILocalVariable(name: "__key", scope: !16542, file: !2645, line: 774, type: !15734)
!16544 = !DILocation(line: 0, scope: !16530)
!16545 = !DILocation(line: 0, scope: !16542)
!16546 = !DILocation(line: 0, scope: !15742, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 774, column: 2, scope: !16542)
!16548 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16549)
!16549 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16547)
!16550 = !DILocation(line: 0, scope: !15751, inlinedAt: !16549)
!16551 = !DILocation(line: 775, column: 3, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16553, file: !2645, line: 774, column: 26)
!16553 = distinct !DILexicalBlock(scope: !16542, file: !2645, line: 774, column: 2)
!16554 = !DILocation(line: 0, scope: !15769, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 774, column: 2, scope: !16553)
!16556 = !DILocation(line: 0, scope: !15777, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16555)
!16558 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16557)
!16559 = !DILocation(line: 777, column: 1, scope: !16530)
!16560 = distinct !DISubprogram(name: "pend_locked", scope: !2645, file: !2645, line: 760, type: !16531, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16561)
!16561 = !{!16562, !16563, !16564}
!16562 = !DILocalVariable(name: "thread", arg: 1, scope: !16560, file: !2645, line: 760, type: !2540)
!16563 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16560, file: !2645, line: 760, type: !2571)
!16564 = !DILocalVariable(name: "timeout", arg: 3, scope: !16560, file: !2645, line: 761, type: !16533)
!16565 = !DILocation(line: 0, scope: !16560)
!16566 = !DILocation(line: 766, column: 2, scope: !16560)
!16567 = !DILocation(line: 767, column: 2, scope: !16560)
!16568 = !DILocation(line: 768, column: 1, scope: !16560)
!16569 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2645, file: !2645, line: 740, type: !16570, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16572)
!16570 = !DISubroutineType(types: !16571)
!16571 = !{null, !2540, !2571}
!16572 = !{!16573, !16574}
!16573 = !DILocalVariable(name: "thread", arg: 1, scope: !16569, file: !2645, line: 740, type: !2540)
!16574 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16569, file: !2645, line: 740, type: !2571)
!16575 = !DILocation(line: 0, scope: !16569)
!16576 = !DILocation(line: 742, column: 2, scope: !16569)
!16577 = !DILocation(line: 743, column: 2, scope: !16569)
!16578 = !DILocation(line: 747, column: 13, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16569, file: !2645, line: 747, column: 6)
!16580 = !DILocation(line: 747, column: 6, scope: !16569)
!16581 = !DILocation(line: 748, column: 16, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16579, file: !2645, line: 747, column: 22)
!16583 = !DILocation(line: 748, column: 26, scope: !16582)
!16584 = !DILocation(line: 749, column: 28, scope: !16582)
!16585 = !DILocation(line: 0, scope: !15942, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 749, column: 3, scope: !16582)
!16587 = !DILocation(line: 188, column: 2, scope: !15952, inlinedAt: !16586)
!16588 = !DILocation(line: 188, column: 2, scope: !15954, inlinedAt: !16586)
!16589 = !DILocation(line: 0, scope: !15952, inlinedAt: !16586)
!16590 = !DILocation(line: 189, column: 7, scope: !15957, inlinedAt: !16586)
!16591 = !DILocation(line: 189, column: 35, scope: !15957, inlinedAt: !16586)
!16592 = !DILocation(line: 189, column: 7, scope: !15958, inlinedAt: !16586)
!16593 = !DILocation(line: 191, column: 21, scope: !15962, inlinedAt: !16586)
!16594 = !DILocation(line: 190, column: 4, scope: !15962, inlinedAt: !16586)
!16595 = !DILocation(line: 192, column: 4, scope: !15962, inlinedAt: !16586)
!16596 = distinct !{!16596, !16587, !16597}
!16597 = !DILocation(line: 194, column: 2, scope: !15952, inlinedAt: !16586)
!16598 = !DILocation(line: 196, column: 37, scope: !15942, inlinedAt: !16586)
!16599 = !DILocation(line: 196, column: 2, scope: !15942, inlinedAt: !16586)
!16600 = !DILocation(line: 197, column: 1, scope: !15942, inlinedAt: !16586)
!16601 = !DILocation(line: 751, column: 1, scope: !16569)
!16602 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2645, file: !2645, line: 753, type: !16603, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16605)
!16603 = !DISubroutineType(types: !16604)
!16604 = !{null, !2540, !16533}
!16605 = !{!16606, !16607}
!16606 = !DILocalVariable(name: "thread", arg: 1, scope: !16602, file: !2645, line: 753, type: !2540)
!16607 = !DILocalVariable(name: "timeout", arg: 2, scope: !16602, file: !2645, line: 753, type: !16533)
!16608 = !DILocation(line: 0, scope: !16602)
!16609 = !DILocation(line: 755, column: 7, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16602, file: !2645, line: 755, column: 6)
!16611 = !DILocation(line: 755, column: 6, scope: !16602)
!16612 = !DILocation(line: 756, column: 3, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16610, file: !2645, line: 755, column: 41)
!16614 = !DILocation(line: 757, column: 2, scope: !16613)
!16615 = !DILocation(line: 758, column: 1, scope: !16602)
!16616 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15408, file: !15408, line: 47, type: !16603, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16617)
!16617 = !{!16618, !16619}
!16618 = !DILocalVariable(name: "thread", arg: 1, scope: !16616, file: !15408, line: 47, type: !2540)
!16619 = !DILocalVariable(name: "ticks", arg: 2, scope: !16616, file: !15408, line: 47, type: !16533)
!16620 = !DILocation(line: 0, scope: !16616)
!16621 = !DILocation(line: 49, column: 30, scope: !16616)
!16622 = !DILocation(line: 49, column: 2, scope: !16616)
!16623 = !DILocation(line: 50, column: 1, scope: !16616)
!16624 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2645, file: !2645, line: 795, type: !2597, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16625)
!16625 = !{!16626, !16627, !16628, !16630, !16631}
!16626 = !DILocalVariable(name: "timeout", arg: 1, scope: !16624, file: !2645, line: 795, type: !2599)
!16627 = !DILocalVariable(name: "thread", scope: !16624, file: !2645, line: 797, type: !2540)
!16628 = !DILocalVariable(name: "__i", scope: !16629, file: !2645, line: 800, type: !15734)
!16629 = distinct !DILexicalBlock(scope: !16624, file: !2645, line: 800, column: 2)
!16630 = !DILocalVariable(name: "__key", scope: !16629, file: !2645, line: 800, type: !15734)
!16631 = !DILocalVariable(name: "killed", scope: !16632, file: !2645, line: 801, type: !153)
!16632 = distinct !DILexicalBlock(scope: !16633, file: !2645, line: 800, column: 26)
!16633 = distinct !DILexicalBlock(scope: !16629, file: !2645, line: 800, column: 2)
!16634 = !DILocation(line: 0, scope: !16624)
!16635 = !DILocation(line: 797, column: 28, scope: !16624)
!16636 = !DILocation(line: 0, scope: !16629)
!16637 = !DILocation(line: 0, scope: !15742, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 800, column: 2, scope: !16629)
!16639 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16638)
!16641 = !DILocation(line: 0, scope: !15751, inlinedAt: !16640)
!16642 = !DILocation(line: 801, column: 27, scope: !16632)
!16643 = !DILocation(line: 801, column: 32, scope: !16632)
!16644 = !DILocation(line: 801, column: 61, scope: !16632)
!16645 = !DILocation(line: 0, scope: !16632)
!16646 = !DILocation(line: 804, column: 7, scope: !16632)
!16647 = !DILocation(line: 805, column: 21, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16649, file: !2645, line: 805, column: 8)
!16649 = distinct !DILexicalBlock(scope: !16650, file: !2645, line: 804, column: 16)
!16650 = distinct !DILexicalBlock(scope: !16632, file: !2645, line: 804, column: 7)
!16651 = !DILocation(line: 805, column: 31, scope: !16648)
!16652 = !DILocation(line: 805, column: 8, scope: !16649)
!16653 = !DILocation(line: 806, column: 5, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16648, file: !2645, line: 805, column: 40)
!16655 = !DILocation(line: 807, column: 4, scope: !16654)
!16656 = !DILocation(line: 808, column: 4, scope: !16649)
!16657 = !DILocation(line: 809, column: 4, scope: !16649)
!16658 = !DILocation(line: 810, column: 4, scope: !16649)
!16659 = !DILocation(line: 811, column: 3, scope: !16649)
!16660 = !DILocation(line: 0, scope: !15769, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 800, column: 2, scope: !16633)
!16662 = !DILocation(line: 0, scope: !15777, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16661)
!16664 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16663)
!16665 = !DILocation(line: 813, column: 1, scope: !16624)
!16666 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2645, file: !2645, line: 779, type: !15700, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16667)
!16667 = !{!16668}
!16668 = !DILocalVariable(name: "thread", arg: 1, scope: !16666, file: !2645, line: 779, type: !2540)
!16669 = !DILocation(line: 0, scope: !16666)
!16670 = !DILocation(line: 781, column: 2, scope: !16666)
!16671 = !DILocation(line: 782, column: 2, scope: !16666)
!16672 = !DILocation(line: 783, column: 15, scope: !16666)
!16673 = !DILocation(line: 783, column: 25, scope: !16666)
!16674 = !DILocation(line: 784, column: 1, scope: !16666)
!16675 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15014, file: !15014, line: 165, type: !15700, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16676)
!16676 = !{!16677}
!16677 = !DILocalVariable(name: "thread", arg: 1, scope: !16675, file: !15014, line: 165, type: !2540)
!16678 = !DILocation(line: 0, scope: !16675)
!16679 = !DILocation(line: 167, column: 15, scope: !16675)
!16680 = !DILocation(line: 167, column: 28, scope: !16675)
!16681 = !DILocation(line: 168, column: 1, scope: !16675)
!16682 = distinct !DISubprogram(name: "unready_thread", scope: !2645, file: !2645, line: 731, type: !15700, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16683)
!16683 = !{!16684}
!16684 = !DILocalVariable(name: "thread", arg: 1, scope: !16682, file: !2645, line: 731, type: !2540)
!16685 = !DILocation(line: 0, scope: !16682)
!16686 = !DILocation(line: 733, column: 6, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16682, file: !2645, line: 733, column: 6)
!16688 = !DILocation(line: 733, column: 6, scope: !16682)
!16689 = !DILocation(line: 0, scope: !15911, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 734, column: 3, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16687, file: !2645, line: 733, column: 34)
!16692 = !DILocation(line: 266, column: 15, scope: !15911, inlinedAt: !16690)
!16693 = !DILocation(line: 266, column: 28, scope: !15911, inlinedAt: !16690)
!16694 = !DILocation(line: 0, scope: !15919, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 268, column: 3, scope: !15923, inlinedAt: !16690)
!16696 = !DILocation(line: 234, column: 2, scope: !15919, inlinedAt: !16695)
!16697 = !DILocation(line: 735, column: 2, scope: !16691)
!16698 = !DILocation(line: 736, column: 25, scope: !16682)
!16699 = !DILocation(line: 736, column: 22, scope: !16682)
!16700 = !DILocation(line: 736, column: 2, scope: !16682)
!16701 = !DILocation(line: 737, column: 1, scope: !16682)
!16702 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15014, file: !15014, line: 160, type: !15700, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16703)
!16703 = !{!16704}
!16704 = !DILocalVariable(name: "thread", arg: 1, scope: !16702, file: !15014, line: 160, type: !2540)
!16705 = !DILocation(line: 0, scope: !16702)
!16706 = !DILocation(line: 162, column: 15, scope: !16702)
!16707 = !DILocation(line: 162, column: 28, scope: !16702)
!16708 = !DILocation(line: 163, column: 1, scope: !16702)
!16709 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2645, file: !2645, line: 786, type: !15700, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16710)
!16710 = !{!16711, !16712, !16714}
!16711 = !DILocalVariable(name: "thread", arg: 1, scope: !16709, file: !2645, line: 786, type: !2540)
!16712 = !DILocalVariable(name: "__i", scope: !16713, file: !2645, line: 788, type: !15734)
!16713 = distinct !DILexicalBlock(scope: !16709, file: !2645, line: 788, column: 2)
!16714 = !DILocalVariable(name: "__key", scope: !16713, file: !2645, line: 788, type: !15734)
!16715 = !DILocation(line: 0, scope: !16709)
!16716 = !DILocation(line: 0, scope: !16713)
!16717 = !DILocation(line: 0, scope: !15742, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 788, column: 2, scope: !16713)
!16719 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16720)
!16720 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16718)
!16721 = !DILocation(line: 0, scope: !15751, inlinedAt: !16720)
!16722 = !DILocation(line: 789, column: 3, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16724, file: !2645, line: 788, column: 26)
!16724 = distinct !DILexicalBlock(scope: !16713, file: !2645, line: 788, column: 2)
!16725 = !DILocation(line: 0, scope: !15769, inlinedAt: !16726)
!16726 = distinct !DILocation(line: 788, column: 2, scope: !16724)
!16727 = !DILocation(line: 0, scope: !15777, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16726)
!16729 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16728)
!16730 = !DILocation(line: 791, column: 1, scope: !16709)
!16731 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2645, file: !2645, line: 816, type: !16732, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16734)
!16732 = !DISubroutineType(types: !16733)
!16733 = !{!125, !208, !2571, !16533}
!16734 = !{!16735, !16736, !16737, !16738, !16739, !16741}
!16735 = !DILocalVariable(name: "key", arg: 1, scope: !16731, file: !2645, line: 816, type: !208)
!16736 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16731, file: !2645, line: 816, type: !2571)
!16737 = !DILocalVariable(name: "timeout", arg: 3, scope: !16731, file: !2645, line: 816, type: !16533)
!16738 = !DILocalVariable(name: "ret", scope: !16731, file: !2645, line: 828, type: !125)
!16739 = !DILocalVariable(name: "__i", scope: !16740, file: !2645, line: 829, type: !15734)
!16740 = distinct !DILexicalBlock(scope: !16731, file: !2645, line: 829, column: 2)
!16741 = !DILocalVariable(name: "__key", scope: !16740, file: !2645, line: 829, type: !15734)
!16742 = !DILocation(line: 0, scope: !16731)
!16743 = !DILocation(line: 823, column: 14, scope: !16731)
!16744 = !DILocation(line: 823, column: 2, scope: !16731)
!16745 = !DILocation(line: 826, column: 20, scope: !16731)
!16746 = !DILocation(line: 826, column: 18, scope: !16731)
!16747 = !DILocation(line: 828, column: 12, scope: !16731)
!16748 = !DILocation(line: 0, scope: !16740)
!16749 = !DILocation(line: 0, scope: !15742, inlinedAt: !16750)
!16750 = distinct !DILocation(line: 829, column: 2, scope: !16740)
!16751 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16752)
!16752 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16750)
!16753 = !DILocation(line: 0, scope: !15751, inlinedAt: !16752)
!16754 = !DILocation(line: 830, column: 7, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16756, file: !2645, line: 830, column: 7)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !2645, line: 829, column: 26)
!16757 = distinct !DILexicalBlock(scope: !16740, file: !2645, line: 829, column: 2)
!16758 = !DILocation(line: 830, column: 26, scope: !16755)
!16759 = !DILocation(line: 830, column: 23, scope: !16755)
!16760 = !DILocation(line: 830, column: 7, scope: !16756)
!16761 = !DILocation(line: 831, column: 20, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16755, file: !2645, line: 830, column: 36)
!16763 = !DILocation(line: 832, column: 3, scope: !16762)
!16764 = !DILocation(line: 0, scope: !15769, inlinedAt: !16765)
!16765 = distinct !DILocation(line: 829, column: 2, scope: !16757)
!16766 = !DILocation(line: 0, scope: !15777, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16765)
!16768 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16767)
!16769 = !DILocation(line: 834, column: 2, scope: !16731)
!16770 = distinct !DISubprogram(name: "z_pend_curr", scope: !2645, file: !2645, line: 840, type: !16771, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16773)
!16771 = !DISubroutineType(types: !16772)
!16772 = !{!125, !15745, !15734, !2571, !16533}
!16773 = !{!16774, !16775, !16776, !16777}
!16774 = !DILocalVariable(name: "lock", arg: 1, scope: !16770, file: !2645, line: 840, type: !15745)
!16775 = !DILocalVariable(name: "key", arg: 2, scope: !16770, file: !2645, line: 840, type: !15734)
!16776 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16770, file: !2645, line: 841, type: !2571)
!16777 = !DILocalVariable(name: "timeout", arg: 4, scope: !16770, file: !2645, line: 841, type: !16533)
!16778 = !DILocation(line: 0, scope: !16770)
!16779 = !DILocation(line: 844, column: 20, scope: !16770)
!16780 = !DILocation(line: 844, column: 18, scope: !16770)
!16781 = !DILocation(line: 0, scope: !15742, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 856, column: 9, scope: !16770)
!16783 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16784)
!16784 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16782)
!16785 = !DILocation(line: 0, scope: !15751, inlinedAt: !16784)
!16786 = !DILocation(line: 857, column: 14, scope: !16770)
!16787 = !DILocation(line: 857, column: 2, scope: !16770)
!16788 = !DILocation(line: 0, scope: !16353, inlinedAt: !16789)
!16789 = distinct !DILocation(line: 859, column: 9, scope: !16770)
!16790 = !DILocation(line: 196, column: 9, scope: !16353, inlinedAt: !16789)
!16791 = !DILocation(line: 859, column: 2, scope: !16770)
!16792 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2645, file: !2645, line: 862, type: !16793, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16795)
!16793 = !DISubroutineType(types: !16794)
!16794 = !{!2540, !2571}
!16795 = !{!16796, !16797, !16798, !16800}
!16796 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16792, file: !2645, line: 862, type: !2571)
!16797 = !DILocalVariable(name: "thread", scope: !16792, file: !2645, line: 864, type: !2540)
!16798 = !DILocalVariable(name: "__i", scope: !16799, file: !2645, line: 866, type: !15734)
!16799 = distinct !DILexicalBlock(scope: !16792, file: !2645, line: 866, column: 2)
!16800 = !DILocalVariable(name: "__key", scope: !16799, file: !2645, line: 866, type: !15734)
!16801 = !DILocation(line: 0, scope: !16792)
!16802 = !DILocation(line: 0, scope: !16799)
!16803 = !DILocation(line: 0, scope: !15742, inlinedAt: !16804)
!16804 = distinct !DILocation(line: 866, column: 2, scope: !16799)
!16805 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16806)
!16806 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16804)
!16807 = !DILocation(line: 0, scope: !15751, inlinedAt: !16806)
!16808 = !DILocation(line: 867, column: 12, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16810, file: !2645, line: 866, column: 26)
!16810 = distinct !DILexicalBlock(scope: !16799, file: !2645, line: 866, column: 2)
!16811 = !DILocation(line: 869, column: 14, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16809, file: !2645, line: 869, column: 7)
!16813 = !DILocation(line: 869, column: 7, scope: !16809)
!16814 = !DILocation(line: 870, column: 4, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16812, file: !2645, line: 869, column: 23)
!16816 = !DILocation(line: 871, column: 3, scope: !16815)
!16817 = !DILocation(line: 0, scope: !15769, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 866, column: 2, scope: !16810)
!16819 = !DILocation(line: 0, scope: !15777, inlinedAt: !16820)
!16820 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16818)
!16821 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16820)
!16822 = !DILocation(line: 874, column: 2, scope: !16792)
!16823 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2645, file: !2645, line: 877, type: !16793, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16824)
!16824 = !{!16825, !16826, !16827, !16829}
!16825 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16823, file: !2645, line: 877, type: !2571)
!16826 = !DILocalVariable(name: "thread", scope: !16823, file: !2645, line: 879, type: !2540)
!16827 = !DILocalVariable(name: "__i", scope: !16828, file: !2645, line: 881, type: !15734)
!16828 = distinct !DILexicalBlock(scope: !16823, file: !2645, line: 881, column: 2)
!16829 = !DILocalVariable(name: "__key", scope: !16828, file: !2645, line: 881, type: !15734)
!16830 = !DILocation(line: 0, scope: !16823)
!16831 = !DILocation(line: 0, scope: !16828)
!16832 = !DILocation(line: 0, scope: !15742, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 881, column: 2, scope: !16828)
!16834 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16835)
!16835 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16833)
!16836 = !DILocation(line: 0, scope: !15751, inlinedAt: !16835)
!16837 = !DILocation(line: 882, column: 12, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16839, file: !2645, line: 881, column: 26)
!16839 = distinct !DILexicalBlock(scope: !16828, file: !2645, line: 881, column: 2)
!16840 = !DILocation(line: 884, column: 14, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16838, file: !2645, line: 884, column: 7)
!16842 = !DILocation(line: 884, column: 7, scope: !16838)
!16843 = !DILocation(line: 885, column: 4, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16841, file: !2645, line: 884, column: 23)
!16845 = !DILocation(line: 886, column: 10, scope: !16844)
!16846 = !DILocation(line: 887, column: 3, scope: !16844)
!16847 = !DILocation(line: 0, scope: !15769, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 881, column: 2, scope: !16839)
!16849 = !DILocation(line: 0, scope: !15777, inlinedAt: !16850)
!16850 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16848)
!16851 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16850)
!16852 = !DILocation(line: 890, column: 2, scope: !16823)
!16853 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2645, file: !2645, line: 893, type: !15700, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16854)
!16854 = !{!16855}
!16855 = !DILocalVariable(name: "thread", arg: 1, scope: !16853, file: !2645, line: 893, type: !2540)
!16856 = !DILocation(line: 0, scope: !16853)
!16857 = !DILocation(line: 0, scope: !16709, inlinedAt: !16858)
!16858 = distinct !DILocation(line: 895, column: 2, scope: !16853)
!16859 = !DILocation(line: 0, scope: !16713, inlinedAt: !16858)
!16860 = !DILocation(line: 0, scope: !15742, inlinedAt: !16861)
!16861 = distinct !DILocation(line: 788, column: 2, scope: !16713, inlinedAt: !16858)
!16862 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16863)
!16863 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16861)
!16864 = !DILocation(line: 0, scope: !15751, inlinedAt: !16863)
!16865 = !DILocation(line: 789, column: 3, scope: !16723, inlinedAt: !16858)
!16866 = !DILocation(line: 0, scope: !15769, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 788, column: 2, scope: !16724, inlinedAt: !16858)
!16868 = !DILocation(line: 0, scope: !15777, inlinedAt: !16869)
!16869 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16867)
!16870 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16869)
!16871 = !DILocation(line: 896, column: 8, scope: !16853)
!16872 = !DILocation(line: 897, column: 1, scope: !16853)
!16873 = distinct !DISubprogram(name: "z_set_prio", scope: !2645, file: !2645, line: 902, type: !16062, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16874)
!16874 = !{!16875, !16876, !16877, !16878, !16880}
!16875 = !DILocalVariable(name: "thread", arg: 1, scope: !16873, file: !2645, line: 902, type: !2540)
!16876 = !DILocalVariable(name: "prio", arg: 2, scope: !16873, file: !2645, line: 902, type: !125)
!16877 = !DILocalVariable(name: "need_sched", scope: !16873, file: !2645, line: 904, type: !153)
!16878 = !DILocalVariable(name: "__i", scope: !16879, file: !2645, line: 906, type: !15734)
!16879 = distinct !DILexicalBlock(scope: !16873, file: !2645, line: 906, column: 2)
!16880 = !DILocalVariable(name: "__key", scope: !16879, file: !2645, line: 906, type: !15734)
!16881 = !DILocation(line: 0, scope: !16873)
!16882 = !DILocation(line: 0, scope: !16879)
!16883 = !DILocation(line: 0, scope: !15742, inlinedAt: !16884)
!16884 = distinct !DILocation(line: 906, column: 2, scope: !16879)
!16885 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16886)
!16886 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16884)
!16887 = !DILocation(line: 0, scope: !15751, inlinedAt: !16886)
!16888 = !DILocation(line: 907, column: 16, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16890, file: !2645, line: 906, column: 26)
!16890 = distinct !DILexicalBlock(scope: !16879, file: !2645, line: 906, column: 2)
!16891 = !DILocation(line: 909, column: 7, scope: !16889)
!16892 = !DILocation(line: 0, scope: !15911, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 912, column: 5, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16895, file: !2645, line: 911, column: 63)
!16895 = distinct !DILexicalBlock(scope: !16896, file: !2645, line: 911, column: 8)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !2645, line: 909, column: 19)
!16897 = distinct !DILexicalBlock(scope: !16889, file: !2645, line: 909, column: 7)
!16898 = !DILocation(line: 266, column: 28, scope: !15911, inlinedAt: !16893)
!16899 = !DILocation(line: 0, scope: !15919, inlinedAt: !16900)
!16900 = distinct !DILocation(line: 268, column: 3, scope: !15923, inlinedAt: !16893)
!16901 = !DILocation(line: 234, column: 2, scope: !15919, inlinedAt: !16900)
!16902 = !DILocation(line: 913, column: 23, scope: !16894)
!16903 = !DILocation(line: 0, scope: !15928, inlinedAt: !16904)
!16904 = distinct !DILocation(line: 914, column: 5, scope: !16894)
!16905 = !DILocation(line: 252, column: 28, scope: !15928, inlinedAt: !16904)
!16906 = !DILocation(line: 0, scope: !15935, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 254, column: 3, scope: !15939, inlinedAt: !16904)
!16908 = !DILocation(line: 0, scope: !15942, inlinedAt: !16909)
!16909 = distinct !DILocation(line: 229, column: 2, scope: !15935, inlinedAt: !16907)
!16910 = !DILocation(line: 188, column: 2, scope: !15952, inlinedAt: !16909)
!16911 = !DILocation(line: 188, column: 2, scope: !15954, inlinedAt: !16909)
!16912 = !DILocation(line: 0, scope: !15952, inlinedAt: !16909)
!16913 = !DILocation(line: 189, column: 7, scope: !15957, inlinedAt: !16909)
!16914 = !DILocation(line: 189, column: 35, scope: !15957, inlinedAt: !16909)
!16915 = !DILocation(line: 189, column: 7, scope: !15958, inlinedAt: !16909)
!16916 = !DILocation(line: 190, column: 4, scope: !15962, inlinedAt: !16909)
!16917 = !DILocation(line: 192, column: 4, scope: !15962, inlinedAt: !16909)
!16918 = distinct !{!16918, !16910, !16919}
!16919 = !DILocation(line: 194, column: 2, scope: !15952, inlinedAt: !16909)
!16920 = !DILocation(line: 196, column: 2, scope: !15942, inlinedAt: !16909)
!16921 = !DILocation(line: 197, column: 1, scope: !15942, inlinedAt: !16909)
!16922 = !DILocation(line: 918, column: 4, scope: !16896)
!16923 = !DILocation(line: 919, column: 3, scope: !16896)
!16924 = !DILocation(line: 920, column: 22, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16897, file: !2645, line: 919, column: 10)
!16926 = !DILocation(line: 0, scope: !15769, inlinedAt: !16927)
!16927 = distinct !DILocation(line: 906, column: 2, scope: !16890)
!16928 = !DILocation(line: 0, scope: !15777, inlinedAt: !16929)
!16929 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16927)
!16930 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16929)
!16931 = !DILocation(line: 926, column: 2, scope: !16873)
!16932 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2645, file: !2645, line: 929, type: !16933, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16935)
!16933 = !DISubroutineType(types: !16934)
!16934 = !{null, !2540, !125}
!16935 = !{!16936, !16937, !16938}
!16936 = !DILocalVariable(name: "thread", arg: 1, scope: !16932, file: !2645, line: 929, type: !2540)
!16937 = !DILocalVariable(name: "prio", arg: 2, scope: !16932, file: !2645, line: 929, type: !125)
!16938 = !DILocalVariable(name: "need_sched", scope: !16932, file: !2645, line: 931, type: !153)
!16939 = !DILocation(line: 0, scope: !16932)
!16940 = !DILocation(line: 931, column: 20, scope: !16932)
!16941 = !DILocation(line: 935, column: 17, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16932, file: !2645, line: 935, column: 6)
!16943 = !DILocation(line: 935, column: 20, scope: !16942)
!16944 = !DILocation(line: 935, column: 35, scope: !16942)
!16945 = !DILocation(line: 935, column: 48, scope: !16942)
!16946 = !DILocation(line: 935, column: 6, scope: !16932)
!16947 = !DILocation(line: 936, column: 3, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16942, file: !2645, line: 935, column: 55)
!16949 = !DILocation(line: 937, column: 2, scope: !16948)
!16950 = !DILocation(line: 938, column: 1, scope: !16932)
!16951 = distinct !DISubprogram(name: "k_sched_lock", scope: !2645, file: !2645, line: 987, type: !3300, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16952)
!16952 = !{!16953, !16955}
!16953 = !DILocalVariable(name: "__i", scope: !16954, file: !2645, line: 989, type: !15734)
!16954 = distinct !DILexicalBlock(scope: !16951, file: !2645, line: 989, column: 2)
!16955 = !DILocalVariable(name: "__key", scope: !16954, file: !2645, line: 989, type: !15734)
!16956 = !DILocation(line: 0, scope: !16954)
!16957 = !DILocation(line: 0, scope: !15742, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 989, column: 2, scope: !16954)
!16959 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16960)
!16960 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16958)
!16961 = !DILocation(line: 0, scope: !15751, inlinedAt: !16960)
!16962 = !DILocation(line: 992, column: 3, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16964, file: !2645, line: 989, column: 26)
!16964 = distinct !DILexicalBlock(scope: !16954, file: !2645, line: 989, column: 2)
!16965 = !DILocation(line: 0, scope: !15769, inlinedAt: !16966)
!16966 = distinct !DILocation(line: 989, column: 2, scope: !16964)
!16967 = !DILocation(line: 0, scope: !15777, inlinedAt: !16968)
!16968 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16966)
!16969 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16968)
!16970 = !DILocation(line: 994, column: 1, scope: !16951)
!16971 = distinct !DISubprogram(name: "z_sched_lock", scope: !15014, file: !15014, line: 251, type: !3300, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!16972 = !DILocation(line: 256, column: 4, scope: !16971)
!16973 = !DILocation(line: 256, column: 19, scope: !16971)
!16974 = !DILocation(line: 256, column: 2, scope: !16971)
!16975 = !DILocation(line: 258, column: 2, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16971, file: !15014, line: 258, column: 2)
!16977 = !{i64 2154967766}
!16978 = !DILocation(line: 259, column: 1, scope: !16971)
!16979 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2645, file: !2645, line: 996, type: !3300, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !16980)
!16980 = !{!16981, !16983}
!16981 = !DILocalVariable(name: "__i", scope: !16982, file: !2645, line: 998, type: !15734)
!16982 = distinct !DILexicalBlock(scope: !16979, file: !2645, line: 998, column: 2)
!16983 = !DILocalVariable(name: "__key", scope: !16982, file: !2645, line: 998, type: !15734)
!16984 = !DILocation(line: 0, scope: !16982)
!16985 = !DILocation(line: 0, scope: !15742, inlinedAt: !16986)
!16986 = distinct !DILocation(line: 998, column: 2, scope: !16982)
!16987 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !16988)
!16988 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !16986)
!16989 = !DILocation(line: 0, scope: !15751, inlinedAt: !16988)
!16990 = !DILocation(line: 1002, column: 5, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16992, file: !2645, line: 998, column: 26)
!16992 = distinct !DILexicalBlock(scope: !16982, file: !2645, line: 998, column: 2)
!16993 = !DILocation(line: 1002, column: 20, scope: !16991)
!16994 = !DILocation(line: 1002, column: 3, scope: !16991)
!16995 = !DILocation(line: 1003, column: 3, scope: !16991)
!16996 = !DILocation(line: 0, scope: !15769, inlinedAt: !16997)
!16997 = distinct !DILocation(line: 998, column: 2, scope: !16992)
!16998 = !DILocation(line: 0, scope: !15777, inlinedAt: !16999)
!16999 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !16997)
!17000 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !16999)
!17001 = !DILocation(line: 1011, column: 2, scope: !16979)
!17002 = !DILocation(line: 1012, column: 1, scope: !16979)
!17003 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2645, file: !2645, line: 1014, type: !16050, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!17004 = !DILocation(line: 1028, column: 25, scope: !17003)
!17005 = !DILocation(line: 1028, column: 2, scope: !17003)
!17006 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2645, file: !2645, line: 1155, type: !17007, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17009)
!17007 = !DISubroutineType(types: !17008)
!17008 = !{!153, !2569, !2569}
!17009 = !{!17010, !17011, !17012, !17013, !17014}
!17010 = !DILocalVariable(name: "a", arg: 1, scope: !17006, file: !2645, line: 1155, type: !2569)
!17011 = !DILocalVariable(name: "b", arg: 2, scope: !17006, file: !2645, line: 1155, type: !2569)
!17012 = !DILocalVariable(name: "thread_a", scope: !17006, file: !2645, line: 1157, type: !2540)
!17013 = !DILocalVariable(name: "thread_b", scope: !17006, file: !2645, line: 1157, type: !2540)
!17014 = !DILocalVariable(name: "cmp", scope: !17006, file: !2645, line: 1158, type: !909)
!17015 = !DILocation(line: 0, scope: !17006)
!17016 = !DILocation(line: 1160, column: 13, scope: !17006)
!17017 = !DILocation(line: 1161, column: 13, scope: !17006)
!17018 = !DILocation(line: 1163, column: 8, scope: !17006)
!17019 = !DILocation(line: 1165, column: 10, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17006, file: !2645, line: 1165, column: 6)
!17021 = !DILocation(line: 1165, column: 6, scope: !17006)
!17022 = !DILocation(line: 1167, column: 17, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17020, file: !2645, line: 1167, column: 13)
!17024 = !DILocation(line: 1167, column: 13, scope: !17020)
!17025 = !DILocation(line: 1170, column: 25, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !17023, file: !2645, line: 1169, column: 9)
!17027 = !DILocation(line: 1170, column: 52, scope: !17026)
!17028 = !DILocation(line: 1170, column: 35, scope: !17026)
!17029 = !DILocation(line: 1170, column: 3, scope: !17026)
!17030 = !DILocation(line: 0, scope: !17020)
!17031 = !DILocation(line: 1173, column: 1, scope: !17006)
!17032 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2645, file: !2645, line: 1175, type: !17033, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17048)
!17033 = !DISubroutineType(types: !17034)
!17034 = !{null, !17035, !2540}
!17035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17036, size: 32)
!17036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17037, line: 37, size: 128, elements: !17038)
!17037 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17038 = !{!17039, !17047}
!17039 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17036, file: !17037, line: 38, baseType: !17040, size: 96)
!17040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !557, line: 83, size: 96, elements: !17041)
!17041 = !{!17042, !17043, !17046}
!17042 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17040, file: !557, line: 84, baseType: !2569, size: 32)
!17043 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17040, file: !557, line: 85, baseType: !17044, size: 32, offset: 32)
!17044 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !557, line: 81, baseType: !17045)
!17045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17007, size: 32)
!17046 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17040, file: !557, line: 86, baseType: !125, size: 32, offset: 64)
!17047 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17036, file: !17037, line: 39, baseType: !125, size: 32, offset: 96)
!17048 = !{!17049, !17050, !17051, !17052, !17061}
!17049 = !DILocalVariable(name: "pq", arg: 1, scope: !17032, file: !2645, line: 1175, type: !17035)
!17050 = !DILocalVariable(name: "thread", arg: 2, scope: !17032, file: !2645, line: 1175, type: !2540)
!17051 = !DILocalVariable(name: "t", scope: !17032, file: !2645, line: 1177, type: !2540)
!17052 = !DILocalVariable(name: "__f", scope: !17053, file: !2645, line: 1190, type: !17056)
!17053 = distinct !DILexicalBlock(scope: !17054, file: !2645, line: 1190, column: 3)
!17054 = distinct !DILexicalBlock(scope: !17055, file: !2645, line: 1189, column: 27)
!17055 = distinct !DILexicalBlock(scope: !17032, file: !2645, line: 1189, column: 6)
!17056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !557, line: 155, size: 96, elements: !17057)
!17057 = !{!17058, !17059, !17060}
!17058 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17056, file: !557, line: 156, baseType: !2640, size: 32)
!17059 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17056, file: !557, line: 157, baseType: !184, size: 32, offset: 32)
!17060 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17056, file: !557, line: 158, baseType: !909, size: 32, offset: 64)
!17061 = !DILocalVariable(name: "n", scope: !17062, file: !2645, line: 1190, type: !2569)
!17062 = distinct !DILexicalBlock(scope: !17063, file: !2645, line: 1190, column: 3)
!17063 = distinct !DILexicalBlock(scope: !17053, file: !2645, line: 1190, column: 3)
!17064 = !DILocation(line: 0, scope: !17032)
!17065 = !DILocation(line: 1181, column: 31, scope: !17032)
!17066 = !DILocation(line: 1181, column: 45, scope: !17032)
!17067 = !DILocation(line: 1181, column: 15, scope: !17032)
!17068 = !DILocation(line: 1181, column: 25, scope: !17032)
!17069 = !DILocation(line: 1189, column: 11, scope: !17055)
!17070 = !DILocation(line: 1189, column: 7, scope: !17055)
!17071 = !DILocation(line: 1189, column: 6, scope: !17032)
!17072 = !DILocation(line: 1190, column: 3, scope: !17053)
!17073 = !DILocation(line: 1190, column: 3, scope: !17062)
!17074 = !DILocation(line: 0, scope: !17062)
!17075 = !DILocation(line: 1190, column: 3, scope: !17063)
!17076 = !DILocation(line: 1193, column: 2, scope: !17054)
!17077 = !DILocation(line: 1191, column: 42, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17063, file: !2645, line: 1190, column: 54)
!17079 = !DILocation(line: 1191, column: 12, scope: !17078)
!17080 = !DILocation(line: 1191, column: 22, scope: !17078)
!17081 = distinct !{!17081, !17072, !17082}
!17082 = !DILocation(line: 1192, column: 3, scope: !17053)
!17083 = !DILocation(line: 1195, column: 17, scope: !17032)
!17084 = !DILocation(line: 1195, column: 37, scope: !17032)
!17085 = !DILocation(line: 1195, column: 2, scope: !17032)
!17086 = !DILocation(line: 1196, column: 1, scope: !17032)
!17087 = !DISubprogram(name: "z_rb_foreach_next", scope: !557, file: !557, line: 176, type: !17088, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17088 = !DISubroutineType(types: !17089)
!17089 = !{!2569, !17090, !17091}
!17090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17040, size: 32)
!17091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17056, size: 32)
!17092 = !DISubprogram(name: "rb_insert", scope: !557, file: !557, line: 105, type: !17093, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17093 = !DISubroutineType(types: !17094)
!17094 = !{null, !17090, !2569}
!17095 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2645, file: !2645, line: 1198, type: !17033, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17096)
!17096 = !{!17097, !17098}
!17097 = !DILocalVariable(name: "pq", arg: 1, scope: !17095, file: !2645, line: 1198, type: !17035)
!17098 = !DILocalVariable(name: "thread", arg: 2, scope: !17095, file: !2645, line: 1198, type: !2540)
!17099 = !DILocation(line: 0, scope: !17095)
!17100 = !DILocation(line: 1202, column: 17, scope: !17095)
!17101 = !DILocation(line: 1202, column: 37, scope: !17095)
!17102 = !DILocation(line: 1202, column: 2, scope: !17095)
!17103 = !DILocation(line: 1204, column: 16, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17095, file: !2645, line: 1204, column: 6)
!17105 = !DILocation(line: 1204, column: 7, scope: !17104)
!17106 = !DILocation(line: 1204, column: 6, scope: !17095)
!17107 = !DILocation(line: 1205, column: 7, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17104, file: !2645, line: 1204, column: 22)
!17109 = !DILocation(line: 1205, column: 22, scope: !17108)
!17110 = !DILocation(line: 1206, column: 2, scope: !17108)
!17111 = !DILocation(line: 1207, column: 1, scope: !17095)
!17112 = !DISubprogram(name: "rb_remove", scope: !557, file: !557, line: 110, type: !17093, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17113 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2645, file: !2645, line: 1209, type: !17114, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17116)
!17114 = !DISubroutineType(types: !17115)
!17115 = !{!2540, !17035}
!17116 = !{!17117, !17118, !17119}
!17117 = !DILocalVariable(name: "pq", arg: 1, scope: !17113, file: !2645, line: 1209, type: !17035)
!17118 = !DILocalVariable(name: "thread", scope: !17113, file: !2645, line: 1211, type: !2540)
!17119 = !DILocalVariable(name: "n", scope: !17113, file: !2645, line: 1212, type: !2569)
!17120 = !DILocation(line: 0, scope: !17113)
!17121 = !DILocation(line: 1212, column: 37, scope: !17113)
!17122 = !DILocation(line: 1212, column: 21, scope: !17113)
!17123 = !DILocation(line: 1217, column: 2, scope: !17113)
!17124 = distinct !DISubprogram(name: "rb_get_min", scope: !557, file: !557, line: 115, type: !17125, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17127)
!17125 = !DISubroutineType(types: !17126)
!17126 = !{!2569, !17090}
!17127 = !{!17128}
!17128 = !DILocalVariable(name: "tree", arg: 1, scope: !17124, file: !557, line: 115, type: !17090)
!17129 = !DILocation(line: 0, scope: !17124)
!17130 = !DILocation(line: 117, column: 9, scope: !17124)
!17131 = !DILocation(line: 117, column: 2, scope: !17124)
!17132 = !DISubprogram(name: "z_rb_get_minmax", scope: !557, file: !557, line: 100, type: !17133, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17133 = !DISubroutineType(types: !17134)
!17134 = !{!2569, !17090, !150}
!17135 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2645, file: !2645, line: 1246, type: !17136, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17146)
!17136 = !DISubroutineType(types: !17137)
!17137 = !{!2540, !17138}
!17138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17139, size: 32)
!17139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17037, line: 53, size: 2080, elements: !17140)
!17140 = !{!17141, !17145}
!17141 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17139, file: !17037, line: 54, baseType: !17142, size: 2048)
!17142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2576, size: 2048, elements: !17143)
!17143 = !{!17144}
!17144 = !DISubrange(count: 32)
!17145 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17139, file: !17037, line: 55, baseType: !32, size: 32, offset: 2048)
!17146 = !{!17147, !17148, !17149, !17150}
!17147 = !DILocalVariable(name: "pq", arg: 1, scope: !17135, file: !2645, line: 1246, type: !17138)
!17148 = !DILocalVariable(name: "thread", scope: !17135, file: !2645, line: 1252, type: !2540)
!17149 = !DILocalVariable(name: "l", scope: !17135, file: !2645, line: 1253, type: !15945)
!17150 = !DILocalVariable(name: "n", scope: !17135, file: !2645, line: 1254, type: !2641)
!17151 = !DILocation(line: 0, scope: !17135)
!17152 = !DILocation(line: 1248, column: 11, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17135, file: !2645, line: 1248, column: 6)
!17154 = !DILocation(line: 1248, column: 7, scope: !17153)
!17155 = !DILocation(line: 1248, column: 6, scope: !17135)
!17156 = !DILocation(line: 1253, column: 31, scope: !17135)
!17157 = !DILocation(line: 1253, column: 20, scope: !17135)
!17158 = !DILocation(line: 1254, column: 19, scope: !17135)
!17159 = !DILocation(line: 1260, column: 1, scope: !17135)
!17160 = distinct !DISubprogram(name: "z_unpend_all", scope: !2645, file: !2645, line: 1262, type: !17161, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17163)
!17161 = !DISubroutineType(types: !17162)
!17162 = !{!125, !2571}
!17163 = !{!17164, !17165, !17166}
!17164 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17160, file: !2645, line: 1262, type: !2571)
!17165 = !DILocalVariable(name: "need_sched", scope: !17160, file: !2645, line: 1264, type: !125)
!17166 = !DILocalVariable(name: "thread", scope: !17160, file: !2645, line: 1265, type: !2540)
!17167 = !DILocation(line: 0, scope: !17160)
!17168 = !DILocation(line: 1267, column: 19, scope: !17160)
!17169 = !DILocation(line: 1267, column: 41, scope: !17160)
!17170 = !DILocation(line: 1267, column: 2, scope: !17160)
!17171 = !DILocation(line: 1268, column: 3, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17160, file: !2645, line: 1267, column: 50)
!17173 = !DILocation(line: 1269, column: 3, scope: !17172)
!17174 = distinct !{!17174, !17170, !17175}
!17175 = !DILocation(line: 1271, column: 2, scope: !17160)
!17176 = !DILocation(line: 1273, column: 2, scope: !17160)
!17177 = distinct !DISubprogram(name: "z_waitq_head", scope: !15340, file: !15340, line: 52, type: !16793, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17178)
!17178 = !{!17179}
!17179 = !DILocalVariable(name: "w", arg: 1, scope: !17177, file: !15340, line: 52, type: !2571)
!17180 = !DILocation(line: 0, scope: !17177)
!17181 = !DILocation(line: 54, column: 52, scope: !17177)
!17182 = !DILocation(line: 54, column: 28, scope: !17177)
!17183 = !DILocation(line: 54, column: 9, scope: !17177)
!17184 = !DILocation(line: 54, column: 2, scope: !17177)
!17185 = distinct !DISubprogram(name: "init_ready_q", scope: !2645, file: !2645, line: 1276, type: !17186, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17193)
!17186 = !DISubroutineType(types: !17187)
!17187 = !{null, !17188}
!17188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17189, size: 32)
!17189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !17190)
!17190 = !{!17191, !17192}
!17191 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17189, file: !567, line: 86, baseType: !2540, size: 32)
!17192 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17189, file: !567, line: 90, baseType: !2576, size: 64, offset: 32)
!17193 = !{!17194}
!17194 = !DILocalVariable(name: "rq", arg: 1, scope: !17185, file: !2645, line: 1276, type: !17188)
!17195 = !DILocation(line: 0, scope: !17185)
!17196 = !DILocation(line: 1289, column: 22, scope: !17185)
!17197 = !DILocation(line: 1289, column: 2, scope: !17185)
!17198 = !DILocation(line: 1291, column: 1, scope: !17185)
!17199 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !17200, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17202)
!17200 = !DISubroutineType(types: !17201)
!17201 = !{null, !15945}
!17202 = !{!17203}
!17203 = !DILocalVariable(name: "list", arg: 1, scope: !17199, file: !541, line: 197, type: !15945)
!17204 = !DILocation(line: 0, scope: !17199)
!17205 = !DILocation(line: 199, column: 8, scope: !17199)
!17206 = !DILocation(line: 199, column: 13, scope: !17199)
!17207 = !DILocation(line: 200, column: 8, scope: !17199)
!17208 = !DILocation(line: 200, column: 13, scope: !17199)
!17209 = !DILocation(line: 201, column: 1, scope: !17199)
!17210 = distinct !DISubprogram(name: "z_sched_init", scope: !2645, file: !2645, line: 1293, type: !3300, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!17211 = !DILocation(line: 1302, column: 2, scope: !17210)
!17212 = !DILocation(line: 1306, column: 2, scope: !17210)
!17213 = !DILocation(line: 1309, column: 1, scope: !17210)
!17214 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2645, file: !2645, line: 1311, type: !17215, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17218)
!17215 = !DISubroutineType(types: !17216)
!17216 = !{!125, !17217}
!17217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2540)
!17218 = !{!17219}
!17219 = !DILocalVariable(name: "thread", arg: 1, scope: !17214, file: !2645, line: 1311, type: !17217)
!17220 = !DILocation(line: 0, scope: !17214)
!17221 = !DILocation(line: 1313, column: 22, scope: !17214)
!17222 = !DILocation(line: 1313, column: 9, scope: !17214)
!17223 = !DILocation(line: 1313, column: 2, scope: !17214)
!17224 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2645, file: !2645, line: 1325, type: !17225, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17227)
!17225 = !DISubroutineType(types: !17226)
!17226 = !{null, !17217, !125}
!17227 = !{!17228, !17229, !17230}
!17228 = !DILocalVariable(name: "thread", arg: 1, scope: !17224, file: !2645, line: 1325, type: !17217)
!17229 = !DILocalVariable(name: "prio", arg: 2, scope: !17224, file: !2645, line: 1325, type: !125)
!17230 = !DILocalVariable(name: "th", scope: !17224, file: !2645, line: 1334, type: !2540)
!17231 = !DILocation(line: 0, scope: !17224)
!17232 = !DILocation(line: 1336, column: 2, scope: !17224)
!17233 = !DILocation(line: 1337, column: 1, scope: !17224)
!17234 = distinct !DISubprogram(name: "k_can_yield", scope: !2645, file: !2645, line: 1384, type: !9324, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!17235 = !DILocation(line: 1386, column: 11, scope: !17234)
!17236 = !DILocation(line: 1386, column: 29, scope: !17234)
!17237 = !DILocation(line: 1386, column: 32, scope: !17234)
!17238 = !DILocation(line: 1386, column: 46, scope: !17234)
!17239 = !DILocation(line: 1387, column: 28, scope: !17234)
!17240 = !DILocation(line: 1387, column: 4, scope: !17234)
!17241 = !DILocation(line: 1386, column: 2, scope: !17234)
!17242 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !624, file: !624, line: 989, type: !9324, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!17243 = !DILocation(line: 993, column: 10, scope: !17242)
!17244 = !DILocation(line: 993, column: 2, scope: !17242)
!17245 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2645, file: !2645, line: 1390, type: !3300, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17246)
!17246 = !{!17247}
!17247 = !DILocalVariable(name: "key", scope: !17245, file: !2645, line: 1396, type: !15734)
!17248 = !DILocation(line: 0, scope: !15742, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 1396, column: 25, scope: !17245)
!17250 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !17249)
!17252 = !DILocation(line: 0, scope: !15751, inlinedAt: !17251)
!17253 = !DILocation(line: 0, scope: !17245)
!17254 = !DILocation(line: 1400, column: 18, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17256, file: !2645, line: 1399, column: 36)
!17256 = distinct !DILexicalBlock(scope: !17245, file: !2645, line: 1398, column: 6)
!17257 = !DILocation(line: 0, scope: !15911, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 1400, column: 3, scope: !17255)
!17259 = !DILocation(line: 266, column: 15, scope: !15911, inlinedAt: !17258)
!17260 = !DILocation(line: 266, column: 28, scope: !15911, inlinedAt: !17258)
!17261 = !DILocation(line: 0, scope: !15919, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 268, column: 3, scope: !15923, inlinedAt: !17258)
!17263 = !DILocation(line: 234, column: 2, scope: !15919, inlinedAt: !17262)
!17264 = !DILocation(line: 1402, column: 15, scope: !17245)
!17265 = !DILocation(line: 0, scope: !15928, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 1402, column: 2, scope: !17245)
!17267 = !DILocation(line: 252, column: 15, scope: !15928, inlinedAt: !17266)
!17268 = !DILocation(line: 252, column: 28, scope: !15928, inlinedAt: !17266)
!17269 = !DILocation(line: 0, scope: !15935, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 254, column: 3, scope: !15939, inlinedAt: !17266)
!17271 = !DILocation(line: 0, scope: !15942, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 229, column: 2, scope: !15935, inlinedAt: !17270)
!17273 = !DILocation(line: 188, column: 2, scope: !15952, inlinedAt: !17272)
!17274 = !DILocation(line: 188, column: 2, scope: !15954, inlinedAt: !17272)
!17275 = !DILocation(line: 0, scope: !15952, inlinedAt: !17272)
!17276 = !DILocation(line: 189, column: 7, scope: !15957, inlinedAt: !17272)
!17277 = !DILocation(line: 189, column: 35, scope: !15957, inlinedAt: !17272)
!17278 = !DILocation(line: 189, column: 7, scope: !15958, inlinedAt: !17272)
!17279 = !DILocation(line: 191, column: 21, scope: !15962, inlinedAt: !17272)
!17280 = !DILocation(line: 190, column: 4, scope: !15962, inlinedAt: !17272)
!17281 = !DILocation(line: 192, column: 4, scope: !15962, inlinedAt: !17272)
!17282 = distinct !{!17282, !17273, !17283}
!17283 = !DILocation(line: 194, column: 2, scope: !15952, inlinedAt: !17272)
!17284 = !DILocation(line: 196, column: 37, scope: !15942, inlinedAt: !17272)
!17285 = !DILocation(line: 196, column: 2, scope: !15942, inlinedAt: !17272)
!17286 = !DILocation(line: 197, column: 1, scope: !15942, inlinedAt: !17272)
!17287 = !DILocation(line: 1403, column: 2, scope: !17245)
!17288 = !DILocation(line: 0, scope: !16353, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 1404, column: 2, scope: !17245)
!17290 = !DILocation(line: 196, column: 9, scope: !16353, inlinedAt: !17289)
!17291 = !DILocation(line: 1405, column: 1, scope: !17245)
!17292 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2645, file: !2645, line: 1459, type: !17293, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17295)
!17293 = !DISubroutineType(types: !17294)
!17294 = !{!909, !16533}
!17295 = !{!17296, !17297, !17298}
!17296 = !DILocalVariable(name: "timeout", arg: 1, scope: !17292, file: !2645, line: 1459, type: !16533)
!17297 = !DILocalVariable(name: "ticks", scope: !17292, file: !2645, line: 1461, type: !1896)
!17298 = !DILocalVariable(name: "ret", scope: !17292, file: !2645, line: 1480, type: !909)
!17299 = !DILocation(line: 0, scope: !17292)
!17300 = !DILocation(line: 1468, column: 6, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17292, file: !2645, line: 1468, column: 6)
!17302 = !DILocation(line: 1468, column: 6, scope: !17292)
!17303 = !DILocation(line: 1469, column: 20, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17301, file: !2645, line: 1468, column: 40)
!17305 = !DILocation(line: 1469, column: 3, scope: !17304)
!17306 = !DILocation(line: 1473, column: 3, scope: !17304)
!17307 = !DILocation(line: 1478, column: 10, scope: !17292)
!17308 = !DILocation(line: 1480, column: 16, scope: !17292)
!17309 = !DILocation(line: 1485, column: 1, scope: !17292)
!17310 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5372, file: !5372, line: 310, type: !17311, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{null, !17217}
!17313 = !{!17314}
!17314 = !DILocalVariable(name: "thread", arg: 1, scope: !17310, file: !5372, line: 310, type: !17217)
!17315 = !DILocation(line: 0, scope: !17310)
!17316 = !DILocation(line: 319, column: 2, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17310, file: !5372, line: 319, column: 2)
!17318 = !{i64 2154886155}
!17319 = !DILocation(line: 320, column: 2, scope: !17310)
!17320 = !DILocation(line: 321, column: 1, scope: !17310)
!17321 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2645, file: !2645, line: 1415, type: !17322, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17324)
!17322 = !DISubroutineType(types: !17323)
!17323 = !{!909, !1896}
!17324 = !{!17325, !17326, !17327, !17328}
!17325 = !DILocalVariable(name: "ticks", arg: 1, scope: !17321, file: !2645, line: 1415, type: !1896)
!17326 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17321, file: !2645, line: 1418, type: !208)
!17327 = !DILocalVariable(name: "timeout", scope: !17321, file: !2645, line: 1430, type: !16533)
!17328 = !DILocalVariable(name: "key", scope: !17321, file: !2645, line: 1437, type: !15734)
!17329 = !DILocation(line: 0, scope: !17321)
!17330 = !DILocation(line: 1425, column: 12, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17321, file: !2645, line: 1425, column: 6)
!17332 = !DILocation(line: 1425, column: 6, scope: !17321)
!17333 = !DILocation(line: 1426, column: 3, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17331, file: !2645, line: 1425, column: 18)
!17335 = !DILocation(line: 1427, column: 3, scope: !17334)
!17336 = !DILocation(line: 1431, column: 24, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17321, file: !2645, line: 1431, column: 6)
!17338 = !DILocation(line: 1431, column: 6, scope: !17321)
!17339 = !DILocation(line: 1432, column: 35, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17337, file: !2645, line: 1431, column: 30)
!17341 = !DILocation(line: 1432, column: 27, scope: !17340)
!17342 = !DILocation(line: 1433, column: 2, scope: !17340)
!17343 = !DILocation(line: 1434, column: 27, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17337, file: !2645, line: 1433, column: 9)
!17345 = !DILocation(line: 0, scope: !17337)
!17346 = !DILocation(line: 0, scope: !15742, inlinedAt: !17347)
!17347 = distinct !DILocation(line: 1437, column: 25, scope: !17321)
!17348 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !17349)
!17349 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !17347)
!17350 = !DILocation(line: 0, scope: !15751, inlinedAt: !17349)
!17351 = !DILocation(line: 1440, column: 20, scope: !17321)
!17352 = !DILocation(line: 1440, column: 18, scope: !17321)
!17353 = !DILocation(line: 1442, column: 2, scope: !17321)
!17354 = !DILocation(line: 1443, column: 23, scope: !17321)
!17355 = !DILocation(line: 1443, column: 2, scope: !17321)
!17356 = !DILocation(line: 1444, column: 29, scope: !17321)
!17357 = !DILocation(line: 1444, column: 2, scope: !17321)
!17358 = !DILocation(line: 0, scope: !16353, inlinedAt: !17359)
!17359 = distinct !DILocation(line: 1446, column: 8, scope: !17321)
!17360 = !DILocation(line: 196, column: 9, scope: !16353, inlinedAt: !17359)
!17361 = !DILocation(line: 1450, column: 10, scope: !17321)
!17362 = !DILocation(line: 1450, column: 45, scope: !17321)
!17363 = !DILocation(line: 1450, column: 43, scope: !17321)
!17364 = !DILocation(line: 1451, column: 6, scope: !17321)
!17365 = !DILocation(line: 1457, column: 1, scope: !17321)
!17366 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15575, file: !15575, line: 1103, type: !15576, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17367)
!17367 = !{!17368}
!17368 = !DILocalVariable(name: "t", arg: 1, scope: !17366, file: !15575, line: 1103, type: !1803)
!17369 = !DILocation(line: 0, scope: !17366)
!17370 = !DILocation(line: 0, scope: !15789, inlinedAt: !17371)
!17371 = distinct !DILocation(line: 1106, column: 9, scope: !17366)
!17372 = !DILocation(line: 139, column: 13, scope: !17373, inlinedAt: !17371)
!17373 = distinct !DILexicalBlock(scope: !17374, file: !15575, line: 138, column: 10)
!17374 = distinct !DILexicalBlock(scope: !17375, file: !15575, line: 136, column: 7)
!17375 = distinct !DILexicalBlock(scope: !15810, file: !15575, line: 134, column: 17)
!17376 = !DILocation(line: 1106, column: 2, scope: !17366)
!17377 = distinct !DISubprogram(name: "k_yield", scope: !5372, file: !5372, line: 140, type: !3300, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!17378 = !DILocation(line: 148, column: 2, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17377, file: !5372, line: 148, column: 2)
!17380 = !{i64 2154885475}
!17381 = !DILocation(line: 149, column: 2, scope: !17377)
!17382 = !DILocation(line: 150, column: 1, scope: !17377)
!17383 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2645, file: !2645, line: 1495, type: !17384, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17386)
!17384 = !DISubroutineType(types: !17385)
!17385 = !{!909, !125}
!17386 = !{!17387, !17388}
!17387 = !DILocalVariable(name: "us", arg: 1, scope: !17383, file: !2645, line: 1495, type: !125)
!17388 = !DILocalVariable(name: "ticks", scope: !17383, file: !2645, line: 1497, type: !909)
!17389 = !DILocation(line: 0, scope: !17383)
!17390 = !DILocation(line: 1501, column: 31, scope: !17383)
!17391 = !DILocation(line: 1501, column: 10, scope: !17383)
!17392 = !DILocation(line: 1502, column: 23, scope: !17383)
!17393 = !DILocation(line: 1502, column: 10, scope: !17383)
!17394 = !DILocation(line: 1506, column: 31, scope: !17383)
!17395 = !DILocation(line: 1506, column: 9, scope: !17383)
!17396 = !DILocation(line: 1506, column: 2, scope: !17383)
!17397 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15575, file: !15575, line: 571, type: !15576, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17398)
!17398 = !{!17399}
!17399 = !DILocalVariable(name: "t", arg: 1, scope: !17397, file: !15575, line: 571, type: !1803)
!17400 = !DILocation(line: 0, scope: !17397)
!17401 = !DILocation(line: 0, scope: !15789, inlinedAt: !17402)
!17402 = distinct !DILocation(line: 574, column: 9, scope: !17397)
!17403 = !DILocation(line: 135, column: 5, scope: !17375, inlinedAt: !17402)
!17404 = !DILocation(line: 139, column: 13, scope: !17373, inlinedAt: !17402)
!17405 = !DILocation(line: 574, column: 2, scope: !17397)
!17406 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15575, file: !15575, line: 1187, type: !15576, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17407)
!17407 = !{!17408}
!17408 = !DILocalVariable(name: "t", arg: 1, scope: !17406, file: !15575, line: 1187, type: !1803)
!17409 = !DILocation(line: 0, scope: !17406)
!17410 = !DILocation(line: 0, scope: !15789, inlinedAt: !17411)
!17411 = distinct !DILocation(line: 1190, column: 9, scope: !17406)
!17412 = !DILocation(line: 145, column: 13, scope: !17413, inlinedAt: !17411)
!17413 = distinct !DILexicalBlock(scope: !15807, file: !15575, line: 144, column: 10)
!17414 = !DILocation(line: 1190, column: 2, scope: !17406)
!17415 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2645, file: !2645, line: 1517, type: !17311, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17416)
!17416 = !{!17417}
!17417 = !DILocalVariable(name: "thread", arg: 1, scope: !17415, file: !2645, line: 1517, type: !17217)
!17418 = !DILocation(line: 0, scope: !17415)
!17419 = !DILocation(line: 1521, column: 6, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17415, file: !2645, line: 1521, column: 6)
!17421 = !DILocation(line: 1521, column: 6, scope: !17415)
!17422 = !DILocation(line: 1525, column: 6, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17415, file: !2645, line: 1525, column: 6)
!17424 = !DILocation(line: 1525, column: 37, scope: !17423)
!17425 = !DILocation(line: 1525, column: 6, scope: !17415)
!17426 = !DILocation(line: 1527, column: 20, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17428, file: !2645, line: 1527, column: 7)
!17428 = distinct !DILexicalBlock(scope: !17423, file: !2645, line: 1525, column: 42)
!17429 = !DILocation(line: 1527, column: 33, scope: !17427)
!17430 = !DILocation(line: 1527, column: 7, scope: !17428)
!17431 = !DILocation(line: 1532, column: 2, scope: !17415)
!17432 = !DILocation(line: 1533, column: 2, scope: !17415)
!17433 = !DILocation(line: 1031, column: 3, scope: !16386, inlinedAt: !17434)
!17434 = distinct !DILocation(line: 48, column: 10, scope: !16390, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 1537, column: 7, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17415, file: !2645, line: 1537, column: 6)
!17437 = !DILocation(line: 0, scope: !16386, inlinedAt: !17434)
!17438 = !DILocation(line: 48, column: 9, scope: !16390, inlinedAt: !17435)
!17439 = !DILocation(line: 1537, column: 6, scope: !17415)
!17440 = !DILocation(line: 1538, column: 3, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17436, file: !2645, line: 1537, column: 25)
!17442 = !DILocation(line: 1539, column: 2, scope: !17441)
!17443 = !DILocation(line: 1540, column: 1, scope: !17415)
!17444 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15014, file: !15014, line: 101, type: !15860, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17445)
!17445 = !{!17446}
!17446 = !DILocalVariable(name: "thread", arg: 1, scope: !17444, file: !15014, line: 101, type: !2540)
!17447 = !DILocation(line: 0, scope: !17444)
!17448 = !DILocation(line: 103, column: 23, scope: !17444)
!17449 = !DILocation(line: 103, column: 36, scope: !17444)
!17450 = !DILocation(line: 103, column: 55, scope: !17444)
!17451 = !DILocation(line: 103, column: 2, scope: !17444)
!17452 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2645, file: !2645, line: 1567, type: !17453, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17455)
!17453 = !DISubroutineType(types: !17454)
!17454 = !{!17217}
!17455 = !{!17456}
!17456 = !DILocalVariable(name: "ret", scope: !17452, file: !2645, line: 1577, type: !17217)
!17457 = !DILocation(line: 1577, column: 30, scope: !17452)
!17458 = !DILocation(line: 0, scope: !17452)
!17459 = !DILocation(line: 1582, column: 2, scope: !17452)
!17460 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2645, file: !2645, line: 1593, type: !9613, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!17461 = !DILocation(line: 1031, column: 3, scope: !16386, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 48, column: 10, scope: !16390, inlinedAt: !17463)
!17463 = distinct !DILocation(line: 1595, column: 10, scope: !17460)
!17464 = !DILocation(line: 0, scope: !16386, inlinedAt: !17462)
!17465 = !DILocation(line: 48, column: 9, scope: !16390, inlinedAt: !17463)
!17466 = !DILocation(line: 1595, column: 27, scope: !17460)
!17467 = !DILocation(line: 1595, column: 41, scope: !17460)
!17468 = !DILocation(line: 1595, column: 30, scope: !17460)
!17469 = !DILocation(line: 1595, column: 2, scope: !17460)
!17470 = distinct !DISubprogram(name: "z_thread_abort", scope: !2645, file: !2645, line: 1725, type: !15700, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17471)
!17471 = !{!17472, !17473}
!17472 = !DILocalVariable(name: "thread", arg: 1, scope: !17470, file: !2645, line: 1725, type: !2540)
!17473 = !DILocalVariable(name: "key", scope: !17470, file: !2645, line: 1727, type: !15734)
!17474 = !DILocation(line: 0, scope: !17470)
!17475 = !DILocation(line: 0, scope: !15742, inlinedAt: !17476)
!17476 = distinct !DILocation(line: 1727, column: 25, scope: !17470)
!17477 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !17478)
!17478 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !17476)
!17479 = !DILocation(line: 0, scope: !15751, inlinedAt: !17478)
!17480 = !DILocation(line: 1729, column: 20, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17470, file: !2645, line: 1729, column: 6)
!17482 = !DILocation(line: 1729, column: 33, scope: !17481)
!17483 = !DILocation(line: 1729, column: 48, scope: !17481)
!17484 = !DILocation(line: 1729, column: 6, scope: !17470)
!17485 = !DILocation(line: 0, scope: !15769, inlinedAt: !17486)
!17486 = distinct !DILocation(line: 1730, column: 3, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17481, file: !2645, line: 1729, column: 54)
!17488 = !DILocation(line: 0, scope: !15777, inlinedAt: !17489)
!17489 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !17486)
!17490 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !17489)
!17491 = !DILocation(line: 1732, column: 3, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17487, file: !2645, line: 1732, column: 3)
!17493 = !{i64 2155621480, i64 2155621496, i64 2155621522, i64 2155621550, i64 2155621570}
!17494 = !DILocation(line: 1733, column: 3, scope: !17487)
!17495 = !DILocation(line: 1736, column: 20, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17470, file: !2645, line: 1736, column: 6)
!17497 = !DILocation(line: 1736, column: 33, scope: !17496)
!17498 = !DILocation(line: 1736, column: 49, scope: !17496)
!17499 = !DILocation(line: 1736, column: 6, scope: !17470)
!17500 = !DILocation(line: 0, scope: !15769, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 1737, column: 3, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17496, file: !2645, line: 1736, column: 56)
!17503 = !DILocation(line: 0, scope: !15777, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !17501)
!17505 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !17504)
!17506 = !DILocation(line: 1738, column: 3, scope: !17502)
!17507 = !DILocation(line: 1775, column: 2, scope: !17470)
!17508 = !DILocation(line: 1776, column: 16, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17470, file: !2645, line: 1776, column: 6)
!17510 = !DILocation(line: 1776, column: 13, scope: !17509)
!17511 = !DILocation(line: 1776, column: 25, scope: !17509)
!17512 = !DILocation(line: 1031, column: 3, scope: !16386, inlinedAt: !17513)
!17513 = distinct !DILocation(line: 48, column: 10, scope: !16390, inlinedAt: !17514)
!17514 = distinct !DILocation(line: 1776, column: 29, scope: !17509)
!17515 = !DILocation(line: 0, scope: !16386, inlinedAt: !17513)
!17516 = !DILocation(line: 48, column: 9, scope: !16390, inlinedAt: !17514)
!17517 = !DILocation(line: 1776, column: 6, scope: !17470)
!17518 = !DILocation(line: 0, scope: !16353, inlinedAt: !17519)
!17519 = distinct !DILocation(line: 1777, column: 3, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17509, file: !2645, line: 1776, column: 47)
!17521 = !DILocation(line: 196, column: 9, scope: !16353, inlinedAt: !17519)
!17522 = !DILocation(line: 1779, column: 2, scope: !17520)
!17523 = !DILocation(line: 0, scope: !15769, inlinedAt: !17524)
!17524 = distinct !DILocation(line: 1780, column: 2, scope: !17470)
!17525 = !DILocation(line: 0, scope: !15777, inlinedAt: !17526)
!17526 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !17524)
!17527 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !17526)
!17528 = !DILocation(line: 1781, column: 1, scope: !17470)
!17529 = distinct !DISubprogram(name: "end_thread", scope: !2645, file: !2645, line: 1690, type: !15700, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17530)
!17530 = !{!17531}
!17531 = !DILocalVariable(name: "thread", arg: 1, scope: !17529, file: !2645, line: 1690, type: !2540)
!17532 = !DILocation(line: 0, scope: !17529)
!17533 = !DILocation(line: 1695, column: 20, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17529, file: !2645, line: 1695, column: 6)
!17535 = !DILocation(line: 1695, column: 33, scope: !17534)
!17536 = !DILocation(line: 1695, column: 49, scope: !17534)
!17537 = !DILocation(line: 1695, column: 6, scope: !17529)
!17538 = !DILocation(line: 1697, column: 29, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17534, file: !2645, line: 1695, column: 56)
!17540 = !DILocation(line: 1698, column: 7, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17539, file: !2645, line: 1698, column: 7)
!17542 = !DILocation(line: 1698, column: 7, scope: !17539)
!17543 = !DILocation(line: 0, scope: !15911, inlinedAt: !17544)
!17544 = distinct !DILocation(line: 1699, column: 4, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17541, file: !2645, line: 1698, column: 35)
!17546 = !DILocation(line: 266, column: 28, scope: !15911, inlinedAt: !17544)
!17547 = !DILocation(line: 0, scope: !15919, inlinedAt: !17548)
!17548 = distinct !DILocation(line: 268, column: 3, scope: !15923, inlinedAt: !17544)
!17549 = !DILocation(line: 234, column: 2, scope: !15919, inlinedAt: !17548)
!17550 = !DILocation(line: 1700, column: 3, scope: !17545)
!17551 = !DILocation(line: 1701, column: 20, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17539, file: !2645, line: 1701, column: 7)
!17553 = !DILocation(line: 1701, column: 30, scope: !17552)
!17554 = !DILocation(line: 1701, column: 7, scope: !17539)
!17555 = !DILocation(line: 1702, column: 4, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17552, file: !2645, line: 1701, column: 39)
!17557 = !DILocation(line: 1703, column: 3, scope: !17556)
!17558 = !DILocation(line: 1704, column: 9, scope: !17539)
!17559 = !DILocation(line: 1705, column: 23, scope: !17539)
!17560 = !DILocation(line: 1705, column: 3, scope: !17539)
!17561 = !DILocation(line: 1706, column: 3, scope: !17539)
!17562 = !DILocation(line: 1722, column: 2, scope: !17539)
!17563 = !DILocation(line: 1723, column: 1, scope: !17529)
!17564 = distinct !DISubprogram(name: "unpend_all", scope: !2645, file: !2645, line: 1674, type: !17565, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17567)
!17565 = !DISubroutineType(types: !17566)
!17566 = !{null, !2571}
!17567 = !{!17568, !17569}
!17568 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17564, file: !2645, line: 1674, type: !2571)
!17569 = !DILocalVariable(name: "thread", scope: !17564, file: !2645, line: 1676, type: !2540)
!17570 = !DILocation(line: 0, scope: !17564)
!17571 = !DILocation(line: 1678, column: 19, scope: !17564)
!17572 = !DILocation(line: 1678, column: 41, scope: !17564)
!17573 = !DILocation(line: 1678, column: 2, scope: !17564)
!17574 = !DILocation(line: 1679, column: 3, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17564, file: !2645, line: 1678, column: 50)
!17576 = !DILocation(line: 1680, column: 9, scope: !17575)
!17577 = !DILocalVariable(name: "thread", arg: 1, scope: !17578, file: !15034, line: 65, type: !2540)
!17578 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15034, file: !15034, line: 65, type: !17579, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17581)
!17579 = !DISubroutineType(types: !17580)
!17580 = !{null, !2540, !32}
!17581 = !{!17577, !17582}
!17582 = !DILocalVariable(name: "value", arg: 2, scope: !17578, file: !15034, line: 65, type: !32)
!17583 = !DILocation(line: 0, scope: !17578, inlinedAt: !17584)
!17584 = distinct !DILocation(line: 1681, column: 3, scope: !17575)
!17585 = !DILocation(line: 67, column: 15, scope: !17578, inlinedAt: !17584)
!17586 = !DILocation(line: 67, column: 33, scope: !17578, inlinedAt: !17584)
!17587 = !DILocation(line: 1682, column: 3, scope: !17575)
!17588 = distinct !{!17588, !17573, !17589}
!17589 = !DILocation(line: 1683, column: 2, scope: !17564)
!17590 = !DILocation(line: 1684, column: 1, scope: !17564)
!17591 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2645, file: !2645, line: 1794, type: !17592, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17594)
!17592 = !DISubroutineType(types: !17593)
!17593 = !{!125, !2540, !16533}
!17594 = !{!17595, !17596, !17597, !17598}
!17595 = !DILocalVariable(name: "thread", arg: 1, scope: !17591, file: !2645, line: 1794, type: !2540)
!17596 = !DILocalVariable(name: "timeout", arg: 2, scope: !17591, file: !2645, line: 1794, type: !16533)
!17597 = !DILocalVariable(name: "key", scope: !17591, file: !2645, line: 1796, type: !15734)
!17598 = !DILocalVariable(name: "ret", scope: !17591, file: !2645, line: 1797, type: !125)
!17599 = !DILocation(line: 0, scope: !17591)
!17600 = !DILocation(line: 0, scope: !15742, inlinedAt: !17601)
!17601 = distinct !DILocation(line: 1796, column: 25, scope: !17591)
!17602 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !17603)
!17603 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !17601)
!17604 = !DILocation(line: 0, scope: !15751, inlinedAt: !17603)
!17605 = !DILocation(line: 1801, column: 20, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17591, file: !2645, line: 1801, column: 6)
!17607 = !DILocation(line: 1801, column: 33, scope: !17606)
!17608 = !DILocation(line: 1801, column: 49, scope: !17606)
!17609 = !DILocation(line: 1801, column: 6, scope: !17591)
!17610 = !DILocation(line: 1803, column: 13, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17606, file: !2645, line: 1803, column: 13)
!17612 = !DILocation(line: 1803, column: 13, scope: !17606)
!17613 = !DILocation(line: 1805, column: 24, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17611, file: !2645, line: 1805, column: 13)
!17615 = !DILocation(line: 1805, column: 21, scope: !17614)
!17616 = !DILocation(line: 1805, column: 34, scope: !17614)
!17617 = !DILocation(line: 1806, column: 20, scope: !17614)
!17618 = !DILocation(line: 1806, column: 44, scope: !17614)
!17619 = !DILocation(line: 1806, column: 30, scope: !17614)
!17620 = !DILocation(line: 1805, column: 13, scope: !17611)
!17621 = !DILocation(line: 1810, column: 42, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17614, file: !2645, line: 1808, column: 9)
!17623 = !DILocation(line: 1810, column: 3, scope: !17622)
!17624 = !DILocation(line: 1811, column: 22, scope: !17622)
!17625 = !DILocation(line: 1811, column: 3, scope: !17622)
!17626 = !DILocation(line: 0, scope: !16353, inlinedAt: !17627)
!17627 = distinct !DILocation(line: 1814, column: 9, scope: !17622)
!17628 = !DILocation(line: 196, column: 9, scope: !16353, inlinedAt: !17627)
!17629 = !DILocation(line: 1817, column: 3, scope: !17622)
!17630 = !DILocation(line: 0, scope: !17606)
!17631 = !DILocation(line: 0, scope: !15769, inlinedAt: !17632)
!17632 = distinct !DILocation(line: 1822, column: 2, scope: !17591)
!17633 = !DILocation(line: 0, scope: !15777, inlinedAt: !17634)
!17634 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !17632)
!17635 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !17634)
!17636 = !DILocation(line: 1823, column: 2, scope: !17591)
!17637 = !DILocation(line: 1824, column: 1, scope: !17591)
!17638 = distinct !DISubprogram(name: "z_sched_wake", scope: !2645, file: !2645, line: 1882, type: !17639, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17641)
!17639 = !DISubroutineType(types: !17640)
!17640 = !{!153, !2571, !125, !124}
!17641 = !{!17642, !17643, !17644, !17645, !17646, !17647, !17649}
!17642 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17638, file: !2645, line: 1882, type: !2571)
!17643 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17638, file: !2645, line: 1882, type: !125)
!17644 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17638, file: !2645, line: 1882, type: !124)
!17645 = !DILocalVariable(name: "thread", scope: !17638, file: !2645, line: 1884, type: !2540)
!17646 = !DILocalVariable(name: "ret", scope: !17638, file: !2645, line: 1885, type: !153)
!17647 = !DILocalVariable(name: "__i", scope: !17648, file: !2645, line: 1887, type: !15734)
!17648 = distinct !DILexicalBlock(scope: !17638, file: !2645, line: 1887, column: 2)
!17649 = !DILocalVariable(name: "__key", scope: !17648, file: !2645, line: 1887, type: !15734)
!17650 = !DILocation(line: 0, scope: !17638)
!17651 = !DILocation(line: 0, scope: !17648)
!17652 = !DILocation(line: 0, scope: !15742, inlinedAt: !17653)
!17653 = distinct !DILocation(line: 1887, column: 2, scope: !17648)
!17654 = !DILocation(line: 55, column: 2, scope: !15751, inlinedAt: !17655)
!17655 = distinct !DILocation(line: 145, column: 10, scope: !15742, inlinedAt: !17653)
!17656 = !DILocation(line: 0, scope: !15751, inlinedAt: !17655)
!17657 = !DILocation(line: 1888, column: 12, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17659, file: !2645, line: 1887, column: 26)
!17659 = distinct !DILexicalBlock(scope: !17648, file: !2645, line: 1887, column: 2)
!17660 = !DILocation(line: 1890, column: 14, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17658, file: !2645, line: 1890, column: 7)
!17662 = !DILocation(line: 1890, column: 7, scope: !17658)
!17663 = !DILocalVariable(name: "thread", arg: 1, scope: !17664, file: !17665, line: 134, type: !2540)
!17664 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17665, file: !17665, line: 134, type: !17666, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17668)
!17665 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17666 = !DISubroutineType(types: !17667)
!17667 = !{null, !2540, !32, !124}
!17668 = !{!17663, !17669, !17670}
!17669 = !DILocalVariable(name: "value", arg: 2, scope: !17664, file: !17665, line: 135, type: !32)
!17670 = !DILocalVariable(name: "data", arg: 3, scope: !17664, file: !17665, line: 136, type: !124)
!17671 = !DILocation(line: 0, scope: !17664, inlinedAt: !17672)
!17672 = distinct !DILocation(line: 1891, column: 4, scope: !17673)
!17673 = distinct !DILexicalBlock(scope: !17661, file: !2645, line: 1890, column: 23)
!17674 = !DILocation(line: 0, scope: !17578, inlinedAt: !17675)
!17675 = distinct !DILocation(line: 138, column: 2, scope: !17664, inlinedAt: !17672)
!17676 = !DILocation(line: 67, column: 15, scope: !17578, inlinedAt: !17675)
!17677 = !DILocation(line: 67, column: 33, scope: !17578, inlinedAt: !17675)
!17678 = !DILocation(line: 139, column: 15, scope: !17664, inlinedAt: !17672)
!17679 = !DILocation(line: 139, column: 25, scope: !17664, inlinedAt: !17672)
!17680 = !DILocation(line: 1894, column: 4, scope: !17673)
!17681 = !DILocation(line: 1895, column: 10, scope: !17673)
!17682 = !DILocation(line: 1896, column: 4, scope: !17673)
!17683 = !DILocation(line: 1898, column: 3, scope: !17673)
!17684 = !DILocation(line: 0, scope: !15769, inlinedAt: !17685)
!17685 = distinct !DILocation(line: 1887, column: 2, scope: !17659)
!17686 = !DILocation(line: 0, scope: !15777, inlinedAt: !17687)
!17687 = distinct !DILocation(line: 215, column: 2, scope: !15769, inlinedAt: !17685)
!17688 = !DILocation(line: 95, column: 2, scope: !15777, inlinedAt: !17687)
!17689 = !DILocation(line: 1901, column: 2, scope: !17638)
!17690 = distinct !DISubprogram(name: "z_sched_wait", scope: !2645, file: !2645, line: 1904, type: !17691, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17694)
!17691 = !DISubroutineType(types: !17692)
!17692 = !{!125, !15745, !15734, !2571, !16533, !17693}
!17693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!17694 = !{!17695, !17696, !17697, !17698, !17699, !17700}
!17695 = !DILocalVariable(name: "lock", arg: 1, scope: !17690, file: !2645, line: 1904, type: !15745)
!17696 = !DILocalVariable(name: "key", arg: 2, scope: !17690, file: !2645, line: 1904, type: !15734)
!17697 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17690, file: !2645, line: 1905, type: !2571)
!17698 = !DILocalVariable(name: "timeout", arg: 4, scope: !17690, file: !2645, line: 1905, type: !16533)
!17699 = !DILocalVariable(name: "data", arg: 5, scope: !17690, file: !2645, line: 1905, type: !17693)
!17700 = !DILocalVariable(name: "ret", scope: !17690, file: !2645, line: 1907, type: !125)
!17701 = !DILocation(line: 0, scope: !17690)
!17702 = !DILocation(line: 1907, column: 12, scope: !17690)
!17703 = !DILocation(line: 1909, column: 11, scope: !17704)
!17704 = distinct !DILexicalBlock(scope: !17690, file: !2645, line: 1909, column: 6)
!17705 = !DILocation(line: 1909, column: 6, scope: !17690)
!17706 = !DILocation(line: 1910, column: 11, scope: !17707)
!17707 = distinct !DILexicalBlock(scope: !17704, file: !2645, line: 1909, column: 20)
!17708 = !DILocation(line: 1910, column: 26, scope: !17707)
!17709 = !DILocation(line: 1910, column: 9, scope: !17707)
!17710 = !DILocation(line: 1911, column: 2, scope: !17707)
!17711 = !DILocation(line: 1912, column: 2, scope: !17690)
!17712 = distinct !DISubprogram(name: "z_data_copy", scope: !17713, file: !17713, line: 22, type: !3300, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3283, retainedNodes: !639)
!17713 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17714 = !DILocation(line: 24, column: 2, scope: !17712)
!17715 = !DILocation(line: 27, column: 2, scope: !17712)
!17716 = !DILocation(line: 31, column: 2, scope: !17712)
!17717 = !DILocation(line: 71, column: 1, scope: !17712)
!17718 = distinct !DISubprogram(name: "z_add_timeout", scope: !2682, file: !2682, line: 88, type: !17719, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17725)
!17719 = !DISubroutineType(types: !17720)
!17720 = !{null, !2655, !2674, !17721}
!17721 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1897, line: 67, baseType: !17722)
!17722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1897, line: 65, size: 64, elements: !17723)
!17723 = !{!17724}
!17724 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17722, file: !1897, line: 66, baseType: !1896, size: 64)
!17725 = !{!17726, !17727, !17728, !17729, !17735, !17736, !17739, !17742}
!17726 = !DILocalVariable(name: "to", arg: 1, scope: !17718, file: !2682, line: 88, type: !2655)
!17727 = !DILocalVariable(name: "fn", arg: 2, scope: !17718, file: !2682, line: 88, type: !2674)
!17728 = !DILocalVariable(name: "timeout", arg: 3, scope: !17718, file: !2682, line: 89, type: !17721)
!17729 = !DILocalVariable(name: "__i", scope: !17730, file: !2682, line: 102, type: !17731)
!17730 = distinct !DILexicalBlock(scope: !17718, file: !2682, line: 102, column: 2)
!17731 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !17732)
!17732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !17733)
!17733 = !{!17734}
!17734 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17732, file: !638, line: 33, baseType: !125, size: 32)
!17735 = !DILocalVariable(name: "__key", scope: !17730, file: !2682, line: 102, type: !17731)
!17736 = !DILocalVariable(name: "t", scope: !17737, file: !2682, line: 103, type: !2655)
!17737 = distinct !DILexicalBlock(scope: !17738, file: !2682, line: 102, column: 24)
!17738 = distinct !DILexicalBlock(scope: !17730, file: !2682, line: 102, column: 2)
!17739 = !DILocalVariable(name: "ticks", scope: !17740, file: !2682, line: 107, type: !1896)
!17740 = distinct !DILexicalBlock(scope: !17741, file: !2682, line: 106, column: 39)
!17741 = distinct !DILexicalBlock(scope: !17737, file: !2682, line: 105, column: 7)
!17742 = !DILocalVariable(name: "next_time", scope: !17743, file: !2682, line: 137, type: !909)
!17743 = distinct !DILexicalBlock(scope: !17744, file: !2682, line: 127, column: 22)
!17744 = distinct !DILexicalBlock(scope: !17737, file: !2682, line: 127, column: 7)
!17745 = !DILocation(line: 0, scope: !17718)
!17746 = !DILocation(line: 91, column: 6, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17718, file: !2682, line: 91, column: 6)
!17748 = !DILocation(line: 91, column: 6, scope: !17718)
!17749 = !DILocation(line: 100, column: 6, scope: !17718)
!17750 = !DILocation(line: 100, column: 9, scope: !17718)
!17751 = !DILocation(line: 0, scope: !17730)
!17752 = !DILocalVariable(name: "l", arg: 1, scope: !17753, file: !638, line: 136, type: !17756)
!17753 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !17754, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17757)
!17754 = !DISubroutineType(types: !17755)
!17755 = !{!17731, !17756}
!17756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 32)
!17757 = !{!17752, !17758}
!17758 = !DILocalVariable(name: "k", scope: !17753, file: !638, line: 139, type: !17731)
!17759 = !DILocation(line: 0, scope: !17753, inlinedAt: !17760)
!17760 = distinct !DILocation(line: 102, column: 2, scope: !17730)
!17761 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !17766)
!17762 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6838, file: !6838, line: 42, type: !6839, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17763)
!17763 = !{!17764, !17765}
!17764 = !DILocalVariable(name: "key", scope: !17762, file: !6838, line: 44, type: !32)
!17765 = !DILocalVariable(name: "tmp", scope: !17762, file: !6838, line: 53, type: !32)
!17766 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !17760)
!17767 = !{i64 2229459}
!17768 = !DILocation(line: 0, scope: !17762, inlinedAt: !17766)
!17769 = !DILocation(line: 106, column: 33, scope: !17741)
!17770 = !DILocation(line: 105, column: 7, scope: !17737)
!17771 = !DILocation(line: 107, column: 50, scope: !17740)
!17772 = !DILocation(line: 107, column: 48, scope: !17740)
!17773 = !DILocation(line: 0, scope: !17740)
!17774 = !DILocation(line: 109, column: 17, scope: !17740)
!17775 = !DILocation(line: 110, column: 3, scope: !17740)
!17776 = !DILocation(line: 111, column: 31, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17741, file: !2682, line: 110, column: 10)
!17778 = !DILocation(line: 111, column: 37, scope: !17777)
!17779 = !DILocation(line: 111, column: 35, scope: !17777)
!17780 = !DILocation(line: 0, scope: !17741)
!17781 = !DILocation(line: 109, column: 8, scope: !17740)
!17782 = !DILocation(line: 109, column: 15, scope: !17740)
!17783 = !DILocation(line: 114, column: 12, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17737, file: !2682, line: 114, column: 3)
!17785 = !DILocation(line: 0, scope: !17737)
!17786 = !DILocation(line: 114, column: 3, scope: !17784)
!17787 = !DILocation(line: 115, column: 24, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17789, file: !2682, line: 115, column: 8)
!17789 = distinct !DILexicalBlock(scope: !17790, file: !2682, line: 114, column: 45)
!17790 = distinct !DILexicalBlock(scope: !17784, file: !2682, line: 114, column: 3)
!17791 = !DILocation(line: 115, column: 11, scope: !17788)
!17792 = !DILocation(line: 115, column: 18, scope: !17788)
!17793 = !DILocation(line: 115, column: 8, scope: !17789)
!17794 = !DILocation(line: 116, column: 15, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17788, file: !2682, line: 115, column: 32)
!17796 = !DILocation(line: 117, column: 26, scope: !17795)
!17797 = !DILocation(line: 117, column: 37, scope: !17795)
!17798 = !DILocation(line: 117, column: 5, scope: !17795)
!17799 = !DILocation(line: 123, column: 7, scope: !17737)
!17800 = !DILocation(line: 120, column: 15, scope: !17789)
!17801 = !DILocation(line: 114, column: 36, scope: !17790)
!17802 = distinct !{!17802, !17786, !17803}
!17803 = !DILocation(line: 121, column: 3, scope: !17784)
!17804 = !DILocation(line: 124, column: 41, scope: !17805)
!17805 = distinct !DILexicalBlock(scope: !17806, file: !2682, line: 123, column: 18)
!17806 = distinct !DILexicalBlock(scope: !17737, file: !2682, line: 123, column: 7)
!17807 = !DILocation(line: 124, column: 4, scope: !17805)
!17808 = !DILocation(line: 125, column: 3, scope: !17805)
!17809 = !DILocation(line: 127, column: 13, scope: !17744)
!17810 = !DILocation(line: 127, column: 10, scope: !17744)
!17811 = !DILocation(line: 127, column: 7, scope: !17737)
!17812 = !DILocation(line: 137, column: 24, scope: !17743)
!17813 = !DILocation(line: 0, scope: !17743)
!17814 = !DILocation(line: 139, column: 18, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17743, file: !2682, line: 139, column: 8)
!17816 = !DILocation(line: 139, column: 23, scope: !17815)
!17817 = !DILocation(line: 141, column: 5, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17815, file: !2682, line: 140, column: 48)
!17819 = !DILocation(line: 142, column: 4, scope: !17818)
!17820 = !DILocalVariable(name: "key", arg: 2, scope: !17821, file: !638, line: 190, type: !17731)
!17821 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !17822, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17824)
!17822 = !DISubroutineType(types: !17823)
!17823 = !{null, !17756, !17731}
!17824 = !{!17825, !17820}
!17825 = !DILocalVariable(name: "l", arg: 1, scope: !17821, file: !638, line: 189, type: !17756)
!17826 = !DILocation(line: 0, scope: !17821, inlinedAt: !17827)
!17827 = distinct !DILocation(line: 102, column: 2, scope: !17738)
!17828 = !DILocalVariable(name: "key", arg: 1, scope: !17829, file: !6838, line: 84, type: !32)
!17829 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6838, file: !6838, line: 84, type: !6849, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17830)
!17830 = !{!17828}
!17831 = !DILocation(line: 0, scope: !17829, inlinedAt: !17832)
!17832 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !17827)
!17833 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !17832)
!17834 = !{i64 2230276}
!17835 = !DILocation(line: 148, column: 1, scope: !17718)
!17836 = distinct !DISubprogram(name: "elapsed", scope: !2682, file: !2682, line: 62, type: !17837, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !639)
!17837 = !DISubroutineType(types: !17838)
!17838 = !{!909}
!17839 = !DILocation(line: 64, column: 9, scope: !17836)
!17840 = !DILocation(line: 64, column: 28, scope: !17836)
!17841 = !DILocation(line: 64, column: 35, scope: !17836)
!17842 = !DILocation(line: 64, column: 2, scope: !17836)
!17843 = distinct !DISubprogram(name: "first", scope: !2682, file: !2682, line: 39, type: !17844, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17846)
!17844 = !DISubroutineType(types: !17845)
!17845 = !{!2655}
!17846 = !{!17847}
!17847 = !DILocalVariable(name: "t", scope: !17843, file: !2682, line: 41, type: !17848)
!17848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!17849 = !DILocation(line: 41, column: 19, scope: !17843)
!17850 = !DILocation(line: 0, scope: !17843)
!17851 = !DILocation(line: 43, column: 9, scope: !17843)
!17852 = !DILocation(line: 43, column: 2, scope: !17843)
!17853 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !17854, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17856)
!17854 = !DISubroutineType(types: !17855)
!17855 = !{null, !17848, !17848}
!17856 = !{!17857, !17858, !17859}
!17857 = !DILocalVariable(name: "successor", arg: 1, scope: !17853, file: !541, line: 443, type: !17848)
!17858 = !DILocalVariable(name: "node", arg: 2, scope: !17853, file: !541, line: 443, type: !17848)
!17859 = !DILocalVariable(name: "prev", scope: !17853, file: !541, line: 445, type: !17860)
!17860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17848)
!17861 = !DILocation(line: 0, scope: !17853)
!17862 = !DILocation(line: 445, column: 39, scope: !17853)
!17863 = !DILocation(line: 447, column: 8, scope: !17853)
!17864 = !DILocation(line: 447, column: 13, scope: !17853)
!17865 = !DILocation(line: 448, column: 8, scope: !17853)
!17866 = !DILocation(line: 448, column: 13, scope: !17853)
!17867 = !DILocation(line: 449, column: 8, scope: !17853)
!17868 = !DILocation(line: 449, column: 13, scope: !17853)
!17869 = !DILocation(line: 450, column: 18, scope: !17853)
!17870 = !DILocation(line: 451, column: 1, scope: !17853)
!17871 = distinct !DISubprogram(name: "next", scope: !2682, file: !2682, line: 46, type: !17872, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17874)
!17872 = !DISubroutineType(types: !17873)
!17873 = !{!2655, !2655}
!17874 = !{!17875, !17876}
!17875 = !DILocalVariable(name: "t", arg: 1, scope: !17871, file: !2682, line: 46, type: !2655)
!17876 = !DILocalVariable(name: "n", scope: !17871, file: !2682, line: 48, type: !17848)
!17877 = !DILocation(line: 0, scope: !17871)
!17878 = !DILocation(line: 48, column: 58, scope: !17871)
!17879 = !DILocation(line: 48, column: 19, scope: !17871)
!17880 = !DILocation(line: 50, column: 9, scope: !17871)
!17881 = !DILocation(line: 50, column: 2, scope: !17871)
!17882 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !17883, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17886)
!17883 = !DISubroutineType(types: !17884)
!17884 = !{null, !17885, !17848}
!17885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!17886 = !{!17887, !17888, !17889}
!17887 = !DILocalVariable(name: "list", arg: 1, scope: !17882, file: !541, line: 404, type: !17885)
!17888 = !DILocalVariable(name: "node", arg: 2, scope: !17882, file: !541, line: 404, type: !17848)
!17889 = !DILocalVariable(name: "tail", scope: !17882, file: !541, line: 406, type: !17860)
!17890 = !DILocation(line: 0, scope: !17882)
!17891 = !DILocation(line: 406, column: 34, scope: !17882)
!17892 = !DILocation(line: 408, column: 8, scope: !17882)
!17893 = !DILocation(line: 408, column: 13, scope: !17882)
!17894 = !DILocation(line: 409, column: 8, scope: !17882)
!17895 = !DILocation(line: 409, column: 13, scope: !17882)
!17896 = !DILocation(line: 411, column: 8, scope: !17882)
!17897 = !DILocation(line: 411, column: 13, scope: !17882)
!17898 = !DILocation(line: 412, column: 13, scope: !17882)
!17899 = !DILocation(line: 413, column: 1, scope: !17882)
!17900 = distinct !DISubprogram(name: "next_timeout", scope: !2682, file: !2682, line: 67, type: !17837, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17901)
!17901 = !{!17902, !17903, !17904}
!17902 = !DILocalVariable(name: "to", scope: !17900, file: !2682, line: 69, type: !2655)
!17903 = !DILocalVariable(name: "ticks_elapsed", scope: !17900, file: !2682, line: 70, type: !909)
!17904 = !DILocalVariable(name: "ret", scope: !17900, file: !2682, line: 71, type: !909)
!17905 = !DILocation(line: 69, column: 24, scope: !17900)
!17906 = !DILocation(line: 0, scope: !17900)
!17907 = !DILocation(line: 70, column: 26, scope: !17900)
!17908 = !DILocation(line: 73, column: 10, scope: !17909)
!17909 = distinct !DILexicalBlock(scope: !17900, file: !2682, line: 73, column: 6)
!17910 = !DILocation(line: 73, column: 19, scope: !17909)
!17911 = !DILocation(line: 74, column: 21, scope: !17909)
!17912 = !DILocation(line: 74, column: 30, scope: !17909)
!17913 = !DILocation(line: 74, column: 28, scope: !17909)
!17914 = !DILocation(line: 74, column: 45, scope: !17909)
!17915 = !DILocation(line: 73, column: 6, scope: !17900)
!17916 = !DILocation(line: 77, column: 9, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17909, file: !2682, line: 76, column: 9)
!17918 = !DILocation(line: 0, scope: !17909)
!17919 = !DILocation(line: 81, column: 20, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17900, file: !2682, line: 81, column: 6)
!17921 = !DILocation(line: 81, column: 6, scope: !17920)
!17922 = !DILocation(line: 81, column: 32, scope: !17920)
!17923 = !DILocation(line: 85, column: 2, scope: !17900)
!17924 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !17925, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17927)
!17925 = !DISubroutineType(types: !17926)
!17926 = !{!17848, !17885, !17848}
!17927 = !{!17928, !17929}
!17928 = !DILocalVariable(name: "list", arg: 1, scope: !17924, file: !541, line: 341, type: !17885)
!17929 = !DILocalVariable(name: "node", arg: 2, scope: !17924, file: !541, line: 342, type: !17848)
!17930 = !DILocation(line: 0, scope: !17924)
!17931 = !DILocation(line: 344, column: 15, scope: !17924)
!17932 = !DILocation(line: 344, column: 9, scope: !17924)
!17933 = !DILocation(line: 344, column: 26, scope: !17924)
!17934 = !DILocation(line: 344, column: 2, scope: !17924)
!17935 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !17925, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17936)
!17936 = !{!17937, !17938}
!17937 = !DILocalVariable(name: "list", arg: 1, scope: !17935, file: !541, line: 325, type: !17885)
!17938 = !DILocalVariable(name: "node", arg: 2, scope: !17935, file: !541, line: 326, type: !17848)
!17939 = !DILocation(line: 0, scope: !17935)
!17940 = !DILocation(line: 328, column: 24, scope: !17935)
!17941 = !DILocation(line: 328, column: 15, scope: !17935)
!17942 = !DILocation(line: 328, column: 9, scope: !17935)
!17943 = !DILocation(line: 328, column: 45, scope: !17935)
!17944 = !DILocation(line: 328, column: 2, scope: !17935)
!17945 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !17946, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17948)
!17946 = !DISubroutineType(types: !17947)
!17947 = !{!17848, !17885}
!17948 = !{!17949}
!17949 = !DILocalVariable(name: "list", arg: 1, scope: !17945, file: !541, line: 294, type: !17885)
!17950 = !DILocation(line: 0, scope: !17945)
!17951 = !DILocation(line: 296, column: 9, scope: !17945)
!17952 = !DILocation(line: 296, column: 2, scope: !17945)
!17953 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !17954, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17956)
!17954 = !DISubroutineType(types: !17955)
!17955 = !{!153, !17885}
!17956 = !{!17957}
!17957 = !DILocalVariable(name: "list", arg: 1, scope: !17953, file: !541, line: 266, type: !17885)
!17958 = !DILocation(line: 0, scope: !17953)
!17959 = !DILocation(line: 268, column: 15, scope: !17953)
!17960 = !DILocation(line: 268, column: 20, scope: !17953)
!17961 = !DILocation(line: 268, column: 2, scope: !17953)
!17962 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2682, file: !2682, line: 150, type: !17963, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17965)
!17963 = !DISubroutineType(types: !17964)
!17964 = !{!125, !2655}
!17965 = !{!17966, !17967, !17968, !17970}
!17966 = !DILocalVariable(name: "to", arg: 1, scope: !17962, file: !2682, line: 150, type: !2655)
!17967 = !DILocalVariable(name: "ret", scope: !17962, file: !2682, line: 152, type: !125)
!17968 = !DILocalVariable(name: "__i", scope: !17969, file: !2682, line: 154, type: !17731)
!17969 = distinct !DILexicalBlock(scope: !17962, file: !2682, line: 154, column: 2)
!17970 = !DILocalVariable(name: "__key", scope: !17969, file: !2682, line: 154, type: !17731)
!17971 = !DILocation(line: 0, scope: !17962)
!17972 = !DILocation(line: 0, scope: !17969)
!17973 = !DILocation(line: 0, scope: !17753, inlinedAt: !17974)
!17974 = distinct !DILocation(line: 154, column: 2, scope: !17969)
!17975 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !17976)
!17976 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !17974)
!17977 = !DILocation(line: 0, scope: !17762, inlinedAt: !17976)
!17978 = !DILocation(line: 155, column: 7, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17980, file: !2682, line: 155, column: 7)
!17980 = distinct !DILexicalBlock(scope: !17981, file: !2682, line: 154, column: 24)
!17981 = distinct !DILexicalBlock(scope: !17969, file: !2682, line: 154, column: 2)
!17982 = !DILocation(line: 155, column: 7, scope: !17980)
!17983 = !DILocation(line: 156, column: 4, scope: !17984)
!17984 = distinct !DILexicalBlock(scope: !17979, file: !2682, line: 155, column: 39)
!17985 = !DILocation(line: 158, column: 3, scope: !17984)
!17986 = !DILocation(line: 0, scope: !17821, inlinedAt: !17987)
!17987 = distinct !DILocation(line: 154, column: 2, scope: !17981)
!17988 = !DILocation(line: 0, scope: !17829, inlinedAt: !17989)
!17989 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !17987)
!17990 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !17989)
!17991 = !DILocation(line: 161, column: 2, scope: !17962)
!17992 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !17993, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !17997)
!17993 = !DISubroutineType(types: !17994)
!17994 = !{!153, !17995}
!17995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17996, size: 32)
!17996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2659)
!17997 = !{!17998}
!17998 = !DILocalVariable(name: "node", arg: 1, scope: !17992, file: !541, line: 225, type: !17995)
!17999 = !DILocation(line: 0, scope: !17992)
!18000 = !DILocation(line: 227, column: 15, scope: !17992)
!18001 = !DILocation(line: 227, column: 20, scope: !17992)
!18002 = !DILocation(line: 227, column: 2, scope: !17992)
!18003 = distinct !DISubprogram(name: "remove_timeout", scope: !2682, file: !2682, line: 53, type: !2676, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18004)
!18004 = !{!18005}
!18005 = !DILocalVariable(name: "t", arg: 1, scope: !18003, file: !2682, line: 53, type: !2655)
!18006 = !DILocation(line: 0, scope: !18003)
!18007 = !DILocation(line: 55, column: 6, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !18003, file: !2682, line: 55, column: 6)
!18009 = !DILocation(line: 55, column: 14, scope: !18008)
!18010 = !DILocation(line: 55, column: 6, scope: !18003)
!18011 = !DILocation(line: 56, column: 25, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18008, file: !2682, line: 55, column: 23)
!18013 = !DILocation(line: 56, column: 12, scope: !18012)
!18014 = !DILocation(line: 56, column: 19, scope: !18012)
!18015 = !DILocation(line: 57, column: 2, scope: !18012)
!18016 = !DILocation(line: 59, column: 23, scope: !18003)
!18017 = !DILocation(line: 59, column: 2, scope: !18003)
!18018 = !DILocation(line: 60, column: 1, scope: !18003)
!18019 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !18020, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18022)
!18020 = !DISubroutineType(types: !18021)
!18021 = !{null, !17848}
!18022 = !{!18023, !18024, !18025}
!18023 = !DILocalVariable(name: "node", arg: 1, scope: !18019, file: !541, line: 496, type: !17848)
!18024 = !DILocalVariable(name: "prev", scope: !18019, file: !541, line: 498, type: !17860)
!18025 = !DILocalVariable(name: "next", scope: !18019, file: !541, line: 499, type: !17860)
!18026 = !DILocation(line: 0, scope: !18019)
!18027 = !DILocation(line: 498, column: 34, scope: !18019)
!18028 = !DILocation(line: 499, column: 34, scope: !18019)
!18029 = !DILocation(line: 501, column: 8, scope: !18019)
!18030 = !DILocation(line: 501, column: 13, scope: !18019)
!18031 = !DILocation(line: 502, column: 8, scope: !18019)
!18032 = !DILocation(line: 502, column: 13, scope: !18019)
!18033 = !DILocation(line: 503, column: 2, scope: !18019)
!18034 = !DILocation(line: 504, column: 1, scope: !18019)
!18035 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !18020, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18036)
!18036 = !{!18037}
!18037 = !DILocalVariable(name: "node", arg: 1, scope: !18035, file: !541, line: 211, type: !17848)
!18038 = !DILocation(line: 0, scope: !18035)
!18039 = !DILocation(line: 213, column: 8, scope: !18035)
!18040 = !DILocation(line: 213, column: 13, scope: !18035)
!18041 = !DILocation(line: 214, column: 8, scope: !18035)
!18042 = !DILocation(line: 214, column: 13, scope: !18035)
!18043 = !DILocation(line: 215, column: 1, scope: !18035)
!18044 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2682, file: !2682, line: 183, type: !18045, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18049)
!18045 = !DISubroutineType(types: !18046)
!18046 = !{!1896, !18047}
!18047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18048, size: 32)
!18048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2656)
!18049 = !{!18050, !18051, !18052, !18054}
!18050 = !DILocalVariable(name: "timeout", arg: 1, scope: !18044, file: !2682, line: 183, type: !18047)
!18051 = !DILocalVariable(name: "ticks", scope: !18044, file: !2682, line: 185, type: !1896)
!18052 = !DILocalVariable(name: "__i", scope: !18053, file: !2682, line: 187, type: !17731)
!18053 = distinct !DILexicalBlock(scope: !18044, file: !2682, line: 187, column: 2)
!18054 = !DILocalVariable(name: "__key", scope: !18053, file: !2682, line: 187, type: !17731)
!18055 = !DILocation(line: 0, scope: !18044)
!18056 = !DILocation(line: 0, scope: !18053)
!18057 = !DILocation(line: 0, scope: !17753, inlinedAt: !18058)
!18058 = distinct !DILocation(line: 187, column: 2, scope: !18053)
!18059 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18060)
!18060 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18058)
!18061 = !DILocation(line: 0, scope: !17762, inlinedAt: !18060)
!18062 = !DILocation(line: 188, column: 11, scope: !18063)
!18063 = distinct !DILexicalBlock(scope: !18064, file: !2682, line: 187, column: 24)
!18064 = distinct !DILexicalBlock(scope: !18053, file: !2682, line: 187, column: 2)
!18065 = !DILocation(line: 0, scope: !17821, inlinedAt: !18066)
!18066 = distinct !DILocation(line: 187, column: 2, scope: !18064)
!18067 = !DILocation(line: 0, scope: !17829, inlinedAt: !18068)
!18068 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18066)
!18069 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18068)
!18070 = !DILocation(line: 191, column: 2, scope: !18044)
!18071 = distinct !DISubprogram(name: "timeout_rem", scope: !2682, file: !2682, line: 165, type: !18045, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18072)
!18072 = !{!18073, !18074, !18075}
!18073 = !DILocalVariable(name: "timeout", arg: 1, scope: !18071, file: !2682, line: 165, type: !18047)
!18074 = !DILocalVariable(name: "ticks", scope: !18071, file: !2682, line: 167, type: !1896)
!18075 = !DILocalVariable(name: "t", scope: !18076, file: !2682, line: 173, type: !2655)
!18076 = distinct !DILexicalBlock(scope: !18071, file: !2682, line: 173, column: 2)
!18077 = !DILocation(line: 0, scope: !18071)
!18078 = !DILocation(line: 169, column: 6, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18071, file: !2682, line: 169, column: 6)
!18080 = !DILocation(line: 169, column: 6, scope: !18071)
!18081 = !DILocation(line: 173, column: 28, scope: !18076)
!18082 = !DILocation(line: 0, scope: !18076)
!18083 = !DILocation(line: 173, column: 39, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18076, file: !2682, line: 173, column: 2)
!18085 = !DILocation(line: 173, column: 2, scope: !18076)
!18086 = !DILocation(line: 174, column: 15, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18084, file: !2682, line: 173, column: 61)
!18088 = !DILocation(line: 174, column: 9, scope: !18087)
!18089 = !DILocation(line: 175, column: 15, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18087, file: !2682, line: 175, column: 7)
!18091 = !DILocation(line: 175, column: 7, scope: !18087)
!18092 = !DILocation(line: 173, column: 52, scope: !18084)
!18093 = distinct !{!18093, !18085, !18094}
!18094 = !DILocation(line: 178, column: 2, scope: !18076)
!18095 = !DILocation(line: 180, column: 17, scope: !18071)
!18096 = !DILocation(line: 180, column: 15, scope: !18071)
!18097 = !DILocation(line: 180, column: 2, scope: !18071)
!18098 = !DILocation(line: 181, column: 1, scope: !18071)
!18099 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15408, file: !15408, line: 35, type: !18100, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18102)
!18100 = !DISubroutineType(types: !18101)
!18101 = !{!153, !18047}
!18102 = !{!18103}
!18103 = !DILocalVariable(name: "to", arg: 1, scope: !18099, file: !15408, line: 35, type: !18047)
!18104 = !DILocation(line: 0, scope: !18099)
!18105 = !DILocation(line: 37, column: 35, scope: !18099)
!18106 = !DILocation(line: 37, column: 10, scope: !18099)
!18107 = !DILocation(line: 37, column: 9, scope: !18099)
!18108 = !DILocation(line: 37, column: 2, scope: !18099)
!18109 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2682, file: !2682, line: 194, type: !18045, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18110)
!18110 = !{!18111, !18112, !18113, !18115}
!18111 = !DILocalVariable(name: "timeout", arg: 1, scope: !18109, file: !2682, line: 194, type: !18047)
!18112 = !DILocalVariable(name: "ticks", scope: !18109, file: !2682, line: 196, type: !1896)
!18113 = !DILocalVariable(name: "__i", scope: !18114, file: !2682, line: 198, type: !17731)
!18114 = distinct !DILexicalBlock(scope: !18109, file: !2682, line: 198, column: 2)
!18115 = !DILocalVariable(name: "__key", scope: !18114, file: !2682, line: 198, type: !17731)
!18116 = !DILocation(line: 0, scope: !18109)
!18117 = !DILocation(line: 0, scope: !18114)
!18118 = !DILocation(line: 0, scope: !17753, inlinedAt: !18119)
!18119 = distinct !DILocation(line: 198, column: 2, scope: !18114)
!18120 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18121)
!18121 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18119)
!18122 = !DILocation(line: 0, scope: !17762, inlinedAt: !18121)
!18123 = !DILocation(line: 199, column: 11, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18125, file: !2682, line: 198, column: 24)
!18125 = distinct !DILexicalBlock(scope: !18114, file: !2682, line: 198, column: 2)
!18126 = !DILocation(line: 199, column: 23, scope: !18124)
!18127 = !DILocation(line: 0, scope: !17821, inlinedAt: !18128)
!18128 = distinct !DILocation(line: 198, column: 2, scope: !18125)
!18129 = !DILocation(line: 0, scope: !17829, inlinedAt: !18130)
!18130 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18128)
!18131 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18130)
!18132 = !DILocation(line: 199, column: 21, scope: !18124)
!18133 = !DILocation(line: 202, column: 2, scope: !18109)
!18134 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2682, file: !2682, line: 205, type: !17837, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18135)
!18135 = !{!18136, !18137, !18139}
!18136 = !DILocalVariable(name: "ret", scope: !18134, file: !2682, line: 207, type: !909)
!18137 = !DILocalVariable(name: "__i", scope: !18138, file: !2682, line: 209, type: !17731)
!18138 = distinct !DILexicalBlock(scope: !18134, file: !2682, line: 209, column: 2)
!18139 = !DILocalVariable(name: "__key", scope: !18138, file: !2682, line: 209, type: !17731)
!18140 = !DILocation(line: 0, scope: !18134)
!18141 = !DILocation(line: 0, scope: !18138)
!18142 = !DILocation(line: 0, scope: !17753, inlinedAt: !18143)
!18143 = distinct !DILocation(line: 209, column: 2, scope: !18138)
!18144 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18145)
!18145 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18143)
!18146 = !DILocation(line: 0, scope: !17762, inlinedAt: !18145)
!18147 = !DILocation(line: 210, column: 9, scope: !18148)
!18148 = distinct !DILexicalBlock(scope: !18149, file: !2682, line: 209, column: 24)
!18149 = distinct !DILexicalBlock(scope: !18138, file: !2682, line: 209, column: 2)
!18150 = !DILocation(line: 0, scope: !17821, inlinedAt: !18151)
!18151 = distinct !DILocation(line: 209, column: 2, scope: !18149)
!18152 = !DILocation(line: 0, scope: !17829, inlinedAt: !18153)
!18153 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18151)
!18154 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18153)
!18155 = !DILocation(line: 212, column: 2, scope: !18134)
!18156 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2682, file: !2682, line: 215, type: !12964, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18157)
!18157 = !{!18158, !18159, !18160, !18162, !18163, !18166, !18167}
!18158 = !DILocalVariable(name: "ticks", arg: 1, scope: !18156, file: !2682, line: 215, type: !909)
!18159 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18156, file: !2682, line: 215, type: !153)
!18160 = !DILocalVariable(name: "__i", scope: !18161, file: !2682, line: 217, type: !17731)
!18161 = distinct !DILexicalBlock(scope: !18156, file: !2682, line: 217, column: 2)
!18162 = !DILocalVariable(name: "__key", scope: !18161, file: !2682, line: 217, type: !17731)
!18163 = !DILocalVariable(name: "next_to", scope: !18164, file: !2682, line: 218, type: !125)
!18164 = distinct !DILexicalBlock(scope: !18165, file: !2682, line: 217, column: 24)
!18165 = distinct !DILexicalBlock(scope: !18161, file: !2682, line: 217, column: 2)
!18166 = !DILocalVariable(name: "sooner", scope: !18164, file: !2682, line: 219, type: !153)
!18167 = !DILocalVariable(name: "imminent", scope: !18164, file: !2682, line: 221, type: !153)
!18168 = !DILocation(line: 0, scope: !18156)
!18169 = !DILocation(line: 0, scope: !18161)
!18170 = !DILocation(line: 0, scope: !17753, inlinedAt: !18171)
!18171 = distinct !DILocation(line: 217, column: 2, scope: !18161)
!18172 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18173)
!18173 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18171)
!18174 = !DILocation(line: 0, scope: !17762, inlinedAt: !18173)
!18175 = !DILocation(line: 218, column: 17, scope: !18164)
!18176 = !DILocation(line: 0, scope: !18164)
!18177 = !DILocation(line: 221, column: 27, scope: !18164)
!18178 = !DILocation(line: 233, column: 17, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18164, file: !2682, line: 233, column: 7)
!18180 = !DILocation(line: 234, column: 26, scope: !18181)
!18181 = distinct !DILexicalBlock(scope: !18179, file: !2682, line: 233, column: 56)
!18182 = !DILocation(line: 234, column: 4, scope: !18181)
!18183 = !DILocation(line: 235, column: 3, scope: !18181)
!18184 = !DILocation(line: 0, scope: !17821, inlinedAt: !18185)
!18185 = distinct !DILocation(line: 217, column: 2, scope: !18165)
!18186 = !DILocation(line: 0, scope: !17829, inlinedAt: !18187)
!18187 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18185)
!18188 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18187)
!18189 = !DILocation(line: 237, column: 1, scope: !18156)
!18190 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2682, file: !2682, line: 239, type: !18191, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18193)
!18191 = !DISubroutineType(types: !18192)
!18192 = !{null, !909}
!18193 = !{!18194, !18195, !18196, !18198}
!18194 = !DILocalVariable(name: "ticks", arg: 1, scope: !18190, file: !2682, line: 239, type: !909)
!18195 = !DILocalVariable(name: "key", scope: !18190, file: !2682, line: 245, type: !17731)
!18196 = !DILocalVariable(name: "t", scope: !18197, file: !2682, line: 262, type: !2655)
!18197 = distinct !DILexicalBlock(scope: !18190, file: !2682, line: 261, column: 67)
!18198 = !DILocalVariable(name: "dt", scope: !18197, file: !2682, line: 263, type: !125)
!18199 = !DILocation(line: 0, scope: !18190)
!18200 = !DILocation(line: 242, column: 2, scope: !18190)
!18201 = !DILocation(line: 0, scope: !17753, inlinedAt: !18202)
!18202 = distinct !DILocation(line: 245, column: 25, scope: !18190)
!18203 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18204)
!18204 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18202)
!18205 = !DILocation(line: 0, scope: !17762, inlinedAt: !18204)
!18206 = !DILocation(line: 261, column: 9, scope: !18190)
!18207 = !DILocation(line: 261, column: 17, scope: !18190)
!18208 = !DILocation(line: 261, column: 25, scope: !18190)
!18209 = !DILocation(line: 261, column: 37, scope: !18190)
!18210 = !DILocation(line: 261, column: 47, scope: !18190)
!18211 = !DILocation(line: 261, column: 44, scope: !18190)
!18212 = !DILocation(line: 261, column: 2, scope: !18190)
!18213 = !DILocation(line: 0, scope: !18197)
!18214 = !DILocation(line: 263, column: 12, scope: !18197)
!18215 = !DILocation(line: 265, column: 16, scope: !18197)
!18216 = !DILocation(line: 265, column: 13, scope: !18197)
!18217 = !DILocation(line: 266, column: 13, scope: !18197)
!18218 = !DILocation(line: 267, column: 3, scope: !18197)
!18219 = !DILocation(line: 0, scope: !17821, inlinedAt: !18220)
!18220 = distinct !DILocation(line: 269, column: 3, scope: !18197)
!18221 = !DILocation(line: 0, scope: !17829, inlinedAt: !18222)
!18222 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18220)
!18223 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18222)
!18224 = !DILocation(line: 270, column: 6, scope: !18197)
!18225 = !DILocation(line: 270, column: 3, scope: !18197)
!18226 = !DILocation(line: 0, scope: !17753, inlinedAt: !18227)
!18227 = distinct !DILocation(line: 271, column: 9, scope: !18197)
!18228 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18229)
!18229 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18227)
!18230 = !DILocation(line: 0, scope: !17762, inlinedAt: !18229)
!18231 = !DILocation(line: 272, column: 22, scope: !18197)
!18232 = distinct !{!18232, !18212, !18233}
!18233 = !DILocation(line: 273, column: 2, scope: !18190)
!18234 = !DILocation(line: 276, column: 19, scope: !18235)
!18235 = distinct !DILexicalBlock(scope: !18236, file: !2682, line: 275, column: 23)
!18236 = distinct !DILexicalBlock(scope: !18190, file: !2682, line: 275, column: 6)
!18237 = !DILocation(line: 277, column: 2, scope: !18235)
!18238 = !DILocation(line: 279, column: 15, scope: !18190)
!18239 = !DILocation(line: 279, column: 12, scope: !18190)
!18240 = !DILocation(line: 280, column: 21, scope: !18190)
!18241 = !DILocation(line: 282, column: 24, scope: !18190)
!18242 = !DILocation(line: 282, column: 2, scope: !18190)
!18243 = !DILocation(line: 0, scope: !17821, inlinedAt: !18244)
!18244 = distinct !DILocation(line: 284, column: 2, scope: !18190)
!18245 = !DILocation(line: 0, scope: !17829, inlinedAt: !18246)
!18246 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18244)
!18247 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18246)
!18248 = !DILocation(line: 285, column: 1, scope: !18190)
!18249 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2682, file: !2682, line: 287, type: !18250, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18252)
!18250 = !DISubroutineType(types: !18251)
!18251 = !{!598}
!18252 = !{!18253, !18254, !18256}
!18253 = !DILocalVariable(name: "t", scope: !18249, file: !2682, line: 289, type: !1803)
!18254 = !DILocalVariable(name: "__i", scope: !18255, file: !2682, line: 291, type: !17731)
!18255 = distinct !DILexicalBlock(scope: !18249, file: !2682, line: 291, column: 2)
!18256 = !DILocalVariable(name: "__key", scope: !18255, file: !2682, line: 291, type: !17731)
!18257 = !DILocation(line: 0, scope: !18249)
!18258 = !DILocation(line: 0, scope: !18255)
!18259 = !DILocation(line: 0, scope: !17753, inlinedAt: !18260)
!18260 = distinct !DILocation(line: 291, column: 2, scope: !18255)
!18261 = !DILocation(line: 55, column: 2, scope: !17762, inlinedAt: !18262)
!18262 = distinct !DILocation(line: 145, column: 10, scope: !17753, inlinedAt: !18260)
!18263 = !DILocation(line: 0, scope: !17762, inlinedAt: !18262)
!18264 = !DILocation(line: 292, column: 7, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18266, file: !2682, line: 291, column: 24)
!18266 = distinct !DILexicalBlock(scope: !18255, file: !2682, line: 291, column: 2)
!18267 = !DILocation(line: 292, column: 19, scope: !18265)
!18268 = !DILocation(line: 0, scope: !17821, inlinedAt: !18269)
!18269 = distinct !DILocation(line: 291, column: 2, scope: !18266)
!18270 = !DILocation(line: 0, scope: !17829, inlinedAt: !18271)
!18271 = distinct !DILocation(line: 215, column: 2, scope: !17821, inlinedAt: !18269)
!18272 = !DILocation(line: 95, column: 2, scope: !17829, inlinedAt: !18271)
!18273 = !DILocation(line: 292, column: 17, scope: !18265)
!18274 = !DILocation(line: 294, column: 2, scope: !18249)
!18275 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2682, file: !2682, line: 297, type: !8386, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !639)
!18276 = !DILocation(line: 300, column: 19, scope: !18275)
!18277 = !DILocation(line: 300, column: 9, scope: !18275)
!18278 = !DILocation(line: 300, column: 2, scope: !18275)
!18279 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2682, file: !2682, line: 306, type: !18250, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !639)
!18280 = !DILocation(line: 308, column: 9, scope: !18279)
!18281 = !DILocation(line: 308, column: 2, scope: !18279)
!18282 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2682, file: !2682, line: 319, type: !8396, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18283)
!18283 = !{!18284, !18285, !18286, !18287}
!18284 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18282, file: !2682, line: 319, type: !208)
!18285 = !DILocalVariable(name: "start_cycles", scope: !18282, file: !2682, line: 328, type: !208)
!18286 = !DILocalVariable(name: "cycles_to_wait", scope: !18282, file: !2682, line: 331, type: !208)
!18287 = !DILocalVariable(name: "current_cycles", scope: !18288, file: !2682, line: 338, type: !208)
!18288 = distinct !DILexicalBlock(scope: !18289, file: !2682, line: 337, column: 11)
!18289 = distinct !DILexicalBlock(scope: !18290, file: !2682, line: 337, column: 2)
!18290 = distinct !DILexicalBlock(scope: !18282, file: !2682, line: 337, column: 2)
!18291 = !DILocation(line: 0, scope: !18282)
!18292 = !DILocation(line: 322, column: 19, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18282, file: !2682, line: 322, column: 6)
!18294 = !DILocation(line: 322, column: 6, scope: !18282)
!18295 = !DILocation(line: 328, column: 26, scope: !18282)
!18296 = !DILocation(line: 333, column: 43, scope: !18282)
!18297 = !DILocation(line: 337, column: 2, scope: !18282)
!18298 = !DILocation(line: 338, column: 29, scope: !18288)
!18299 = !DILocation(line: 0, scope: !18288)
!18300 = !DILocation(line: 341, column: 23, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18288, file: !2682, line: 341, column: 7)
!18302 = !DILocation(line: 341, column: 39, scope: !18301)
!18303 = !DILocation(line: 349, column: 1, scope: !18282)
!18304 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !624, file: !624, line: 1675, type: !8386, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !639)
!18305 = !DILocation(line: 1677, column: 9, scope: !18304)
!18306 = !DILocation(line: 1677, column: 2, scope: !18304)
!18307 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18308, file: !18308, line: 24, type: !8386, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !639)
!18308 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18309 = !DILocation(line: 26, column: 9, scope: !18307)
!18310 = !DILocation(line: 26, column: 2, scope: !18307)
!18311 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2682, file: !2682, line: 364, type: !18312, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !18314)
!18312 = !DISubroutineType(types: !18313)
!18313 = !{!1803, !17721}
!18314 = !{!18315, !18316}
!18315 = !DILocalVariable(name: "timeout", arg: 1, scope: !18311, file: !2682, line: 364, type: !17721)
!18316 = !DILocalVariable(name: "dt", scope: !18311, file: !2682, line: 366, type: !1896)
!18317 = !DILocation(line: 0, scope: !18311)
!18318 = !DILocation(line: 368, column: 6, scope: !18311)
!18319 = !DILocation(line: 371, column: 10, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18321, file: !2682, line: 370, column: 47)
!18321 = distinct !DILexicalBlock(scope: !18322, file: !2682, line: 370, column: 13)
!18322 = distinct !DILexicalBlock(scope: !18311, file: !2682, line: 368, column: 6)
!18323 = !DILocation(line: 371, column: 3, scope: !18320)
!18324 = !DILocation(line: 376, column: 58, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18326, file: !2682, line: 376, column: 7)
!18326 = distinct !DILexicalBlock(scope: !18321, file: !2682, line: 372, column: 9)
!18327 = !DILocation(line: 376, column: 7, scope: !18326)
!18328 = !DILocation(line: 376, column: 43, scope: !18325)
!18329 = !DILocation(line: 377, column: 4, scope: !18330)
!18330 = distinct !DILexicalBlock(scope: !18325, file: !2682, line: 376, column: 64)
!18331 = !DILocation(line: 379, column: 10, scope: !18326)
!18332 = !DILocation(line: 379, column: 33, scope: !18326)
!18333 = !DILocation(line: 379, column: 31, scope: !18326)
!18334 = !DILocation(line: 379, column: 3, scope: !18326)
!18335 = !DILocation(line: 0, scope: !18322)
!18336 = !DILocation(line: 381, column: 1, scope: !18311)
!18337 = distinct !DISubprogram(name: "boot_banner", scope: !18338, file: !18338, line: 26, type: !3300, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !639)
!18338 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18339 = !DILocation(line: 34, column: 2, scope: !18337)
!18340 = !DILocation(line: 36, column: 1, scope: !18337)
