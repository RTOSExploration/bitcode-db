; ModuleID = 'build/adafruit_feather_stm32f405/kernel/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237083 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237063 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237053 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237153 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237143 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237133 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237123 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237113 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237103 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237093 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238480 to i8*), void (i8*)* inttoptr (i32 134237073 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [48 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !501
@.str.69 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.72 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.70 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.74 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.79 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.82 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.83 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.88 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.89 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.99 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !530
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !663
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !536
@.str.113 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.115 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.116 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !672
@.str.6.123 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.124 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !708
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.134, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !718
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !723
@.str.133 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.134 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.139 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !743
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.4.135 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !896
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !879
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.135, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !852
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !868
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !911
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !913
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !915
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !917
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !919
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !921
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !923
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !925
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !927
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !929
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.140 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !968
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1062
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1051
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1103
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !961
@.str.149 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1169
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1455
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1421
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1407
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !959
@.str.1.157 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1457
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1425
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1423
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1363
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !957
@.str.2.158 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1470
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1429
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1427
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1369
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !955
@.str.3.159 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1472
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1433
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1431
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1375
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !953
@.str.4.160 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1474
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1437
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1435
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1381
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !951
@.str.5.161 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1476
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1441
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1439
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1387
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !949
@.str.6.162 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1478
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1445
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1443
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1393
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.7.163 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1480
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1449
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1447
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1399
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !945
@.str.8.164 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1482
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1453
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1451
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1405
@.str.9.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.156 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.152 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.155 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.151 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.153 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.154 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.168 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.168, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1484
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !963
@.str.1.171 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1640
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1695
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1638
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1697
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.171, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1629
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1631
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1684
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1687
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1689
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1692
@.str.2.173 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.174 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.175 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.176 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.177 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.180 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.182 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.183 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1035
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1708
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1819
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1821
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1817
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1812
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1786
@.str.187 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.188 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.189 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.190 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.192 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1823
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.157, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1361
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.158, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1367
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1373
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.160, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1379
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.161, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1385
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.162, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1391
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.163, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1397
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.164, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1403
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1913
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1953
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1956
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1961
@.str.226 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.230 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.231 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.232 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.233 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.234 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.235 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.236 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.240 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.241 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.242 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.243 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.244 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.239 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.238 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.240, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.241, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.242, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.244, i32 0, i32 0)], align 4
@.str.246 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1968
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2193
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2180
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2188
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2199
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2204
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.255 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.263, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.265, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.266, i32 0, i32 0)], align 4, !dbg !2232
@.str.260 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.261 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.262 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.263 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.264 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.265 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.259 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.266 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2346
@.str.8.258 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.269 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.270 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.271 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.272 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.276 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.277 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.280 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.281 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.290 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.291 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.292 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.299 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.301 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.302 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.303 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.304 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.305 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.306 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.307 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.312 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2359
@.str.313 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.319 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.320 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.321 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.314 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.315 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.316 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.322 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.323 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2384
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2494
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2497
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2499
@.str.324 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.344 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.331 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.351 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.361 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.334 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.356 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.330 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.368 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.369 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.377 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.378 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.379 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.380 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.325 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.326 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.327 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.328 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.329 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.333 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.348 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.357 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.358 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2190
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2197
@.str.23.372 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.386 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.387 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.388 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.389 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2501
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2531
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2536
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2055
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2534
@.str.4.390 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.391 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.392 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.396 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.397 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.417 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2542
@.str.419 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.428 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.421 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.429 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.420 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.422 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.425 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.426 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.427 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.430 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.431 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3290 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #26, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #26, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #26, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #26, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3346, !srcloc !3349
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3396, !srcloc !3397
  ret void, !dbg !3398
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3401 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3403, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i8* %1, metadata !3404, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i8* %2, metadata !3405, metadata !DIExpression()), !dbg !3409
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3410

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3411
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3406, metadata !DIExpression()), !dbg !3412
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #27, !dbg !3413
  %11 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3414
  %12 = load i32, i32* %6, align 4, !dbg !3415
  %13 = sub i32 %11, %12, !dbg !3416
  store i32 %13, i32* %7, align 4, !dbg !3417
  %14 = load i32, i32* %8, align 4, !dbg !3418
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3419
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #28, !dbg !3420
  call void @llvm.dbg.value(metadata i32 %16, metadata !3408, metadata !DIExpression()), !dbg !3421
  %17 = icmp eq i32 %16, 0, !dbg !3422
  br i1 %17, label %23, label %18, !dbg !3424

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3425
  %20 = zext i8 %19 to i32, !dbg !3425
  %21 = load i32, i32* %8, align 4, !dbg !3425
  %22 = load i32, i32* %9, align 4, !dbg !3425
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #27, !dbg !3425
  br label %23, !dbg !3431

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3432
  br label %10, !dbg !3410, !llvm.loop !3433
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3434 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #28, !dbg !3435
  ret i32 %1, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3437 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3449, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3447, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %1, metadata !3448, metadata !DIExpression()), !dbg !3450
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3451, !srcloc !3453
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #27, !dbg !3454
  ret i32 %3, !dbg !3455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3461, metadata !DIExpression()), !dbg !3462
  %2 = icmp eq i32 %0, 2, !dbg !3463
  %3 = select i1 %2, i8 87, i8 63, !dbg !3463
  %4 = icmp eq i32 %0, 3, !dbg !3463
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3463
  ret i8 %5, !dbg !3464
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3465 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3467
  ret i32 %1, !dbg !3468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3469 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3471, metadata !DIExpression()), !dbg !3476
  br label %2, !dbg !3477

1:                                                ; preds = %2
  tail call void @message_dev_init() #27, !dbg !3478
  ret void, !dbg !3479

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3471, metadata !DIExpression()), !dbg !3476
  %4 = add nsw i32 %3, -2, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %4, metadata !3473, metadata !DIExpression()), !dbg !3481
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3482
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3483
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3484
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #27, !dbg !3485
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3486
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3487
  %10 = inttoptr i32 %3 to i8*, !dbg !3488
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #28, !dbg !3489
  %11 = add nuw nsw i32 %3, 1, !dbg !3490
  call void @llvm.dbg.value(metadata i32 %11, metadata !3471, metadata !DIExpression()), !dbg !3476
  %12 = icmp eq i32 %11, 4, !dbg !3491
  br i1 %12, label %1, label %2, !dbg !3477, !llvm.loop !3492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3494 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3507, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3498, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3499, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i32 2048, metadata !3500, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3501, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* %2, metadata !3502, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* null, metadata !3503, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* null, metadata !3504, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i32 %3, metadata !3505, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i32 0, metadata !3506, metadata !DIExpression()), !dbg !3508
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3509, !srcloc !3511
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #27, !dbg !3512
  ret void, !dbg !3513
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3514 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3516, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %1, metadata !3517, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %2, metadata !3518, metadata !DIExpression()), !dbg !3529
  %6 = ptrtoint i8* %0 to i32, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %6, metadata !3519, metadata !DIExpression()), !dbg !3529
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3531
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3531
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3520, metadata !DIExpression()), !dbg !3532
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3533
  %9 = zext i8 %8 to i32, !dbg !3533
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !3533
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #28, !dbg !3533
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #27, !dbg !3533
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3538
  call void @llvm.dbg.value(metadata i32 %13, metadata !3521, metadata !DIExpression()), !dbg !3539
  %14 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %14, metadata !3523, metadata !DIExpression()), !dbg !3539
  %15 = icmp eq i32 %13, 0, !dbg !3541
  br i1 %15, label %16, label %28, !dbg !3544

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3544

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3545
  %25 = sub i32 %24, %23, !dbg !3546
  %26 = load i32, i32* %17, align 4, !dbg !3547
  %27 = icmp ult i32 %25, %26, !dbg !3548
  br i1 %27, label %29, label %42, !dbg !3549

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3550
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3550
  unreachable, !dbg !3550

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3552
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3524, metadata !DIExpression()), !dbg !3553
  store volatile i32 0, i32* %5, align 4, !dbg !3553
  %30 = load volatile i32, i32* %5, align 4, !dbg !3554
  %31 = icmp slt i32 %30, 100, !dbg !3556
  br i1 %31, label %37, label %32, !dbg !3557

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3558
  %33 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3545
  %34 = sub i32 %33, %23, !dbg !3546
  %35 = load i32, i32* %17, align 4, !dbg !3547
  %36 = icmp ult i32 %34, %35, !dbg !3548
  br i1 %36, label %29, label %42, !dbg !3549, !llvm.loop !3559

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3561
  %39 = add nsw i32 %38, 1, !dbg !3561
  store volatile i32 %39, i32* %5, align 4, !dbg !3561
  %40 = load volatile i32, i32* %5, align 4, !dbg !3554
  %41 = icmp slt i32 %40, 100, !dbg !3556
  br i1 %41, label %37, label %32, !dbg !3557, !llvm.loop !3562

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3564
  %44 = sub i32 %43, %23, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %44, metadata !3528, metadata !DIExpression()), !dbg !3539
  %45 = load i32, i32* %18, align 4, !dbg !3566
  %46 = load i32, i32* %19, align 4, !dbg !3566
  %47 = load i32, i32* %20, align 4, !dbg !3566
  %48 = sub i32 %23, %47, !dbg !3566
  %49 = load i32, i32* %17, align 4, !dbg !3566
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #27, !dbg !3566
  %50 = load i32, i32* %20, align 4, !dbg !3571
  %51 = sub i32 %23, %50, !dbg !3572
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #28, !dbg !3573
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3538
  call void @llvm.dbg.value(metadata i32 %52, metadata !3521, metadata !DIExpression()), !dbg !3539
  %53 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %53, metadata !3523, metadata !DIExpression()), !dbg !3539
  %54 = icmp eq i32 %52, 0, !dbg !3541
  br i1 %54, label %22, label %28, !dbg !3544, !llvm.loop !3574
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3577 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !3580
  ret %struct.k_thread* %1, !dbg !3581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3586, metadata !DIExpression()), !dbg !3587
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3588, !srcloc !3590
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #27, !dbg !3591
  ret i32 %2, !dbg !3592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3593 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3597, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i8* %1, metadata !3598, metadata !DIExpression()), !dbg !3600
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3601, !srcloc !3603
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #27, !dbg !3604
  ret i32 %3, !dbg !3605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3606 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3611, metadata !DIExpression()), !dbg !3624
  call void @llvm.dbg.value(metadata i32 %1, metadata !3612, metadata !DIExpression()), !dbg !3624
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3625
  %8 = load i32, i32* %7, align 4, !dbg !3625
  %9 = icmp ugt i32 %8, 39, !dbg !3627
  br i1 %9, label %60, label %10, !dbg !3628

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3629
  %12 = load i32, i32* %11, align 4, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %12, metadata !3613, metadata !DIExpression()), !dbg !3624
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3630
  %14 = load i32, i32* %13, align 4, !dbg !3631
  %15 = add i32 %14, 1, !dbg !3631
  store i32 %15, i32* %13, align 4, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %14, metadata !3614, metadata !DIExpression()), !dbg !3624
  %16 = icmp ult i32 %14, 20, !dbg !3632
  br i1 %16, label %17, label %19, !dbg !3634

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3635
  store i32 %1, i32* %18, align 4, !dbg !3637
  br label %19, !dbg !3638

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3639
  %21 = load i32, i32* %20, align 4, !dbg !3639
  %22 = tail call fastcc i32 @atomic_inc() #28, !dbg !3640
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3641
  store i32 %21, i32* %23, align 4, !dbg !3642
  %24 = load i32, i32* %7, align 4, !dbg !3643
  %25 = icmp eq i32 %24, 39, !dbg !3644
  br i1 %25, label %26, label %60, !dbg !3645

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3646
  %28 = bitcast i32* %4 to i8*, !dbg !3646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3646
  %29 = bitcast i32* %5 to i8*, !dbg !3646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3646
  %30 = bitcast i32* %6 to i8*, !dbg !3646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3646
  %31 = tail call fastcc i32 @k_sem_take() #28, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %31, metadata !3621, metadata !DIExpression()), !dbg !3648
  %32 = icmp eq i32 %31, 0, !dbg !3649
  br i1 %32, label %34, label %33, !dbg !3652

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3653
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3653
  unreachable, !dbg !3653

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #28, !dbg !3655
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3656
  call void @llvm.dbg.value(metadata i32* %3, metadata !3615, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call void @llvm.dbg.value(metadata i32* %4, metadata !3618, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call void @llvm.dbg.value(metadata i32* %5, metadata !3619, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call void @llvm.dbg.value(metadata i32* %6, metadata !3620, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3657
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3658
  %37 = zext i8 %36 to i32, !dbg !3658
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #27, !dbg !3658
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #27, !dbg !3663
  %38 = load i32, i32* %4, align 4, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %38, metadata !3618, metadata !DIExpression()), !dbg !3648
  %39 = load i32, i32* %3, align 4, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %39, metadata !3615, metadata !DIExpression()), !dbg !3648
  %40 = load i32, i32* %5, align 4, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %40, metadata !3619, metadata !DIExpression()), !dbg !3648
  %41 = load i32, i32* %6, align 4, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %41, metadata !3620, metadata !DIExpression()), !dbg !3648
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #27, !dbg !3668
  call void @llvm.dbg.value(metadata i32 0, metadata !3622, metadata !DIExpression()), !dbg !3673
  br label %43, !dbg !3674

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #27, !dbg !3675
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3680
  br label %60, !dbg !3681

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3622, metadata !DIExpression()), !dbg !3673
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3682
  %46 = load i32, i32* %45, align 4, !dbg !3682
  %47 = icmp eq i32 %46, 0, !dbg !3686
  br i1 %47, label %48, label %51, !dbg !3687

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #28, !dbg !3688
  %50 = zext i8 %49 to i32, !dbg !3688
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #27, !dbg !3688
  br label %57, !dbg !3694

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3695
  call void @llvm.dbg.value(metadata i32* %3, metadata !3615, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call void @llvm.dbg.value(metadata i32* %4, metadata !3618, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call void @llvm.dbg.value(metadata i32* %5, metadata !3619, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call void @llvm.dbg.value(metadata i32* %6, metadata !3620, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3696
  %53 = load i32, i32* %4, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %53, metadata !3618, metadata !DIExpression()), !dbg !3648
  %54 = load i32, i32* %3, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %54, metadata !3615, metadata !DIExpression()), !dbg !3648
  %55 = load i32, i32* %5, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %55, metadata !3619, metadata !DIExpression()), !dbg !3648
  %56 = load i32, i32* %6, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %56, metadata !3620, metadata !DIExpression()), !dbg !3648
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #27, !dbg !3697
  br label %57, !dbg !3702

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %58, metadata !3622, metadata !DIExpression()), !dbg !3673
  %59 = icmp eq i32 %58, 4, !dbg !3704
  br i1 %59, label %42, label %43, !dbg !3674, !llvm.loop !3705

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3707
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3708 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3715, metadata !DIExpression()), !dbg !3716
  %1 = tail call fastcc i32 @atomic_add() #28, !dbg !3717
  ret i32 %1, !dbg !3718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3719 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3724, metadata !DIExpression()), !dbg !3726
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3727, !srcloc !3729
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #27, !dbg !3730
  ret i32 %1, !dbg !3731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3732 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3736, metadata !DIExpression()), !dbg !3737
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #28, !dbg !3738
  ret void, !dbg !3739
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3740 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3746, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3747, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32* %2, metadata !3748, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32* %3, metadata !3749, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32* %4, metadata !3750, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32* %5, metadata !3751, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i64 0, metadata !3752, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i64 0, metadata !3753, metadata !DIExpression()), !dbg !3761
  store i32 2147483647, i32* %2, align 4, !dbg !3762
  store i32 0, i32* %3, align 4, !dbg !3763
  call void @llvm.dbg.value(metadata i32 0, metadata !3754, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i64 0, metadata !3752, metadata !DIExpression()), !dbg !3761
  %7 = icmp eq i32 %1, 0, !dbg !3765
  br i1 %7, label %8, label %21, !dbg !3767

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3768
  %10 = trunc i32 %9 to i8, !dbg !3769
  %11 = trunc i32 %1 to i8, !dbg !3769
  %12 = udiv i8 %10, %11, !dbg !3769
  %13 = zext i8 %12 to i32, !dbg !3770
  store i32 %13, i32* %4, align 4, !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3756, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i64 0, metadata !3753, metadata !DIExpression()), !dbg !3761
  br label %38, !dbg !3773

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3768
  %16 = zext i32 %15 to i64, !dbg !3774
  %17 = add i64 %35, %16, !dbg !3775
  %18 = zext i32 %1 to i64, !dbg !3776
  %19 = udiv i64 %17, %18, !dbg !3769
  %20 = trunc i64 %19 to i32, !dbg !3770
  store i32 %20, i32* %4, align 4, !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3756, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i64 0, metadata !3753, metadata !DIExpression()), !dbg !3761
  br i1 %7, label %38, label %45, !dbg !3773

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3752, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %23, metadata !3754, metadata !DIExpression()), !dbg !3764
  %24 = load i32, i32* %2, align 4, !dbg !3777
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3777
  %26 = load i32, i32* %25, align 4, !dbg !3777
  %27 = icmp ult i32 %24, %26, !dbg !3777
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3777
  store i32 %28, i32* %2, align 4, !dbg !3779
  %29 = load i32, i32* %3, align 4, !dbg !3780
  %30 = load i32, i32* %25, align 4, !dbg !3780
  %31 = icmp ugt i32 %29, %30, !dbg !3780
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3780
  store i32 %32, i32* %3, align 4, !dbg !3781
  %33 = load i32, i32* %25, align 4, !dbg !3782
  %34 = zext i32 %33 to i64, !dbg !3782
  %35 = add i64 %22, %34, !dbg !3783
  call void @llvm.dbg.value(metadata i64 %35, metadata !3752, metadata !DIExpression()), !dbg !3761
  %36 = add nuw nsw i32 %23, 1, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %36, metadata !3754, metadata !DIExpression()), !dbg !3764
  %37 = icmp eq i32 %36, %1, !dbg !3765
  br i1 %37, label %14, label %21, !dbg !3767, !llvm.loop !3785

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3761
  %42 = add i64 %41, %40, !dbg !3787
  %43 = udiv i64 %42, %39, !dbg !3788
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #28, !dbg !3789
  store i32 %44, i32* %5, align 4, !dbg !3790
  ret void, !dbg !3791

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3756, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i64 %47, metadata !3753, metadata !DIExpression()), !dbg !3761
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3792
  %49 = load i32, i32* %48, align 4, !dbg !3792
  %50 = sub i32 %49, %20, !dbg !3793
  %51 = sext i32 %50 to i64, !dbg !3794
  call void @llvm.dbg.value(metadata i64 %51, metadata !3758, metadata !DIExpression()), !dbg !3795
  %52 = mul nsw i64 %51, %51, !dbg !3796
  %53 = add i64 %52, %47, !dbg !3797
  call void @llvm.dbg.value(metadata i64 %53, metadata !3753, metadata !DIExpression()), !dbg !3761
  %54 = add nuw nsw i32 %46, 1, !dbg !3798
  call void @llvm.dbg.value(metadata i32 %54, metadata !3756, metadata !DIExpression()), !dbg !3772
  %55 = icmp eq i32 %54, %1, !dbg !3799
  br i1 %55, label %38, label %45, !dbg !3773, !llvm.loop !3800
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3802 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3806, metadata !DIExpression()), !dbg !3811
  %2 = icmp ugt i64 %0, 1, !dbg !3812
  %3 = trunc i64 %0 to i32, !dbg !3813
  br i1 %2, label %6, label %4, !dbg !3813

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3814

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3815
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #28, !dbg !3816
  %9 = shl i32 %8, 1, !dbg !3817
  %10 = zext i32 %9 to i64, !dbg !3816
  call void @llvm.dbg.value(metadata i64 %10, metadata !3807, metadata !DIExpression()), !dbg !3818
  %11 = or i64 %10, 1, !dbg !3819
  call void @llvm.dbg.value(metadata i64 %11, metadata !3810, metadata !DIExpression()), !dbg !3818
  %12 = mul nuw i64 %11, %11, !dbg !3820
  %13 = icmp ugt i64 %12, %0, !dbg !3821
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3822
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3823 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3827, metadata !DIExpression()), !dbg !3828
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3829, !srcloc !3831
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3832
  ret void, !dbg !3833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3834 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3838, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 1, metadata !3839, metadata !DIExpression()), !dbg !3840
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3841
  ret i32 %1, !dbg !3842
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3843 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3844, !srcloc !3846
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3847
  ret %struct.k_thread* %1, !dbg !3848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3849 {
  call void @llvm.dbg.value(metadata i64 16800, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i64 4, metadata !3852, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i64 67200, metadata !3853, metadata !DIExpression()), !dbg !3854
  store i32 80640, i32* @max_duty_cyc, align 4, !dbg !3855
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #27, !dbg !3856
  ret void, !dbg !3857
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3858 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3860, metadata !DIExpression()), !dbg !3871
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3872
  br i1 %3, label %5, label %4, !dbg !3875

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3876
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3876
  unreachable, !dbg !3876

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3878
  call void @llvm.dbg.value(metadata i32 %6, metadata !3861, metadata !DIExpression()), !dbg !3871
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3879
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3879
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3862, metadata !DIExpression()), !dbg !3880
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3881
  %9 = add i32 %8, 1, !dbg !3881
  store i32 %9, i32* @msg_seq, align 4, !dbg !3881
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3882
  store i32 %8, i32* %10, align 4, !dbg !3883
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3884
  store i32 %6, i32* %11, align 4, !dbg !3885
  %12 = tail call fastcc i32 @rand32() #28, !dbg !3886
  %13 = and i32 %12, 3, !dbg !3887
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3888
  store i32 %13, i32* %14, align 4, !dbg !3889
  %15 = tail call fastcc i32 @rand32() #28, !dbg !3890
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3891
  %17 = urem i32 %15, %16, !dbg !3892
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3893
  store i32 %17, i32* %18, align 4, !dbg !3894
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #28, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %19, metadata !3870, metadata !DIExpression()), !dbg !3871
  %20 = icmp eq i32 %19, 0, !dbg !3896
  br i1 %20, label %22, label %21, !dbg !3898

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #27, !dbg !3899
  br label %22, !dbg !3901

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3902
  %24 = icmp ult i32 %23, 40, !dbg !3904
  br i1 %24, label %25, label %26, !dbg !3905

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #28, !dbg !3906
  br label %26, !dbg !3908

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3909
  ret void, !dbg !3909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3910 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #28, !dbg !3911
  ret i32 %1, !dbg !3912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3913
  %2 = icmp eq i64 %1, 0, !dbg !3913
  br i1 %2, label %3, label %7, !dbg !3915

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3916
  %5 = zext i32 %4 to i64, !dbg !3918
  %6 = shl nuw nsw i64 %5, 16, !dbg !3919
  br label %7, !dbg !3920

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3921
  %9 = mul i64 %8, 6364136223846793005, !dbg !3922
  %10 = add i64 %9, 1442695040888963407, !dbg !3923
  store i64 %10, i64* @rand32.state, align 8, !dbg !3924
  %11 = lshr i64 %10, 32, !dbg !3925
  %12 = trunc i64 %11 to i32, !dbg !3926
  ret i32 %12, !dbg !3927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3928 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3939, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3937, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %0, metadata !3938, metadata !DIExpression()), !dbg !3940
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3941, !srcloc !3943
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #27, !dbg !3944
  ret i32 %2, !dbg !3945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3946 {
  %1 = tail call fastcc i32 @rand32() #28, !dbg !3949
  %2 = and i32 %1, 7, !dbg !3950
  call void @llvm.dbg.value(metadata i32 %2, metadata !3948, metadata !DIExpression()), !dbg !3951
  %3 = zext i32 %2 to i64, !dbg !3952
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3953
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #27, !dbg !3953
  ret void, !dbg !3954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3955 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3956
  ret i32 %1, !dbg !3957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3958 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3963, metadata !DIExpression()), !dbg !3965
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3966
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #28, !dbg !3967
  call void @llvm.dbg.value(metadata i32 %3, metadata !3964, metadata !DIExpression()), !dbg !3965
  %4 = icmp eq i32 %3, 0, !dbg !3968
  br i1 %4, label %6, label %5, !dbg !3971

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3972
  unreachable, !dbg !3972

6:                                                ; preds = %1
  ret void, !dbg !3974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3975 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3981, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3979, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata i8* %0, metadata !3980, metadata !DIExpression()), !dbg !3982
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3983, !srcloc !3985
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3986
  ret i32 %2, !dbg !3987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3988 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %0, metadata !3999, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %1, metadata !4000, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %2, metadata !4001, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %3, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %0, metadata !4004, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %0, metadata !4005, metadata !DIExpression()), !dbg !4066
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4067
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4067
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4008, metadata !DIExpression()), !dbg !4068
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4069
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4069
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4010, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 0, metadata !4011, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 0, metadata !4012, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 0, metadata !4013, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 -1, metadata !4014, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 0, metadata !4017, metadata !DIExpression()), !dbg !4066
  %12 = and i32 %2, 4, !dbg !4071
  %13 = icmp eq i32 %12, 0, !dbg !4072
  call void @llvm.dbg.value(metadata i1 %13, metadata !4018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4066
  %14 = lshr i32 %2, 3, !dbg !4073
  %15 = and i32 %14, 7, !dbg !4073
  %16 = add nuw nsw i32 %15, 1, !dbg !4074
  call void @llvm.dbg.value(metadata i32 %16, metadata !4019, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 0, metadata !4020, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %0, metadata !4021, metadata !DIExpression()), !dbg !4066
  %17 = ptrtoint i8* %0 to i32, !dbg !4075
  %18 = and i32 %17, 3, !dbg !4077
  %19 = icmp eq i32 %18, 0, !dbg !4077
  br i1 %19, label %20, label %320, !dbg !4078

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4079
  call void @llvm.dbg.value(metadata i8* %21, metadata !4005, metadata !DIExpression()), !dbg !4066
  %22 = icmp eq i8* %0, null, !dbg !4080
  %23 = and i32 %1, 7, !dbg !4082
  %24 = sub nuw nsw i32 8, %23, !dbg !4082
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4082
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4082
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %27, metadata !4000, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %26, metadata !4005, metadata !DIExpression()), !dbg !4066
  br i1 %22, label %33, label %28, !dbg !4083

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4085
  %30 = sub i32 4, %17, !dbg !4085
  %31 = add i32 %30, %29, !dbg !4086
  %32 = icmp ugt i32 %31, %27, !dbg !4087
  br i1 %32, label %320, label %33, !dbg !4088

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %34, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %3, metadata !4016, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 4, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 4, metadata !4006, metadata !DIExpression()), !dbg !4066
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4090

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %42, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %43, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %44, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %45, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %72, metadata !4014, metadata !DIExpression()), !dbg !4066
  br i1 %46, label %73, label %47, !dbg !4091

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4092
  %49 = zext i1 %48 to i32, !dbg !4096
  %50 = add nsw i32 %72, %49, !dbg !4096
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4096
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %52, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %51, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %50, metadata !4014, metadata !DIExpression()), !dbg !4066
  br label %53, !dbg !4097

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %40, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %58, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %57, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %56, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %54, metadata !4014, metadata !DIExpression()), !dbg !4066
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %60, metadata !4002, metadata !DIExpression()), !dbg !4066
  %61 = load i8, i8* %60, align 1, !dbg !4100
  %62 = icmp eq i8 %61, 0, !dbg !4101
  br i1 %62, label %226, label %63, !dbg !4102, !llvm.loop !4103

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4091

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4106

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4017, metadata !DIExpression()), !dbg !4066
  %75 = add nsw i32 %72, -1, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %75, metadata !4014, metadata !DIExpression()), !dbg !4066
  br label %53, !dbg !4108

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4109

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 4, metadata !4006, metadata !DIExpression()), !dbg !4066
  br label %53, !dbg !4110

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 4, metadata !4006, metadata !DIExpression()), !dbg !4066
  br label %53, !dbg !4111

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4112
  %81 = icmp eq i8 %80, 108, !dbg !4114
  br i1 %81, label %82, label %109, !dbg !4115

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4116
  %84 = load i8, i8* %83, align 1, !dbg !4116
  %85 = icmp eq i8 %84, 108, !dbg !4119
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4120
  %89 = add i32 %88, 7, !dbg !4120
  %90 = and i32 %89, -8, !dbg !4120
  %91 = inttoptr i32 %90 to i8*, !dbg !4120
  %92 = inttoptr i32 %90 to double*, !dbg !4120
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4120
  %94 = load double, double* %92, align 8, !dbg !4120
  call void @llvm.dbg.value(metadata i8* %93, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 8, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 8, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata double %94, metadata !4034, metadata !DIExpression()), !dbg !4122
  %95 = ptrtoint i8* %43 to i32, !dbg !4123
  %96 = add i32 %95, 7, !dbg !4123
  %97 = and i32 %96, -8, !dbg !4123
  %98 = inttoptr i32 %97 to i8*, !dbg !4124
  call void @llvm.dbg.value(metadata i8* %98, metadata !4005, metadata !DIExpression()), !dbg !4066
  br i1 %22, label %104, label %99, !dbg !4125

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4126
  %101 = icmp ugt i32 %100, %196, !dbg !4130
  br i1 %101, label %320, label %102, !dbg !4131

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4132
  store double %94, double* %103, align 8, !dbg !4132
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4135
  call void @llvm.dbg.value(metadata i8* %105, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4017, metadata !DIExpression()), !dbg !4066
  br label %53, !dbg !4136

107:                                              ; preds = %73, %73
  br label %109, !dbg !4137

108:                                              ; preds = %73
  br label %109, !dbg !4137

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4066
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4066
  call void @llvm.dbg.value(metadata i32 %113, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %112, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4020, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  %114 = ptrtoint i8* %43 to i32, !dbg !4137
  %115 = add i32 %114, -1, !dbg !4137
  %116 = add i32 %115, %112, !dbg !4137
  %117 = sub i32 0, %112, !dbg !4137
  %118 = and i32 %116, %117, !dbg !4137
  %119 = inttoptr i32 %118 to i8*, !dbg !4138
  call void @llvm.dbg.value(metadata i8* %119, metadata !4005, metadata !DIExpression()), !dbg !4066
  br i1 %22, label %124, label %120, !dbg !4139

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4141
  %122 = add i32 %121, %118, !dbg !4142
  %123 = icmp ugt i32 %122, %196, !dbg !4143
  br i1 %123, label %320, label %124, !dbg !4144

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4145

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4138
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4146
  call void @llvm.dbg.value(metadata i8* %127, metadata !4003, metadata !DIExpression()), !dbg !4066
  %128 = bitcast i8* %41 to i8**, !dbg !4146
  %129 = load i8*, i8** %128, align 4, !dbg !4146
  call void @llvm.dbg.value(metadata i8* %129, metadata !4016, metadata !DIExpression()), !dbg !4066
  br label %130, !dbg !4147

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4066
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4148
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4066
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4149
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4066
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4066
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4066
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4066
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4066
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4066
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4150
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %142, metadata !4000, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %141, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %140, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %139, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %138, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %137, metadata !4011, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %136, metadata !4019, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %135, metadata !4012, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %133, metadata !4016, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %132, metadata !4014, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %131, metadata !4013, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.label(metadata !4065), !dbg !4152
  br i1 %22, label %146, label %144, !dbg !4153

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4154
  store i8* %133, i8** %145, align 4, !dbg !4157
  br label %146, !dbg !4158

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %147, metadata !4019, metadata !DIExpression()), !dbg !4066
  %148 = icmp sgt i32 %136, 0, !dbg !4160
  br i1 %148, label %152, label %149, !dbg !4161

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #28, !dbg !4162
  %151 = zext i1 %150 to i32, !dbg !4162
  br label %152, !dbg !4161

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4161
  %154 = icmp eq i32 %153, 0, !dbg !4161
  call void @llvm.dbg.value(metadata i1 %154, metadata !4043, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4163
  call void @llvm.dbg.value(metadata i1 %36, metadata !4046, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4163
  %155 = or i1 %36, %154, !dbg !4164
  br i1 %155, label %156, label %192, !dbg !4164

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4165
  %158 = sub i32 %157, %17, !dbg !4165
  %159 = lshr i32 %158, 2, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %159, metadata !4047, metadata !DIExpression()), !dbg !4167
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4168
  br i1 %161, label %162, label %163, !dbg !4168

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #27, !dbg !4170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4170
  unreachable, !dbg !4170

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4175
  br i1 %164, label %165, label %166, !dbg !4177

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #27, !dbg !4178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4178
  unreachable, !dbg !4178

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4183

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4184
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4187
  store i8 %168, i8* %169, align 1, !dbg !4188
  %170 = trunc i32 %132 to i8, !dbg !4189
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4190
  store i8 %170, i8* %171, align 1, !dbg !4191
  br i1 %154, label %175, label %172, !dbg !4192

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4193
  store i8 %173, i8* %169, align 1, !dbg !4193
  %174 = add i32 %131, 1, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %174, metadata !4013, metadata !DIExpression()), !dbg !4066
  br label %187, !dbg !4197

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %176, metadata !4012, metadata !DIExpression()), !dbg !4066
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4200

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %179, metadata !4000, metadata !DIExpression()), !dbg !4066
  br label %187, !dbg !4204

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4205

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %182, metadata !4000, metadata !DIExpression()), !dbg !4066
  br label %187, !dbg !4209

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4210
  %185 = add i32 %142, 2, !dbg !4212
  %186 = add i32 %185, %184, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %186, metadata !4000, metadata !DIExpression()), !dbg !4066
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4066
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4066
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4066
  call void @llvm.dbg.value(metadata i32 %190, metadata !4000, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %189, metadata !4012, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %188, metadata !4013, metadata !DIExpression()), !dbg !4066
  %191 = add nuw nsw i32 %137, 1, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %191, metadata !4011, metadata !DIExpression()), !dbg !4066
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4066
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4149
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4066
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4150
  call void @llvm.dbg.value(metadata i32 %196, metadata !4000, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %195, metadata !4011, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %194, metadata !4012, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %193, metadata !4013, metadata !DIExpression()), !dbg !4066
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4215
  call void @llvm.dbg.value(metadata i8* %197, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %143, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %141, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %139, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %138, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4020, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %132, metadata !4014, metadata !DIExpression()), !dbg !4066
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %198, metadata !4002, metadata !DIExpression()), !dbg !4066
  %199 = load i8, i8* %198, align 1, !dbg !4100
  %200 = icmp eq i8 %199, 0, !dbg !4101
  br i1 %200, label %226, label %63, !dbg !4102

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4216

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4217
  call void @llvm.dbg.value(metadata i8* %203, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 undef, metadata !4050, metadata !DIExpression()), !dbg !4218
  br i1 %22, label %219, label %204, !dbg !4219

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4217
  %206 = load i32, i32* %205, align 4, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %206, metadata !4050, metadata !DIExpression()), !dbg !4218
  %207 = inttoptr i32 %118 to i32*, !dbg !4220
  store i32 %206, i32* %207, align 4, !dbg !4223
  br label %219, !dbg !4224

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4225
  %210 = add i32 %209, 7, !dbg !4225
  %211 = and i32 %210, -8, !dbg !4225
  %212 = inttoptr i32 %211 to i8*, !dbg !4225
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4225
  call void @llvm.dbg.value(metadata i8* %213, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i64 undef, metadata !4056, metadata !DIExpression()), !dbg !4226
  br i1 %22, label %219, label %214, !dbg !4227

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4225
  %216 = load i64, i64* %215, align 8, !dbg !4225
  call void @llvm.dbg.value(metadata i64 %216, metadata !4056, metadata !DIExpression()), !dbg !4226
  %217 = inttoptr i32 %118 to i64*, !dbg !4228
  store i64 %216, i64* %217, align 8, !dbg !4233
  br label %219, !dbg !4234

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #27, !dbg !4235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4235
  unreachable, !dbg !4235

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4240
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4240
  call void @llvm.dbg.value(metadata i8* %221, metadata !4003, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %40, metadata !4002, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %222, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %113, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %112, metadata !4007, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4020, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 poison, metadata !4017, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %72, metadata !4014, metadata !DIExpression()), !dbg !4066
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %223, metadata !4002, metadata !DIExpression()), !dbg !4066
  %224 = load i8, i8* %223, align 1, !dbg !4100
  %225 = icmp eq i8 %224, 0, !dbg !4101
  br i1 %225, label %226, label %38, !dbg !4102

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4241
  %228 = ptrtoint i8* %227 to i32, !dbg !4242
  %229 = sub i32 %228, %17, !dbg !4242
  %230 = lshr i32 %229, 2, !dbg !4244
  %231 = icmp ugt i32 %229, 1023, !dbg !4245
  br i1 %231, label %232, label %233, !dbg !4246

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #27, !dbg !4247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4247
  unreachable, !dbg !4247

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4252

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4253
  %236 = add i32 %235, %229, !dbg !4256
  br label %320, !dbg !4257

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4258
  store i8 %238, i8* %0, align 1, !dbg !4259
  %239 = trunc i32 %194 to i8, !dbg !4260
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4262
  store i8 %240, i8* %242, align 1, !dbg !4264
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4265
  store i8 %241, i8* %243, align 1, !dbg !4266
  %244 = trunc i32 %193 to i8, !dbg !4267
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4268
  store i8 %244, i8* %245, align 1, !dbg !4269
  %246 = icmp eq i32 %193, 0, !dbg !4270
  %247 = xor i1 %246, true, !dbg !4271
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %227, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 0, metadata !4015, metadata !DIExpression()), !dbg !4066
  br i1 %249, label %250, label %269, !dbg !4271

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4272

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %254, metadata !4015, metadata !DIExpression()), !dbg !4066
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4273
  %256 = load i8, i8* %255, align 1, !dbg !4273
  %257 = icmp sgt i8 %256, -1, !dbg !4275
  br i1 %257, label %265, label %258, !dbg !4276

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4059, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4277
  %259 = ptrtoint i8* %253 to i32, !dbg !4278
  %260 = add i32 %251, %259, !dbg !4280
  %261 = icmp ugt i32 %260, %196, !dbg !4281
  br i1 %261, label %320, label %262, !dbg !4282

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4283
  call void @llvm.dbg.value(metadata i8 %263, metadata !4059, metadata !DIExpression()), !dbg !4277
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4284
  call void @llvm.dbg.value(metadata i8* %264, metadata !4005, metadata !DIExpression()), !dbg !4066
  store i8 %263, i8* %253, align 1, !dbg !4285
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4215
  call void @llvm.dbg.value(metadata i8* %266, metadata !4005, metadata !DIExpression()), !dbg !4066
  %267 = add nuw i32 %254, 1, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %267, metadata !4015, metadata !DIExpression()), !dbg !4066
  %268 = icmp eq i32 %267, %195, !dbg !4287
  br i1 %268, label %269, label %252, !dbg !4272, !llvm.loop !4288

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4215
  call void @llvm.dbg.value(metadata i8* %270, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 0, metadata !4015, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %133, metadata !4016, metadata !DIExpression()), !dbg !4066
  %271 = icmp eq i32 %195, 0, !dbg !4290
  br i1 %271, label %316, label %272, !dbg !4293

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4293

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %276, metadata !4016, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %277, metadata !4015, metadata !DIExpression()), !dbg !4066
  br i1 %246, label %282, label %278, !dbg !4294

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4297
  %280 = load i8, i8* %279, align 1, !dbg !4297
  %281 = icmp sgt i8 %280, -1, !dbg !4298
  br i1 %281, label %282, label %311, !dbg !4299

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4300

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4006, metadata !DIExpression()), !dbg !4066
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4301
  %285 = load i8, i8* %284, align 1, !dbg !4301
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4304
  call void @llvm.dbg.value(metadata i8* %286, metadata !4005, metadata !DIExpression()), !dbg !4066
  store i8 %285, i8* %275, align 1, !dbg !4305
  br label %297, !dbg !4306

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4307
  %289 = load i8, i8* %288, align 1, !dbg !4307
  %290 = zext i8 %289 to i32, !dbg !4307
  %291 = shl nuw nsw i32 %290, 2, !dbg !4309
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4310
  %293 = bitcast i8* %292 to i8**, !dbg !4311
  %294 = load i8*, i8** %293, align 4, !dbg !4311
  call void @llvm.dbg.value(metadata i8* %294, metadata !4016, metadata !DIExpression()), !dbg !4066
  store i8* null, i8** %293, align 4, !dbg !4312
  %295 = tail call i32 @strlen(i8* noundef %294) #27, !dbg !4313
  %296 = add i32 %295, 1, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %296, metadata !4006, metadata !DIExpression()), !dbg !4066
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4066
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4315
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4066
  call void @llvm.dbg.value(metadata i8* %300, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %299, metadata !4006, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %298, metadata !4016, metadata !DIExpression()), !dbg !4066
  %301 = ptrtoint i8* %300 to i32, !dbg !4316
  %302 = add i32 %273, %299, !dbg !4318
  %303 = add i32 %302, %301, !dbg !4319
  %304 = icmp ugt i32 %303, %196, !dbg !4320
  br i1 %304, label %320, label %305, !dbg !4321

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4322
  %307 = load i8, i8* %306, align 1, !dbg !4322
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4323
  call void @llvm.dbg.value(metadata i8* %308, metadata !4005, metadata !DIExpression()), !dbg !4066
  store i8 %307, i8* %300, align 1, !dbg !4324
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #27, !dbg !4325
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4326
  call void @llvm.dbg.value(metadata i8* %310, metadata !4005, metadata !DIExpression()), !dbg !4066
  br label %311, !dbg !4327

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4328
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4066
  call void @llvm.dbg.value(metadata i8* %313, metadata !4005, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %312, metadata !4016, metadata !DIExpression()), !dbg !4066
  %314 = add nuw i32 %277, 1, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %314, metadata !4015, metadata !DIExpression()), !dbg !4066
  %315 = icmp eq i32 %314, %195, !dbg !4290
  br i1 %315, label %316, label %274, !dbg !4293, !llvm.loop !4330

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4215
  %318 = ptrtoint i8* %317 to i32, !dbg !4332
  %319 = sub i32 %318, %17, !dbg !4332
  br label %320, !dbg !4333

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4334
  ret i32 %321, !dbg !4334
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4335 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4339, metadata !DIExpression()), !dbg !4340
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #28, !dbg !4341
  ret i1 %2, !dbg !4342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4348, metadata !DIExpression()), !dbg !4349
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4350
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4351
  %4 = and i1 %2, %3, !dbg !4351
  ret i1 %4, !dbg !4352
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4353 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4357, metadata !DIExpression()), !dbg !4363
  call void @llvm.dbg.value(metadata i32 %1, metadata !4358, metadata !DIExpression()), !dbg !4363
  call void @llvm.dbg.value(metadata i32 %2, metadata !4359, metadata !DIExpression()), !dbg !4363
  call void @llvm.dbg.value(metadata i8* %3, metadata !4360, metadata !DIExpression()), !dbg !4363
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4364
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4364
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4361, metadata !DIExpression()), !dbg !4365
  call void @llvm.va_start(i8* nonnull %6), !dbg !4366
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4367
  %8 = load i32, i32* %7, align 4, !dbg !4367
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4367
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #28, !dbg !4367
  call void @llvm.dbg.value(metadata i32 %10, metadata !4362, metadata !DIExpression()), !dbg !4363
  call void @llvm.va_end(i8* nonnull %6), !dbg !4368
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4369
  ret i32 %10, !dbg !4370
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4371 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4383, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4384, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %2, metadata !4385, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %3, metadata !4386, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %3, metadata !4387, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %3, metadata !4388, metadata !DIExpression()), !dbg !4402
  %5 = icmp eq i8* %3, null, !dbg !4403
  br i1 %5, label %45, label %6, !dbg !4405

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4397, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4402
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4406
  %8 = load i8, i8* %7, align 1, !dbg !4406
  %9 = zext i8 %8 to i32, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %9, metadata !4398, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8 undef, metadata !4399, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata i8 undef, metadata !4400, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata i32 0, metadata !4396, metadata !DIExpression()), !dbg !4402
  %10 = icmp eq i8 %8, 0, !dbg !4408
  br i1 %10, label %39, label %11, !dbg !4411

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4412
  call void @llvm.dbg.value(metadata i8 %12, metadata !4397, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %13 = zext i8 %12 to i32, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %13, metadata !4397, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %14 = shl nuw nsw i32 %13, 2, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %14, metadata !4397, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4415
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4416
  %17 = load i8, i8* %16, align 1, !dbg !4416
  call void @llvm.dbg.value(metadata i8 %17, metadata !4399, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %18 = zext i8 %17 to i32, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %18, metadata !4399, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4418
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4419
  %21 = load i8, i8* %20, align 1, !dbg !4419
  call void @llvm.dbg.value(metadata i8 %21, metadata !4400, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %22 = zext i8 %21 to i32, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %22, metadata !4400, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %23 = shl nuw nsw i32 %22, 1, !dbg !4421
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4402
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4422
  call void @llvm.dbg.value(metadata i8* %24, metadata !4394, metadata !DIExpression()), !dbg !4402
  br label %25, !dbg !4411

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4394, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i32 %27, metadata !4396, metadata !DIExpression()), !dbg !4402
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4423
  call void @llvm.dbg.value(metadata i8* %28, metadata !4394, metadata !DIExpression()), !dbg !4402
  %29 = load i8, i8* %26, align 1, !dbg !4425
  %30 = zext i8 %29 to i32, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %30, metadata !4401, metadata !DIExpression()), !dbg !4402
  %31 = shl nuw nsw i32 %30, 2, !dbg !4426
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4427
  %33 = bitcast i8* %32 to i8**, !dbg !4428
  call void @llvm.dbg.value(metadata i8** %33, metadata !4395, metadata !DIExpression()), !dbg !4402
  store i8* %28, i8** %33, align 4, !dbg !4429
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4430
  %35 = add i32 %34, 1, !dbg !4431
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4432
  call void @llvm.dbg.value(metadata i8* %36, metadata !4394, metadata !DIExpression()), !dbg !4402
  %37 = add nuw nsw i32 %27, 1, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %37, metadata !4396, metadata !DIExpression()), !dbg !4402
  %38 = icmp eq i32 %37, %9, !dbg !4408
  br i1 %38, label %39, label %25, !dbg !4411, !llvm.loop !4434

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4436
  call void @llvm.dbg.value(metadata i8* %40, metadata !4387, metadata !DIExpression()), !dbg !4402
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4437
  %42 = bitcast i8* %41 to i8**, !dbg !4437
  %43 = load i8*, i8** %42, align 1, !dbg !4437
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #28, !dbg !4438
  br label %45, !dbg !4439

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4402
  ret i32 %46, !dbg !4440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4441 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4445, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4446, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %2, metadata !4447, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %3, metadata !4448, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %4, metadata !4449, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %4, metadata !4450, metadata !DIExpression()), !dbg !4455
  %6 = ptrtoint i8* %4 to i32, !dbg !4456
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4456
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4456
  ret i32 %8, !dbg !4457
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4458 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4462, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i32 %1, metadata !4463, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i8 0, metadata !4465, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i32 0, metadata !4466, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i8 poison, metadata !4465, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i8* %0, metadata !4462, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4467
  %3 = load i8, i8* %0, align 1, !dbg !4468
  call void @llvm.dbg.value(metadata i8 %3, metadata !4464, metadata !DIExpression()), !dbg !4467
  %4 = icmp eq i8 %3, 0, !dbg !4469
  br i1 %4, label %29, label %5, !dbg !4470

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %8, metadata !4466, metadata !DIExpression()), !dbg !4467
  br i1 %9, label %11, label %22, !dbg !4472

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4474
  br i1 %12, label %13, label %17, !dbg !4478

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4479
  br i1 %14, label %29, label %15, !dbg !4482

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4483
  br i1 %16, label %29, label %22, !dbg !4485

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4486
  %19 = xor i1 %18, true, !dbg !4488
  %20 = zext i1 %18 to i32, !dbg !4488
  %21 = add nsw i32 %8, %20, !dbg !4488
  br label %22, !dbg !4488

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4467
  call void @llvm.dbg.value(metadata i32 %24, metadata !4466, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i8 poison, metadata !4465, metadata !DIExpression()), !dbg !4467
  %25 = icmp eq i8 %6, 37, !dbg !4489
  %26 = xor i1 %25, %23, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %10, metadata !4462, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i8* %10, metadata !4462, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4467
  %27 = load i8, i8* %10, align 1, !dbg !4468
  call void @llvm.dbg.value(metadata i8 %27, metadata !4464, metadata !DIExpression()), !dbg !4467
  %28 = icmp eq i8 %27, 0, !dbg !4469
  br i1 %28, label %29, label %5, !dbg !4470, !llvm.loop !4492

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4467
  ret i1 %30, !dbg !4494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4495 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4499, metadata !DIExpression()), !dbg !4500
  %2 = add i8 %0, -64, !dbg !4501
  %3 = icmp ult i8 %2, 59, !dbg !4501
  ret i1 %3, !dbg !4502
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4503 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4511, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %1, metadata !4512, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4513, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %3, metadata !4514, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %4, metadata !4515, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i16* %5, metadata !4516, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %6, metadata !4517, metadata !DIExpression()), !dbg !4580
  %11 = icmp eq i8* %0, null, !dbg !4581
  br i1 %11, label %12, label %13, !dbg !4584

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4585
  unreachable, !dbg !4585

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4518, metadata !DIExpression()), !dbg !4580
  %14 = bitcast i8* %0 to i32*, !dbg !4587
  call void @llvm.dbg.value(metadata i32* %14, metadata !4519, metadata !DIExpression()), !dbg !4580
  %15 = and i32 %4, 8, !dbg !4588
  %16 = icmp eq i32 %15, 0, !dbg !4589
  call void @llvm.dbg.value(metadata i1 %16, metadata !4523, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %0, metadata !4526, metadata !DIExpression()), !dbg !4580
  %17 = icmp eq i32 %1, 0, !dbg !4590
  br i1 %17, label %18, label %20, !dbg !4591

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #28, !dbg !4592
  br label %20, !dbg !4591

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4591
  call void @llvm.dbg.value(metadata i32 %21, metadata !4512, metadata !DIExpression()), !dbg !4580
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4593
  %23 = load i8, i8* %22, align 1, !dbg !4593
  %24 = zext i8 %23 to i32, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %24, metadata !4521, metadata !DIExpression()), !dbg !4580
  %25 = icmp ne i8 %23, 0, !dbg !4595
  %26 = and i32 %4, 1, !dbg !4596
  %27 = icmp ne i32 %26, 0, !dbg !4596
  %28 = and i1 %27, %25, !dbg !4596
  call void @llvm.dbg.value(metadata i1 %28, metadata !4525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4580
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4597
  %30 = load i8, i8* %29, align 1, !dbg !4597
  %31 = zext i8 %30 to i32, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %31, metadata !4522, metadata !DIExpression()), !dbg !4580
  %32 = icmp ne i8 %30, 0, !dbg !4599
  %33 = and i32 %4, 2, !dbg !4600
  %34 = icmp ne i32 %33, 0, !dbg !4600
  %35 = and i1 %34, %32, !dbg !4600
  call void @llvm.dbg.value(metadata i1 %35, metadata !4524, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4580
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4601
  br i1 %36, label %41, label %37, !dbg !4601

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4603
  br i1 %38, label %287, label %39, !dbg !4606

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #27, !dbg !4607
  br label %287, !dbg !4609

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4610
  %43 = zext i8 %42 to i32, !dbg !4611
  %44 = shl nuw nsw i32 %43, 2, !dbg !4612
  call void @llvm.dbg.value(metadata i32 %44, metadata !4520, metadata !DIExpression()), !dbg !4580
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4613
  %46 = bitcast i8* %45 to i8**, !dbg !4614
  %47 = load i8*, i8** %46, align 4, !dbg !4614
  call void @llvm.dbg.value(metadata i8* %47, metadata !4529, metadata !DIExpression()), !dbg !4580
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4615
  call void @llvm.dbg.value(metadata i8* %48, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4580
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4616
  br i1 %49, label %50, label %135, !dbg !4617

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4528, metadata !DIExpression()), !dbg !4580
  br i1 %28, label %51, label %76, !dbg !4618

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %48, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 0, metadata !4532, metadata !DIExpression()), !dbg !4619
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4620

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %55, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %56, metadata !4531, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %57, metadata !4532, metadata !DIExpression()), !dbg !4619
  %58 = load i8, i8* %55, align 1, !dbg !4621
  %59 = zext i8 %58 to i32, !dbg !4622
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4622
  %61 = bitcast i32* %60 to i8**, !dbg !4623
  %62 = load i8*, i8** %61, align 4, !dbg !4623
  call void @llvm.dbg.value(metadata i8* %62, metadata !4538, metadata !DIExpression()), !dbg !4624
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #28, !dbg !4625
  call void @llvm.dbg.value(metadata i32 %63, metadata !4541, metadata !DIExpression()), !dbg !4624
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4626
  br i1 %65, label %66, label %70, !dbg !4626

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4628
  %68 = add nuw i32 %56, 1, !dbg !4630
  call void @llvm.dbg.value(metadata i32 %68, metadata !4531, metadata !DIExpression()), !dbg !4580
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4631
  store i16 %67, i16* %69, align 2, !dbg !4632
  br label %70, !dbg !4633

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %71, metadata !4531, metadata !DIExpression()), !dbg !4580
  %72 = add nsw i32 %63, %54, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %72, metadata !4528, metadata !DIExpression()), !dbg !4580
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %73, metadata !4530, metadata !DIExpression()), !dbg !4580
  %74 = add nuw nsw i32 %57, 1, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %74, metadata !4532, metadata !DIExpression()), !dbg !4619
  %75 = icmp eq i32 %74, %24, !dbg !4637
  br i1 %75, label %82, label %53, !dbg !4620, !llvm.loop !4638

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4640
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4640
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4640
  br label %82, !dbg !4640

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4643
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4580
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4644
  call void @llvm.dbg.value(metadata i1 undef, metadata !4542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4645
  call void @llvm.dbg.value(metadata i32 0, metadata !4543, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i32 %85, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %84, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %83, metadata !4531, metadata !DIExpression()), !dbg !4580
  %86 = icmp eq i8 %30, 0, !dbg !4647
  br i1 %86, label %287, label %87, !dbg !4648

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4649
  %89 = icmp eq i32 %88, 0, !dbg !4650
  call void @llvm.dbg.value(metadata i1 %89, metadata !4542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4645
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4648

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %96, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %97, metadata !4531, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %98, metadata !4543, metadata !DIExpression()), !dbg !4646
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4651
  call void @llvm.dbg.value(metadata i8* %99, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 undef, metadata !4545, metadata !DIExpression()), !dbg !4652
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4653
  call void @llvm.dbg.value(metadata i8* %100, metadata !4530, metadata !DIExpression()), !dbg !4580
  %101 = load i8, i8* %99, align 1, !dbg !4654
  call void @llvm.dbg.value(metadata i8 %101, metadata !4548, metadata !DIExpression()), !dbg !4652
  %102 = zext i8 %101 to i32, !dbg !4655
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4655
  %104 = bitcast i32* %103 to i8**, !dbg !4656
  %105 = load i8*, i8** %104, align 4, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %105, metadata !4549, metadata !DIExpression()), !dbg !4652
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #28, !dbg !4657
  call void @llvm.dbg.value(metadata i1 %106, metadata !4550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4652
  br i1 %16, label %113, label %107, !dbg !4658

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4660
  call void @llvm.dbg.value(metadata i8 %108, metadata !4545, metadata !DIExpression()), !dbg !4652
  %109 = zext i8 %108 to i32, !dbg !4661
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #28, !dbg !4662
  br i1 %110, label %111, label %113, !dbg !4663

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #27, !dbg !4664
  %112 = add nsw i32 %95, -2, !dbg !4670
  call void @llvm.dbg.value(metadata i32 %112, metadata !4528, metadata !DIExpression()), !dbg !4580
  br label %130, !dbg !4671

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4672

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4673

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %116, metadata !4528, metadata !DIExpression()), !dbg !4580
  br label %130, !dbg !4678

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4679

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4576), !dbg !4680
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #28, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %119, metadata !4551, metadata !DIExpression()), !dbg !4652
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4682
  br i1 %121, label %122, label %126, !dbg !4682

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4684
  %124 = add nuw i32 %97, 1, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %124, metadata !4531, metadata !DIExpression()), !dbg !4580
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4687
  store i16 %123, i16* %125, align 2, !dbg !4688
  br label %126, !dbg !4689

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4580
  call void @llvm.dbg.value(metadata i32 %127, metadata !4531, metadata !DIExpression()), !dbg !4580
  %128 = add i32 %95, -1, !dbg !4690
  %129 = add i32 %128, %119, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %129, metadata !4528, metadata !DIExpression()), !dbg !4580
  br label %130, !dbg !4692

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4580
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4652
  call void @llvm.dbg.value(metadata i32 %132, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %131, metadata !4531, metadata !DIExpression()), !dbg !4580
  %133 = add nuw nsw i32 %98, 1, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %100, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %133, metadata !4543, metadata !DIExpression()), !dbg !4646
  %134 = icmp eq i32 %133, %31, !dbg !4647
  br i1 %134, label %287, label %94, !dbg !4648, !llvm.loop !4694

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4553, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4554, metadata !DIExpression()), !dbg !4697
  br i1 %28, label %136, label %138, !dbg !4698

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4555, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 0, metadata !4556, metadata !DIExpression()), !dbg !4580
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %137, metadata !4557, metadata !DIExpression()), !dbg !4580
  br label %143, !dbg !4702

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4703
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4703

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4557, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 undef, metadata !4556, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 0, metadata !4555, metadata !DIExpression()), !dbg !4580
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #27, !dbg !4705
  br label %148, !dbg !4708

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %151, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 0, metadata !4559, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8 %149, metadata !4556, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 %150, metadata !4555, metadata !DIExpression()), !dbg !4580
  %152 = icmp eq i8 %30, 0, !dbg !4711
  br i1 %152, label %153, label %155, !dbg !4712

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4713
  br label %160, !dbg !4712

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4712

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4713
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4714
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4715
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4580
  call void @llvm.dbg.value(metadata i8 undef, metadata !4552, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4580
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4716
  %166 = load i8, i8* %165, align 1, !dbg !4716
  %167 = zext i8 %162 to i32, !dbg !4717
  %168 = add i8 %166, %162, !dbg !4718
  call void @llvm.dbg.value(metadata i8 %168, metadata !4552, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4580
  %169 = icmp eq i32 %33, 0, !dbg !4719
  %170 = lshr i8 %163, 1, !dbg !4720
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4720
  call void @llvm.dbg.value(metadata i8 %171, metadata !4552, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4580
  %172 = icmp eq i32 %26, 0, !dbg !4721
  %173 = icmp eq i32 %161, 0, !dbg !4713
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4713
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4713
  call void @llvm.dbg.value(metadata i8 %175, metadata !4552, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4580
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4567, metadata !DIExpression()), !dbg !4722
  %176 = load i32, i32* %14, align 1, !dbg !4723
  store i8 %168, i8* %165, align 1, !dbg !4724
  store i8 %175, i8* %22, align 1, !dbg !4724
  store i8 %171, i8* %29, align 1, !dbg !4724
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #27, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %177, metadata !4558, metadata !DIExpression()), !dbg !4580
  %178 = icmp slt i32 %177, 0, !dbg !4726
  br i1 %178, label %287, label %240, !dbg !4728

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %181, metadata !4559, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8 %182, metadata !4556, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 %183, metadata !4555, metadata !DIExpression()), !dbg !4580
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %184, metadata !4530, metadata !DIExpression()), !dbg !4580
  %185 = load i8, i8* %180, align 1, !dbg !4730
  call void @llvm.dbg.value(metadata i8 %185, metadata !4561, metadata !DIExpression()), !dbg !4731
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %186, metadata !4530, metadata !DIExpression()), !dbg !4580
  %187 = load i8, i8* %184, align 1, !dbg !4733
  call void @llvm.dbg.value(metadata i8 %187, metadata !4564, metadata !DIExpression()), !dbg !4731
  %188 = zext i8 %187 to i32, !dbg !4734
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4734
  %190 = bitcast i32* %189 to i8**, !dbg !4735
  %191 = load i8*, i8** %190, align 4, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %191, metadata !4565, metadata !DIExpression()), !dbg !4731
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #28, !dbg !4736
  call void @llvm.dbg.value(metadata i1 %192, metadata !4566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4731
  br i1 %16, label %196, label %193, !dbg !4737

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4739
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #28, !dbg !4740
  br i1 %195, label %235, label %196, !dbg !4741

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4742

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4743

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4746
  br i1 %199, label %201, label %200, !dbg !4751

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4752
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4752
  unreachable, !dbg !4752

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4746
  %203 = add nuw nsw i8 %183, 1, !dbg !4754
  call void @llvm.dbg.value(metadata i8 %203, metadata !4555, metadata !DIExpression()), !dbg !4580
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4755
  br label %231, !dbg !4756

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4757

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4758
  br i1 %207, label %209, label %208, !dbg !4763

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4764
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4764
  unreachable, !dbg !4764

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4758
  %211 = add nuw nsw i8 %182, 1, !dbg !4766
  call void @llvm.dbg.value(metadata i8 %211, metadata !4556, metadata !DIExpression()), !dbg !4580
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4767
  br label %231, !dbg !4768

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4769

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4771
  br i1 %215, label %217, label %216, !dbg !4776

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4777
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4777
  unreachable, !dbg !4777

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4771
  %219 = add nuw nsw i8 %183, 1, !dbg !4779
  call void @llvm.dbg.value(metadata i8 %219, metadata !4555, metadata !DIExpression()), !dbg !4580
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4780
  br label %231, !dbg !4781

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4782
  br i1 %222, label %224, label %223, !dbg !4786

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4787
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4787
  unreachable, !dbg !4787

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4782
  %226 = add nuw nsw i8 %182, 1, !dbg !4789
  call void @llvm.dbg.value(metadata i8 %226, metadata !4556, metadata !DIExpression()), !dbg !4580
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4790
  store i8 %185, i8* %227, align 1, !dbg !4791
  %228 = add nuw nsw i8 %182, 2, !dbg !4792
  call void @llvm.dbg.value(metadata i8 %228, metadata !4556, metadata !DIExpression()), !dbg !4580
  %229 = zext i8 %226 to i32, !dbg !4793
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4793
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4794
  br label %235, !dbg !4795

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4580
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4715
  call void @llvm.dbg.value(metadata i8 %237, metadata !4556, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 %236, metadata !4555, metadata !DIExpression()), !dbg !4580
  %238 = add nuw nsw i32 %181, 1, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %186, metadata !4530, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %238, metadata !4559, metadata !DIExpression()), !dbg !4710
  %239 = icmp eq i32 %238, %31, !dbg !4711
  br i1 %239, label %160, label %179, !dbg !4712, !llvm.loop !4796

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4720
  call void @llvm.dbg.value(metadata i32 %177, metadata !4528, metadata !DIExpression()), !dbg !4580
  store i32 %176, i32* %14, align 1, !dbg !4798
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4799
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #27, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %243, metadata !4558, metadata !DIExpression()), !dbg !4580
  %244 = icmp slt i32 %243, 0, !dbg !4801
  br i1 %244, label %287, label %245, !dbg !4803

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4528, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4804
  %248 = add nuw nsw i32 %44, %24, !dbg !4804
  %249 = sub i32 %247, %248, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %249, metadata !4568, metadata !DIExpression()), !dbg !4580
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #27, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %250, metadata !4558, metadata !DIExpression()), !dbg !4580
  %251 = icmp slt i32 %250, 0, !dbg !4806
  br i1 %251, label %287, label %252, !dbg !4808

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %253, metadata !4528, metadata !DIExpression()), !dbg !4580
  %254 = add nuw nsw i32 %253, %250, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %254, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 0, metadata !4569, metadata !DIExpression()), !dbg !4811
  %255 = icmp eq i8 %162, 0, !dbg !4812
  br i1 %255, label %284, label %256, !dbg !4813

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4813

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4569, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i32 %260, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4814
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4815
  %262 = load i8, i8* %261, align 1, !dbg !4815
  call void @llvm.dbg.value(metadata i8 %262, metadata !4571, metadata !DIExpression()), !dbg !4816
  store i8 %262, i8* %10, align 1, !dbg !4817
  %263 = zext i8 %262 to i32, !dbg !4818
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4818
  %265 = bitcast i32* %264 to i8**, !dbg !4819
  %266 = load i8*, i8** %265, align 4, !dbg !4819
  call void @llvm.dbg.value(metadata i8* %266, metadata !4574, metadata !DIExpression()), !dbg !4816
  br i1 %257, label %270, label %267, !dbg !4820

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4821
  %269 = load i16, i16* %268, align 2, !dbg !4821
  br label %270, !dbg !4820

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4820
  call void @llvm.dbg.value(metadata i32 undef, metadata !4575, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4816
  call void @llvm.dbg.value(metadata i8* %10, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4816
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %272, metadata !4558, metadata !DIExpression()), !dbg !4580
  %273 = icmp slt i32 %272, 0, !dbg !4823
  br i1 %273, label %277, label %274, !dbg !4825

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4575, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4528, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #28, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %275, metadata !4558, metadata !DIExpression()), !dbg !4580
  %276 = icmp slt i32 %275, 0, !dbg !4827
  br i1 %276, label %277, label %279, !dbg !4829

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4830
  call void @llvm.dbg.value(metadata i32 undef, metadata !4528, metadata !DIExpression()), !dbg !4580
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4831
  call void @llvm.dbg.value(metadata i32 %280, metadata !4528, metadata !DIExpression()), !dbg !4580
  %281 = add nsw i32 %280, %275, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %281, metadata !4528, metadata !DIExpression()), !dbg !4580
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4830
  %282 = add nuw nsw i32 %259, 1, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %282, metadata !4569, metadata !DIExpression()), !dbg !4811
  %283 = icmp eq i32 %282, %167, !dbg !4812
  br i1 %283, label %284, label %258, !dbg !4813, !llvm.loop !4834

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4810
  call void @llvm.dbg.value(metadata i32 %285, metadata !4528, metadata !DIExpression()), !dbg !4580
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4836
  br label %287, !dbg !4837

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4580
  ret i32 %288, !dbg !4838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4843, metadata !DIExpression()), !dbg !4851
  %2 = icmp eq i8* %0, null, !dbg !4852
  br i1 %2, label %3, label %4, !dbg !4855

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4856
  unreachable, !dbg !4856

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4844, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %0, metadata !4845, metadata !DIExpression()), !dbg !4851
  %5 = load i8, i8* %0, align 1, !dbg !4858
  %6 = zext i8 %5 to i32, !dbg !4858
  %7 = shl nuw nsw i32 %6, 2, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %7, metadata !4846, metadata !DIExpression()), !dbg !4851
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4860
  %9 = load i8, i8* %8, align 1, !dbg !4860
  %10 = zext i8 %9 to i32, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %10, metadata !4847, metadata !DIExpression()), !dbg !4851
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4861
  %12 = load i8, i8* %11, align 1, !dbg !4861
  %13 = zext i8 %12 to i32, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %13, metadata !4848, metadata !DIExpression()), !dbg !4851
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %14, metadata !4844, metadata !DIExpression()), !dbg !4851
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %15, metadata !4844, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i32 0, metadata !4849, metadata !DIExpression()), !dbg !4864
  %16 = icmp eq i8 %9, 0, !dbg !4865
  br i1 %16, label %17, label %22, !dbg !4867

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4851
  %19 = ptrtoint i8* %18 to i32, !dbg !4868
  %20 = ptrtoint i8* %0 to i32, !dbg !4868
  %21 = sub i32 %19, %20, !dbg !4868
  ret i32 %21, !dbg !4869

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4849, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i8* %24, metadata !4844, metadata !DIExpression()), !dbg !4851
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %25, metadata !4844, metadata !DIExpression()), !dbg !4851
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #27, !dbg !4872
  %27 = add i32 %26, 1, !dbg !4873
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %28, metadata !4844, metadata !DIExpression()), !dbg !4851
  %29 = add nuw nsw i32 %23, 1, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %29, metadata !4849, metadata !DIExpression()), !dbg !4864
  %30 = icmp eq i32 %29, %10, !dbg !4865
  br i1 %30, label %17, label %22, !dbg !4867, !llvm.loop !4876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4878 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4882, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8* %1, metadata !4883, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8* %2, metadata !4884, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i16 %3, metadata !4885, metadata !DIExpression()), !dbg !4886
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4887
  br i1 %5, label %6, label %9, !dbg !4889

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4890
  %8 = add i32 %7, 1, !dbg !4892
  br label %20, !dbg !4893

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4894
  br i1 %10, label %13, label %11, !dbg !4895

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4895
  br label %16, !dbg !4895

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4896
  %15 = add i32 %14, 1, !dbg !4897
  br label %16, !dbg !4895

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4895
  %18 = and i32 %17, 65535, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %17, metadata !4885, metadata !DIExpression()), !dbg !4886
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4899
  br label %20, !dbg !4900

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4886
  ret i32 %21, !dbg !4901
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4904, metadata !DIExpression()), !dbg !4905
  ret i32 0, !dbg !4906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4907 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4911, metadata !DIExpression()), !dbg !4912
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4913
  ret void, !dbg !4914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4915 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4918
  ret i8* %1, !dbg !4919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4920 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4931, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i8* %0, metadata !4930, metadata !DIExpression()), !dbg !4940
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #28, !dbg !4941
  ret void, !dbg !4943
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4948, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i8* %1, metadata !4949, metadata !DIExpression()), !dbg !4950
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4951
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4951
  ret i32 %4, !dbg !4952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4953 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4960, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4957, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i8* %1, metadata !4958, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i8* %2, metadata !4959, metadata !DIExpression()), !dbg !4961
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4962
  ret void, !dbg !4963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4964 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4968, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32 %1, metadata !4969, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32 0, metadata !4970, metadata !DIExpression()), !dbg !4971
  %3 = icmp eq i32 %1, 0, !dbg !4972
  br i1 %3, label %13, label %4, !dbg !4975

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4970, metadata !DIExpression()), !dbg !4971
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4976
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4978
  %8 = load i8, i8* %7, align 1, !dbg !4978
  %9 = zext i8 %8 to i32, !dbg !4978
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4976
  %11 = add nuw i32 %5, 1, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %11, metadata !4970, metadata !DIExpression()), !dbg !4971
  %12 = icmp eq i32 %11, %1, !dbg !4972
  br i1 %12, label %13, label %4, !dbg !4975, !llvm.loop !4980

13:                                               ; preds = %4, %2
  ret void, !dbg !4982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4983 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4987, metadata !DIExpression()), !dbg !4989
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4990
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4990
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4988, metadata !DIExpression()), !dbg !4991
  call void @llvm.va_start(i8* nonnull %3), !dbg !4992
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4993
  %5 = load i32, i32* %4, align 4, !dbg !4993
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4993
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !4993
  call void @llvm.va_end(i8* nonnull %3), !dbg !4994
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4995
  ret void, !dbg !4995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4996 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5000, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i32 %1, metadata !5001, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i8* %2, metadata !5002, metadata !DIExpression()), !dbg !5005
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5006
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5003, metadata !DIExpression()), !dbg !5007
  call void @llvm.va_start(i8* nonnull %5), !dbg !5008
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5009
  %7 = load i32, i32* %6, align 4, !dbg !5009
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5009
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #28, !dbg !5009
  call void @llvm.dbg.value(metadata i32 %9, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.va_end(i8* nonnull %5), !dbg !5010
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5011
  ret i32 %9, !dbg !5012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5013 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5020, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.value(metadata i8* %0, metadata !5017, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.value(metadata i32 %1, metadata !5018, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.value(metadata i8* %2, metadata !5019, metadata !DIExpression()), !dbg !5027
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5028
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5028
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5021, metadata !DIExpression()), !dbg !5029
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5030
  store i8* %0, i8** %7, align 4, !dbg !5030
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5030
  store i32 %1, i32* %8, align 4, !dbg !5030
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5030
  store i32 0, i32* %9, align 4, !dbg !5030
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #28, !dbg !5031
  %10 = load i32, i32* %9, align 4, !dbg !5032
  %11 = load i32, i32* %8, align 4, !dbg !5034
  %12 = icmp slt i32 %10, %11, !dbg !5035
  br i1 %12, label %13, label %15, !dbg !5036

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5037
  store i8 0, i8* %14, align 1, !dbg !5039
  br label %15, !dbg !5040

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5041
  ret i32 %10, !dbg !5042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !5043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5048, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5049, metadata !DIExpression()), !dbg !5050
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5051
  %4 = load i8*, i8** %3, align 4, !dbg !5051
  %5 = icmp eq i8* %4, null, !dbg !5053
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5054
  br i1 %5, label %12, label %8, !dbg !5055

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5056
  %10 = load i32, i32* %9, align 4, !dbg !5056
  %11 = icmp slt i32 %7, %10, !dbg !5057
  br i1 %11, label %15, label %12, !dbg !5058

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5059
  %14 = add nsw i32 %7, 1, !dbg !5061
  store i32 %14, i32* %13, align 4, !dbg !5061
  br label %25, !dbg !5062

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5063
  %17 = icmp eq i32 %7, %16, !dbg !5065
  br i1 %17, label %18, label %21, !dbg !5066

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5067
  store i32 %19, i32* %6, align 4, !dbg !5067
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5069
  store i8 0, i8* %20, align 1, !dbg !5070
  br label %25, !dbg !5071

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5072
  %23 = add nsw i32 %7, 1, !dbg !5074
  store i32 %23, i32* %6, align 4, !dbg !5074
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5075
  store i8 %22, i8* %24, align 1, !dbg !5076
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5077
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5078 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5083, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %1, metadata !5084, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %2, metadata !5085, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %3, metadata !5086, metadata !DIExpression()), !dbg !5087
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5088
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #29, !dbg !5089
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #28, !dbg !5090
  unreachable, !dbg !5091
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !5092 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #29, !dbg !5198
  ret %struct.k_thread* %1, !dbg !5199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5204, metadata !DIExpression()), !dbg !5205
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5206, !srcloc !5208
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5209
  ret void, !dbg !5210
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5211 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5212, !srcloc !5214
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5215
  ret %struct.k_thread* %1, !dbg !5216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5217 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5228, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8* %1, metadata !5229, metadata !DIExpression()), !dbg !5232
  %3 = icmp eq i8* %1, null, !dbg !5233
  br i1 %3, label %16, label %4, !dbg !5235

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5236
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5236
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5230, metadata !DIExpression()), !dbg !5232
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5237, !range !5238
  call void @llvm.dbg.value(metadata i32 %7, metadata !5231, metadata !DIExpression()), !dbg !5232
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5239
  br i1 %8, label %10, label %9, !dbg !5242

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5243
  unreachable, !dbg !5243

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5245
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #28, !dbg !5245
  %13 = icmp eq i32 %12, %7, !dbg !5245
  br i1 %13, label %15, label %14, !dbg !5248

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5249
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5249
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5249
  unreachable, !dbg !5249

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #28, !dbg !5251
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5252
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5254 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5258, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %1, metadata !5259, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %1, metadata !5260, metadata !DIExpression()), !dbg !5262
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5263
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5261, metadata !DIExpression()), !dbg !5262
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5264
  %5 = ptrtoint i8* %4 to i32, !dbg !5265
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5265
  %7 = sub i32 %5, %6, !dbg !5265
  %8 = lshr i32 %7, 3, !dbg !5266
  ret i32 %8, !dbg !5267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5268 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5272, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i32 %1, metadata !5273, metadata !DIExpression()), !dbg !5274
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5275
  %4 = and i32 %3, 1, !dbg !5276
  %5 = icmp ne i32 %4, 0, !dbg !5275
  ret i1 %5, !dbg !5277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5278 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5282, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %1, metadata !5283, metadata !DIExpression()), !dbg !5284
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5285
  %4 = add i32 %3, %1, !dbg !5286
  ret i32 %4, !dbg !5287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5288 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5290, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i32 %1, metadata !5291, metadata !DIExpression()), !dbg !5292
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #28, !dbg !5293
  %4 = sub i32 %1, %3, !dbg !5294
  ret i32 %4, !dbg !5295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5296 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5300, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 %1, metadata !5301, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i1 %2, metadata !5302, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5305
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5306
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5303, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5305
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5307
  %6 = bitcast i8* %5 to i16*, !dbg !5307
  %7 = load i16, i16* %6, align 2, !dbg !5307
  %8 = and i16 %7, -2, !dbg !5311
  %9 = zext i1 %2 to i16, !dbg !5311
  %10 = or i16 %8, %9, !dbg !5311
  store i16 %10, i16* %6, align 2, !dbg !5307
  ret void, !dbg !5312
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5313 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5317, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %1, metadata !5318, metadata !DIExpression()), !dbg !5319
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5320
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5322
  br i1 %4, label %7, label %5, !dbg !5323

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5324
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5326
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5327
  br label %7, !dbg !5328

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5329
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5331
  br i1 %9, label %13, label %10, !dbg !5332

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5333
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5335
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #28, !dbg !5336
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5337
  call void @llvm.dbg.value(metadata i32 %12, metadata !5318, metadata !DIExpression()), !dbg !5319
  br label %13, !dbg !5338

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5318, metadata !DIExpression()), !dbg !5319
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #28, !dbg !5339
  ret void, !dbg !5340
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5341 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5343, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i32 %1, metadata !5344, metadata !DIExpression()), !dbg !5348
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5349, !range !5350
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5351
  call void @llvm.dbg.value(metadata i32 %4, metadata !5345, metadata !DIExpression()), !dbg !5352
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5353
  ret void, !dbg !5354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5355 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5359, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i32 %1, metadata !5360, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i32 %2, metadata !5361, metadata !DIExpression()), !dbg !5364
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5365
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5366
  %6 = add i32 %5, %4, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %6, metadata !5362, metadata !DIExpression()), !dbg !5364
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5368
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5369
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5370
  ret void, !dbg !5371
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5372 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5374, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i32 %1, metadata !5375, metadata !DIExpression()), !dbg !5379
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5380, !range !5350
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5381
  call void @llvm.dbg.value(metadata i32 %4, metadata !5376, metadata !DIExpression()), !dbg !5382
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5383
  ret void, !dbg !5384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5385 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5389, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %1, metadata !5390, metadata !DIExpression()), !dbg !5391
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5392
  %4 = lshr i32 %3, 1, !dbg !5393
  ret i32 %4, !dbg !5394
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5395 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5399, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.value(metadata i32 %1, metadata !5400, metadata !DIExpression()), !dbg !5402
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #28, !dbg !5403
  %4 = add i32 %1, 1, !dbg !5404
  %5 = sub i32 %4, %3, !dbg !5405
  call void @llvm.dbg.value(metadata i32 %5, metadata !5401, metadata !DIExpression()), !dbg !5402
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5406, !range !5407
  %7 = sub nsw i32 31, %6, !dbg !5408
  ret i32 %7, !dbg !5409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5410 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5414, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %1, metadata !5415, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i32 %2, metadata !5416, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5423
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5424
  %5 = load i32, i32* %4, align 4, !dbg !5424
  %6 = icmp eq i32 %5, 0, !dbg !5425
  br i1 %6, label %7, label %12, !dbg !5426

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5427
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5429
  %10 = load i32, i32* %9, align 4, !dbg !5430
  %11 = or i32 %10, %8, !dbg !5430
  store i32 %11, i32* %9, align 4, !dbg !5430
  store i32 %1, i32* %4, align 4, !dbg !5431
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5432
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5433
  br label %14, !dbg !5434

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5419, metadata !DIExpression()), !dbg !5435
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #28, !dbg !5436, !range !5437
  call void @llvm.dbg.value(metadata i32 %13, metadata !5422, metadata !DIExpression()), !dbg !5435
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #28, !dbg !5438
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5439
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #28, !dbg !5440
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #28, !dbg !5441
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5443 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5445, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i32 %1, metadata !5446, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i32 %2, metadata !5447, metadata !DIExpression()), !dbg !5448
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #28, !dbg !5449
  ret void, !dbg !5450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5451 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5453, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %1, metadata !5454, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %2, metadata !5455, metadata !DIExpression()), !dbg !5456
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #28, !dbg !5457
  ret void, !dbg !5458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5459 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5461, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 %1, metadata !5462, metadata !DIExpression()), !dbg !5463
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #28, !dbg !5464
  ret i32 %3, !dbg !5465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5466 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5470, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i32 %1, metadata !5471, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i32 %2, metadata !5472, metadata !DIExpression()), !dbg !5475
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5476
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5473, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5475
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5474, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5475
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5477
  call void @llvm.dbg.value(metadata i8* %5, metadata !5474, metadata !DIExpression()), !dbg !5475
  %6 = bitcast i8* %5 to i16*, !dbg !5478
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5481
  %8 = load i16, i16* %7, align 2, !dbg !5481
  %9 = zext i16 %8 to i32, !dbg !5481
  ret i32 %9, !dbg !5482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5483 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5487, metadata !DIExpression()), !dbg !5488
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5489
  ret %struct.chunk_unit_t* %2, !dbg !5490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5491 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5495, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata i32 %1, metadata !5496, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata i32 %2, metadata !5497, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata i32 %3, metadata !5498, metadata !DIExpression()), !dbg !5501
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5502
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5499, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5501
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5503
  call void @llvm.dbg.value(metadata i8* %6, metadata !5500, metadata !DIExpression()), !dbg !5501
  %7 = trunc i32 %3 to i16, !dbg !5504
  %8 = bitcast i8* %6 to i16*, !dbg !5507
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5508
  store i16 %7, i16* %9, align 2, !dbg !5509
  ret void, !dbg !5510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5511 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5515, metadata !DIExpression()), !dbg !5516
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #28, !dbg !5517
  ret i32 %2, !dbg !5518
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5519 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5523, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %1, metadata !5524, metadata !DIExpression()), !dbg !5525
  %3 = add i32 %1, 4, !dbg !5526
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #28, !dbg !5527
  ret i32 %4, !dbg !5528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5533, metadata !DIExpression()), !dbg !5534
  %2 = add i32 %0, 7, !dbg !5535
  %3 = lshr i32 %2, 3, !dbg !5536
  ret i32 %3, !dbg !5537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5538 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5542, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 %1, metadata !5543, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 %2, metadata !5544, metadata !DIExpression()), !dbg !5545
  %4 = shl i32 %2, 1, !dbg !5546
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #28, !dbg !5547
  ret void, !dbg !5548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5549 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5551, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %1, metadata !5552, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %2, metadata !5553, metadata !DIExpression()), !dbg !5554
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #28, !dbg !5555
  ret void, !dbg !5556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5557 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5559, metadata !DIExpression()), !dbg !5567
  call void @llvm.dbg.value(metadata i32 %1, metadata !5560, metadata !DIExpression()), !dbg !5567
  call void @llvm.dbg.value(metadata i32 %2, metadata !5561, metadata !DIExpression()), !dbg !5567
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5562, metadata !DIExpression()), !dbg !5567
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5569
  %6 = icmp eq i32 %5, %1, !dbg !5570
  br i1 %6, label %7, label %14, !dbg !5571

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5572
  %9 = xor i32 %8, -1, !dbg !5574
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5575
  %11 = load i32, i32* %10, align 4, !dbg !5576
  %12 = and i32 %11, %9, !dbg !5576
  store i32 %12, i32* %10, align 4, !dbg !5576
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5577
  store i32 0, i32* %13, align 4, !dbg !5578
  br label %17, !dbg !5579

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %15, metadata !5563, metadata !DIExpression()), !dbg !5581
  call void @llvm.dbg.value(metadata i32 %5, metadata !5566, metadata !DIExpression()), !dbg !5581
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5582
  store i32 %5, i32* %16, align 4, !dbg !5583
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #28, !dbg !5584
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #28, !dbg !5585
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5587 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5589, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i32 %1, metadata !5590, metadata !DIExpression()), !dbg !5591
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #28, !dbg !5592
  ret i32 %3, !dbg !5593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5594 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5598, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata i8* %1, metadata !5599, metadata !DIExpression()), !dbg !5605
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5606
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5606
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5600, metadata !DIExpression()), !dbg !5605
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #28, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %5, metadata !5601, metadata !DIExpression()), !dbg !5605
  %6 = ptrtoint i8* %1 to i32, !dbg !5608
  call void @llvm.dbg.value(metadata i32 %6, metadata !5602, metadata !DIExpression()), !dbg !5605
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #28, !dbg !5609
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5609
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5610
  call void @llvm.dbg.value(metadata i32 %9, metadata !5603, metadata !DIExpression()), !dbg !5605
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #28, !dbg !5611
  %11 = shl i32 %10, 3, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %11, metadata !5604, metadata !DIExpression()), !dbg !5605
  %12 = sub i32 %9, %6, !dbg !5613
  %13 = add i32 %12, %11, !dbg !5614
  ret i32 %13, !dbg !5615
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5616 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5620, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %1, metadata !5621, metadata !DIExpression()), !dbg !5626
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5627
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5622, metadata !DIExpression()), !dbg !5626
  %5 = icmp eq i32 %1, 0, !dbg !5628
  br i1 %5, label %19, label %6, !dbg !5630

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5631
  br i1 %7, label %19, label %8, !dbg !5632

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5633, !range !5238
  call void @llvm.dbg.value(metadata i32 %9, metadata !5624, metadata !DIExpression()), !dbg !5626
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #28, !dbg !5634
  call void @llvm.dbg.value(metadata i32 %10, metadata !5625, metadata !DIExpression()), !dbg !5626
  %11 = icmp eq i32 %10, 0, !dbg !5635
  br i1 %11, label %19, label %12, !dbg !5637

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5638
  %14 = icmp ugt i32 %13, %9, !dbg !5640
  br i1 %14, label %15, label %17, !dbg !5641

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5642
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #28, !dbg !5644
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #28, !dbg !5645
  br label %17, !dbg !5646

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #28, !dbg !5647
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5648
  call void @llvm.dbg.value(metadata i8* %18, metadata !5623, metadata !DIExpression()), !dbg !5626
  br label %19, !dbg !5649

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5626
  ret i8* %20, !dbg !5650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5651 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5655, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.value(metadata i32 %1, metadata !5656, metadata !DIExpression()), !dbg !5657
  %3 = lshr i32 %1, 3, !dbg !5658
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5659
  %5 = load i32, i32* %4, align 4, !dbg !5659
  %6 = icmp uge i32 %3, %5, !dbg !5660
  ret i1 %6, !dbg !5661
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5662 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5666, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata i32 %1, metadata !5667, metadata !DIExpression()), !dbg !5681
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %3, metadata !5668, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5669, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5681
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5683
  %5 = load i32, i32* %4, align 4, !dbg !5683
  %6 = icmp eq i32 %5, 0, !dbg !5684
  br i1 %6, label %19, label %7, !dbg !5685

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5686
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5687
  call void @llvm.dbg.value(metadata i32 %9, metadata !5673, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i32 %8, metadata !5674, metadata !DIExpression()), !dbg !5688
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5689
  %11 = icmp ult i32 %10, %1, !dbg !5691
  br i1 %11, label %13, label %12, !dbg !5692

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #28, !dbg !5693
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5695
  store i32 %14, i32* %4, align 4, !dbg !5696
  %15 = add nsw i32 %9, -1, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %15, metadata !5673, metadata !DIExpression()), !dbg !5687
  %16 = icmp eq i32 %15, 0, !dbg !5697
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5698
  br i1 %18, label %19, label %7, !dbg !5698, !llvm.loop !5699

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5702
  %21 = load i32, i32* %20, align 4, !dbg !5702
  %22 = add nsw i32 %3, 1, !dbg !5703
  %23 = shl nsw i32 -1, %22, !dbg !5703
  %24 = and i32 %21, %23, !dbg !5704
  call void @llvm.dbg.value(metadata i32 %24, metadata !5676, metadata !DIExpression()), !dbg !5681
  %25 = icmp eq i32 %24, 0, !dbg !5705
  br i1 %25, label %30, label %26, !dbg !5706

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5707, !range !5407
  call void @llvm.dbg.value(metadata i32 %27, metadata !5677, metadata !DIExpression()), !dbg !5708
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5709
  %29 = load i32, i32* %28, align 4, !dbg !5709
  call void @llvm.dbg.value(metadata i32 %29, metadata !5680, metadata !DIExpression()), !dbg !5708
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #28, !dbg !5710
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5681
  ret i32 %31, !dbg !5711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5712 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5714, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.value(metadata i32 %1, metadata !5715, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.value(metadata i32 %2, metadata !5716, metadata !DIExpression()), !dbg !5720
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5721
  call void @llvm.dbg.value(metadata i32 %4, metadata !5717, metadata !DIExpression()), !dbg !5720
  %5 = sub i32 %2, %1, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %5, metadata !5718, metadata !DIExpression()), !dbg !5720
  %6 = sub i32 %4, %5, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %6, metadata !5719, metadata !DIExpression()), !dbg !5720
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5724
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #28, !dbg !5725
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #28, !dbg !5726
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5727
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5728
  ret void, !dbg !5729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5730 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5734, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.value(metadata i32 %1, metadata !5735, metadata !DIExpression()), !dbg !5738
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5739
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5736, metadata !DIExpression()), !dbg !5738
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5740
  call void @llvm.dbg.value(metadata i8* %4, metadata !5737, metadata !DIExpression()), !dbg !5738
  ret i8* %4, !dbg !5741
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5742 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5746, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i32 %1, metadata !5747, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i32 %2, metadata !5748, metadata !DIExpression()), !dbg !5758
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5759
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5759
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5749, metadata !DIExpression()), !dbg !5758
  %6 = sub i32 0, %1, !dbg !5760
  %7 = and i32 %6, %1, !dbg !5761
  call void @llvm.dbg.value(metadata i32 %7, metadata !5751, metadata !DIExpression()), !dbg !5758
  %8 = icmp eq i32 %7, %1, !dbg !5762
  br i1 %8, label %13, label %9, !dbg !5764

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5765
  call void @llvm.dbg.value(metadata i32 %10, metadata !5747, metadata !DIExpression()), !dbg !5758
  %11 = icmp ult i32 %7, 4, !dbg !5767
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5767
  br label %17, !dbg !5767

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5768
  br i1 %14, label %15, label %17, !dbg !5771

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #28, !dbg !5772
  br label %61, !dbg !5774

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5758
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5775
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5747, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i32 %19, metadata !5750, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i32 %18, metadata !5751, metadata !DIExpression()), !dbg !5758
  %21 = add i32 %20, -1, !dbg !5776
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5776, !range !5407
  %23 = icmp ult i32 %22, 2, !dbg !5776
  br i1 %23, label %25, label %24, !dbg !5779

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5780
  unreachable, !dbg !5780

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5782
  br i1 %26, label %61, label %27, !dbg !5784

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #28, !dbg !5785
  br i1 %28, label %61, label %29, !dbg !5786

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5787
  %31 = add i32 %30, %20, !dbg !5788
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #28, !dbg !5789, !range !5238
  call void @llvm.dbg.value(metadata i32 %32, metadata !5752, metadata !DIExpression()), !dbg !5758
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #28, !dbg !5790
  call void @llvm.dbg.value(metadata i32 %33, metadata !5753, metadata !DIExpression()), !dbg !5758
  %34 = icmp eq i32 %33, 0, !dbg !5791
  br i1 %34, label %61, label %35, !dbg !5793

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5794
  call void @llvm.dbg.value(metadata i8* %36, metadata !5754, metadata !DIExpression()), !dbg !5758
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5795
  %38 = ptrtoint i8* %37 to i32, !dbg !5795
  %39 = add i32 %21, %38, !dbg !5795
  %40 = sub i32 0, %20, !dbg !5795
  %41 = and i32 %39, %40, !dbg !5795
  %42 = inttoptr i32 %41 to i8*, !dbg !5796
  %43 = sub i32 0, %18, !dbg !5797
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5797
  call void @llvm.dbg.value(metadata i8* %44, metadata !5754, metadata !DIExpression()), !dbg !5758
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5798
  %46 = ptrtoint i8* %45 to i32, !dbg !5798
  %47 = add i32 %46, 7, !dbg !5798
  %48 = and i32 %47, -8, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %48, metadata !5755, metadata !DIExpression()), !dbg !5758
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #28, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %49, metadata !5756, metadata !DIExpression()), !dbg !5758
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #28, !dbg !5800
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5801
  %52 = sub i32 %48, %51, !dbg !5801
  %53 = ashr exact i32 %52, 3, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %53, metadata !5757, metadata !DIExpression()), !dbg !5758
  %54 = icmp ugt i32 %49, %33, !dbg !5802
  br i1 %54, label %55, label %56, !dbg !5804

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #28, !dbg !5805
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5807
  br label %56, !dbg !5808

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #28, !dbg !5809
  %58 = icmp ugt i32 %57, %53, !dbg !5811
  br i1 %58, label %59, label %60, !dbg !5812

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #28, !dbg !5813
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #28, !dbg !5815
  br label %60, !dbg !5816

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #28, !dbg !5817
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5758
  ret i8* %62, !dbg !5818
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5819 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i8* %1, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 %2, metadata !5825, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 %3, metadata !5826, metadata !DIExpression()), !dbg !5842
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5843
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5843
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5827, metadata !DIExpression()), !dbg !5842
  %7 = icmp eq i8* %1, null, !dbg !5844
  br i1 %7, label %8, label %10, !dbg !5846

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5847
  br label %63, !dbg !5849

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5850
  br i1 %11, label %12, label %13, !dbg !5852

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5853
  br label %63, !dbg !5855

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5856
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5856, !range !5407
  %16 = icmp ult i32 %15, 2, !dbg !5856
  br i1 %16, label %18, label %17, !dbg !5859

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5860
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5860
  unreachable, !dbg !5860

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #28, !dbg !5862
  br i1 %19, label %63, label %20, !dbg !5864

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5865, !range !5238
  call void @llvm.dbg.value(metadata i32 %21, metadata !5828, metadata !DIExpression()), !dbg !5842
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5866
  call void @llvm.dbg.value(metadata i32 %22, metadata !5829, metadata !DIExpression()), !dbg !5842
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5867
  %24 = ptrtoint i8* %1 to i32, !dbg !5868
  %25 = ptrtoint i8* %23 to i32, !dbg !5868
  %26 = sub i32 %24, %25, !dbg !5868
  call void @llvm.dbg.value(metadata i32 %26, metadata !5830, metadata !DIExpression()), !dbg !5842
  %27 = add i32 %26, %3, !dbg !5869
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #28, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %28, metadata !5831, metadata !DIExpression()), !dbg !5842
  %29 = icmp eq i32 %2, 0, !dbg !5871
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5872
  br i1 %32, label %33, label %53, !dbg !5872

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5873
  %35 = icmp eq i32 %28, %34, !dbg !5874
  br i1 %35, label %63, label %36, !dbg !5875

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5876
  br i1 %37, label %38, label %40, !dbg !5877

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5878
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #28, !dbg !5880
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5881
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #28, !dbg !5882
  br label %63, !dbg !5883

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5884
  br i1 %41, label %53, label %42, !dbg !5885

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5886
  %44 = add i32 %43, %34, !dbg !5887
  %45 = icmp ult i32 %44, %28, !dbg !5888
  br i1 %45, label %53, label %46, !dbg !5889

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5890
  call void @llvm.dbg.value(metadata i32 %47, metadata !5832, metadata !DIExpression()), !dbg !5891
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5892
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5893
  %49 = icmp ult i32 %47, %48, !dbg !5895
  br i1 %49, label %50, label %52, !dbg !5896

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5897
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #28, !dbg !5899
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #28, !dbg !5900
  br label %52, !dbg !5901

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #28, !dbg !5902
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5903
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5904
  call void @llvm.dbg.value(metadata i8* %54, metadata !5838, metadata !DIExpression()), !dbg !5842
  %55 = icmp eq i8* %54, null, !dbg !5905
  br i1 %55, label %63, label %56, !dbg !5906

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5907, !range !5350
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #28, !dbg !5908
  %59 = sub i32 %58, %26, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %59, metadata !5839, metadata !DIExpression()), !dbg !5910
  %60 = icmp ult i32 %59, %3, !dbg !5911
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5911
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !5912
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5913
  br label %63, !dbg !5914

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5842
  ret i8* %64, !dbg !5915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5916 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %1, metadata !5921, metadata !DIExpression()), !dbg !5922
  %3 = shl i32 %1, 3, !dbg !5923
  %4 = add i32 %3, -4, !dbg !5924
  ret i32 %4, !dbg !5925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5926 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5930, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i8* %1, metadata !5931, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i32 %2, metadata !5932, metadata !DIExpression()), !dbg !5941
  %4 = icmp ult i32 %2, 262144, !dbg !5942
  br i1 %4, label %6, label %5, !dbg !5947

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #27, !dbg !5948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5948
  unreachable, !dbg !5948

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5950
  br i1 %7, label %9, label %8, !dbg !5953

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5954
  unreachable, !dbg !5954

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %10, metadata !5932, metadata !DIExpression()), !dbg !5941
  %11 = ptrtoint i8* %1 to i32, !dbg !5957
  %12 = add i32 %11, 7, !dbg !5957
  %13 = and i32 %12, -8, !dbg !5957
  call void @llvm.dbg.value(metadata i32 %13, metadata !5933, metadata !DIExpression()), !dbg !5941
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5958
  %15 = ptrtoint i8* %14 to i32, !dbg !5958
  %16 = and i32 %15, -8, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %16, metadata !5934, metadata !DIExpression()), !dbg !5941
  %17 = sub i32 %16, %13, !dbg !5959
  %18 = lshr exact i32 %17, 3, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %18, metadata !5935, metadata !DIExpression()), !dbg !5941
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #28, !dbg !5961
  %20 = icmp ugt i32 %18, %19, !dbg !5961
  br i1 %20, label %22, label %21, !dbg !5964

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5965
  unreachable, !dbg !5965

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5967
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5936, metadata !DIExpression()), !dbg !5941
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5968
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5969
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5970
  store i32 %18, i32* %25, align 8, !dbg !5971
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5972
  store i32 0, i32* %26, align 4, !dbg !5973
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #28, !dbg !5974
  call void @llvm.dbg.value(metadata i32 %27, metadata !5937, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5941
  %28 = shl i32 %27, 2, !dbg !5975
  %29 = add i32 %28, 20, !dbg !5976
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #28, !dbg !5977
  call void @llvm.dbg.value(metadata i32 %30, metadata !5938, metadata !DIExpression()), !dbg !5941
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #28, !dbg !5978
  %32 = add i32 %31, %30, !dbg !5978
  %33 = icmp ugt i32 %32, %18, !dbg !5978
  br i1 %33, label %36, label %34, !dbg !5981

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5939, metadata !DIExpression()), !dbg !5982
  %35 = icmp slt i32 %27, 0, !dbg !5983
  br i1 %35, label %37, label %39, !dbg !5985

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5986
  unreachable, !dbg !5986

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #28, !dbg !5988
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #28, !dbg !5989
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #28, !dbg !5990
  %38 = sub i32 %18, %30, !dbg !5991
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #28, !dbg !5992
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #28, !dbg !5993
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #28, !dbg !5994
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #28, !dbg !5995
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #28, !dbg !5996
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #28, !dbg !5997
  ret void, !dbg !5998

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5939, metadata !DIExpression()), !dbg !5982
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5999
  store i32 0, i32* %41, align 4, !dbg !6001
  %42 = add nuw i32 %40, 1, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %42, metadata !5939, metadata !DIExpression()), !dbg !5982
  %43 = icmp eq i32 %40, %27, !dbg !5983
  br i1 %43, label %37, label %39, !dbg !5985, !llvm.loop !6003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6005 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6018, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6015, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8* %1, metadata !6016, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8* %2, metadata !6017, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %4, metadata !6019, metadata !DIExpression()), !dbg !6144
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6145
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6145
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6020, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i32 0, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i1 undef, metadata !6026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6144
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6147

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6147

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6148
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6018, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8* %30, metadata !6017, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %29, metadata !6024, metadata !DIExpression()), !dbg !6144
  %31 = load i8, i8* %30, align 1, !dbg !6149
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6147

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6149
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6150
  call void @llvm.dbg.value(metadata i8* %34, metadata !6017, metadata !DIExpression()), !dbg !6144
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !6150
  call void @llvm.dbg.value(metadata i32 %35, metadata !6028, metadata !DIExpression()), !dbg !6151
  %36 = icmp slt i32 %35, 0, !dbg !6152
  %37 = add i32 %29, 1, !dbg !6150
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %36, label %365, label %28, !llvm.loop !6154

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6156
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6033, metadata !DIExpression()), !dbg !6157
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6157
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6076, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6079, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %30, metadata !6082, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 -1, metadata !6083, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 -1, metadata !6084, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* null, metadata !6085, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %14, metadata !6086, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8 0, metadata !6087, metadata !DIExpression()), !dbg !6158
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #28, !dbg !6159
  call void @llvm.dbg.value(metadata i8* %39, metadata !6017, metadata !DIExpression()), !dbg !6144
  %40 = load i24, i24* %15, align 8, !dbg !6160
  %41 = and i24 %40, 256, !dbg !6160
  %42 = icmp eq i24 %41, 0, !dbg !6160
  br i1 %42, label %51, label %43, !dbg !6162

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6163
  call void @llvm.dbg.value(metadata i8* %44, metadata !6018, metadata !DIExpression()), !dbg !6144
  %45 = bitcast i8* %27 to i32*, !dbg !6163
  %46 = load i32, i32* %45, align 4, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %46, metadata !6083, metadata !DIExpression()), !dbg !6158
  %47 = icmp slt i32 %46, 0, !dbg !6165
  br i1 %47, label %48, label %56, !dbg !6167

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6168
  store i24 %49, i24* %15, align 8, !dbg !6168
  %50 = sub nsw i32 0, %46, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %50, metadata !6083, metadata !DIExpression()), !dbg !6158
  br label %56, !dbg !6171

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6172
  %53 = icmp eq i24 %52, 0, !dbg !6172
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6174
  br label %56, !dbg !6174

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6175
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6158
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6018, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %58, metadata !6083, metadata !DIExpression()), !dbg !6158
  %60 = and i24 %57, 1024, !dbg !6175
  %61 = icmp eq i24 %60, 0, !dbg !6175
  br i1 %61, label %69, label %62, !dbg !6176

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6177
  call void @llvm.dbg.value(metadata i8* %63, metadata !6018, metadata !DIExpression()), !dbg !6144
  %64 = bitcast i8* %59 to i32*, !dbg !6177
  %65 = load i32, i32* %64, align 4, !dbg !6177
  call void @llvm.dbg.value(metadata i32 %65, metadata !6088, metadata !DIExpression()), !dbg !6178
  %66 = icmp slt i32 %65, 0, !dbg !6179
  br i1 %66, label %67, label %74, !dbg !6181

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6182
  store i24 %68, i24* %15, align 8, !dbg !6182
  br label %74, !dbg !6184

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6185
  %71 = icmp eq i24 %70, 0, !dbg !6185
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6187
  br label %74, !dbg !6187

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6188
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6158
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6158
  call void @llvm.dbg.value(metadata i8* %77, metadata !6018, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %76, metadata !6084, metadata !DIExpression()), !dbg !6158
  store i32 0, i32* %16, align 4, !dbg !6189
  store i32 0, i32* %17, align 8, !dbg !6190
  %78 = lshr i24 %75, 16, !dbg !6188
  call void @llvm.dbg.value(metadata i24 %78, metadata !6091, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6158
  %79 = lshr i24 %75, 11, !dbg !6191
  %80 = and i24 %79, 15, !dbg !6191
  %81 = zext i24 %80 to i32, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %81, metadata !6092, metadata !DIExpression()), !dbg !6158
  %82 = trunc i24 %78 to i3, !dbg !6192
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6192

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6193

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6196
  call void @llvm.dbg.value(metadata i8* %85, metadata !6018, metadata !DIExpression()), !dbg !6144
  %86 = bitcast i8* %77 to i32*, !dbg !6196
  %87 = load i32, i32* %86, align 4, !dbg !6196
  %88 = sext i32 %87 to i64, !dbg !6196
  store i64 %88, i64* %20, align 8, !dbg !6198
  br label %115, !dbg !6199

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6200
  call void @llvm.dbg.value(metadata i8* %90, metadata !6018, metadata !DIExpression()), !dbg !6144
  %91 = bitcast i8* %77 to i32*, !dbg !6200
  %92 = load i32, i32* %91, align 4, !dbg !6200
  %93 = sext i32 %92 to i64, !dbg !6200
  store i64 %93, i64* %20, align 8, !dbg !6203
  br label %115, !dbg !6204

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6205
  %96 = add i32 %95, 7, !dbg !6205
  %97 = and i32 %96, -8, !dbg !6205
  %98 = inttoptr i32 %97 to i8*, !dbg !6205
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6205
  call void @llvm.dbg.value(metadata i8* %99, metadata !6018, metadata !DIExpression()), !dbg !6144
  %100 = inttoptr i32 %97 to i64*, !dbg !6205
  %101 = load i64, i64* %100, align 8, !dbg !6205
  store i64 %101, i64* %20, align 8, !dbg !6206
  br label %115, !dbg !6207

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6208
  %104 = add i32 %103, 7, !dbg !6208
  %105 = and i32 %104, -8, !dbg !6208
  %106 = inttoptr i32 %105 to i8*, !dbg !6208
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6208
  call void @llvm.dbg.value(metadata i8* %107, metadata !6018, metadata !DIExpression()), !dbg !6144
  %108 = inttoptr i32 %105 to i64*, !dbg !6208
  %109 = load i64, i64* %108, align 8, !dbg !6208
  store i64 %109, i64* %20, align 8, !dbg !6209
  br label %115, !dbg !6210

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6211
  call void @llvm.dbg.value(metadata i8* %111, metadata !6018, metadata !DIExpression()), !dbg !6144
  %112 = bitcast i8* %77 to i32*, !dbg !6211
  %113 = load i32, i32* %112, align 4, !dbg !6211
  %114 = sext i32 %113 to i64, !dbg !6212
  store i64 %114, i64* %20, align 8, !dbg !6213
  br label %115, !dbg !6214

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6215
  call void @llvm.dbg.value(metadata i8* %117, metadata !6018, metadata !DIExpression()), !dbg !6144
  %118 = trunc i24 %79 to i4, !dbg !6216
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6216

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6217
  %121 = ashr exact i64 %120, 56, !dbg !6217
  store i64 %121, i64* %20, align 8, !dbg !6220
  br label %177, !dbg !6221

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6222
  %124 = ashr exact i64 %123, 48, !dbg !6222
  store i64 %124, i64* %20, align 8, !dbg !6225
  br label %177, !dbg !6226

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6227

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6230
  call void @llvm.dbg.value(metadata i8* %127, metadata !6018, metadata !DIExpression()), !dbg !6144
  %128 = bitcast i8* %77 to i32*, !dbg !6230
  %129 = load i32, i32* %128, align 4, !dbg !6230
  %130 = zext i32 %129 to i64, !dbg !6230
  store i64 %130, i64* %20, align 8, !dbg !6232
  br label %157, !dbg !6233

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6234
  call void @llvm.dbg.value(metadata i8* %132, metadata !6018, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8* %132, metadata !6018, metadata !DIExpression()), !dbg !6144
  %133 = bitcast i8* %77 to i32*, !dbg !6234
  %134 = load i32, i32* %133, align 4, !dbg !6234
  %135 = zext i32 %134 to i64, !dbg !6234
  store i64 %135, i64* %20, align 8, !dbg !6234
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6236
  %138 = add i32 %137, 7, !dbg !6236
  %139 = and i32 %138, -8, !dbg !6236
  %140 = inttoptr i32 %139 to i8*, !dbg !6236
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %141, metadata !6018, metadata !DIExpression()), !dbg !6144
  %142 = inttoptr i32 %139 to i64*, !dbg !6236
  %143 = load i64, i64* %142, align 8, !dbg !6236
  store i64 %143, i64* %20, align 8, !dbg !6237
  br label %157, !dbg !6238

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6239
  %146 = add i32 %145, 7, !dbg !6239
  %147 = and i32 %146, -8, !dbg !6239
  %148 = inttoptr i32 %147 to i8*, !dbg !6239
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6239
  call void @llvm.dbg.value(metadata i8* %149, metadata !6018, metadata !DIExpression()), !dbg !6144
  %150 = inttoptr i32 %147 to i64*, !dbg !6239
  %151 = load i64, i64* %150, align 8, !dbg !6239
  store i64 %151, i64* %20, align 8, !dbg !6240
  br label %157, !dbg !6241

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6242
  call void @llvm.dbg.value(metadata i8* %153, metadata !6018, metadata !DIExpression()), !dbg !6144
  %154 = bitcast i8* %77 to i32*, !dbg !6242
  %155 = load i32, i32* %154, align 4, !dbg !6242
  %156 = zext i32 %155 to i64, !dbg !6243
  store i64 %156, i64* %20, align 8, !dbg !6244
  br label %157, !dbg !6245

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6246
  call void @llvm.dbg.value(metadata i8* %159, metadata !6018, metadata !DIExpression()), !dbg !6144
  %160 = trunc i24 %79 to i4, !dbg !6247
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6247

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6248
  store i64 %162, i64* %20, align 8, !dbg !6251
  br label %177, !dbg !6252

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6253
  store i64 %164, i64* %20, align 8, !dbg !6256
  br label %177, !dbg !6257

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6258
  %167 = add i32 %166, 7, !dbg !6258
  %168 = and i32 %167, -8, !dbg !6258
  %169 = inttoptr i32 %168 to i8*, !dbg !6258
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6258
  call void @llvm.dbg.value(metadata i8* %170, metadata !6018, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8* %170, metadata !6018, metadata !DIExpression()), !dbg !6144
  %171 = inttoptr i32 %168 to double*, !dbg !6258
  %172 = load double, double* %171, align 8, !dbg !6258
  store double %172, double* %19, align 8, !dbg !6258
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6262
  call void @llvm.dbg.value(metadata i8* %174, metadata !6018, metadata !DIExpression()), !dbg !6144
  %175 = bitcast i8* %77 to i8**, !dbg !6262
  %176 = load i8*, i8** %175, align 4, !dbg !6262
  store i8* %176, i8** %18, align 8, !dbg !6265
  br label %177, !dbg !6266

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6158
  call void @llvm.dbg.value(metadata i8* %178, metadata !6018, metadata !DIExpression()), !dbg !6144
  %179 = and i24 %75, 3, !dbg !6267
  %180 = icmp eq i24 %179, 0, !dbg !6267
  br i1 %180, label %185, label %181, !dbg !6267

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #28, !dbg !6268
  call void @llvm.dbg.value(metadata i32 %182, metadata !6093, metadata !DIExpression()), !dbg !6269
  %183 = icmp slt i32 %182, 0, !dbg !6270
  %184 = add i32 %182, %29, !dbg !6268
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6272
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6273

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !6274
  call void @llvm.dbg.value(metadata i32 %188, metadata !6097, metadata !DIExpression()), !dbg !6275
  %189 = icmp slt i32 %188, 0, !dbg !6276
  %190 = add i32 %29, 1, !dbg !6274
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6278
  call void @llvm.dbg.value(metadata i8* %192, metadata !6085, metadata !DIExpression()), !dbg !6158
  %193 = icmp sgt i32 %76, -1, !dbg !6279
  br i1 %193, label %194, label %196, !dbg !6281

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !6282
  call void @llvm.dbg.value(metadata i32 %195, metadata !6100, metadata !DIExpression()), !dbg !6284
  br label %241, !dbg !6285

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %197, metadata !6100, metadata !DIExpression()), !dbg !6284
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6085, metadata !DIExpression()), !dbg !6158
  %199 = load i64, i64* %20, align 8, !dbg !6288
  %200 = trunc i64 %199 to i8, !dbg !6289
  store i8 %200, i8* %10, align 1, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %23, metadata !6086, metadata !DIExpression()), !dbg !6158
  br label %245, !dbg !6291

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6292
  %203 = icmp eq i24 %202, 0, !dbg !6292
  %204 = trunc i24 %75 to i8, !dbg !6294
  %205 = shl i8 %204, 1, !dbg !6294
  %206 = and i8 %205, 32, !dbg !6294
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6294
  call void @llvm.dbg.value(metadata i8 %207, metadata !6087, metadata !DIExpression()), !dbg !6158
  %208 = load i64, i64* %20, align 8, !dbg !6295
  call void @llvm.dbg.value(metadata i64 %208, metadata !6025, metadata !DIExpression()), !dbg !6144
  %209 = icmp slt i64 %208, 0, !dbg !6296
  br i1 %209, label %210, label %212, !dbg !6298

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6087, metadata !DIExpression()), !dbg !6158
  %211 = sub nsw i64 0, %208, !dbg !6299
  store i64 %211, i64* %20, align 8, !dbg !6301
  br label %212, !dbg !6302

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6158
  call void @llvm.dbg.value(metadata i8 %213, metadata !6087, metadata !DIExpression()), !dbg !6158
  %214 = load i64, i64* %20, align 8, !dbg !6303
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6304
  call void @llvm.dbg.value(metadata i8* %215, metadata !6085, metadata !DIExpression()), !dbg !6158
  br label %216, !dbg !6305

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6306
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6307
  call void @llvm.dbg.value(metadata i8* %218, metadata !6085, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8 %217, metadata !6087, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.label(metadata !6143), !dbg !6308
  %219 = icmp sgt i32 %76, -1, !dbg !6309
  br i1 %219, label %222, label %220, !dbg !6310

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6311
  br label %245, !dbg !6310

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6313
  %224 = sub i32 %22, %223, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %224, metadata !6102, metadata !DIExpression()), !dbg !6314
  %225 = load i24, i24* %15, align 8, !dbg !6315
  %226 = and i24 %225, -65, !dbg !6315
  store i24 %226, i24* %15, align 8, !dbg !6315
  %227 = icmp ugt i32 %76, %224, !dbg !6316
  br i1 %227, label %228, label %245, !dbg !6318

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6319
  store i32 %229, i32* %16, align 4, !dbg !6321
  br label %245, !dbg !6322

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6323
  %232 = icmp eq i8* %231, null, !dbg !6325
  br i1 %232, label %245, label %233, !dbg !6326

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6327
  %235 = zext i32 %234 to i64, !dbg !6327
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6329
  call void @llvm.dbg.value(metadata i8* %236, metadata !6085, metadata !DIExpression()), !dbg !6158
  %237 = load i24, i24* %15, align 8, !dbg !6330
  %238 = or i24 %237, 1048576, !dbg !6330
  store i24 %238, i24* %15, align 8, !dbg !6330
  store i8 120, i8* %21, align 1, !dbg !6331
  br label %216, !dbg !6332

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6333
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #28, !dbg !6336
  br label %363, !dbg !6337

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6338
  call void @llvm.dbg.value(metadata i32 %242, metadata !6100, metadata !DIExpression()), !dbg !6284
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6339
  call void @llvm.dbg.value(metadata i32 -1, metadata !6084, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %29, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8* %192, metadata !6085, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %243, metadata !6086, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8 0, metadata !6087, metadata !DIExpression()), !dbg !6158
  %244 = icmp eq i8* %192, null, !dbg !6340
  br i1 %244, label %363, label %245, !dbg !6342, !llvm.loop !6154

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6311
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6158
  call void @llvm.dbg.value(metadata i32 0, metadata !6106, metadata !DIExpression()), !dbg !6158
  %250 = zext i8 %249 to i32, !dbg !6343
  %251 = icmp eq i8 %249, 0, !dbg !6345
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  call void @llvm.dbg.value(metadata i32 undef, metadata !6105, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  call void @llvm.dbg.value(metadata i32 undef, metadata !6105, metadata !DIExpression()), !dbg !6158
  %252 = icmp sgt i32 %58, 0, !dbg !6346
  br i1 %252, label %253, label %302, !dbg !6347

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6311
  %255 = icmp eq i24 %254, 0, !dbg !6311
  %256 = ptrtoint i8* %248 to i32, !dbg !6348
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  %257 = ptrtoint i8* %247 to i32, !dbg !6348
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  %258 = xor i1 %251, true, !dbg !6349
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  %259 = sext i1 %258 to i32, !dbg !6349
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  %260 = lshr i24 %246, 19, !dbg !6350
  %261 = and i24 %260, 1, !dbg !6350
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6350
  %263 = zext i24 %262 to i32, !dbg !6350
  %264 = add i32 %257, %259, !dbg !6350
  %265 = add i32 %256, %263, !dbg !6350
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  %266 = and i24 %246, 4194304, !dbg !6351
  %267 = icmp eq i24 %266, 0, !dbg !6351
  %268 = load i32, i32* %16, align 4, !dbg !6353
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6158
  call void @llvm.dbg.value(metadata i32 undef, metadata !6105, metadata !DIExpression()), !dbg !6158
  %269 = load i32, i32* %17, align 8, !dbg !6354
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6354
  call void @llvm.dbg.value(metadata i32 undef, metadata !6105, metadata !DIExpression()), !dbg !6158
  %271 = add i32 %264, %58, !dbg !6354
  %272 = add i32 %265, %268, !dbg !6354
  %273 = add i32 %272, %270, !dbg !6355
  %274 = sub i32 %271, %273, !dbg !6355
  call void @llvm.dbg.value(metadata i32 %274, metadata !6083, metadata !DIExpression()), !dbg !6158
  %275 = and i24 %246, 4, !dbg !6356
  %276 = icmp eq i24 %275, 0, !dbg !6356
  br i1 %276, label %277, label %302, !dbg !6357

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6107, metadata !DIExpression()), !dbg !6358
  %278 = and i24 %246, 64, !dbg !6359
  %279 = icmp eq i24 %278, 0, !dbg !6359
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6360
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6360
  %282 = select i1 %279, i32 32, i32 48, !dbg !6360
  br i1 %280, label %287, label %283, !dbg !6360

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !6361
  call void @llvm.dbg.value(metadata i32 %284, metadata !6112, metadata !DIExpression()), !dbg !6362
  %285 = icmp slt i32 %284, 0, !dbg !6363
  %286 = add i32 %29, 1, !dbg !6361
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6158
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %290, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i8 undef, metadata !6107, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8 %288, metadata !6087, metadata !DIExpression()), !dbg !6158
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6365
  %292 = add i32 %291, -1, !dbg !6365
  br label %293, !dbg !6365

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6366
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %295, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %294, metadata !6083, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %294, metadata !6083, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6158
  %296 = icmp sgt i32 %294, 0, !dbg !6367
  br i1 %296, label %297, label %302, !dbg !6365

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6368
  call void @llvm.dbg.value(metadata i32 %298, metadata !6083, metadata !DIExpression()), !dbg !6158
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !6369
  call void @llvm.dbg.value(metadata i32 %299, metadata !6118, metadata !DIExpression()), !dbg !6370
  %300 = icmp slt i32 %299, 0, !dbg !6371
  %301 = add i32 %295, 1, !dbg !6369
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %300, label %361, label %293, !llvm.loop !6373

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6158
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6158
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %305, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %304, metadata !6083, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8 %303, metadata !6087, metadata !DIExpression()), !dbg !6158
  %306 = icmp eq i8 %303, 0, !dbg !6375
  br i1 %306, label %312, label %307, !dbg !6376

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6377
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !6378
  call void @llvm.dbg.value(metadata i32 %309, metadata !6121, metadata !DIExpression()), !dbg !6379
  %310 = icmp slt i32 %309, 0, !dbg !6380
  %311 = add i32 %305, 1, !dbg !6378
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %313, metadata !6024, metadata !DIExpression()), !dbg !6144
  %314 = lshr i24 %246, 20, !dbg !6382
  %315 = lshr i24 %246, 19, !dbg !6383
  %316 = or i24 %314, %315, !dbg !6384
  %317 = and i24 %316, 1, !dbg !6384
  %318 = icmp eq i24 %317, 0, !dbg !6384
  br i1 %318, label %323, label %319, !dbg !6385

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6386
  call void @llvm.dbg.value(metadata i32 %320, metadata !6125, metadata !DIExpression()), !dbg !6387
  %321 = icmp slt i32 %320, 0, !dbg !6388
  %322 = add i32 %313, 1, !dbg !6386
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %324, metadata !6024, metadata !DIExpression()), !dbg !6144
  %325 = and i24 %246, 1048576, !dbg !6390
  %326 = icmp eq i24 %325, 0, !dbg !6390
  br i1 %326, label %333, label %327, !dbg !6391

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6392
  %329 = zext i8 %328 to i32, !dbg !6392
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %330, metadata !6131, metadata !DIExpression()), !dbg !6393
  %331 = icmp slt i32 %330, 0, !dbg !6394
  %332 = add i32 %324, 1, !dbg !6392
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %334, metadata !6024, metadata !DIExpression()), !dbg !6144
  %335 = load i32, i32* %16, align 4, !dbg !6396
  call void @llvm.dbg.value(metadata i32 %335, metadata !6106, metadata !DIExpression()), !dbg !6158
  br label %336, !dbg !6397

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6398
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %338, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %337, metadata !6106, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6158
  %339 = icmp sgt i32 %337, 0, !dbg !6399
  br i1 %339, label %340, label %345, !dbg !6397

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6400
  call void @llvm.dbg.value(metadata i32 %341, metadata !6106, metadata !DIExpression()), !dbg !6158
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6401
  call void @llvm.dbg.value(metadata i32 %342, metadata !6135, metadata !DIExpression()), !dbg !6402
  %343 = icmp slt i32 %342, 0, !dbg !6403
  %344 = add i32 %338, 1, !dbg !6401
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %343, label %361, label %336, !llvm.loop !6405

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #28, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %346, metadata !6138, metadata !DIExpression()), !dbg !6408
  %347 = icmp slt i32 %346, 0, !dbg !6409
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %349, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %304, metadata !6083, metadata !DIExpression()), !dbg !6158
  %350 = icmp sgt i32 %304, 0, !dbg !6411
  br i1 %350, label %351, label %363, !dbg !6412

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6412
  %353 = add i32 %352, %338, !dbg !6412
  br label %354, !dbg !6412

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %355, metadata !6083, metadata !DIExpression()), !dbg !6158
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6413
  call void @llvm.dbg.value(metadata i32 %356, metadata !6140, metadata !DIExpression()), !dbg !6414
  %357 = icmp slt i32 %356, 0, !dbg !6415
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6417
  call void @llvm.dbg.value(metadata i32 undef, metadata !6024, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %359, metadata !6083, metadata !DIExpression()), !dbg !6158
  %360 = icmp sgt i32 %355, 1, !dbg !6411
  br i1 %360, label %354, label %363, !dbg !6412, !llvm.loop !6418

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6155
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6148
  call void @llvm.dbg.value(metadata i32 %364, metadata !6024, metadata !DIExpression()), !dbg !6144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6155
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6144
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6420
  ret i32 %366, !dbg !6420
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6421 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6425, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata i8* %1, metadata !6426, metadata !DIExpression()), !dbg !6427
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6428
  store i24 0, i24* %3, align 4, !dbg !6428
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6428
  store i8 0, i8* %4, align 1, !dbg !6428
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6428
  store i32 0, i32* %5, align 4, !dbg !6428
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6428
  store i32 0, i32* %6, align 4, !dbg !6428
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6429
  call void @llvm.dbg.value(metadata i8* %7, metadata !6426, metadata !DIExpression()), !dbg !6427
  %8 = load i8, i8* %7, align 1, !dbg !6430
  %9 = icmp eq i8 %8, 37, !dbg !6432
  br i1 %9, label %10, label %12, !dbg !6433

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6434
  call void @llvm.dbg.value(metadata i8* %11, metadata !6426, metadata !DIExpression()), !dbg !6427
  store i8 37, i8* %4, align 1, !dbg !6436
  br label %18, !dbg !6437

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #28, !dbg !6438
  call void @llvm.dbg.value(metadata i8* %13, metadata !6426, metadata !DIExpression()), !dbg !6427
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #28, !dbg !6439
  call void @llvm.dbg.value(metadata i8* %14, metadata !6426, metadata !DIExpression()), !dbg !6427
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #28, !dbg !6440
  call void @llvm.dbg.value(metadata i8* %15, metadata !6426, metadata !DIExpression()), !dbg !6427
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #28, !dbg !6441
  call void @llvm.dbg.value(metadata i8* %16, metadata !6426, metadata !DIExpression()), !dbg !6427
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #28, !dbg !6442
  call void @llvm.dbg.value(metadata i8* %17, metadata !6426, metadata !DIExpression()), !dbg !6427
  br label %18, !dbg !6443

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6427
  ret i8* %19, !dbg !6444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6445 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6449, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %1, metadata !6450, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %2, metadata !6451, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %3, metadata !6452, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6456
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6457

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6458
  call void @llvm.dbg.value(metadata i32 %9, metadata !6453, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %8, metadata !6451, metadata !DIExpression()), !dbg !6456
  %10 = icmp ult i8* %8, %3, !dbg !6459
  br i1 %10, label %11, label %13, !dbg !6460

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6461
  br label %17, !dbg !6460

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6462

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6463
  %16 = icmp eq i8 %15, 0, !dbg !6462
  br i1 %16, label %24, label %17, !dbg !6457

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6461
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6464
  call void @llvm.dbg.value(metadata i8* %19, metadata !6451, metadata !DIExpression()), !dbg !6456
  %20 = zext i8 %18 to i32, !dbg !6465
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %21, metadata !6454, metadata !DIExpression()), !dbg !6467
  %22 = icmp slt i32 %21, 0, !dbg !6468
  %23 = add i32 %9, 1, !dbg !6470
  call void @llvm.dbg.value(metadata i32 undef, metadata !6453, metadata !DIExpression()), !dbg !6456
  br i1 %22, label %24, label %7, !llvm.loop !6471

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6456
  ret i32 %25, !dbg !6473
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6474 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6478, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6479, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %2, metadata !6480, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %3, metadata !6481, metadata !DIExpression()), !dbg !6488
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6489
  %6 = load i8, i8* %5, align 1, !dbg !6489
  %7 = zext i8 %6 to i32, !dbg !6490
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #28, !dbg !6491
  %9 = icmp eq i32 %8, 0, !dbg !6491
  call void @llvm.dbg.value(metadata i1 %9, metadata !6482, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6488
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #28, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %10, metadata !6483, metadata !DIExpression()), !dbg !6488
  %11 = ptrtoint i8* %3 to i32, !dbg !6493
  %12 = ptrtoint i8* %2 to i32, !dbg !6493
  %13 = sub i32 %11, %12, !dbg !6493
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6494
  call void @llvm.dbg.value(metadata i8* %14, metadata !6485, metadata !DIExpression()), !dbg !6488
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6495

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6488
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6478, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %18, metadata !6485, metadata !DIExpression()), !dbg !6488
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6496
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %25, metadata !6486, metadata !DIExpression()), !dbg !6498
  %26 = icmp ult i32 %25, 10, !dbg !6499
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6500
  %28 = add i32 %27, %25, !dbg !6498
  %29 = trunc i32 %28 to i8, !dbg !6500
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6501
  call void @llvm.dbg.value(metadata i8* %30, metadata !6485, metadata !DIExpression()), !dbg !6488
  store i8 %29, i8* %30, align 1, !dbg !6502
  call void @llvm.dbg.value(metadata i64 %22, metadata !6478, metadata !DIExpression()), !dbg !6488
  %31 = icmp uge i64 %19, %15, !dbg !6503
  %32 = icmp ugt i8* %30, %2, !dbg !6504
  %33 = and i1 %31, %32, !dbg !6504
  br i1 %33, label %17, label %34, !dbg !6505, !llvm.loop !6506

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6508
  %36 = load i24, i24* %35, align 4, !dbg !6508
  %37 = and i24 %36, 32, !dbg !6508
  %38 = icmp eq i24 %37, 0, !dbg !6508
  br i1 %38, label %44, label %39, !dbg !6510

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6511

40:                                               ; preds = %39
  br label %41, !dbg !6513

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6517
  store i24 %43, i24* %35, align 4, !dbg !6517
  br label %44, !dbg !6518

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6519 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6525, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %1, metadata !6526, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i32 %2, metadata !6527, metadata !DIExpression()), !dbg !6528
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6529
  %5 = load i24, i24* %4, align 4, !dbg !6529
  %6 = lshr i24 %5, 11, !dbg !6529
  %7 = and i24 %6, 15, !dbg !6529
  %8 = zext i24 %7 to i32, !dbg !6529
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6530

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6531
  store i32 %2, i32* %10, align 4, !dbg !6533
  br label %28, !dbg !6534

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6535
  store i8 %12, i8* %1, align 1, !dbg !6536
  br label %28, !dbg !6537

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6538
  %15 = bitcast i8* %1 to i16*, !dbg !6539
  store i16 %14, i16* %15, align 2, !dbg !6540
  br label %28, !dbg !6541

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6542
  store i32 %2, i32* %17, align 4, !dbg !6543
  br label %28, !dbg !6544

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6545
  %20 = bitcast i8* %1 to i64*, !dbg !6546
  store i64 %19, i64* %20, align 8, !dbg !6547
  br label %28, !dbg !6548

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6549
  %23 = bitcast i8* %1 to i64*, !dbg !6550
  store i64 %22, i64* %23, align 8, !dbg !6551
  br label %28, !dbg !6552

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6553
  store i32 %2, i32* %25, align 4, !dbg !6554
  br label %28, !dbg !6555

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6556
  store i32 %2, i32* %27, align 4, !dbg !6557
  br label %28, !dbg !6558

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6559
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6563, metadata !DIExpression()), !dbg !6564
  %2 = add i32 %0, -65, !dbg !6565
  %3 = icmp ult i32 %2, 26, !dbg !6566
  %4 = zext i1 %3 to i32, !dbg !6566
  ret i32 %4, !dbg !6567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6568 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6572, metadata !DIExpression()), !dbg !6573
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6574

2:                                                ; preds = %1
  br label %4, !dbg !6575

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6577

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6578
  ret i32 %5, !dbg !6579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6580 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6582, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* %1, metadata !6583, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8 1, metadata !6584, metadata !DIExpression()), !dbg !6585
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6586

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* %5, metadata !6583, metadata !DIExpression()), !dbg !6585
  %6 = load i8, i8* %5, align 1, !dbg !6587
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6589

7:                                                ; preds = %4
  br label %11, !dbg !6590

8:                                                ; preds = %4
  br label %11, !dbg !6592

9:                                                ; preds = %4
  br label %11, !dbg !6593

10:                                               ; preds = %4
  br label %11, !dbg !6594

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6595
  %14 = or i24 %13, %12, !dbg !6595
  store i24 %14, i24* %3, align 4, !dbg !6595
  call void @llvm.dbg.value(metadata i8 poison, metadata !6584, metadata !DIExpression()), !dbg !6585
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6583, metadata !DIExpression()), !dbg !6585
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* %15, metadata !6583, metadata !DIExpression()), !dbg !6585
  %17 = load i24, i24* %3, align 4, !dbg !6596
  %18 = and i24 %17, 68, !dbg !6598
  %19 = icmp eq i24 %18, 68, !dbg !6598
  br i1 %19, label %20, label %22, !dbg !6598

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6599
  store i24 %21, i24* %3, align 4, !dbg !6599
  br label %22, !dbg !6601

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6602
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6603 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6605, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %1, metadata !6606, metadata !DIExpression()), !dbg !6609
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6610
  %5 = load i24, i24* %4, align 4, !dbg !6611
  %6 = or i24 %5, 128, !dbg !6611
  store i24 %6, i24* %4, align 4, !dbg !6611
  call void @llvm.dbg.value(metadata i8* %1, metadata !6606, metadata !DIExpression()), !dbg !6609
  %7 = load i8, i8* %1, align 1, !dbg !6612
  %8 = icmp eq i8 %7, 42, !dbg !6614
  br i1 %8, label %9, label %12, !dbg !6615

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6616
  store i24 %10, i24* %4, align 4, !dbg !6616
  call void @llvm.dbg.value(metadata i8* %1, metadata !6606, metadata !DIExpression()), !dbg !6609
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6618
  call void @llvm.dbg.value(metadata i8* %11, metadata !6606, metadata !DIExpression()), !dbg !6609
  store i8* %11, i8** %3, align 4, !dbg !6618
  br label %29, !dbg !6619

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6607, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8** %3, metadata !6606, metadata !DIExpression(DW_OP_deref)), !dbg !6609
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6620
  call void @llvm.dbg.value(metadata i32 %13, metadata !6608, metadata !DIExpression()), !dbg !6609
  %14 = load i8*, i8** %3, align 4, !dbg !6621
  call void @llvm.dbg.value(metadata i8* %14, metadata !6606, metadata !DIExpression()), !dbg !6609
  %15 = icmp eq i8* %14, %1, !dbg !6623
  br i1 %15, label %29, label %16, !dbg !6624

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6625
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6627
  store i32 %13, i32* %18, align 4, !dbg !6628
  %19 = lshr i32 %13, 31, !dbg !6629
  %20 = lshr i24 %17, 1, !dbg !6630
  %21 = and i24 %20, 1, !dbg !6630
  %22 = zext i24 %21 to i32, !dbg !6630
  %23 = or i32 %19, %22, !dbg !6630
  %24 = trunc i32 %23 to i24, !dbg !6630
  %25 = shl nuw nsw i24 %24, 1, !dbg !6630
  %26 = and i24 %17, -131, !dbg !6630
  %27 = or i24 %26, 128, !dbg !6630
  %28 = or i24 %25, %27, !dbg !6630
  store i24 %28, i24* %4, align 4, !dbg !6630
  br label %29, !dbg !6631

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6609
  ret i8* %30, !dbg !6632
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6633 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6635, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i8* %1, metadata !6636, metadata !DIExpression()), !dbg !6638
  %4 = load i8, i8* %1, align 1, !dbg !6639
  %5 = icmp eq i8 %4, 46, !dbg !6640
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6641
  %7 = load i24, i24* %6, align 4, !dbg !6642
  %8 = select i1 %5, i24 512, i24 0, !dbg !6642
  %9 = and i24 %7, -513, !dbg !6642
  %10 = or i24 %9, %8, !dbg !6642
  store i24 %10, i24* %6, align 4, !dbg !6642
  br i1 %5, label %11, label %32, !dbg !6643

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6636, metadata !DIExpression()), !dbg !6638
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6644
  call void @llvm.dbg.value(metadata i8* %12, metadata !6636, metadata !DIExpression()), !dbg !6638
  store i8* %12, i8** %3, align 4, !dbg !6644
  %13 = load i8, i8* %12, align 1, !dbg !6645
  %14 = icmp eq i8 %13, 42, !dbg !6647
  br i1 %14, label %15, label %18, !dbg !6648

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6649
  store i24 %16, i24* %6, align 4, !dbg !6649
  call void @llvm.dbg.value(metadata i8* %12, metadata !6636, metadata !DIExpression()), !dbg !6638
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6651
  call void @llvm.dbg.value(metadata i8* %17, metadata !6636, metadata !DIExpression()), !dbg !6638
  store i8* %17, i8** %3, align 4, !dbg !6651
  br label %32, !dbg !6652

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6636, metadata !DIExpression(DW_OP_deref)), !dbg !6638
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6653
  call void @llvm.dbg.value(metadata i32 %19, metadata !6637, metadata !DIExpression()), !dbg !6638
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6654
  store i32 %19, i32* %20, align 4, !dbg !6655
  %21 = lshr i32 %19, 31, !dbg !6656
  %22 = load i24, i24* %6, align 4, !dbg !6657
  %23 = lshr i24 %22, 1, !dbg !6657
  %24 = and i24 %23, 1, !dbg !6657
  %25 = zext i24 %24 to i32, !dbg !6657
  %26 = or i32 %21, %25, !dbg !6657
  %27 = trunc i32 %26 to i24, !dbg !6657
  %28 = shl nuw nsw i24 %27, 1, !dbg !6657
  %29 = and i24 %22, -3, !dbg !6657
  %30 = or i24 %28, %29, !dbg !6657
  store i24 %30, i24* %6, align 4, !dbg !6657
  %31 = load i8*, i8** %3, align 4, !dbg !6658
  call void @llvm.dbg.value(metadata i8* %31, metadata !6636, metadata !DIExpression()), !dbg !6638
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6638
  ret i8* %33, !dbg !6659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6660 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6662, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.value(metadata i8* %1, metadata !6663, metadata !DIExpression()), !dbg !6664
  %3 = load i8, i8* %1, align 1, !dbg !6665
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6666

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6667
  call void @llvm.dbg.value(metadata i8* %5, metadata !6663, metadata !DIExpression()), !dbg !6664
  %6 = load i8, i8* %5, align 1, !dbg !6670
  %7 = icmp eq i8 %6, 104, !dbg !6671
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6672
  %9 = load i24, i24* %8, align 4, !dbg !6672
  %10 = and i24 %9, -30721, !dbg !6672
  br i1 %7, label %11, label %14, !dbg !6673

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6674
  store i24 %12, i24* %8, align 4, !dbg !6674
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6676
  call void @llvm.dbg.value(metadata i8* %13, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %56, !dbg !6677

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6678
  store i24 %15, i24* %8, align 4, !dbg !6678
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6680
  call void @llvm.dbg.value(metadata i8* %17, metadata !6663, metadata !DIExpression()), !dbg !6664
  %18 = load i8, i8* %17, align 1, !dbg !6682
  %19 = icmp eq i8 %18, 108, !dbg !6683
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6684
  %21 = load i24, i24* %20, align 4, !dbg !6684
  %22 = and i24 %21, -30721, !dbg !6684
  br i1 %19, label %23, label %26, !dbg !6685

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6686
  store i24 %24, i24* %20, align 4, !dbg !6686
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6688
  call void @llvm.dbg.value(metadata i8* %25, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %56, !dbg !6689

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6690
  store i24 %27, i24* %20, align 4, !dbg !6690
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6692
  %30 = load i24, i24* %29, align 4, !dbg !6693
  %31 = and i24 %30, -30721, !dbg !6693
  %32 = or i24 %31, 10240, !dbg !6693
  store i24 %32, i24* %29, align 4, !dbg !6693
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6694
  call void @llvm.dbg.value(metadata i8* %33, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %56, !dbg !6695

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6696
  %36 = load i24, i24* %35, align 4, !dbg !6697
  %37 = and i24 %36, -30721, !dbg !6697
  %38 = or i24 %37, 12288, !dbg !6697
  store i24 %38, i24* %35, align 4, !dbg !6697
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6698
  call void @llvm.dbg.value(metadata i8* %39, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %56, !dbg !6699

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6700
  %42 = load i24, i24* %41, align 4, !dbg !6701
  %43 = and i24 %42, -30721, !dbg !6701
  %44 = or i24 %43, 14336, !dbg !6701
  store i24 %44, i24* %41, align 4, !dbg !6701
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6702
  call void @llvm.dbg.value(metadata i8* %45, metadata !6663, metadata !DIExpression()), !dbg !6664
  br label %56, !dbg !6703

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6704
  %48 = load i24, i24* %47, align 4, !dbg !6705
  %49 = and i24 %48, -30723, !dbg !6705
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6706
  call void @llvm.dbg.value(metadata i8* %50, metadata !6663, metadata !DIExpression()), !dbg !6664
  %51 = or i24 %49, 16386, !dbg !6707
  store i24 %51, i24* %47, align 4, !dbg !6707
  br label %56, !dbg !6708

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6709
  %54 = load i24, i24* %53, align 4, !dbg !6710
  %55 = and i24 %54, -30721, !dbg !6710
  store i24 %55, i24* %53, align 4, !dbg !6710
  br label %56, !dbg !6711

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6663, metadata !DIExpression()), !dbg !6664
  ret i8* %57, !dbg !6712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6713 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6715, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %1, metadata !6716, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8 0, metadata !6717, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %1, metadata !6716, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6720
  %3 = load i8, i8* %1, align 1, !dbg !6721
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6722
  store i8 %3, i8* %4, align 1, !dbg !6723
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6724

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6725

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6726
  %9 = load i24, i24* %8, align 4, !dbg !6726
  %10 = and i24 %9, -458753, !dbg !6726
  %11 = or i24 %10, %7, !dbg !6726
  call void @llvm.dbg.label(metadata !6718), !dbg !6727
  %12 = and i24 %9, 30720, !dbg !6728
  %13 = icmp eq i24 %12, 16384, !dbg !6728
  %14 = zext i1 %13 to i24, !dbg !6730
  %15 = or i24 %11, %14, !dbg !6730
  %16 = icmp eq i8 %3, 99, !dbg !6731
  br i1 %16, label %17, label %43, !dbg !6733

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6734
  %19 = icmp ne i24 %18, 0, !dbg !6734
  call void @llvm.dbg.value(metadata i1 %19, metadata !6717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6720
  br label %43, !dbg !6736

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6737
  %22 = load i24, i24* %21, align 4, !dbg !6738
  %23 = and i24 %22, -458753, !dbg !6738
  %24 = or i24 %23, 262144, !dbg !6738
  call void @llvm.dbg.value(metadata i8 1, metadata !6717, metadata !DIExpression()), !dbg !6720
  br label %43, !dbg !6739

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6742
  %27 = load i24, i24* %26, align 4, !dbg !6743
  %28 = and i24 %27, -458753, !dbg !6743
  %29 = or i24 %28, 196608, !dbg !6743
  %30 = and i24 %27, 30720, !dbg !6744
  %31 = icmp eq i24 %30, 16384, !dbg !6744
  br label %43, !dbg !6746

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6747
  %34 = load i24, i24* %33, align 4, !dbg !6748
  %35 = and i24 %34, -458753, !dbg !6748
  %36 = or i24 %35, 196608, !dbg !6748
  %37 = and i24 %34, 30720, !dbg !6749
  %38 = icmp ne i24 %37, 0, !dbg !6749
  br label %43, !dbg !6751

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6752
  %41 = load i24, i24* %40, align 4, !dbg !6753
  %42 = or i24 %41, 1, !dbg !6753
  br label %43, !dbg !6754

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6755
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6756
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6757
  call void @llvm.dbg.value(metadata i8* %48, metadata !6716, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8 poison, metadata !6717, metadata !DIExpression()), !dbg !6720
  %49 = lshr i24 %44, 1, !dbg !6755
  %50 = and i24 %49, 1, !dbg !6755
  %51 = zext i24 %50 to i32, !dbg !6755
  %52 = or i32 %51, %47, !dbg !6755
  %53 = trunc i32 %52 to i24, !dbg !6755
  %54 = shl nuw nsw i24 %53, 1, !dbg !6755
  %55 = and i24 %44, -3, !dbg !6755
  %56 = or i24 %54, %55, !dbg !6755
  store i24 %56, i24* %46, align 4, !dbg !6755
  ret i8* %48, !dbg !6758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6759 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6763, metadata !DIExpression()), !dbg !6766
  %2 = load i8*, i8** %0, align 4, !dbg !6767
  call void @llvm.dbg.value(metadata i8* %2, metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6765, metadata !DIExpression()), !dbg !6766
  %3 = load i8, i8* %2, align 1, !dbg !6768
  %4 = zext i8 %3 to i32, !dbg !6769
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #28, !dbg !6770
  %6 = icmp eq i32 %5, 0, !dbg !6771
  br i1 %6, label %19, label %7, !dbg !6771

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6765, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %10, metadata !6764, metadata !DIExpression()), !dbg !6766
  %11 = mul i32 %9, 10, !dbg !6772
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6774
  call void @llvm.dbg.value(metadata i8* %12, metadata !6764, metadata !DIExpression()), !dbg !6766
  %13 = add i32 %11, -48, !dbg !6775
  %14 = add i32 %13, %8, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %14, metadata !6765, metadata !DIExpression()), !dbg !6766
  %15 = load i8, i8* %12, align 1, !dbg !6768
  %16 = zext i8 %15 to i32, !dbg !6769
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #28, !dbg !6770
  %18 = icmp eq i32 %17, 0, !dbg !6771
  br i1 %18, label %19, label %7, !dbg !6771, !llvm.loop !6777

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6766
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6766
  store i8* %20, i8** %0, align 4, !dbg !6779
  ret i32 %21, !dbg !6780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6783, metadata !DIExpression()), !dbg !6784
  %2 = add i32 %0, -48, !dbg !6785
  %3 = icmp ult i32 %2, 10, !dbg !6786
  %4 = zext i1 %3 to i32, !dbg !6786
  ret i32 %4, !dbg !6787
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6788 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6793, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.value(metadata i32 %1, metadata !6794, metadata !DIExpression()), !dbg !6795
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !6796, !srcloc !6798
  ret void, !dbg !6799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6800 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6802, metadata !DIExpression()), !dbg !6810
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6811
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6811
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6803, metadata !DIExpression()), !dbg !6812
  call void @llvm.va_start(i8* nonnull %3), !dbg !6813
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6814
  %5 = load i32, i32* %4, align 4, !dbg !6814
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6814
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6814
  call void @llvm.va_end(i8* nonnull %3), !dbg !6815
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6816
  ret void, !dbg !6816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6817 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #26, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #26, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #26, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #26, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #26, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #26, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #26, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #26, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #26, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #26, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #26, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #26, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #26, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #26, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #26, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #26, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7421, !srcloc !7422
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7423, !srcloc !7424
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7425, !srcloc !7426
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7427, !srcloc !7428
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7429, !srcloc !7430
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7431, !srcloc !7432
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7433, !srcloc !7434
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7435, !srcloc !7436
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7437, !srcloc !7438
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7439, !srcloc !7440
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7441, !srcloc !7442
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7443, !srcloc !7444
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7445, !srcloc !7446
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7447, !srcloc !7448
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7449, !srcloc !7450
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7451, !srcloc !7452
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7453, !srcloc !7454
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7455, !srcloc !7456
  ret void, !dbg !7457
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7460, metadata !DIExpression()), !dbg !7462
  tail call fastcc void @LL_FLASH_EnableInstCache() #28, !dbg !7463
  tail call fastcc void @LL_FLASH_EnableDataCache() #28, !dbg !7464
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7465, !srcloc !7474
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %3, metadata !7471, metadata !DIExpression()) #26, !dbg !7475
  call void @llvm.dbg.value(metadata i32 undef, metadata !7472, metadata !DIExpression()) #26, !dbg !7475
  call void @llvm.dbg.value(metadata i32 %3, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.value(metadata i32 %3, metadata !7476, metadata !DIExpression()) #26, !dbg !7481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7483, !srcloc !7484
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7485
  ret i32 0, !dbg !7486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #18 !dbg !7487 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7489
  %2 = or i32 %1, 512, !dbg !7489
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7489
  ret void, !dbg !7490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #18 !dbg !7491 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7492
  %2 = or i32 %1, 1024, !dbg !7492
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7492
  ret void, !dbg !7493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7496, metadata !DIExpression()), !dbg !7497
  ret i32 0, !dbg !7498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7499 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7502, metadata !DIExpression()), !dbg !7510
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7511
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7511
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7503, metadata !DIExpression()), !dbg !7512
  call void @llvm.va_start(i8* nonnull %3), !dbg !7513
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7514
  %5 = load i32, i32* %4, align 4, !dbg !7514
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7514
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7514
  call void @llvm.va_end(i8* nonnull %3), !dbg !7515
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7516
  ret void, !dbg !7516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7517 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7522, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata i8* %0, metadata !7521, metadata !DIExpression()), !dbg !7523
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7524
  ret void, !dbg !7525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7530, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i8* %1, metadata !7531, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %2, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i8* %1, metadata !7533, metadata !DIExpression()), !dbg !7534
  %4 = icmp eq i32 %2, 0, !dbg !7535
  br i1 %4, label %14, label %5, !dbg !7536

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) #28, !dbg !7534
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7536

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7533, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %10, metadata !7532, metadata !DIExpression()), !dbg !7534
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 noundef %7) #27, !dbg !7537
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #28, !dbg !7539
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7540
  call void @llvm.dbg.value(metadata i32 %11, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i8* %12, metadata !7533, metadata !DIExpression()), !dbg !7534
  br i1 %13, label %14, label %8, !dbg !7540, !llvm.loop !7541

14:                                               ; preds = %8, %3
  ret void, !dbg !7543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) unnamed_addr #5 !dbg !7544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7546, metadata !DIExpression()), !dbg !7547
  %2 = add i32 %0, -1, !dbg !7548
  %3 = icmp ult i32 %2, 4, !dbg !7548
  %4 = shl i32 %2, 3, !dbg !7548
  %5 = lshr i32 1145657157, %4, !dbg !7548
  %6 = trunc i32 %5 to i8, !dbg !7548
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7548
  ret i8 %7, !dbg !7549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7554, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %1, metadata !7555, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 0, metadata !7556, metadata !DIExpression()), !dbg !7566
  br label %4, !dbg !7567

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.70, i32 0, i32 0)) #27, !dbg !7568
  call void @llvm.dbg.value(metadata i32 0, metadata !7558, metadata !DIExpression()), !dbg !7569
  br label %16, !dbg !7570

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7556, metadata !DIExpression()), !dbg !7566
  %6 = icmp ult i32 %5, %1, !dbg !7571
  br i1 %6, label %7, label %11, !dbg !7575

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7576
  %9 = load i8, i8* %8, align 1, !dbg !7576
  %10 = zext i8 %9 to i32, !dbg !7578
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0), i32 noundef %10) #27, !dbg !7579
  br label %12, !dbg !7580

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.72, i32 0, i32 0)) #27, !dbg !7581
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7583
  call void @llvm.dbg.value(metadata i32 %13, metadata !7556, metadata !DIExpression()), !dbg !7566
  %14 = icmp eq i32 %13, 8, !dbg !7584
  br i1 %14, label %3, label %4, !dbg !7567, !llvm.loop !7585

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.73, i32 0, i32 0)) #27, !dbg !7587
  ret void, !dbg !7588

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7558, metadata !DIExpression()), !dbg !7569
  %18 = icmp ult i32 %17, %1, !dbg !7589
  br i1 %18, label %19, label %26, !dbg !7590

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7591
  %21 = load i8, i8* %20, align 1, !dbg !7591
  call void @llvm.dbg.value(metadata i8 %21, metadata !7560, metadata !DIExpression()), !dbg !7592
  %22 = zext i8 %21 to i32, !dbg !7593
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #28, !dbg !7594
  %24 = icmp eq i32 %23, 0, !dbg !7595
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7594
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.74, i32 0, i32 0), i32 noundef %25) #27, !dbg !7596
  br label %27, !dbg !7597

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.75, i32 0, i32 0)) #27, !dbg !7598
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %28, metadata !7558, metadata !DIExpression()), !dbg !7569
  %29 = icmp eq i32 %28, 8, !dbg !7601
  br i1 %29, label %15, label %16, !dbg !7570, !llvm.loop !7602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7606, metadata !DIExpression()), !dbg !7607
  %2 = add i32 %0, -32, !dbg !7608
  %3 = icmp ult i32 %2, 95, !dbg !7608
  %4 = zext i1 %3 to i32, !dbg !7608
  ret i32 %4, !dbg !7609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7659, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7660, metadata !DIExpression()), !dbg !7661
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7662
  br i1 %3, label %5, label %4, !dbg !7664

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #28, !dbg !7665
  br label %5, !dbg !7667

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7668
  ret void, !dbg !7669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7670 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7674, metadata !DIExpression()), !dbg !7675
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7676
  %3 = load i32, i32* %2, align 4, !dbg !7676
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7676
  %5 = load i32, i32* %4, align 4, !dbg !7676
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7676
  %7 = load i32, i32* %6, align 4, !dbg !7676
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7676
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7681
  %9 = load i32, i32* %8, align 4, !dbg !7681
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7681
  %11 = load i32, i32* %10, align 4, !dbg !7681
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7681
  %13 = load i32, i32* %12, align 4, !dbg !7681
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7681
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7686
  %15 = load i32, i32* %14, align 4, !dbg !7686
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7686
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7691
  %17 = load i32, i32* %16, align 4, !dbg !7691
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7691
  ret void, !dbg !7696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7697 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7714, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7715, metadata !DIExpression()), !dbg !7717
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7718
  %4 = load i32, i32* %3, align 4, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %4, metadata !7716, metadata !DIExpression()), !dbg !7717
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #28, !dbg !7719
  ret void, !dbg !7720
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7721 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i8* %0, metadata !7726, metadata !DIExpression()), !dbg !7728
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7729
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7729
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7727, metadata !DIExpression()), !dbg !7730
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7730
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7731
  %5 = bitcast i8* %4 to i32*, !dbg !7731
  %6 = load i32, i32* %5, align 4, !dbg !7731
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7732
  store i32 %6, i32* %7, align 4, !dbg !7733
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #28, !dbg !7734
  unreachable, !dbg !7735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7739, metadata !DIExpression()), !dbg !7740
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #28, !dbg !7741
  ret void, !dbg !7742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7747, metadata !DIExpression()), !dbg !7748
  %2 = icmp sgt i32 %0, -1, !dbg !7749
  br i1 %2, label %3, label %8, !dbg !7751

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7752, !srcloc !7754
  %4 = and i32 %0, 31, !dbg !7755
  %5 = shl nuw i32 1, %4, !dbg !7756
  %6 = lshr i32 %0, 5, !dbg !7757
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7758
  store volatile i32 %5, i32* %7, align 4, !dbg !7759
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7760, !srcloc !7761
  br label %8, !dbg !7762

8:                                                ; preds = %3, %1
  ret void, !dbg !7763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7766, metadata !DIExpression()), !dbg !7767
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #28, !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7772, metadata !DIExpression()), !dbg !7773
  %2 = icmp sgt i32 %0, -1, !dbg !7774
  br i1 %2, label %3, label %8, !dbg !7776

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7777
  %5 = shl nuw i32 1, %4, !dbg !7779
  %6 = lshr i32 %0, 5, !dbg !7780
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7781
  store volatile i32 %5, i32* %7, align 4, !dbg !7782
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7783, !srcloc !7787
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7788, !srcloc !7791
  br label %8, !dbg !7792

8:                                                ; preds = %3, %1
  ret void, !dbg !7793
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7798, metadata !DIExpression()), !dbg !7799
  %2 = lshr i32 %0, 5, !dbg !7800
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7801
  %4 = load volatile i32, i32* %3, align 4, !dbg !7801
  %5 = and i32 %0, 31, !dbg !7802
  %6 = shl nuw i32 1, %5, !dbg !7802
  %7 = and i32 %4, %6, !dbg !7803
  ret i32 %7, !dbg !7804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7809, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i32 %1, metadata !7810, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.value(metadata i32 %2, metadata !7811, metadata !DIExpression()), !dbg !7812
  %4 = add i32 %1, 1, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %4, metadata !7810, metadata !DIExpression()), !dbg !7812
  %5 = icmp ult i32 %4, 16, !dbg !7816
  br i1 %5, label %7, label %6, !dbg !7819

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.83, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !7820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7820
  unreachable, !dbg !7820

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #28, !dbg !7822
  ret void, !dbg !7823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7828, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i32 %1, metadata !7829, metadata !DIExpression()), !dbg !7830
  %3 = trunc i32 %1 to i8, !dbg !7831
  %4 = shl i8 %3, 4, !dbg !7831
  %5 = and i32 %0, 15, !dbg !7833
  %6 = add nsw i32 %5, -4, !dbg !7833
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7833
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7833
  %9 = icmp slt i32 %0, 0, !dbg !7833
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7833
  store volatile i8 %4, i8* %10, align 1, !dbg !7831
  ret void, !dbg !7834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7837, metadata !DIExpression()), !dbg !7838
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7839
  ret void, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7841 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7843
  tail call void @z_arm_int_exit() #27, !dbg !7844
  ret void, !dbg !7845
}

; Function Attrs: optsize
declare !dbg !7846 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7847 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7849 {
  tail call fastcc void @relocate_vector_table() #28, !dbg !7851
  tail call fastcc void @z_arm_floating_point_init() #28, !dbg !7852
  tail call void @z_bss_zero() #27, !dbg !7853
  tail call void @z_data_copy() #27, !dbg !7854
  tail call void @z_arm_interrupt_init() #27, !dbg !7855
  tail call void @z_cstart() #30, !dbg !7856
  unreachable, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7857 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7858
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7859, !srcloc !7862
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7863, !srcloc !7866
  ret void, !dbg !7867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7868 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7869
  %2 = and i32 %1, -15728641, !dbg !7869
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7869
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7870, !srcloc !7875
  call void @llvm.dbg.value(metadata i32 %3, metadata !7873, metadata !DIExpression()) #26, !dbg !7876
  %4 = and i32 %3, -5, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %4, metadata !7878, metadata !DIExpression()) #26, !dbg !7883
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7885, !srcloc !7886
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7887, !srcloc !7866
  ret void, !dbg !7889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7893, metadata !DIExpression()), !dbg !7894
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7895
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7896
  store i32 %0, i32* %3, align 4, !dbg !7897
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7898
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7899
  store i32 %4, i32* %5, align 4, !dbg !7900
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7901
  %7 = or i32 %6, 268435456, !dbg !7901
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7901
  call void @llvm.dbg.value(metadata i32 0, metadata !7902, metadata !DIExpression()) #26, !dbg !7905
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7907, !srcloc !7908
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7909
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7910
  %10 = load i32, i32* %9, align 4, !dbg !7910
  ret i32 %10, !dbg !7911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8024, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8025, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i8* %2, metadata !8026, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8027, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i8* %4, metadata !8028, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i8* %5, metadata !8029, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i8* %6, metadata !8030, metadata !DIExpression()), !dbg !8032
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8033
  call void @llvm.dbg.value(metadata i8* %8, metadata !8031, metadata !DIExpression()), !dbg !8032
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8034
  %10 = bitcast i8* %9 to i32*, !dbg !8034
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8035
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8036
  %12 = bitcast i8* %8 to i32*, !dbg !8037
  store i32 %11, i32* %12, align 4, !dbg !8038
  %13 = ptrtoint i8* %4 to i32, !dbg !8039
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8040
  %15 = bitcast i8* %14 to i32*, !dbg !8040
  store i32 %13, i32* %15, align 4, !dbg !8041
  %16 = ptrtoint i8* %5 to i32, !dbg !8042
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8043
  %18 = bitcast i8* %17 to i32*, !dbg !8043
  store i32 %16, i32* %18, align 4, !dbg !8044
  %19 = ptrtoint i8* %6 to i32, !dbg !8045
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8046
  %21 = bitcast i8* %20 to i32*, !dbg !8046
  store i32 %19, i32* %21, align 4, !dbg !8047
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8048
  %23 = bitcast i8* %22 to i32*, !dbg !8048
  store i32 16777216, i32* %23, align 4, !dbg !8049
  %24 = ptrtoint i8* %8 to i32, !dbg !8050
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8051
  store i32 %24, i32* %25, align 8, !dbg !8052
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8053
  store i32 0, i32* %26, align 4, !dbg !8054
  ret void, !dbg !8055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !8056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8060, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8061, metadata !DIExpression()), !dbg !8066
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8067
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8062, metadata !DIExpression()), !dbg !8066
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8068
  br i1 %4, label %19, label %5, !dbg !8070

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8065, metadata !DIExpression()), !dbg !8066
  %6 = icmp eq i32 %0, -22, !dbg !8071
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8071
  %8 = load i32, i32* %7, align 4, !dbg !8071
  br i1 %6, label %16, label %9, !dbg !8073

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8071
  %11 = icmp ule i32 %10, %0, !dbg !8071
  %12 = icmp ugt i32 %8, %0, !dbg !8071
  %13 = and i1 %12, %11, !dbg !8071
  %14 = icmp ugt i32 %8, %1, !dbg !8071
  %15 = and i1 %14, %13, !dbg !8071
  br i1 %15, label %18, label %19, !dbg !8071

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8071
  br i1 %17, label %18, label %19, !dbg !8073

18:                                               ; preds = %9, %16
  br label %19, !dbg !8074

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8066
  ret i32 %20, !dbg !8076
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !8077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8081, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8083, metadata !DIExpression()), !dbg !8084
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8085
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8086
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !8087, !srcloc !8088
  unreachable, !dbg !8089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8090 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8108, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %1, metadata !8109, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %2, metadata !8110, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8111, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 0, metadata !8112, metadata !DIExpression()), !dbg !8118
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %8, metadata !8113, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8118
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8120
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8120
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8121
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8121
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8117, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata i32 0, metadata !8123, metadata !DIExpression()) #26, !dbg !8126
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !8128, !srcloc !8129
  call void @llvm.dbg.value(metadata i8* %6, metadata !8115, metadata !DIExpression(DW_OP_deref)), !dbg !8118
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #28, !dbg !8130
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8116, metadata !DIExpression()), !dbg !8118
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8131
  br i1 %11, label %12, label %13, !dbg !8134

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8135
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.89, i32 0, i32 0)) #27, !dbg !8135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8135
  unreachable, !dbg !8135

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8137
  call void @llvm.dbg.value(metadata i32 %14, metadata !8113, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %5, metadata !8114, metadata !DIExpression(DW_OP_deref)), !dbg !8118
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #28, !dbg !8138
  call void @llvm.dbg.value(metadata i32 %15, metadata !8112, metadata !DIExpression()), !dbg !8118
  %16 = load i8, i8* %5, align 1, !dbg !8139, !range !8141
  call void @llvm.dbg.value(metadata i8 %16, metadata !8114, metadata !DIExpression()), !dbg !8118
  %17 = icmp eq i8 %16, 0, !dbg !8139
  br i1 %17, label %18, label %35, !dbg !8142

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8143
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !8144
  %21 = load i8, i8* %6, align 1, !dbg !8145, !range !8141
  call void @llvm.dbg.value(metadata i8 %21, metadata !8115, metadata !DIExpression()), !dbg !8118
  %22 = icmp eq i8 %21, 0, !dbg !8145
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8147
  %24 = load i32, i32* %23, align 4, !dbg !8147
  br i1 %22, label %30, label %25, !dbg !8148

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8149
  %27 = icmp eq i32 %26, 0, !dbg !8152
  br i1 %27, label %28, label %34, !dbg !8153

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8154
  br label %32, !dbg !8156

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8157
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8147
  br label %34, !dbg !8159

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !8159
  br label %35, !dbg !8160

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8160
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8160
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8160
  ret void, !dbg !8160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8166, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 %1, metadata !8167, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 %2, metadata !8168, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i8* %3, metadata !8169, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i8 0, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8171, metadata !DIExpression()), !dbg !8172
  store i8 0, i8* %3, align 1, !dbg !8173
  %5 = icmp ugt i32 %2, -16777217, !dbg !8174
  br i1 %5, label %6, label %17, !dbg !8176

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8177
  %8 = icmp eq i32 %7, 8, !dbg !8177
  br i1 %8, label %9, label %10, !dbg !8177

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8179
  br label %17, !dbg !8185

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8186
  %12 = icmp eq i32 %11, 0, !dbg !8186
  br i1 %12, label %13, label %14, !dbg !8187

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8172
  store i8 1, i8* %3, align 1, !dbg !8190
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8172
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8171, metadata !DIExpression()), !dbg !8172
  br label %17, !dbg !8193

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8172
  ret %struct.__esf* %18, !dbg !8194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8195 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8199, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 %1, metadata !8200, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i8* %2, metadata !8201, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 0, metadata !8202, metadata !DIExpression()), !dbg !8203
  store i8 0, i8* %2, align 1, !dbg !8204
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8205

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #28, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %5, metadata !8202, metadata !DIExpression()), !dbg !8203
  br label %12, !dbg !8208

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %7, metadata !8202, metadata !DIExpression()), !dbg !8203
  br label %12, !dbg !8210

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8211
  call void @llvm.dbg.value(metadata i32 0, metadata !8202, metadata !DIExpression()), !dbg !8203
  br label %12, !dbg !8212

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #28, !dbg !8213
  call void @llvm.dbg.value(metadata i32 0, metadata !8202, metadata !DIExpression()), !dbg !8203
  br label %12, !dbg !8214

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #28, !dbg !8215
  br label %12, !dbg !8216

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #28, !dbg !8217
  br label %12, !dbg !8218

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8203
  call void @llvm.dbg.value(metadata i32 %13, metadata !8202, metadata !DIExpression()), !dbg !8203
  ret i32 %13, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8220 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8224, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i8* %1, metadata !8225, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 0, metadata !8226, metadata !DIExpression()), !dbg !8227
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8228
  store i8 0, i8* %1, align 1, !dbg !8233
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8234
  %4 = and i32 %3, 2, !dbg !8236
  %5 = icmp eq i32 %4, 0, !dbg !8237
  br i1 %5, label %7, label %6, !dbg !8238

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8239
  br label %38, !dbg !8245

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8246
  %9 = icmp sgt i32 %8, -1, !dbg !8248
  br i1 %9, label %11, label %10, !dbg !8249

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.95, i32 0, i32 0), i32 noundef 69) #27, !dbg !8250
  br label %38, !dbg !8256

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8257
  %13 = and i32 %12, 1073741824, !dbg !8259
  %14 = icmp eq i32 %13, 0, !dbg !8260
  br i1 %14, label %37, label %15, !dbg !8261

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8262
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #28, !dbg !8268
  br i1 %16, label %17, label %21, !dbg !8270

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8271
  %19 = load i32, i32* %18, align 4, !dbg !8271
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.97, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8271
  %20 = load i32, i32* %18, align 4, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %20, metadata !8226, metadata !DIExpression()), !dbg !8227
  br label %38, !dbg !8278

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8279
  %23 = and i32 %22, 255, !dbg !8281
  %24 = icmp eq i32 %23, 0, !dbg !8282
  br i1 %24, label %27, label %25, !dbg !8283

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %26, metadata !8226, metadata !DIExpression()), !dbg !8227
  br label %38, !dbg !8286

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8287
  %29 = and i32 %28, 65280, !dbg !8289
  %30 = icmp eq i32 %29, 0, !dbg !8290
  br i1 %30, label %32, label %31, !dbg !8291

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8292
  call void @llvm.dbg.value(metadata i32 0, metadata !8226, metadata !DIExpression()), !dbg !8227
  br label %38, !dbg !8294

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8295
  %34 = icmp ult i32 %33, 65536, !dbg !8297
  br i1 %34, label %36, label %35, !dbg !8298

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #28, !dbg !8299
  call void @llvm.dbg.value(metadata i32 0, metadata !8226, metadata !DIExpression()), !dbg !8227
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.99, i32 0, i32 0)) #27, !dbg !8301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8301
  unreachable, !dbg !8301

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.100, i32 0, i32 0)) #27, !dbg !8306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8306
  unreachable, !dbg !8306

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8227
  call void @llvm.dbg.value(metadata i32 %39, metadata !8226, metadata !DIExpression()), !dbg !8227
  ret i32 %39, !dbg !8311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8312 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8314, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %1, metadata !8315, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i8* %2, metadata !8316, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 0, metadata !8317, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 -22, metadata !8318, metadata !DIExpression()), !dbg !8327
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8328
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8333
  %5 = and i32 %4, 16, !dbg !8335
  %6 = icmp eq i32 %5, 0, !dbg !8336
  br i1 %6, label %8, label %7, !dbg !8337

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8338
  br label %8, !dbg !8344

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8345
  %10 = and i32 %9, 8, !dbg !8347
  %11 = icmp eq i32 %10, 0, !dbg !8348
  br i1 %11, label %13, label %12, !dbg !8349

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8350
  br label %13, !dbg !8356

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8357
  %15 = and i32 %14, 2, !dbg !8358
  %16 = icmp eq i32 %15, 0, !dbg !8359
  br i1 %16, label %27, label %17, !dbg !8360

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !8361
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %18, metadata !8319, metadata !DIExpression()), !dbg !8367
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8368
  %20 = and i32 %19, 128, !dbg !8370
  %21 = icmp eq i32 %20, 0, !dbg !8371
  br i1 %21, label %27, label %22, !dbg !8372

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8318, metadata !DIExpression()), !dbg !8327
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8373
  %23 = icmp eq i32 %1, 0, !dbg !8379
  br i1 %23, label %27, label %24, !dbg !8381

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8382
  %26 = and i32 %25, -129, !dbg !8382
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8382
  br label %27, !dbg !8384

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8327
  call void @llvm.dbg.value(metadata i32 %28, metadata !8318, metadata !DIExpression()), !dbg !8327
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8385
  %30 = and i32 %29, 1, !dbg !8387
  %31 = icmp eq i32 %30, 0, !dbg !8388
  br i1 %31, label %33, label %32, !dbg !8389

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !8390
  br label %33, !dbg !8396

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8397
  %35 = and i32 %34, 32, !dbg !8399
  %36 = icmp eq i32 %35, 0, !dbg !8400
  br i1 %36, label %38, label %37, !dbg !8401

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8402
  br label %38, !dbg !8408

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8409
  %40 = and i32 %39, 16, !dbg !8410
  %41 = icmp eq i32 %40, 0, !dbg !8410
  br i1 %41, label %42, label %46, !dbg !8411

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8412
  %44 = and i32 %43, 2, !dbg !8413
  %45 = icmp eq i32 %44, 0, !dbg !8413
  br i1 %45, label %60, label %46, !dbg !8414

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8415
  %48 = and i32 %47, 2048, !dbg !8416
  %49 = icmp eq i32 %48, 0, !dbg !8416
  br i1 %49, label %60, label %50, !dbg !8417

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8418
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8419
  call void @llvm.dbg.value(metadata i32 %52, metadata !8322, metadata !DIExpression()), !dbg !8420
  %53 = icmp eq i32 %52, 0, !dbg !8421
  br i1 %53, label %55, label %54, !dbg !8423

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8424, metadata !DIExpression()) #26, !dbg !8427
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8430, !srcloc !8431
  call void @llvm.dbg.value(metadata i32 2, metadata !8317, metadata !DIExpression()), !dbg !8327
  br label %60, !dbg !8432

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8433
  %57 = and i32 %56, 16, !dbg !8433
  %58 = icmp eq i32 %57, 0, !dbg !8433
  br i1 %58, label %60, label %59, !dbg !8437

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8438
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !8438
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8438
  unreachable, !dbg !8438

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8327
  call void @llvm.dbg.value(metadata i32 %61, metadata !8317, metadata !DIExpression()), !dbg !8327
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8440
  %63 = and i32 %62, 32, !dbg !8442
  %64 = icmp eq i32 %63, 0, !dbg !8443
  br i1 %64, label %68, label %65, !dbg !8444

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8445
  %67 = and i32 %66, -8193, !dbg !8445
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8445
  br label %68, !dbg !8447

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8448
  %70 = or i32 %69, 255, !dbg !8448
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8448
  store i8 0, i8* %2, align 1, !dbg !8449
  ret i32 %61, !dbg !8450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8451 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8455, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %0, metadata !8456, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i8* %1, metadata !8457, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 0, metadata !8458, metadata !DIExpression()), !dbg !8462
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8463
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8468
  %4 = and i32 %3, 4096, !dbg !8470
  %5 = icmp eq i32 %4, 0, !dbg !8470
  br i1 %5, label %7, label %6, !dbg !8471

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8472
  br label %7, !dbg !8478

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8479
  %9 = and i32 %8, 2048, !dbg !8481
  %10 = icmp eq i32 %9, 0, !dbg !8481
  br i1 %10, label %12, label %11, !dbg !8482

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8483
  br label %12, !dbg !8489

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8490
  %14 = and i32 %13, 512, !dbg !8491
  %15 = icmp eq i32 %14, 0, !dbg !8491
  br i1 %15, label %26, label %16, !dbg !8492

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8493
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8498
  call void @llvm.dbg.value(metadata i32 %17, metadata !8459, metadata !DIExpression()), !dbg !8499
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8500
  %19 = and i32 %18, 32768, !dbg !8502
  %20 = icmp eq i32 %19, 0, !dbg !8503
  br i1 %20, label %26, label %21, !dbg !8504

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8505
  %22 = icmp eq i32 %0, 0, !dbg !8511
  br i1 %22, label %26, label %23, !dbg !8513

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8514
  %25 = and i32 %24, -32769, !dbg !8514
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8514
  br label %26, !dbg !8516

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8517
  %28 = and i32 %27, 1024, !dbg !8519
  %29 = icmp eq i32 %28, 0, !dbg !8519
  br i1 %29, label %31, label %30, !dbg !8520

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8521
  br label %31, !dbg !8527

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8528
  %33 = and i32 %32, 256, !dbg !8530
  %34 = icmp eq i32 %33, 0, !dbg !8531
  br i1 %34, label %35, label %39, !dbg !8532

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8533
  %37 = and i32 %36, 8192, !dbg !8535
  %38 = icmp eq i32 %37, 0, !dbg !8535
  br i1 %38, label %41, label %39, !dbg !8536

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8537
  br label %41, !dbg !8538

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8538
  %43 = or i32 %42, 65280, !dbg !8538
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8538
  store i8 0, i8* %1, align 1, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8541 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8547, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32 0, metadata !8548, metadata !DIExpression()), !dbg !8549
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #27, !dbg !8550
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8555
  %2 = and i32 %1, 33554432, !dbg !8557
  %3 = icmp eq i32 %2, 0, !dbg !8558
  br i1 %3, label %5, label %4, !dbg !8559

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #27, !dbg !8560
  br label %5, !dbg !8566

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8567
  %7 = and i32 %6, 16777216, !dbg !8569
  %8 = icmp eq i32 %7, 0, !dbg !8570
  br i1 %8, label %10, label %9, !dbg !8571

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #27, !dbg !8572
  br label %10, !dbg !8578

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8579
  %12 = and i32 %11, 524288, !dbg !8581
  %13 = icmp eq i32 %12, 0, !dbg !8582
  br i1 %13, label %15, label %14, !dbg !8583

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #27, !dbg !8584
  br label %15, !dbg !8590

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8591
  %17 = and i32 %16, 262144, !dbg !8593
  %18 = icmp eq i32 %17, 0, !dbg !8594
  br i1 %18, label %20, label %19, !dbg !8595

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #27, !dbg !8596
  br label %20, !dbg !8602

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8603
  %22 = and i32 %21, 131072, !dbg !8605
  %23 = icmp eq i32 %22, 0, !dbg !8606
  br i1 %23, label %25, label %24, !dbg !8607

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #27, !dbg !8608
  br label %25, !dbg !8614

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8615
  %27 = and i32 %26, 65536, !dbg !8617
  %28 = icmp eq i32 %27, 0, !dbg !8618
  br i1 %28, label %30, label %29, !dbg !8619

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #27, !dbg !8620
  br label %30, !dbg !8626

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8627
  %32 = or i32 %31, -65536, !dbg !8627
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8627
  ret void, !dbg !8628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8629 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8633, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i8* %0, metadata !8634, metadata !DIExpression()), !dbg !8635
  store i8 0, i8* %0, align 1, !dbg !8636
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8637
  ret void, !dbg !8642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8643 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8647, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i32 %0, metadata !8648, metadata !DIExpression()), !dbg !8649
  %2 = icmp slt i32 %0, 16, !dbg !8650
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8650
  %4 = add nsw i32 %0, -16, !dbg !8650
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8650
  ret void, !dbg !8655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8660, metadata !DIExpression()), !dbg !8663
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8664
  %3 = load i32, i32* %2, align 4, !dbg !8664
  %4 = inttoptr i32 %3 to i16*, !dbg !8665
  call void @llvm.dbg.value(metadata i16* %4, metadata !8661, metadata !DIExpression()), !dbg !8663
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8666
  %6 = or i32 %5, 256, !dbg !8666
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8666
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8667, !srcloc !8670
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8671, !srcloc !8674
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8675
  %8 = load i16, i16* %7, align 2, !dbg !8676
  call void @llvm.dbg.value(metadata i16 %8, metadata !8662, metadata !DIExpression()), !dbg !8663
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8677
  %10 = and i32 %9, -257, !dbg !8677
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8677
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8678, !srcloc !8670
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8680, !srcloc !8674
  %11 = icmp eq i16 %8, -8446, !dbg !8682
  ret i1 %11, !dbg !8684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8685 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8686
  %2 = or i32 %1, 16, !dbg !8686
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8686
  ret void, !dbg !8687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8688 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8691, metadata !DIExpression()), !dbg !8692
  br label %1, !dbg !8693

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8691, metadata !DIExpression()), !dbg !8692
  tail call fastcc void @__NVIC_SetPriority.104(i32 noundef %2) #28, !dbg !8695
  %3 = add nuw nsw i32 %2, 1, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %3, metadata !8691, metadata !DIExpression()), !dbg !8692
  %4 = icmp eq i32 %3, 82, !dbg !8699
  br i1 %4, label %5, label %1, !dbg !8693, !llvm.loop !8700

5:                                                ; preds = %1
  ret void, !dbg !8702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.104(i32 noundef %0) unnamed_addr #18 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8705, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i32 1, metadata !8706, metadata !DIExpression()), !dbg !8707
  %2 = and i32 %0, 15, !dbg !8708
  %3 = add nsw i32 %2, -4, !dbg !8708
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8708
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8708
  %6 = icmp slt i32 %0, 0, !dbg !8708
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8708
  store volatile i8 16, i8* %7, align 1, !dbg !8709
  ret void, !dbg !8711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8820, metadata !DIExpression()), !dbg !8821
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8822
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8824
  br i1 %3, label %4, label %12, !dbg !8825

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8826, !srcloc !8838
  call void @llvm.dbg.value(metadata i32 %5, metadata !8829, metadata !DIExpression()) #26, !dbg !8839
  %6 = icmp eq i32 %5, 0, !dbg !8840
  br i1 %6, label %12, label %7, !dbg !8841

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8842
  %9 = or i32 %8, 268435456, !dbg !8842
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8842
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8844
  %11 = and i32 %10, -32769, !dbg !8844
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8844
  br label %12, !dbg !8845

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8848 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8849
  ret void, !dbg !8850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !645, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8 0, metadata !646, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 64, metadata !648, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 undef, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8851
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8852
  %3 = load i32, i32* %2, align 4, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %3, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8851
  %4 = add i32 %3, -64, !dbg !8854
  call void @llvm.dbg.value(metadata i32 %4, metadata !647, metadata !DIExpression()), !dbg !8851
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8855
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8856
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8857
  call void @llvm.dbg.value(metadata i8 1, metadata !646, metadata !DIExpression()), !dbg !8851
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8858
  ret void, !dbg !8859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8860 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8861
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8862, !srcloc !8865
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8866, !srcloc !8869
  ret void, !dbg !8870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8871 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8872, !srcloc !8875
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8876
  ret void, !dbg !8877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8878 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8893, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata i8 %1, metadata !8894, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata i32 %2, metadata !8895, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata i32 %3, metadata !8896, metadata !DIExpression()), !dbg !8897
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !8898
  %6 = icmp eq i32 %5, -22, !dbg !8900
  br i1 %6, label %7, label %9, !dbg !8901

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8902
  %8 = zext i8 %1 to i32, !dbg !8902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef %8) #27, !dbg !8902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8902
  unreachable, !dbg !8902

9:                                                ; preds = %4
  ret void, !dbg !8907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8908 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8913, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8 %1, metadata !8914, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 undef, metadata !8915, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 undef, metadata !8916, metadata !DIExpression()), !dbg !8918
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8919
  call void @llvm.dbg.value(metadata i8 %3, metadata !8917, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8918
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #28, !dbg !8920
  call void @llvm.dbg.value(metadata i32 %4, metadata !8917, metadata !DIExpression()), !dbg !8918
  %5 = trunc i32 %4 to i8, !dbg !8921
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8922
  ret i32 %4, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8928, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8 %1, metadata !8929, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i8 %2, metadata !8930, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i1 %3, metadata !8931, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8934
  %5 = zext i8 %2 to i32, !dbg !8935
  call void @llvm.dbg.value(metadata i32 %5, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i32 0, metadata !8932, metadata !DIExpression()), !dbg !8934
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i32 0, metadata !8932, metadata !DIExpression()), !dbg !8934
  %7 = icmp eq i8 %1, 0, !dbg !8936
  br i1 %7, label %30, label %8, !dbg !8939

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.value(metadata i32 %10, metadata !8932, metadata !DIExpression()), !dbg !8934
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8940
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8943
  %13 = load i32, i32* %12, align 4, !dbg !8943
  %14 = icmp eq i32 %13, 0, !dbg !8944
  br i1 %14, label %26, label %15, !dbg !8945

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8946

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8948
  %18 = icmp eq i32 %17, 0, !dbg !8948
  br i1 %18, label %19, label %20, !dbg !8949

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8950
  br label %30, !dbg !8956

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8957
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8958
  call void @llvm.dbg.value(metadata i32 %22, metadata !8933, metadata !DIExpression()), !dbg !8934
  %23 = icmp eq i32 %22, -22, !dbg !8959
  br i1 %23, label %30, label %24, !dbg !8961

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8962
  call void @llvm.dbg.value(metadata i32 %25, metadata !8933, metadata !DIExpression()), !dbg !8934
  br label %26, !dbg !8963

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8934
  call void @llvm.dbg.value(metadata i32 %27, metadata !8933, metadata !DIExpression()), !dbg !8934
  %28 = add nuw nsw i32 %10, 1, !dbg !8964
  call void @llvm.dbg.value(metadata i32 %28, metadata !8932, metadata !DIExpression()), !dbg !8934
  %29 = icmp eq i32 %28, %6, !dbg !8936
  br i1 %29, label %30, label %8, !dbg !8939, !llvm.loop !8965

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8934
  ret i32 %31, !dbg !8967
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8968 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8972, metadata !DIExpression()), !dbg !8974
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8975
  %3 = load i32, i32* %2, align 4, !dbg !8975
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8976, !range !5407
  %5 = icmp ult i32 %4, 2, !dbg !8976
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8977
  br i1 %7, label %8, label %15, !dbg !8977

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8978
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8979
  %11 = load i32, i32* %10, align 4, !dbg !8979
  %12 = and i32 %11, %9, !dbg !8980
  %13 = icmp eq i32 %12, 0, !dbg !8981
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8973, metadata !DIExpression()), !dbg !8974
  ret i32 %16, !dbg !8982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8983 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8987, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8988, metadata !DIExpression()), !dbg !8990
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8991
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8991
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8989, metadata !DIExpression()), !dbg !8992
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8993
  %6 = load i32, i32* %5, align 4, !dbg !8993
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8994
  store i32 %6, i32* %7, align 4, !dbg !8995
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8996
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8997
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8998
  %11 = load i32, i32* %10, align 4, !dbg !8998
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #28, !dbg !8999
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #28, !dbg !9000
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !9001
  ret i32 %12, !dbg !9002
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !9003 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9010, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9011, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 undef, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 %2, metadata !9013, metadata !DIExpression()), !dbg !9014
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9015
  %5 = load i32, i32* %4, align 4, !dbg !9015
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #28, !dbg !9016
  %7 = or i32 %6, %5, !dbg !9017
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9018
  store i32 %7, i32* %8, align 4, !dbg !9019
  ret void, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9021 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9025, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9026, metadata !DIExpression()), !dbg !9027
  %3 = zext i8 %0 to i32, !dbg !9028
  %4 = icmp ugt i8 %0, 7, !dbg !9030
  br i1 %4, label %5, label %6, !dbg !9031

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.118, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9032
  br label %7, !dbg !9038

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #28, !dbg !9039
  br label %7, !dbg !9040

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9027
  ret i32 %8, !dbg !9041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #18 !dbg !9042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9046, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9047, metadata !DIExpression()), !dbg !9048
  tail call fastcc void @set_region_number(i32 noundef %0) #28, !dbg !9049
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9050
  %4 = load i32, i32* %3, align 4, !dbg !9050
  %5 = and i32 %4, -32, !dbg !9051
  %6 = or i32 %5, %0, !dbg !9052
  %7 = or i32 %6, 16, !dbg !9052
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9053
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9054
  %9 = load i32, i32* %8, align 4, !dbg !9054
  %10 = or i32 %9, 1, !dbg !9055
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #18 !dbg !9058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9061, metadata !DIExpression()), !dbg !9062
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9063
  ret void, !dbg !9064
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !9065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9069, metadata !DIExpression()), !dbg !9070
  %2 = icmp ult i32 %0, 33, !dbg !9071
  br i1 %2, label %11, label %3, !dbg !9073

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9074
  br i1 %4, label %11, label %5, !dbg !9076

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9077
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9078, !range !5407
  %8 = mul nsw i32 %7, -2, !dbg !9079
  %9 = add nsw i32 %8, 62, !dbg !9079
  %10 = and i32 %9, 62, !dbg !9080
  br label %11, !dbg !9081

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9070
  ret i32 %12, !dbg !9082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9083 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9087, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i8 %1, metadata !9088, metadata !DIExpression()), !dbg !9089
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !9090
  %4 = icmp eq i32 %3, -22, !dbg !9092
  br i1 %4, label %5, label %7, !dbg !9093

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9094
  %6 = zext i8 %1 to i32, !dbg !9094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.121, i32 0, i32 0), i32 noundef %6) #27, !dbg !9094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9094
  unreachable, !dbg !9094

7:                                                ; preds = %2
  ret void, !dbg !9099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9100 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9104, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i8 %1, metadata !9105, metadata !DIExpression()), !dbg !9111
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9112
  call void @llvm.dbg.value(metadata i8 %3, metadata !9106, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9111
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #28, !dbg !9113
  call void @llvm.dbg.value(metadata i32 %4, metadata !9106, metadata !DIExpression()), !dbg !9111
  %5 = icmp ne i32 %4, -22, !dbg !9114
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %4, metadata !9107, metadata !DIExpression()), !dbg !9116
  br i1 %7, label %8, label %12, !dbg !9115

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9107, metadata !DIExpression()), !dbg !9116
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #28, !dbg !9117
  %10 = add i32 %9, 1, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %10, metadata !9107, metadata !DIExpression()), !dbg !9116
  %11 = icmp eq i32 %10, 8, !dbg !9121
  br i1 %11, label %12, label %8, !dbg !9122, !llvm.loop !9123

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #18 !dbg !9126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9129, metadata !DIExpression()), !dbg !9130
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9131
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9132
  ret void, !dbg !9133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9134 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9139
  %2 = icmp ugt i32 %1, 8, !dbg !9141
  br i1 %2, label %3, label %4, !dbg !9142

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !9143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9143
  unreachable, !dbg !9143

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #28, !dbg !9148
  call void @llvm.dbg.value(metadata i32 0, metadata !9138, metadata !DIExpression()), !dbg !9149
  %5 = icmp eq i32 %1, 0, !dbg !9150
  br i1 %5, label %13, label %6, !dbg !9153

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9153

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9138, metadata !DIExpression()), !dbg !9149
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9154
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #28, !dbg !9156
  %11 = add nuw i32 %9, 1, !dbg !9157
  call void @llvm.dbg.value(metadata i32 %11, metadata !9138, metadata !DIExpression()), !dbg !9149
  %12 = icmp eq i32 %11, %1, !dbg !9150
  br i1 %12, label %13, label %8, !dbg !9153, !llvm.loop !9158

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9160
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9161
  tail call void @arm_core_mpu_enable() #28, !dbg !9162
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9163
  %16 = and i32 %15, 65280, !dbg !9163
  %17 = icmp eq i32 %16, 2048, !dbg !9163
  br i1 %17, label %19, label %18, !dbg !9166

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.124, i32 0, i32 0)) #27, !dbg !9167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9167
  unreachable, !dbg !9167

19:                                               ; preds = %13
  ret i32 0, !dbg !9169
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9170 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9177, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i8* %1, metadata !9178, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i8* %0, metadata !9179, metadata !DIExpression()), !dbg !9180
  %3 = load i8, i8* %1, align 1, !dbg !9181
  %4 = icmp eq i8 %3, 0, !dbg !9182
  br i1 %4, label %13, label %5, !dbg !9183

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9177, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i8* %8, metadata !9178, metadata !DIExpression()), !dbg !9180
  store i8 %6, i8* %7, align 1, !dbg !9184
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9186
  call void @llvm.dbg.value(metadata i8* %9, metadata !9177, metadata !DIExpression()), !dbg !9180
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9187
  call void @llvm.dbg.value(metadata i8* %10, metadata !9178, metadata !DIExpression()), !dbg !9180
  %11 = load i8, i8* %10, align 1, !dbg !9181
  %12 = icmp eq i8 %11, 0, !dbg !9182
  br i1 %12, label %13, label %5, !dbg !9183, !llvm.loop !9188

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9190
  ret i8* %0, !dbg !9191
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9192 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i8* %1, metadata !9197, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %2, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i8* %0, metadata !9199, metadata !DIExpression()), !dbg !9200
  %4 = icmp eq i32 %2, 0, !dbg !9201
  br i1 %4, label %22, label %5, !dbg !9202

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %7, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i8* %8, metadata !9197, metadata !DIExpression()), !dbg !9200
  %9 = load i8, i8* %8, align 1, !dbg !9203
  %10 = icmp eq i8 %9, 0, !dbg !9204
  br i1 %10, label %16, label %11, !dbg !9205

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9206
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9208
  call void @llvm.dbg.value(metadata i8* %12, metadata !9197, metadata !DIExpression()), !dbg !9200
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9209
  call void @llvm.dbg.value(metadata i8* %13, metadata !9196, metadata !DIExpression()), !dbg !9200
  %14 = add i32 %7, -1, !dbg !9210
  call void @llvm.dbg.value(metadata i32 %14, metadata !9198, metadata !DIExpression()), !dbg !9200
  %15 = icmp eq i32 %14, 0, !dbg !9201
  br i1 %15, label %22, label %5, !dbg !9202, !llvm.loop !9211

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %18, metadata !9198, metadata !DIExpression()), !dbg !9200
  store i8 0, i8* %17, align 1, !dbg !9213
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9215
  call void @llvm.dbg.value(metadata i8* %19, metadata !9196, metadata !DIExpression()), !dbg !9200
  %20 = add i32 %18, -1, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %20, metadata !9198, metadata !DIExpression()), !dbg !9200
  %21 = icmp eq i32 %20, 0, !dbg !9217
  br i1 %21, label %22, label %16, !dbg !9218, !llvm.loop !9219

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9221
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9226, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i32 %1, metadata !9227, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i32 %1, metadata !9228, metadata !DIExpression()), !dbg !9229
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9230

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9226, metadata !DIExpression()), !dbg !9229
  %6 = load i8, i8* %5, align 1, !dbg !9231
  %7 = icmp eq i8 %6, %3, !dbg !9232
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9233
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9234
  call void @llvm.dbg.value(metadata i8* %10, metadata !9226, metadata !DIExpression()), !dbg !9229
  br i1 %9, label %11, label %4, !dbg !9233, !llvm.loop !9236

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9238
  ret i8* %12, !dbg !9239
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9240 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9242, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i32 %1, metadata !9243, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i8* null, metadata !9244, metadata !DIExpression()), !dbg !9245
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9246

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9245
  call void @llvm.dbg.value(metadata i8* %6, metadata !9244, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i8* %5, metadata !9242, metadata !DIExpression()), !dbg !9245
  %7 = load i8, i8* %5, align 1, !dbg !9247
  %8 = icmp eq i8 %7, %3, !dbg !9250
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9251
  call void @llvm.dbg.value(metadata i8* %9, metadata !9244, metadata !DIExpression()), !dbg !9245
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9252
  call void @llvm.dbg.value(metadata i8* %10, metadata !9242, metadata !DIExpression()), !dbg !9245
  %11 = icmp eq i8 %7, 0, !dbg !9253
  br i1 %11, label %12, label %4, !dbg !9253, !llvm.loop !9254

12:                                               ; preds = %4
  ret i8* %9, !dbg !9256
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9261, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i32 0, metadata !9262, metadata !DIExpression()), !dbg !9263
  %2 = load i8, i8* %0, align 1, !dbg !9264
  %3 = icmp eq i8 %2, 0, !dbg !9265
  br i1 %3, label %11, label %4, !dbg !9266

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %6, metadata !9261, metadata !DIExpression()), !dbg !9263
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9267
  call void @llvm.dbg.value(metadata i8* %7, metadata !9261, metadata !DIExpression()), !dbg !9263
  %8 = add i32 %5, 1, !dbg !9269
  call void @llvm.dbg.value(metadata i32 %8, metadata !9262, metadata !DIExpression()), !dbg !9263
  %9 = load i8, i8* %7, align 1, !dbg !9264
  %10 = icmp eq i8 %9, 0, !dbg !9265
  br i1 %10, label %11, label %4, !dbg !9266, !llvm.loop !9270

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9263
  ret i32 %12, !dbg !9272
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9277, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i32 %1, metadata !9278, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i32 0, metadata !9279, metadata !DIExpression()), !dbg !9280
  %3 = load i8, i8* %0, align 1, !dbg !9281
  %4 = icmp ne i8 %3, 0, !dbg !9282
  %5 = icmp ne i32 %1, 0, !dbg !9283
  %6 = and i1 %4, %5, !dbg !9283
  br i1 %6, label %7, label %16, !dbg !9284

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9279, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i8* %9, metadata !9277, metadata !DIExpression()), !dbg !9280
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9285
  call void @llvm.dbg.value(metadata i8* %10, metadata !9277, metadata !DIExpression()), !dbg !9280
  %11 = add nuw i32 %8, 1, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %11, metadata !9279, metadata !DIExpression()), !dbg !9280
  %12 = load i8, i8* %10, align 1, !dbg !9281
  %13 = icmp ne i8 %12, 0, !dbg !9282
  %14 = icmp ult i32 %11, %1, !dbg !9283
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9283
  br i1 %15, label %7, label %16, !dbg !9284, !llvm.loop !9288

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9280
  ret i32 %17, !dbg !9290
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9291 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9295, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.value(metadata i8* %1, metadata !9296, metadata !DIExpression()), !dbg !9297
  %3 = load i8, i8* %0, align 1, !dbg !9298
  %4 = load i8, i8* %1, align 1, !dbg !9299
  %5 = icmp ne i8 %3, %4, !dbg !9300
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9301
  br i1 %7, label %18, label %8, !dbg !9301

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9296, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.value(metadata i8* %10, metadata !9295, metadata !DIExpression()), !dbg !9297
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9302
  call void @llvm.dbg.value(metadata i8* %11, metadata !9295, metadata !DIExpression()), !dbg !9297
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9304
  call void @llvm.dbg.value(metadata i8* %12, metadata !9296, metadata !DIExpression()), !dbg !9297
  %13 = load i8, i8* %11, align 1, !dbg !9298
  %14 = load i8, i8* %12, align 1, !dbg !9299
  %15 = icmp ne i8 %13, %14, !dbg !9300
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9301
  br i1 %17, label %18, label %8, !dbg !9301, !llvm.loop !9305

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9298
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9299
  %21 = zext i8 %19 to i32, !dbg !9308
  %22 = zext i8 %20 to i32, !dbg !9309
  %23 = sub nsw i32 %21, %22, !dbg !9310
  ret i32 %23, !dbg !9311
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9312 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9316, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i8* %1, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %2, metadata !9318, metadata !DIExpression()), !dbg !9319
  %4 = icmp eq i32 %2, 0, !dbg !9320
  br i1 %4, label %23, label %5, !dbg !9320

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9318, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i8* %7, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i8* %8, metadata !9316, metadata !DIExpression()), !dbg !9319
  %9 = load i8, i8* %8, align 1, !dbg !9321
  %10 = load i8, i8* %7, align 1, !dbg !9322
  %11 = icmp ne i8 %9, %10, !dbg !9323
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9324
  br i1 %13, label %19, label %14, !dbg !9324

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9325
  call void @llvm.dbg.value(metadata i8* %15, metadata !9316, metadata !DIExpression()), !dbg !9319
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9327
  call void @llvm.dbg.value(metadata i8* %16, metadata !9317, metadata !DIExpression()), !dbg !9319
  %17 = add i32 %6, -1, !dbg !9328
  call void @llvm.dbg.value(metadata i32 %17, metadata !9318, metadata !DIExpression()), !dbg !9319
  %18 = icmp eq i32 %17, 0, !dbg !9320
  br i1 %18, label %23, label %5, !dbg !9320, !llvm.loop !9329

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9332
  %21 = zext i8 %10 to i32, !dbg !9333
  %22 = sub nsw i32 %20, %21, !dbg !9334
  br label %23, !dbg !9335

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9335
  ret i32 %24, !dbg !9336
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !9337 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9341, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i8* %1, metadata !9342, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i8** %2, metadata !9343, metadata !DIExpression()), !dbg !9346
  %4 = icmp eq i8* %0, null, !dbg !9347
  br i1 %4, label %5, label %7, !dbg !9347

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9348
  br label %7, !dbg !9347

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9347
  call void @llvm.dbg.value(metadata i8* %8, metadata !9344, metadata !DIExpression()), !dbg !9346
  %9 = load i8, i8* %8, align 1, !dbg !9349
  %10 = icmp eq i8 %9, 0, !dbg !9349
  br i1 %10, label %33, label %11, !dbg !9350

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9344, metadata !DIExpression()), !dbg !9346
  %14 = zext i8 %12 to i32, !dbg !9349
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #28, !dbg !9351
  %16 = icmp eq i8* %15, null, !dbg !9350
  br i1 %16, label %21, label %17, !dbg !9352

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9353
  call void @llvm.dbg.value(metadata i8* %18, metadata !9344, metadata !DIExpression()), !dbg !9346
  %19 = load i8, i8* %18, align 1, !dbg !9349
  %20 = icmp eq i8 %19, 0, !dbg !9349
  br i1 %20, label %33, label %11, !dbg !9350, !llvm.loop !9355

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9345, metadata !DIExpression()), !dbg !9346
  %24 = zext i8 %22 to i32, !dbg !9357
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #28, !dbg !9358
  %26 = icmp eq i8* %25, null, !dbg !9359
  br i1 %26, label %27, label %31, !dbg !9360

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9361
  call void @llvm.dbg.value(metadata i8* %28, metadata !9345, metadata !DIExpression()), !dbg !9346
  %29 = load i8, i8* %28, align 1, !dbg !9357
  %30 = icmp eq i8 %29, 0, !dbg !9357
  br i1 %30, label %33, label %21, !dbg !9363, !llvm.loop !9364

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9366
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9369
  br label %33, !dbg !9370

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9346
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9346
  store i8* %34, i8** %2, align 4, !dbg !9346
  ret i8* %35, !dbg !9371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9372 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9374, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata i8* %1, metadata !9375, metadata !DIExpression()), !dbg !9376
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9377
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9378
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #28, !dbg !9379
  ret i8* %0, !dbg !9380
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9381 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9383, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i8* %1, metadata !9384, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %2, metadata !9385, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i8* %0, metadata !9386, metadata !DIExpression()), !dbg !9388
  %4 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %4, metadata !9387, metadata !DIExpression()), !dbg !9388
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9390
  call void @llvm.dbg.value(metadata i8* %5, metadata !9383, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i8* %1, metadata !9384, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %2, metadata !9385, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %2, metadata !9385, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9388
  %6 = icmp eq i32 %2, 0, !dbg !9391
  br i1 %6, label %18, label %7, !dbg !9392

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9393
  call void @llvm.dbg.value(metadata i8* %9, metadata !9383, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i8* %10, metadata !9384, metadata !DIExpression()), !dbg !9388
  %12 = load i8, i8* %10, align 1, !dbg !9394
  %13 = icmp eq i8 %12, 0, !dbg !9395
  br i1 %13, label %18, label %14, !dbg !9396

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9397
  call void @llvm.dbg.value(metadata i8* %15, metadata !9384, metadata !DIExpression()), !dbg !9388
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9399
  call void @llvm.dbg.value(metadata i8* %16, metadata !9383, metadata !DIExpression()), !dbg !9388
  store i8 %12, i8* %9, align 1, !dbg !9400
  call void @llvm.dbg.value(metadata i32 %11, metadata !9385, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %11, metadata !9385, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9388
  %17 = icmp eq i32 %11, 0, !dbg !9391
  br i1 %17, label %18, label %7, !dbg !9392, !llvm.loop !9401

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9388
  store i8 0, i8* %19, align 1, !dbg !9403
  ret i8* %0, !dbg !9404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9409, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9410, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %2, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %0, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %1, metadata !9413, metadata !DIExpression()), !dbg !9414
  %4 = icmp eq i32 %2, 0, !dbg !9415
  br i1 %4, label %31, label %5, !dbg !9417

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9413, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %0, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %2, metadata !9411, metadata !DIExpression()), !dbg !9414
  %6 = add i32 %2, -1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %6, metadata !9411, metadata !DIExpression()), !dbg !9414
  %7 = icmp eq i32 %6, 0, !dbg !9419
  br i1 %7, label %23, label %8, !dbg !9420

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9421
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9421
  br label %11, !dbg !9421

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9413, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i8* %14, metadata !9412, metadata !DIExpression()), !dbg !9414
  %15 = load i8, i8* %14, align 1, !dbg !9422
  %16 = load i8, i8* %13, align 1, !dbg !9423
  %17 = icmp eq i8 %15, %16, !dbg !9424
  br i1 %17, label %18, label %23, !dbg !9421

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9425
  call void @llvm.dbg.value(metadata i8* %19, metadata !9412, metadata !DIExpression()), !dbg !9414
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9427
  call void @llvm.dbg.value(metadata i8* %20, metadata !9413, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %12, metadata !9411, metadata !DIExpression()), !dbg !9414
  %21 = add i32 %12, -1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %21, metadata !9411, metadata !DIExpression()), !dbg !9414
  %22 = icmp eq i32 %21, 0, !dbg !9419
  br i1 %22, label %23, label %11, !dbg !9420, !llvm.loop !9428

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9414
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9414
  %26 = load i8, i8* %24, align 1, !dbg !9430
  %27 = zext i8 %26 to i32, !dbg !9430
  %28 = load i8, i8* %25, align 1, !dbg !9431
  %29 = zext i8 %28 to i32, !dbg !9431
  %30 = sub nsw i32 %27, %29, !dbg !9432
  br label %31, !dbg !9433

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9414
  ret i32 %32, !dbg !9434
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9435 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9439, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %1, metadata !9440, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %0, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %1, metadata !9443, metadata !DIExpression()), !dbg !9444
  %4 = ptrtoint i8* %0 to i32, !dbg !9445
  %5 = ptrtoint i8* %1 to i32, !dbg !9445
  %6 = sub i32 %4, %5, !dbg !9445
  %7 = icmp ult i32 %6, %2, !dbg !9447
  br i1 %7, label %10, label %8, !dbg !9448

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %0, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9441, metadata !DIExpression()), !dbg !9444
  %9 = icmp eq i32 %2, 0, !dbg !9449
  br i1 %9, label %26, label %17, !dbg !9451

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9441, metadata !DIExpression()), !dbg !9444
  %12 = add i32 %11, -1, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %12, metadata !9441, metadata !DIExpression()), !dbg !9444
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9455
  %14 = load i8, i8* %13, align 1, !dbg !9455
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9456
  store i8 %14, i8* %15, align 1, !dbg !9457
  %16 = icmp eq i32 %12, 0, !dbg !9458
  br i1 %16, label %26, label %10, !dbg !9459, !llvm.loop !9460

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %19, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %20, metadata !9441, metadata !DIExpression()), !dbg !9444
  %21 = load i8, i8* %18, align 1, !dbg !9462
  store i8 %21, i8* %19, align 1, !dbg !9464
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9465
  call void @llvm.dbg.value(metadata i8* %22, metadata !9442, metadata !DIExpression()), !dbg !9444
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9466
  call void @llvm.dbg.value(metadata i8* %23, metadata !9443, metadata !DIExpression()), !dbg !9444
  %24 = add i32 %20, -1, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %24, metadata !9441, metadata !DIExpression()), !dbg !9444
  %25 = icmp eq i32 %24, 0, !dbg !9449
  br i1 %25, label %26, label %17, !dbg !9451, !llvm.loop !9468

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9470
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9477, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i32 %2, metadata !9479, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %0, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %1, metadata !9481, metadata !DIExpression()), !dbg !9482
  %4 = icmp eq i32 %2, 0, !dbg !9483
  br i1 %4, label %14, label %5, !dbg !9484

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9481, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %7, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i32 %8, metadata !9479, metadata !DIExpression()), !dbg !9482
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9485
  call void @llvm.dbg.value(metadata i8* %9, metadata !9481, metadata !DIExpression()), !dbg !9482
  %10 = load i8, i8* %6, align 1, !dbg !9487
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9488
  call void @llvm.dbg.value(metadata i8* %11, metadata !9480, metadata !DIExpression()), !dbg !9482
  store i8 %10, i8* %7, align 1, !dbg !9489
  %12 = add i32 %8, -1, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %12, metadata !9479, metadata !DIExpression()), !dbg !9482
  %13 = icmp eq i32 %12, 0, !dbg !9483
  br i1 %13, label %14, label %5, !dbg !9484, !llvm.loop !9491

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9493
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9494 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9498, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9500, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i8* %0, metadata !9501, metadata !DIExpression()), !dbg !9503
  %4 = trunc i32 %1 to i8, !dbg !9504
  call void @llvm.dbg.value(metadata i8 %4, metadata !9502, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9500, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i8* %0, metadata !9501, metadata !DIExpression()), !dbg !9503
  %5 = icmp eq i32 %2, 0, !dbg !9505
  br i1 %5, label %12, label %6, !dbg !9506

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9500, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i8* %8, metadata !9501, metadata !DIExpression()), !dbg !9503
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9507
  call void @llvm.dbg.value(metadata i8* %9, metadata !9501, metadata !DIExpression()), !dbg !9503
  store i8 %4, i8* %8, align 1, !dbg !9509
  %10 = add i32 %7, -1, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %10, metadata !9500, metadata !DIExpression()), !dbg !9503
  %11 = icmp eq i32 %10, 0, !dbg !9505
  br i1 %11, label %12, label %6, !dbg !9506, !llvm.loop !9511

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9513
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9514 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9518, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i32 %1, metadata !9519, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i32 %2, metadata !9520, metadata !DIExpression()), !dbg !9524
  %4 = icmp eq i32 %2, 0, !dbg !9525
  br i1 %4, label %17, label %5, !dbg !9526

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9527

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9528
  call void @llvm.dbg.value(metadata i8* %9, metadata !9521, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i32 %8, metadata !9520, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i8* %9, metadata !9521, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9528
  %10 = load i8, i8* %9, align 1, !dbg !9529
  %11 = icmp eq i8 %10, %6, !dbg !9532
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9533
  call void @llvm.dbg.value(metadata i8* %12, metadata !9521, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i32 %13, metadata !9520, metadata !DIExpression()), !dbg !9524
  br i1 %15, label %16, label %7, !dbg !9533, !llvm.loop !9534

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9536

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9524
  ret i8* %19, !dbg !9537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9538 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9540, metadata !DIExpression()), !dbg !9541
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9542
  ret void, !dbg !9543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9546, metadata !DIExpression()), !dbg !9547
  ret i32 -1, !dbg !9548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9553, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.value(metadata i32* %1, metadata !9554, metadata !DIExpression()), !dbg !9555
  %3 = ptrtoint i32* %1 to i32, !dbg !9556
  %4 = and i32 %3, -2, !dbg !9556
  %5 = icmp eq i32 %4, 2, !dbg !9556
  br i1 %5, label %6, label %9, !dbg !9556

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9557
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9557
  br label %9, !dbg !9558

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9558
  ret i32 %10, !dbg !9559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9562, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i32* %1, metadata !9563, metadata !DIExpression()), !dbg !9564
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9565
  ret i32 %3, !dbg !9566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9570, metadata !DIExpression()), !dbg !9572
  call void @llvm.dbg.value(metadata i32* %1, metadata !9571, metadata !DIExpression()), !dbg !9572
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9573, !srcloc !9575
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9576
  ret i32 %3, !dbg !9577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9578 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9583, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32* %1, metadata !9584, metadata !DIExpression()), !dbg !9587
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %3, metadata !9585, metadata !DIExpression()), !dbg !9587
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #28, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %4, metadata !9586, metadata !DIExpression()), !dbg !9587
  %5 = icmp ne i32 %3, %4, !dbg !9590
  %6 = sext i1 %5 to i32, !dbg !9591
  ret i32 %6, !dbg !9592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9597, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i32 %1, metadata !9598, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i32 %2, metadata !9599, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i32* %3, metadata !9600, metadata !DIExpression()), !dbg !9601
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9602
  ret i32 %5, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9604 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9606, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i32 %1, metadata !9607, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i32 %2, metadata !9608, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i32* %3, metadata !9609, metadata !DIExpression()), !dbg !9610
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9611, !srcloc !9613
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9614
  ret i32 %5, !dbg !9615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9616 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9618, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %1, metadata !9619, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %2, metadata !9620, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32* %3, metadata !9621, metadata !DIExpression()), !dbg !9626
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9627
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9629
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9629
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9629
  br i1 %11, label %33, label %12, !dbg !9629

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9626
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9626
  call void @llvm.dbg.value(metadata i8* %14, metadata !9624, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %13, metadata !9622, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %1, metadata !9623, metadata !DIExpression()), !dbg !9626
  br label %15, !dbg !9630

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9632
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9626
  call void @llvm.dbg.value(metadata i8* %17, metadata !9624, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %16, metadata !9623, metadata !DIExpression()), !dbg !9626
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9633
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9636
  call void @llvm.dbg.value(metadata i8* %19, metadata !9624, metadata !DIExpression()), !dbg !9626
  %20 = load i8, i8* %17, align 1, !dbg !9637
  %21 = zext i8 %20 to i32, !dbg !9638
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9633
  %23 = icmp eq i32 %22, -1, !dbg !9639
  br i1 %23, label %30, label %24, !dbg !9640

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %25, metadata !9623, metadata !DIExpression()), !dbg !9626
  %26 = icmp eq i32 %25, 0, !dbg !9642
  br i1 %26, label %27, label %15, !dbg !9643, !llvm.loop !9644

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %28, metadata !9622, metadata !DIExpression()), !dbg !9626
  %29 = icmp eq i32 %28, 0, !dbg !9647
  br i1 %29, label %30, label %12, !dbg !9648, !llvm.loop !9649

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9626
  call void @llvm.dbg.value(metadata i32 %31, metadata !9622, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.label(metadata !9625), !dbg !9652
  %32 = sub i32 %2, %31, !dbg !9653
  br label %33, !dbg !9654

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9626
  ret i32 %34, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9662
  %3 = icmp eq i32 %2, -1, !dbg !9664
  br i1 %3, label %8, label %4, !dbg !9665

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9666
  %6 = icmp eq i32 %5, -1, !dbg !9667
  %7 = sext i1 %6 to i32, !dbg !9666
  br label %8, !dbg !9668

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9661
  ret i32 %9, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9672, metadata !DIExpression()), !dbg !9673
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #28, !dbg !9674
  ret void, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9680, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %1, metadata !9681, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9682, metadata !DIExpression()), !dbg !9686
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9687
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9687
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9687
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9683, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %0, metadata !9685, metadata !DIExpression()), !dbg !9686
  %7 = icmp slt i32 %0, %1, !dbg !9688
  br i1 %7, label %8, label %22, !dbg !9691

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9685, metadata !DIExpression()), !dbg !9686
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #28, !dbg !9692
  %11 = icmp eq i32 %10, 0, !dbg !9692
  br i1 %11, label %19, label %12, !dbg !9695

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #28, !dbg !9696
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9698
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9698
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9700
  br i1 %15, label %19, label %16, !dbg !9701

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9702
  %18 = load i8*, i8** %17, align 4, !dbg !9702
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9703
  br label %19, !dbg !9704

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %20, metadata !9685, metadata !DIExpression()), !dbg !9686
  %21 = icmp eq i32 %20, %1, !dbg !9688
  br i1 %21, label %22, label %8, !dbg !9691, !llvm.loop !9706

22:                                               ; preds = %19, %3
  ret void, !dbg !9708
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #7 !dbg !9709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  %2 = shl nuw i32 1, %0, !dbg !9713
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #28, !dbg !9716
  ret i32 %3, !dbg !9717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #18 !dbg !9718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9722, metadata !DIExpression()), !dbg !9723
  %2 = shl nuw i32 1, %0, !dbg !9724
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #28, !dbg !9727
  ret void, !dbg !9728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9732, metadata !DIExpression()), !dbg !9733
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9734
  ret void, !dbg !9735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #7 !dbg !9736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9738, metadata !DIExpression()), !dbg !9739
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9740
  %3 = and i32 %2, %0, !dbg !9740
  %4 = icmp eq i32 %3, %0, !dbg !9741
  %5 = zext i1 %4 to i32, !dbg !9741
  ret i32 %5, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9745, metadata !DIExpression()), !dbg !9746
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #28, !dbg !9747
  ret void, !dbg !9748
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9751, metadata !DIExpression()), !dbg !9752
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #28, !dbg !9753
  ret void, !dbg !9754
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9757, metadata !DIExpression()), !dbg !9758
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #28, !dbg !9759
  ret void, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9763, metadata !DIExpression()), !dbg !9764
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #28, !dbg !9765
  ret void, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9769, metadata !DIExpression()), !dbg !9770
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #28, !dbg !9771
  ret void, !dbg !9772
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #28, !dbg !9777
  ret void, !dbg !9778
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9781, metadata !DIExpression()), !dbg !9782
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #28, !dbg !9783
  ret void, !dbg !9784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #28, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9793, metadata !DIExpression()), !dbg !9794
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #28, !dbg !9795
  ret void, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9799, metadata !DIExpression()), !dbg !9800
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #28, !dbg !9801
  ret void, !dbg !9802
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9805, metadata !DIExpression()), !dbg !9806
  tail call fastcc void @__stm32_exti_connect_irqs() #28, !dbg !9807
  ret i32 0, !dbg !9808
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !900 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !904, metadata !DIExpression()), !dbg !9809
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9810
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9812
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9814
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9816
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9818
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9820
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9822
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9824
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9826
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9828
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9830
  ret void, !dbg !9832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9835, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 0, metadata !9836, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 undef, metadata !9836, metadata !DIExpression()), !dbg !9837
  %2 = lshr i32 6684671, %0, !dbg !9838
  %3 = and i32 %2, 1, !dbg !9838
  %4 = or i32 %3, %0, !dbg !9840
  %5 = icmp eq i32 %4, 0, !dbg !9840
  br i1 %5, label %6, label %7, !dbg !9840

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9841
  unreachable, !dbg !9841

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9846
  %9 = load i32, i32* %8, align 4, !dbg !9846
  call void @llvm.dbg.value(metadata i32 %9, metadata !9836, metadata !DIExpression()), !dbg !9837
  %10 = shl nuw i32 1, %0, !dbg !9847
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #28, !dbg !9848
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !9849
  ret void, !dbg !9850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9853, metadata !DIExpression()), !dbg !9854
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9855
  %3 = or i32 %2, %0, !dbg !9855
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9855
  ret void, !dbg !9856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #18 !dbg !9857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9859, metadata !DIExpression()), !dbg !9860
  %2 = icmp slt i32 %0, 32, !dbg !9861
  br i1 %2, label %3, label %5, !dbg !9863

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9864
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #28, !dbg !9866
  br label %5, !dbg !9867

5:                                                ; preds = %1, %3
  ret void, !dbg !9868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9871, metadata !DIExpression()), !dbg !9872
  %2 = xor i32 %0, -1, !dbg !9873
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9873
  %4 = and i32 %3, %2, !dbg !9873
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9873
  ret void, !dbg !9874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #18 !dbg !9875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9879, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 %1, metadata !9880, metadata !DIExpression()), !dbg !9881
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9882

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9883
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #28, !dbg !9885
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #28, !dbg !9886
  br label %11, !dbg !9887

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9888
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #28, !dbg !9889
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #28, !dbg !9890
  br label %11, !dbg !9891

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9892
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #28, !dbg !9893
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #28, !dbg !9894
  br label %11, !dbg !9895

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9896
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #28, !dbg !9897
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #28, !dbg !9898
  br label %11, !dbg !9899

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9903, metadata !DIExpression()), !dbg !9904
  %2 = xor i32 %0, -1, !dbg !9905
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9905
  %4 = and i32 %3, %2, !dbg !9905
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9905
  ret void, !dbg !9906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9909, metadata !DIExpression()), !dbg !9910
  %2 = xor i32 %0, -1, !dbg !9911
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9911
  %4 = and i32 %3, %2, !dbg !9911
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9911
  ret void, !dbg !9912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9915, metadata !DIExpression()), !dbg !9916
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9917
  %3 = or i32 %2, %0, !dbg !9917
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9917
  ret void, !dbg !9918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9921, metadata !DIExpression()), !dbg !9922
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9923
  %3 = or i32 %2, %0, !dbg !9923
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9923
  ret void, !dbg !9924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #14 !dbg !9925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9929, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9930, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i8* %2, metadata !9931, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9932, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9934, metadata !DIExpression()), !dbg !9935
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9936
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9936
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9938
  br i1 %6, label %7, label %9, !dbg !9939

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9940
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9941
  store i8* %2, i8** %8, align 4, !dbg !9942
  br label %9, !dbg !9943

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9935
  ret i32 %10, !dbg !9944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #12 !dbg !9945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9947, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9948, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9949, metadata !DIExpression()), !dbg !9950
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9951
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9952
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9953
  store i8* null, i8** %3, align 4, !dbg !9954
  ret void, !dbg !9955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9958, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata i8* %1, metadata !9959, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata i8* %1, metadata !9960, metadata !DIExpression()), !dbg !9963
  %3 = bitcast i8* %1 to i32*, !dbg !9964
  %4 = load i32, i32* %3, align 4, !dbg !9964
  %5 = add i32 %4, -169, !dbg !9964
  %6 = icmp ult i32 %5, -121, !dbg !9964
  br i1 %6, label %15, label %7, !dbg !9966

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9967
  %9 = inttoptr i32 %8 to i32*, !dbg !9968
  call void @llvm.dbg.value(metadata i32* %9, metadata !9961, metadata !DIExpression()), !dbg !9963
  %10 = load volatile i32, i32* %9, align 4, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %10, metadata !9962, metadata !DIExpression()), !dbg !9963
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9970
  %12 = bitcast i8* %11 to i32*, !dbg !9970
  %13 = load i32, i32* %12, align 4, !dbg !9970
  %14 = or i32 %13, %10, !dbg !9971
  call void @llvm.dbg.value(metadata i32 %14, metadata !9962, metadata !DIExpression()), !dbg !9963
  store volatile i32 %14, i32* %9, align 4, !dbg !9972
  br label %15, !dbg !9973

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9963
  ret i32 %16, !dbg !9974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9977, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i8* %1, metadata !9978, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i8* %1, metadata !9979, metadata !DIExpression()), !dbg !9982
  %3 = bitcast i8* %1 to i32*, !dbg !9983
  %4 = load i32, i32* %3, align 4, !dbg !9983
  %5 = add i32 %4, -169, !dbg !9983
  %6 = icmp ult i32 %5, -121, !dbg !9983
  br i1 %6, label %16, label %7, !dbg !9985

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9986
  %9 = inttoptr i32 %8 to i32*, !dbg !9987
  call void @llvm.dbg.value(metadata i32* %9, metadata !9980, metadata !DIExpression()), !dbg !9982
  %10 = load volatile i32, i32* %9, align 4, !dbg !9988
  call void @llvm.dbg.value(metadata i32 %10, metadata !9981, metadata !DIExpression()), !dbg !9982
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9989
  %12 = bitcast i8* %11 to i32*, !dbg !9989
  %13 = load i32, i32* %12, align 4, !dbg !9989
  %14 = xor i32 %13, -1, !dbg !9990
  %15 = and i32 %10, %14, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %15, metadata !9981, metadata !DIExpression()), !dbg !9982
  store volatile i32 %15, i32* %9, align 4, !dbg !9992
  br label %16, !dbg !9993

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9982
  ret i32 %17, !dbg !9994
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9995 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9997, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i8* %1, metadata !9998, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32* %2, metadata !9999, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i8* %1, metadata !10000, metadata !DIExpression()), !dbg !10005
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %4, metadata !10001, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32 undef, metadata !10002, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32 undef, metadata !10003, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32 %4, metadata !10004, metadata !DIExpression()), !dbg !10005
  %5 = bitcast i8* %1 to i32*, !dbg !10007
  %6 = load i32, i32* %5, align 4, !dbg !10007
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10008

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #28, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %8, metadata !10002, metadata !DIExpression()), !dbg !10005
  br label %19, !dbg !10010

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #28, !dbg !10012
  call void @llvm.dbg.value(metadata i32 %10, metadata !10003, metadata !DIExpression()), !dbg !10005
  br label %19, !dbg !10013

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10014
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #28, !dbg !10015
  br label %19, !dbg !10016

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10017
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #28, !dbg !10018
  br label %19, !dbg !10019

17:                                               ; preds = %3
  br label %19, !dbg !10020

18:                                               ; preds = %3
  br label %19, !dbg !10021

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10022
  br label %21, !dbg !10023

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10005
  ret i32 %22, !dbg !10023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #18 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10026, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* %1, metadata !10027, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* %2, metadata !10028, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* %1, metadata !10029, metadata !DIExpression()), !dbg !10034
  %4 = bitcast i8* %1 to i32*, !dbg !10035
  %5 = load i32, i32* %4, align 4, !dbg !10035
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #28, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %6, metadata !10033, metadata !DIExpression()), !dbg !10034
  %7 = icmp slt i32 %6, 0, !dbg !10037
  br i1 %7, label %22, label %8, !dbg !10039

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10029, metadata !DIExpression()), !dbg !10034
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10040
  %10 = bitcast i8* %9 to i32*, !dbg !10040
  %11 = load i32, i32* %10, align 4, !dbg !10040
  %12 = lshr i32 %11, 16, !dbg !10040
  %13 = and i32 %12, 7, !dbg !10040
  %14 = lshr i32 %11, 8, !dbg !10041
  %15 = and i32 %14, 31, !dbg !10041
  %16 = shl i32 %13, %15, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %16, metadata !10032, metadata !DIExpression()), !dbg !10034
  %17 = and i32 %11, 255, !dbg !10043
  %18 = or i32 %17, 1073887232, !dbg !10044
  %19 = inttoptr i32 %18 to i32*, !dbg !10045
  call void @llvm.dbg.value(metadata i32* %19, metadata !10030, metadata !DIExpression()), !dbg !10034
  %20 = load volatile i32, i32* %19, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata i32 %20, metadata !10031, metadata !DIExpression()), !dbg !10034
  %21 = or i32 %16, %20, !dbg !10047
  call void @llvm.dbg.value(metadata i32 %21, metadata !10031, metadata !DIExpression()), !dbg !10034
  store volatile i32 %21, i32* %19, align 4, !dbg !10048
  br label %22, !dbg !10049

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10034
  ret i32 %23, !dbg !10050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10055, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.value(metadata i32 0, metadata !10056, metadata !DIExpression()), !dbg !10057
  %2 = add i32 %0, -1, !dbg !10058
  %3 = icmp ult i32 %2, 6, !dbg !10058
  br i1 %3, label %4, label %7, !dbg !10058

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10058
  %6 = load i32, i32* %5, align 4, !dbg !10058
  call void @llvm.dbg.value(metadata i32 %6, metadata !10056, metadata !DIExpression()), !dbg !10057
  br label %7, !dbg !10059

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10057
  ret i32 %8, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10065, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i32 %1, metadata !10066, metadata !DIExpression()), !dbg !10067
  %3 = udiv i32 %0, %1, !dbg !10068
  ret i32 %3, !dbg !10069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10074, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 12, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 336, metadata !10076, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %1, metadata !10077, metadata !DIExpression()), !dbg !10078
  %3 = mul i32 %0, 336, !dbg !10079
  %4 = mul nsw i32 %1, 12, !dbg !10080
  %5 = udiv i32 %3, %4, !dbg !10081
  ret i32 %5, !dbg !10082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10085, metadata !DIExpression()), !dbg !10088
  tail call void @config_enable_default_clocks() #27, !dbg !10089
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10090
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #28, !dbg !10090
  %4 = lshr i32 %3, 4, !dbg !10090
  %5 = and i32 %4, 15, !dbg !10090
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10090
  %7 = load i8, i8* %6, align 1, !dbg !10090
  %8 = zext i8 %7 to i32, !dbg !10090
  %9 = lshr i32 %2, %8, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %9, metadata !10086, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !10087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10088
  %10 = icmp ult i32 %9, 168000000, !dbg !10091
  br i1 %10, label %11, label %13, !dbg !10093

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !10094
  br label %13, !dbg !10096

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #28, !dbg !10097
  tail call fastcc void @set_up_plls() #28, !dbg !10098
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10099
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #28, !dbg !10102
  br label %14, !dbg !10103

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10104
  %16 = icmp eq i32 %15, 8, !dbg !10105
  br i1 %16, label %17, label %14, !dbg !10103, !llvm.loop !10106

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !10108
  br i1 %18, label %19, label %21, !dbg !10110

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !10111
  br label %21, !dbg !10113

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !10114
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #28, !dbg !10115
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #28, !dbg !10116
  ret i32 0, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #7 !dbg !10118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10120
  %2 = and i32 %1, 240, !dbg !10120
  ret i32 %2, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #18 !dbg !10122 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #28, !dbg !10123
  tail call fastcc void @LL_RCC_HSE_Enable() #28, !dbg !10128
  br label %1, !dbg !10129

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !10130
  %3 = icmp eq i32 %2, 1, !dbg !10131
  br i1 %3, label %4, label %1, !dbg !10129, !llvm.loop !10132

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #28, !dbg !10134
  br label %5, !dbg !10137

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #28, !dbg !10138
  %7 = icmp eq i32 %6, 1, !dbg !10139
  br i1 %7, label %8, label %5, !dbg !10137, !llvm.loop !10140

8:                                                ; preds = %5
  ret void, !dbg !10142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10143 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10144
  %2 = icmp eq i32 %1, 8, !dbg !10146
  br i1 %2, label %3, label %4, !dbg !10147

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10148
  tail call fastcc void @stm32_clock_switch_to_hsi() #28, !dbg !10150
  br label %4, !dbg !10151

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #28, !dbg !10152
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10153
  %6 = and i32 %5, -196609, !dbg !10153
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10153
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10154
  %8 = and i32 %7, -251658241, !dbg !10154
  %9 = or i32 %8, 117440512, !dbg !10154
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10154
  tail call void @config_pll_sysclock() #27, !dbg !10155
  tail call fastcc void @LL_RCC_PLL_Enable() #28, !dbg !10156
  br label %10, !dbg !10157

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #28, !dbg !10158
  %12 = icmp eq i32 %11, 1, !dbg !10159
  br i1 %12, label %13, label %10, !dbg !10157, !llvm.loop !10160

13:                                               ; preds = %10
  ret void, !dbg !10162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #18 !dbg !10163 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10165, metadata !DIExpression()), !dbg !10166
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10167
  %2 = and i32 %1, -241, !dbg !10167
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10167
  ret void, !dbg !10168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #18 !dbg !10169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10171, metadata !DIExpression()), !dbg !10172
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10173
  %3 = and i32 %2, -4, !dbg !10173
  %4 = or i32 %3, %0, !dbg !10173
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10173
  ret void, !dbg !10174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #7 !dbg !10175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10176
  %2 = and i32 %1, 12, !dbg !10176
  ret i32 %2, !dbg !10177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #18 !dbg !10178 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10180, metadata !DIExpression()), !dbg !10181
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10182
  %2 = and i32 %1, -7169, !dbg !10182
  %3 = or i32 %2, 5120, !dbg !10182
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10182
  ret void, !dbg !10183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #18 !dbg !10184 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10186, metadata !DIExpression()), !dbg !10187
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10188
  %2 = and i32 %1, -57345, !dbg !10188
  %3 = or i32 %2, 32768, !dbg !10188
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10188
  ret void, !dbg !10189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #18 !dbg !10190 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10191
  %2 = icmp eq i32 %1, 1, !dbg !10193
  br i1 %2, label %7, label %3, !dbg !10194

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10195
  br label %4, !dbg !10197

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10198
  %6 = icmp eq i32 %5, 1, !dbg !10199
  br i1 %6, label %7, label %4, !dbg !10197, !llvm.loop !10200

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #28, !dbg !10202
  br label %8, !dbg !10203

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10204
  %10 = icmp eq i32 %9, 0, !dbg !10205
  br i1 %10, label %11, label %8, !dbg !10203, !llvm.loop !10206

11:                                               ; preds = %8
  ret void, !dbg !10208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #18 !dbg !10209 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10210
  %2 = and i32 %1, -16777217, !dbg !10210
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10210
  ret void, !dbg !10211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #18 !dbg !10212 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10213
  %2 = or i32 %1, 16777216, !dbg !10213
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #7 !dbg !10215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10216
  %2 = lshr i32 %1, 25, !dbg !10217
  %3 = and i32 %2, 1, !dbg !10217
  ret i32 %3, !dbg !10218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #7 !dbg !10219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10220
  %2 = lshr i32 %1, 1, !dbg !10221
  %3 = and i32 %2, 1, !dbg !10221
  ret i32 %3, !dbg !10222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #18 !dbg !10223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10224
  %2 = or i32 %1, 1, !dbg !10224
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10224
  ret void, !dbg !10225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #18 !dbg !10226 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10227
  %2 = and i32 %1, -262145, !dbg !10227
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10227
  ret void, !dbg !10228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #18 !dbg !10229 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10230
  %2 = or i32 %1, 65536, !dbg !10230
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10230
  ret void, !dbg !10231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #7 !dbg !10232 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10233
  %2 = lshr i32 %1, 17, !dbg !10234
  %3 = and i32 %2, 1, !dbg !10234
  ret i32 %3, !dbg !10235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #18 !dbg !10236 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10237
  %2 = or i32 %1, 1, !dbg !10237
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10237
  ret void, !dbg !10238
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #7 !dbg !10239 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10240
  %2 = lshr i32 %1, 1, !dbg !10241
  %3 = and i32 %2, 1, !dbg !10241
  ret i32 %3, !dbg !10242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10243 {
  ret i32 12000000, !dbg !10245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #18 !dbg !10249 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #28, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #18 !dbg !10252 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10256, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 12, metadata !10257, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 336, metadata !10258, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 0, metadata !10259, metadata !DIExpression()), !dbg !10260
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  %2 = and i32 %1, -4227072, !dbg !10261
  %3 = or i32 %2, 4215820, !dbg !10261
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10262
  %5 = and i32 %4, -196609, !dbg !10262
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10262
  ret void, !dbg !10263
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10264 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #28, !dbg !10265
  ret void, !dbg !10266
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10267 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10270, metadata !DIExpression()), !dbg !10272
  %2 = bitcast i32* %1 to i8*, !dbg !10273
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10273
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10271, metadata !DIExpression()), !dbg !10274
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10275
  %4 = or i32 %3, 268435456, !dbg !10275
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10275
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10276
  %6 = and i32 %5, 268435456, !dbg !10276
  store volatile i32 %6, i32* %1, align 4, !dbg !10277
  %7 = load volatile i32, i32* %1, align 4, !dbg !10278
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10279
  ret void, !dbg !10279
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10282, metadata !DIExpression()), !dbg !10283
  %2 = tail call fastcc zeroext i1 @device_is_ready() #28, !dbg !10284
  br i1 %2, label %3, label %4, !dbg !10286

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #28, !dbg !10287
  br label %4, !dbg !10288

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10283
  ret i32 %5, !dbg !10289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10290 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10295, metadata !DIExpression()), !dbg !10296
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10297, !srcloc !10299
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #28, !dbg !10300
  ret i1 %1, !dbg !10301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10302 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10303
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10308, metadata !DIExpression()), !dbg !10309
  %2 = icmp eq i32 %0, 10, !dbg !10310
  br i1 %2, label %3, label %4, !dbg !10312

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #28, !dbg !10313
  br label %4, !dbg !10315

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10316
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #28, !dbg !10317
  ret i32 %0, !dbg !10318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10322, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.value(metadata i8 %0, metadata !10323, metadata !DIExpression()), !dbg !10324
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10325, !srcloc !10327
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #28, !dbg !10328
  ret void, !dbg !10329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10330 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i8 %0, metadata !10333, metadata !DIExpression()), !dbg !10335
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10336
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10334, metadata !DIExpression()), !dbg !10335
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10337
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10337
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !10338
  ret void, !dbg !10339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10342, metadata !DIExpression()), !dbg !10343
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !10344
  ret i1 %1, !dbg !10345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10395, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10396, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10397, metadata !DIExpression()), !dbg !10398
  ret void, !dbg !10399
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10400 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10402, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i8 %1, metadata !10403, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i32 %2, metadata !10404, metadata !DIExpression()), !dbg !10407
  %5 = bitcast i32* %4 to i8*, !dbg !10408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10408
  call void @llvm.dbg.value(metadata i32* %4, metadata !10406, metadata !DIExpression(DW_OP_deref)), !dbg !10407
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %6, metadata !10405, metadata !DIExpression()), !dbg !10407
  %7 = icmp eq i32 %6, 0, !dbg !10410
  br i1 %7, label %8, label %31, !dbg !10412

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10405, metadata !DIExpression()), !dbg !10407
  %9 = and i32 %2, 131072, !dbg !10413
  %10 = icmp eq i32 %9, 0, !dbg !10415
  br i1 %10, label %28, label %11, !dbg !10416

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10417
  %13 = icmp eq i32 %12, 0, !dbg !10420
  br i1 %13, label %18, label %14, !dbg !10421

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10422
  %16 = shl nuw i32 1, %15, !dbg !10422
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #28, !dbg !10424
  br label %25, !dbg !10425

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10426
  %20 = icmp eq i32 %19, 0, !dbg !10428
  %21 = zext i8 %1 to i32, !dbg !10407
  br i1 %20, label %25, label %22, !dbg !10429

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10430
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #28, !dbg !10432
  br label %25, !dbg !10433

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10434
  %27 = load i32, i32* %4, align 4, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %30, metadata !10406, metadata !DIExpression()), !dbg !10407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #28, !dbg !10436
  br label %31, !dbg !10437

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10434
  %30 = load i32, i32* %4, align 4, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %30, metadata !10406, metadata !DIExpression()), !dbg !10407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #28, !dbg !10436
  call void @llvm.dbg.value(metadata i32 0, metadata !10405, metadata !DIExpression()), !dbg !10407
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10438
  ret i32 %6, !dbg !10438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10443, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32* %1, metadata !10444, metadata !DIExpression()), !dbg !10448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10449
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10449
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10449
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10445, metadata !DIExpression()), !dbg !10448
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10450
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10450
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10447, metadata !DIExpression()), !dbg !10448
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #28, !dbg !10451
  store i32 %9, i32* %1, align 4, !dbg !10452
  ret i32 0, !dbg !10453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #18 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10456, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 %1, metadata !10457, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 %2, metadata !10458, metadata !DIExpression()), !dbg !10462
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10463
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10463
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10463
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10459, metadata !DIExpression()), !dbg !10462
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10464
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10464
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10464
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10460, metadata !DIExpression()), !dbg !10462
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #28, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %10, metadata !10461, metadata !DIExpression()), !dbg !10462
  %11 = xor i32 %1, -1, !dbg !10466
  %12 = and i32 %10, %11, !dbg !10467
  %13 = and i32 %2, %1, !dbg !10468
  %14 = or i32 %12, %13, !dbg !10469
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #28, !dbg !10470
  ret i32 0, !dbg !10471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10474, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %1, metadata !10475, metadata !DIExpression()), !dbg !10478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10479
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10479
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10479
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10476, metadata !DIExpression()), !dbg !10478
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10480
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10480
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10480
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10477, metadata !DIExpression()), !dbg !10478
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10481
  store volatile i32 %1, i32* %9, align 4, !dbg !10481
  ret i32 0, !dbg !10482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10485, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10486, metadata !DIExpression()), !dbg !10489
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10490
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10490
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10490
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10487, metadata !DIExpression()), !dbg !10489
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10491
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10491
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10491
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10488, metadata !DIExpression()), !dbg !10489
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #28, !dbg !10492
  ret i32 0, !dbg !10493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10496, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 %1, metadata !10497, metadata !DIExpression()), !dbg !10500
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10501
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10501
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10498, metadata !DIExpression()), !dbg !10500
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10502
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10502
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10502
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10499, metadata !DIExpression()), !dbg !10500
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10503
  %10 = load volatile i32, i32* %9, align 4, !dbg !10503
  %11 = xor i32 %10, %1, !dbg !10503
  store volatile i32 %11, i32* %9, align 4, !dbg !10503
  ret i32 0, !dbg !10504
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i8 %1, metadata !10508, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 %3, metadata !10510, metadata !DIExpression()), !dbg !10517
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10518
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10518
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10518
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10511, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i8* undef, metadata !10512, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10514, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10515, metadata !DIExpression()), !dbg !10517
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10519

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10520
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #28, !dbg !10524
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10525
  %12 = load i32, i32* %11, align 4, !dbg !10525
  %13 = icmp eq i32 %10, %12, !dbg !10526
  br i1 %13, label %14, label %29, !dbg !10527

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10528
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10530
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10531
  br label %29, !dbg !10532

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10533
  %17 = load i8*, i8** %16, align 4, !dbg !10533
  call void @llvm.dbg.value(metadata i8* %17, metadata !10512, metadata !DIExpression()), !dbg !10517
  %18 = zext i8 %1 to i32, !dbg !10534
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10536
  %20 = icmp eq i32 %19, 0, !dbg !10537
  br i1 %20, label %21, label %29, !dbg !10538

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10539
  %23 = load i32, i32* %22, align 4, !dbg !10539
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #28, !dbg !10540
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10541

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10514, metadata !DIExpression()), !dbg !10517
  br label %27, !dbg !10542

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10514, metadata !DIExpression()), !dbg !10517
  br label %27, !dbg !10544

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10514, metadata !DIExpression()), !dbg !10517
  br label %27, !dbg !10545

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10517
  call void @llvm.dbg.value(metadata i32 %28, metadata !10514, metadata !DIExpression()), !dbg !10517
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10546
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10547
  br label %29, !dbg !10547

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10517
  call void @llvm.dbg.value(metadata i32 %30, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.label(metadata !10516), !dbg !10548
  ret i32 %30, !dbg !10549
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10552, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10553, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata i1 %2, metadata !10554, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10556
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10557
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10557
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10557
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10555, metadata !DIExpression()), !dbg !10556
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10558
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #28, !dbg !10559
  ret i32 %8, !dbg !10560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10561 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10567, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10568, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i1 %2, metadata !10569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10570
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10571
  br i1 %4, label %5, label %6, !dbg !10574

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.153, i32 0, i32 0)) #27, !dbg !10575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10575
  unreachable, !dbg !10575

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10577
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10577
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10577
  br i1 %9, label %10, label %11, !dbg !10580

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.155, i32 0, i32 0)) #27, !dbg !10581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10581
  unreachable, !dbg !10581

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #28, !dbg !10583
  br i1 %12, label %18, label %13, !dbg !10585

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10586
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #28, !dbg !10589
  %16 = or i1 %15, %2, !dbg !10590
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10590
  br i1 %2, label %19, label %21, !dbg !10590

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10591

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10592
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #28, !dbg !10595
  br label %21, !dbg !10596

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10570
  ret i32 %22, !dbg !10597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10598 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10602, metadata !DIExpression()), !dbg !10603
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10604
  %3 = icmp eq %struct._snode* %2, null, !dbg !10604
  ret i1 %3, !dbg !10604
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10609, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10610, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10611, metadata !DIExpression()), !dbg !10613
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10614
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10611, metadata !DIExpression()), !dbg !10613
  %4 = icmp eq %struct._snode* %3, null, !dbg !10616
  br i1 %4, label %15, label %5, !dbg !10614

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10611, metadata !DIExpression()), !dbg !10613
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10618
  br i1 %6, label %9, label %11, !dbg !10621

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10611, metadata !DIExpression()), !dbg !10613
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10618
  br i1 %8, label %9, label %11, !dbg !10621, !llvm.loop !10622

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #28, !dbg !10623
  br label %15, !dbg !10623

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10611, metadata !DIExpression()), !dbg !10613
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #28, !dbg !10616
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10612, metadata !DIExpression()), !dbg !10613
  %14 = icmp eq %struct._snode* %13, null, !dbg !10616
  br i1 %14, label %15, label %7, !dbg !10614, !llvm.loop !10622

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10626 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10630, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10631, metadata !DIExpression()), !dbg !10632
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10633
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #28, !dbg !10633
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #28, !dbg !10633
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10634
  %5 = icmp eq %struct._snode* %4, null, !dbg !10634
  br i1 %5, label %6, label %8, !dbg !10633

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10636
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #28, !dbg !10636
  br label %8, !dbg !10636

8:                                                ; preds = %6, %2
  ret void, !dbg !10633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10644
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10644
  ret %struct._snode* %3, !dbg !10645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10650, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10651, metadata !DIExpression()), !dbg !10652
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10653
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10654
  ret void, !dbg !10655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10656 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10658, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10659, metadata !DIExpression()), !dbg !10660
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10661
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10662
  ret void, !dbg !10663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10666, metadata !DIExpression()), !dbg !10667
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10668
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10668
  ret %struct._snode* %3, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10670 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10672, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10673, metadata !DIExpression()), !dbg !10674
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10675
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10676
  ret void, !dbg !10677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !10678 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10682, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10683, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10684, metadata !DIExpression()), !dbg !10685
  %4 = icmp eq %struct._snode* %1, null, !dbg !10686
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #28, !dbg !10688
  br i1 %4, label %6, label %11, !dbg !10689

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #28, !dbg !10690
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10692
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10692
  br i1 %8, label %9, label %15, !dbg !10690

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10694
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #28, !dbg !10694
  br label %15, !dbg !10694

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #28, !dbg !10696
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10698
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10698
  br i1 %13, label %14, label %15, !dbg !10696

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #28, !dbg !10700
  br label %15, !dbg !10700

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #28, !dbg !10689
  ret void, !dbg !10689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !10702 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10706, metadata !DIExpression()), !dbg !10707
  %2 = icmp eq %struct._snode* %0, null, !dbg !10708
  br i1 %2, label %5, label %3, !dbg !10708

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #28, !dbg !10708
  br label %5, !dbg !10708

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10708
  ret %struct._snode* %6, !dbg !10708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10709 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10711, metadata !DIExpression()), !dbg !10712
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #28, !dbg !10713
  ret %struct._snode* %2, !dbg !10713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10714 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10716, metadata !DIExpression()), !dbg !10717
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10718
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10718
  ret %struct._snode* %3, !dbg !10719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10722, metadata !DIExpression()), !dbg !10725
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #28, !dbg !10726, !range !10727
  call void @llvm.dbg.value(metadata i32 %2, metadata !10723, metadata !DIExpression()), !dbg !10725
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #28, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %3, metadata !10724, metadata !DIExpression()), !dbg !10725
  ret i32 %3, !dbg !10729
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10732, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i8* %1, metadata !10733, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i8* %1, metadata !10734, metadata !DIExpression()), !dbg !10735
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10736
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10736
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10737
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10737
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10737
  %8 = shl nuw i32 1, %0, !dbg !10738
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #28, !dbg !10739
  ret void, !dbg !10740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10741 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10745, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i32 %1, metadata !10746, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10747, metadata !DIExpression()), !dbg !10751
  %4 = bitcast i64* %3 to i8*, !dbg !10752
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10752
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10749, metadata !DIExpression()), !dbg !10751
  store i64 70368744177732, i64* %3, align 8, !dbg !10753
  call void @llvm.dbg.value(metadata i64* %3, metadata !10749, metadata !DIExpression(DW_OP_deref)), !dbg !10751
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #28, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %5, metadata !10750, metadata !DIExpression()), !dbg !10751
  %6 = icmp eq i32 %5, 0, !dbg !10755
  br i1 %6, label %7, label %8, !dbg !10757

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #28, !dbg !10758
  br label %8, !dbg !10759

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10760
  ret void, !dbg !10760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10761 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10763, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata i8* %0, metadata !10764, metadata !DIExpression()), !dbg !10766
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10767
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10765, metadata !DIExpression()), !dbg !10766
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10768
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10768
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !10769
  ret i32 %5, !dbg !10770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10773, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata i32 %1, metadata !10774, metadata !DIExpression()), !dbg !10776
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #28, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %3, metadata !10775, metadata !DIExpression()), !dbg !10776
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #28, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = sdiv i32 %0, 4, !dbg !10786
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10787
  %6 = add nsw i32 %5, 16, !dbg !10788
  %7 = shl i32 15, %6, !dbg !10789
  %8 = or i32 %7, %2, !dbg !10790
  ret i32 %8, !dbg !10791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10796, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.value(metadata i32 %1, metadata !10797, metadata !DIExpression()), !dbg !10798
  %3 = and i32 %1, 255, !dbg !10799
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10799
  %5 = load volatile i32, i32* %4, align 4, !dbg !10799
  %6 = lshr i32 %1, 16, !dbg !10799
  %7 = xor i32 %6, -1, !dbg !10799
  %8 = and i32 %5, %7, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %6, metadata !10800, metadata !DIExpression()) #26, !dbg !10804
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10806, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %9, metadata !10803, metadata !DIExpression()) #26, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %9, metadata !10808, metadata !DIExpression()) #26, !dbg !10813
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10815, !range !5407
  %11 = shl i32 %0, %10, !dbg !10799
  %12 = or i32 %11, %8, !dbg !10799
  store volatile i32 %12, i32* %4, align 4, !dbg !10799
  ret void, !dbg !10816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10817 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10821, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10822, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata i32 %2, metadata !10823, metadata !DIExpression()), !dbg !10826
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10827
  %5 = icmp eq %struct._snode* %4, null, !dbg !10827
  br i1 %5, label %24, label %6, !dbg !10827

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #28, !dbg !10829
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10825, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10824, metadata !DIExpression()), !dbg !10826
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10830
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10830
  %12 = load i32, i32* %11, align 4, !dbg !10830
  %13 = and i32 %12, %2, !dbg !10834
  %14 = icmp eq i32 %13, 0, !dbg !10834
  br i1 %14, label %22, label %15, !dbg !10835

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10836
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10836
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10836
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10836
  br i1 %19, label %20, label %21, !dbg !10840

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.155, i32 0, i32 0)) #27, !dbg !10841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10841
  unreachable, !dbg !10841

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !10843
  br label %22, !dbg !10844

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10824, metadata !DIExpression()), !dbg !10826
  %23 = icmp eq %struct._snode* %8, null, !dbg !10845
  br i1 %23, label %24, label %6, !dbg !10845

24:                                               ; preds = %22, %3
  ret void, !dbg !10846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10849, metadata !DIExpression()), !dbg !10850
  %2 = and i32 %0, 255, !dbg !10851
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10851
  %4 = load volatile i32, i32* %3, align 4, !dbg !10851
  %5 = lshr i32 %0, 16, !dbg !10851
  %6 = and i32 %4, %5, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %5, metadata !10800, metadata !DIExpression()) #26, !dbg !10852
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10854, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %7, metadata !10803, metadata !DIExpression()) #26, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %7, metadata !10808, metadata !DIExpression()) #26, !dbg !10855
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10857, !range !5407
  %9 = lshr i32 %6, %8, !dbg !10858
  ret i32 %9, !dbg !10859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10860 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10865, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()), !dbg !10867
  %3 = shl i32 %1, 16, !dbg !10868
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10868
  store volatile i32 %3, i32* %4, align 4, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10874, metadata !DIExpression()), !dbg !10875
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10876
  %3 = load volatile i32, i32* %2, align 4, !dbg !10876
  ret i32 %3, !dbg !10877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %1, metadata !10881, metadata !DIExpression()), !dbg !10882
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10883
  store volatile i32 %1, i32* %3, align 4, !dbg !10883
  ret void, !dbg !10884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10885 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10887, metadata !DIExpression()), !dbg !10888
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10889
  %3 = load volatile i32, i32* %2, align 4, !dbg !10889
  ret i32 %3, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #14 !dbg !10891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10895, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.value(metadata i32* %1, metadata !10896, metadata !DIExpression()), !dbg !10897
  %3 = and i32 %0, 131072, !dbg !10898
  %4 = icmp eq i32 %3, 0, !dbg !10900
  br i1 %4, label %22, label %5, !dbg !10901

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10902
  %6 = and i32 %0, 2, !dbg !10904
  %7 = icmp eq i32 %6, 0, !dbg !10906
  br i1 %7, label %11, label %8, !dbg !10907

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10908
  %10 = icmp eq i32 %9, 0, !dbg !10908
  br i1 %10, label %33, label %11, !dbg !10911

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10912
  store i32 %12, i32* %1, align 4, !dbg !10912
  %13 = and i32 %0, 16, !dbg !10913
  %14 = icmp eq i32 %13, 0, !dbg !10915
  br i1 %14, label %17, label %15, !dbg !10916

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10917
  br label %31, !dbg !10919

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10920
  %19 = icmp eq i32 %18, 0, !dbg !10922
  br i1 %19, label %33, label %20, !dbg !10923

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10924
  br label %31, !dbg !10926

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10927
  %24 = icmp eq i32 %23, 0, !dbg !10929
  br i1 %24, label %31, label %25, !dbg !10930

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10931
  %27 = icmp eq i32 %26, 0, !dbg !10934
  br i1 %27, label %28, label %31, !dbg !10935

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10936
  br label %33, !dbg !10937

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10897
  ret i32 %34, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10942, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %1, metadata !10943, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10944, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %3, metadata !10945, metadata !DIExpression()), !dbg !10953
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10954
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10954
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10954
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10946, metadata !DIExpression()), !dbg !10953
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10955
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10955
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10947, metadata !DIExpression()), !dbg !10953
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #28, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %11, metadata !10948, metadata !DIExpression()), !dbg !10953
  %12 = and i32 %2, 48, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %12, metadata !10949, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10950, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10951, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10952, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10953
  %13 = lshr i32 %2, 6, !dbg !10958
  %14 = and i32 %13, 1, !dbg !10958
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #28, !dbg !10959
  %15 = lshr i32 %2, 7, !dbg !10960
  %16 = and i32 %15, 3, !dbg !10960
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #28, !dbg !10961
  %17 = lshr i32 %2, 9, !dbg !10962
  %18 = and i32 %17, 3, !dbg !10962
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #28, !dbg !10963
  %19 = icmp eq i32 %12, 32, !dbg !10964
  br i1 %19, label %20, label %24, !dbg !10966

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10967
  br i1 %21, label %22, label %23, !dbg !10970

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10971
  br label %24, !dbg !10973

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10974
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10976
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #28, !dbg !10977
  ret void, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10981, metadata !DIExpression()), !dbg !10983
  %2 = shl nuw i32 1, %0, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %2, metadata !10982, metadata !DIExpression()), !dbg !10983
  ret i32 %2, !dbg !10985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10990, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata i32 %1, metadata !10991, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata i32 %2, metadata !10992, metadata !DIExpression()), !dbg !10993
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10994
  %5 = load volatile i32, i32* %4, align 4, !dbg !10994
  %6 = xor i32 %1, -1, !dbg !10994
  %7 = and i32 %5, %6, !dbg !10994
  %8 = mul i32 %2, %1, !dbg !10994
  %9 = or i32 %7, %8, !dbg !10994
  store volatile i32 %9, i32* %4, align 4, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10996 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10998, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.value(metadata i32 %1, metadata !10999, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.value(metadata i32 %2, metadata !11000, metadata !DIExpression()), !dbg !11001
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11002
  %5 = load volatile i32, i32* %4, align 4, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11003
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11005, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11006
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11008, !range !5407
  %8 = shl nuw nsw i32 %7, 1, !dbg !11002
  %9 = shl i32 3, %8, !dbg !11002
  %10 = xor i32 %9, -1, !dbg !11002
  %11 = and i32 %5, %10, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11011
  %12 = shl i32 %2, %8, !dbg !11002
  %13 = or i32 %11, %12, !dbg !11002
  store volatile i32 %13, i32* %4, align 4, !dbg !11002
  ret void, !dbg !11013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11016, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11017, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11018, metadata !DIExpression()), !dbg !11019
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11020
  %5 = load volatile i32, i32* %4, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11021
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11023, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11021
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11024
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11026, !range !5407
  %8 = shl nuw nsw i32 %7, 1, !dbg !11020
  %9 = shl i32 3, %8, !dbg !11020
  %10 = xor i32 %9, -1, !dbg !11020
  %11 = and i32 %5, %10, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11029
  %12 = shl i32 %2, %8, !dbg !11020
  %13 = or i32 %11, %12, !dbg !11020
  store volatile i32 %13, i32* %4, align 4, !dbg !11020
  ret void, !dbg !11031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11032 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11034, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %1, metadata !11035, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11036, metadata !DIExpression()), !dbg !11037
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11038
  %5 = load volatile i32, i32* %4, align 4, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11039
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11041, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11042
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11044, !range !5407
  %8 = shl nuw nsw i32 %7, 2, !dbg !11038
  %9 = shl i32 15, %8, !dbg !11038
  %10 = xor i32 %9, -1, !dbg !11038
  %11 = and i32 %5, %10, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11047
  %12 = shl i32 %2, %8, !dbg !11038
  %13 = or i32 %11, %12, !dbg !11038
  store volatile i32 %13, i32* %4, align 4, !dbg !11038
  ret void, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11052, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %1, metadata !11053, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %2, metadata !11054, metadata !DIExpression()), !dbg !11055
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11056
  %5 = load volatile i32, i32* %4, align 4, !dbg !11056
  %6 = lshr i32 %1, 8, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %6, metadata !10800, metadata !DIExpression()) #26, !dbg !11057
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11059, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %7, metadata !10803, metadata !DIExpression()) #26, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %7, metadata !10808, metadata !DIExpression()) #26, !dbg !11060
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11062, !range !5407
  %9 = shl nuw nsw i32 %8, 2, !dbg !11056
  %10 = shl i32 15, %9, !dbg !11056
  %11 = xor i32 %10, -1, !dbg !11056
  %12 = and i32 %5, %11, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %6, metadata !10800, metadata !DIExpression()) #26, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %7, metadata !10803, metadata !DIExpression()) #26, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %7, metadata !10808, metadata !DIExpression()) #26, !dbg !11065
  %13 = shl i32 %2, %9, !dbg !11056
  %14 = or i32 %12, %13, !dbg !11056
  store volatile i32 %14, i32* %4, align 4, !dbg !11056
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11070, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %1, metadata !11071, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %2, metadata !11072, metadata !DIExpression()), !dbg !11073
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11074
  %5 = load volatile i32, i32* %4, align 4, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11075
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11077, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11078
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11080, !range !5407
  %8 = shl nuw nsw i32 %7, 1, !dbg !11074
  %9 = shl i32 3, %8, !dbg !11074
  %10 = xor i32 %9, -1, !dbg !11074
  %11 = and i32 %5, %10, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11083
  %12 = shl i32 %2, %8, !dbg !11074
  %13 = or i32 %11, %12, !dbg !11074
  store volatile i32 %13, i32* %4, align 4, !dbg !11074
  ret void, !dbg !11085
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11088, metadata !DIExpression()), !dbg !11091
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11092
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11092
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11092
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11089, metadata !DIExpression()), !dbg !11091
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11093
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11094
  %6 = tail call fastcc zeroext i1 @device_is_ready.166() #28, !dbg !11095
  br i1 %6, label %7, label %11, !dbg !11097

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #28, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %8, metadata !11090, metadata !DIExpression()), !dbg !11091
  %9 = icmp slt i32 %8, 0, !dbg !11099
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11101
  br label %11, !dbg !11101

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11091
  ret i32 %12, !dbg !11102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.166() unnamed_addr #1 !dbg !11103 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11107, metadata !DIExpression()), !dbg !11108
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11109, !srcloc !11111
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.167() #28, !dbg !11112
  ret i1 %1, !dbg !11113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11118, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i8 1, metadata !11119, metadata !DIExpression()), !dbg !11123
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11124
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11124
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11124
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11120, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 0, metadata !11121, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11122, metadata !DIExpression()), !dbg !11123
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11125
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11128
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #28, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %7, metadata !11121, metadata !DIExpression()), !dbg !11123
  ret i32 %7, !dbg !11130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.167() unnamed_addr #1 !dbg !11131 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11133, metadata !DIExpression()), !dbg !11134
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !11135
  ret i1 %1, !dbg !11136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11141, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %1, metadata !11142, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %2, metadata !11143, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %3, metadata !11144, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 0, metadata !11145, metadata !DIExpression()), !dbg !11149
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #28, !dbg !11150
  %5 = icmp eq i32 %3, 17, !dbg !11151
  br i1 %5, label %6, label %14, !dbg !11152

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %7, metadata !11146, metadata !DIExpression()), !dbg !11154
  %8 = icmp eq i32 %7, 0, !dbg !11155
  %9 = shl nuw i32 1, %1, !dbg !11157
  br i1 %8, label %12, label %10, !dbg !11158

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11159
  br label %14, !dbg !11161

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11162
  br label %14, !dbg !11165

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11166
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11169, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i8* %1, metadata !11170, metadata !DIExpression()), !dbg !11173
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11174
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11174
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11174
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11171, metadata !DIExpression()), !dbg !11173
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11175
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11175
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #28, !dbg !11177
  %9 = icmp eq i32 %8, 0, !dbg !11177
  br i1 %9, label %12, label %10, !dbg !11178

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11179
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #28, !dbg !11181
  br label %12, !dbg !11182

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11183
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11185
  %15 = icmp eq i32 %14, 0, !dbg !11185
  br i1 %15, label %19, label %16, !dbg !11186

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11187
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #28, !dbg !11188
  store i8 %18, i8* %1, align 1, !dbg !11189
  br label %19, !dbg !11190

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11173
  ret i32 %20, !dbg !11191
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11194, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i8 %1, metadata !11195, metadata !DIExpression()), !dbg !11198
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11199
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11199
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11199
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11196, metadata !DIExpression()), !dbg !11198
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11200

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11201
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #28, !dbg !11204
  %10 = icmp eq i32 %9, 0, !dbg !11204
  br i1 %10, label %18, label %11, !dbg !11205

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11206, !srcloc !11213
  call void @llvm.dbg.value(metadata i32 undef, metadata !11209, metadata !DIExpression()) #26, !dbg !11214
  call void @llvm.dbg.value(metadata i32 undef, metadata !11210, metadata !DIExpression()) #26, !dbg !11214
  call void @llvm.dbg.value(metadata i32 undef, metadata !11197, metadata !DIExpression()), !dbg !11198
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11215
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11217
  %15 = icmp eq i32 %14, 0, !dbg !11217
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11206
  br i1 %15, label %17, label %19, !dbg !11218

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11209, metadata !DIExpression()) #26, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %16, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i32 undef, metadata !11219, metadata !DIExpression()) #26, !dbg !11222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11224, !srcloc !11225
  br label %18, !dbg !11226

18:                                               ; preds = %17, %7
  br label %7, !dbg !11201, !llvm.loop !11227

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11206
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11229
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #28, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %20, metadata !11219, metadata !DIExpression()) #26, !dbg !11231
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11233, !srcloc !11225
  ret void, !dbg !11234
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11237, metadata !DIExpression()), !dbg !11240
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11241
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11241
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11241
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11238, metadata !DIExpression()), !dbg !11240
  call void @llvm.dbg.value(metadata i32 0, metadata !11239, metadata !DIExpression()), !dbg !11240
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11242
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11242
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #28, !dbg !11244
  %8 = icmp ne i32 %7, 0, !dbg !11244
  %9 = zext i1 %8 to i32, !dbg !11245
  call void @llvm.dbg.value(metadata i32 %9, metadata !11239, metadata !DIExpression()), !dbg !11240
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11246
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #28, !dbg !11248
  %12 = icmp eq i32 %11, 0, !dbg !11248
  %13 = or i32 %9, 2, !dbg !11249
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11249
  call void @llvm.dbg.value(metadata i32 %14, metadata !11239, metadata !DIExpression()), !dbg !11240
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11250
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #28, !dbg !11252
  %17 = icmp eq i32 %16, 0, !dbg !11252
  %18 = or i32 %14, 4, !dbg !11253
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %19, metadata !11239, metadata !DIExpression()), !dbg !11240
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11254
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #28, !dbg !11256
  %22 = icmp eq i32 %21, 0, !dbg !11256
  %23 = or i32 %19, 8, !dbg !11257
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11257
  call void @llvm.dbg.value(metadata i32 %24, metadata !11239, metadata !DIExpression()), !dbg !11240
  %25 = and i32 %24, 8, !dbg !11258
  %26 = icmp eq i32 %25, 0, !dbg !11258
  br i1 %26, label %29, label %27, !dbg !11260

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11261
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #28, !dbg !11263
  br label %29, !dbg !11264

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11265
  %31 = icmp eq i32 %30, 0, !dbg !11265
  br i1 %31, label %34, label %32, !dbg !11267

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11268
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #28, !dbg !11270
  br label %34, !dbg !11271

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11272
  %36 = icmp eq i32 %35, 0, !dbg !11272
  br i1 %36, label %39, label %37, !dbg !11274

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11275
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #28, !dbg !11277
  br label %39, !dbg !11278

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11279
  %41 = icmp eq i32 %40, 0, !dbg !11279
  br i1 %41, label %44, label %42, !dbg !11281

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11282
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #28, !dbg !11284
  br label %44, !dbg !11285

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11286
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #28, !dbg !11287
  ret i32 %24, !dbg !11288
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11291, metadata !DIExpression()), !dbg !11300
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11292, metadata !DIExpression()), !dbg !11300
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11301
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11301
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11301
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11293, metadata !DIExpression()), !dbg !11300
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11302
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11302
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11302
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11294, metadata !DIExpression()), !dbg !11300
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11303
  %10 = load i8, i8* %9, align 4, !dbg !11303
  %11 = zext i8 %10 to i32, !dbg !11304
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #28, !dbg !11305
  call void @llvm.dbg.value(metadata i32 %12, metadata !11296, metadata !DIExpression()), !dbg !11300
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11306
  %14 = load i8, i8* %13, align 1, !dbg !11306
  %15 = zext i8 %14 to i32, !dbg !11307
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #28, !dbg !11308
  call void @llvm.dbg.value(metadata i32 %16, metadata !11297, metadata !DIExpression()), !dbg !11300
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11309
  %18 = load i8, i8* %17, align 2, !dbg !11309
  %19 = zext i8 %18 to i32, !dbg !11310
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #28, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %20, metadata !11298, metadata !DIExpression()), !dbg !11300
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11312
  %22 = load i8, i8* %21, align 1, !dbg !11312
  %23 = zext i8 %22 to i32, !dbg !11313
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #28, !dbg !11314
  call void @llvm.dbg.value(metadata i32 %24, metadata !11299, metadata !DIExpression()), !dbg !11300
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11315

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11317
  br i1 %26, label %69, label %27, !dbg !11319

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11320

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11321
  br i1 %29, label %65, label %30, !dbg !11321

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11323
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11300
  br i1 %31, label %38, label %34, !dbg !11325

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11326
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !11326

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11329
  br i1 %37, label %38, label %69, !dbg !11330

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11331
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #28, !dbg !11332
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #28, !dbg !11333
  %41 = icmp eq i32 %12, %40, !dbg !11335
  br i1 %41, label %43, label %42, !dbg !11336

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #28, !dbg !11337
  br label %43, !dbg !11339

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #28, !dbg !11340
  %45 = icmp eq i32 %16, %44, !dbg !11342
  br i1 %45, label %47, label %46, !dbg !11343

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #28, !dbg !11344
  br label %47, !dbg !11346

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #28, !dbg !11347
  %49 = icmp eq i32 %20, %48, !dbg !11349
  br i1 %49, label %51, label %50, !dbg !11350

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #28, !dbg !11351
  br label %51, !dbg !11353

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #28, !dbg !11354
  %53 = icmp eq i32 %24, %52, !dbg !11356
  br i1 %53, label %55, label %54, !dbg !11357

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #28, !dbg !11358
  br label %55, !dbg !11360

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11361
  %57 = load i32, i32* %56, align 4, !dbg !11361
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11363
  %59 = load i32, i32* %58, align 4, !dbg !11363
  %60 = icmp eq i32 %57, %59, !dbg !11364
  br i1 %60, label %63, label %61, !dbg !11365

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #28, !dbg !11366
  %62 = load i32, i32* %56, align 4, !dbg !11368
  store i32 %62, i32* %58, align 4, !dbg !11369
  br label %63, !dbg !11370

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11371
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #28, !dbg !11372
  br label %69, !dbg !11373

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11321
  %67 = and i8 %66, 1, !dbg !11321
  %68 = icmp eq i8 %67, 0, !dbg !11321
  br i1 %68, label %30, label %69, !dbg !11321

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11300
  ret i32 %70, !dbg !11374
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11377, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11378, metadata !DIExpression()), !dbg !11380
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11381
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11381
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11381
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11379, metadata !DIExpression()), !dbg !11380
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11382
  %7 = load i32, i32* %6, align 4, !dbg !11382
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11383
  store i32 %7, i32* %8, align 4, !dbg !11384
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11385, !range !11386
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #28, !dbg !11387
  %11 = trunc i32 %10 to i8, !dbg !11387
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11388
  store i8 %11, i8* %12, align 4, !dbg !11389
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #28, !dbg !11390, !range !11391
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #28, !dbg !11392
  %15 = trunc i32 %14 to i8, !dbg !11392
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11393
  store i8 %15, i8* %16, align 1, !dbg !11394
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #28, !dbg !11395
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11396, !range !11386
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #28, !dbg !11397
  %20 = trunc i32 %19 to i8, !dbg !11397
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11398
  store i8 %20, i8* %21, align 2, !dbg !11399
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #28, !dbg !11400, !range !11401
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #28, !dbg !11402
  %24 = trunc i32 %23 to i8, !dbg !11402
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11403
  store i8 %24, i8* %25, align 1, !dbg !11404
  ret i32 0, !dbg !11405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11410, metadata !DIExpression()), !dbg !11412
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11413
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11413
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11413
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11411, metadata !DIExpression()), !dbg !11412
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11414
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11414
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #28, !dbg !11415
  ret i32 %7, !dbg !11416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11421, metadata !DIExpression()), !dbg !11422
  %2 = icmp eq i32 %0, 1024, !dbg !11423
  %3 = select i1 %2, i32 2, i32 0, !dbg !11423
  %4 = icmp eq i32 %0, 1536, !dbg !11423
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11423
  ret i32 %5, !dbg !11424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11427, metadata !DIExpression()), !dbg !11429
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11430
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11430
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11430
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11428, metadata !DIExpression()), !dbg !11429
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11431
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11431
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #28, !dbg !11432
  ret i32 %7, !dbg !11433
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !11434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11440
  %3 = icmp ult i32 %2, 4, !dbg !11440
  br i1 %3, label %4, label %7, !dbg !11440

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11440
  %6 = load i32, i32* %5, align 4, !dbg !11440
  br label %7, !dbg !11440

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11441
  ret i32 %8, !dbg !11443
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11446, metadata !DIExpression()), !dbg !11448
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11449
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11449
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11449
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11447, metadata !DIExpression()), !dbg !11448
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11450
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11450
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #28, !dbg !11451
  ret i32 %7, !dbg !11452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11457, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %1, metadata !11458, metadata !DIExpression()), !dbg !11459
  %3 = icmp eq i32 %0, 4096, !dbg !11460
  %4 = icmp eq i32 %1, 0, !dbg !11460
  %5 = select i1 %4, i32 4, i32 3, !dbg !11460
  %6 = select i1 %4, i32 3, i32 2, !dbg !11460
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11460
  ret i32 %7, !dbg !11461
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11464, metadata !DIExpression()), !dbg !11466
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11467
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11467
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11467
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11465, metadata !DIExpression()), !dbg !11466
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11468
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11468
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #28, !dbg !11469
  ret i32 %7, !dbg !11470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11476
  %2 = icmp eq i32 %0, 768, !dbg !11477
  %3 = zext i1 %2 to i32, !dbg !11476
  ret i32 %3, !dbg !11479
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11485, metadata !DIExpression()), !dbg !11486
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11487
  %3 = load volatile i32, i32* %2, align 4, !dbg !11487
  %4 = and i32 %3, 768, !dbg !11487
  ret i32 %4, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11493
  %3 = load volatile i32, i32* %2, align 4, !dbg !11493
  %4 = and i32 %3, 4096, !dbg !11493
  ret i32 %4, !dbg !11494
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11499
  %3 = load volatile i32, i32* %2, align 4, !dbg !11499
  %4 = and i32 %3, 12288, !dbg !11499
  ret i32 %4, !dbg !11500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11501 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11503, metadata !DIExpression()), !dbg !11504
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11505
  %3 = load volatile i32, i32* %2, align 4, !dbg !11505
  %4 = and i32 %3, 1536, !dbg !11505
  ret i32 %4, !dbg !11506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11511, metadata !DIExpression()), !dbg !11512
  %2 = icmp eq i32 %0, 2, !dbg !11513
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11513
  %4 = icmp eq i32 %0, 1, !dbg !11513
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11513
  ret i32 %5, !dbg !11514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11519, metadata !DIExpression()), !dbg !11520
  %2 = icmp ult i32 %0, 3, !dbg !11521
  br i1 %2, label %3, label %6, !dbg !11521

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11521
  %5 = load i32, i32* %4, align 4, !dbg !11521
  br label %6, !dbg !11521

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11522
  ret i32 %7, !dbg !11524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11529, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 %1, metadata !11530, metadata !DIExpression()), !dbg !11531
  %3 = icmp eq i32 %0, 4, !dbg !11532
  %4 = icmp eq i32 %1, 0, !dbg !11532
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11532
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11532
  ret i32 %6, !dbg !11533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11538, metadata !DIExpression()), !dbg !11539
  %2 = icmp eq i32 %0, 1, !dbg !11540
  %3 = select i1 %2, i32 768, i32 0, !dbg !11539
  ret i32 %3, !dbg !11542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11549
  %3 = load volatile i32, i32* %2, align 4, !dbg !11549
  %4 = and i32 %3, -8193, !dbg !11549
  store volatile i32 %4, i32* %2, align 4, !dbg !11549
  ret void, !dbg !11550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11555, metadata !DIExpression()), !dbg !11558
  call void @llvm.dbg.value(metadata i32 %1, metadata !11556, metadata !DIExpression()), !dbg !11558
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11559
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11559
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11559
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11557, metadata !DIExpression()), !dbg !11558
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11560
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11560
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11561
  ret void, !dbg !11562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11565, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.value(metadata i32 %1, metadata !11566, metadata !DIExpression()), !dbg !11568
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11569
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11569
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11569
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11567, metadata !DIExpression()), !dbg !11568
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11570
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11570
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11571
  ret void, !dbg !11572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11575, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.value(metadata i32 %1, metadata !11576, metadata !DIExpression()), !dbg !11578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11579
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11579
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11579
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11577, metadata !DIExpression()), !dbg !11578
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11580
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11580
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11581
  ret void, !dbg !11582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11585, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 %1, metadata !11586, metadata !DIExpression()), !dbg !11588
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11589
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11589
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11589
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11587, metadata !DIExpression()), !dbg !11588
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11590
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11590
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11591
  ret void, !dbg !11592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11593 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11595, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i32 %1, metadata !11596, metadata !DIExpression()), !dbg !11600
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11601
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11601
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11601
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11597, metadata !DIExpression()), !dbg !11600
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11602
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11602
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11602
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11598, metadata !DIExpression()), !dbg !11600
  %10 = bitcast i32* %3 to i8*, !dbg !11603
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11603
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11604
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11604
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11608
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11608
  %15 = load i8*, i8** %14, align 4, !dbg !11608
  call void @llvm.dbg.value(metadata i32* %3, metadata !11599, metadata !DIExpression(DW_OP_deref)), !dbg !11600
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #28, !dbg !11609
  %17 = icmp slt i32 %16, 0, !dbg !11610
  br i1 %17, label %18, label %21, !dbg !11611

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.172(i32 noundef 1) #28, !dbg !11612
  %20 = zext i8 %19 to i32, !dbg !11612
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.173, i32 0, i32 0), i32 noundef %20) #27, !dbg !11612
  br label %31, !dbg !11618

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11619
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11619
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #28, !dbg !11620
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11621
  %25 = load i32, i32* %3, align 4, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %25, metadata !11599, metadata !DIExpression()), !dbg !11600
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #28, !dbg !11623
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11624
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11624
  %28 = load volatile i32, i32* %27, align 4, !dbg !11624
  %29 = icmp ugt i32 %28, 16, !dbg !11624
  br i1 %29, label %31, label %30, !dbg !11627

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.176, i32 0, i32 0), i32 noundef 190) #27, !dbg !11628
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.177, i32 0, i32 0)) #27, !dbg !11628
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.176, i32 0, i32 0), i32 noundef 190) #27, !dbg !11628
  unreachable, !dbg !11628

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11630
  ret void, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11631 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11633, metadata !DIExpression()), !dbg !11634
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11635
  %3 = load volatile i32, i32* %2, align 4, !dbg !11635
  %4 = or i32 %3, 8192, !dbg !11635
  store volatile i32 %4, i32* %2, align 4, !dbg !11635
  ret void, !dbg !11636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11639, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.value(metadata i8* %1, metadata !11640, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.value(metadata i32* %2, metadata !11641, metadata !DIExpression()), !dbg !11643
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11644
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11644
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11642, metadata !DIExpression()), !dbg !11643
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11645
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11645
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11647
  br i1 %9, label %12, label %10, !dbg !11648

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11649
  br label %12, !dbg !11650

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11643
  ret i32 %13, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.172(i32 noundef %0) unnamed_addr #5 !dbg !11652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11654, metadata !DIExpression()), !dbg !11655
  %2 = icmp eq i32 %0, 2, !dbg !11656
  %3 = select i1 %2, i8 87, i8 63, !dbg !11656
  %4 = icmp eq i32 %0, 1, !dbg !11656
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11656
  ret i8 %5, !dbg !11657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11658 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11662, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.value(metadata i32 0, metadata !11663, metadata !DIExpression()), !dbg !11664
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11665
  %3 = load volatile i32, i32* %2, align 4, !dbg !11665
  %4 = and i32 %3, -32769, !dbg !11665
  store volatile i32 %4, i32* %2, align 4, !dbg !11665
  ret void, !dbg !11666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11671, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 %1, metadata !11672, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 0, metadata !11673, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 %2, metadata !11674, metadata !DIExpression()), !dbg !11675
  %4 = zext i32 %1 to i64, !dbg !11676
  %5 = mul nuw nsw i64 %4, 25, !dbg !11676
  %6 = zext i32 %2 to i64, !dbg !11676
  %7 = shl nuw nsw i64 %6, 2, !dbg !11676
  %8 = udiv i64 %5, %7, !dbg !11676
  %9 = trunc i64 %8 to i32, !dbg !11676
  %10 = udiv i32 %9, 100, !dbg !11676
  %11 = shl nuw nsw i32 %10, 4, !dbg !11676
  %12 = mul i32 %10, -100, !dbg !11676
  %13 = add i32 %12, %9, !dbg !11676
  %14 = shl i32 %13, 4, !dbg !11676
  %15 = add i32 %14, 50, !dbg !11676
  %16 = udiv i32 %15, 100, !dbg !11676
  %17 = and i32 %16, 240, !dbg !11676
  %18 = add nuw nsw i32 %17, %11, !dbg !11676
  %19 = and i32 %16, 15, !dbg !11676
  %20 = and i32 %18, 65520, !dbg !11679
  %21 = or i32 %20, %19, !dbg !11679
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11680
  store volatile i32 %21, i32* %22, align 4, !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11685, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()), !dbg !11687
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11688
  %4 = load volatile i32, i32* %3, align 4, !dbg !11688
  %5 = and i32 %4, -769, !dbg !11688
  %6 = or i32 %5, %1, !dbg !11688
  store volatile i32 %6, i32* %3, align 4, !dbg !11688
  ret void, !dbg !11689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11692, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 %1, metadata !11693, metadata !DIExpression()), !dbg !11694
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11695
  %4 = load volatile i32, i32* %3, align 4, !dbg !11695
  %5 = and i32 %4, -4097, !dbg !11695
  %6 = or i32 %5, %1, !dbg !11695
  store volatile i32 %6, i32* %3, align 4, !dbg !11695
  ret void, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11699, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11700, metadata !DIExpression()), !dbg !11701
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11702
  %4 = load volatile i32, i32* %3, align 4, !dbg !11702
  %5 = and i32 %4, -12289, !dbg !11702
  %6 = or i32 %5, %1, !dbg !11702
  store volatile i32 %6, i32* %3, align 4, !dbg !11702
  ret void, !dbg !11703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11706, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata i32 %1, metadata !11707, metadata !DIExpression()), !dbg !11708
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11709
  %4 = load volatile i32, i32* %3, align 4, !dbg !11709
  %5 = and i32 %4, -1537, !dbg !11709
  %6 = or i32 %5, %1, !dbg !11709
  store volatile i32 %6, i32* %3, align 4, !dbg !11709
  ret void, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11713, metadata !DIExpression()), !dbg !11714
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11715
  %3 = load volatile i32, i32* %2, align 4, !dbg !11715
  %4 = lshr i32 %3, 3, !dbg !11716
  %5 = and i32 %4, 1, !dbg !11716
  ret i32 %5, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11722
  %3 = load volatile i32, i32* %2, align 4, !dbg !11722
  %4 = and i32 %3, 1, !dbg !11722
  ret i32 %4, !dbg !11723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11728
  %3 = load volatile i32, i32* %2, align 4, !dbg !11728
  %4 = lshr i32 %3, 1, !dbg !11729
  %5 = and i32 %4, 1, !dbg !11729
  ret i32 %5, !dbg !11730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11731 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11735
  %3 = load volatile i32, i32* %2, align 4, !dbg !11735
  %4 = lshr i32 %3, 8, !dbg !11736
  %5 = and i32 %4, 1, !dbg !11736
  ret i32 %5, !dbg !11737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11738 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11742
  store volatile i32 -257, i32* %2, align 4, !dbg !11742
  ret void, !dbg !11743
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11744 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11746, metadata !DIExpression()), !dbg !11748
  %3 = bitcast i32* %2 to i8*, !dbg !11749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11749
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11747, metadata !DIExpression()), !dbg !11750
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11751
  %5 = load volatile i32, i32* %4, align 4, !dbg !11751
  store volatile i32 %5, i32* %2, align 4, !dbg !11752
  %6 = load volatile i32, i32* %2, align 4, !dbg !11753
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11754
  %8 = load volatile i32, i32* %7, align 4, !dbg !11754
  store volatile i32 %8, i32* %2, align 4, !dbg !11755
  %9 = load volatile i32, i32* %2, align 4, !dbg !11756
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11757
  ret void, !dbg !11757
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11758 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11760, metadata !DIExpression()), !dbg !11762
  %3 = bitcast i32* %2 to i8*, !dbg !11763
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11763
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11761, metadata !DIExpression()), !dbg !11764
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11765
  %5 = load volatile i32, i32* %4, align 4, !dbg !11765
  store volatile i32 %5, i32* %2, align 4, !dbg !11766
  %6 = load volatile i32, i32* %2, align 4, !dbg !11767
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11768
  %8 = load volatile i32, i32* %7, align 4, !dbg !11768
  store volatile i32 %8, i32* %2, align 4, !dbg !11769
  %9 = load volatile i32, i32* %2, align 4, !dbg !11770
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11771
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11772 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11774, metadata !DIExpression()), !dbg !11776
  %3 = bitcast i32* %2 to i8*, !dbg !11777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11777
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11775, metadata !DIExpression()), !dbg !11778
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11779
  %5 = load volatile i32, i32* %4, align 4, !dbg !11779
  store volatile i32 %5, i32* %2, align 4, !dbg !11780
  %6 = load volatile i32, i32* %2, align 4, !dbg !11781
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11782
  %8 = load volatile i32, i32* %7, align 4, !dbg !11782
  store volatile i32 %8, i32* %2, align 4, !dbg !11783
  %9 = load volatile i32, i32* %2, align 4, !dbg !11784
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11785
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11786 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11790
  %3 = bitcast i32* %2 to i8*, !dbg !11791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11791
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11789, metadata !DIExpression()), !dbg !11792
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11793
  %5 = load volatile i32, i32* %4, align 4, !dbg !11793
  store volatile i32 %5, i32* %2, align 4, !dbg !11794
  %6 = load volatile i32, i32* %2, align 4, !dbg !11795
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11796
  %8 = load volatile i32, i32* %7, align 4, !dbg !11796
  store volatile i32 %8, i32* %2, align 4, !dbg !11797
  %9 = load volatile i32, i32* %2, align 4, !dbg !11798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11799
  ret void, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11802, metadata !DIExpression()), !dbg !11803
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11804
  %3 = load volatile i32, i32* %2, align 4, !dbg !11804
  %4 = lshr i32 %3, 7, !dbg !11805
  %5 = and i32 %4, 1, !dbg !11805
  ret i32 %5, !dbg !11806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !11807 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11811, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i8 %1, metadata !11812, metadata !DIExpression()), !dbg !11813
  %3 = zext i8 %1 to i32, !dbg !11814
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11815
  store volatile i32 %3, i32* %4, align 4, !dbg !11816
  ret void, !dbg !11817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11820, metadata !DIExpression()), !dbg !11821
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11822
  %3 = load volatile i32, i32* %2, align 4, !dbg !11822
  %4 = lshr i32 %3, 5, !dbg !11823
  %5 = and i32 %4, 1, !dbg !11823
  ret i32 %5, !dbg !11824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11829, metadata !DIExpression()), !dbg !11830
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11831
  %3 = load volatile i32, i32* %2, align 4, !dbg !11831
  %4 = trunc i32 %3 to i8, !dbg !11832
  ret i8 %4, !dbg !11833
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11836, metadata !DIExpression()), !dbg !11842
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11843
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11843
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11843
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11837, metadata !DIExpression()), !dbg !11842
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11844
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11844
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11844
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11838, metadata !DIExpression()), !dbg !11842
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #28, !dbg !11845
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11846
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11846
  %10 = tail call fastcc zeroext i1 @device_is_ready.179(%struct.device* noundef %9) #28, !dbg !11848
  br i1 %10, label %14, label %11, !dbg !11849

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.172(i32 noundef 1) #28, !dbg !11850
  %13 = zext i8 %12 to i32, !dbg !11850
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.180, i32 0, i32 0), i32 noundef %13) #27, !dbg !11850
  br label %62, !dbg !11856

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11857
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11858
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11858
  %18 = load i8*, i8** %17, align 4, !dbg !11858
  %19 = tail call fastcc i32 @clock_control_on.181(%struct.device* noundef %15, i8* noundef %18) #28, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %19, metadata !11841, metadata !DIExpression()), !dbg !11842
  %20 = icmp eq i32 %19, 0, !dbg !11860
  br i1 %20, label %24, label %21, !dbg !11862

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.172(i32 noundef 1) #28, !dbg !11863
  %23 = zext i8 %22 to i32, !dbg !11863
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.182, i32 0, i32 0), i32 noundef %23) #27, !dbg !11863
  br label %62, !dbg !11869

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11870
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11870
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #28, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %27, metadata !11841, metadata !DIExpression()), !dbg !11842
  %28 = icmp slt i32 %27, 0, !dbg !11872
  br i1 %28, label %62, label %29, !dbg !11874

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11875
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11875
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #28, !dbg !11876
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11877
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #28, !dbg !11878
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11879
  %34 = load i32, i32* %33, align 4, !dbg !11879
  %35 = icmp ult i32 %34, 3, !dbg !11881
  br i1 %35, label %39, label %36, !dbg !11881

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.172(i32 noundef 2) #28, !dbg !11882
  %38 = zext i8 %37 to i32, !dbg !11882
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.183, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11882
  call void @llvm.dbg.value(metadata i32 0, metadata !11839, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 0, metadata !11840, metadata !DIExpression()), !dbg !11842
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11881
  %41 = load i32, i32* %40, align 4, !dbg !11881
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11881
  %43 = load i32, i32* %42, align 4, !dbg !11881
  br label %44, !dbg !11881

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11891
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11891
  call void @llvm.dbg.value(metadata i32 %46, metadata !11840, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 %45, metadata !11839, metadata !DIExpression()), !dbg !11842
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11892
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #28, !dbg !11893
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11894
  %49 = load i8, i8* %48, align 4, !dbg !11894, !range !8141
  %50 = icmp eq i8 %49, 0, !dbg !11894
  br i1 %50, label %52, label %51, !dbg !11896

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #28, !dbg !11897
  br label %52, !dbg !11899

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11900
  %54 = load i32, i32* %53, align 4, !dbg !11900
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #28, !dbg !11901
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11902
  %56 = load i8, i8* %55, align 4, !dbg !11902, !range !8141
  %57 = icmp eq i8 %56, 0, !dbg !11902
  br i1 %57, label %60, label %58, !dbg !11904

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11905
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #28, !dbg !11907
  br label %60, !dbg !11908

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11909
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #28, !dbg !11910
  br label %62, !dbg !11911

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11842
  ret i32 %63, !dbg !11912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !11913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11917, metadata !DIExpression()), !dbg !11921
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11922
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11922
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11922
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11918, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11919, metadata !DIExpression()), !dbg !11921
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11923
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11924
  ret void, !dbg !11925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.179(%struct.device* noundef %0) unnamed_addr #1 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11930, metadata !DIExpression()), !dbg !11931
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11932, !srcloc !11934
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.184(%struct.device* noundef %0) #28, !dbg !11935
  ret i1 %2, !dbg !11936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.181(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11939, metadata !DIExpression()), !dbg !11942
  call void @llvm.dbg.value(metadata i8* %1, metadata !11940, metadata !DIExpression()), !dbg !11942
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11943
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11943
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11943
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11941, metadata !DIExpression()), !dbg !11942
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11944
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11944
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11945
  ret i32 %8, !dbg !11946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11947 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11951, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i8 0, metadata !11952, metadata !DIExpression()), !dbg !11955
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11956
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11954, metadata !DIExpression(DW_OP_deref)), !dbg !11955
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %4, metadata !11953, metadata !DIExpression()), !dbg !11955
  %5 = icmp slt i32 %4, 0, !dbg !11958
  br i1 %5, label %9, label %6, !dbg !11960

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11961
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11954, metadata !DIExpression()), !dbg !11955
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #28, !dbg !11962
  br label %9, !dbg !11963

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11955
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11964
  ret i32 %10, !dbg !11964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11965 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11967, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i32 12, metadata !11968, metadata !DIExpression()), !dbg !11971
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11972

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11973, metadata !DIExpression()) #26, !dbg !11979
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !11982, !srcloc !11983
  call void @llvm.dbg.value(metadata i32 %4, metadata !11978, metadata !DIExpression()) #26, !dbg !11979
  %5 = or i32 %4, 12, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %5, metadata !11969, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 %5, metadata !11986, metadata !DIExpression()) #26, !dbg !11993
  call void @llvm.dbg.value(metadata i32* %2, metadata !11991, metadata !DIExpression()) #26, !dbg !11993
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !11995, !srcloc !11996
  call void @llvm.dbg.value(metadata i32 %6, metadata !11992, metadata !DIExpression()) #26, !dbg !11993
  %7 = icmp eq i32 %6, 0, !dbg !11972
  br i1 %7, label %8, label %3, !dbg !11984, !llvm.loop !11997

8:                                                ; preds = %3
  ret void, !dbg !11998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11999 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12001, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 %1, metadata !12002, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 %2, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12006
  %5 = load volatile i32, i32* %4, align 4, !dbg !12006
  %6 = and i32 %5, -5633, !dbg !12006
  %7 = or i32 %2, %1, !dbg !12006
  %8 = or i32 %7, %6, !dbg !12006
  store volatile i32 %8, i32* %4, align 4, !dbg !12006
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12007
  %10 = load volatile i32, i32* %9, align 4, !dbg !12007
  %11 = and i32 %10, -12289, !dbg !12007
  store volatile i32 %11, i32* %9, align 4, !dbg !12007
  ret void, !dbg !12008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12009 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12011, metadata !DIExpression()), !dbg !12012
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12013
  %3 = load volatile i32, i32* %2, align 4, !dbg !12013
  %4 = or i32 %3, 8, !dbg !12013
  store volatile i32 %4, i32* %2, align 4, !dbg !12013
  ret void, !dbg !12014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12015 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12019, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12020, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata i32 0, metadata !12021, metadata !DIExpression()), !dbg !12022
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12023
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12023
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12024
  %5 = load i8, i8* %4, align 4, !dbg !12024
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12025
  ret i32 %6, !dbg !12026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.184(%struct.device* noundef %0) unnamed_addr #1 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12029, metadata !DIExpression()), !dbg !12030
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12031
  ret i1 %2, !dbg !12032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !12033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12035, metadata !DIExpression()), !dbg !12036
  tail call fastcc void @__NVIC_SetPriority.186() #28, !dbg !12037
  store i32 16799, i32* @last_load, align 4, !dbg !12038
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12039
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12040
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12041
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12042
  %3 = or i32 %2, 7, !dbg !12042
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12042
  ret i32 0, !dbg !12043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.186() unnamed_addr #18 !dbg !12044 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12046, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 1, metadata !12047, metadata !DIExpression()), !dbg !12048
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12049
  ret void, !dbg !12052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12055, metadata !DIExpression()), !dbg !12057
  %2 = tail call fastcc i32 @elapsed() #28, !dbg !12058
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12059
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12060
  %5 = add i32 %4, %3, !dbg !12060
  store i32 %5, i32* @cycle_count, align 4, !dbg !12060
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12061
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12062
  %7 = sub i32 %5, %6, !dbg !12065
  %8 = udiv i32 %7, 16800, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %8, metadata !12056, metadata !DIExpression()), !dbg !12057
  %9 = mul nuw i32 %8, 16800, !dbg !12067
  %10 = add i32 %9, %6, !dbg !12068
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12068
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12069
  tail call void @z_arm_int_exit() #27, !dbg !12070
  ret void, !dbg !12071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !12072 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %1, metadata !12074, metadata !DIExpression()), !dbg !12078
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %2, metadata !12075, metadata !DIExpression()), !dbg !12078
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %3, metadata !12076, metadata !DIExpression()), !dbg !12078
  %4 = and i32 %2, 65536, !dbg !12081
  %5 = icmp ne i32 %4, 0, !dbg !12081
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12083
  %8 = load i32, i32* @last_load, align 4, !dbg !12078
  br i1 %7, label %9, label %13, !dbg !12083

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12084
  %11 = add i32 %10, %8, !dbg !12084
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12084
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12086
  br label %13, !dbg !12087

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12088
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12089
  %16 = add i32 %14, %15, !dbg !12090
  ret i32 %16, !dbg !12091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12096, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata i1 %1, metadata !12097, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12109
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12110
  br i1 %4, label %5, label %8, !dbg !12110

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12112
  %7 = and i32 %6, -2, !dbg !12112
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12112
  store i32 -16777216, i32* @last_load, align 4, !dbg !12114
  br label %60, !dbg !12115

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12116
  call void @llvm.dbg.value(metadata i32 %9, metadata !12101, metadata !DIExpression()), !dbg !12109
  br i1 %3, label %18, label %10, !dbg !12117

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12117
  call void @llvm.dbg.value(metadata i32 undef, metadata !12096, metadata !DIExpression()), !dbg !12109
  %12 = icmp slt i32 %11, 1, !dbg !12118
  br i1 %12, label %18, label %13, !dbg !12118

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !12118
  %15 = select i1 %14, i32 %11, i32 997, !dbg !12118
  %16 = mul nuw nsw i32 %15, 16800, !dbg !12118
  %17 = add nuw nsw i32 %16, 16799, !dbg !12118
  br label %18, !dbg !12118

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12096, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12119, metadata !DIExpression()) #26, !dbg !12126
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12128, !srcloc !12134
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12126
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12136
  br i1 %21, label %23, label %22, !dbg !12139

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 148) #27, !dbg !12140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.190, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 148) #27, !dbg !12140
  unreachable, !dbg !12140

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12128
  call void @llvm.dbg.value(metadata i32 %24, metadata !12131, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %24, metadata !12125, metadata !DIExpression()) #26, !dbg !12126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %24, metadata !12102, metadata !DIExpression()), !dbg !12109
  %25 = tail call fastcc i32 @elapsed() #28, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %25, metadata !12107, metadata !DIExpression()), !dbg !12109
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %26, metadata !12099, metadata !DIExpression()), !dbg !12109
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12145
  %28 = add i32 %27, %25, !dbg !12145
  store i32 %28, i32* @cycle_count, align 4, !dbg !12145
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12146
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12147
  %30 = sub i32 %28, %29, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %30, metadata !12108, metadata !DIExpression()), !dbg !12109
  %31 = icmp slt i32 %30, 0, !dbg !12149
  br i1 %31, label %41, label %32, !dbg !12151

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()), !dbg !12109
  %33 = add nuw i32 %19, %30, !dbg !12152
  %34 = urem i32 %33, 16800, !dbg !12154
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12109
  %35 = sub nuw nsw i32 %19, %34, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %35, metadata !12098, metadata !DIExpression()), !dbg !12109
  %36 = icmp ugt i32 %35, 1050, !dbg !12156
  br i1 %36, label %37, label %39, !dbg !12156

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12098, metadata !DIExpression()), !dbg !12109
  %38 = icmp ugt i32 %35, 16749600, !dbg !12157
  br i1 %38, label %41, label %39, !dbg !12159

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12160
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %43, metadata !12100, metadata !DIExpression()), !dbg !12109
  %44 = add nsw i32 %42, -1, !dbg !12162
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12163
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12164
  %45 = icmp ult i32 %26, %43, !dbg !12165
  br i1 %45, label %46, label %51, !dbg !12167

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12168
  %48 = add i32 %26, %9, !dbg !12170
  %49 = sub i32 %48, %43, !dbg !12171
  %50 = add i32 %49, %47, !dbg !12168
  br label %55, !dbg !12172

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12173
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12175
  %54 = add i32 %52, %53, !dbg !12175
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12176
  store i32 %56, i32* @cycle_count, align 4, !dbg !12176
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12182, metadata !DIExpression()) #26, !dbg !12183
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12185
  br i1 %57, label %59, label %58, !dbg !12188

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 194) #27, !dbg !12189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 194) #27, !dbg !12189
  unreachable, !dbg !12189

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12177, metadata !DIExpression()) #26, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %24, metadata !12191, metadata !DIExpression()) #26, !dbg !12194
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !12196, !srcloc !12197
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12199 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12119, metadata !DIExpression()) #26, !dbg !12203
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12205, !srcloc !12134
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12203
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12208
  br i1 %2, label %4, label %3, !dbg !12209

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 148) #27, !dbg !12210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.190, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 148) #27, !dbg !12210
  unreachable, !dbg !12210

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12203
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12211
  call void @llvm.dbg.value(metadata i32 undef, metadata !12201, metadata !DIExpression()), !dbg !12212
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12213
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12214
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12215
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12202, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12182, metadata !DIExpression()) #26, !dbg !12216
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12218
  br i1 %8, label %10, label %9, !dbg !12219

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 194) #27, !dbg !12220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 194) #27, !dbg !12220
  unreachable, !dbg !12220

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12221
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12202, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12212
  %12 = sub i32 %11, %7, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %12, metadata !12202, metadata !DIExpression()), !dbg !12212
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %13, metadata !12131, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 %13, metadata !12125, metadata !DIExpression()) #26, !dbg !12203
  call void @llvm.dbg.value(metadata i32 %13, metadata !12201, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12216
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !12225, !srcloc !12197
  %14 = udiv i32 %12, 16800, !dbg !12226
  ret i32 %14, !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12228 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12119, metadata !DIExpression()) #26, !dbg !12232
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12234, !srcloc !12134
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12232
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12237
  br i1 %2, label %4, label %3, !dbg !12238

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 148) #27, !dbg !12239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.190, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 148) #27, !dbg !12239
  unreachable, !dbg !12239

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12232
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12240
  call void @llvm.dbg.value(metadata i32 undef, metadata !12230, metadata !DIExpression()), !dbg !12241
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12242
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12243
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12231, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12182, metadata !DIExpression()) #26, !dbg !12244
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12246
  br i1 %7, label %9, label %8, !dbg !12247

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 194) #27, !dbg !12248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 194) #27, !dbg !12248
  unreachable, !dbg !12248

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %10, metadata !12231, metadata !DIExpression()), !dbg !12241
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %11, metadata !12131, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %11, metadata !12125, metadata !DIExpression()) #26, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %11, metadata !12230, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12244
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12250
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !12252, !srcloc !12197
  ret i32 %10, !dbg !12253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !12254 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12255
  %2 = icmp eq i32 %1, -16777216, !dbg !12257
  br i1 %2, label %3, label %6, !dbg !12258

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12259
  %5 = or i32 %4, 1, !dbg !12259
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12259
  br label %6, !dbg !12261

6:                                                ; preds = %3, %0
  ret void, !dbg !12262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !12263 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12264
  %2 = and i32 %1, -2, !dbg !12264
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12264
  ret void, !dbg !12265
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !12266 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12292, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata i8 %1, metadata !12293, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12294, metadata !DIExpression()), !dbg !12295
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12296
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12296
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12295
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12297
  %8 = load i8, i8* %6, align 4, !dbg !12298
  %9 = zext i8 %8 to i32, !dbg !12299
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12299
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12300
  br i1 %11, label %18, label %24, !dbg !12301

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12295
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12297
  %14 = load i8, i8* %6, align 4, !dbg !12298
  %15 = zext i8 %14 to i32, !dbg !12299
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12299
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12300
  br i1 %17, label %18, label %24, !dbg !12301, !llvm.loop !12302

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12304
  %21 = load i8, i8* %20, align 1, !dbg !12304
  %22 = icmp eq i8 %21, %1, !dbg !12307
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12308
  br i1 %22, label %24, label %12, !dbg !12309

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12295
  ret i32 %25, !dbg !12310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12311 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12322, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i8 %1, metadata !12323, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 %2, metadata !12324, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12327, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12328, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i8 0, metadata !12329, metadata !DIExpression()), !dbg !12339
  %4 = icmp eq i8 %1, 0, !dbg !12340
  br i1 %4, label %35, label %5, !dbg !12341

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12340
  br label %9, !dbg !12341

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12329, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata i32 %29, metadata !12327, metadata !DIExpression()), !dbg !12338
  %8 = icmp eq i32 %34, %6, !dbg !12340
  br i1 %8, label %35, label %9, !dbg !12341, !llvm.loop !12342

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12329, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata i32 %11, metadata !12327, metadata !DIExpression()), !dbg !12338
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12344
  %13 = load i32, i32* %12, align 4, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %13, metadata !12326, metadata !DIExpression()), !dbg !12338
  %14 = and i32 %13, 31, !dbg !12345
  %15 = icmp ult i32 %14, 16, !dbg !12346
  br i1 %15, label %16, label %20, !dbg !12347

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12348
  %18 = load i32, i32* %17, align 4, !dbg !12348
  %19 = or i32 %18, 32, !dbg !12350
  call void @llvm.dbg.value(metadata i32 %19, metadata !12327, metadata !DIExpression()), !dbg !12338
  br label %28, !dbg !12351

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12352

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12353
  %23 = load i32, i32* %22, align 4, !dbg !12353
  call void @llvm.dbg.value(metadata i32 %23, metadata !12331, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12354
  %24 = lshr i32 %23, 7, !dbg !12355
  %25 = and i32 %24, 16, !dbg !12355
  %26 = or i32 %25, %23, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %26, metadata !12327, metadata !DIExpression()), !dbg !12338
  br label %28, !dbg !12356

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12338
  call void @llvm.dbg.value(metadata i32 %29, metadata !12327, metadata !DIExpression()), !dbg !12338
  %30 = lshr i32 %13, 5, !dbg !12357
  %31 = and i32 %30, 255, !dbg !12357
  call void @llvm.dbg.value(metadata i32 %31, metadata !12325, metadata !DIExpression()), !dbg !12338
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #28, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %32, metadata !12328, metadata !DIExpression()), !dbg !12338
  %33 = icmp slt i32 %32, 0, !dbg !12359
  %34 = add nuw nsw i32 %10, 1, !dbg !12361
  call void @llvm.dbg.value(metadata i32 %34, metadata !12329, metadata !DIExpression()), !dbg !12339
  br i1 %33, label %35, label %7, !dbg !12362

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12368, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i32 %1, metadata !12369, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i32 %2, metadata !12370, metadata !DIExpression()), !dbg !12372
  %4 = icmp ugt i32 %0, 175, !dbg !12373
  br i1 %4, label %16, label %5, !dbg !12375

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12376
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12377
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12377
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12371, metadata !DIExpression()), !dbg !12372
  %9 = add nsw i32 %6, -9, !dbg !12378
  %10 = icmp ult i32 %9, 2, !dbg !12378
  br i1 %10, label %16, label %11, !dbg !12380

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.199(%struct.device* noundef %8) #28, !dbg !12381
  br i1 %12, label %13, label %16, !dbg !12382

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12383
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12384
  br label %16, !dbg !12385

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12372
  ret i32 %17, !dbg !12386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !12387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12391, metadata !DIExpression()), !dbg !12392
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12393, !srcloc !12395
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.200(%struct.device* noundef %0) #28, !dbg !12396
  ret i1 %2, !dbg !12397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.200(%struct.device* noundef %0) unnamed_addr #1 !dbg !12398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12400, metadata !DIExpression()), !dbg !12401
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12402
  ret i1 %2, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12404 {
  ret void, !dbg !12405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #7 !dbg !12406 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12408, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 0, metadata !12409, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 2, metadata !12410, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 0, metadata !12411, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 2, metadata !12412, metadata !DIExpression()), !dbg !12413
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12414
  %2 = and i32 %1, 12, !dbg !12415
  call void @llvm.dbg.value(metadata i32 %2, metadata !12408, metadata !DIExpression()), !dbg !12413
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12416

3:                                                ; preds = %0
  br label %21, !dbg !12417

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %5, metadata !12411, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12413
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12420
  %7 = and i32 %6, 63, !dbg !12421
  call void @llvm.dbg.value(metadata i32 %7, metadata !12412, metadata !DIExpression()), !dbg !12413
  %8 = and i32 %5, 4194304, !dbg !12422
  %9 = icmp eq i32 %8, 0, !dbg !12422
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12424
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12424
  %13 = lshr i32 %12, 6, !dbg !12424
  %14 = and i32 %13, 511, !dbg !12424
  %15 = mul i32 %14, %11, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %15, metadata !12409, metadata !DIExpression()), !dbg !12413
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12425
  %17 = lshr i32 %16, 15, !dbg !12426
  %18 = and i32 %17, 6, !dbg !12426
  %19 = add nuw nsw i32 %18, 2, !dbg !12426
  call void @llvm.dbg.value(metadata i32 %19, metadata !12410, metadata !DIExpression()), !dbg !12413
  %20 = udiv i32 %15, %19, !dbg !12427
  br label %21, !dbg !12428

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12429
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12430
  %24 = lshr i32 %23, 4, !dbg !12431
  %25 = and i32 %24, 15, !dbg !12431
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12432
  %27 = load i8, i8* %26, align 1, !dbg !12432
  %28 = zext i8 %27 to i32, !dbg !12432
  call void @llvm.dbg.value(metadata i32 %28, metadata !12408, metadata !DIExpression()), !dbg !12413
  %29 = lshr i32 %22, %28, !dbg !12433
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12433
  ret void, !dbg !12434
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12435 {
  ret i32 0, !dbg !12440
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12441 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12467, metadata !DIExpression()), !dbg !12478
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12479
  br i1 %3, label %311, label %4, !dbg !12481

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12482
  %6 = load i32, i32* %5, align 4, !dbg !12482
  %7 = and i32 %6, 1, !dbg !12484
  %8 = icmp eq i32 %7, 0, !dbg !12485
  br i1 %8, label %66, label %9, !dbg !12486

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12487
  %11 = and i32 %10, 12, !dbg !12487
  %12 = icmp eq i32 %11, 4, !dbg !12490
  br i1 %12, label %21, label %13, !dbg !12491

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12492
  %15 = and i32 %14, 12, !dbg !12492
  %16 = icmp eq i32 %15, 8, !dbg !12493
  br i1 %16, label %17, label %29, !dbg !12494

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12495
  %19 = and i32 %18, 4194304, !dbg !12496
  %20 = icmp eq i32 %19, 0, !dbg !12497
  br i1 %20, label %29, label %21, !dbg !12498

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12499
  %23 = and i32 %22, 131072, !dbg !12499
  %24 = icmp eq i32 %23, 0, !dbg !12499
  br i1 %24, label %66, label %25, !dbg !12502

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12503
  %27 = load i32, i32* %26, align 4, !dbg !12503
  %28 = icmp eq i32 %27, 0, !dbg !12504
  br i1 %28, label %311, label %66, !dbg !12505

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12506
  %31 = load i32, i32* %30, align 4, !dbg !12506
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12510

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12511
  %34 = or i32 %33, 65536, !dbg !12511
  br label %45, !dbg !12511

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12513
  %37 = or i32 %36, 262144, !dbg !12513
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12513
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12513
  %39 = or i32 %38, 65536, !dbg !12513
  br label %45, !dbg !12513

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12516
  %42 = and i32 %41, -65537, !dbg !12516
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12516
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12516
  %44 = and i32 %43, -262145, !dbg !12516
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12518
  %47 = load i32, i32* %30, align 4, !dbg !12519
  %48 = icmp eq i32 %47, 0, !dbg !12521
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %49, metadata !12468, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.value(metadata i32 %49, metadata !12468, metadata !DIExpression()), !dbg !12478
  br i1 %48, label %58, label %50, !dbg !12523

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12524
  %52 = and i32 %51, 131072, !dbg !12526
  %53 = icmp eq i32 %52, 0, !dbg !12526
  br i1 %53, label %54, label %66, !dbg !12527

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12528
  %56 = sub i32 %55, %49, !dbg !12531
  %57 = icmp ugt i32 %56, 100, !dbg !12532
  br i1 %57, label %311, label %50, !dbg !12533, !llvm.loop !12534

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12536
  %60 = and i32 %59, 131072, !dbg !12536
  %61 = icmp eq i32 %60, 0, !dbg !12536
  br i1 %61, label %66, label %62, !dbg !12538

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12539
  %64 = sub i32 %63, %49, !dbg !12542
  %65 = icmp ugt i32 %64, 100, !dbg !12543
  br i1 %65, label %311, label %58, !dbg !12544, !llvm.loop !12545

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12547
  %68 = and i32 %67, 2, !dbg !12549
  %69 = icmp eq i32 %68, 0, !dbg !12550
  br i1 %69, label %121, label %70, !dbg !12551

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12552
  %72 = and i32 %71, 12, !dbg !12552
  %73 = icmp eq i32 %72, 0, !dbg !12555
  br i1 %73, label %82, label %74, !dbg !12556

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12557
  %76 = and i32 %75, 12, !dbg !12557
  %77 = icmp eq i32 %76, 8, !dbg !12558
  br i1 %77, label %78, label %90, !dbg !12559

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12560
  %80 = and i32 %79, 4194304, !dbg !12561
  %81 = icmp eq i32 %80, 0, !dbg !12562
  br i1 %81, label %82, label %90, !dbg !12563

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12564
  %84 = and i32 %83, 2, !dbg !12564
  %85 = icmp eq i32 %84, 0, !dbg !12564
  br i1 %85, label %114, label %86, !dbg !12567

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12568
  %88 = load i32, i32* %87, align 4, !dbg !12568
  %89 = icmp eq i32 %88, 1, !dbg !12569
  br i1 %89, label %114, label %311, !dbg !12570

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12571
  %92 = load i32, i32* %91, align 4, !dbg !12571
  %93 = icmp eq i32 %92, 0, !dbg !12574
  br i1 %93, label %104, label %94, !dbg !12575

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12576
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12578
  call void @llvm.dbg.value(metadata i32 %95, metadata !12468, metadata !DIExpression()), !dbg !12478
  br label %96, !dbg !12579

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12580
  %98 = and i32 %97, 2, !dbg !12581
  %99 = icmp eq i32 %98, 0, !dbg !12581
  br i1 %99, label %100, label %114, !dbg !12579

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12582
  %102 = sub i32 %101, %95, !dbg !12585
  %103 = icmp ugt i32 %102, 2, !dbg !12586
  br i1 %103, label %311, label %96, !dbg !12587, !llvm.loop !12588

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12590
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12592
  call void @llvm.dbg.value(metadata i32 %105, metadata !12468, metadata !DIExpression()), !dbg !12478
  br label %106, !dbg !12593

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12594
  %108 = and i32 %107, 2, !dbg !12594
  %109 = icmp eq i32 %108, 0, !dbg !12594
  br i1 %109, label %121, label %110, !dbg !12593

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12595
  %112 = sub i32 %111, %105, !dbg !12598
  %113 = icmp ugt i32 %112, 2, !dbg !12599
  br i1 %113, label %311, label %106, !dbg !12600, !llvm.loop !12601

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12603
  %116 = and i32 %115, -249, !dbg !12603
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12603
  %118 = load i32, i32* %117, align 4, !dbg !12603
  %119 = shl i32 %118, 3, !dbg !12603
  %120 = or i32 %119, %116, !dbg !12603
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12603
  br label %121, !dbg !12604

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12604
  %123 = and i32 %122, 8, !dbg !12606
  %124 = icmp eq i32 %123, 0, !dbg !12607
  br i1 %124, label %149, label %125, !dbg !12608

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12609
  %127 = load i32, i32* %126, align 4, !dbg !12609
  %128 = icmp eq i32 %127, 0, !dbg !12612
  br i1 %128, label %139, label %129, !dbg !12613

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12614
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12616
  call void @llvm.dbg.value(metadata i32 %130, metadata !12468, metadata !DIExpression()), !dbg !12478
  br label %131, !dbg !12617

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12618
  %133 = and i32 %132, 2, !dbg !12619
  %134 = icmp eq i32 %133, 0, !dbg !12619
  br i1 %134, label %135, label %149, !dbg !12617

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12620
  %137 = sub i32 %136, %130, !dbg !12623
  %138 = icmp ugt i32 %137, 2, !dbg !12624
  br i1 %138, label %311, label %131, !dbg !12625, !llvm.loop !12626

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12628
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12630
  call void @llvm.dbg.value(metadata i32 %140, metadata !12468, metadata !DIExpression()), !dbg !12478
  br label %141, !dbg !12631

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12632
  %143 = and i32 %142, 2, !dbg !12632
  %144 = icmp eq i32 %143, 0, !dbg !12632
  br i1 %144, label %149, label %145, !dbg !12631

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12633
  %147 = sub i32 %146, %140, !dbg !12636
  %148 = icmp ugt i32 %147, 2, !dbg !12637
  br i1 %148, label %311, label %141, !dbg !12638, !llvm.loop !12639

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12641
  %151 = and i32 %150, 4, !dbg !12642
  %152 = icmp eq i32 %151, 0, !dbg !12643
  br i1 %152, label %221, label %153, !dbg !12644

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12470, metadata !DIExpression()), !dbg !12645
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12646
  %155 = and i32 %154, 268435456, !dbg !12646
  %156 = icmp eq i32 %155, 0, !dbg !12646
  br i1 %156, label %157, label %164, !dbg !12647

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12648
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12648
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12474, metadata !DIExpression()), !dbg !12648
  store volatile i32 0, i32* %2, align 4, !dbg !12648
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12648
  %160 = or i32 %159, 268435456, !dbg !12648
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12648
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12648
  %162 = and i32 %161, 268435456, !dbg !12648
  store volatile i32 %162, i32* %2, align 4, !dbg !12648
  %163 = load volatile i32, i32* %2, align 4, !dbg !12648
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12649
  call void @llvm.dbg.value(metadata i32 1, metadata !12470, metadata !DIExpression()), !dbg !12645
  br label %164, !dbg !12650

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12470, metadata !DIExpression()), !dbg !12645
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12651
  %166 = and i32 %165, 256, !dbg !12651
  %167 = icmp eq i32 %166, 0, !dbg !12651
  br i1 %167, label %168, label %180, !dbg !12653

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12654
  %170 = or i32 %169, 256, !dbg !12654
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12654
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12656
  call void @llvm.dbg.value(metadata i32 %171, metadata !12468, metadata !DIExpression()), !dbg !12478
  br label %172, !dbg !12657

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12658
  %174 = and i32 %173, 256, !dbg !12658
  %175 = icmp eq i32 %174, 0, !dbg !12658
  br i1 %175, label %176, label %180, !dbg !12657

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12659
  %178 = sub i32 %177, %171, !dbg !12662
  %179 = icmp ugt i32 %178, 2, !dbg !12663
  br i1 %179, label %311, label %172, !dbg !12664, !llvm.loop !12665

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12667
  %182 = load i32, i32* %181, align 4, !dbg !12667
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12670

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12671
  %185 = or i32 %184, 1, !dbg !12671
  br label %196, !dbg !12671

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12673
  %188 = or i32 %187, 4, !dbg !12673
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12673
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12673
  %190 = or i32 %189, 1, !dbg !12673
  br label %196, !dbg !12673

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12676
  %193 = and i32 %192, -2, !dbg !12676
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12676
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12676
  %195 = and i32 %194, -5, !dbg !12676
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12678
  %198 = load i32, i32* %181, align 4, !dbg !12679
  %199 = icmp eq i32 %198, 0, !dbg !12681
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %200, metadata !12468, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.value(metadata i32 %200, metadata !12468, metadata !DIExpression()), !dbg !12478
  br i1 %199, label %209, label %201, !dbg !12683

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12684
  %203 = and i32 %202, 2, !dbg !12686
  %204 = icmp eq i32 %203, 0, !dbg !12686
  br i1 %204, label %205, label %217, !dbg !12687

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12688
  %207 = sub i32 %206, %200, !dbg !12691
  %208 = icmp ugt i32 %207, 5000, !dbg !12692
  br i1 %208, label %311, label %201, !dbg !12693, !llvm.loop !12694

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12696
  %211 = and i32 %210, 2, !dbg !12696
  %212 = icmp eq i32 %211, 0, !dbg !12696
  br i1 %212, label %217, label %213, !dbg !12698

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12699
  %215 = sub i32 %214, %200, !dbg !12702
  %216 = icmp ugt i32 %215, 5000, !dbg !12703
  br i1 %216, label %311, label %209, !dbg !12704, !llvm.loop !12705

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12707

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12708
  %220 = and i32 %219, -268435457, !dbg !12708
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12708
  br label %221, !dbg !12711

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12712
  %223 = load i32, i32* %222, align 4, !dbg !12712
  %224 = icmp eq i32 %223, 0, !dbg !12714
  br i1 %224, label %310, label %225, !dbg !12715

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12716
  %227 = and i32 %226, 12, !dbg !12716
  %228 = icmp eq i32 %227, 8, !dbg !12719
  br i1 %228, label %277, label %229, !dbg !12720

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12721
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12724
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %231, metadata !12468, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.value(metadata i32 %231, metadata !12468, metadata !DIExpression()), !dbg !12478
  br i1 %230, label %232, label %269, !dbg !12725

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12726
  %234 = and i32 %233, 33554432, !dbg !12726
  %235 = icmp eq i32 %234, 0, !dbg !12726
  br i1 %235, label %240, label %236, !dbg !12728

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12729
  %238 = sub i32 %237, %231, !dbg !12732
  %239 = icmp ugt i32 %238, 2, !dbg !12733
  br i1 %239, label %311, label %232, !dbg !12734, !llvm.loop !12735

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12737
  %242 = load i32, i32* %241, align 4, !dbg !12737
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12737
  %244 = load i32, i32* %243, align 4, !dbg !12737
  %245 = or i32 %244, %242, !dbg !12737
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12737
  %247 = load i32, i32* %246, align 4, !dbg !12737
  %248 = shl i32 %247, 6, !dbg !12737
  %249 = or i32 %245, %248, !dbg !12737
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12737
  %251 = load i32, i32* %250, align 4, !dbg !12737
  %252 = shl i32 %251, 15, !dbg !12737
  %253 = add i32 %252, -65536, !dbg !12737
  %254 = and i32 %253, -65536, !dbg !12737
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12737
  %256 = load i32, i32* %255, align 4, !dbg !12737
  %257 = shl i32 %256, 24, !dbg !12737
  %258 = or i32 %249, %257, !dbg !12737
  %259 = or i32 %258, %254, !dbg !12737
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12737
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12738
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %260, metadata !12468, metadata !DIExpression()), !dbg !12478
  br label %261, !dbg !12740

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12741
  %263 = and i32 %262, 33554432, !dbg !12742
  %264 = icmp eq i32 %263, 0, !dbg !12742
  br i1 %264, label %265, label %310, !dbg !12740

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12743
  %267 = sub i32 %266, %260, !dbg !12746
  %268 = icmp ugt i32 %267, 2, !dbg !12747
  br i1 %268, label %311, label %261, !dbg !12748, !llvm.loop !12749

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12751
  %271 = and i32 %270, 33554432, !dbg !12751
  %272 = icmp eq i32 %271, 0, !dbg !12751
  br i1 %272, label %310, label %273, !dbg !12753

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12754
  %275 = sub i32 %274, %231, !dbg !12757
  %276 = icmp ugt i32 %275, 2, !dbg !12758
  br i1 %276, label %311, label %269, !dbg !12759, !llvm.loop !12760

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12762
  br i1 %278, label %311, label %279, !dbg !12765

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12766
  call void @llvm.dbg.value(metadata i32 %280, metadata !12469, metadata !DIExpression()), !dbg !12478
  %281 = and i32 %280, 4194304, !dbg !12768
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12770
  %283 = load i32, i32* %282, align 4, !dbg !12770
  %284 = icmp eq i32 %281, %283, !dbg !12771
  br i1 %284, label %285, label %311, !dbg !12772

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12773
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12774
  %288 = load i32, i32* %287, align 4, !dbg !12774
  %289 = icmp eq i32 %286, %288, !dbg !12775
  br i1 %289, label %290, label %311, !dbg !12776

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12777
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12778
  %293 = load i32, i32* %292, align 4, !dbg !12778
  %294 = shl i32 %293, 6, !dbg !12779
  %295 = icmp eq i32 %291, %294, !dbg !12780
  br i1 %295, label %296, label %311, !dbg !12781

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12782
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12783
  %299 = load i32, i32* %298, align 4, !dbg !12783
  %300 = shl i32 %299, 15, !dbg !12784
  %301 = add i32 %300, -65536, !dbg !12784
  %302 = and i32 %301, -65536, !dbg !12784
  %303 = icmp eq i32 %297, %302, !dbg !12785
  br i1 %303, label %304, label %311, !dbg !12786

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12787
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12788
  %307 = load i32, i32* %306, align 4, !dbg !12788
  %308 = shl i32 %307, 24, !dbg !12789
  %309 = icmp eq i32 %305, %308, !dbg !12790
  br i1 %309, label %310, label %311, !dbg !12791

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12792

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12478
  ret i32 %312, !dbg !12793
}

; Function Attrs: optsize
declare !dbg !12794 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.msg* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12796 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !12809, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.value(metadata i32 %1, metadata !12810, metadata !DIExpression()), !dbg !12812
  %3 = icmp eq %struct.msg* %0, null, !dbg !12813
  br i1 %3, label %115, label %4, !dbg !12815

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12816
  %6 = and i32 %5, 7, !dbg !12816
  %7 = icmp ult i32 %6, %1, !dbg !12818
  br i1 %7, label %8, label %13, !dbg !12819

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12820
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12820
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12822
  %11 = and i32 %10, 7, !dbg !12822
  %12 = icmp eq i32 %11, %1, !dbg !12824
  br i1 %12, label %13, label %115, !dbg !12825

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !12826
  %15 = load i32, i32* %14, align 4, !dbg !12826
  %16 = and i32 %15, 2, !dbg !12828
  %17 = icmp eq i32 %16, 0, !dbg !12829
  br i1 %17, label %39, label %18, !dbg !12830

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12831
  %20 = icmp eq i32 %19, 0, !dbg !12834
  br i1 %20, label %25, label %21, !dbg !12835

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12836
  %23 = or i32 %22, 7168, !dbg !12836
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12836
  %24 = load i32, i32* %14, align 4, !dbg !12838
  br label %25, !dbg !12840

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12838
  %27 = and i32 %26, 8, !dbg !12841
  %28 = icmp eq i32 %27, 0, !dbg !12842
  br i1 %28, label %32, label %29, !dbg !12843

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12844
  %31 = or i32 %30, 57344, !dbg !12844
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12844
  br label %32, !dbg !12846

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12847
  %34 = and i32 %33, -241, !dbg !12847
  %35 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !12847
  %36 = load i32, i32* %35, align 4, !dbg !12847
  %37 = or i32 %34, %36, !dbg !12847
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12847
  %38 = load i32, i32* %14, align 4, !dbg !12848
  br label %39, !dbg !12850

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12848
  %41 = and i32 %40, 1, !dbg !12851
  %42 = icmp eq i32 %41, 0, !dbg !12852
  br i1 %42, label %73, label %43, !dbg !12853

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !12854
  %45 = load i32, i32* %44, align 4, !dbg !12854
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12857

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12858
  %48 = and i32 %47, 131072, !dbg !12861
  %49 = icmp eq i32 %48, 0, !dbg !12861
  br i1 %49, label %115, label %58, !dbg !12862

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12863
  %52 = and i32 %51, 33554432, !dbg !12867
  %53 = icmp eq i32 %52, 0, !dbg !12867
  br i1 %53, label %115, label %58, !dbg !12868

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12869
  %56 = and i32 %55, 2, !dbg !12872
  %57 = icmp eq i32 %56, 0, !dbg !12872
  br i1 %57, label %115, label %58, !dbg !12873

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12874
  %60 = and i32 %59, -4, !dbg !12874
  %61 = or i32 %60, %45, !dbg !12874
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12874
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12875
  call void @llvm.dbg.value(metadata i32 %62, metadata !12811, metadata !DIExpression()), !dbg !12812
  br label %63, !dbg !12876

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12877
  %65 = and i32 %64, 12, !dbg !12877
  %66 = load i32, i32* %44, align 4, !dbg !12878
  %67 = shl i32 %66, 2, !dbg !12879
  %68 = icmp eq i32 %65, %67, !dbg !12880
  br i1 %68, label %73, label %69, !dbg !12876

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12881
  %71 = sub i32 %70, %62, !dbg !12884
  %72 = icmp ugt i32 %71, 5000, !dbg !12885
  br i1 %72, label %115, label %63, !dbg !12886, !llvm.loop !12887

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12889
  %75 = and i32 %74, 7, !dbg !12889
  %76 = icmp ugt i32 %75, %1, !dbg !12891
  br i1 %76, label %77, label %82, !dbg !12892

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12893
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12893
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12895
  %80 = and i32 %79, 7, !dbg !12895
  %81 = icmp eq i32 %80, %1, !dbg !12897
  br i1 %81, label %82, label %115, !dbg !12898

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12899
  %84 = and i32 %83, 4, !dbg !12901
  %85 = icmp eq i32 %84, 0, !dbg !12902
  br i1 %85, label %93, label %86, !dbg !12903

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12904
  %88 = and i32 %87, -7169, !dbg !12904
  %89 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !12904
  %90 = load i32, i32* %89, align 4, !dbg !12904
  %91 = or i32 %88, %90, !dbg !12904
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12904
  %92 = load i32, i32* %14, align 4, !dbg !12906
  br label %93, !dbg !12908

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12906
  %95 = and i32 %94, 8, !dbg !12909
  %96 = icmp eq i32 %95, 0, !dbg !12910
  br i1 %96, label %104, label %97, !dbg !12911

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12912
  %99 = and i32 %98, -57345, !dbg !12912
  %100 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !12912
  %101 = load i32, i32* %100, align 4, !dbg !12912
  %102 = shl i32 %101, 3, !dbg !12912
  %103 = or i32 %102, %99, !dbg !12912
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12912
  br label %104, !dbg !12914

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !12915
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  %107 = lshr i32 %106, 4, !dbg !12917
  %108 = and i32 %107, 15, !dbg !12917
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12918
  %110 = load i8, i8* %109, align 1, !dbg !12918
  %111 = zext i8 %110 to i32, !dbg !12918
  %112 = lshr i32 %105, %111, !dbg !12919
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12920
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12921
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12922
  br label %115, !dbg !12923

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12812
  ret i32 %116, !dbg !12924
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12925 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12927, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12928, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12929, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12930, metadata !DIExpression()), !dbg !12931
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12932
  %2 = and i32 %1, 12, !dbg !12933
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12934

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12930, metadata !DIExpression()), !dbg !12931
  br label %24, !dbg !12935

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12938
  %6 = and i32 %5, 63, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %6, metadata !12927, metadata !DIExpression()), !dbg !12931
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12941
  %8 = and i32 %7, 4194304, !dbg !12941
  %9 = icmp eq i32 %8, 0, !dbg !12943
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12944
  %11 = lshr i32 %10, 6, !dbg !12944
  %12 = and i32 %11, 511, !dbg !12944
  %13 = zext i32 %12 to i64, !dbg !12944
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12944
  %16 = zext i32 %6 to i64, !dbg !12944
  %17 = udiv i64 %15, %16, !dbg !12944
  %18 = trunc i64 %17 to i32, !dbg !12944
  call void @llvm.dbg.value(metadata i32 %18, metadata !12928, metadata !DIExpression()), !dbg !12931
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12945
  %20 = lshr i32 %19, 15, !dbg !12946
  %21 = and i32 %20, 6, !dbg !12946
  %22 = add nuw nsw i32 %21, 2, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %22, metadata !12929, metadata !DIExpression()), !dbg !12931
  %23 = udiv i32 %18, %22, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %23, metadata !12930, metadata !DIExpression()), !dbg !12931
  br label %24, !dbg !12948

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12949
  call void @llvm.dbg.value(metadata i32 %25, metadata !12930, metadata !DIExpression()), !dbg !12931
  ret i32 %25, !dbg !12950
}

; Function Attrs: optsize
declare !dbg !12951 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12954 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12958, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata i32 %1, metadata !12959, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata i32 %2, metadata !12960, metadata !DIExpression()), !dbg !12978
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !12979
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !12979
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !12961, metadata !DIExpression()), !dbg !12980
  %8 = icmp eq i32 %0, 0, !dbg !12981
  br i1 %8, label %9, label %23, !dbg !12982

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12983
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12983
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12971, metadata !DIExpression()), !dbg !12983
  store volatile i32 0, i32* %5, align 4, !dbg !12983
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12983
  %12 = or i32 %11, 1, !dbg !12983
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12983
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12983
  %14 = and i32 %13, 1, !dbg !12983
  store volatile i32 %14, i32* %5, align 4, !dbg !12983
  %15 = load volatile i32, i32* %5, align 4, !dbg !12983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12984
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !12985
  store i32 256, i32* %16, align 4, !dbg !12986
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !12987
  store i32 2, i32* %17, align 4, !dbg !12988
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !12989
  store i32 3, i32* %18, align 4, !dbg !12990
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !12991
  store i32 0, i32* %19, align 4, !dbg !12992
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !12993
  store i32 0, i32* %20, align 4, !dbg !12994
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !12995
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12996
  %22 = and i32 %21, -123731969, !dbg !12996
  br label %38, !dbg !12997

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12998
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12975, metadata !DIExpression()), !dbg !12998
  store volatile i32 0, i32* %6, align 4, !dbg !12998
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12998
  %26 = or i32 %25, 4, !dbg !12998
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12998
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12998
  %28 = and i32 %27, 4, !dbg !12998
  store volatile i32 %28, i32* %6, align 4, !dbg !12998
  %29 = load volatile i32, i32* %6, align 4, !dbg !12998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12999
  %30 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !13000
  store i32 512, i32* %30, align 4, !dbg !13001
  %31 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !13002
  store i32 2, i32* %31, align 4, !dbg !13003
  %32 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !13004
  store i32 3, i32* %32, align 4, !dbg !13005
  %33 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !13006
  store i32 0, i32* %33, align 4, !dbg !13007
  %34 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !13008
  store i32 0, i32* %34, align 4, !dbg !13009
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !13010
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13011
  %36 = and i32 %35, 134217727, !dbg !13011
  %37 = shl i32 %2, 3, !dbg !13011
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13012
  %42 = or i32 %41, %40, !dbg !13012
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13012
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !13013
  ret void, !dbg !13013
}

; Function Attrs: optsize
declare !dbg !13014 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.msg* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #18 !dbg !13018 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #18 !dbg !13021 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13022
  ret void, !dbg !13023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #13 !dbg !13024 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13025
  ret i32 %1, !dbg !13026
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #7 !dbg !13027 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13028
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13029
  %3 = lshr i32 %2, 10, !dbg !13030
  %4 = and i32 %3, 7, !dbg !13030
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13031
  %6 = load i8, i8* %5, align 1, !dbg !13031
  %7 = zext i8 %6 to i32, !dbg !13031
  %8 = lshr i32 %1, %7, !dbg !13032
  ret i32 %8, !dbg !13033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #7 !dbg !13034 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13035
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13036
  %3 = lshr i32 %2, 13, !dbg !13037
  %4 = and i32 %3, 7, !dbg !13037
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13038
  %6 = load i8, i8* %5, align 1, !dbg !13038
  %7 = zext i8 %6 to i32, !dbg !13038
  %8 = lshr i32 %1, %7, !dbg !13039
  ret i32 %8, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13041 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13045, metadata !DIExpression()), !dbg !13046
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13047
  store i32 15, i32* %2, align 4, !dbg !13048
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13049
  %4 = and i32 %3, 262144, !dbg !13051
  %5 = icmp eq i32 %4, 0, !dbg !13052
  br i1 %5, label %8, label %6, !dbg !13053

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13054
  store i32 327680, i32* %7, align 4, !dbg !13056
  br label %15, !dbg !13057

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13058
  %10 = and i32 %9, 65536, !dbg !13060
  %11 = icmp eq i32 %10, 0, !dbg !13061
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13062
  br i1 %11, label %14, label %13, !dbg !13063

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13064
  br label %15, !dbg !13066

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13067
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13069
  %17 = and i32 %16, 1, !dbg !13071
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13072
  store i32 %17, i32* %18, align 4, !dbg !13074
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13075
  %20 = lshr i32 %19, 3, !dbg !13076
  %21 = and i32 %20, 31, !dbg !13076
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13077
  store i32 %21, i32* %22, align 4, !dbg !13078
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13079
  %24 = and i32 %23, 4, !dbg !13081
  %25 = icmp eq i32 %24, 0, !dbg !13082
  br i1 %25, label %28, label %26, !dbg !13083

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13084
  store i32 5, i32* %27, align 4, !dbg !13086
  br label %35, !dbg !13087

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13088
  %30 = and i32 %29, 1, !dbg !13090
  %31 = icmp eq i32 %30, 0, !dbg !13091
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13092
  br i1 %31, label %34, label %33, !dbg !13093

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13094
  br label %35, !dbg !13096

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13097
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13099
  %37 = and i32 %36, 1, !dbg !13101
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13102
  store i32 %37, i32* %38, align 4, !dbg !13104
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13105
  %40 = and i32 %39, 16777216, !dbg !13107
  %41 = icmp eq i32 %40, 0, !dbg !13108
  %42 = select i1 %41, i32 1, i32 2, !dbg !13109
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13110
  store i32 %42, i32* %43, align 4, !dbg !13112
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13113
  %45 = and i32 %44, 4194304, !dbg !13114
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13115
  store i32 %45, i32* %46, align 4, !dbg !13116
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13117
  %48 = and i32 %47, 63, !dbg !13118
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13119
  store i32 %48, i32* %49, align 4, !dbg !13120
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13121
  %51 = lshr i32 %50, 6, !dbg !13122
  %52 = and i32 %51, 511, !dbg !13122
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13123
  store i32 %52, i32* %53, align 4, !dbg !13124
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13125
  %55 = shl i32 %54, 1, !dbg !13126
  %56 = and i32 %55, 393216, !dbg !13126
  %57 = add nuw nsw i32 %56, 131072, !dbg !13126
  %58 = lshr exact i32 %57, 16, !dbg !13127
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13128
  store i32 %58, i32* %59, align 4, !dbg !13129
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13130
  %61 = lshr i32 %60, 24, !dbg !13131
  %62 = and i32 %61, 15, !dbg !13131
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13132
  store i32 %62, i32* %63, align 4, !dbg !13133
  ret void, !dbg !13134
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.msg* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13135 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !13139, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.value(metadata i32* %1, metadata !13140, metadata !DIExpression()), !dbg !13141
  %3 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !13142
  store i32 15, i32* %3, align 4, !dbg !13143
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13144
  %5 = and i32 %4, 3, !dbg !13145
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !13146
  store i32 %5, i32* %6, align 4, !dbg !13147
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13148
  %8 = and i32 %7, 240, !dbg !13149
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !13150
  store i32 %8, i32* %9, align 4, !dbg !13151
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13152
  %11 = and i32 %10, 7168, !dbg !13153
  %12 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13154
  store i32 %11, i32* %12, align 4, !dbg !13155
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13156
  %14 = lshr i32 %13, 3, !dbg !13157
  %15 = and i32 %14, 7168, !dbg !13157
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13158
  store i32 %15, i32* %16, align 4, !dbg !13159
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13160
  %18 = and i32 %17, 7, !dbg !13161
  store i32 %18, i32* %1, align 4, !dbg !13162
  ret void, !dbg !13163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13164 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13165
  %2 = and i32 %1, 128, !dbg !13165
  %3 = icmp eq i32 %2, 0, !dbg !13165
  br i1 %3, label %5, label %4, !dbg !13167

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #28, !dbg !13168
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13170
  br label %5, !dbg !13171

5:                                                ; preds = %4, %0
  ret void, !dbg !13172
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13173 {
  ret void, !dbg !13174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #18 !dbg !13175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13178, metadata !DIExpression()), !dbg !13179
  tail call fastcc void @LL_InitTick(i32 noundef %0) #28, !dbg !13180
  ret void, !dbg !13181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #18 !dbg !13182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13185, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.value(metadata i32 1000, metadata !13186, metadata !DIExpression()), !dbg !13187
  %2 = udiv i32 %0, 1000, !dbg !13188
  %3 = add nsw i32 %2, -1, !dbg !13189
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13190
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13191
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13192
  ret void, !dbg !13193
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13194 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13196, metadata !DIExpression()), !dbg !13198
  %3 = bitcast i32* %2 to i8*, !dbg !13199
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13199
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13197, metadata !DIExpression()), !dbg !13200
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13201
  store volatile i32 %4, i32* %2, align 4, !dbg !13200
  %5 = load volatile i32, i32* %2, align 4, !dbg !13202
  %6 = icmp eq i32 %0, -1, !dbg !13203
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13196, metadata !DIExpression()), !dbg !13198
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13198
  call void @llvm.dbg.value(metadata i32 %8, metadata !13196, metadata !DIExpression()), !dbg !13198
  br label %9, !dbg !13205

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13196, metadata !DIExpression()), !dbg !13198
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13206
  call void @llvm.dbg.value(metadata i32 undef, metadata !13196, metadata !DIExpression()), !dbg !13198
  %12 = shl i32 %11, 15, !dbg !13198
  %13 = ashr i32 %12, 31, !dbg !13198
  %14 = add i32 %13, %10, !dbg !13198
  call void @llvm.dbg.value(metadata i32 %14, metadata !13196, metadata !DIExpression()), !dbg !13198
  %15 = icmp eq i32 %14, 0, !dbg !13205
  br i1 %15, label %16, label %9, !dbg !13205

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13209
  ret void, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #12 !dbg !13210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13212, metadata !DIExpression()), !dbg !13213
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13214
  ret void, !dbg !13215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #18 !dbg !13216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13221, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata i32 0, metadata !13224, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.value(metadata i32 0, metadata !13225, metadata !DIExpression()), !dbg !13226
  %2 = icmp eq i32 %0, 0, !dbg !13227
  br i1 %2, label %52, label %3, !dbg !13229

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13230
  %5 = icmp eq i32 %4, 16384, !dbg !13233
  br i1 %5, label %6, label %21, !dbg !13234

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13235
  %8 = select i1 %7, i32 0, i32 5, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %8, metadata !13224, metadata !DIExpression()), !dbg !13226
  %9 = add i32 %0, -120000001, !dbg !13239
  %10 = icmp ult i32 %9, 30000000, !dbg !13239
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13239
  call void @llvm.dbg.value(metadata i32 %11, metadata !13224, metadata !DIExpression()), !dbg !13226
  %12 = icmp ult i32 %9, -30000000, !dbg !13241
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13241
  call void @llvm.dbg.value(metadata i32 %13, metadata !13224, metadata !DIExpression()), !dbg !13226
  %14 = icmp ugt i32 %0, 60000000, !dbg !13243
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13245
  br i1 %16, label %21, label %17, !dbg !13245

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13246
  %19 = and i1 %18, %15, !dbg !13249
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13249
  br label %21, !dbg !13249

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13226
  call void @llvm.dbg.value(metadata i32 %22, metadata !13224, metadata !DIExpression()), !dbg !13226
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13250
  %24 = icmp eq i32 %23, 0, !dbg !13252
  br i1 %24, label %25, label %41, !dbg !13253

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !13254
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13257
  %29 = select i1 %28, i32 4, i32 %22, !dbg !13257
  call void @llvm.dbg.value(metadata i32 %29, metadata !13224, metadata !DIExpression()), !dbg !13226
  %30 = icmp ugt i32 %0, 90000000, !dbg !13258
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13260
  %33 = select i1 %32, i32 3, i32 %29, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %33, metadata !13224, metadata !DIExpression()), !dbg !13226
  %34 = icmp ugt i32 %0, 60000000, !dbg !13261
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13263
  br i1 %36, label %41, label %37, !dbg !13263

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !13264
  %39 = and i1 %38, %35, !dbg !13267
  %40 = select i1 %39, i32 1, i32 %33, !dbg !13267
  br label %41, !dbg !13267

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !13268
  call void @llvm.dbg.value(metadata i32 %42, metadata !13224, metadata !DIExpression()), !dbg !13226
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #28, !dbg !13269
  call void @llvm.dbg.value(metadata i32 2, metadata !13222, metadata !DIExpression()), !dbg !13226
  br label %43, !dbg !13270

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !13268
  call void @llvm.dbg.value(metadata i32 %44, metadata !13222, metadata !DIExpression()), !dbg !13226
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #28, !dbg !13271
  call void @llvm.dbg.value(metadata i32 %45, metadata !13223, metadata !DIExpression()), !dbg !13226
  %46 = add nsw i32 %44, -1, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %46, metadata !13222, metadata !DIExpression()), !dbg !13226
  %47 = icmp ne i32 %45, %42, !dbg !13274
  %48 = icmp ne i32 %46, 0, !dbg !13275
  %49 = select i1 %47, i1 %48, i1 false, !dbg !13275
  br i1 %49, label %43, label %50, !dbg !13276, !llvm.loop !13277

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !13279
  call void @llvm.dbg.value(metadata i32 %53, metadata !13225, metadata !DIExpression()), !dbg !13226
  ret i32 %53, !dbg !13280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #7 !dbg !13281 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13283
  %2 = and i32 %1, 16384, !dbg !13283
  ret i32 %2, !dbg !13284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #18 !dbg !13285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13287, metadata !DIExpression()), !dbg !13288
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13289
  %3 = and i32 %2, -8, !dbg !13289
  %4 = or i32 %3, %0, !dbg !13289
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13289
  ret void, !dbg !13290
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #7 !dbg !13291 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13292
  %2 = and i32 %1, 7, !dbg !13292
  ret i32 %2, !dbg !13293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !13294 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13312, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13313, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.value(metadata i32 0, metadata !13314, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.value(metadata i32 0, metadata !13315, metadata !DIExpression()), !dbg !13316
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13317
  %4 = icmp eq i32 %3, 0, !dbg !13319
  br i1 %4, label %5, label %21, !dbg !13320

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #28, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %6, metadata !13315, metadata !DIExpression()), !dbg !13316
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.209() #28, !dbg !13323
  %8 = icmp eq i32 %7, 1, !dbg !13325
  br i1 %8, label %13, label %9, !dbg !13326

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.210() #28, !dbg !13327
  br label %10, !dbg !13329

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.209() #28, !dbg !13330
  %12 = icmp eq i32 %11, 1, !dbg !13331
  br i1 %12, label %13, label %10, !dbg !13329, !llvm.loop !13332

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13334
  %15 = load i32, i32* %14, align 4, !dbg !13334
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13335
  %17 = load i32, i32* %16, align 4, !dbg !13335
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13336
  %19 = load i32, i32* %18, align 4, !dbg !13336
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #28, !dbg !13337
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #28, !dbg !13338
  call void @llvm.dbg.value(metadata i32 %20, metadata !13314, metadata !DIExpression()), !dbg !13316
  br label %21, !dbg !13339

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13340
  call void @llvm.dbg.value(metadata i32 %22, metadata !13314, metadata !DIExpression()), !dbg !13316
  ret i32 %22, !dbg !13341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #7 !dbg !13342 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13346, metadata !DIExpression()), !dbg !13347
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.213() #28, !dbg !13348
  %2 = icmp ne i32 %1, 0, !dbg !13350
  call void @llvm.dbg.value(metadata i1 %2, metadata !13346, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13347
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #28, !dbg !13351
  %4 = icmp ne i32 %3, 0, !dbg !13353
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13354
  %6 = zext i1 %5 to i32, !dbg !13354
  call void @llvm.dbg.value(metadata i32 %6, metadata !13346, metadata !DIExpression()), !dbg !13347
  ret i32 %6, !dbg !13355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !13356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13360, metadata !DIExpression()), !dbg !13363
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13361, metadata !DIExpression()), !dbg !13363
  call void @llvm.dbg.value(metadata i32 0, metadata !13362, metadata !DIExpression()), !dbg !13363
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13364
  %4 = load i32, i32* %3, align 4, !dbg !13364
  %5 = and i32 %4, 63, !dbg !13365
  %6 = udiv i32 %0, %5, !dbg !13366
  call void @llvm.dbg.value(metadata i32 %6, metadata !13362, metadata !DIExpression()), !dbg !13363
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13367
  %8 = load i32, i32* %7, align 4, !dbg !13367
  %9 = and i32 %8, 511, !dbg !13368
  %10 = mul i32 %9, %6, !dbg !13369
  call void @llvm.dbg.value(metadata i32 %10, metadata !13362, metadata !DIExpression()), !dbg !13363
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13370
  %12 = load i32, i32* %11, align 4, !dbg !13370
  %13 = lshr i32 %12, 15, !dbg !13371
  %14 = and i32 %13, 131070, !dbg !13371
  %15 = add nuw nsw i32 %14, 2, !dbg !13371
  %16 = udiv i32 %10, %15, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %16, metadata !13362, metadata !DIExpression()), !dbg !13363
  ret i32 %16, !dbg !13373
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.209() unnamed_addr #7 !dbg !13374 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13375
  %2 = lshr i32 %1, 1, !dbg !13376
  %3 = and i32 %2, 1, !dbg !13376
  ret i32 %3, !dbg !13377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.210() unnamed_addr #18 !dbg !13378 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13379
  %2 = or i32 %1, 1, !dbg !13379
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13379
  ret void, !dbg !13380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #18 !dbg !13381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13383, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.value(metadata i32 %1, metadata !13384, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.value(metadata i32 %2, metadata !13385, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.value(metadata i32 %3, metadata !13386, metadata !DIExpression()), !dbg !13387
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13388
  %6 = and i32 %5, -4227072, !dbg !13388
  %7 = or i32 %1, %0, !dbg !13388
  %8 = shl i32 %2, 6, !dbg !13388
  %9 = or i32 %7, %8, !dbg !13388
  %10 = or i32 %9, %6, !dbg !13388
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13388
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13389
  %12 = and i32 %11, -196609, !dbg !13389
  %13 = or i32 %12, %3, !dbg !13389
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #18 !dbg !13391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13395, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13396, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.value(metadata i32 0, metadata !13397, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.value(metadata i32 0, metadata !13398, metadata !DIExpression()), !dbg !13399
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13400
  %4 = load i32, i32* %3, align 4, !dbg !13400
  %5 = lshr i32 %4, 4, !dbg !13400
  %6 = and i32 %5, 15, !dbg !13400
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13400
  %8 = load i8, i8* %7, align 1, !dbg !13400
  %9 = zext i8 %8 to i32, !dbg !13400
  %10 = lshr i32 %0, %9, !dbg !13400
  call void @llvm.dbg.value(metadata i32 %10, metadata !13398, metadata !DIExpression()), !dbg !13399
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13401
  %12 = icmp ult i32 %11, %10, !dbg !13403
  br i1 %12, label %13, label %16, !dbg !13404

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13405
  call void @llvm.dbg.value(metadata i32 %14, metadata !13397, metadata !DIExpression()), !dbg !13399
  %15 = icmp eq i32 %14, 0, !dbg !13407
  br i1 %15, label %16, label %30, !dbg !13409

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.212() #28, !dbg !13410
  br label %17, !dbg !13412

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.213() #28, !dbg !13413
  %19 = icmp eq i32 %18, 1, !dbg !13414
  br i1 %19, label %20, label %17, !dbg !13412, !llvm.loop !13415

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13417
  tail call fastcc void @LL_RCC_SetAHBPrescaler.214(i32 noundef %21) #28, !dbg !13418
  tail call fastcc void @LL_RCC_SetSysClkSource.215() #28, !dbg !13419
  br label %22, !dbg !13420

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.216() #28, !dbg !13421
  %24 = icmp eq i32 %23, 8, !dbg !13422
  br i1 %24, label %25, label %22, !dbg !13420, !llvm.loop !13423

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13425
  %27 = load i32, i32* %26, align 4, !dbg !13425
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.217(i32 noundef %27) #28, !dbg !13426
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13427
  %29 = load i32, i32* %28, align 4, !dbg !13427
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.218(i32 noundef %29) #28, !dbg !13428
  br label %30, !dbg !13429

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13430
  %33 = icmp ugt i32 %32, %10, !dbg !13432
  br i1 %33, label %34, label %36, !dbg !13433

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13434
  call void @llvm.dbg.value(metadata i32 %35, metadata !13397, metadata !DIExpression()), !dbg !13399
  br label %36, !dbg !13436

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13399
  call void @llvm.dbg.value(metadata i32 %37, metadata !13397, metadata !DIExpression()), !dbg !13399
  %38 = icmp eq i32 %37, 0, !dbg !13437
  br i1 %38, label %39, label %40, !dbg !13439

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #28, !dbg !13440
  br label %40, !dbg !13442

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.212() unnamed_addr #18 !dbg !13444 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13445
  %2 = or i32 %1, 16777216, !dbg !13445
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13445
  ret void, !dbg !13446
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.213() unnamed_addr #7 !dbg !13447 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13448
  %2 = lshr i32 %1, 25, !dbg !13449
  %3 = and i32 %2, 1, !dbg !13449
  ret i32 %3, !dbg !13450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.214(i32 noundef %0) unnamed_addr #18 !dbg !13451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13453, metadata !DIExpression()), !dbg !13454
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13455
  %3 = and i32 %2, -241, !dbg !13455
  %4 = or i32 %3, %0, !dbg !13455
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13455
  ret void, !dbg !13456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.215() unnamed_addr #18 !dbg !13457 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13459, metadata !DIExpression()), !dbg !13460
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13461
  %2 = and i32 %1, -4, !dbg !13461
  %3 = or i32 %2, 2, !dbg !13461
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13461
  ret void, !dbg !13462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.216() unnamed_addr #7 !dbg !13463 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13464
  %2 = and i32 %1, 12, !dbg !13464
  ret i32 %2, !dbg !13465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.217(i32 noundef %0) unnamed_addr #18 !dbg !13466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13468, metadata !DIExpression()), !dbg !13469
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13470
  %3 = and i32 %2, -7169, !dbg !13470
  %4 = or i32 %3, %0, !dbg !13470
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13470
  ret void, !dbg !13471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.218(i32 noundef %0) unnamed_addr #18 !dbg !13472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13476
  %3 = and i32 %2, -57345, !dbg !13476
  %4 = or i32 %3, %0, !dbg !13476
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13476
  ret void, !dbg !13477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #7 !dbg !13478 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13479
  %2 = lshr i32 %1, 27, !dbg !13480
  %3 = and i32 %2, 1, !dbg !13480
  ret i32 %3, !dbg !13481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #18 !dbg !13482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13486, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 %1, metadata !13487, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13488, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13489, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 0, metadata !13490, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 0, metadata !13491, metadata !DIExpression()), !dbg !13492
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13493
  %6 = icmp eq i32 %5, 0, !dbg !13495
  br i1 %6, label %7, label %27, !dbg !13496

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #28, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %8, metadata !13491, metadata !DIExpression()), !dbg !13492
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.219() #28, !dbg !13499
  %10 = icmp eq i32 %9, 1, !dbg !13501
  br i1 %10, label %19, label %11, !dbg !13502

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13503
  br i1 %12, label %13, label %14, !dbg !13506

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #28, !dbg !13507
  br label %15, !dbg !13509

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.220() #28, !dbg !13510
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.221() #28, !dbg !13512
  br label %16, !dbg !13513

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.219() #28, !dbg !13514
  %18 = icmp eq i32 %17, 1, !dbg !13515
  br i1 %18, label %19, label %16, !dbg !13513, !llvm.loop !13516

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13518
  %21 = load i32, i32* %20, align 4, !dbg !13518
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13519
  %23 = load i32, i32* %22, align 4, !dbg !13519
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13520
  %25 = load i32, i32* %24, align 4, !dbg !13520
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #28, !dbg !13521
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #28, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %26, metadata !13490, metadata !DIExpression()), !dbg !13492
  br label %27, !dbg !13523

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13524
  call void @llvm.dbg.value(metadata i32 %28, metadata !13490, metadata !DIExpression()), !dbg !13492
  ret i32 %28, !dbg !13525
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.219() unnamed_addr #7 !dbg !13526 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13527
  %2 = lshr i32 %1, 17, !dbg !13528
  %3 = and i32 %2, 1, !dbg !13528
  ret i32 %3, !dbg !13529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #18 !dbg !13530 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13531
  %2 = or i32 %1, 262144, !dbg !13531
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13531
  ret void, !dbg !13532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.220() unnamed_addr #18 !dbg !13533 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13534
  %2 = and i32 %1, -262145, !dbg !13534
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13534
  ret void, !dbg !13535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.221() unnamed_addr #18 !dbg !13536 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13537
  %2 = or i32 %1, 65536, !dbg !13537
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13537
  ret void, !dbg !13538
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13539 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13542, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13558
  ret void, !dbg !13559
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13560 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13564, metadata !DIExpression()), !dbg !13566
  %2 = icmp eq i8* %0, null, !dbg !13567
  br i1 %2, label %29, label %3, !dbg !13569

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13570
  %5 = icmp eq i8 %4, 0, !dbg !13571
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13572
  br i1 %6, label %29, label %8, !dbg !13572

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13565, metadata !DIExpression()), !dbg !13566
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13573

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13565, metadata !DIExpression()), !dbg !13566
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #28, !dbg !13575
  br i1 %10, label %11, label %15, !dbg !13580

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13581
  %13 = load i8*, i8** %12, align 4, !dbg !13581
  %14 = icmp eq i8* %13, %0, !dbg !13582
  br i1 %14, label %29, label %15, !dbg !13583

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13584
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13565, metadata !DIExpression()), !dbg !13566
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13585
  br i1 %17, label %7, label %8, !dbg !13586, !llvm.loop !13587

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13565, metadata !DIExpression()), !dbg !13566
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #28, !dbg !13589
  br i1 %20, label %21, label %26, !dbg !13593

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13594
  %23 = load i8*, i8** %22, align 4, !dbg !13594
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13595
  %25 = icmp eq i32 %24, 0, !dbg !13596
  br i1 %25, label %29, label %26, !dbg !13597

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13598
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13565, metadata !DIExpression()), !dbg !13566
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13599
  br i1 %28, label %29, label %18, !dbg !13573, !llvm.loop !13600

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13566
  ret %struct.device* %30, !dbg !13602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !13603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13607, metadata !DIExpression()), !dbg !13608
  %2 = icmp eq %struct.device* %0, null, !dbg !13609
  br i1 %2, label %14, label %3, !dbg !13611

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13612
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13612
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13613
  %7 = load i8, i8* %6, align 1, !dbg !13613
  %8 = and i8 %7, 1, !dbg !13613
  %9 = icmp eq i8 %8, 0, !dbg !13613
  br i1 %9, label %14, label %10, !dbg !13614

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13615
  %12 = load i8, i8* %11, align 1, !dbg !13615
  %13 = icmp eq i8 %12, 0, !dbg !13616
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13608
  ret i1 %15, !dbg !13617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !13618 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13623, metadata !DIExpression()), !dbg !13624
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13625
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13627 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13635, metadata !DIExpression()), !dbg !13640
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13636, metadata !DIExpression()), !dbg !13640
  call void @llvm.dbg.value(metadata i8* %2, metadata !13637, metadata !DIExpression()), !dbg !13640
  %5 = bitcast i32* %4 to i8*, !dbg !13641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13641
  call void @llvm.dbg.value(metadata i32 0, metadata !13638, metadata !DIExpression()), !dbg !13640
  store i32 0, i32* %4, align 4, !dbg !13642
  call void @llvm.dbg.value(metadata i32* %4, metadata !13638, metadata !DIExpression(DW_OP_deref)), !dbg !13640
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13643
  call void @llvm.dbg.value(metadata i16* %6, metadata !13639, metadata !DIExpression()), !dbg !13640
  %7 = load i32, i32* %4, align 4, !dbg !13644
  call void @llvm.dbg.value(metadata i32 %7, metadata !13638, metadata !DIExpression()), !dbg !13640
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13646
  ret i32 %8, !dbg !13647
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13648 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13652, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.value(metadata i32* %1, metadata !13653, metadata !DIExpression()), !dbg !13658
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13659
  %4 = load i16*, i16** %3, align 4, !dbg !13659
  call void @llvm.dbg.value(metadata i16* %4, metadata !13654, metadata !DIExpression()), !dbg !13658
  %5 = icmp eq i16* %4, null, !dbg !13660
  br i1 %5, label %14, label %6, !dbg !13661

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13662
  call void @llvm.dbg.value(metadata i32 %7, metadata !13655, metadata !DIExpression()), !dbg !13662
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13663
  %9 = load i16, i16* %8, align 2, !dbg !13663
  %10 = add i16 %9, -32767, !dbg !13664
  %11 = icmp ult i16 %10, 2, !dbg !13664
  %12 = add i32 %7, 1, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %12, metadata !13655, metadata !DIExpression()), !dbg !13662
  br i1 %11, label %13, label %6, !dbg !13664, !llvm.loop !13667

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13670
  br label %14, !dbg !13671

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13673 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13677, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i32 %1, metadata !13678, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13679, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i8* %3, metadata !13680, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i32 0, metadata !13681, metadata !DIExpression()), !dbg !13689
  %5 = icmp eq i32 %1, 0, !dbg !13690
  br i1 %5, label %16, label %8, !dbg !13691

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13681, metadata !DIExpression()), !dbg !13689
  %7 = icmp eq i32 %15, %1, !dbg !13690
  br i1 %7, label %16, label %8, !dbg !13691, !llvm.loop !13692

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13681, metadata !DIExpression()), !dbg !13689
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13694
  %11 = load i16, i16* %10, align 2, !dbg !13694
  call void @llvm.dbg.value(metadata i16 %11, metadata !13683, metadata !DIExpression()), !dbg !13695
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #28, !dbg !13696
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13686, metadata !DIExpression()), !dbg !13695
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13697
  call void @llvm.dbg.value(metadata i32 %13, metadata !13687, metadata !DIExpression()), !dbg !13695
  %14 = icmp slt i32 %13, 0, !dbg !13698
  %15 = add nuw i32 %9, 1, !dbg !13700
  call void @llvm.dbg.value(metadata i32 %15, metadata !13681, metadata !DIExpression()), !dbg !13689
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13702 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13706, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13707, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13708, metadata !DIExpression()), !dbg !13709
  %2 = sext i16 %0 to i32, !dbg !13710
  %3 = icmp slt i16 %0, 1, !dbg !13712
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13713
  %6 = add nsw i32 %2, -1, !dbg !13713
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13713
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13713
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13707, metadata !DIExpression()), !dbg !13709
  ret %struct.device* %8, !dbg !13714
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13715 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13717, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13718, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata i8* %2, metadata !13719, metadata !DIExpression()), !dbg !13722
  %5 = bitcast i32* %4 to i8*, !dbg !13723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13723
  call void @llvm.dbg.value(metadata i32 0, metadata !13720, metadata !DIExpression()), !dbg !13722
  store i32 0, i32* %4, align 4, !dbg !13724
  call void @llvm.dbg.value(metadata i32* %4, metadata !13720, metadata !DIExpression(DW_OP_deref)), !dbg !13722
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13725
  call void @llvm.dbg.value(metadata i16* %6, metadata !13721, metadata !DIExpression()), !dbg !13722
  %7 = load i32, i32* %4, align 4, !dbg !13726
  call void @llvm.dbg.value(metadata i32 %7, metadata !13720, metadata !DIExpression()), !dbg !13722
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13727
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13728
  ret i32 %8, !dbg !13729
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13730 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13732, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i32* %1, metadata !13733, metadata !DIExpression()), !dbg !13737
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13738
  %4 = load i16*, i16** %3, align 4, !dbg !13738
  call void @llvm.dbg.value(metadata i16* %4, metadata !13734, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i32 0, metadata !13735, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i32 0, metadata !13736, metadata !DIExpression()), !dbg !13737
  %5 = icmp eq i16* %4, null, !dbg !13739
  br i1 %5, label %22, label %6, !dbg !13741

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13735, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i16* %8, metadata !13734, metadata !DIExpression()), !dbg !13737
  %9 = load i16, i16* %8, align 2, !dbg !13742
  %10 = icmp eq i16 %9, -32768, !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !13735, metadata !DIExpression()), !dbg !13737
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13747
  call void @llvm.dbg.value(metadata i16* %11, metadata !13734, metadata !DIExpression()), !dbg !13737
  %12 = zext i1 %10 to i32, !dbg !13748
  %13 = add i32 %7, %12, !dbg !13748
  call void @llvm.dbg.value(metadata i32 %13, metadata !13735, metadata !DIExpression()), !dbg !13737
  %14 = icmp eq i32 %13, 2, !dbg !13749
  br i1 %14, label %15, label %6, !dbg !13750

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13737
  call void @llvm.dbg.value(metadata i32 %16, metadata !13736, metadata !DIExpression()), !dbg !13737
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13751
  %18 = load i16, i16* %17, align 2, !dbg !13751
  %19 = icmp eq i16 %18, 32767, !dbg !13752
  %20 = add i32 %16, 1, !dbg !13753
  call void @llvm.dbg.value(metadata i32 %20, metadata !13736, metadata !DIExpression()), !dbg !13737
  br i1 %19, label %21, label %15, !dbg !13755, !llvm.loop !13756

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13758
  br label %22, !dbg !13759

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13760
  call void @llvm.dbg.value(metadata i16* %23, metadata !13734, metadata !DIExpression()), !dbg !13737
  ret i16* %23, !dbg !13761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !13762 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13765
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13766
  ret i32* %2, !dbg !13767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13768 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13918, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13919, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13920, metadata !DIExpression()), !dbg !13921
  ret void, !dbg !13922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13927, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata i32 %1, metadata !13928, metadata !DIExpression()), !dbg !13929
  ret void, !dbg !13930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13931 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13935, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i32 %1, metadata !13936, metadata !DIExpression()), !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13943, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata i8* %1, metadata !13944, metadata !DIExpression()), !dbg !13945
  ret i32 -134, !dbg !13946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13951, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8* %1, metadata !13952, metadata !DIExpression()), !dbg !13953
  ret i32 -134, !dbg !13954
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13958, metadata !DIExpression()), !dbg !13959
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13960, !srcloc !13966
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()) #26, !dbg !13967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13964, metadata !DIExpression()) #26, !dbg !13967
  br label %3, !dbg !13968

3:                                                ; preds = %3, %1
  br label %3, !dbg !13969, !llvm.loop !13972
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13979, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13980, metadata !DIExpression()), !dbg !13981
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.226, i32 0, i32 0), i32 noundef 69) #27, !dbg !13982
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13987
  unreachable, !dbg !13987
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13990, metadata !DIExpression()), !dbg !13991
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13992
  unreachable, !dbg !13992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13995, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13996, metadata !DIExpression()), !dbg !13999
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14000, !srcloc !13966
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()) #26, !dbg !14002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13964, metadata !DIExpression()) #26, !dbg !14002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13997, metadata !DIExpression()), !dbg !13999
  %4 = tail call fastcc %struct.k_thread* @k_current_get.229() #29, !dbg !14003
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13998, metadata !DIExpression()), !dbg !13999
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #28, !dbg !14004
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.230, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14004
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14009
  br i1 %6, label %13, label %7, !dbg !14011

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14012, metadata !DIExpression()), !dbg !14017
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14019
  %9 = load i32, i32* %8, align 4, !dbg !14019
  %10 = and i32 %9, 511, !dbg !14020
  %11 = icmp eq i32 %10, 0, !dbg !14021
  br i1 %11, label %13, label %12, !dbg !14022

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 69) #27, !dbg !14023
  br label %13, !dbg !14029

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #28, !dbg !14030
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.232, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14030
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !14035
  %15 = icmp eq i32 %0, 4, !dbg !14036
  br i1 %15, label %16, label %17, !dbg !14041

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.235, i32 0, i32 0), i32 noundef 148) #27, !dbg !14042
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.236, i32 0, i32 0)) #27, !dbg !14042
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.235, i32 0, i32 0), i32 noundef 148) #27, !dbg !14042
  unreachable, !dbg !14042

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14000
  call void @llvm.dbg.value(metadata i32 %18, metadata !13963, metadata !DIExpression()) #26, !dbg !14002
  call void @llvm.dbg.value(metadata i32 %18, metadata !13997, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i32 undef, metadata !14044, metadata !DIExpression()) #26, !dbg !14047
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14049, !srcloc !14050
  tail call fastcc void @k_thread_abort.237(%struct.k_thread* noundef %4) #28, !dbg !14051
  ret void, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.229() unnamed_addr #6 !dbg !14055 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.245() #29, !dbg !14059
  ret %struct.k_thread* %1, !dbg !14060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14065, metadata !DIExpression()), !dbg !14066
  %2 = icmp ult i32 %0, 5, !dbg !14067
  br i1 %2, label %3, label %6, !dbg !14067

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14067
  %5 = load i8*, i8** %4, align 4, !dbg !14067
  br label %6, !dbg !14067

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.239, i32 0, i32 0), %1 ], !dbg !14068
  ret i8* %7, !dbg !14070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14071 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14075, metadata !DIExpression()), !dbg !14077
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14078
  br i1 %2, label %9, label %3, !dbg !14079

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14080
  call void @llvm.dbg.value(metadata i8* %4, metadata !14076, metadata !DIExpression()), !dbg !14077
  %5 = icmp eq i8* %4, null, !dbg !14081
  br i1 %5, label %9, label %6, !dbg !14083

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14084
  %8 = icmp eq i8 %7, 0, !dbg !14085
  br i1 %8, label %9, label %10, !dbg !14086

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.238, i32 0, i32 0), metadata !14076, metadata !DIExpression()), !dbg !14077
  br label %10, !dbg !14087

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.238, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14077
  call void @llvm.dbg.value(metadata i8* %11, metadata !14076, metadata !DIExpression()), !dbg !14077
  ret i8* %11, !dbg !14089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.237(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14090 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14096, !srcloc !14098
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14099
  ret void, !dbg !14100
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.245() unnamed_addr #6 !dbg !14101 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14102, !srcloc !14104
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14105
  ret %struct.k_thread* %1, !dbg !14106
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14111, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata i32 %1, metadata !14112, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata i32 %2, metadata !14113, metadata !DIExpression()), !dbg !14114
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14115
  ret void, !dbg !14116
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14121, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8* %1, metadata !14122, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %2, metadata !14123, metadata !DIExpression()), !dbg !14124
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14125
  ret void, !dbg !14126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14127 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #28, !dbg !14128
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #28, !dbg !14129
  ret void, !dbg !14130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14133, metadata !DIExpression()), !dbg !14134
  tail call fastcc void @init_idle_thread(i32 noundef %0) #28, !dbg !14135
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14136
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14137
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14138
  %4 = trunc i32 %0 to i8, !dbg !14139
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !14140
  store i8 %4, i8* %5, align 4, !dbg !14141
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14142
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #28, !dbg !14143
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14144
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14145
  store i8* %8, i8** %9, align 4, !dbg !14146
  ret void, !dbg !14147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14150, metadata !DIExpression()), !dbg !14156
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14157
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14151, metadata !DIExpression()), !dbg !14156
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14158
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14152, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.value(metadata i8* null, metadata !14155, metadata !DIExpression()), !dbg !14156
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14159
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14160
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14161
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #28, !dbg !14162
  ret void, !dbg !14163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14164 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14168, metadata !DIExpression()), !dbg !14169
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14170
  ret i8* %2, !dbg !14171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14177, metadata !DIExpression()), !dbg !14178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14179
  %3 = load i8, i8* %2, align 1, !dbg !14180
  %4 = and i8 %3, -5, !dbg !14180
  store i8 %4, i8* %2, align 1, !dbg !14180
  ret void, !dbg !14181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14184, metadata !DIExpression()), !dbg !14186
  call void @llvm.dbg.value(metadata i32 %1, metadata !14185, metadata !DIExpression()), !dbg !14186
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #28, !dbg !14187
  ret void, !dbg !14188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !14189 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14194, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %1, metadata !14195, metadata !DIExpression()), !dbg !14196
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14197, !srcloc !14199
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #27, !dbg !14200
  ret void, !dbg !14201
}

; Function Attrs: optsize
declare !dbg !14202 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14203 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #28, !dbg !14206
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14207
  %3 = ptrtoint i8* %2 to i32, !dbg !14216
  %4 = add i32 %3, 2048, !dbg !14217
  call void @llvm.dbg.value(metadata i32 %4, metadata !14211, metadata !DIExpression()) #26, !dbg !14218
  call void @llvm.dbg.value(metadata i32 %4, metadata !14219, metadata !DIExpression()) #26, !dbg !14222
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14224, !srcloc !14225
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14226
  %6 = or i32 %5, 512, !dbg !14226
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14226
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -2, i32 noundef 255) #27, !dbg !14227
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -5, i32 noundef 0) #27, !dbg !14230
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -12, i32 noundef 0) #27, !dbg !14231
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -11, i32 noundef 0) #27, !dbg !14232
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -10, i32 noundef 0) #27, !dbg !14233
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -4, i32 noundef 0) #27, !dbg !14234
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14235
  %8 = or i32 %7, 458752, !dbg !14235
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14235
  tail call void @z_arm_fault_init() #27, !dbg !14236
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14237
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14238
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14241
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14242
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14243
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14244
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14244
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14205, metadata !DIExpression()), !dbg !14245
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #28, !dbg !14246
  call void @z_device_state_init() #27, !dbg !14247
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #28, !dbg !14248
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #28, !dbg !14249
  %11 = call fastcc i8* @prepare_multithreading() #28, !dbg !14250
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14251
  unreachable, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2210, metadata !DIExpression()), !dbg !14252
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14253
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14253
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !14252
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !14252
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14254
  br i1 %7, label %8, label %35, !dbg !14255

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2211, metadata !DIExpression()), !dbg !14252
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14256
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14256
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2221, metadata !DIExpression()), !dbg !14257
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14258
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14258
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14259
  call void @llvm.dbg.value(metadata i32 %14, metadata !2225, metadata !DIExpression()), !dbg !14257
  %15 = icmp eq %struct.device* %11, null, !dbg !14260
  br i1 %15, label %32, label %16, !dbg !14262

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14263
  br i1 %17, label %26, label %18, !dbg !14266

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14267
  call void @llvm.dbg.value(metadata i32 %19, metadata !2225, metadata !DIExpression()), !dbg !14257
  %20 = icmp ult i32 %19, 255, !dbg !14269
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %21, metadata !2225, metadata !DIExpression()), !dbg !14257
  %22 = trunc i32 %21 to i8, !dbg !14270
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14271
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14271
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14272
  store i8 %22, i8* %25, align 1, !dbg !14273
  br label %26, !dbg !14274

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14275
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14275
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14276
  %30 = load i8, i8* %29, align 1, !dbg !14277
  %31 = or i8 %30, 1, !dbg !14277
  store i8 %31, i8* %29, align 1, !dbg !14277
  br label %32, !dbg !14278

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2211, metadata !DIExpression()), !dbg !14252
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14254
  br i1 %34, label %8, label %35, !dbg !14255, !llvm.loop !14280

35:                                               ; preds = %32, %1
  ret void, !dbg !14282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.254(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !14283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14285, metadata !DIExpression()), !dbg !14287
  call void @llvm.dbg.value(metadata i32 %1, metadata !14286, metadata !DIExpression()), !dbg !14287
  %3 = trunc i32 %1 to i8, !dbg !14288
  %4 = shl i8 %3, 4, !dbg !14288
  %5 = and i32 %0, 15, !dbg !14291
  %6 = add nsw i32 %5, -4, !dbg !14292
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14293
  store volatile i8 %4, i8* %7, align 1, !dbg !14294
  ret void, !dbg !14295
}

; Function Attrs: optsize
declare !dbg !14296 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !14297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14300, metadata !DIExpression()), !dbg !14301
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14302
  store i8 1, i8* %2, align 1, !dbg !14303
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14304
  store i8 1, i8* %3, align 4, !dbg !14305
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14306
  store i32 0, i32* %4, align 4, !dbg !14307
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14308
  store i32 0, i32* %5, align 4, !dbg !14309
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14310
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14311
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14312
  ret void, !dbg !14313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14314 {
  tail call void @z_sched_init() #27, !dbg !14319
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14320
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.255, i32 0, i32 0)) #27, !dbg !14321
  call void @llvm.dbg.value(metadata i8* %1, metadata !14318, metadata !DIExpression()), !dbg !14322
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14323
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14324
  tail call void @z_init_cpu(i32 noundef 0) #28, !dbg !14325
  ret i8* %1, !dbg !14326
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14331, metadata !DIExpression()), !dbg !14332
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14333
  unreachable, !dbg !14334
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14335 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14337, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i8* %1, metadata !14338, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i8* %2, metadata !14339, metadata !DIExpression()), !dbg !14340
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14341
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #28, !dbg !14342
  tail call void @boot_banner() #27, !dbg !14343
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #28, !dbg !14344
  tail call void @z_init_static_threads() #27, !dbg !14345
  tail call void @main() #27, !dbg !14346
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14347
  %5 = and i8 %4, -2, !dbg !14347
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14347
  ret void, !dbg !14348
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14349 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14359, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i8* %1, metadata !14360, metadata !DIExpression()), !dbg !14361
  ret void, !dbg !14362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14363 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14365, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8* %1, metadata !14366, metadata !DIExpression()), !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14369 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14370, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 %1, metadata !14373, metadata !DIExpression()) #26, !dbg !14378
  %2 = icmp ne i32 %1, 0, !dbg !14379
  ret i1 %2, !dbg !14380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !14381 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14382
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14383
  %3 = load i8, i8* %2, align 4, !dbg !14384
  %4 = or i8 %3, 1, !dbg !14384
  store i8 %4, i8* %2, align 4, !dbg !14384
  ret void, !dbg !14385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !14386 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14387
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14388
  %3 = load i8, i8* %2, align 4, !dbg !14389
  %4 = and i8 %3, -2, !dbg !14389
  store i8 %4, i8* %2, align 4, !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !14391 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14393
  %3 = load i8, i8* %2, align 4, !dbg !14393
  %4 = and i8 %3, 1, !dbg !14394
  %5 = icmp ne i8 %4, 0, !dbg !14395
  ret i1 %5, !dbg !14396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14401, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i8* %1, metadata !14402, metadata !DIExpression()), !dbg !14403
  ret i32 -88, !dbg !14404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14409, metadata !DIExpression()), !dbg !14410
  ret i8* null, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14416, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata i8* %1, metadata !14417, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata i32 %2, metadata !14418, metadata !DIExpression()), !dbg !14419
  ret i32 -88, !dbg !14420
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2350, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i8* %1, metadata !2351, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i32 %2, metadata !2352, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i32 0, metadata !2353, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i8 undef, metadata !2355, metadata !DIExpression()), !dbg !14421
  %4 = icmp eq i8* %1, null, !dbg !14422
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14424
  br i1 %6, label %46, label %7, !dbg !14424

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14425
  %9 = load i8, i8* %8, align 1, !dbg !14425
  call void @llvm.dbg.value(metadata i8 %9, metadata !2355, metadata !DIExpression()), !dbg !14421
  %10 = add i32 %2, -1, !dbg !14426
  call void @llvm.dbg.value(metadata i32 %10, metadata !2352, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i8 0, metadata !2356, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata i8 %9, metadata !2355, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i32 0, metadata !2353, metadata !DIExpression()), !dbg !14421
  %11 = icmp eq i8 %9, 0, !dbg !14428
  br i1 %11, label %12, label %15, !dbg !14430

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14431
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14432
  store i8 0, i8* %14, align 1, !dbg !14433
  br label %46, !dbg !14434

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2356, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata i8 %17, metadata !2355, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i32 %18, metadata !2353, metadata !DIExpression()), !dbg !14421
  %19 = zext i8 %17 to i32, !dbg !14435
  %20 = zext i8 %16 to i32, !dbg !14436
  %21 = shl nuw i32 1, %20, !dbg !14436
  call void @llvm.dbg.value(metadata i32 %21, metadata !2354, metadata !DIExpression()), !dbg !14421
  %22 = and i32 %21, %19, !dbg !14438
  %23 = icmp eq i32 %22, 0, !dbg !14440
  br i1 %23, label %42, label %24, !dbg !14441

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14442
  %26 = sub i32 %10, %18, !dbg !14443
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14444
  %28 = load i8*, i8** %27, align 4, !dbg !14444
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14445
  %30 = load i32, i32* %29, align 4, !dbg !14445
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #28, !dbg !14446
  %32 = add i32 %31, %18, !dbg !14447
  call void @llvm.dbg.value(metadata i32 %32, metadata !2353, metadata !DIExpression()), !dbg !14421
  %33 = trunc i32 %21 to i8, !dbg !14448
  %34 = xor i8 %33, -1, !dbg !14448
  %35 = and i8 %17, %34, !dbg !14448
  call void @llvm.dbg.value(metadata i8 %35, metadata !2355, metadata !DIExpression()), !dbg !14421
  %36 = icmp eq i8 %35, 0, !dbg !14449
  br i1 %36, label %12, label %37, !dbg !14451

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14452
  %39 = sub i32 %10, %32, !dbg !14454
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.258, i32 0, i32 0), i32 noundef 1) #28, !dbg !14455
  %41 = add i32 %40, %32, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %41, metadata !2353, metadata !DIExpression()), !dbg !14421
  br label %42, !dbg !14457

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14421
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14421
  call void @llvm.dbg.value(metadata i8 %44, metadata !2355, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i32 %43, metadata !2353, metadata !DIExpression()), !dbg !14421
  %45 = add i8 %16, 1, !dbg !14458
  call void @llvm.dbg.value(metadata i8 %45, metadata !2356, metadata !DIExpression()), !dbg !14427
  br label %15, !dbg !14430

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.259, i32 0, i32 0), %3 ], !dbg !14421
  ret i8* %47, !dbg !14459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14464, metadata !DIExpression()), !dbg !14469
  call void @llvm.dbg.value(metadata i32 %1, metadata !14465, metadata !DIExpression()), !dbg !14469
  call void @llvm.dbg.value(metadata i8* %2, metadata !14466, metadata !DIExpression()), !dbg !14469
  call void @llvm.dbg.value(metadata i32 %3, metadata !14467, metadata !DIExpression()), !dbg !14469
  %5 = icmp ult i32 %1, %3, !dbg !14470
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14470
  call void @llvm.dbg.value(metadata i32 %6, metadata !14468, metadata !DIExpression()), !dbg !14469
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14471
  ret i32 %6, !dbg !14472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()), !dbg !14478
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14479
  ret void, !dbg !14480
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14491, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i32 %2, metadata !14492, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14493, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8* %4, metadata !14494, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8* %5, metadata !14495, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8* %6, metadata !14496, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i32 %7, metadata !14497, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i32 %8, metadata !14498, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8* undef, metadata !14499, metadata !DIExpression()), !dbg !14501
  %11 = icmp eq i32 %7, 15, !dbg !14502
  br i1 %11, label %12, label %15, !dbg !14502

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14502
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #28, !dbg !14502
  br i1 %14, label %19, label %18, !dbg !14502

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14502
  %17 = icmp ult i32 %16, 31, !dbg !14502
  br i1 %17, label %19, label %18, !dbg !14502

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 536) #27, !dbg !14506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.272, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !14506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 536) #27, !dbg !14506
  unreachable, !dbg !14506

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14508
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #28, !dbg !14509
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14510
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #28, !dbg !14511
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #28, !dbg !14512
  call void @llvm.dbg.value(metadata i8* %22, metadata !14500, metadata !DIExpression()), !dbg !14501
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14513
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14514
  store i8* null, i8** %23, align 4, !dbg !14515
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14516
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14516
  br i1 %25, label %29, label %26, !dbg !14518

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !14519
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !14519
  br label %29, !dbg !14520

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !14501
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14521
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !14523
  ret i8* %22, !dbg !14524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !14525 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14529, metadata !DIExpression()), !dbg !14530
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14531
  ret i1 %2, !dbg !14532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !14533 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14538, metadata !DIExpression()), !dbg !14539
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14540
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #28, !dbg !14541
  ret void, !dbg !14542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14543 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14548, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 %1, metadata !14549, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 %2, metadata !14550, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata i32 %3, metadata !14551, metadata !DIExpression()), !dbg !14552
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14553
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14554
  %6 = trunc i32 %3 to i8, !dbg !14555
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14556
  store i8 %6, i8* %7, align 4, !dbg !14557
  %8 = trunc i32 %2 to i8, !dbg !14558
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14559
  store i8 %8, i8* %9, align 1, !dbg !14560
  %10 = trunc i32 %1 to i8, !dbg !14561
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14562
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14562
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14562
  store i8 %10, i8* %13, align 2, !dbg !14563
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14564
  store i8 0, i8* %14, align 1, !dbg !14565
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #28, !dbg !14566
  ret void, !dbg !14567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !14568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14572, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14573, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata i32 %2, metadata !14574, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata i32 0, metadata !14579, metadata !DIExpression()), !dbg !14580
  %4 = add i32 %2, 7, !dbg !14581
  %5 = and i32 %4, -8, !dbg !14581
  %6 = add i32 %5, 64, !dbg !14581
  call void @llvm.dbg.value(metadata i32 %6, metadata !14575, metadata !DIExpression()), !dbg !14580
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.273(%struct.z_thread_stack_element* noundef %1) #28, !dbg !14583
  call void @llvm.dbg.value(metadata i8* %7, metadata !14578, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata i32 %5, metadata !14576, metadata !DIExpression()), !dbg !14580
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14584
  call void @llvm.dbg.value(metadata i8* %8, metadata !14577, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata i32 0, metadata !14579, metadata !DIExpression()), !dbg !14580
  %9 = ptrtoint i8* %7 to i32, !dbg !14585
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14586
  store i32 %9, i32* %10, align 4, !dbg !14587
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14588
  store i32 %5, i32* %11, align 4, !dbg !14589
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14590
  store i32 0, i32* %12, align 4, !dbg !14591
  call void @llvm.dbg.value(metadata i8* %8, metadata !14577, metadata !DIExpression()), !dbg !14580
  ret i8* %8, !dbg !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.273(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14593 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14597, metadata !DIExpression()), !dbg !14598
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14599
  ret i8* %2, !dbg !14600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14606, metadata !DIExpression()), !dbg !14607
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14608
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !14609
  ret void, !dbg !14610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14613, metadata !DIExpression()), !dbg !14614
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14615
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #28, !dbg !14616
  ret void, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14622, metadata !DIExpression()), !dbg !14623
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14624
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14625
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14626
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14627
  ret void, !dbg !14628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14629 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14634, metadata !DIExpression()), !dbg !14635
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14636
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14637
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14638
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14639
  ret void, !dbg !14640
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14641 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14658, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14649, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14650, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i32 %2, metadata !14651, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14652, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i8* %4, metadata !14653, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i8* %5, metadata !14654, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i8* %6, metadata !14655, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i32 %7, metadata !14656, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i32 %8, metadata !14657, metadata !DIExpression()), !dbg !14659
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14660, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 %11, metadata !14373, metadata !DIExpression()) #26, !dbg !14665
  %12 = icmp eq i32 %11, 0, !dbg !14666
  br i1 %12, label %14, label %13, !dbg !14667

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 647) #27, !dbg !14668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.277, i32 0, i32 0)) #27, !dbg !14668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 647) #27, !dbg !14668
  unreachable, !dbg !14668

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14658, metadata !DIExpression()), !dbg !14659
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #28, !dbg !14670
  %17 = icmp eq i64 %15, -1, !dbg !14671
  br i1 %17, label %19, label %18, !dbg !14673

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #28, !dbg !14674
  br label %19, !dbg !14676

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14678 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14683, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14682, metadata !DIExpression()), !dbg !14684
  %4 = icmp eq i64 %3, 0, !dbg !14685
  br i1 %4, label %5, label %6, !dbg !14687

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14688
  br label %7, !dbg !14690

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !14691
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14698, metadata !DIExpression()), !dbg !14699
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14700, !srcloc !14702
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14703
  ret void, !dbg !14704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14705 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14708, metadata !DIExpression()), !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14707, metadata !DIExpression()), !dbg !14709
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14710
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14711
  ret void, !dbg !14712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14713 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14715, metadata !DIExpression()), !dbg !14734
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14735

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 750) #27, !dbg !14739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.281, i32 0, i32 0)) #27, !dbg !14739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 750) #27, !dbg !14739
  unreachable, !dbg !14739

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14715, metadata !DIExpression()), !dbg !14734
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14742
  br i1 %4, label %6, label %5, !dbg !14743

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14744
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14732, metadata !DIExpression()), !dbg !14745
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !14746

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14750
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14750
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14752
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14752
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14753
  %12 = load i32, i32* %11, align 4, !dbg !14753
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14754
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14754
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14755
  %16 = load i8*, i8** %15, align 4, !dbg !14755
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14756
  %18 = load i8*, i8** %17, align 4, !dbg !14756
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14757
  %20 = load i8*, i8** %19, align 4, !dbg !14757
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14758
  %22 = load i32, i32* %21, align 4, !dbg !14758
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14759
  %24 = load i32, i32* %23, align 4, !dbg !14759
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #28, !dbg !14760
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14761
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !14762
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !14763
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !14763
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14764
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !14715, metadata !DIExpression()), !dbg !14734
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14765
  br i1 %30, label %1, label %2, !dbg !14735, !llvm.loop !14766

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 781) #27, !dbg !14768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.281, i32 0, i32 0)) #27, !dbg !14768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.271, i32 0, i32 0), i32 noundef 781) #27, !dbg !14768
  unreachable, !dbg !14768

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !14732, metadata !DIExpression()), !dbg !14745
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14771
  br i1 %34, label %36, label %35, !dbg !14772

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !14773
  ret void, !dbg !14774

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !14775
  %38 = load i32, i32* %37, align 4, !dbg !14775
  %39 = icmp eq i32 %38, -1, !dbg !14778
  br i1 %39, label %48, label %40, !dbg !14779

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !14780
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !14780
  %43 = icmp sgt i32 %38, 0, !dbg !14782
  %44 = select i1 %43, i32 %38, i32 0, !dbg !14782
  %45 = zext i32 %44 to i64, !dbg !14782
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #28, !dbg !14782
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !14783
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #28, !dbg !14783
  br label %48, !dbg !14784

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !14785
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !14732, metadata !DIExpression()), !dbg !14745
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14786
  br i1 %50, label %31, label %32, !dbg !14746, !llvm.loop !14787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !14789 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14794, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i64 %0, metadata !14796, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i32 1000, metadata !14801, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i32 10000, metadata !14802, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i8 1, metadata !14803, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i8 0, metadata !14804, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i8 1, metadata !14805, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i8 0, metadata !14806, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i8 1, metadata !14807, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i8 0, metadata !14808, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i64 0, metadata !14809, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i64 0, metadata !14809, metadata !DIExpression()), !dbg !14813
  %2 = mul i64 %0, 10, !dbg !14815
  ret i64 %2, !dbg !14821
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14822 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14824, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i8* %1, metadata !14825, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i8* %2, metadata !14826, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i8* %3, metadata !14827, metadata !DIExpression()), !dbg !14828
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14829
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14830
  %7 = load i8, i8* %6, align 4, !dbg !14831
  %8 = or i8 %7, 4, !dbg !14831
  store i8 %8, i8* %6, align 4, !dbg !14831
  tail call void @z_thread_essential_clear() #28, !dbg !14832
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14833
  unreachable, !dbg !14833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !14834 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14839, metadata !DIExpression()), !dbg !14841
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14842
  %3 = load i32, i32* %2, align 4, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14840, metadata !DIExpression()), !dbg !14841
  %4 = icmp eq i32 %3, 0, !dbg !14843
  br i1 %4, label %10, label %5, !dbg !14845

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14846
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14849
  %8 = zext i8 %7 to i32, !dbg !14850
  %9 = icmp eq i32 %6, %8, !dbg !14851
  br i1 %9, label %11, label %10, !dbg !14852

10:                                               ; preds = %5, %1
  br label %11, !dbg !14853

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14841
  ret i1 %12, !dbg !14854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !14855 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14857, metadata !DIExpression()), !dbg !14858
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14859
  %3 = load i32, i32* %2, align 4, !dbg !14859
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14861
  %5 = zext i8 %4 to i32, !dbg !14862
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14863
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14864
  %8 = or i32 %7, %5, !dbg !14865
  %9 = icmp eq i32 %3, %8, !dbg !14866
  br i1 %9, label %10, label %11, !dbg !14867

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14868
  br label %11, !dbg !14869

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14875, metadata !DIExpression()), !dbg !14876
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14877
  %3 = zext i8 %2 to i32, !dbg !14878
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14879
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14880
  %6 = or i32 %5, %3, !dbg !14881
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14882
  store i32 %6, i32* %7, align 4, !dbg !14883
  ret void, !dbg !14884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14889, metadata !DIExpression()), !dbg !14890
  ret i32 -134, !dbg !14891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14892 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14896, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i32 %1, metadata !14897, metadata !DIExpression()), !dbg !14898
  ret i32 -134, !dbg !14899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !14900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14908, metadata !DIExpression()), !dbg !14909
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14910
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14912
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14909
  ret i32 %6, !dbg !14913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !14914 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14918, metadata !DIExpression()), !dbg !14919
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14920
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14919
  ret i32 %3, !dbg !14922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14923 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14925
  ret void, !dbg !14926
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14927 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14929, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8* %1, metadata !14930, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8* %2, metadata !14931, metadata !DIExpression()), !dbg !14932
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14933
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14933
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14933
  %7 = load i8, i8* %6, align 2, !dbg !14933
  %8 = icmp sgt i8 %7, -1, !dbg !14933
  br i1 %8, label %10, label %9, !dbg !14936

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 39) #27, !dbg !14937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 39) #27, !dbg !14937
  unreachable, !dbg !14937

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14939, !srcloc !14946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14942, metadata !DIExpression()) #26, !dbg !14947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14943, metadata !DIExpression()) #26, !dbg !14947
  tail call fastcc void @k_cpu_idle() #28, !dbg !14948
  br label %10, !dbg !14949, !llvm.loop !14950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14952 {
  tail call void @arch_cpu_idle() #27, !dbg !14953
  ret void, !dbg !14954
}

; Function Attrs: optsize
declare !dbg !14955 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14974, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i8* %1, metadata !14975, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 %2, metadata !14976, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 %3, metadata !14977, metadata !DIExpression()), !dbg !14978
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14979
  store i32 %2, i32* %5, align 4, !dbg !14980
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14981
  store i32 %3, i32* %6, align 4, !dbg !14982
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14983
  store i8* %1, i8** %7, align 4, !dbg !14984
  %8 = mul i32 %3, %2, !dbg !14985
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14986
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14987
  store i8* %9, i8** %10, align 4, !dbg !14988
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14989
  store i8* %1, i8** %11, align 4, !dbg !14990
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14991
  store i8* %1, i8** %12, align 4, !dbg !14992
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14993
  store i32 0, i32* %13, align 4, !dbg !14994
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14995
  store i8 0, i8* %14, align 4, !dbg !14996
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14997
  tail call fastcc void @z_waitq_init.295(%union.anon* noundef %15) #28, !dbg !14998
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !14999
  store i32 0, i32* %16, align 4, !dbg !14999
  ret void, !dbg !15000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.295(%union.anon* noundef %0) unnamed_addr #12 !dbg !15001 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15005, metadata !DIExpression()), !dbg !15006
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15007
  tail call fastcc void @sys_dlist_init.296(%struct._dnode* noundef %2) #28, !dbg !15008
  ret void, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.296(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15015, metadata !DIExpression()), !dbg !15016
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15017
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15018
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15019
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15020
  ret void, !dbg !15021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15022 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15026, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.value(metadata i32 %1, metadata !15027, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.value(metadata i32 %2, metadata !15028, metadata !DIExpression()), !dbg !15032
  %5 = bitcast i32* %4 to i8*, !dbg !15033
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15033
  call void @llvm.dbg.value(metadata i32* %4, metadata !15031, metadata !DIExpression(DW_OP_deref)), !dbg !15032
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !15034
  br i1 %6, label %13, label %7, !dbg !15036

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15037
  call void @llvm.dbg.value(metadata i32 %8, metadata !15031, metadata !DIExpression()), !dbg !15032
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #28, !dbg !15039
  call void @llvm.dbg.value(metadata i8* %9, metadata !15029, metadata !DIExpression()), !dbg !15032
  %10 = icmp eq i8* %9, null, !dbg !15040
  br i1 %10, label %13, label %11, !dbg !15042

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #28, !dbg !15043
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15045
  store i8 1, i8* %12, align 4, !dbg !15046
  call void @llvm.dbg.value(metadata i32 0, metadata !15030, metadata !DIExpression()), !dbg !15032
  br label %13, !dbg !15047

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15048
  call void @llvm.dbg.value(metadata i32 %14, metadata !15030, metadata !DIExpression()), !dbg !15032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15049
  ret i32 %14, !dbg !15050
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15056, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata i32 %1, metadata !15057, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata i32* %2, metadata !15058, metadata !DIExpression()), !dbg !15059
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15060
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15060
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15060
  store i32 %6, i32* %2, align 4, !dbg !15060
  ret i1 %5, !dbg !15061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15066, metadata !DIExpression()), !dbg !15067
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15068
  ret i8* %2, !dbg !15069
}

; Function Attrs: optsize
declare !dbg !15070 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15073 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15077, metadata !DIExpression()), !dbg !15078
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15079
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #28, !dbg !15079
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15079
  br i1 %4, label %5, label %15, !dbg !15081

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15082
  %7 = load i8, i8* %6, align 4, !dbg !15082
  %8 = and i8 %7, 1, !dbg !15084
  %9 = icmp eq i8 %8, 0, !dbg !15085
  br i1 %9, label %15, label %10, !dbg !15086

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15087
  %12 = load i8*, i8** %11, align 4, !dbg !15087
  tail call void @k_free(i8* noundef %12) #27, !dbg !15089
  %13 = load i8, i8* %6, align 4, !dbg !15090
  %14 = and i8 %13, -2, !dbg !15090
  store i8 %14, i8* %6, align 4, !dbg !15090
  br label %15, !dbg !15091

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15078
  ret i32 %16, !dbg !15092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15093 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15097, metadata !DIExpression()), !dbg !15098
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15099
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #28, !dbg !15100
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15101
  ret %struct.k_thread* %4, !dbg !15102
}

; Function Attrs: optsize
declare !dbg !15103 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15108, metadata !DIExpression()), !dbg !15109
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #28, !dbg !15110
  br i1 %2, label %6, label %3, !dbg !15110

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15111
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15111
  br label %6, !dbg !15110

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15110
  ret %struct._dnode* %7, !dbg !15112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !15113 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15117, metadata !DIExpression()), !dbg !15118
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15119
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15119
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15120
  ret i1 %4, !dbg !15121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15122 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15132, metadata !DIExpression()), !dbg !15140
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15130, metadata !DIExpression()), !dbg !15140
  call void @llvm.dbg.value(metadata i8* %1, metadata !15131, metadata !DIExpression()), !dbg !15140
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15141, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 %5, metadata !15144, metadata !DIExpression()) #26, !dbg !15151
  %6 = icmp eq i32 %5, 0, !dbg !15152
  %7 = icmp eq i64 %4, 0, !dbg !15153
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15153
  br i1 %8, label %10, label %9, !dbg !15153

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 118) #27, !dbg !15154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.302, i32 0, i32 0)) #27, !dbg !15154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 118) #27, !dbg !15154
  unreachable, !dbg !15154

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15157, metadata !DIExpression()) #26, !dbg !15164
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15166, !srcloc !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #26, !dbg !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()) #26, !dbg !15164
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15174
  br i1 %13, label %15, label %14, !dbg !15177

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15178
  unreachable, !dbg !15178

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15166
  call void @llvm.dbg.value(metadata i32 %16, metadata !15169, metadata !DIExpression()) #26, !dbg !15173
  call void @llvm.dbg.value(metadata i32 %16, metadata !15163, metadata !DIExpression()) #26, !dbg !15164
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15180
  call void @llvm.dbg.value(metadata i32 %16, metadata !15134, metadata !DIExpression()), !dbg !15140
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15181
  %18 = load i32, i32* %17, align 4, !dbg !15181
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15183
  %20 = load i32, i32* %19, align 4, !dbg !15183
  %21 = icmp ult i32 %18, %20, !dbg !15184
  br i1 %21, label %22, label %52, !dbg !15185

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15186
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #27, !dbg !15188
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15133, metadata !DIExpression()), !dbg !15140
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15189
  br i1 %25, label %34, label %26, !dbg !15191

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15192
  %28 = load i8*, i8** %27, align 4, !dbg !15192
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15194
  %30 = load i32, i32* %29, align 4, !dbg !15194
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #27, !dbg !15195
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15196, metadata !DIExpression()), !dbg !15202
  call void @llvm.dbg.value(metadata i32 0, metadata !15201, metadata !DIExpression()), !dbg !15202
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15204
  store i32 0, i32* %32, align 4, !dbg !15205
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #27, !dbg !15206
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15207
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #27, !dbg !15207
  br label %64, !dbg !15208

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15209
  %36 = load i8*, i8** %35, align 4, !dbg !15209
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15211
  %38 = load i32, i32* %37, align 4, !dbg !15211
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #27, !dbg !15212
  %40 = load i32, i32* %37, align 4, !dbg !15213
  %41 = load i8*, i8** %35, align 4, !dbg !15214
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15214
  store i8* %42, i8** %35, align 4, !dbg !15214
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15215
  %44 = load i8*, i8** %43, align 4, !dbg !15215
  %45 = icmp eq i8* %42, %44, !dbg !15217
  br i1 %45, label %46, label %49, !dbg !15218

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15219
  %48 = load i8*, i8** %47, align 4, !dbg !15219
  store i8* %48, i8** %35, align 4, !dbg !15221
  br label %49, !dbg !15222

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15223
  %51 = add i32 %50, 1, !dbg !15223
  store i32 %51, i32* %17, align 4, !dbg !15223
  call void @llvm.dbg.value(metadata i32 0, metadata !15139, metadata !DIExpression()), !dbg !15140
  br label %59, !dbg !15224

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15225

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15226
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15229
  store i8* %1, i8** %55, align 4, !dbg !15230
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15231
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15232
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #27, !dbg !15232
  call void @llvm.dbg.value(metadata i32 %58, metadata !15139, metadata !DIExpression()), !dbg !15140
  br label %64, !dbg !15233

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15234
  call void @llvm.dbg.value(metadata i32 %60, metadata !15139, metadata !DIExpression()), !dbg !15140
  call void @llvm.dbg.value(metadata i32 undef, metadata !15235, metadata !DIExpression()) #26, !dbg !15241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15240, metadata !DIExpression()) #26, !dbg !15241
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15243
  br i1 %61, label %63, label %62, !dbg !15246

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #27, !dbg !15247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #27, !dbg !15247
  unreachable, !dbg !15247

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15235, metadata !DIExpression()) #26, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %16, metadata !15249, metadata !DIExpression()) #26, !dbg !15252
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15254, !srcloc !15255
  br label %64, !dbg !15256

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15140
  ret i32 %65, !dbg !15257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15268, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15269, metadata !DIExpression()), !dbg !15270
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15271
  %4 = load i32, i32* %3, align 4, !dbg !15271
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15272
  store i32 %4, i32* %5, align 4, !dbg !15273
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15274
  %7 = load i32, i32* %6, align 4, !dbg !15274
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15275
  store i32 %7, i32* %8, align 4, !dbg !15276
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15277
  %10 = load i32, i32* %9, align 4, !dbg !15277
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15278
  store i32 %10, i32* %11, align 4, !dbg !15279
  ret void, !dbg !15280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15281 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15287, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15285, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i8* %1, metadata !15286, metadata !DIExpression()), !dbg !15291
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15292, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 %5, metadata !15144, metadata !DIExpression()) #26, !dbg !15297
  %6 = icmp eq i32 %5, 0, !dbg !15298
  %7 = icmp eq i64 %4, 0, !dbg !15299
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15299
  br i1 %8, label %10, label %9, !dbg !15299

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 208) #27, !dbg !15300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.302, i32 0, i32 0)) #27, !dbg !15300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 208) #27, !dbg !15300
  unreachable, !dbg !15300

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15157, metadata !DIExpression()) #26, !dbg !15303
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15305, !srcloc !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #26, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()) #26, !dbg !15303
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15308
  br i1 %13, label %15, label %14, !dbg !15309

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15310
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15310
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15310
  unreachable, !dbg !15310

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %16, metadata !15169, metadata !DIExpression()) #26, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %16, metadata !15163, metadata !DIExpression()) #26, !dbg !15303
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %16, metadata !15288, metadata !DIExpression()), !dbg !15291
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15312
  %18 = load i32, i32* %17, align 4, !dbg !15312
  %19 = icmp eq i32 %18, 0, !dbg !15314
  br i1 %19, label %61, label %20, !dbg !15315

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15316
  %22 = load i8*, i8** %21, align 4, !dbg !15316
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15318
  %24 = load i32, i32* %23, align 4, !dbg !15318
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #27, !dbg !15319
  %26 = load i32, i32* %23, align 4, !dbg !15320
  %27 = load i8*, i8** %21, align 4, !dbg !15321
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15321
  store i8* %28, i8** %21, align 4, !dbg !15321
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15322
  %30 = load i8*, i8** %29, align 4, !dbg !15322
  %31 = icmp eq i8* %28, %30, !dbg !15324
  br i1 %31, label %32, label %35, !dbg !15325

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15326
  %34 = load i8*, i8** %33, align 4, !dbg !15326
  store i8* %34, i8** %21, align 4, !dbg !15328
  br label %35, !dbg !15329

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15330
  %37 = add i32 %36, -1, !dbg !15330
  store i32 %37, i32* %17, align 4, !dbg !15330
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15331
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #27, !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15289, metadata !DIExpression()), !dbg !15291
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15333
  br i1 %40, label %68, label %41, !dbg !15335

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15336
  %43 = load i8*, i8** %42, align 4, !dbg !15336
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15338
  %45 = load i8*, i8** %44, align 4, !dbg !15338
  %46 = load i32, i32* %23, align 4, !dbg !15339
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #27, !dbg !15340
  %48 = load i32, i32* %23, align 4, !dbg !15341
  %49 = load i8*, i8** %42, align 4, !dbg !15342
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !15342
  store i8* %50, i8** %42, align 4, !dbg !15342
  %51 = load i8*, i8** %29, align 4, !dbg !15343
  %52 = icmp eq i8* %50, %51, !dbg !15345
  br i1 %52, label %53, label %56, !dbg !15346

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15347
  %55 = load i8*, i8** %54, align 4, !dbg !15347
  store i8* %55, i8** %42, align 4, !dbg !15349
  br label %56, !dbg !15350

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !15351
  %58 = add i32 %57, 1, !dbg !15351
  store i32 %58, i32* %17, align 4, !dbg !15351
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15196, metadata !DIExpression()), !dbg !15352
  call void @llvm.dbg.value(metadata i32 0, metadata !15201, metadata !DIExpression()), !dbg !15352
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !15354
  store i32 0, i32* %59, align 4, !dbg !15355
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #27, !dbg !15356
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15357
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #27, !dbg !15357
  br label %73, !dbg !15358

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !15359

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15360
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !15363
  store i8* %1, i8** %64, align 4, !dbg !15364
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15365
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15366
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #27, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %67, metadata !15290, metadata !DIExpression()), !dbg !15291
  br label %73, !dbg !15367

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !15368
  call void @llvm.dbg.value(metadata i32 %69, metadata !15290, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !15235, metadata !DIExpression()) #26, !dbg !15369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15240, metadata !DIExpression()) #26, !dbg !15369
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15371
  br i1 %70, label %72, label %71, !dbg !15372

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #27, !dbg !15373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #27, !dbg !15373
  unreachable, !dbg !15373

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15235, metadata !DIExpression()) #26, !dbg !15369
  call void @llvm.dbg.value(metadata i32 %16, metadata !15249, metadata !DIExpression()) #26, !dbg !15374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15376, !srcloc !15255
  br label %73, !dbg !15377

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15291
  ret i32 %74, !dbg !15378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15379 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15383, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i8* %1, metadata !15384, metadata !DIExpression()), !dbg !15387
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15157, metadata !DIExpression()) #26, !dbg !15389
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15391, !srcloc !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #26, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()) #26, !dbg !15389
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15394
  br i1 %5, label %7, label %6, !dbg !15395

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15396
  unreachable, !dbg !15396

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #26, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()) #26, !dbg !15389
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15397
  call void @llvm.dbg.value(metadata i32 undef, metadata !15385, metadata !DIExpression()), !dbg !15387
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15398
  %9 = load i32, i32* %8, align 4, !dbg !15398
  %10 = icmp eq i32 %9, 0, !dbg !15400
  br i1 %10, label %17, label %11, !dbg !15401

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15402
  %13 = load i8*, i8** %12, align 4, !dbg !15402
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15404
  %15 = load i32, i32* %14, align 4, !dbg !15404
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #27, !dbg !15405
  call void @llvm.dbg.value(metadata i32 0, metadata !15386, metadata !DIExpression()), !dbg !15387
  br label %17, !dbg !15406

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !15407
  call void @llvm.dbg.value(metadata i32 %18, metadata !15386, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !15235, metadata !DIExpression()) #26, !dbg !15408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15240, metadata !DIExpression()) #26, !dbg !15408
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15410
  br i1 %19, label %21, label %20, !dbg !15411

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #27, !dbg !15412
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #27, !dbg !15412
  unreachable, !dbg !15412

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !15391
  call void @llvm.dbg.value(metadata i32 %22, metadata !15169, metadata !DIExpression()) #26, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %22, metadata !15163, metadata !DIExpression()) #26, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %22, metadata !15385, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !15235, metadata !DIExpression()) #26, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()) #26, !dbg !15413
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #26, !dbg !15415, !srcloc !15255
  ret i32 %18, !dbg !15416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15417 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15421, metadata !DIExpression()), !dbg !15424
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15157, metadata !DIExpression()) #26, !dbg !15426
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15428, !srcloc !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #26, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()) #26, !dbg !15426
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15431
  br i1 %4, label %6, label %5, !dbg !15432

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #27, !dbg !15433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #27, !dbg !15433
  unreachable, !dbg !15433

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #26, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()) #26, !dbg !15426
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15434
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()), !dbg !15424
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15423, metadata !DIExpression()), !dbg !15424
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15436
  br i1 %9, label %15, label %10, !dbg !15437

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15196, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 -35, metadata !15201, metadata !DIExpression()), !dbg !15438
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !15441
  store i32 -35, i32* %12, align 4, !dbg !15442
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #27, !dbg !15443
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15423, metadata !DIExpression()), !dbg !15424
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !15436
  br i1 %14, label %15, label %10, !dbg !15437, !llvm.loop !15444

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %16, metadata !15169, metadata !DIExpression()) #26, !dbg !15430
  call void @llvm.dbg.value(metadata i32 %16, metadata !15163, metadata !DIExpression()) #26, !dbg !15426
  call void @llvm.dbg.value(metadata i32 %16, metadata !15422, metadata !DIExpression()), !dbg !15424
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15446
  store i32 0, i32* %17, align 4, !dbg !15447
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15448
  %19 = load i8*, i8** %18, align 4, !dbg !15448
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15449
  store i8* %19, i8** %20, align 4, !dbg !15450
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15451
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #27, !dbg !15451
  ret void, !dbg !15452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !15453 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15468, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i32 %1, metadata !15469, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata i32 %2, metadata !15470, metadata !DIExpression()), !dbg !15471
  %4 = icmp eq i32 %2, 0, !dbg !15472
  %5 = icmp ugt i32 %1, %2, !dbg !15472
  %6 = or i1 %4, %5, !dbg !15472
  br i1 %6, label %11, label %7, !dbg !15472

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15474
  store i32 %1, i32* %8, align 4, !dbg !15475
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15476
  store i32 %2, i32* %9, align 4, !dbg !15477
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15478
  tail call fastcc void @z_waitq_init.310(%union.anon* noundef %10) #28, !dbg !15479
  br label %11, !dbg !15480

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15471
  ret i32 %12, !dbg !15481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.310(%union.anon* noundef %0) unnamed_addr #12 !dbg !15482 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15487, metadata !DIExpression()), !dbg !15488
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15489
  tail call fastcc void @sys_dlist_init.311(%struct._dnode* noundef %2) #28, !dbg !15490
  ret void, !dbg !15491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.311(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15492 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15497, metadata !DIExpression()), !dbg !15498
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15499
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15500
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15501
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15502
  ret void, !dbg !15503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15504 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15508, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.312, metadata !15595, metadata !DIExpression()) #26, !dbg !15602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15604, !srcloc !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #26, !dbg !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15601, metadata !DIExpression()) #26, !dbg !15602
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15612
  br i1 %3, label %5, label %4, !dbg !15615

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 148) #27, !dbg !15616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 148) #27, !dbg !15616
  unreachable, !dbg !15616

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #26, !dbg !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15601, metadata !DIExpression()) #26, !dbg !15602
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !15509, metadata !DIExpression()), !dbg !15594
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15619
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15620
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15514, metadata !DIExpression()), !dbg !15594
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15621
  br i1 %8, label %11, label %9, !dbg !15623

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15624, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 0, metadata !15629, metadata !DIExpression()), !dbg !15630
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15633
  store i32 0, i32* %10, align 4, !dbg !15634
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15635
  br label %19, !dbg !15636

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15637
  %13 = load i32, i32* %12, align 4, !dbg !15637
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15639
  %15 = load i32, i32* %14, align 4, !dbg !15639
  %16 = icmp ne i32 %13, %15, !dbg !15640
  %17 = zext i1 %16 to i32, !dbg !15641
  %18 = add i32 %13, %17, !dbg !15642
  store i32 %18, i32* %12, align 4, !dbg !15642
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !15604
  call void @llvm.dbg.value(metadata i32 %20, metadata !15607, metadata !DIExpression()) #26, !dbg !15611
  call void @llvm.dbg.value(metadata i32 %20, metadata !15601, metadata !DIExpression()) #26, !dbg !15602
  call void @llvm.dbg.value(metadata i32 %20, metadata !15509, metadata !DIExpression()), !dbg !15594
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !15643
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.312, [1 x i32] %21) #27, !dbg !15643
  ret void, !dbg !15644
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15645 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15654, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15653, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata i32 0, metadata !15655, metadata !DIExpression()), !dbg !15658
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15659, !srcloc !15668
  call void @llvm.dbg.value(metadata i32 %4, metadata !15662, metadata !DIExpression()) #26, !dbg !15669
  %5 = icmp eq i32 %4, 0, !dbg !15670
  %6 = icmp eq i64 %3, 0, !dbg !15671
  %7 = select i1 %5, i1 true, i1 %6, !dbg !15671
  br i1 %7, label %9, label %8, !dbg !15671

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 122) #27, !dbg !15672
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.321, i32 0, i32 0)) #27, !dbg !15672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 122) #27, !dbg !15672
  unreachable, !dbg !15672

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.312, metadata !15595, metadata !DIExpression()) #26, !dbg !15674
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15676, !srcloc !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #26, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !15601, metadata !DIExpression()) #26, !dbg !15674
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15679
  br i1 %11, label %13, label %12, !dbg !15680

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 148) #27, !dbg !15681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 148) #27, !dbg !15681
  unreachable, !dbg !15681

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !15676
  call void @llvm.dbg.value(metadata i32 %14, metadata !15607, metadata !DIExpression()) #26, !dbg !15678
  call void @llvm.dbg.value(metadata i32 %14, metadata !15601, metadata !DIExpression()) #26, !dbg !15674
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15682
  call void @llvm.dbg.value(metadata i32 %14, metadata !15656, metadata !DIExpression()), !dbg !15658
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15683
  %16 = load i32, i32* %15, align 4, !dbg !15683
  %17 = icmp eq i32 %16, 0, !dbg !15683
  br i1 %17, label %23, label %18, !dbg !15685, !prof !15686

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !15687
  store i32 %19, i32* %15, align 4, !dbg !15687
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()) #26, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.312, metadata !15694, metadata !DIExpression()) #26, !dbg !15695
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15697
  br i1 %20, label %22, label %21, !dbg !15700

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 194) #27, !dbg !15701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 194) #27, !dbg !15701
  unreachable, !dbg !15701

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !15689, metadata !DIExpression()) #26, !dbg !15695
  call void @llvm.dbg.value(metadata i32 %14, metadata !15703, metadata !DIExpression()) #26, !dbg !15706
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15708, !srcloc !15709
  call void @llvm.dbg.value(metadata i32 0, metadata !15655, metadata !DIExpression()), !dbg !15658
  br label %32, !dbg !15710

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !15711

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()) #26, !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.312, metadata !15694, metadata !DIExpression()) #26, !dbg !15712
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15716
  br i1 %25, label %27, label %26, !dbg !15717

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 194) #27, !dbg !15718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 194) #27, !dbg !15718
  unreachable, !dbg !15718

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !15689, metadata !DIExpression()) #26, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %14, metadata !15703, metadata !DIExpression()) #26, !dbg !15719
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15721, !srcloc !15709
  call void @llvm.dbg.value(metadata i32 -16, metadata !15655, metadata !DIExpression()), !dbg !15658
  br label %32, !dbg !15722

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15723
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !15724
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.312, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #27, !dbg !15724
  call void @llvm.dbg.value(metadata i32 %31, metadata !15655, metadata !DIExpression()), !dbg !15658
  br label %32, !dbg !15725

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !15658
  call void @llvm.dbg.value(metadata i32 %33, metadata !15655, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.label(metadata !15657), !dbg !15726
  ret i32 %33, !dbg !15727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15728 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15730, metadata !DIExpression()), !dbg !15733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.312, metadata !15595, metadata !DIExpression()) #26, !dbg !15734
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15736, !srcloc !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #26, !dbg !15738
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15738
  call void @llvm.dbg.value(metadata i32 undef, metadata !15601, metadata !DIExpression()) #26, !dbg !15734
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15739
  br i1 %3, label %5, label %4, !dbg !15740

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 148) #27, !dbg !15741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef 148) #27, !dbg !15741
  unreachable, !dbg !15741

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #26, !dbg !15738
  call void @llvm.dbg.value(metadata i32 undef, metadata !15601, metadata !DIExpression()) #26, !dbg !15734
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.312) #27, !dbg !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()), !dbg !15733
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15731, metadata !DIExpression()), !dbg !15733
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15745
  br i1 %8, label %14, label %9, !dbg !15747

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !15624, metadata !DIExpression()), !dbg !15748
  call void @llvm.dbg.value(metadata i32 -11, metadata !15629, metadata !DIExpression()), !dbg !15748
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !15750
  store i32 -11, i32* %11, align 4, !dbg !15751
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #27, !dbg !15752
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !15731, metadata !DIExpression()), !dbg !15733
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !15745
  br i1 %13, label %14, label %9, !dbg !15747, !llvm.loop !15753

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %15, metadata !15607, metadata !DIExpression()) #26, !dbg !15738
  call void @llvm.dbg.value(metadata i32 %15, metadata !15601, metadata !DIExpression()) #26, !dbg !15734
  call void @llvm.dbg.value(metadata i32 %15, metadata !15732, metadata !DIExpression()), !dbg !15733
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15756
  store i32 0, i32* %16, align 4, !dbg !15757
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !15758
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.312, [1 x i32] %17) #27, !dbg !15758
  ret void, !dbg !15759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !15760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15764, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15765, metadata !DIExpression()), !dbg !15768
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15769
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15769
  %5 = load i8, i8* %4, align 2, !dbg !15769
  call void @llvm.dbg.value(metadata i8 %5, metadata !15766, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15768
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15770
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15770
  %8 = load i8, i8* %7, align 2, !dbg !15770
  call void @llvm.dbg.value(metadata i8 %8, metadata !15767, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15768
  %9 = icmp eq i8 %8, %5, !dbg !15771
  %10 = sext i8 %5 to i32, !dbg !15773
  %11 = sext i8 %8 to i32, !dbg !15773
  %12 = sub nsw i32 %11, %10, !dbg !15773
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15773
  ret i32 %13, !dbg !15774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15779, metadata !DIExpression()), !dbg !15780
  %2 = tail call fastcc i32 @slice_time() #28, !dbg !15781
  %3 = icmp eq i32 %2, 0, !dbg !15783
  br i1 %3, label %8, label %4, !dbg !15784

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15785
  %6 = add i32 %5, %2, !dbg !15787
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15788
  %7 = tail call fastcc i32 @slice_time() #28, !dbg !15789
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15790
  br label %8, !dbg !15791

8:                                                ; preds = %4, %1
  ret void, !dbg !15792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !15793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15797, metadata !DIExpression()), !dbg !15799
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %1, metadata !15798, metadata !DIExpression()), !dbg !15799
  ret i32 %1, !dbg !15801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15806, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 %1, metadata !15807, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 0, metadata !15808, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !15824
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15826, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !15824
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15834
  br i1 %4, label %6, label %5, !dbg !15837

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !15838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !15838
  unreachable, !dbg !15838

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !15824
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15840
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15808, metadata !DIExpression()), !dbg !15816
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15841
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #28, !dbg !15844
  %8 = icmp sgt i32 %0, 0, !dbg !15845
  %9 = icmp sgt i32 %7, 2, !dbg !15847
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15847
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15847
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15848
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15849
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !15857
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15859
  br i1 %12, label %14, label %13, !dbg !15862

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !15863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !15863
  unreachable, !dbg !15863

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15826
  call void @llvm.dbg.value(metadata i32 %15, metadata !15829, metadata !DIExpression()) #26, !dbg !15833
  call void @llvm.dbg.value(metadata i32 %15, metadata !15823, metadata !DIExpression()) #26, !dbg !15824
  call void @llvm.dbg.value(metadata i32 %15, metadata !15814, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !15857
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !15868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15870, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !15808, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15808, metadata !DIExpression()), !dbg !15816
  ret void, !dbg !15872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15875, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i32 %0, metadata !15877, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15892
  call void @llvm.dbg.value(metadata i32 1000, metadata !15880, metadata !DIExpression()), !dbg !15892
  call void @llvm.dbg.value(metadata i32 10000, metadata !15881, metadata !DIExpression()), !dbg !15892
  call void @llvm.dbg.value(metadata i8 1, metadata !15882, metadata !DIExpression()), !dbg !15892
  call void @llvm.dbg.value(metadata i1 true, metadata !15883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15892
  call void @llvm.dbg.value(metadata i1 true, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15892
  call void @llvm.dbg.value(metadata i8 0, metadata !15885, metadata !DIExpression()), !dbg !15892
  call void @llvm.dbg.value(metadata i1 true, metadata !15886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15892
  call void @llvm.dbg.value(metadata i1 false, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15892
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !15892
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !15892
  %2 = mul i32 %0, 10, !dbg !15894
  ret i32 %2, !dbg !15900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15903, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !15906
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15908, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !15906
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15911
  br i1 %3, label %5, label %4, !dbg !15912

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !15913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !15913
  unreachable, !dbg !15913

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15908
  call void @llvm.dbg.value(metadata i32 %6, metadata !15829, metadata !DIExpression()) #26, !dbg !15910
  call void @llvm.dbg.value(metadata i32 %6, metadata !15823, metadata !DIExpression()) #26, !dbg !15906
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %6, metadata !15904, metadata !DIExpression()), !dbg !15905
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15915
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15917
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15918
  br i1 %9, label %10, label %14, !dbg !15919

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !15922
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15924
  br i1 %11, label %13, label %12, !dbg !15925

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !15926
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !15926
  unreachable, !dbg !15926

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()) #26, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %6, metadata !15865, metadata !DIExpression()) #26, !dbg !15927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15929, !srcloc !15871
  br label %33, !dbg !15930

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15931
  %15 = tail call fastcc i32 @slice_time() #28, !dbg !15932
  %16 = icmp eq i32 %15, 0, !dbg !15932
  br i1 %16, label %27, label %17, !dbg !15934

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #28, !dbg !15935
  br i1 %18, label %19, label %27, !dbg !15936

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15937
  %21 = icmp sgt i32 %20, %0, !dbg !15940
  br i1 %21, label %25, label %22, !dbg !15941

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15942
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #28, !dbg !15942
  call void @llvm.dbg.value(metadata i32 %24, metadata !15904, metadata !DIExpression()), !dbg !15905
  br label %28, !dbg !15944

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15945
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15945
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15947
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15905
  call void @llvm.dbg.value(metadata i32 %29, metadata !15904, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !15949
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15951
  br i1 %30, label %32, label %31, !dbg !15952

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !15953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !15953
  unreachable, !dbg !15953

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15851, metadata !DIExpression()) #26, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %29, metadata !15865, metadata !DIExpression()) #26, !dbg !15954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #26, !dbg !15956, !srcloc !15871
  br label %33, !dbg !15957

33:                                               ; preds = %32, %13
  ret void, !dbg !15957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !15958 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15962, metadata !DIExpression()), !dbg !15964
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #28, !dbg !15965
  %3 = icmp eq i32 %2, 0, !dbg !15965
  br i1 %3, label %16, label %4, !dbg !15966

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !15967
  br i1 %5, label %16, label %6, !dbg !15968

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15969
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15969
  %9 = load i8, i8* %8, align 2, !dbg !15969
  %10 = sext i8 %9 to i32, !dbg !15970
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15971
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #28, !dbg !15972
  br i1 %12, label %16, label %13, !dbg !15973

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #28, !dbg !15974
  %15 = xor i1 %14, true, !dbg !15975
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15964
  call void @llvm.dbg.value(metadata i1 %17, metadata !15963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15964
  ret i1 %17, !dbg !15976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15977 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15981, metadata !DIExpression()), !dbg !15983
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15984
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15982, metadata !DIExpression()), !dbg !15983
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #28, !dbg !15985
  br i1 %3, label %5, label %4, !dbg !15987

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #28, !dbg !15988
  br label %5, !dbg !15990

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15981, metadata !DIExpression()), !dbg !15983
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15991
  ret i32 %6, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !15993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15995, metadata !DIExpression()), !dbg !15997
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15998
  %3 = load i8, i8* %2, align 1, !dbg !15998
  call void @llvm.dbg.value(metadata i8 %3, metadata !15996, metadata !DIExpression()), !dbg !15997
  %4 = and i8 %3, 31, !dbg !15999
  %5 = icmp ne i8 %4, 0, !dbg !16000
  ret i1 %5, !dbg !16001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16002 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16004, metadata !DIExpression()), !dbg !16005
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16006
  br i1 %2, label %3, label %7, !dbg !16008

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()) #26, !dbg !16012
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16015
  %5 = load i8, i8* %4, align 1, !dbg !16016
  %6 = and i8 %5, 127, !dbg !16016
  store i8 %6, i8* %4, align 1, !dbg !16016
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16017, metadata !DIExpression()) #26, !dbg !16020
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16024
  br label %7, !dbg !16025

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16026, metadata !DIExpression()) #26, !dbg !16029
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16031
  %9 = load i8, i8* %8, align 1, !dbg !16032
  %10 = or i8 %9, -128, !dbg !16032
  store i8 %10, i8* %8, align 1, !dbg !16032
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16033, metadata !DIExpression()) #26, !dbg !16036
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16040, metadata !DIExpression()) #26, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16046, metadata !DIExpression()) #26, !dbg !16048
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16050
  br i1 %11, label %12, label %13, !dbg !16053

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !16054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !16054
  unreachable, !dbg !16054

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16056
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16047, metadata !DIExpression()) #26, !dbg !16048
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16058
  br i1 %15, label %26, label %16, !dbg !16056

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16047, metadata !DIExpression()) #26, !dbg !16048
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16047, metadata !DIExpression()) #26, !dbg !16048
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !16061
  %20 = icmp sgt i32 %19, 0, !dbg !16064
  br i1 %20, label %21, label %23, !dbg !16065

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16066
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !16068
  br label %28, !dbg !16069

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !16058
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16047, metadata !DIExpression()) #26, !dbg !16048
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16058
  br i1 %25, label %26, label %16, !dbg !16056, !llvm.loop !16070

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16072
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !16073
  br label %28, !dbg !16074

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16075
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16076
  %31 = zext i1 %30 to i32, !dbg !16076
  tail call fastcc void @update_cache(i32 noundef %31) #28, !dbg !16077
  ret void, !dbg !16078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16081, metadata !DIExpression()), !dbg !16082
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #28, !dbg !16083
  ret i1 %2, !dbg !16084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16085 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16087, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16088, metadata !DIExpression()), !dbg !16089
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !16090
  br i1 %3, label %4, label %5, !dbg !16093

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16094
  unreachable, !dbg !16094

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16096
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #28, !dbg !16097
  ret void, !dbg !16098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16101, metadata !DIExpression()), !dbg !16102
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16103
  ret i1 %2, !dbg !16104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16105 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16109, metadata !DIExpression()), !dbg !16110
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.335(%struct._dnode* noundef %0) #28, !dbg !16111
  br i1 %2, label %6, label %3, !dbg !16111

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16112
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16112
  br label %6, !dbg !16111

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16111
  ret %struct._dnode* %7, !dbg !16113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16114 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16118, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16119, metadata !DIExpression()), !dbg !16122
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16123
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16123
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16120, metadata !DIExpression()), !dbg !16122
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16124
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16125
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16126
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16127
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16128
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16129
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16130
  ret void, !dbg !16131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16132 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16136, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16137, metadata !DIExpression()), !dbg !16138
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16139
  br i1 %3, label %6, label %4, !dbg !16140

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #28, !dbg !16141
  br label %6, !dbg !16140

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16140
  ret %struct._dnode* %7, !dbg !16142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16143 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16147, metadata !DIExpression()), !dbg !16150
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16148, metadata !DIExpression()), !dbg !16150
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16151
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16151
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16149, metadata !DIExpression()), !dbg !16150
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16152
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16153
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16154
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16155
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16156
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16157
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16158
  ret void, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16162, metadata !DIExpression()), !dbg !16164
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16172, metadata !DIExpression()) #26, !dbg !16175
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16176
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16173, metadata !DIExpression()) #26, !dbg !16175
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16177
  br i1 %4, label %13, label %5, !dbg !16179

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !16180
  br i1 %6, label %10, label %7, !dbg !16181

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #27, !dbg !16182
  %9 = icmp eq i32 %8, 0, !dbg !16182
  br i1 %9, label %10, label %13, !dbg !16183

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #27, !dbg !16184
  br i1 %11, label %12, label %13, !dbg !16187

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16188
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !16175
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16172, metadata !DIExpression()) #26, !dbg !16175
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16190
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16191
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !16191
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16163, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16192, metadata !DIExpression()) #26, !dbg !16198
  call void @llvm.dbg.value(metadata i32 %0, metadata !16197, metadata !DIExpression()) #26, !dbg !16198
  %18 = icmp eq i32 %0, 0, !dbg !16201
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16203
  br i1 %18, label %20, label %33, !dbg !16204

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !16205
  br i1 %21, label %22, label %23, !dbg !16208

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 137) #27, !dbg !16209
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !16209
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 137) #27, !dbg !16209
  unreachable, !dbg !16209

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #27, !dbg !16211
  br i1 %24, label %33, label %25, !dbg !16213

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #27, !dbg !16214
  br i1 %26, label %33, label %27, !dbg !16216

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #27, !dbg !16217
  %29 = icmp eq i32 %28, 0, !dbg !16217
  br i1 %29, label %30, label %33, !dbg !16219

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #27, !dbg !16220
  %32 = icmp eq i32 %31, 0, !dbg !16220
  br i1 %32, label %37, label %33, !dbg !16221

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !16222
  br i1 %34, label %36, label %35, !dbg !16225

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16226
  br label %36, !dbg !16228

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #28, !dbg !16229
  br label %37, !dbg !16230

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !16203
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16203
  ret void, !dbg !16231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !16232 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16236, metadata !DIExpression()), !dbg !16239
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16237, metadata !DIExpression()), !dbg !16239
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef %0) #28, !dbg !16240
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16238, metadata !DIExpression()), !dbg !16239
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16237, metadata !DIExpression()), !dbg !16239
  ret %struct.k_thread* %3, !dbg !16241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16244, metadata !DIExpression()), !dbg !16245
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16246
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16246
  %4 = load i8, i8* %3, align 2, !dbg !16246
  %5 = icmp slt i8 %4, -15, !dbg !16247
  %6 = zext i1 %5 to i32, !dbg !16247
  ret i32 %6, !dbg !16248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16251, metadata !DIExpression()), !dbg !16252
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16253
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16254
  %4 = xor i1 %3, true, !dbg !16255
  ret i1 %4, !dbg !16256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16259, metadata !DIExpression()), !dbg !16260
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16261
  %3 = load i16, i16* %2, align 2, !dbg !16261
  %4 = icmp ult i16 %3, 128, !dbg !16262
  %5 = zext i1 %4 to i32, !dbg !16262
  ret i32 %5, !dbg !16263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !16264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()), !dbg !16267
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #28, !dbg !16268
  %3 = icmp eq i32 %2, 0, !dbg !16268
  br i1 %3, label %11, label %4, !dbg !16270

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16271
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #28, !dbg !16272
  %7 = icmp eq i32 %6, 0, !dbg !16272
  br i1 %7, label %8, label %15, !dbg !16273

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #28, !dbg !16274
  %10 = icmp eq i32 %9, 0, !dbg !16274
  br i1 %10, label %13, label %15, !dbg !16275

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #28, !dbg !16276
  br i1 %12, label %15, label %13, !dbg !16278

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16279
  br label %15, !dbg !16280

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !16280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16281 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16287, metadata !DIExpression()), !dbg !16288
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16289
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #28, !dbg !16290
  %4 = xor i1 %3, true, !dbg !16291
  ret i1 %4, !dbg !16292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16293 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16299, metadata !DIExpression()), !dbg !16300
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16301
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16301
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16302
  ret i1 %4, !dbg !16303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16304 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16306, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16307, metadata !DIExpression()), !dbg !16308
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16309
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16309
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16310
  br i1 %5, label %9, label %6, !dbg !16311

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16312
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16312
  br label %9, !dbg !16311

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16311
  ret %struct._dnode* %10, !dbg !16313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.335(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16314 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16318, metadata !DIExpression()), !dbg !16319
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16320
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16320
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16321
  ret i1 %4, !dbg !16322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16323 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16327, metadata !DIExpression()), !dbg !16330
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16331
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16331
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16328, metadata !DIExpression()), !dbg !16330
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16332
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16332
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16329, metadata !DIExpression()), !dbg !16330
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16333
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16334
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16335
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16336
  tail call fastcc void @sys_dnode_init.336(%struct._dnode* noundef %0) #28, !dbg !16337
  ret void, !dbg !16338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.336(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16339 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16341, metadata !DIExpression()), !dbg !16342
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16343
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16344
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16345
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16346
  ret void, !dbg !16347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !16348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16352, metadata !DIExpression()), !dbg !16354
  call void @llvm.dbg.value(metadata i32 %1, metadata !16353, metadata !DIExpression()), !dbg !16354
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16355
  %4 = load i8, i8* %3, align 1, !dbg !16355
  %5 = zext i8 %4 to i32, !dbg !16356
  %6 = and i32 %5, %1, !dbg !16357
  %7 = icmp ne i32 %6, 0, !dbg !16358
  ret i1 %7, !dbg !16359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16364, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 %1, metadata !16365, metadata !DIExpression()), !dbg !16366
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #28, !dbg !16367
  ret i1 %3, !dbg !16368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16371, metadata !DIExpression()), !dbg !16373
  call void @llvm.dbg.value(metadata i32 %1, metadata !16372, metadata !DIExpression()), !dbg !16373
  %3 = icmp slt i32 %0, %1, !dbg !16374
  ret i1 %3, !dbg !16375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16376 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16378, metadata !DIExpression()), !dbg !16382
  call void @llvm.dbg.value(metadata i32 0, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16384
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16386, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16384
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16389
  br i1 %3, label %5, label %4, !dbg !16390

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16391
  unreachable, !dbg !16391

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16392
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16379, metadata !DIExpression()), !dbg !16383
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16398
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16400
  br i1 %6, label %8, label %7, !dbg !16401

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16402
  unreachable, !dbg !16402

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %9, metadata !15829, metadata !DIExpression()) #26, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %9, metadata !15823, metadata !DIExpression()) #26, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %9, metadata !16381, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !16403
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16405, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16379, metadata !DIExpression()), !dbg !16383
  ret void, !dbg !16406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16409, metadata !DIExpression()), !dbg !16410
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16411
  br i1 %2, label %27, label %3, !dbg !16413

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !16414
  br i1 %4, label %5, label %27, !dbg !16415

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16026, metadata !DIExpression()) #26, !dbg !16416
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16419
  %7 = load i8, i8* %6, align 1, !dbg !16420
  %8 = or i8 %7, -128, !dbg !16420
  store i8 %8, i8* %6, align 1, !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16033, metadata !DIExpression()) #26, !dbg !16421
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16040, metadata !DIExpression()) #26, !dbg !16423
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16046, metadata !DIExpression()) #26, !dbg !16423
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16425
  br i1 %9, label %10, label %11, !dbg !16426

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !16427
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !16427
  unreachable, !dbg !16427

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16428
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16047, metadata !DIExpression()) #26, !dbg !16423
  %13 = icmp eq %struct._dnode* %12, null, !dbg !16429
  br i1 %13, label %24, label %14, !dbg !16428

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16047, metadata !DIExpression()) #26, !dbg !16423
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !16430
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16047, metadata !DIExpression()) #26, !dbg !16423
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !16431
  %18 = icmp sgt i32 %17, 0, !dbg !16432
  br i1 %18, label %19, label %21, !dbg !16433

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16434
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !16435
  br label %26, !dbg !16436

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !16429
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16047, metadata !DIExpression()) #26, !dbg !16423
  %23 = icmp eq %struct._dnode* %22, null, !dbg !16429
  br i1 %23, label %24, label %14, !dbg !16428, !llvm.loop !16437

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16439
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !16440
  br label %26, !dbg !16441

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !16442
  br label %27, !dbg !16443

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !16444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16445 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16447, metadata !DIExpression()), !dbg !16448
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16449
  br i1 %2, label %6, label %3, !dbg !16450

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #28, !dbg !16451
  %5 = xor i1 %4, true, !dbg !16450
  br label %6, !dbg !16450

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16455, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 0, metadata !16456, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16461
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16463, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16461
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16466
  br i1 %3, label %5, label %4, !dbg !16467

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16468
  unreachable, !dbg !16468

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16461
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16469
  call void @llvm.dbg.value(metadata i32 undef, metadata !16458, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i32 undef, metadata !16456, metadata !DIExpression()), !dbg !16460
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #28, !dbg !16470
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16473
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16475
  br i1 %6, label %8, label %7, !dbg !16476

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16477
  unreachable, !dbg !16477

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16463
  call void @llvm.dbg.value(metadata i32 %9, metadata !15829, metadata !DIExpression()) #26, !dbg !16465
  call void @llvm.dbg.value(metadata i32 %9, metadata !15823, metadata !DIExpression()) #26, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %9, metadata !16458, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !16478
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16480, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16456, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i32 undef, metadata !16456, metadata !DIExpression()), !dbg !16460
  ret void, !dbg !16481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16484, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16487
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16489, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16487
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16492
  br i1 %3, label %5, label %4, !dbg !16493

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16494
  unreachable, !dbg !16494

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16489
  call void @llvm.dbg.value(metadata i32 %6, metadata !15829, metadata !DIExpression()) #26, !dbg !16491
  call void @llvm.dbg.value(metadata i32 %6, metadata !15823, metadata !DIExpression()) #26, !dbg !16487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %6, metadata !16485, metadata !DIExpression()), !dbg !16486
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #28, !dbg !16496
  br i1 %7, label %8, label %12, !dbg !16498

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16499
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16502
  br i1 %9, label %11, label %10, !dbg !16503

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16504
  unreachable, !dbg !16504

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()) #26, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %6, metadata !15865, metadata !DIExpression()) #26, !dbg !16505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16507, !srcloc !15871
  br label %14, !dbg !16508

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.341(%struct.k_thread* noundef %0) #28, !dbg !16509
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16510
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16511
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16511
  br label %14, !dbg !16512

14:                                               ; preds = %12, %11
  ret void, !dbg !16512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16515, metadata !DIExpression()), !dbg !16516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16517
  %3 = load i8, i8* %2, align 1, !dbg !16517
  %4 = and i8 %3, 4, !dbg !16518
  %5 = icmp eq i8 %4, 0, !dbg !16519
  ret i1 %5, !dbg !16520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.341(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16523, metadata !DIExpression()), !dbg !16524
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16525
  %3 = load i8, i8* %2, align 1, !dbg !16526
  %4 = and i8 %3, -5, !dbg !16526
  store i8 %4, i8* %2, align 1, !dbg !16526
  ret void, !dbg !16527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16528 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16531, metadata !DIExpression()), !dbg !16532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16530, metadata !DIExpression()), !dbg !16532
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #28, !dbg !16533
  br i1 %4, label %5, label %12, !dbg !16535

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #28, !dbg !16536
  br i1 %6, label %7, label %12, !dbg !16537

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16543, metadata !DIExpression()) #26, !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16547, metadata !DIExpression()) #26, !dbg !16552
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16554
  br i1 %8, label %10, label %9, !dbg !16557

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !16558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !16558
  unreachable, !dbg !16558

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !16538, metadata !DIExpression()) #26, !dbg !16544
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16560
  br label %16, !dbg !16561

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15856, metadata !DIExpression()) #26, !dbg !16562
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16565
  br i1 %13, label %15, label %14, !dbg !16566

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16567
  unreachable, !dbg !16567

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15851, metadata !DIExpression()) #26, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %3, metadata !15865, metadata !DIExpression()) #26, !dbg !16568
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16570, !srcloc !15871
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !16571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16576, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i32 %0, metadata !16578, metadata !DIExpression()), !dbg !16583
  %2 = icmp eq i32 %0, 0, !dbg !16585
  br i1 %2, label %3, label %6, !dbg !16586

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16587, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %4, metadata !16590, metadata !DIExpression()) #26, !dbg !16595
  %5 = icmp eq i32 %4, 0, !dbg !16596
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16577
  ret i1 %7, !dbg !16597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !16598 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16601
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16600, metadata !DIExpression()), !dbg !16602
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16603
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16604
  ret i1 %3, !dbg !16605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16608, metadata !DIExpression()), !dbg !16610
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %2, metadata !16609, metadata !DIExpression()), !dbg !16610
  ret i32 %2, !dbg !16612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16613 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16615, metadata !DIExpression()), !dbg !16619
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !16620
  call void @llvm.dbg.value(metadata i32 0, metadata !16616, metadata !DIExpression()), !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16622
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16624, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16622
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16627
  br i1 %4, label %6, label %5, !dbg !16628

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16629
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16629
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16629
  unreachable, !dbg !16629

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16624
  call void @llvm.dbg.value(metadata i32 %7, metadata !15829, metadata !DIExpression()) #26, !dbg !16626
  call void @llvm.dbg.value(metadata i32 %7, metadata !15823, metadata !DIExpression()) #26, !dbg !16622
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %7, metadata !16618, metadata !DIExpression()), !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !16616, metadata !DIExpression()), !dbg !16621
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16631
  br i1 %8, label %9, label %13, !dbg !16635

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()) #26, !dbg !16636
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16639
  %11 = load i8, i8* %10, align 1, !dbg !16640
  %12 = and i8 %11, 127, !dbg !16640
  store i8 %12, i8* %10, align 1, !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16017, metadata !DIExpression()) #26, !dbg !16641
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16643
  br label %13, !dbg !16644

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #28, !dbg !16645
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16646
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16647
  %16 = zext i1 %15 to i32, !dbg !16647
  tail call fastcc void @update_cache(i32 noundef %16) #28, !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16649
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16651
  br i1 %17, label %19, label %18, !dbg !16652

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16653
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16653
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16653
  unreachable, !dbg !16653

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15851, metadata !DIExpression()) #26, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %7, metadata !15865, metadata !DIExpression()) #26, !dbg !16654
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !16656, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16616, metadata !DIExpression()), !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !16616, metadata !DIExpression()), !dbg !16621
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16657
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !16659
  br i1 %21, label %22, label %23, !dbg !16660

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !16661
  br label %23, !dbg !16663

23:                                               ; preds = %22, %19
  ret void, !dbg !16664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16667, metadata !DIExpression()), !dbg !16668
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16669
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16670
  ret i32 %3, !dbg !16671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16672 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16674, metadata !DIExpression()), !dbg !16675
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16676
  %3 = load i8, i8* %2, align 1, !dbg !16677
  %4 = or i8 %3, 16, !dbg !16677
  store i8 %4, i8* %2, align 1, !dbg !16677
  ret void, !dbg !16678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16679 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16680, !srcloc !15832
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %2, metadata !15829, metadata !DIExpression()) #26, !dbg !16682
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16682
  tail call void @z_reschedule_irqlock(i32 noundef %2) #28, !dbg !16683
  ret void, !dbg !16684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16687, metadata !DIExpression()), !dbg !16688
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #28, !dbg !16689
  br i1 %2, label %3, label %5, !dbg !16691

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16692
  br label %6, !dbg !16694

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15865, metadata !DIExpression()) #26, !dbg !16695
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16698, !srcloc !15871
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16702, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16705
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16707, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16705
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16710
  br i1 %3, label %5, label %4, !dbg !16711

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16712
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16712
  unreachable, !dbg !16712

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16707
  call void @llvm.dbg.value(metadata i32 %6, metadata !15829, metadata !DIExpression()) #26, !dbg !16709
  call void @llvm.dbg.value(metadata i32 %6, metadata !15823, metadata !DIExpression()) #26, !dbg !16705
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16713
  call void @llvm.dbg.value(metadata i32 %6, metadata !16703, metadata !DIExpression()), !dbg !16704
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #28, !dbg !16714
  br i1 %7, label %12, label %8, !dbg !16716

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16717
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16717
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16720
  br i1 %9, label %11, label %10, !dbg !16721

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16722
  unreachable, !dbg !16722

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()) #26, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %6, metadata !15865, metadata !DIExpression()) #26, !dbg !16723
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16725, !srcloc !15871
  br label %14, !dbg !16726

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !16727
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16728
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16729
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16729
  br label %14, !dbg !16730

14:                                               ; preds = %12, %11
  ret void, !dbg !16730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16731 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16733, metadata !DIExpression()), !dbg !16734
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16735
  %3 = load i8, i8* %2, align 1, !dbg !16735
  %4 = and i8 %3, 16, !dbg !16736
  %5 = icmp ne i8 %4, 0, !dbg !16737
  ret i1 %5, !dbg !16738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16741, metadata !DIExpression()), !dbg !16742
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16743
  %3 = load i8, i8* %2, align 1, !dbg !16744
  %4 = and i8 %3, -17, !dbg !16744
  store i8 %4, i8* %2, align 1, !dbg !16744
  ret void, !dbg !16745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16746 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16756, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16754, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16755, metadata !DIExpression()), !dbg !16760
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16761
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16761
  br i1 %5, label %9, label %6, !dbg !16761

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #28, !dbg !16761
  br i1 %7, label %9, label %8, !dbg !16764

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 773) #27, !dbg !16765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 773) #27, !dbg !16765
  unreachable, !dbg !16765

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16757, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16768
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16770, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16768
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16773
  br i1 %11, label %13, label %12, !dbg !16774

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16775
  unreachable, !dbg !16775

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16776
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16757, metadata !DIExpression()), !dbg !16767
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16780
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16782
  br i1 %14, label %16, label %15, !dbg !16783

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16784
  unreachable, !dbg !16784

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %17, metadata !15829, metadata !DIExpression()) #26, !dbg !16772
  call void @llvm.dbg.value(metadata i32 %17, metadata !15823, metadata !DIExpression()) #26, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %17, metadata !16759, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !16785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #26, !dbg !16787, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16757, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16757, metadata !DIExpression()), !dbg !16767
  ret void, !dbg !16788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16789 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16791, metadata !DIExpression()), !dbg !16792
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16793
  %3 = load i8, i8* %2, align 1, !dbg !16793
  %4 = and i8 %3, 1, !dbg !16794
  %5 = icmp ne i8 %4, 0, !dbg !16795
  ret i1 %5, !dbg !16796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16797 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16801, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16799, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16800, metadata !DIExpression()), !dbg !16802
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #28, !dbg !16803
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #28, !dbg !16804
  ret void, !dbg !16805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16810, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16811, metadata !DIExpression()), !dbg !16812
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #28, !dbg !16813
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #28, !dbg !16814
  %3 = icmp eq %union.anon* %1, null, !dbg !16815
  br i1 %3, label %24, label %4, !dbg !16817

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16818
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16820
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16821
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16040, metadata !DIExpression()) #26, !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16046, metadata !DIExpression()) #26, !dbg !16822
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16824
  br i1 %7, label %8, label %9, !dbg !16825

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !16826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !16826
  unreachable, !dbg !16826

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef nonnull %6) #27, !dbg !16827
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16047, metadata !DIExpression()) #26, !dbg !16822
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16828
  br i1 %11, label %22, label %12, !dbg !16827

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16047, metadata !DIExpression()) #26, !dbg !16822
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16829
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16047, metadata !DIExpression()) #26, !dbg !16822
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !16830
  %16 = icmp sgt i32 %15, 0, !dbg !16831
  br i1 %16, label %17, label %19, !dbg !16832

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16833
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16834
  br label %24, !dbg !16835

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !16828
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16047, metadata !DIExpression()) #26, !dbg !16822
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16828
  br i1 %21, label %22, label %12, !dbg !16827, !llvm.loop !16836

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16838
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !16839
  br label %24, !dbg !16840

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16842 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16847, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16846, metadata !DIExpression()), !dbg !16848
  %4 = icmp eq i64 %3, -1, !dbg !16849
  br i1 %4, label %6, label %5, !dbg !16851

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.345(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !16852
  br label %6, !dbg !16854

6:                                                ; preds = %5, %2
  ret void, !dbg !16855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.345(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16856 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16859, metadata !DIExpression()), !dbg !16860
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16858, metadata !DIExpression()), !dbg !16860
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16861
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16862
  ret void, !dbg !16863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16864 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16866, metadata !DIExpression()), !dbg !16874
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16875
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16875
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16867, metadata !DIExpression()), !dbg !16874
  call void @llvm.dbg.value(metadata i32 0, metadata !16868, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16877
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16879, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16877
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16882
  br i1 %5, label %7, label %6, !dbg !16883

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16884
  unreachable, !dbg !16884

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16877
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16885
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()), !dbg !16876
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16886
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16887
  %10 = load i8, i8* %9, align 1, !dbg !16887
  %11 = and i8 %10, 40, !dbg !16888
  %12 = icmp eq i8 %11, 0, !dbg !16888
  call void @llvm.dbg.value(metadata i1 %12, metadata !16871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16889
  br i1 %12, label %13, label %20, !dbg !16890

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16891
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !16891
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !16891
  %17 = icmp eq %union.anon* %16, null, !dbg !16895
  br i1 %17, label %19, label %18, !dbg !16896

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #28, !dbg !16897
  br label %19, !dbg !16899

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.341(%struct.k_thread* noundef nonnull %3) #28, !dbg !16900
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #28, !dbg !16901
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #28, !dbg !16902
  br label %20, !dbg !16903

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16904
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16906
  br i1 %21, label %23, label %22, !dbg !16907

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16908
  unreachable, !dbg !16908

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16879
  call void @llvm.dbg.value(metadata i32 %24, metadata !15829, metadata !DIExpression()) #26, !dbg !16881
  call void @llvm.dbg.value(metadata i32 %24, metadata !15823, metadata !DIExpression()) #26, !dbg !16877
  call void @llvm.dbg.value(metadata i32 %24, metadata !16870, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16904
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !16909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !16911, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16868, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.value(metadata i32 undef, metadata !16868, metadata !DIExpression()), !dbg !16876
  ret void, !dbg !16912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16915, metadata !DIExpression()), !dbg !16916
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #28, !dbg !16917
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16918
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #28, !dbg !16919
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16920
  store %union.anon* null, %union.anon** %3, align 8, !dbg !16921
  ret void, !dbg !16922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16927, metadata !DIExpression()), !dbg !16928
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16929
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !16929
  %4 = icmp eq %union.anon* %3, null, !dbg !16929
  br i1 %4, label %5, label %6, !dbg !16932

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 726) #27, !dbg !16933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 726) #27, !dbg !16933
  unreachable, !dbg !16933

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !16935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16938, metadata !DIExpression()), !dbg !16939
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16940
  %3 = load i8, i8* %2, align 1, !dbg !16941
  %4 = and i8 %3, -3, !dbg !16941
  store i8 %4, i8* %2, align 1, !dbg !16941
  ret void, !dbg !16942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16945, metadata !DIExpression()), !dbg !16946
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16947
  br i1 %2, label %3, label %7, !dbg !16949

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()) #26, !dbg !16950
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16953
  %5 = load i8, i8* %4, align 1, !dbg !16954
  %6 = and i8 %5, 127, !dbg !16954
  store i8 %6, i8* %4, align 1, !dbg !16954
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16017, metadata !DIExpression()) #26, !dbg !16955
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16957
  br label %7, !dbg !16958

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16959
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16960
  %10 = zext i1 %9 to i32, !dbg !16960
  tail call fastcc void @update_cache(i32 noundef %10) #28, !dbg !16961
  ret void, !dbg !16962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16965, metadata !DIExpression()), !dbg !16966
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16967
  %3 = load i8, i8* %2, align 1, !dbg !16968
  %4 = or i8 %3, 2, !dbg !16968
  store i8 %4, i8* %2, align 1, !dbg !16968
  ret void, !dbg !16969
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #25 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16972, metadata !DIExpression()), !dbg !16976
  call void @llvm.dbg.value(metadata i32 0, metadata !16973, metadata !DIExpression()), !dbg !16977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !16978
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16980, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16978
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16983
  br i1 %3, label %5, label %4, !dbg !16984

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !16985
  unreachable, !dbg !16985

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !16978
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16986
  call void @llvm.dbg.value(metadata i32 undef, metadata !16975, metadata !DIExpression()), !dbg !16977
  call void @llvm.dbg.value(metadata i32 undef, metadata !16973, metadata !DIExpression()), !dbg !16977
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !16990
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16992
  br i1 %6, label %8, label %7, !dbg !16993

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !16994
  unreachable, !dbg !16994

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16980
  call void @llvm.dbg.value(metadata i32 %9, metadata !15829, metadata !DIExpression()) #26, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %9, metadata !15823, metadata !DIExpression()) #26, !dbg !16978
  call void @llvm.dbg.value(metadata i32 %9, metadata !16975, metadata !DIExpression()), !dbg !16977
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !16990
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !16995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16997, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16973, metadata !DIExpression()), !dbg !16977
  call void @llvm.dbg.value(metadata i32 undef, metadata !16973, metadata !DIExpression()), !dbg !16977
  ret void, !dbg !16998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16999 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17005, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.value(metadata i32 %0, metadata !17003, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17004, metadata !DIExpression()), !dbg !17010
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17011
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !17012
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17013
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17014
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !17015
  call void @llvm.dbg.value(metadata i32 %6, metadata !17006, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.value(metadata i32 0, metadata !17007, metadata !DIExpression()), !dbg !17016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17017
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17019, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17021
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17021
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17017
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17022
  br i1 %8, label %10, label %9, !dbg !17023

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17024
  unreachable, !dbg !17024

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17021
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17017
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17025
  call void @llvm.dbg.value(metadata i32 undef, metadata !17009, metadata !DIExpression()), !dbg !17016
  call void @llvm.dbg.value(metadata i32 undef, metadata !17007, metadata !DIExpression()), !dbg !17016
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17026
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17030
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17031
  br i1 %13, label %14, label %15, !dbg !17032

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17033
  br label %15, !dbg !17035

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17036
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17038
  br i1 %16, label %18, label %17, !dbg !17039

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17040
  unreachable, !dbg !17040

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17019
  call void @llvm.dbg.value(metadata i32 %19, metadata !15829, metadata !DIExpression()) #26, !dbg !17021
  call void @llvm.dbg.value(metadata i32 %19, metadata !15823, metadata !DIExpression()) #26, !dbg !17017
  call void @llvm.dbg.value(metadata i32 %19, metadata !17009, metadata !DIExpression()), !dbg !17016
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #26, !dbg !17043, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !17007, metadata !DIExpression()), !dbg !17016
  call void @llvm.dbg.value(metadata i32 undef, metadata !17007, metadata !DIExpression()), !dbg !17016
  ret i32 %6, !dbg !17044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17045 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17050, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i64 undef, metadata !17052, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17049, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17051, metadata !DIExpression()), !dbg !17053
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17054
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17055
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17056
  br i1 %6, label %7, label %8, !dbg !17059

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 846) #27, !dbg !17060
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 846) #27, !dbg !17060
  unreachable, !dbg !17060

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17062
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17064, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17062
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17067
  br i1 %10, label %12, label %11, !dbg !17068

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17069
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17069
  unreachable, !dbg !17069

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17062
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17070
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17071
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !17072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16547, metadata !DIExpression()) #26, !dbg !17073
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17075
  br i1 %14, label %16, label %15, !dbg !17076

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17077
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17077
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17077
  unreachable, !dbg !17077

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !17078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16543, metadata !DIExpression()) #26, !dbg !17078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16547, metadata !DIExpression()) #26, !dbg !17080
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17082
  br i1 %17, label %19, label %18, !dbg !17083

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17084
  unreachable, !dbg !17084

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !16538, metadata !DIExpression()) #26, !dbg !17078
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !17085
  ret i32 %21, !dbg !17086
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17087 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17091, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17092, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i32 0, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17098
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17100, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17098
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17103
  br i1 %3, label %5, label %4, !dbg !17104

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17105
  unreachable, !dbg !17105

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17098
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17106
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17092, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()), !dbg !17097
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17107
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17092, metadata !DIExpression()), !dbg !17096
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17110
  br i1 %8, label %10, label %9, !dbg !17112

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17113
  br label %10, !dbg !17115

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17116
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17118
  br i1 %11, label %13, label %12, !dbg !17119

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17120
  unreachable, !dbg !17120

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %14, metadata !15829, metadata !DIExpression()) #26, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %14, metadata !15823, metadata !DIExpression()) #26, !dbg !17098
  call void @llvm.dbg.value(metadata i32 %14, metadata !17095, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17123, !srcloc !15871
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17092, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()), !dbg !17097
  ret %struct.k_thread* %7, !dbg !17124
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17125 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17127, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 0, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17136, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17134
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17139
  br i1 %3, label %5, label %4, !dbg !17140

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17141
  unreachable, !dbg !17141

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17134
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17142
  call void @llvm.dbg.value(metadata i32 undef, metadata !17131, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17133
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17143
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17128, metadata !DIExpression()), !dbg !17132
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17146
  br i1 %8, label %11, label %9, !dbg !17148

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17149
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17151
  br label %11, !dbg !17152

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17153
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17155
  br i1 %12, label %14, label %13, !dbg !17156

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17157
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17157
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17157
  unreachable, !dbg !17157

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17136
  call void @llvm.dbg.value(metadata i32 %15, metadata !15829, metadata !DIExpression()) #26, !dbg !17138
  call void @llvm.dbg.value(metadata i32 %15, metadata !15823, metadata !DIExpression()) #26, !dbg !17134
  call void @llvm.dbg.value(metadata i32 %15, metadata !17131, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17158
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !17160, !srcloc !15871
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17133
  ret %struct.k_thread* %7, !dbg !17161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17164, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16972, metadata !DIExpression()) #26, !dbg !17166
  call void @llvm.dbg.value(metadata i32 0, metadata !16973, metadata !DIExpression()) #26, !dbg !17168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17169
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17171, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17169
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17174
  br i1 %3, label %5, label %4, !dbg !17175

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17176
  unreachable, !dbg !17176

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17169
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16975, metadata !DIExpression()) #26, !dbg !17168
  call void @llvm.dbg.value(metadata i32 undef, metadata !16973, metadata !DIExpression()) #26, !dbg !17168
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17179
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17181
  br i1 %6, label %8, label %7, !dbg !17182

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17183
  unreachable, !dbg !17183

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17171
  call void @llvm.dbg.value(metadata i32 %9, metadata !15829, metadata !DIExpression()) #26, !dbg !17173
  call void @llvm.dbg.value(metadata i32 %9, metadata !15823, metadata !DIExpression()) #26, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %9, metadata !16975, metadata !DIExpression()) #26, !dbg !17168
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17186, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !16973, metadata !DIExpression()) #26, !dbg !17168
  call void @llvm.dbg.value(metadata i32 undef, metadata !16973, metadata !DIExpression()) #26, !dbg !17168
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17187
  ret void, !dbg !17188
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17191, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 %1, metadata !17192, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i8 0, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 0, metadata !17194, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17199
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17201, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17199
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17204
  br i1 %4, label %6, label %5, !dbg !17205

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17206
  unreachable, !dbg !17206

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17199
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17207
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i8 poison, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !17194, metadata !DIExpression()), !dbg !17198
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17208
  call void @llvm.dbg.value(metadata i1 %9, metadata !17193, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17197
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17211

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()) #26, !dbg !17212
  %14 = load i8, i8* %7, align 1, !dbg !17218
  %15 = and i8 %14, 127, !dbg !17218
  store i8 %15, i8* %7, align 1, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16017, metadata !DIExpression()) #26, !dbg !17219
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17221
  store i8 %12, i8* %11, align 2, !dbg !17222
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16026, metadata !DIExpression()) #26, !dbg !17223
  %16 = load i8, i8* %7, align 1, !dbg !17225
  %17 = or i8 %16, -128, !dbg !17225
  store i8 %17, i8* %7, align 1, !dbg !17225
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16033, metadata !DIExpression()) #26, !dbg !17226
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16040, metadata !DIExpression()) #26, !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16046, metadata !DIExpression()) #26, !dbg !17228
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17230
  br i1 %18, label %19, label %20, !dbg !17231

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !17232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !17232
  unreachable, !dbg !17232

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17233
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16047, metadata !DIExpression()) #26, !dbg !17228
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17234
  br i1 %22, label %32, label %23, !dbg !17233

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16047, metadata !DIExpression()) #26, !dbg !17228
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17235
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16047, metadata !DIExpression()) #26, !dbg !17228
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !17236
  %27 = icmp sgt i32 %26, 0, !dbg !17237
  br i1 %27, label %28, label %29, !dbg !17238

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !17239
  br label %33, !dbg !17240

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !17234
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16047, metadata !DIExpression()) #26, !dbg !17228
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17234
  br i1 %31, label %32, label %23, !dbg !17233, !llvm.loop !17241

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !17243
  br label %33, !dbg !17244

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17245
  br label %35, !dbg !17246

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17247
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17249
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17251
  br i1 %36, label %38, label %37, !dbg !17252

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17253
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17253
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17253
  unreachable, !dbg !17253

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17201
  call void @llvm.dbg.value(metadata i32 %39, metadata !15829, metadata !DIExpression()) #26, !dbg !17203
  call void @llvm.dbg.value(metadata i32 %39, metadata !15823, metadata !DIExpression()) #26, !dbg !17199
  call void @llvm.dbg.value(metadata i32 %39, metadata !17196, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17254
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #26, !dbg !17256, !srcloc !15871
  call void @llvm.dbg.value(metadata i8 poison, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !17194, metadata !DIExpression()), !dbg !17198
  ret i1 %9, !dbg !17257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17262, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.value(metadata i32 %1, metadata !17263, metadata !DIExpression()), !dbg !17265
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17266
  call void @llvm.dbg.value(metadata i1 %3, metadata !17264, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17265
  br i1 %3, label %4, label %12, !dbg !17267

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17269
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17270
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17270
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17270
  %9 = load i8, i8* %8, align 1, !dbg !17270
  %10 = icmp eq i8 %9, 0, !dbg !17271
  br i1 %10, label %11, label %12, !dbg !17272

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17273
  br label %12, !dbg !17275

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17277 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17279, metadata !DIExpression()), !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17283
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17285, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17287
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17287
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17283
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17288
  br i1 %2, label %4, label %3, !dbg !17289

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17290
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17290
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17290
  unreachable, !dbg !17290

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17287
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17283
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17291
  call void @llvm.dbg.value(metadata i32 undef, metadata !17281, metadata !DIExpression()), !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !17279, metadata !DIExpression()), !dbg !17282
  tail call fastcc void @z_sched_lock() #28, !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17295
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17297
  br i1 %5, label %7, label %6, !dbg !17298

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17299
  unreachable, !dbg !17299

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17285
  call void @llvm.dbg.value(metadata i32 %8, metadata !15829, metadata !DIExpression()) #26, !dbg !17287
  call void @llvm.dbg.value(metadata i32 %8, metadata !15823, metadata !DIExpression()) #26, !dbg !17283
  call void @llvm.dbg.value(metadata i32 %8, metadata !17281, metadata !DIExpression()), !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17295
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17300
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17302, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !17279, metadata !DIExpression()), !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !17279, metadata !DIExpression()), !dbg !17282
  ret void, !dbg !17303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17304 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17305, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %1, metadata !16590, metadata !DIExpression()) #26, !dbg !17310
  %2 = icmp eq i32 %1, 0, !dbg !17311
  br i1 %2, label %4, label %3, !dbg !17312

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.357, i32 0, i32 0), i32 noundef 253) #27, !dbg !17313
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.357, i32 0, i32 0), i32 noundef 253) #27, !dbg !17313
  unreachable, !dbg !17313

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17315
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17315
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17315
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17315
  %9 = load i8, i8* %8, align 1, !dbg !17315
  %10 = icmp eq i8 %9, 1, !dbg !17315
  br i1 %10, label %11, label %12, !dbg !17318

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.358, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.357, i32 0, i32 0), i32 noundef 254) #27, !dbg !17319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.357, i32 0, i32 0), i32 noundef 254) #27, !dbg !17319
  unreachable, !dbg !17319

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17321
  store i8 %13, i8* %8, align 1, !dbg !17321
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17322, !srcloc !17324
  ret void, !dbg !17325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17326 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17328, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17332
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17334, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17332
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17337
  br i1 %2, label %4, label %3, !dbg !17338

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17339
  unreachable, !dbg !17339

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17332
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !17330, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i32 undef, metadata !17328, metadata !DIExpression()), !dbg !17331
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17341
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17341
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17341
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17341
  %9 = load i8, i8* %8, align 1, !dbg !17341
  %10 = icmp eq i8 %9, 0, !dbg !17341
  br i1 %10, label %11, label %12, !dbg !17346

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 999) #27, !dbg !17347
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17347
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 999) #27, !dbg !17347
  unreachable, !dbg !17347

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17349, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %13, metadata !16590, metadata !DIExpression()) #26, !dbg !17354
  %14 = icmp eq i32 %13, 0, !dbg !17355
  br i1 %14, label %16, label %15, !dbg !17356

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17357
  unreachable, !dbg !17357

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17359
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !17360
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !17360
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !17360
  %21 = load i8, i8* %20, align 1, !dbg !17361
  %22 = add i8 %21, 1, !dbg !17361
  store i8 %22, i8* %20, align 1, !dbg !17361
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !17362
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17363
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17365
  br i1 %23, label %25, label %24, !dbg !17366

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17367
  unreachable, !dbg !17367

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %26, metadata !15829, metadata !DIExpression()) #26, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %26, metadata !15823, metadata !DIExpression()) #26, !dbg !17332
  call void @llvm.dbg.value(metadata i32 %26, metadata !17330, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !17368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #26, !dbg !17370, !srcloc !15871
  call void @llvm.dbg.value(metadata i32 1, metadata !17328, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i32 undef, metadata !17328, metadata !DIExpression()), !dbg !17331
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17371
  ret void, !dbg !17372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !17373 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17374
  ret %struct.k_thread* %1, !dbg !17375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !17376 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17380, metadata !DIExpression()), !dbg !17385
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17381, metadata !DIExpression()), !dbg !17385
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17386
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17382, metadata !DIExpression()), !dbg !17385
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17383, metadata !DIExpression()), !dbg !17385
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #28, !dbg !17388
  call void @llvm.dbg.value(metadata i32 %5, metadata !17384, metadata !DIExpression()), !dbg !17385
  %6 = icmp sgt i32 %5, 0, !dbg !17389
  br i1 %6, label %17, label %7, !dbg !17391

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17392
  br i1 %8, label %17, label %9, !dbg !17394

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17395
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17395
  %12 = load i32, i32* %11, align 8, !dbg !17395
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17397
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17397
  %15 = load i32, i32* %14, align 8, !dbg !17397
  %16 = icmp ult i32 %12, %15, !dbg !17398
  br label %17, !dbg !17399

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17400
  ret i1 %18, !dbg !17401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17402 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17419, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17420, metadata !DIExpression()), !dbg !17434
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17435
  br i1 %4, label %5, label %6, !dbg !17438

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17439
  unreachable, !dbg !17439

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17441
  %8 = load i32, i32* %7, align 4, !dbg !17442
  %9 = add nsw i32 %8, 1, !dbg !17442
  store i32 %9, i32* %7, align 4, !dbg !17442
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17443
  store i32 %8, i32* %10, align 8, !dbg !17444
  %11 = load i32, i32* %7, align 4, !dbg !17445
  %12 = icmp eq i32 %11, 0, !dbg !17446
  br i1 %12, label %13, label %35, !dbg !17447

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17448
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17448
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17422, metadata !DIExpression()), !dbg !17448
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17448
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17448
  %17 = load i32, i32* %16, align 4, !dbg !17448
  %18 = shl i32 %17, 2, !dbg !17448
  %19 = alloca i8, i32 %18, align 8, !dbg !17448
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17448
  store i8* %19, i8** %20, align 4, !dbg !17448
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17448
  %22 = alloca i8, i32 %17, align 8, !dbg !17448
  store i8* %22, i8** %21, align 4, !dbg !17448
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17448
  store i32 -1, i32* %23, align 4, !dbg !17448
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17449
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17431, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17421, metadata !DIExpression()), !dbg !17434
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !17451
  br i1 %25, label %26, label %27, !dbg !17448

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17451
  br label %35, !dbg !17452

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !17421, metadata !DIExpression()), !dbg !17434
  %29 = load i32, i32* %7, align 4, !dbg !17453
  %30 = add nsw i32 %29, 1, !dbg !17453
  store i32 %30, i32* %7, align 4, !dbg !17453
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !17455
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !17455
  store i32 %29, i32* %32, align 8, !dbg !17456
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17449
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17431, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17421, metadata !DIExpression()), !dbg !17434
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !17451
  br i1 %34, label %26, label %27, !dbg !17448, !llvm.loop !17457

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17459
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17460
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !17461
  ret void, !dbg !17462
}

; Function Attrs: optsize
declare !dbg !17463 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17468 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17471 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17473, metadata !DIExpression()), !dbg !17475
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17474, metadata !DIExpression()), !dbg !17475
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17476
  br i1 %3, label %4, label %5, !dbg !17479

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17480
  unreachable, !dbg !17480

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17482
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17483
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !17484
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17485
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !17485
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !17487
  br i1 %10, label %11, label %13, !dbg !17488

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17489
  store i32 0, i32* %12, align 4, !dbg !17491
  br label %13, !dbg !17492

13:                                               ; preds = %11, %5
  ret void, !dbg !17493
}

; Function Attrs: optsize
declare !dbg !17494 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17495 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17499, metadata !DIExpression()), !dbg !17502
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17500, metadata !DIExpression()), !dbg !17502
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17503
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #28, !dbg !17504
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17501, metadata !DIExpression()), !dbg !17502
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17500, metadata !DIExpression()), !dbg !17502
  ret %struct.k_thread* %4, !dbg !17505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17506 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17510, metadata !DIExpression()), !dbg !17511
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17512
  ret %struct.rbnode* %2, !dbg !17513
}

; Function Attrs: optsize
declare !dbg !17514 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17517 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17529, metadata !DIExpression()), !dbg !17533
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17534
  %3 = load i32, i32* %2, align 4, !dbg !17534
  %4 = icmp eq i32 %3, 0, !dbg !17536
  br i1 %4, label %10, label %5, !dbg !17537

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17530, metadata !DIExpression()), !dbg !17533
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17538, !range !5407
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17539
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17531, metadata !DIExpression()), !dbg !17533
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef %7) #28, !dbg !17540
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17532, metadata !DIExpression()), !dbg !17533
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17530, metadata !DIExpression()), !dbg !17533
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17533
  ret %struct.k_thread* %11, !dbg !17541
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17542 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17546, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.value(metadata i32 0, metadata !17547, metadata !DIExpression()), !dbg !17549
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.362(%union.anon* noundef %0) #28, !dbg !17550
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17548, metadata !DIExpression()), !dbg !17549
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17551
  br i1 %3, label %8, label %4, !dbg !17552

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17553
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17555
  call void @llvm.dbg.value(metadata i32 1, metadata !17547, metadata !DIExpression()), !dbg !17549
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.362(%union.anon* noundef %0) #28, !dbg !17550
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17548, metadata !DIExpression()), !dbg !17549
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17551
  br i1 %7, label %8, label %4, !dbg !17552, !llvm.loop !17556

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17549
  ret i32 %9, !dbg !17558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.362(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !17559 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17561, metadata !DIExpression()), !dbg !17562
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17563
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef %2) #28, !dbg !17564
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17565
  ret %struct.k_thread* %4, !dbg !17566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !17567 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17576, metadata !DIExpression()), !dbg !17577
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17578
  tail call fastcc void @sys_dlist_init.363(%struct._dnode* noundef nonnull %2) #28, !dbg !17579
  ret void, !dbg !17580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.363(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !17581 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17585, metadata !DIExpression()), !dbg !17586
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17587
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17588
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17589
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17590
  ret void, !dbg !17591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17592 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #28, !dbg !17593
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #28, !dbg !17594
  ret void, !dbg !17595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !17596 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17601, metadata !DIExpression()), !dbg !17602
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17603
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17603
  %4 = load i8, i8* %3, align 2, !dbg !17603
  %5 = sext i8 %4 to i32, !dbg !17604
  ret i32 %5, !dbg !17605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17606 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17610, metadata !DIExpression()), !dbg !17613
  call void @llvm.dbg.value(metadata i32 %1, metadata !17611, metadata !DIExpression()), !dbg !17613
  %3 = add i32 %1, 16, !dbg !17614
  %4 = icmp ult i32 %3, 31, !dbg !17614
  br i1 %4, label %6, label %5, !dbg !17614

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.369, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !17618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17618
  unreachable, !dbg !17618

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17620, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %7, metadata !16590, metadata !DIExpression()) #26, !dbg !17625
  %8 = icmp eq i32 %7, 0, !dbg !17626
  br i1 %8, label %10, label %9, !dbg !17627

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17628
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17628
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17628
  unreachable, !dbg !17628

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17612, metadata !DIExpression()), !dbg !17613
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17630
  ret void, !dbg !17631
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17632 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #28, !dbg !17633
  br i1 %1, label %8, label %2, !dbg !17634

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17635
  br i1 %3, label %8, label %4, !dbg !17636

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17637
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #28, !dbg !17638
  %7 = xor i1 %6, true, !dbg !17636
  br label %8, !dbg !17636

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !17640 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17641, !range !8141
  %2 = icmp eq i8 %1, 0, !dbg !17641
  ret i1 %2, !dbg !17642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17643 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17646, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %1, metadata !16590, metadata !DIExpression()) #26, !dbg !17651
  %2 = icmp eq i32 %1, 0, !dbg !17652
  br i1 %2, label %4, label %3, !dbg !17653

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17654
  unreachable, !dbg !17654

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17656
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17658, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17656
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17661
  br i1 %6, label %8, label %7, !dbg !17662

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17663
  unreachable, !dbg !17663

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17656
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17664
  call void @llvm.dbg.value(metadata i32 undef, metadata !17645, metadata !DIExpression()), !dbg !17665
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17666
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16009, metadata !DIExpression()) #26, !dbg !17669
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !17671
  %11 = load i8, i8* %10, align 1, !dbg !17672
  %12 = and i8 %11, 127, !dbg !17672
  store i8 %12, i8* %10, align 1, !dbg !17672
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16017, metadata !DIExpression()) #26, !dbg !17673
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !17675
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17676
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16026, metadata !DIExpression()) #26, !dbg !17677
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !17679
  %15 = load i8, i8* %14, align 1, !dbg !17680
  %16 = or i8 %15, -128, !dbg !17680
  store i8 %16, i8* %14, align 1, !dbg !17680
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16033, metadata !DIExpression()) #26, !dbg !17681
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16040, metadata !DIExpression()) #26, !dbg !17683
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16046, metadata !DIExpression()) #26, !dbg !17683
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !17685
  br i1 %17, label %18, label %19, !dbg !17686

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !17687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 186) #27, !dbg !17687
  unreachable, !dbg !17687

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.332(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17688
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16047, metadata !DIExpression()) #26, !dbg !17683
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17689
  br i1 %21, label %32, label %22, !dbg !17688

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16047, metadata !DIExpression()) #26, !dbg !17683
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !17690
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16047, metadata !DIExpression()) #26, !dbg !17683
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !17691
  %26 = icmp sgt i32 %25, 0, !dbg !17692
  br i1 %26, label %27, label %29, !dbg !17693

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17694
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !17695
  br label %34, !dbg !17696

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !17689
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16047, metadata !DIExpression()) #26, !dbg !17683
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17689
  br i1 %31, label %32, label %22, !dbg !17688, !llvm.loop !17697

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17699
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !17700
  br label %34, !dbg !17701

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17702
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !17703
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16543, metadata !DIExpression()) #26, !dbg !17703
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16547, metadata !DIExpression()) #26, !dbg !17705
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17707
  br i1 %35, label %37, label %36, !dbg !17708

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17709
  unreachable, !dbg !17709

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !17658
  call void @llvm.dbg.value(metadata i32 %38, metadata !15829, metadata !DIExpression()) #26, !dbg !17660
  call void @llvm.dbg.value(metadata i32 %38, metadata !15823, metadata !DIExpression()) #26, !dbg !17656
  call void @llvm.dbg.value(metadata i32 %38, metadata !17645, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !17703
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !17710
  ret void, !dbg !17711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17712 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17716, metadata !DIExpression()), !dbg !17719
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17720, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %3, metadata !16590, metadata !DIExpression()) #26, !dbg !17725
  %4 = icmp eq i32 %3, 0, !dbg !17726
  br i1 %4, label %6, label %5, !dbg !17727

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17728
  unreachable, !dbg !17728

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17730
  br i1 %7, label %8, label %10, !dbg !17732

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17733
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #28, !dbg !17735
  br label %15, !dbg !17736

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !17717, metadata !DIExpression()), !dbg !17719
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #28, !dbg !17737
  %12 = sext i32 %11 to i64, !dbg !17737
  call void @llvm.dbg.value(metadata i64 %12, metadata !17717, metadata !DIExpression()), !dbg !17719
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #28, !dbg !17738
  %14 = trunc i64 %13 to i32, !dbg !17738
  call void @llvm.dbg.value(metadata i32 %14, metadata !17718, metadata !DIExpression()), !dbg !17719
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !17719
  ret i32 %16, !dbg !17739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17744, metadata !DIExpression()), !dbg !17745
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17746, !srcloc !17748
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #28, !dbg !17749
  ret void, !dbg !17750
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17751 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17755, metadata !DIExpression()), !dbg !17759
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17760, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %2, metadata !16590, metadata !DIExpression()) #26, !dbg !17765
  %3 = icmp eq i32 %2, 0, !dbg !17766
  br i1 %3, label %5, label %4, !dbg !17767

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17768
  unreachable, !dbg !17768

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17770
  br i1 %6, label %7, label %8, !dbg !17772

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #28, !dbg !17773
  br label %43, !dbg !17775

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17757, metadata !DIExpression()), !dbg !17759
  %9 = icmp sgt i64 %0, -3, !dbg !17776
  br i1 %9, label %10, label %14, !dbg !17778

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17779
  %12 = trunc i64 %0 to i32, !dbg !17781
  %13 = add i32 %11, %12, !dbg !17781
  call void @llvm.dbg.value(metadata i32 %13, metadata !17756, metadata !DIExpression()), !dbg !17759
  br label %17, !dbg !17782

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17783
  %16 = sub i32 -2, %15, !dbg !17783
  call void @llvm.dbg.value(metadata i32 %16, metadata !17756, metadata !DIExpression()), !dbg !17759
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17785
  call void @llvm.dbg.value(metadata i32 %18, metadata !17756, metadata !DIExpression()), !dbg !17759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17786
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17788, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17790
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17790
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17786
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17791
  br i1 %20, label %22, label %21, !dbg !17792

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17793
  unreachable, !dbg !17793

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17790
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17786
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17794
  call void @llvm.dbg.value(metadata i32 undef, metadata !17758, metadata !DIExpression()), !dbg !17759
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17795
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17796
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #28, !dbg !17797
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17798
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17799
  tail call fastcc void @z_add_thread_timeout.345(%struct.k_thread* noundef %24, [1 x i64] %25) #28, !dbg !17799
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17800
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #28, !dbg !17801
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !17802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16543, metadata !DIExpression()) #26, !dbg !17802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16547, metadata !DIExpression()) #26, !dbg !17804
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17806
  br i1 %27, label %29, label %28, !dbg !17807

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17808
  unreachable, !dbg !17808

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17788
  call void @llvm.dbg.value(metadata i32 %30, metadata !15829, metadata !DIExpression()) #26, !dbg !17790
  call void @llvm.dbg.value(metadata i32 %30, metadata !15823, metadata !DIExpression()) #26, !dbg !17786
  call void @llvm.dbg.value(metadata i32 %30, metadata !17758, metadata !DIExpression()), !dbg !17759
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !17802
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !17809
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17810
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #28, !dbg !17810
  br i1 %33, label %34, label %35, !dbg !17813

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17814
  unreachable, !dbg !17814

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17816
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17817
  %38 = zext i32 %37 to i64, !dbg !17817
  %39 = sub nsw i64 %36, %38, !dbg !17818
  call void @llvm.dbg.value(metadata i64 %39, metadata !17755, metadata !DIExpression()), !dbg !17759
  %40 = icmp sgt i64 %39, 0, !dbg !17819
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17819
  %42 = trunc i64 %41 to i32, !dbg !17819
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17759
  ret i32 %44, !dbg !17820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17821 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17823, metadata !DIExpression()), !dbg !17824
  call void @llvm.dbg.value(metadata i64 %0, metadata !15877, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i32 10000, metadata !15880, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i32 1000, metadata !15881, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i8 1, metadata !15882, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i1 false, metadata !15883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17825
  call void @llvm.dbg.value(metadata i1 false, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17825
  call void @llvm.dbg.value(metadata i8 0, metadata !15885, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i1 false, metadata !15886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17825
  call void @llvm.dbg.value(metadata i1 true, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17825
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i64 %0, metadata !15877, metadata !DIExpression()), !dbg !17825
  %2 = udiv i64 %0, 10, !dbg !17827
  ret i64 %2, !dbg !17831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17832 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17833, !srcloc !17835
  tail call void @z_impl_k_yield() #28, !dbg !17836
  ret void, !dbg !17837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17842, metadata !DIExpression()), !dbg !17844
  %2 = sext i32 %0 to i64, !dbg !17845
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #28, !dbg !17846
  call void @llvm.dbg.value(metadata i64 %3, metadata !17843, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17844
  %4 = shl i64 %3, 32, !dbg !17847
  %5 = ashr exact i64 %4, 32, !dbg !17847
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #28, !dbg !17848
  call void @llvm.dbg.value(metadata i32 %6, metadata !17843, metadata !DIExpression()), !dbg !17844
  %7 = sext i32 %6 to i64, !dbg !17849
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #28, !dbg !17850
  %9 = trunc i64 %8 to i32, !dbg !17850
  ret i32 %9, !dbg !17851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17852 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17854, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i64 %0, metadata !15877, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15880, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i32 10000, metadata !15881, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i8 1, metadata !15882, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i1 false, metadata !15883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17856
  call void @llvm.dbg.value(metadata i1 true, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17856
  call void @llvm.dbg.value(metadata i8 0, metadata !15885, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i1 false, metadata !15886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17856
  call void @llvm.dbg.value(metadata i1 true, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17856
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !17856
  %2 = add i64 %0, 99, !dbg !17858
  call void @llvm.dbg.value(metadata i64 %2, metadata !15877, metadata !DIExpression()), !dbg !17856
  %3 = udiv i64 %2, 100, !dbg !17859
  ret i64 %3, !dbg !17860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17861 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17863, metadata !DIExpression()), !dbg !17864
  call void @llvm.dbg.value(metadata i64 %0, metadata !15877, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 10000, metadata !15880, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15881, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i8 1, metadata !15882, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i1 false, metadata !15883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  call void @llvm.dbg.value(metadata i1 false, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  call void @llvm.dbg.value(metadata i8 0, metadata !15885, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i1 true, metadata !15886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  call void @llvm.dbg.value(metadata i1 false, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i64 0, metadata !15888, metadata !DIExpression()), !dbg !17865
  %2 = mul i64 %0, 100, !dbg !17867
  ret i64 %2, !dbg !17869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17872, metadata !DIExpression()), !dbg !17873
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #28, !dbg !17874
  br i1 %2, label %14, label %3, !dbg !17876

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17877
  %5 = icmp slt i32 %4, 0, !dbg !17879
  br i1 %5, label %6, label %10, !dbg !17880

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17881
  %8 = load i8, i8* %7, align 1, !dbg !17881
  %9 = icmp eq i8 %8, 16, !dbg !17884
  br i1 %9, label %10, label %14, !dbg !17885

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !17886
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17887
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17888, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %11, metadata !16590, metadata !DIExpression()) #26, !dbg !17892
  %12 = icmp eq i32 %11, 0, !dbg !17893
  br i1 %12, label %13, label %14, !dbg !17894

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17895
  br label %14, !dbg !17897

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17901, metadata !DIExpression()), !dbg !17902
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17903
  %3 = load i8, i8* %2, align 1, !dbg !17903
  %4 = and i8 %3, 2, !dbg !17904
  %5 = icmp ne i8 %4, 0, !dbg !17905
  ret i1 %5, !dbg !17906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !17907 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17912
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17911, metadata !DIExpression()), !dbg !17913
  ret %struct.k_thread* %1, !dbg !17914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17915 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17916, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %1, metadata !16590, metadata !DIExpression()) #26, !dbg !17919
  %2 = icmp eq i32 %1, 0, !dbg !17920
  br i1 %2, label %3, label %8, !dbg !17921

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17922
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #28, !dbg !17923
  %6 = icmp ne i32 %5, 0, !dbg !17921
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17927, metadata !DIExpression()), !dbg !17929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !17930
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17932, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !17934
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17934
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !17930
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17935
  br i1 %3, label %5, label %4, !dbg !17936

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !17937
  unreachable, !dbg !17937

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17932
  call void @llvm.dbg.value(metadata i32 %6, metadata !15829, metadata !DIExpression()) #26, !dbg !17934
  call void @llvm.dbg.value(metadata i32 %6, metadata !15823, metadata !DIExpression()) #26, !dbg !17930
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17938
  call void @llvm.dbg.value(metadata i32 %6, metadata !17928, metadata !DIExpression()), !dbg !17929
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17939
  %8 = load i8, i8* %7, align 4, !dbg !17939
  %9 = and i8 %8, 1, !dbg !17941
  %10 = icmp eq i8 %9, 0, !dbg !17942
  br i1 %10, label %15, label %11, !dbg !17943

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17944
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17947
  br i1 %12, label %14, label %13, !dbg !17948

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17949
  unreachable, !dbg !17949

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()) #26, !dbg !17944
  call void @llvm.dbg.value(metadata i32 %6, metadata !15865, metadata !DIExpression()) #26, !dbg !17950
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17952, !srcloc !15871
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.378, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !17953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17953
  unreachable, !dbg !17953

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17957
  %17 = load i8, i8* %16, align 1, !dbg !17957
  %18 = and i8 %17, 8, !dbg !17959
  %19 = icmp eq i8 %18, 0, !dbg !17960
  br i1 %19, label %24, label %20, !dbg !17961

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17962
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17965
  br i1 %21, label %23, label %22, !dbg !17966

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !17967
  unreachable, !dbg !17967

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()) #26, !dbg !17962
  call void @llvm.dbg.value(metadata i32 %6, metadata !15865, metadata !DIExpression()) #26, !dbg !17968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17970, !srcloc !15871
  br label %39, !dbg !17971

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #28, !dbg !17972
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17973
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17975
  br i1 %26, label %27, label %35, !dbg !17976

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17977, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %28, metadata !16590, metadata !DIExpression()) #26, !dbg !17980
  %29 = icmp eq i32 %28, 0, !dbg !17981
  br i1 %29, label %30, label %35, !dbg !17982

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !17983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16543, metadata !DIExpression()) #26, !dbg !17983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16547, metadata !DIExpression()) #26, !dbg !17986
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17988
  br i1 %31, label %33, label %32, !dbg !17989

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !17990
  unreachable, !dbg !17990

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !16538, metadata !DIExpression()) #26, !dbg !17983
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !17991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17992
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.379, i32 0, i32 0)) #27, !dbg !17992
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17992
  unreachable, !dbg !17992

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !17996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !17996
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17998
  br i1 %36, label %38, label %37, !dbg !17999

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !18000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !18000
  unreachable, !dbg !18000

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()) #26, !dbg !17996
  call void @llvm.dbg.value(metadata i32 %6, metadata !15865, metadata !DIExpression()) #26, !dbg !18001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18003, !srcloc !15871
  br label %39, !dbg !18004

39:                                               ; preds = %38, %23
  ret void, !dbg !18004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18007, metadata !DIExpression()), !dbg !18008
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18009
  %3 = load i8, i8* %2, align 1, !dbg !18009
  %4 = and i8 %3, 8, !dbg !18011
  %5 = icmp eq i8 %4, 0, !dbg !18012
  br i1 %5, label %6, label %20, !dbg !18013

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18014
  %8 = or i8 %7, 8, !dbg !18014
  store i8 %8, i8* %2, align 1, !dbg !18014
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #28, !dbg !18016
  br i1 %9, label %10, label %12, !dbg !18018

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()) #26, !dbg !18019
  %11 = and i8 %8, 95, !dbg !18022
  store i8 %11, i8* %2, align 1, !dbg !18022
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16017, metadata !DIExpression()) #26, !dbg !18023
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !18025
  br label %12, !dbg !18026

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18027
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !18027
  %15 = icmp eq %union.anon* %14, null, !dbg !18029
  br i1 %15, label %17, label %16, !dbg !18030

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18031
  br label %17, !dbg !18033

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18034
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18035
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #28, !dbg !18036
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !18037
  br label %20, !dbg !18038

20:                                               ; preds = %17, %1
  ret void, !dbg !18039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18040 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18044, metadata !DIExpression()), !dbg !18046
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.362(%union.anon* noundef %0) #28, !dbg !18047
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18045, metadata !DIExpression()), !dbg !18046
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18048
  br i1 %3, label %10, label %4, !dbg !18049

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18050
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18052
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18053, metadata !DIExpression()), !dbg !18059
  call void @llvm.dbg.value(metadata i32 0, metadata !18058, metadata !DIExpression()), !dbg !18059
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18061
  store i32 0, i32* %7, align 4, !dbg !18062
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18063
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.362(%union.anon* noundef %0) #28, !dbg !18047
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18045, metadata !DIExpression()), !dbg !18046
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18048
  br i1 %9, label %10, label %4, !dbg !18049, !llvm.loop !18064

10:                                               ; preds = %4, %1
  ret void, !dbg !18066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18067 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18072, metadata !DIExpression()), !dbg !18075
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18071, metadata !DIExpression()), !dbg !18075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !18076
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18078, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !18080
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !18080
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !18076
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18081
  br i1 %4, label %6, label %5, !dbg !18082

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !18083
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18083
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !18083
  unreachable, !dbg !18083

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18078
  call void @llvm.dbg.value(metadata i32 %7, metadata !15829, metadata !DIExpression()) #26, !dbg !18080
  call void @llvm.dbg.value(metadata i32 %7, metadata !15823, metadata !DIExpression()) #26, !dbg !18076
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18084
  call void @llvm.dbg.value(metadata i32 %7, metadata !18073, metadata !DIExpression()), !dbg !18075
  call void @llvm.dbg.value(metadata i32 0, metadata !18074, metadata !DIExpression()), !dbg !18075
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18085
  %9 = load i8, i8* %8, align 1, !dbg !18085
  %10 = and i8 %9, 8, !dbg !18087
  %11 = icmp eq i8 %10, 0, !dbg !18088
  br i1 %11, label %12, label %35, !dbg !18089

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18072, metadata !DIExpression()), !dbg !18075
  %14 = icmp eq i64 %13, 0, !dbg !18090
  br i1 %14, label %35, label %15, !dbg !18092

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18093
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18095
  br i1 %17, label %35, label %18, !dbg !18096

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18097
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !18097
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18098
  %22 = icmp eq %union.anon* %20, %21, !dbg !18099
  br i1 %22, label %35, label %23, !dbg !18100

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18101, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 %24, metadata !16590, metadata !DIExpression()) #26, !dbg !18107
  %25 = icmp eq i32 %24, 0, !dbg !18108
  br i1 %25, label %27, label %26, !dbg !18109

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.380, i32 0, i32 0)) #27, !dbg !18110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18110
  unreachable, !dbg !18110

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18112
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18113
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #28, !dbg !18114
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18115
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #28, !dbg !18116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16538, metadata !DIExpression()) #26, !dbg !18117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16543, metadata !DIExpression()) #26, !dbg !18117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16547, metadata !DIExpression()) #26, !dbg !18119
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18121
  br i1 %31, label %33, label %32, !dbg !18122

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !18123
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18123
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 225) #27, !dbg !18123
  unreachable, !dbg !18123

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !16538, metadata !DIExpression()) #26, !dbg !18117
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !18124
  call void @llvm.dbg.value(metadata i32 %34, metadata !18074, metadata !DIExpression()), !dbg !18075
  br label %40, !dbg !18125

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18126
  call void @llvm.dbg.value(metadata i32 %36, metadata !18074, metadata !DIExpression()), !dbg !18075
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !18127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !18127
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18129
  br i1 %37, label %39, label %38, !dbg !18130

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !18131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !18131
  unreachable, !dbg !18131

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15851, metadata !DIExpression()) #26, !dbg !18127
  call void @llvm.dbg.value(metadata i32 %7, metadata !15865, metadata !DIExpression()) #26, !dbg !18132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !18134, !srcloc !15871
  br label %40, !dbg !18135

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18075
  ret i32 %41, !dbg !18136
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18137 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18141, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i32 %1, metadata !18142, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i8* %2, metadata !18143, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i8 0, metadata !18145, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i32 0, metadata !18146, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15817, metadata !DIExpression()) #26, !dbg !18151
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18153, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !18155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !18155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !18151
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18156
  br i1 %5, label %7, label %6, !dbg !18157

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !18158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 148) #27, !dbg !18158
  unreachable, !dbg !18158

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #26, !dbg !18155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #26, !dbg !18151
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18159
  call void @llvm.dbg.value(metadata i32 undef, metadata !18148, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i8 poison, metadata !18145, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i32 undef, metadata !18146, metadata !DIExpression()), !dbg !18150
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #28, !dbg !18160
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18144, metadata !DIExpression()), !dbg !18149
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18163
  br i1 %10, label %15, label %11, !dbg !18165

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18166, metadata !DIExpression()), !dbg !18173
  call void @llvm.dbg.value(metadata i32 %1, metadata !18171, metadata !DIExpression()), !dbg !18173
  call void @llvm.dbg.value(metadata i8* %2, metadata !18172, metadata !DIExpression()), !dbg !18173
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18053, metadata !DIExpression()), !dbg !18176
  call void @llvm.dbg.value(metadata i32 %1, metadata !18058, metadata !DIExpression()), !dbg !18176
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18178
  store i32 %1, i32* %12, align 4, !dbg !18179
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18180
  store i8* %2, i8** %13, align 4, !dbg !18181
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18182
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18183
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #28, !dbg !18184
  call void @llvm.dbg.value(metadata i8 1, metadata !18145, metadata !DIExpression()), !dbg !18149
  br label %15, !dbg !18185

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18145, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !18186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15856, metadata !DIExpression()) #26, !dbg !18186
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18188
  br i1 %16, label %18, label %17, !dbg !18189

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !18190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.326, i32 0, i32 0), i32 noundef 194) #27, !dbg !18190
  unreachable, !dbg !18190

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18149
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18153
  call void @llvm.dbg.value(metadata i32 %20, metadata !15829, metadata !DIExpression()) #26, !dbg !18155
  call void @llvm.dbg.value(metadata i32 %20, metadata !15823, metadata !DIExpression()) #26, !dbg !18151
  call void @llvm.dbg.value(metadata i32 %20, metadata !18148, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()) #26, !dbg !18186
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()) #26, !dbg !18191
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !18193, !srcloc !15871
  call void @llvm.dbg.value(metadata i8 poison, metadata !18145, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.value(metadata i32 undef, metadata !18146, metadata !DIExpression()), !dbg !18150
  ret i1 %19, !dbg !18194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18195 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18201, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata i64 undef, metadata !18203, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18200, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18202, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata i8** %4, metadata !18204, metadata !DIExpression()), !dbg !18206
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !18207
  call void @llvm.dbg.value(metadata i32 %6, metadata !18205, metadata !DIExpression()), !dbg !18206
  %7 = icmp eq i8** %4, null, !dbg !18208
  br i1 %7, label %12, label %8, !dbg !18210

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18211
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18213
  %11 = load i8*, i8** %10, align 4, !dbg !18213
  store i8* %11, i8** %4, align 4, !dbg !18214
  br label %12, !dbg !18215

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18217 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18219
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18220
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #27, !dbg !18221
  ret void, !dbg !18222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18223 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18233, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18231, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18232, metadata !DIExpression()), !dbg !18250
  %5 = icmp eq i64 %4, -1, !dbg !18251
  br i1 %5, label %63, label %6, !dbg !18253

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18254
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.385(%struct._dnode* noundef %7) #28, !dbg !18254
  br i1 %8, label %9, label %10, !dbg !18257

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.388, i32 0, i32 0), i32 noundef 99) #27, !dbg !18258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.389, i32 0, i32 0)) #27, !dbg !18258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.388, i32 0, i32 0), i32 noundef 99) #27, !dbg !18258
  unreachable, !dbg !18258

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18260
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18261
  call void @llvm.dbg.value(metadata i32 0, metadata !18234, metadata !DIExpression()), !dbg !18262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18270
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18272, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18279
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18279
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18270
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18280
  br i1 %13, label %15, label %14, !dbg !18283

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18284
  unreachable, !dbg !18284

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18272
  call void @llvm.dbg.value(metadata i32 %16, metadata !18275, metadata !DIExpression()) #26, !dbg !18279
  call void @llvm.dbg.value(metadata i32 %16, metadata !18269, metadata !DIExpression()) #26, !dbg !18270
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18286
  call void @llvm.dbg.value(metadata i32 %16, metadata !18240, metadata !DIExpression()), !dbg !18262
  call void @llvm.dbg.value(metadata i32 undef, metadata !18234, metadata !DIExpression()), !dbg !18262
  %17 = icmp slt i64 %4, -1, !dbg !18287
  br i1 %17, label %18, label %24, !dbg !18288

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18289
  %20 = add i64 %4, %19, !dbg !18290
  %21 = sub i64 -2, %20, !dbg !18290
  call void @llvm.dbg.value(metadata i64 %21, metadata !18244, metadata !DIExpression()), !dbg !18291
  %22 = icmp sgt i64 %21, 1, !dbg !18292
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18292
  br label %29, !dbg !18293

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18294
  %26 = tail call fastcc i32 @elapsed.393() #28, !dbg !18296
  %27 = sext i32 %26 to i64, !dbg !18296
  %28 = add nsw i64 %25, %27, !dbg !18297
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18298
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18299
  store i64 %30, i64* %31, align 8, !dbg !18300
  %32 = tail call fastcc %struct._timeout* @first() #28, !dbg !18301
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18241, metadata !DIExpression()), !dbg !18303
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18304
  br i1 %33, label %48, label %34, !dbg !18304

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18305
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18241, metadata !DIExpression()), !dbg !18303
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18309
  %38 = load i64, i64* %37, align 8, !dbg !18309
  %39 = icmp slt i64 %35, %38, !dbg !18310
  br i1 %39, label %40, label %44, !dbg !18311

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18309
  %42 = sub nsw i64 %38, %35, !dbg !18312
  store i64 %42, i64* %41, align 8, !dbg !18312
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18314
  tail call fastcc void @sys_dlist_insert.394(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #28, !dbg !18315
  br label %49, !dbg !18316

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18317
  store i64 %45, i64* %31, align 8, !dbg !18317
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #28, !dbg !18318
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18241, metadata !DIExpression()), !dbg !18303
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18304
  br i1 %47, label %48, label %34, !dbg !18304, !llvm.loop !18319

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.395(%struct._dnode* noundef nonnull %7) #28, !dbg !18321
  br label %49, !dbg !18324

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #28, !dbg !18325
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18326
  br i1 %51, label %52, label %59, !dbg !18327

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #28, !dbg !18328
  call void @llvm.dbg.value(metadata i32 %53, metadata !18247, metadata !DIExpression()), !dbg !18329
  %54 = icmp ne i32 %53, 0, !dbg !18330
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18332
  br i1 %57, label %59, label %58, !dbg !18332

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !18333
  br label %59, !dbg !18335

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18342
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18344
  br i1 %60, label %62, label %61, !dbg !18347

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18348
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18348
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18348
  unreachable, !dbg !18348

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18336, metadata !DIExpression()) #26, !dbg !18342
  call void @llvm.dbg.value(metadata i32 %16, metadata !18350, metadata !DIExpression()) #26, !dbg !18353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !18355, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 undef, metadata !18234, metadata !DIExpression()), !dbg !18262
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !18357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.385(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18358 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18364, metadata !DIExpression()), !dbg !18365
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18366
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18366
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18367
  ret i1 %4, !dbg !18368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.393() unnamed_addr #1 !dbg !18369 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18372
  %2 = icmp eq i32 %1, 0, !dbg !18373
  br i1 %2, label %3, label %5, !dbg !18372

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18374
  br label %5, !dbg !18372

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18372
  ret i32 %6, !dbg !18375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !18376 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.400() #28, !dbg !18382
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18380, metadata !DIExpression()), !dbg !18383
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18384
  ret %struct._timeout* %2, !dbg !18385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.394(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !18386 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18390, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18391, metadata !DIExpression()), !dbg !18394
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18395
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18395
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18392, metadata !DIExpression()), !dbg !18394
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18396
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18397
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18398
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18399
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18400
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18401
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18402
  ret void, !dbg !18403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !18404 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18408, metadata !DIExpression()), !dbg !18410
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18411
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.398(%struct._dnode* noundef %2) #28, !dbg !18412
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18409, metadata !DIExpression()), !dbg !18410
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18413
  ret %struct._timeout* %4, !dbg !18414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.395(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !18415 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18420, metadata !DIExpression()), !dbg !18423
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18421, metadata !DIExpression()), !dbg !18423
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18424
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18422, metadata !DIExpression()), !dbg !18423
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18425
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18426
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18427
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18428
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18429
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18430
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18431
  ret void, !dbg !18432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18433 {
  %1 = tail call fastcc %struct._timeout* @first() #28, !dbg !18438
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18435, metadata !DIExpression()), !dbg !18439
  %2 = tail call fastcc i32 @elapsed.393() #28, !dbg !18440
  call void @llvm.dbg.value(metadata i32 %2, metadata !18436, metadata !DIExpression()), !dbg !18439
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18441
  br i1 %3, label %14, label %4, !dbg !18443

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18444
  %6 = load i64, i64* %5, align 8, !dbg !18444
  %7 = sext i32 %2 to i64, !dbg !18445
  %8 = sub nsw i64 %6, %7, !dbg !18446
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18447
  br i1 %9, label %14, label %10, !dbg !18448

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18449
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18449
  %13 = trunc i64 %12 to i32, !dbg !18449
  call void @llvm.dbg.value(metadata i32 %13, metadata !18437, metadata !DIExpression()), !dbg !18439
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18451
  call void @llvm.dbg.value(metadata i32 %15, metadata !18437, metadata !DIExpression()), !dbg !18439
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !18452
  %17 = icmp ne i32 %16, 0, !dbg !18454
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18455
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18455
  call void @llvm.dbg.value(metadata i32 %20, metadata !18437, metadata !DIExpression()), !dbg !18439
  ret i32 %20, !dbg !18456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.398(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18457 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18461, metadata !DIExpression()), !dbg !18463
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18462, metadata !DIExpression()), !dbg !18463
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18464
  br i1 %2, label %5, label %3, !dbg !18465

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.399(%struct._dnode* noundef nonnull %0) #28, !dbg !18466
  br label %5, !dbg !18465

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18465
  ret %struct._dnode* %6, !dbg !18467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.399(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18468 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18470, metadata !DIExpression()), !dbg !18472
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18471, metadata !DIExpression()), !dbg !18472
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18473
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18474
  br i1 %3, label %7, label %4, !dbg !18475

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18476
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18476
  br label %7, !dbg !18475

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18475
  ret %struct._dnode* %8, !dbg !18477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.400() unnamed_addr #13 !dbg !18478 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18482, metadata !DIExpression()), !dbg !18483
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.401() #28, !dbg !18484
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18484
  ret %struct._dnode* %3, !dbg !18485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.401() unnamed_addr #13 !dbg !18486 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18490, metadata !DIExpression()), !dbg !18491
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18492
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18493
  ret i1 %2, !dbg !18494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18495 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18499, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 -22, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 0, metadata !18501, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18506
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18508, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18506
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18511
  br i1 %3, label %5, label %4, !dbg !18512

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18513
  unreachable, !dbg !18513

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18514
  call void @llvm.dbg.value(metadata i32 undef, metadata !18503, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.value(metadata i32 -22, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18501, metadata !DIExpression()), !dbg !18505
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18500, metadata !DIExpression()), !dbg !18504
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.385(%struct._dnode* noundef %6) #28, !dbg !18515
  br i1 %7, label %8, label %9, !dbg !18519

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #28, !dbg !18520
  call void @llvm.dbg.value(metadata i32 0, metadata !18500, metadata !DIExpression()), !dbg !18504
  br label %9, !dbg !18522

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !18504
  call void @llvm.dbg.value(metadata i32 %10, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18523
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18525
  br i1 %11, label %13, label %12, !dbg !18526

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18527
  unreachable, !dbg !18527

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18508
  call void @llvm.dbg.value(metadata i32 %14, metadata !18275, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 %14, metadata !18269, metadata !DIExpression()) #26, !dbg !18506
  call void @llvm.dbg.value(metadata i32 %14, metadata !18503, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18523
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18530, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 %10, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18501, metadata !DIExpression()), !dbg !18505
  ret i32 %10, !dbg !18531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !18532 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18534, metadata !DIExpression()), !dbg !18535
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #28, !dbg !18536
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18538
  br i1 %3, label %10, label %4, !dbg !18539

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18540
  %6 = load i64, i64* %5, align 8, !dbg !18540
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18542
  %8 = load i64, i64* %7, align 8, !dbg !18543
  %9 = add nsw i64 %8, %6, !dbg !18543
  store i64 %9, i64* %7, align 8, !dbg !18543
  br label %10, !dbg !18544

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18545
  tail call fastcc void @sys_dlist_remove.404(%struct._dnode* noundef %11) #28, !dbg !18546
  ret void, !dbg !18547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.404(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !18548 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18552, metadata !DIExpression()), !dbg !18555
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18556
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18556
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18553, metadata !DIExpression()), !dbg !18555
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18557
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18557
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18554, metadata !DIExpression()), !dbg !18555
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18558
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18559
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18560
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18561
  tail call fastcc void @sys_dnode_init.405(%struct._dnode* noundef %0) #28, !dbg !18562
  ret void, !dbg !18563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.405(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !18564 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18566, metadata !DIExpression()), !dbg !18567
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18568
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18569
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18570
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18571
  ret void, !dbg !18572
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18573 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18579, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i64 0, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 0, metadata !18581, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18586
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18588, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18586
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18591
  br i1 %3, label %5, label %4, !dbg !18592

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18593
  unreachable, !dbg !18593

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18586
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18594
  call void @llvm.dbg.value(metadata i32 undef, metadata !18583, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.value(metadata i64 0, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18581, metadata !DIExpression()), !dbg !18585
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18595
  call void @llvm.dbg.value(metadata i64 %6, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18598
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18600
  br i1 %7, label %9, label %8, !dbg !18601

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18602
  unreachable, !dbg !18602

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !18588
  call void @llvm.dbg.value(metadata i32 %10, metadata !18275, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 %10, metadata !18269, metadata !DIExpression()) #26, !dbg !18586
  call void @llvm.dbg.value(metadata i32 %10, metadata !18583, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18598
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18603
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18605, !srcloc !18356
  call void @llvm.dbg.value(metadata i64 %6, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18581, metadata !DIExpression()), !dbg !18585
  ret i64 %6, !dbg !18606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18607 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18609, metadata !DIExpression()), !dbg !18613
  call void @llvm.dbg.value(metadata i64 0, metadata !18610, metadata !DIExpression()), !dbg !18613
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.406(%struct._timeout* noundef %0) #28, !dbg !18614
  br i1 %2, label %21, label %3, !dbg !18616

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #28, !dbg !18617
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18611, metadata !DIExpression()), !dbg !18618
  call void @llvm.dbg.value(metadata i64 0, metadata !18610, metadata !DIExpression()), !dbg !18613
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18619
  br i1 %5, label %16, label %6, !dbg !18621

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18611, metadata !DIExpression()), !dbg !18618
  call void @llvm.dbg.value(metadata i64 %8, metadata !18610, metadata !DIExpression()), !dbg !18613
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18622
  %10 = load i64, i64* %9, align 8, !dbg !18622
  %11 = add nsw i64 %10, %8, !dbg !18624
  call void @llvm.dbg.value(metadata i64 %11, metadata !18610, metadata !DIExpression()), !dbg !18613
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18625
  br i1 %12, label %16, label %13, !dbg !18627

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #28, !dbg !18628
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18611, metadata !DIExpression()), !dbg !18618
  call void @llvm.dbg.value(metadata i64 %11, metadata !18610, metadata !DIExpression()), !dbg !18613
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18619
  br i1 %15, label %16, label %6, !dbg !18621, !llvm.loop !18629

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18613
  call void @llvm.dbg.value(metadata i64 %17, metadata !18610, metadata !DIExpression()), !dbg !18613
  %18 = tail call fastcc i32 @elapsed.393() #28, !dbg !18631
  %19 = sext i32 %18 to i64, !dbg !18631
  %20 = sub nsw i64 %17, %19, !dbg !18632
  br label %21, !dbg !18633

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18613
  ret i64 %22, !dbg !18634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.406(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18635 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18639, metadata !DIExpression()), !dbg !18640
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18641
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.385(%struct._dnode* noundef %2) #28, !dbg !18642
  %4 = xor i1 %3, true, !dbg !18643
  ret i1 %4, !dbg !18644
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18645 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18647, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.value(metadata i64 0, metadata !18648, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.value(metadata i32 0, metadata !18649, metadata !DIExpression()), !dbg !18653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18654
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18656, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18654
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18659
  br i1 %3, label %5, label %4, !dbg !18660

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18661
  unreachable, !dbg !18661

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18654
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18662
  call void @llvm.dbg.value(metadata i32 undef, metadata !18651, metadata !DIExpression()), !dbg !18653
  call void @llvm.dbg.value(metadata i64 0, metadata !18648, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.value(metadata i32 undef, metadata !18649, metadata !DIExpression()), !dbg !18653
  %6 = load i64, i64* @curr_tick, align 8, !dbg !18663
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18666
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !18648, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18652
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18667
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18669
  br i1 %8, label %10, label %9, !dbg !18670

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18671
  unreachable, !dbg !18671

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !18656
  call void @llvm.dbg.value(metadata i32 %11, metadata !18275, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 %11, metadata !18269, metadata !DIExpression()) #26, !dbg !18654
  call void @llvm.dbg.value(metadata i32 %11, metadata !18651, metadata !DIExpression()), !dbg !18653
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !18648, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18652
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18667
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !18674, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 undef, metadata !18649, metadata !DIExpression()), !dbg !18653
  %12 = add i64 %7, %6, !dbg !18675
  ret i64 %12, !dbg !18676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18677 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 0, metadata !18680, metadata !DIExpression()), !dbg !18684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18685
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18687, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18685
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18690
  br i1 %2, label %4, label %3, !dbg !18691

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18692
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18692
  unreachable, !dbg !18692

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18685
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18693
  call void @llvm.dbg.value(metadata i32 undef, metadata !18682, metadata !DIExpression()), !dbg !18684
  call void @llvm.dbg.value(metadata i32 -1, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 undef, metadata !18680, metadata !DIExpression()), !dbg !18684
  %5 = tail call fastcc i32 @next_timeout() #28, !dbg !18694
  call void @llvm.dbg.value(metadata i32 %5, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18697
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18699
  br i1 %6, label %8, label %7, !dbg !18700

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18701
  unreachable, !dbg !18701

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !18687
  call void @llvm.dbg.value(metadata i32 %9, metadata !18275, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 %9, metadata !18269, metadata !DIExpression()) #26, !dbg !18685
  call void @llvm.dbg.value(metadata i32 %9, metadata !18682, metadata !DIExpression()), !dbg !18684
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18697
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !18704, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 %5, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 undef, metadata !18680, metadata !DIExpression()), !dbg !18684
  ret i32 %5, !dbg !18705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18708, metadata !DIExpression()), !dbg !18718
  call void @llvm.dbg.value(metadata i1 %1, metadata !18709, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18718
  call void @llvm.dbg.value(metadata i32 0, metadata !18710, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18720
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18722, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18720
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18725
  br i1 %4, label %6, label %5, !dbg !18726

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18727
  unreachable, !dbg !18727

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18720
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18728
  call void @llvm.dbg.value(metadata i32 undef, metadata !18712, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18710, metadata !DIExpression()), !dbg !18719
  %7 = tail call fastcc i32 @next_timeout() #28, !dbg !18729
  call void @llvm.dbg.value(metadata i32 %7, metadata !18713, metadata !DIExpression()), !dbg !18730
  call void @llvm.dbg.value(metadata i1 undef, metadata !18716, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18730
  %8 = icmp slt i32 %7, 2, !dbg !18731
  call void @llvm.dbg.value(metadata i1 %8, metadata !18717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18730
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18732
  call void @llvm.dbg.value(metadata i1 %9, metadata !18716, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18730
  br i1 %10, label %14, label %11, !dbg !18732

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18734
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18734
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !18736
  br label %14, !dbg !18737

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18738
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18740
  br i1 %15, label %17, label %16, !dbg !18741

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18742
  unreachable, !dbg !18742

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !18722
  call void @llvm.dbg.value(metadata i32 %18, metadata !18275, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 %18, metadata !18269, metadata !DIExpression()) #26, !dbg !18720
  call void @llvm.dbg.value(metadata i32 %18, metadata !18712, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !18745, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 1, metadata !18710, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18710, metadata !DIExpression()), !dbg !18719
  ret void, !dbg !18746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18751, metadata !DIExpression()), !dbg !18756
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18758
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18760, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18758
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18763
  br i1 %3, label %5, label %4, !dbg !18764

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18765
  unreachable, !dbg !18765

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18758
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18766
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18756
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  %6 = tail call fastcc %struct._timeout* @first() #28, !dbg !18767
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18768
  br i1 %7, label %37, label %8, !dbg !18769

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18756
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18770
  %14 = load i64, i64* %13, align 8, !dbg !18770
  %15 = sext i32 %11 to i64, !dbg !18771
  %16 = icmp sgt i64 %14, %15, !dbg !18772
  br i1 %16, label %35, label %17, !dbg !18773

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18753, metadata !DIExpression()), !dbg !18774
  %18 = trunc i64 %14 to i32, !dbg !18775
  call void @llvm.dbg.value(metadata i32 %18, metadata !18755, metadata !DIExpression()), !dbg !18774
  %19 = sext i32 %18 to i64, !dbg !18776
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18777
  %21 = add i64 %20, %19, !dbg !18777
  store i64 %21, i64* @curr_tick, align 8, !dbg !18777
  store i64 0, i64* %13, align 8, !dbg !18778
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #28, !dbg !18779
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18780
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18782
  br i1 %22, label %24, label %23, !dbg !18783

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18784
  unreachable, !dbg !18784

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18336, metadata !DIExpression()) #26, !dbg !18780
  call void @llvm.dbg.value(metadata i32 %12, metadata !18350, metadata !DIExpression()) #26, !dbg !18785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18787, !srcloc !18356
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18788
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18788
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !18789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18790
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18792, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18790
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18795
  br i1 %28, label %30, label %29, !dbg !18796

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18797
  unreachable, !dbg !18797

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18790
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18798
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18799
  %32 = sub nsw i32 %31, %18, !dbg !18799
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18756
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  %33 = tail call fastcc %struct._timeout* @first() #28, !dbg !18767
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18768
  br i1 %34, label %37, label %8, !dbg !18769, !llvm.loop !18800

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18802
  store i64 %36, i64* %13, align 8, !dbg !18802
  br label %41, !dbg !18805

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18756
  %40 = sext i32 %39 to i64, !dbg !18806
  br label %41, !dbg !18806

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18806
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18807
  %45 = add i64 %44, %42, !dbg !18807
  store i64 %45, i64* @curr_tick, align 8, !dbg !18807
  store i32 0, i32* @announce_remaining, align 4, !dbg !18808
  %46 = tail call fastcc i32 @next_timeout() #28, !dbg !18809
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !18810
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18811
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18813
  br i1 %47, label %49, label %48, !dbg !18814

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18815
  unreachable, !dbg !18815

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18756
  call void @llvm.dbg.value(metadata i32 %50, metadata !18336, metadata !DIExpression()) #26, !dbg !18811
  call void @llvm.dbg.value(metadata i32 %50, metadata !18350, metadata !DIExpression()) #26, !dbg !18816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #26, !dbg !18818, !srcloc !18356
  ret void, !dbg !18819
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18820 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18824, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 0, metadata !18825, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18830
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18832, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18830
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18835
  br i1 %2, label %4, label %3, !dbg !18836

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.390, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18837
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.392, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 148) #27, !dbg !18837
  unreachable, !dbg !18837

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18830
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18838
  call void @llvm.dbg.value(metadata i32 undef, metadata !18827, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.value(metadata i64 0, metadata !18824, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18825, metadata !DIExpression()), !dbg !18829
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18839
  %6 = tail call fastcc i32 @elapsed.393() #28, !dbg !18842
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18843
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18845
  br i1 %7, label %9, label %8, !dbg !18846

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.397, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.391, i32 0, i32 0), i32 noundef 194) #27, !dbg !18847
  unreachable, !dbg !18847

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18832
  call void @llvm.dbg.value(metadata i32 %10, metadata !18275, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 %10, metadata !18269, metadata !DIExpression()) #26, !dbg !18830
  call void @llvm.dbg.value(metadata i32 %10, metadata !18827, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18828
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18843
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18850, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 undef, metadata !18825, metadata !DIExpression()), !dbg !18829
  %11 = sext i32 %6 to i64, !dbg !18842
  %12 = add i64 %5, %11, !dbg !18851
  ret i64 %12, !dbg !18852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18853 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18854
  %2 = trunc i64 %1 to i32, !dbg !18855
  ret i32 %2, !dbg !18856
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18857 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18858
  ret i64 %1, !dbg !18859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18862, metadata !DIExpression()), !dbg !18869
  %2 = icmp eq i32 %0, 0, !dbg !18870
  br i1 %2, label %10, label %3, !dbg !18872

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.413() #28, !dbg !18873
  call void @llvm.dbg.value(metadata i32 %4, metadata !18863, metadata !DIExpression()), !dbg !18869
  %5 = mul i32 %0, 168, !dbg !18874
  call void @llvm.dbg.value(metadata i32 %5, metadata !18864, metadata !DIExpression()), !dbg !18869
  br label %6, !dbg !18875

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.413() #28, !dbg !18876
  call void @llvm.dbg.value(metadata i32 %7, metadata !18865, metadata !DIExpression()), !dbg !18877
  %8 = sub i32 %7, %4, !dbg !18878
  %9 = icmp ult i32 %8, %5, !dbg !18880
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.413() unnamed_addr #1 !dbg !18882 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.414() #28, !dbg !18883
  ret i32 %1, !dbg !18884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.414() unnamed_addr #1 !dbg !18885 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18886
  ret i32 %1, !dbg !18887
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18888 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18892, metadata !DIExpression()), !dbg !18894
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18895

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #28, !dbg !18896
  br label %14, !dbg !18900

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18893, metadata !DIExpression()), !dbg !18894
  %6 = icmp slt i64 %2, -1, !dbg !18901
  br i1 %6, label %7, label %9, !dbg !18904

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18905
  br label %14, !dbg !18906

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #28, !dbg !18908
  %11 = icmp ugt i64 %2, 1, !dbg !18909
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18909
  %13 = add nsw i64 %10, %12, !dbg !18910
  br label %14, !dbg !18911

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18912
  ret i64 %15, !dbg !18913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18914 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.417, i32 0, i32 0)) #27, !dbg !18916
  ret void, !dbg !18917
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18920, metadata !DIExpression()), !dbg !18942
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18921, metadata !DIExpression()), !dbg !18943
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !18944

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.421, i32 0, i32 0), i32 noundef 24) #27, !dbg !18948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.422, i32 0, i32 0)) #27, !dbg !18948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.421, i32 0, i32 0), i32 noundef 24) #27, !dbg !18948
  unreachable, !dbg !18948

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18921, metadata !DIExpression()), !dbg !18943
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18951
  br i1 %5, label %7, label %6, !dbg !18952

6:                                                ; preds = %3
  ret i32 0, !dbg !18953

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18954
  %9 = load i8*, i8** %8, align 4, !dbg !18954
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18957
  %11 = load i32, i32* %10, align 4, !dbg !18957
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #28, !dbg !18958
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18959
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !18921, metadata !DIExpression()), !dbg !18943
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18960
  br i1 %13, label %2, label %3, !dbg !18944, !llvm.loop !18961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18963 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18967, metadata !DIExpression()), !dbg !18970
  call void @llvm.dbg.value(metadata i8* %1, metadata !18968, metadata !DIExpression()), !dbg !18970
  call void @llvm.dbg.value(metadata i32 %2, metadata !18969, metadata !DIExpression()), !dbg !18970
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18971
  tail call fastcc void @z_waitq_init.423(%union.anon* noundef nonnull %4) #28, !dbg !18972
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18973
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18974
  ret void, !dbg !18975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.423(%union.anon* noundef %0) unnamed_addr #12 !dbg !18976 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18981, metadata !DIExpression()), !dbg !18982
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18983
  tail call fastcc void @sys_dlist_init.424(%struct._dnode* noundef %2) #28, !dbg !18984
  ret void, !dbg !18985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.424(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !18986 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18991, metadata !DIExpression()), !dbg !18992
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18993
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18994
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18995
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18996
  ret void, !dbg !18997
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18998 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19009, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19006, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 %1, metadata !19007, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 %2, metadata !19008, metadata !DIExpression()), !dbg !19019
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !19020
  call void @llvm.dbg.value(metadata i64 %6, metadata !19011, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i8* null, metadata !19012, metadata !DIExpression()), !dbg !19019
  %7 = icmp eq i64 %5, -1, !dbg !19021
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19021
  call void @llvm.dbg.value(metadata i64 %8, metadata !19011, metadata !DIExpression()), !dbg !19019
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19023, metadata !DIExpression()) #26, !dbg !19030
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19032, !srcloc !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19036, metadata !DIExpression()) #26, !dbg !19039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19030
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19040
  br i1 %11, label %13, label %12, !dbg !19043

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.425, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 148) #27, !dbg !19044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.427, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 148) #27, !dbg !19044
  unreachable, !dbg !19044

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19030
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19046
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !19047, !srcloc !19056
  call void @llvm.dbg.value(metadata i32 %14, metadata !19050, metadata !DIExpression()) #26, !dbg !19057
  %15 = icmp eq i32 %14, 0, !dbg !19058
  %16 = icmp eq i64 %5, 0, !dbg !19059
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19059
  br i1 %17, label %18, label %25, !dbg !19059

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19012, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i8 0, metadata !19018, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19060
  call void @llvm.dbg.value(metadata i8* %20, metadata !19012, metadata !DIExpression()), !dbg !19019
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !19062
  call void @llvm.dbg.value(metadata i64 %21, metadata !19010, metadata !DIExpression()), !dbg !19019
  %22 = icmp eq i8* %20, null, !dbg !19063
  br i1 %22, label %23, label %43, !dbg !19065

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19065

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.421, i32 0, i32 0), i32 noundef 76) #27, !dbg !19066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.429, i32 0, i32 0)) #27, !dbg !19066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.421, i32 0, i32 0), i32 noundef 76) #27, !dbg !19066
  unreachable, !dbg !19066

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19018, metadata !DIExpression()), !dbg !19019
  %29 = sub nsw i64 %8, %27, !dbg !19068
  %30 = icmp slt i64 %29, 1, !dbg !19069
  br i1 %30, label %43, label %31, !dbg !19070

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19019
  call void @llvm.dbg.value(metadata i8 undef, metadata !19018, metadata !DIExpression()), !dbg !19019
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19071
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19071
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #27, !dbg !19071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19023, metadata !DIExpression()) #26, !dbg !19072
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19074, !srcloc !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19036, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19072
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19077
  br i1 %37, label %39, label %38, !dbg !19078

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.425, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 148) #27, !dbg !19079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.427, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 148) #27, !dbg !19079
  unreachable, !dbg !19079

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19018, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19072
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19080
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i8* null, metadata !19012, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19060
  call void @llvm.dbg.value(metadata i8* %40, metadata !19012, metadata !DIExpression()), !dbg !19019
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !19062
  call void @llvm.dbg.value(metadata i64 %41, metadata !19010, metadata !DIExpression()), !dbg !19019
  %42 = icmp eq i8* %40, null, !dbg !19063
  br i1 %42, label %26, label %43, !dbg !19065, !llvm.loop !19081

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19060
  call void @llvm.dbg.value(metadata i8* %45, metadata !19012, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19084, metadata !DIExpression()) #26, !dbg !19090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19089, metadata !DIExpression()) #26, !dbg !19090
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19092
  br i1 %46, label %48, label %47, !dbg !19095

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.430, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 194) #27, !dbg !19096
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.431, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 194) #27, !dbg !19096
  unreachable, !dbg !19096

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19019
  call void @llvm.dbg.value(metadata i32 %49, metadata !19084, metadata !DIExpression()) #26, !dbg !19090
  call void @llvm.dbg.value(metadata i32 %49, metadata !19098, metadata !DIExpression()) #26, !dbg !19101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #26, !dbg !19103, !srcloc !19104
  ret i8* %45, !dbg !19105
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19106 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19112, metadata !DIExpression()), !dbg !19114
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19110, metadata !DIExpression()), !dbg !19114
  call void @llvm.dbg.value(metadata i32 %1, metadata !19111, metadata !DIExpression()), !dbg !19114
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #28, !dbg !19115
  call void @llvm.dbg.value(metadata i8* %4, metadata !19113, metadata !DIExpression()), !dbg !19114
  ret i8* %4, !dbg !19116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19117 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19121, metadata !DIExpression()), !dbg !19124
  call void @llvm.dbg.value(metadata i8* %1, metadata !19122, metadata !DIExpression()), !dbg !19124
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19023, metadata !DIExpression()) #26, !dbg !19126
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19128, !srcloc !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19130
  call void @llvm.dbg.value(metadata i32 undef, metadata !19036, metadata !DIExpression()) #26, !dbg !19130
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19126
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19131
  br i1 %5, label %7, label %6, !dbg !19132

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.425, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 148) #27, !dbg !19133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.427, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 148) #27, !dbg !19133
  unreachable, !dbg !19133

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19128
  call void @llvm.dbg.value(metadata i32 %8, metadata !19035, metadata !DIExpression()) #26, !dbg !19130
  call void @llvm.dbg.value(metadata i32 %8, metadata !19029, metadata !DIExpression()) #26, !dbg !19126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19134
  call void @llvm.dbg.value(metadata i32 %8, metadata !19123, metadata !DIExpression()), !dbg !19124
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19135
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !19136
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19137
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #27, !dbg !19139
  %12 = icmp eq i32 %11, 0, !dbg !19140
  br i1 %12, label %15, label %13, !dbg !19141

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19142
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #27, !dbg !19142
  br label %19, !dbg !19144

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19084, metadata !DIExpression()) #26, !dbg !19145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19089, metadata !DIExpression()) #26, !dbg !19145
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19148
  br i1 %16, label %18, label %17, !dbg !19149

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.430, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 194) #27, !dbg !19150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.431, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.426, i32 0, i32 0), i32 noundef 194) #27, !dbg !19150
  unreachable, !dbg !19150

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19084, metadata !DIExpression()) #26, !dbg !19145
  call void @llvm.dbg.value(metadata i32 %8, metadata !19098, metadata !DIExpression()) #26, !dbg !19151
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !19153, !srcloc !19104
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19154
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!936, !2, !2575, !27, !354, !420, !442, !2577, !2579, !2612, !2646, !2648, !452, !503, !2650, !2653, !2664, !2710, !2712, !2740, !2768, !2811, !2882, !2927, !532, !674, !2955, !710, !720, !745, !970, !2960, !1105, !1171, !1486, !1710, !2997, !1825, !1915, !2999, !3083, !3146, !1963, !3149, !1970, !2341, !3167, !3169, !2361, !2386, !3275, !2503, !3278, !2544}
!llvm.ident = !{!3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280, !3280}
!llvm.module.flags = !{!3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !452, file: !469, line: 56, type: !470, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !454, globals: !468, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 369, baseType: !458)
!457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 360, size: 224, elements: !459)
!459 = !{!460, !462, !463, !464, !465, !466, !467}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !458, file: !457, line: 362, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !458, file: !457, line: 363, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !458, file: !457, line: 364, baseType: !461, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !458, file: !457, line: 365, baseType: !461, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !457, line: 366, baseType: !461, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !458, file: !457, line: 367, baseType: !461, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !458, file: !457, line: 368, baseType: !461, size: 32, offset: 192)
!468 = !{!450}
!469 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !500}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !471, file: !472, line: 60, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DISubroutineType(types: !477)
!477 = !{!105, !478}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485, !486, !493, !494}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 380, baseType: !269, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !480, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !480, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !480, file: !481, line: 386, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !488, file: !481, line: 359, baseType: !169, size: 8)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !488, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!492 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !480, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !480, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !481, line: 43, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !499)
!499 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !471, file: !472, line: 65, baseType: !478, size: 32, offset: 32)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !503, file: !506, line: 71, type: !507, isLocal: true, isDefinition: true, align: 32)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !505, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!505 = !{!501}
!506 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !509)
!509 = !{!510, !529}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !508, file: !472, line: 60, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DISubroutineType(types: !513)
!513 = !{!105, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !517)
!517 = !{!518, !519, !520, !521, !527, !528}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !481, line: 380, baseType: !269, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !516, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !516, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !516, file: !481, line: 386, baseType: !522, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !523, file: !481, line: 359, baseType: !169, size: 8)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !523, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !516, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !516, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !508, file: !472, line: 65, baseType: !514, size: 32, offset: 32)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !532, file: !539, line: 17, type: !667, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !534, globals: !535, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!534 = !{!111, !105, !113, !104}
!535 = !{!530, !536, !663}
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !538, file: !539, line: 198, type: !649, isLocal: true, isDefinition: true)
!538 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !539, file: !539, line: 175, type: !540, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !644)
!539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!540 = !DISubroutineType(types: !541)
!541 = !{null, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !544)
!544 = !{!545, !603, !615, !616, !617, !618, !624, !639}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !543, file: !127, line: 247, baseType: !546, size: 384)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !547)
!547 = !{!548, !572, !579, !580, !581, !590, !591, !592}
!548 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 60, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 60, size: 64, elements: !550)
!550 = !{!551, !566}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !549, file: !127, line: 61, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !554)
!554 = !{!555, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 38, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 38, size: 32, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !556, file: !137, line: 39, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !137, line: 40, baseType: !559, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 42, baseType: !562, size: 32, offset: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 42, size: 32, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !562, file: !137, line: 43, baseType: !559, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !562, file: !137, line: 44, baseType: !559, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !549, file: !127, line: 62, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !567, file: !153, line: 50, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !158)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !546, file: !127, line: 68, baseType: !573, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !575, file: !163, line: 232, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !553)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !546, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !546, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 90, baseType: !582, size: 16, offset: 112)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 90, size: 16, elements: !583)
!583 = !{!584, !589}
!584 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !127, line: 91, baseType: !585, size: 16)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !582, file: !127, line: 91, size: 16, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !585, file: !127, line: 96, baseType: !179, size: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !585, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !582, file: !127, line: 100, baseType: !183, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !546, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !546, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !546, file: !127, line: 131, baseType: !593, size: 192, offset: 192)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !594)
!594 = !{!595, !596, !602}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !593, file: !163, line: 245, baseType: !552, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !593, file: !163, line: 246, baseType: !597, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !598)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{null, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !593, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !543, file: !127, line: 250, baseType: !604, size: 288, offset: 384)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !604, file: !200, line: 26, baseType: !113, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !604, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !604, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !604, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !604, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !604, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !604, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !604, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !604, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !543, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !543, file: !127, line: 256, baseType: !574, size: 64, offset: 704)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !543, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !543, file: !127, line: 300, baseType: !619, size: 96, offset: 800)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !620)
!620 = !{!621, !622, !623}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !619, file: !127, line: 153, baseType: !22, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !619, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !619, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !543, file: !127, line: 325, baseType: !625, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !627)
!627 = !{!628, !634, !635}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !626, file: !122, line: 5074, baseType: !629, size: 96)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !629, file: !226, line: 57, baseType: !229, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !629, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !629, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !626, file: !122, line: 5075, baseType: !574, size: 64, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !626, file: !122, line: 5076, baseType: !636, size: 32, offset: 160)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !636, file: !236, line: 52, baseType: !22, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !543, file: !127, line: 343, baseType: !640, size: 64, offset: 928)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !640, file: !200, line: 63, baseType: !113, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !640, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!644 = !{!645, !646, !647, !648}
!645 = !DILocalVariable(name: "thread", arg: 1, scope: !538, file: !539, line: 175, type: !542)
!646 = !DILocalVariable(name: "region_num", scope: !538, file: !539, line: 200, type: !169)
!647 = !DILocalVariable(name: "guard_start", scope: !538, file: !539, line: 265, type: !22)
!648 = !DILocalVariable(name: "guard_size", scope: !538, file: !539, line: 266, type: !111)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 96, elements: !661)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !652)
!651 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !650, file: !651, line: 53, baseType: !22, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !650, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !650, file: !651, line: 55, baseType: !656, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !658)
!657 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !658, file: !657, line: 150, baseType: !113, size: 32)
!661 = !{!662}
!662 = !DISubrange(count: 1)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "static_regions", scope: !532, file: !539, line: 62, type: !665, isLocal: true, isDefinition: true)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 96, elements: !661)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !348, line: 17, baseType: !269, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !668, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !674, file: !707, line: 39, type: !169, isLocal: true, isDefinition: true)
!674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !676, globals: !706, splitDebugInlining: false, nameTableKind: None)
!675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!676 = !{!677, !104, !105, !694, !169}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !679, line: 1226, baseType: !680)
!679 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 1213, size: 352, elements: !681)
!681 = !{!682, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !680, file: !679, line: 1215, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !680, file: !679, line: 1216, baseType: !461, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !680, file: !679, line: 1217, baseType: !461, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !680, file: !679, line: 1218, baseType: !461, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !680, file: !679, line: 1219, baseType: !461, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !680, file: !679, line: 1220, baseType: !461, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !680, file: !679, line: 1221, baseType: !461, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !680, file: !679, line: 1222, baseType: !461, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !680, file: !679, line: 1223, baseType: !461, size: 32, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !680, file: !679, line: 1224, baseType: !461, size: 32, offset: 288)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !680, file: !679, line: 1225, baseType: !461, size: 32, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !698)
!697 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!698 = !{!699, !700, !701}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !696, file: !697, line: 29, baseType: !113, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !696, file: !697, line: 37, baseType: !702, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !703, file: !657, line: 143, baseType: !113, size: 32)
!706 = !{!672}
!707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !710, file: !717, line: 21, type: !447, isLocal: true, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !716, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!712 = !{!713, !105, !104}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !715, line: 22, baseType: !105)
!715 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !{!708}
!717 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !720, file: !725, line: 13, type: !742, isLocal: true, isDefinition: true)
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !722, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!722 = !{!723, !718}
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "mpu_config", scope: !720, file: !725, line: 37, type: !726, isLocal: false, isDefinition: true)
!725 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !697, line: 41, size: 64, elements: !728)
!728 = !{!729, !730}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !727, file: !697, line: 43, baseType: !113, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !727, file: !697, line: 45, baseType: !731, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !733, file: !697, line: 29, baseType: !113, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !733, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !733, file: !697, line: 37, baseType: !738, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !739, file: !657, line: 143, baseType: !113, size: 32)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 192, elements: !158)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !745, file: !850, line: 72, type: !931, isLocal: true, isDefinition: true)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !747, retainedTypes: !836, globals: !847, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!747 = !{!30, !748}
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !457, line: 65, baseType: !105, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835}
!750 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!751 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!752 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!753 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!754 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!755 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!756 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!757 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!758 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!759 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!760 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!761 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!762 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!763 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!764 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!765 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!766 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!767 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!768 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!769 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!770 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!771 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!772 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!773 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!774 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!775 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!776 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!777 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!778 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!779 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!780 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!781 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!782 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!783 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!784 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!785 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!786 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!787 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!788 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!789 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!790 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!791 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!792 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!793 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!794 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!795 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!796 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!797 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!798 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!799 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!800 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!801 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!802 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!803 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!804 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!805 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!806 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!807 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!808 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!809 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!810 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!811 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!812 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!813 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!814 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!815 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!816 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!817 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!818 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!819 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!820 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!821 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!822 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!823 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!824 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!825 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!826 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!827 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!828 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!829 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!830 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!831 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!832 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!833 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!834 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!835 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!836 = !{!111, !105, !104, !837}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !457, line: 354, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 346, size: 192, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !839, file: !457, line: 348, baseType: !461, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !839, file: !457, line: 349, baseType: !461, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !839, file: !457, line: 350, baseType: !461, size: 32, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !839, file: !457, line: 351, baseType: !461, size: 32, offset: 96)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !839, file: !457, line: 352, baseType: !461, size: 32, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !839, file: !457, line: 353, baseType: !461, size: 32, offset: 160)
!847 = !{!848, !852, !868, !879, !896, !743, !898, !911, !913, !915, !917, !919, !921, !923, !925, !927, !929}
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !745, file: !850, line: 424, type: !851, isLocal: false, isDefinition: true, align: 16)
!850 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 64, elements: !313)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !745, file: !850, line: 424, type: !854, isLocal: false, isDefinition: true, align: 32)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !856)
!856 = !{!857, !858, !859, !860, !866, !867}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !855, file: !481, line: 380, baseType: !269, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !855, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !855, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !855, file: !481, line: 386, baseType: !861, size: 32, offset: 96)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !862, file: !481, line: 359, baseType: !169, size: 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !862, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !855, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !855, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !745, file: !850, line: 424, type: !870, isLocal: true, isDefinition: true, align: 32)
!870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !872)
!872 = !{!873, !878}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !871, file: !472, line: 60, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = !DISubroutineType(types: !876)
!876 = !{!105, !877}
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !871, file: !472, line: 65, baseType: !877, size: 32, offset: 32)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "exti_data", scope: !745, file: !850, line: 423, type: !881, isLocal: true, isDefinition: true)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !850, line: 107, size: 1472, elements: !882)
!882 = !{!883}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !881, file: !850, line: 109, baseType: !884, size: 1472)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !885, size: 1472, elements: !894)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !850, line: 101, size: 64, elements: !886)
!886 = !{!887, !893}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !885, file: !850, line: 102, baseType: !888, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !889, line: 63, baseType: !890)
!889 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = !DISubroutineType(types: !892)
!892 = !{null, !105, !104}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !885, file: !850, line: 103, baseType: !104, size: 32, offset: 32)
!894 = !{!895}
!895 = !DISubrange(count: 23)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !745, file: !850, line: 424, type: !862, isLocal: true, isDefinition: true, align: 8)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !900, file: !850, line: 493, type: !905, isLocal: true, isDefinition: true, align: 32)
!900 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !850, file: !850, line: 460, type: !901, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !903)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !877}
!903 = !{!904}
!904 = !DILocalVariable(name: "dev", arg: 1, scope: !900, file: !850, line: 460, type: !877)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !906)
!906 = !{!907, !908, !909, !910}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !905, file: !10, line: 55, baseType: !116, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !905, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !905, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !905, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !900, file: !850, line: 497, type: !905, isLocal: true, isDefinition: true, align: 32)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !900, file: !850, line: 507, type: !905, isLocal: true, isDefinition: true, align: 32)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !900, file: !850, line: 512, type: !905, isLocal: true, isDefinition: true, align: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !900, file: !850, line: 516, type: !905, isLocal: true, isDefinition: true, align: 32)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !900, file: !850, line: 523, type: !905, isLocal: true, isDefinition: true, align: 32)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !900, file: !850, line: 527, type: !905, isLocal: true, isDefinition: true, align: 32)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !900, file: !850, line: 581, type: !905, isLocal: true, isDefinition: true, align: 32)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !900, file: !850, line: 586, type: !905, isLocal: true, isDefinition: true, align: 32)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !900, file: !850, line: 591, type: !905, isLocal: true, isDefinition: true, align: 32)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !900, file: !850, line: 595, type: !905, isLocal: true, isDefinition: true, align: 32)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 736, elements: !894)
!932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !457, line: 155, baseType: !748)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !936, file: !941, line: 23, type: !965, isLocal: false, isDefinition: true, align: 16)
!936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !938, splitDebugInlining: false, nameTableKind: None)
!937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!938 = !{!939, !934, !945, !947, !949, !951, !953, !955, !957, !959, !961, !963}
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !936, file: !941, line: 18, type: !942, isLocal: false, isDefinition: true, align: 16)
!941 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 208, elements: !943)
!943 = !{!944}
!944 = !DISubrange(count: 13)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !936, file: !941, line: 30, type: !851, isLocal: false, isDefinition: true, align: 16)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !936, file: !941, line: 37, type: !851, isLocal: false, isDefinition: true, align: 16)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !936, file: !941, line: 44, type: !851, isLocal: false, isDefinition: true, align: 16)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !936, file: !941, line: 51, type: !851, isLocal: false, isDefinition: true, align: 16)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !936, file: !941, line: 58, type: !851, isLocal: false, isDefinition: true, align: 16)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !936, file: !941, line: 65, type: !851, isLocal: false, isDefinition: true, align: 16)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !936, file: !941, line: 72, type: !851, isLocal: false, isDefinition: true, align: 16)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !936, file: !941, line: 79, type: !851, isLocal: false, isDefinition: true, align: 16)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !936, file: !941, line: 86, type: !851, isLocal: false, isDefinition: true, align: 16)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !936, file: !941, line: 93, type: !851, isLocal: false, isDefinition: true, align: 16)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 48, elements: !966)
!966 = !{!967}
!967 = !DISubrange(count: 3)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !970, file: !1031, line: 398, type: !1064, isLocal: true, isDefinition: true)
!970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !972, retainedTypes: !985, globals: !1028, splitDebugInlining: false, nameTableKind: None)
!971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!972 = !{!973, !30, !978}
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 197, baseType: !32, size: 32, elements: !975)
!974 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!975 = !{!976, !977}
!976 = !DIEnumerator(name: "SUCCESS", value: 0)
!977 = !DIEnumerator(name: "ERROR", value: 1)
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !979, line: 44, baseType: !32, size: 32, elements: !980)
!979 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!980 = !{!981, !982, !983, !984}
!981 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!982 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!983 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!984 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!985 = !{!104, !105, !113, !986, !1021, !1027}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 532, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 500, size: 1088, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !988, file: !457, line: 502, baseType: !461, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !988, file: !457, line: 503, baseType: !461, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !988, file: !457, line: 504, baseType: !461, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !988, file: !457, line: 505, baseType: !461, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !988, file: !457, line: 506, baseType: !461, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !988, file: !457, line: 507, baseType: !461, size: 32, offset: 160)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !988, file: !457, line: 508, baseType: !461, size: 32, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !988, file: !457, line: 509, baseType: !113, size: 32, offset: 224)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !988, file: !457, line: 510, baseType: !461, size: 32, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !988, file: !457, line: 511, baseType: !461, size: 32, offset: 288)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !988, file: !457, line: 512, baseType: !1001, size: 64, offset: 320)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !158)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !988, file: !457, line: 513, baseType: !461, size: 32, offset: 384)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !988, file: !457, line: 514, baseType: !461, size: 32, offset: 416)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !988, file: !457, line: 515, baseType: !461, size: 32, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !988, file: !457, line: 516, baseType: !113, size: 32, offset: 480)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !988, file: !457, line: 517, baseType: !461, size: 32, offset: 512)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !988, file: !457, line: 518, baseType: !461, size: 32, offset: 544)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !988, file: !457, line: 519, baseType: !1001, size: 64, offset: 576)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !988, file: !457, line: 520, baseType: !461, size: 32, offset: 640)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !988, file: !457, line: 521, baseType: !461, size: 32, offset: 672)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !988, file: !457, line: 522, baseType: !461, size: 32, offset: 704)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !988, file: !457, line: 523, baseType: !113, size: 32, offset: 736)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !988, file: !457, line: 524, baseType: !461, size: 32, offset: 768)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !988, file: !457, line: 525, baseType: !461, size: 32, offset: 800)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !988, file: !457, line: 526, baseType: !1001, size: 64, offset: 832)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !988, file: !457, line: 527, baseType: !461, size: 32, offset: 896)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !988, file: !457, line: 528, baseType: !461, size: 32, offset: 928)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !988, file: !457, line: 529, baseType: !1001, size: 64, offset: 960)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !988, file: !457, line: 530, baseType: !461, size: 32, offset: 1024)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !988, file: !457, line: 531, baseType: !461, size: 32, offset: 1056)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1023, line: 343, size: 64, elements: !1024)
!1023 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1022, file: !1023, line: 344, baseType: !113, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1022, file: !1023, line: 345, baseType: !113, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1028 = !{!1029, !1035, !1051, !1062, !968}
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !970, file: !1031, line: 752, type: !1032, isLocal: false, isDefinition: true, align: 16)
!1031 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 928, elements: !1033)
!1033 = !{!1034}
!1034 = !DISubrange(count: 58)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !970, file: !1031, line: 752, type: !1037, isLocal: false, isDefinition: true, align: 32)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1049, !1050}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1038, file: !481, line: 380, baseType: !269, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1038, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1038, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1038, file: !481, line: 386, baseType: !1044, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1045, file: !481, line: 359, baseType: !169, size: 8)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1045, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1038, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !970, file: !1031, line: 752, type: !1053, isLocal: true, isDefinition: true, align: 32)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1055)
!1055 = !{!1056, !1061}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1054, file: !472, line: 60, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!105, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1054, file: !472, line: 65, baseType: !1060, size: 32, offset: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !970, file: !1031, line: 752, type: !1045, isLocal: true, isDefinition: true, align: 8)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !979, line: 100, size: 224, elements: !1065)
!1065 = !{!1066, !1072, !1073, !1082, !1087, !1092, !1098}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1064, file: !979, line: 101, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !979, line: 76, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!105, !1060, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !979, line: 56, baseType: !104)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1064, file: !979, line: 102, baseType: !1067, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1064, file: !979, line: 103, baseType: !1074, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !979, line: 83, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!105, !1060, !1071, !1078, !104}
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !979, line: 72, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !1060, !1071, !104}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1064, file: !979, line: 104, baseType: !1083, size: 32, offset: 96)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !979, line: 79, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!105, !1060, !1071, !1027}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1064, file: !979, line: 105, baseType: !1088, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !979, line: 88, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!978, !1060, !1071}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1064, file: !979, line: 106, baseType: !1093, size: 32, offset: 160)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !979, line: 92, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!105, !1060, !1071, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !979, line: 64, baseType: !104)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1064, file: !979, line: 107, baseType: !1099, size: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !979, line: 96, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!105, !1060, !1071, !104}
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1105, file: !1162, line: 603, type: !1164, isLocal: true, isDefinition: true, align: 32)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1107, globals: !1159, splitDebugInlining: false, nameTableKind: None)
!1106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1107 = !{!104, !105, !1108}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1111, line: 336, size: 160, elements: !1112)
!1111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !{!1113, !1133, !1137, !1141, !1154}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1110, file: !1111, line: 365, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!105, !1117, !1132}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1130, !1131}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1119, file: !481, line: 380, baseType: !269, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1119, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1119, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1119, file: !481, line: 386, baseType: !1125, size: 32, offset: 96)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1127)
!1127 = !{!1128, !1129}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1126, file: !481, line: 359, baseType: !169, size: 8)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1126, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1119, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1119, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1110, file: !1111, line: 366, baseType: !1134, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{null, !1117, !170}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1110, file: !1111, line: 374, baseType: !1138, size: 32, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!105, !1117}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1110, file: !1111, line: 377, baseType: !1142, size: 32, offset: 96)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!105, !1117, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1111, line: 122, size: 64, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152, !1153}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1147, file: !1111, line: 123, baseType: !113, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1147, file: !1111, line: 124, baseType: !169, size: 8, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1147, file: !1111, line: 125, baseType: !169, size: 8, offset: 40)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1147, file: !1111, line: 126, baseType: !169, size: 8, offset: 48)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1147, file: !1111, line: 127, baseType: !169, size: 8, offset: 56)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1110, file: !1111, line: 379, baseType: !1155, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!105, !1117, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1159 = !{!1103, !1160}
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1105, file: !1162, line: 38, type: !1163, isLocal: true, isDefinition: true)
!1162 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1166)
!1166 = !{!1167, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1165, file: !472, line: 60, baseType: !1138, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1165, file: !472, line: 65, baseType: !1117, size: 32, offset: 32)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1171, file: !1340, line: 762, type: !1459, isLocal: true, isDefinition: true)
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1173, retainedTypes: !1191, globals: !1337, splitDebugInlining: false, nameTableKind: None)
!1172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1173 = !{!30, !1174, !1180, !1185, !978}
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1175, line: 506, baseType: !32, size: 32, elements: !1176)
!1175 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1176 = !{!1177, !1178, !1179}
!1177 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1178 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1179 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1180 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1175, line: 512, baseType: !32, size: 32, elements: !1181)
!1181 = !{!1182, !1183, !1184}
!1182 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1183 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1184 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !889, line: 43, baseType: !32, size: 32, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1190}
!1187 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1188 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1189 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1190 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1191 = !{!104, !105, !1192, !1262, !1267, !1227, !1180, !1174, !1272, !1273, !113, !1287, !1242, !102, !1297, !1298}
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1175, line: 523, size: 288, elements: !1195)
!1195 = !{!1196, !1217, !1223, !1228, !1232, !1233, !1234, !1238, !1258}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1194, file: !1175, line: 524, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!105, !1200, !1215, !1216}
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1207, !1213, !1214}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1202, file: !481, line: 380, baseType: !269, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1202, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1202, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1202, file: !481, line: 386, baseType: !1208, size: 32, offset: 96)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1209, file: !481, line: 359, baseType: !169, size: 8)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1209, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1202, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1175, line: 237, baseType: !169)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1175, line: 257, baseType: !113)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1194, file: !1175, line: 530, baseType: !1218, size: 32, offset: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!105, !1200, !1221}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1175, line: 229, baseType: !113)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1194, file: !1175, line: 532, baseType: !1224, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!105, !1200, !1227, !1222}
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1175, line: 216, baseType: !113)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1194, file: !1175, line: 535, baseType: !1229, size: 32, offset: 96)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!105, !1200, !1227}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1194, file: !1175, line: 537, baseType: !1229, size: 32, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1194, file: !1175, line: 539, baseType: !1229, size: 32, offset: 160)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1194, file: !1175, line: 541, baseType: !1235, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!105, !1200, !1215, !1174, !1180}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1194, file: !1175, line: 544, baseType: !1239, size: 32, offset: 224)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!105, !1200, !1242, !492}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1175, line: 478, size: 96, elements: !1244)
!1244 = !{!1245, !1252, !1257}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1243, file: !1175, line: 482, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1247, line: 33, baseType: !1248)
!1247 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1247, line: 29, size: 32, elements: !1249)
!1249 = !{!1250}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1248, file: !1247, line: 30, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1243, file: !1175, line: 485, baseType: !1253, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1175, line: 464, baseType: !1254)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{null, !1200, !1242, !1227}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1243, file: !1175, line: 493, baseType: !1227, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1194, file: !1175, line: 547, baseType: !1259, size: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!113, !1200}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1175, line: 428, size: 32, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1264, file: !1175, line: 434, baseType: !1227, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1175, line: 441, size: 32, elements: !1270)
!1270 = !{!1271}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1269, file: !1175, line: 447, baseType: !1227, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 441, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 430, size: 320, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1275, file: !457, line: 432, baseType: !461, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1275, file: !457, line: 433, baseType: !461, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1275, file: !457, line: 434, baseType: !461, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1275, file: !457, line: 435, baseType: !461, size: 32, offset: 96)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1275, file: !457, line: 436, baseType: !461, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1275, file: !457, line: 437, baseType: !461, size: 32, offset: 160)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1275, file: !457, line: 438, baseType: !461, size: 32, offset: 192)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1275, file: !457, line: 439, baseType: !461, size: 32, offset: 224)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1275, file: !457, line: 440, baseType: !1286, size: 64, offset: 256)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 64, elements: !158)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !457, line: 454, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 447, size: 288, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1295, !1296}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1289, file: !457, line: 449, baseType: !461, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1289, file: !457, line: 450, baseType: !461, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1289, file: !457, line: 451, baseType: !1294, size: 128, offset: 64)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 128, elements: !313)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1289, file: !457, line: 452, baseType: !1001, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1289, file: !457, line: 453, baseType: !461, size: 32, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !979, line: 100, size: 224, elements: !1301)
!1301 = !{!1302, !1307, !1308, !1317, !1322, !1327, !1332}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1300, file: !979, line: 101, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !979, line: 76, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!105, !1200, !1071}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1300, file: !979, line: 102, baseType: !1303, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1300, file: !979, line: 103, baseType: !1309, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !979, line: 83, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!105, !1200, !1071, !1313, !104}
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !979, line: 72, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{null, !1200, !1071, !104}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1300, file: !979, line: 104, baseType: !1318, size: 32, offset: 96)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !979, line: 79, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!105, !1200, !1071, !1027}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1300, file: !979, line: 105, baseType: !1323, size: 32, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !979, line: 88, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!978, !1200, !1071}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1300, file: !979, line: 106, baseType: !1328, size: 32, offset: 160)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !979, line: 92, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!105, !1200, !1071, !1097}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1300, file: !979, line: 107, baseType: !1333, size: 32, offset: 192)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !979, line: 96, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!105, !1200, !1071, !104}
!1337 = !{!1338, !1344, !1346, !1356, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1421, !1423, !1425, !1427, !1429, !1431, !1433, !1435, !1437, !1439, !1441, !1443, !1445, !1447, !1449, !1451, !1453, !1169, !1455, !1457, !1470, !1472, !1474, !1476, !1478, !1480, !1482}
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1171, file: !1340, line: 762, type: !1341, isLocal: false, isDefinition: true, align: 16)
!1340 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 96, elements: !1342)
!1342 = !{!1343}
!1343 = !DISubrange(count: 6)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1171, file: !1340, line: 762, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1171, file: !1340, line: 762, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1350)
!1350 = !{!1351, !1355}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1349, file: !472, line: 60, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!105, !1200}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1349, file: !472, line: 65, baseType: !1200, size: 32, offset: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1171, file: !1340, line: 766, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 80, elements: !1359)
!1359 = !{!1360}
!1360 = !DISubrange(count: 5)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1171, file: !1340, line: 766, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1171, file: !1340, line: 766, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1171, file: !1340, line: 770, type: !1341, isLocal: false, isDefinition: true, align: 16)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1171, file: !1340, line: 770, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1171, file: !1340, line: 770, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1171, file: !1340, line: 774, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1171, file: !1340, line: 774, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1171, file: !1340, line: 774, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1171, file: !1340, line: 778, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1171, file: !1340, line: 778, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1171, file: !1340, line: 778, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1171, file: !1340, line: 782, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1171, file: !1340, line: 782, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1171, file: !1340, line: 782, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1171, file: !1340, line: 786, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1171, file: !1340, line: 786, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1171, file: !1340, line: 786, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1171, file: !1340, line: 790, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1171, file: !1340, line: 790, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1171, file: !1340, line: 790, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1171, file: !1340, line: 794, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1171, file: !1340, line: 794, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1171, file: !1340, line: 794, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1171, file: !1340, line: 762, type: !1409, isLocal: true, isDefinition: true)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1410, line: 237, size: 128, elements: !1411)
!1410 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1411 = !{!1412, !1413, !1414}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1409, file: !1410, line: 239, baseType: !1269, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1409, file: !1410, line: 241, baseType: !1200, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1409, file: !1410, line: 243, baseType: !1415, size: 64, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1247, line: 40, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1247, line: 35, size: 64, elements: !1417)
!1417 = !{!1418, !1420}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1416, file: !1247, line: 36, baseType: !1419, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1416, file: !1247, line: 37, baseType: !1419, size: 32, offset: 32)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1171, file: !1340, line: 762, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1171, file: !1340, line: 766, type: !1409, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1171, file: !1340, line: 766, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1171, file: !1340, line: 770, type: !1409, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1171, file: !1340, line: 770, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1171, file: !1340, line: 774, type: !1409, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1171, file: !1340, line: 774, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1171, file: !1340, line: 778, type: !1409, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1171, file: !1340, line: 778, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1171, file: !1340, line: 782, type: !1409, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1171, file: !1340, line: 782, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1171, file: !1340, line: 786, type: !1409, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1171, file: !1340, line: 786, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1171, file: !1340, line: 790, type: !1409, isLocal: true, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1171, file: !1340, line: 790, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1171, file: !1340, line: 794, type: !1409, isLocal: true, isDefinition: true)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1171, file: !1340, line: 794, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1171, file: !1340, line: 656, type: !1193, isLocal: true, isDefinition: true)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1171, file: !1340, line: 766, type: !1459, isLocal: true, isDefinition: true)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1410, line: 224, size: 160, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1460, file: !1410, line: 226, baseType: !1264, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1460, file: !1410, line: 228, baseType: !1027, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1460, file: !1410, line: 230, baseType: !105, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1460, file: !1410, line: 231, baseType: !1466, size: 64, offset: 96)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1023, line: 343, size: 64, elements: !1467)
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1466, file: !1023, line: 344, baseType: !113, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1466, file: !1023, line: 345, baseType: !113, size: 32, offset: 32)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1171, file: !1340, line: 770, type: !1459, isLocal: true, isDefinition: true)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1171, file: !1340, line: 774, type: !1459, isLocal: true, isDefinition: true)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1171, file: !1340, line: 778, type: !1459, isLocal: true, isDefinition: true)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1171, file: !1340, line: 782, type: !1459, isLocal: true, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1171, file: !1340, line: 786, type: !1459, isLocal: true, isDefinition: true)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1171, file: !1340, line: 790, type: !1459, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1171, file: !1340, line: 794, type: !1459, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1486, file: !1625, line: 44, type: !1703, isLocal: false, isDefinition: true)
!1486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1488, retainedTypes: !1521, globals: !1622, splitDebugInlining: false, nameTableKind: None)
!1487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1488 = !{!30, !1489, !1496, !1503, !1510, !1516, !978}
!1489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1111, line: 47, baseType: !32, size: 32, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1495}
!1491 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1492 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1493 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1494 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1495 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1111, line: 75, baseType: !32, size: 32, elements: !1497)
!1497 = !{!1498, !1499, !1500, !1501, !1502}
!1498 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1499 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1500 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1501 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1502 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1503 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1111, line: 92, baseType: !32, size: 32, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509}
!1505 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1506 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1507 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1508 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1509 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1510 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1111, line: 84, baseType: !32, size: 32, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515}
!1512 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1513 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1514 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1515 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1111, line: 107, baseType: !32, size: 32, elements: !1517)
!1517 = !{!1518, !1519, !1520}
!1518 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1519 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1520 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1521 = !{!104, !105, !1522, !170, !169, !1571, !113, !1071, !1582, !183, !114, !1621}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1111, line: 336, size: 160, elements: !1525)
!1525 = !{!1526, !1545, !1549, !1553, !1566}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1524, file: !1111, line: 365, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!105, !1530, !1132}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1543, !1544}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1532, file: !481, line: 380, baseType: !269, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1532, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1532, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1532, file: !481, line: 386, baseType: !1538, size: 32, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1539, file: !481, line: 359, baseType: !169, size: 8)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1539, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1532, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1532, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1524, file: !1111, line: 366, baseType: !1546, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1530, !170}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1524, file: !1111, line: 374, baseType: !1550, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!105, !1530}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1524, file: !1111, line: 377, baseType: !1554, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!105, !1530, !1557}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1111, line: 122, size: 64, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1559, file: !1111, line: 123, baseType: !113, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1559, file: !1111, line: 124, baseType: !169, size: 8, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1559, file: !1111, line: 125, baseType: !169, size: 8, offset: 40)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1559, file: !1111, line: 126, baseType: !169, size: 8, offset: 48)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1559, file: !1111, line: 127, baseType: !169, size: 8, offset: 56)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1524, file: !1111, line: 379, baseType: !1567, size: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!105, !1530, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !457, line: 670, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 661, size: 224, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1573, file: !457, line: 663, baseType: !461, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1573, file: !457, line: 664, baseType: !461, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1573, file: !457, line: 665, baseType: !461, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1573, file: !457, line: 666, baseType: !461, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1573, file: !457, line: 667, baseType: !461, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1573, file: !457, line: 668, baseType: !461, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1573, file: !457, line: 669, baseType: !461, size: 32, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !979, line: 100, size: 224, elements: !1585)
!1585 = !{!1586, !1591, !1592, !1601, !1606, !1611, !1616}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1584, file: !979, line: 101, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !979, line: 76, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!105, !1530, !1071}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1584, file: !979, line: 102, baseType: !1587, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1584, file: !979, line: 103, baseType: !1593, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !979, line: 83, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!105, !1530, !1071, !1597, !104}
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !979, line: 72, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1530, !1071, !104}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1584, file: !979, line: 104, baseType: !1602, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !979, line: 79, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!105, !1530, !1071, !1027}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1584, file: !979, line: 105, baseType: !1607, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !979, line: 88, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!978, !1530, !1071}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1584, file: !979, line: 106, baseType: !1612, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !979, line: 92, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!105, !1530, !1071, !1097}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1584, file: !979, line: 107, baseType: !1617, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !979, line: 96, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!105, !1530, !1071, !104}
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!1622 = !{!1484, !1623, !1629, !1631, !1638, !1640, !1684, !1687, !1689, !1692, !1695, !1697}
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1626, isLocal: false, isDefinition: true, align: 16)
!1625 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 128, elements: !1627)
!1627 = !{!1628}
!1628 = !DISubrange(count: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1633, isLocal: true, isDefinition: true, align: 32)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1634, file: !472, line: 60, baseType: !1550, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1634, file: !472, line: 65, baseType: !1530, size: 32, offset: 32)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1539, isLocal: true, isDefinition: true, align: 8)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1486, file: !1625, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1644, line: 22, size: 224, elements: !1645)
!1644 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1645 = !{!1646, !1647, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1643, file: !1644, line: 24, baseType: !1571, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1643, file: !1644, line: 26, baseType: !1648, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1023, line: 343, size: 64, elements: !1651)
!1651 = !{!1652, !1653}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1650, file: !1023, line: 344, baseType: !113, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1650, file: !1023, line: 345, baseType: !113, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1643, file: !1644, line: 28, baseType: !111, size: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1643, file: !1644, line: 30, baseType: !492, size: 8, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1643, file: !1644, line: 32, baseType: !105, size: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1643, file: !1644, line: 34, baseType: !492, size: 8, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1643, file: !1644, line: 36, baseType: !492, size: 8, offset: 168)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1643, file: !1644, line: 38, baseType: !492, size: 8, offset: 176)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1643, file: !1644, line: 40, baseType: !492, size: 8, offset: 184)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1643, file: !1644, line: 41, baseType: !1662, size: 32, offset: 192)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1665, line: 60, size: 64, elements: !1666)
!1665 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1666 = !{!1667, !1683}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1664, file: !1665, line: 69, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1665, line: 50, size: 64, elements: !1671)
!1671 = !{!1672, !1681, !1682}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1670, file: !1665, line: 52, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !1677)
!1676 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1677, file: !1676, line: 34, baseType: !113, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1677, file: !1676, line: 36, baseType: !113, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1670, file: !1665, line: 54, baseType: !169, size: 8, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1670, file: !1665, line: 56, baseType: !169, size: 8, offset: 40)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1664, file: !1665, line: 71, baseType: !169, size: 8, offset: 32)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1486, file: !1625, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 64, elements: !661)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 64, elements: !661)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1486, file: !1625, line: 1914, type: !1694, isLocal: true, isDefinition: true)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1674, size: 128, elements: !158)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1486, file: !1625, line: 1539, type: !1523, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1486, file: !1625, line: 1914, type: !1699, isLocal: true, isDefinition: true)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1644, line: 74, size: 64, elements: !1700)
!1700 = !{!1701, !1702}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1699, file: !1644, line: 76, baseType: !113, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1699, file: !1644, line: 78, baseType: !1530, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1704, file: !348, line: 17, baseType: !269, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1704, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1710, file: !1788, line: 65, type: !461, isLocal: true, isDefinition: true)
!1710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1712, retainedTypes: !1713, globals: !1785, splitDebugInlining: false, nameTableKind: None)
!1711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1712 = !{!748}
!1713 = !{!107, !1714, !116, !169, !113, !1722, !1753}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1716, file: !679, line: 766, baseType: !461, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1716, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1716, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1716, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !1725)
!1725 = !{!1726, !1728, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1743, !1748, !1752}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1724, file: !679, line: 413, baseType: !1727, size: 256)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1627)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1724, file: !679, line: 414, baseType: !1729, size: 768, offset: 256)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1730)
!1730 = !{!1731}
!1731 = !DISubrange(count: 24)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1724, file: !679, line: 415, baseType: !1727, size: 256, offset: 1024)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1724, file: !679, line: 416, baseType: !1729, size: 768, offset: 1280)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1724, file: !679, line: 417, baseType: !1727, size: 256, offset: 2048)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1724, file: !679, line: 418, baseType: !1729, size: 768, offset: 2304)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1724, file: !679, line: 419, baseType: !1727, size: 256, offset: 3072)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1724, file: !679, line: 420, baseType: !1729, size: 768, offset: 3328)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1724, file: !679, line: 421, baseType: !1727, size: 256, offset: 4096)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1724, file: !679, line: 422, baseType: !1740, size: 1792, offset: 4352)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 56)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1724, file: !679, line: 423, baseType: !1744, size: 1920, offset: 6144)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1745, size: 1920, elements: !1746)
!1745 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1746 = !{!1747}
!1747 = !DISubrange(count: 240)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1724, file: !679, line: 424, baseType: !1749, size: 20608, offset: 8064)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1750)
!1750 = !{!1751}
!1751 = !DISubrange(count: 644)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1724, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761, !1762, !1763, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1776, !1777, !1778, !1780, !1782, !1784}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1755, file: !679, line: 447, baseType: !683, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1755, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1755, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1755, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1755, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1755, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1755, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1745, size: 96, elements: !1765)
!1765 = !{!1766}
!1766 = !DISubrange(count: 12)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1755, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1755, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1755, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1755, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1755, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1755, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1755, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1755, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 64, elements: !158)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1755, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1755, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1755, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 128, elements: !313)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1755, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 160, elements: !1359)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1755, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1359)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1755, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!1785 = !{!1786, !1812, !1817, !1819, !1821, !1708}
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1710, file: !1788, line: 285, type: !1789, isLocal: true, isDefinition: true, align: 32)
!1788 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1791)
!1791 = !{!1792, !1811}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1790, file: !472, line: 60, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!105, !1796}
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1799)
!1799 = !{!1800, !1801, !1802, !1803, !1809, !1810}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1798, file: !481, line: 380, baseType: !269, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1798, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1798, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1798, file: !481, line: 386, baseType: !1804, size: 32, offset: 96)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1806)
!1806 = !{!1807, !1808}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1805, file: !481, line: 359, baseType: !169, size: 8)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1805, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1798, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1798, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1790, file: !472, line: 65, baseType: !1796, size: 32, offset: 32)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "lock", scope: !1710, file: !1788, line: 34, type: !1814, isLocal: true, isDefinition: true)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1815)
!1815 = !{!1816}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1814, file: !236, line: 52, baseType: !22, size: 32)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "last_load", scope: !1710, file: !1788, line: 36, type: !113, isLocal: true, isDefinition: true)
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1710, file: !1788, line: 48, type: !113, isLocal: true, isDefinition: true)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1710, file: !1788, line: 54, type: !113, isLocal: true, isDefinition: true)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1825, file: !1907, line: 22, type: !1909, isLocal: true, isDefinition: true)
!1825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1827, retainedTypes: !1828, globals: !1904, splitDebugInlining: false, nameTableKind: None)
!1826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1827 = !{!1174, !1180}
!1828 = !{!1829, !1893, !1898, !1227, !1180, !1174, !1903, !104}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1175, line: 523, size: 288, elements: !1832)
!1832 = !{!1833, !1852, !1856, !1860, !1864, !1865, !1866, !1870, !1889}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1831, file: !1175, line: 524, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!105, !1837, !1215, !1216}
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1850, !1851}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1839, file: !481, line: 380, baseType: !269, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1839, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1839, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1839, file: !481, line: 386, baseType: !1845, size: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1847)
!1847 = !{!1848, !1849}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1846, file: !481, line: 359, baseType: !169, size: 8)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1846, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1839, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1839, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1831, file: !1175, line: 530, baseType: !1853, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!105, !1837, !1221}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1831, file: !1175, line: 532, baseType: !1857, size: 32, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!105, !1837, !1227, !1222}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1831, file: !1175, line: 535, baseType: !1861, size: 32, offset: 96)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!105, !1837, !1227}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1831, file: !1175, line: 537, baseType: !1861, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1831, file: !1175, line: 539, baseType: !1861, size: 32, offset: 160)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1831, file: !1175, line: 541, baseType: !1867, size: 32, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!105, !1837, !1215, !1174, !1180}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1831, file: !1175, line: 544, baseType: !1871, size: 32, offset: 224)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!105, !1837, !1874, !492}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1175, line: 478, size: 96, elements: !1876)
!1876 = !{!1877, !1883, !1888}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1875, file: !1175, line: 482, baseType: !1878, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1247, line: 33, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1247, line: 29, size: 32, elements: !1880)
!1880 = !{!1881}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1879, file: !1247, line: 30, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1875, file: !1175, line: 485, baseType: !1884, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1175, line: 464, baseType: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{null, !1837, !1874, !1227}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1875, file: !1175, line: 493, baseType: !1227, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1831, file: !1175, line: 547, baseType: !1890, size: 32, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!113, !1837}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1175, line: 428, size: 32, elements: !1896)
!1896 = !{!1897}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1895, file: !1175, line: 434, baseType: !1227, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1175, line: 441, size: 32, elements: !1901)
!1901 = !{!1902}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1900, file: !1175, line: 447, baseType: !1227, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1904 = !{!1905, !1823}
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1906 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1825, file: !1907, line: 37, type: !1908, isLocal: true, isDefinition: true)
!1907 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1910, size: 352, elements: !1911)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1837)
!1911 = !{!1912}
!1912 = !DISubrange(count: 11)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1915, file: !1955, line: 139, type: !1960, isLocal: false, isDefinition: true)
!1915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1917, globals: !1952, splitDebugInlining: false, nameTableKind: None)
!1916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 532, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 500, size: 1088, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1920, file: !457, line: 502, baseType: !461, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1920, file: !457, line: 503, baseType: !461, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1920, file: !457, line: 504, baseType: !461, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1920, file: !457, line: 505, baseType: !461, size: 32, offset: 96)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1920, file: !457, line: 506, baseType: !461, size: 32, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1920, file: !457, line: 507, baseType: !461, size: 32, offset: 160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1920, file: !457, line: 508, baseType: !461, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1920, file: !457, line: 509, baseType: !113, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1920, file: !457, line: 510, baseType: !461, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1920, file: !457, line: 511, baseType: !461, size: 32, offset: 288)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1920, file: !457, line: 512, baseType: !1001, size: 64, offset: 320)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1920, file: !457, line: 513, baseType: !461, size: 32, offset: 384)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1920, file: !457, line: 514, baseType: !461, size: 32, offset: 416)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1920, file: !457, line: 515, baseType: !461, size: 32, offset: 448)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1920, file: !457, line: 516, baseType: !113, size: 32, offset: 480)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1920, file: !457, line: 517, baseType: !461, size: 32, offset: 512)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1920, file: !457, line: 518, baseType: !461, size: 32, offset: 544)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1920, file: !457, line: 519, baseType: !1001, size: 64, offset: 576)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1920, file: !457, line: 520, baseType: !461, size: 32, offset: 640)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1920, file: !457, line: 521, baseType: !461, size: 32, offset: 672)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1920, file: !457, line: 522, baseType: !461, size: 32, offset: 704)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1920, file: !457, line: 523, baseType: !113, size: 32, offset: 736)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1920, file: !457, line: 524, baseType: !461, size: 32, offset: 768)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1920, file: !457, line: 525, baseType: !461, size: 32, offset: 800)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1920, file: !457, line: 526, baseType: !1001, size: 64, offset: 832)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1920, file: !457, line: 527, baseType: !461, size: 32, offset: 896)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1920, file: !457, line: 528, baseType: !461, size: 32, offset: 928)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1920, file: !457, line: 529, baseType: !1001, size: 64, offset: 960)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1920, file: !457, line: 530, baseType: !461, size: 32, offset: 1024)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1920, file: !457, line: 531, baseType: !461, size: 32, offset: 1056)
!1952 = !{!1953, !1956, !1913}
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1915, file: !1955, line: 137, type: !113, isLocal: false, isDefinition: true)
!1955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1915, file: !1955, line: 138, type: !1958, isLocal: false, isDefinition: true)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 128, elements: !311)
!1959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 64, elements: !1627)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1963, file: !1966, line: 23, type: !1967, isLocal: false, isDefinition: true)
!1963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !1965, splitDebugInlining: false, nameTableKind: None)
!1964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1965 = !{!1961}
!1966 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1970, file: !1974, line: 37, type: !2227, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1972, retainedTypes: !1981, globals: !2054, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!1972 = !{!1973, !30, !748}
!1973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1974, line: 63, baseType: !32, size: 32, elements: !1975)
!1974 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1975 = !{!1976, !1977, !1978, !1979, !1980}
!1976 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1977 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1978 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1979 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1980 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1981 = !{!22, !111, !104, !105, !1982, !102, !113, !2012, !116, !169, !2037}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1985, line: 51, size: 64, elements: !1986)
!1985 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1986 = !{!1987, !2007}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1984, file: !1985, line: 52, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1985, line: 38, baseType: !1989)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!105, !1992, !432, !183}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2005, !2006}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1994, file: !481, line: 380, baseType: !269, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1994, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1994, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1994, file: !481, line: 386, baseType: !2000, size: 32, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !2002)
!2002 = !{!2003, !2004}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2001, file: !481, line: 359, baseType: !169, size: 8)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2001, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1994, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1994, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1984, file: !1985, line: 53, baseType: !2008, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1985, line: 47, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!105, !1992, !432, !183, !113}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2014, file: !679, line: 447, baseType: !683, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2014, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2014, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2014, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2014, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2014, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2014, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2014, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2014, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2014, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2014, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2014, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2014, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2014, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2014, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2014, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2014, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2014, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2014, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2014, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2014, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2039, file: !679, line: 413, baseType: !1727, size: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2039, file: !679, line: 414, baseType: !1729, size: 768, offset: 256)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2039, file: !679, line: 415, baseType: !1727, size: 256, offset: 1024)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2039, file: !679, line: 416, baseType: !1729, size: 768, offset: 1280)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2039, file: !679, line: 417, baseType: !1727, size: 256, offset: 2048)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2039, file: !679, line: 418, baseType: !1729, size: 768, offset: 2304)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2039, file: !679, line: 419, baseType: !1727, size: 256, offset: 3072)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2039, file: !679, line: 420, baseType: !1729, size: 768, offset: 3328)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2039, file: !679, line: 421, baseType: !1727, size: 256, offset: 4096)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2039, file: !679, line: 422, baseType: !1740, size: 1792, offset: 4352)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2039, file: !679, line: 423, baseType: !1744, size: 1920, offset: 6144)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2039, file: !679, line: 424, baseType: !1749, size: 20608, offset: 8064)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2039, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2054 = !{!1968, !2055, !2180, !2188, !2190, !2193, !2197, !2199, !2204}
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "_kernel", scope: !1970, file: !1974, line: 40, type: !2057, isLocal: false, isDefinition: true)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !2058)
!2058 = !{!2059, !2175}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2057, file: !163, line: 159, baseType: !2060, size: 224)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 224, elements: !661)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2168, !2169, !2170, !2171, !2172}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2061, file: !163, line: 102, baseType: !113, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2061, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2061, file: !163, line: 108, baseType: !2066, size: 32, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2068)
!2068 = !{!2069, !2127, !2139, !2140, !2141, !2142, !2148, !2163}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2067, file: !127, line: 247, baseType: !2070, size: 384)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2071)
!2071 = !{!2072, !2096, !2103, !2104, !2105, !2114, !2115, !2116}
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !127, line: 60, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !127, line: 60, size: 64, elements: !2074)
!2074 = !{!2075, !2090}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2073, file: !127, line: 61, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2078)
!2078 = !{!2079, !2085}
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !137, line: 38, baseType: !2080, size: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !137, line: 38, size: 32, elements: !2081)
!2081 = !{!2082, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2080, file: !137, line: 39, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2080, file: !137, line: 40, baseType: !2083, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !137, line: 42, baseType: !2086, size: 32, offset: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !137, line: 42, size: 32, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2086, file: !137, line: 43, baseType: !2083, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2086, file: !137, line: 44, baseType: !2083, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2073, file: !127, line: 62, baseType: !2091, size: 64)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2092)
!2092 = !{!2093}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2091, file: !153, line: 50, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2095, size: 64, elements: !158)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2070, file: !127, line: 68, baseType: !2097, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2099, file: !163, line: 232, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2077)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2070, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2070, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !127, line: 90, baseType: !2106, size: 16, offset: 112)
!2106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !127, line: 90, size: 16, elements: !2107)
!2107 = !{!2108, !2113}
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !127, line: 91, baseType: !2109, size: 16)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2106, file: !127, line: 91, size: 16, elements: !2110)
!2110 = !{!2111, !2112}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2109, file: !127, line: 96, baseType: !179, size: 8)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2109, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2106, file: !127, line: 100, baseType: !183, size: 16)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2070, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2070, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2070, file: !127, line: 131, baseType: !2117, size: 192, offset: 192)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2118)
!2118 = !{!2119, !2120, !2126}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2117, file: !163, line: 245, baseType: !2076, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2117, file: !163, line: 246, baseType: !2121, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2122)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{null, !2125}
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2117, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2067, file: !127, line: 250, baseType: !2128, size: 288, offset: 384)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2128, file: !200, line: 26, baseType: !113, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2128, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2128, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2128, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2128, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2128, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2128, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2128, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2128, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2067, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2067, file: !127, line: 256, baseType: !2098, size: 64, offset: 704)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2067, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2067, file: !127, line: 300, baseType: !2143, size: 96, offset: 800)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2144)
!2144 = !{!2145, !2146, !2147}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2143, file: !127, line: 153, baseType: !22, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2143, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2143, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2067, file: !127, line: 325, baseType: !2149, size: 32, offset: 896)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2151)
!2151 = !{!2152, !2158, !2159}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2150, file: !122, line: 5074, baseType: !2153, size: 96)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2154)
!2154 = !{!2155, !2156, !2157}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2153, file: !226, line: 57, baseType: !229, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2153, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2153, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2150, file: !122, line: 5075, baseType: !2098, size: 64, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2150, file: !122, line: 5076, baseType: !2160, size: 32, offset: 160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2161)
!2161 = !{!2162}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2160, file: !236, line: 52, baseType: !22, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2067, file: !127, line: 343, baseType: !2164, size: 64, offset: 928)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2165)
!2165 = !{!2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2164, file: !200, line: 63, baseType: !113, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2164, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2061, file: !163, line: 111, baseType: !2066, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !2061, file: !163, line: 119, baseType: !2066, size: 32, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2061, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2061, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2061, file: !163, line: 153, baseType: !2173, offset: 200)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2174, line: 33, elements: !397)
!2174 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2057, file: !163, line: 170, baseType: !2176, size: 96, offset: 224)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2176, file: !163, line: 86, baseType: !2066, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2176, file: !163, line: 90, baseType: !2102, size: 64, offset: 32)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1970, file: !1974, line: 43, type: !2182, isLocal: false, isDefinition: true, align: 512)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2183, size: 8704, elements: !2186)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !2184)
!2184 = !{!2185}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2183, file: !249, line: 48, baseType: !103, size: 8)
!2186 = !{!2187}
!2187 = !DISubrange(count: 1088)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1970, file: !1974, line: 44, type: !2067, isLocal: false, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1970, file: !1974, line: 48, type: !2192, isLocal: false, isDefinition: true)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 1024, elements: !661)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1970, file: !1974, line: 86, type: !2195, isLocal: false, isDefinition: true, align: 512)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2183, size: 16896, elements: !2196)
!2196 = !{!662, !319}
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1970, file: !1974, line: 217, type: !492, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1970, file: !1974, line: 50, type: !2201, isLocal: true, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2183, size: 3072, elements: !2202)
!2202 = !{!662, !2203}
!2203 = !DISubrange(count: 384)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "levels", scope: !2206, file: !1974, line: 232, type: !2226, isLocal: true, isDefinition: true)
!2206 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1974, file: !1974, line: 230, type: !2207, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1973}
!2209 = !{!2210, !2211, !2221, !2225}
!2210 = !DILocalVariable(name: "level", arg: 1, scope: !2206, file: !1974, line: 230, type: !1973)
!2211 = !DILocalVariable(name: "entry", scope: !2206, file: !1974, line: 244, type: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2215)
!2215 = !{!2216, !2220}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2214, file: !472, line: 60, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!105, !1992}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2214, file: !472, line: 65, baseType: !1992, size: 32, offset: 32)
!2221 = !DILocalVariable(name: "dev", scope: !2222, file: !1974, line: 247, type: !1992)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1974, line: 246, column: 64)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1974, line: 246, column: 2)
!2224 = distinct !DILexicalBlock(scope: !2206, file: !1974, line: 246, column: 2)
!2225 = !DILocalVariable(name: "rc", scope: !2222, file: !1974, line: 248, type: !105)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 192, elements: !1342)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !2229)
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2228, file: !348, line: 17, baseType: !269, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2228, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "states_str", scope: !2234, file: !2235, line: 276, type: !2358, isLocal: true, isDefinition: true)
!2234 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2235, file: !2235, line: 271, type: !2236, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !2349)
!2235 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!269, !2238, !102, !111}
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2241)
!2241 = !{!2242, !2300, !2312, !2313, !2314, !2315, !2321, !2336}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2240, file: !127, line: 247, baseType: !2243, size: 384)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2244)
!2244 = !{!2245, !2269, !2276, !2277, !2278, !2287, !2288, !2289}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !127, line: 60, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !127, line: 60, size: 64, elements: !2247)
!2247 = !{!2248, !2263}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2246, file: !127, line: 61, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2250)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2251)
!2251 = !{!2252, !2258}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !137, line: 38, baseType: !2253, size: 32)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !137, line: 38, size: 32, elements: !2254)
!2254 = !{!2255, !2257}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2253, file: !137, line: 39, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2253, file: !137, line: 40, baseType: !2256, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !137, line: 42, baseType: !2259, size: 32, offset: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !137, line: 42, size: 32, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2259, file: !137, line: 43, baseType: !2256, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2259, file: !137, line: 44, baseType: !2256, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2246, file: !127, line: 62, baseType: !2264, size: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2264, file: !153, line: 50, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2268, size: 64, elements: !158)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2243, file: !127, line: 68, baseType: !2270, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2272, file: !163, line: 232, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2250)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2243, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2243, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !127, line: 90, baseType: !2279, size: 16, offset: 112)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !127, line: 90, size: 16, elements: !2280)
!2280 = !{!2281, !2286}
!2281 = !DIDerivedType(tag: DW_TAG_member, scope: !2279, file: !127, line: 91, baseType: !2282, size: 16)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2279, file: !127, line: 91, size: 16, elements: !2283)
!2283 = !{!2284, !2285}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2282, file: !127, line: 96, baseType: !179, size: 8)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2282, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2279, file: !127, line: 100, baseType: !183, size: 16)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2243, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2243, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2243, file: !127, line: 131, baseType: !2290, size: 192, offset: 192)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2291)
!2291 = !{!2292, !2293, !2299}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2290, file: !163, line: 245, baseType: !2249, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2290, file: !163, line: 246, baseType: !2294, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2298}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2290, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2240, file: !127, line: 250, baseType: !2301, size: 288, offset: 384)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2301, file: !200, line: 26, baseType: !113, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2301, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2301, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2301, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2301, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2301, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2301, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2301, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2301, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2240, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2240, file: !127, line: 256, baseType: !2271, size: 64, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2240, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2240, file: !127, line: 300, baseType: !2316, size: 96, offset: 800)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2316, file: !127, line: 153, baseType: !22, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2316, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2316, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2240, file: !127, line: 325, baseType: !2322, size: 32, offset: 896)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2324)
!2324 = !{!2325, !2331, !2332}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2323, file: !122, line: 5074, baseType: !2326, size: 96)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2327)
!2327 = !{!2328, !2329, !2330}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2326, file: !226, line: 57, baseType: !229, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2326, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2326, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2323, file: !122, line: 5075, baseType: !2271, size: 64, offset: 96)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2323, file: !122, line: 5076, baseType: !2333, size: 32, offset: 160)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2334)
!2334 = !{!2335}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2333, file: !236, line: 52, baseType: !22, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2240, file: !127, line: 343, baseType: !2337, size: 64, offset: 928)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2338)
!2338 = !{!2339, !2340}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2337, file: !200, line: 63, baseType: !113, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2337, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2343, globals: !2345, splitDebugInlining: false, nameTableKind: None)
!2342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2343 = !{!104, !269, !107, !169, !22, !105, !2344, !24, !111, !102, !113, !114}
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2345 = !{!2232, !2346}
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "states_sz", scope: !2234, file: !2235, line: 279, type: !2348, isLocal: true, isDefinition: true)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 256, elements: !1627)
!2349 = !{!2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2350 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2234, file: !2235, line: 271, type: !2238)
!2351 = !DILocalVariable(name: "buf", arg: 2, scope: !2234, file: !2235, line: 271, type: !102)
!2352 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2234, file: !2235, line: 271, type: !111)
!2353 = !DILocalVariable(name: "off", scope: !2234, file: !2235, line: 273, type: !111)
!2354 = !DILocalVariable(name: "bit", scope: !2234, file: !2235, line: 274, type: !169)
!2355 = !DILocalVariable(name: "thread_state", scope: !2234, file: !2235, line: 275, type: !169)
!2356 = !DILocalVariable(name: "index", scope: !2357, file: !2235, line: 293, type: !169)
!2357 = distinct !DILexicalBlock(scope: !2234, file: !2235, line: 293, column: 2)
!2358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1627)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "lock", scope: !2361, file: !2380, line: 39, type: !2381, isLocal: true, isDefinition: true)
!2361 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2362, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2363, globals: !2379, splitDebugInlining: false, nameTableKind: None)
!2362 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2363 = !{!104, !492, !105, !2364}
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2367)
!2367 = !{!2368, !2374}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !137, line: 38, baseType: !2369, size: 32)
!2369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !137, line: 38, size: 32, elements: !2370)
!2370 = !{!2371, !2373}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2369, file: !137, line: 39, baseType: !2372, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2369, file: !137, line: 40, baseType: !2372, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !137, line: 42, baseType: !2375, size: 32, offset: 32)
!2375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !137, line: 42, size: 32, elements: !2376)
!2376 = !{!2377, !2378}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2375, file: !137, line: 43, baseType: !2372, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2375, file: !137, line: 44, baseType: !2372, size: 32)
!2379 = !{!2359}
!2380 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2382)
!2382 = !{!2383}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2381, file: !236, line: 52, baseType: !22, size: 32)
!2384 = !DIGlobalVariableExpression(var: !2385, expr: !DIExpression())
!2385 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2386, file: !2496, line: 56, type: !2483, isLocal: false, isDefinition: true)
!2386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2388, globals: !2493, splitDebugInlining: false, nameTableKind: None)
!2387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2388 = !{!2389, !102, !104, !2491, !432, !107, !116, !105, !113, !114, !2492}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2391)
!2391 = !{!2392, !2450, !2462, !2463, !2464, !2465, !2471, !2486}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2390, file: !127, line: 247, baseType: !2393, size: 384)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2394)
!2394 = !{!2395, !2419, !2426, !2427, !2428, !2437, !2438, !2439}
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2393, file: !127, line: 60, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2393, file: !127, line: 60, size: 64, elements: !2397)
!2397 = !{!2398, !2413}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2396, file: !127, line: 61, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2401)
!2401 = !{!2402, !2408}
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2400, file: !137, line: 38, baseType: !2403, size: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2400, file: !137, line: 38, size: 32, elements: !2404)
!2404 = !{!2405, !2407}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2403, file: !137, line: 39, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2403, file: !137, line: 40, baseType: !2406, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2400, file: !137, line: 42, baseType: !2409, size: 32, offset: 32)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2400, file: !137, line: 42, size: 32, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2409, file: !137, line: 43, baseType: !2406, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2409, file: !137, line: 44, baseType: !2406, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2396, file: !127, line: 62, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2415)
!2415 = !{!2416}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2414, file: !153, line: 50, baseType: !2417, size: 64)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2418, size: 64, elements: !158)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2393, file: !127, line: 68, baseType: !2420, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2422)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2423)
!2423 = !{!2424}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2422, file: !163, line: 232, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2400)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2393, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2393, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2393, file: !127, line: 90, baseType: !2429, size: 16, offset: 112)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2393, file: !127, line: 90, size: 16, elements: !2430)
!2430 = !{!2431, !2436}
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2429, file: !127, line: 91, baseType: !2432, size: 16)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2429, file: !127, line: 91, size: 16, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2432, file: !127, line: 96, baseType: !179, size: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2432, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2429, file: !127, line: 100, baseType: !183, size: 16)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2393, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2393, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2393, file: !127, line: 131, baseType: !2440, size: 192, offset: 192)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2441)
!2441 = !{!2442, !2443, !2449}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2440, file: !163, line: 245, baseType: !2399, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2440, file: !163, line: 246, baseType: !2444, size: 32, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2445)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null, !2448}
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2440, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2390, file: !127, line: 250, baseType: !2451, size: 288, offset: 384)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2452)
!2452 = !{!2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2451, file: !200, line: 26, baseType: !113, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2451, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2451, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2451, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2451, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2451, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2451, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2451, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2451, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2390, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2390, file: !127, line: 256, baseType: !2421, size: 64, offset: 704)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2390, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2390, file: !127, line: 300, baseType: !2466, size: 96, offset: 800)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2467)
!2467 = !{!2468, !2469, !2470}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2466, file: !127, line: 153, baseType: !22, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2466, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2466, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2390, file: !127, line: 325, baseType: !2472, size: 32, offset: 896)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2474)
!2474 = !{!2475, !2481, !2482}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2473, file: !122, line: 5074, baseType: !2476, size: 96)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2477)
!2477 = !{!2478, !2479, !2480}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2476, file: !226, line: 57, baseType: !229, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2476, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2476, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2473, file: !122, line: 5075, baseType: !2421, size: 64, offset: 96)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2473, file: !122, line: 5076, baseType: !2483, size: 32, offset: 160)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2484)
!2484 = !{!2485}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2483, file: !236, line: 52, baseType: !22, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2390, file: !127, line: 343, baseType: !2487, size: 64, offset: 928)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2487, file: !200, line: 63, baseType: !113, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2487, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2493 = !{!2384, !2494, !2497, !2499}
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2386, file: !2496, line: 404, type: !105, isLocal: true, isDefinition: true)
!2496 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2386, file: !2496, line: 405, type: !105, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "pending_current", scope: !2386, file: !2496, line: 425, type: !2389, isLocal: true, isDefinition: true)
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2503, file: !2533, line: 19, type: !2539, isLocal: true, isDefinition: true)
!2503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2505, globals: !2530, splitDebugInlining: false, nameTableKind: None)
!2504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2505 = !{!107, !104, !116, !113, !114, !105, !2506, !102, !109}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2508)
!2508 = !{!2509, !2524, !2529}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2507, file: !163, line: 245, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2512)
!2512 = !{!2513, !2519}
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2511, file: !137, line: 38, baseType: !2514, size: 32)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2511, file: !137, line: 38, size: 32, elements: !2515)
!2515 = !{!2516, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2514, file: !137, line: 39, baseType: !2517, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2514, file: !137, line: 40, baseType: !2517, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2511, file: !137, line: 42, baseType: !2520, size: 32, offset: 32)
!2520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2511, file: !137, line: 42, size: 32, elements: !2521)
!2521 = !{!2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2520, file: !137, line: 43, baseType: !2517, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2520, file: !137, line: 44, baseType: !2517, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2507, file: !163, line: 246, baseType: !2525, size: 32, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2526)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{null, !2506}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2507, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2530 = !{!2531, !2501, !2534, !2536}
!2531 = !DIGlobalVariableExpression(var: !2532, expr: !DIExpression())
!2532 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2503, file: !2533, line: 15, type: !114, isLocal: true, isDefinition: true)
!2533 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2503, file: !2533, line: 25, type: !105, isLocal: true, isDefinition: true)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2503, file: !2533, line: 17, type: !2538, isLocal: true, isDefinition: true)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2511)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2540)
!2540 = !{!2541}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2539, file: !236, line: 52, baseType: !22, size: 32)
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2544, file: !2563, line: 55, type: !2564, isLocal: true, isDefinition: true, align: 32)
!2544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2546, globals: !2562, splitDebugInlining: false, nameTableKind: None)
!2545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2546 = !{!104, !107, !105, !2547}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2550)
!2550 = !{!2551, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2549, file: !137, line: 38, baseType: !2552, size: 32)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2549, file: !137, line: 38, size: 32, elements: !2553)
!2553 = !{!2554, !2556}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2552, file: !137, line: 39, baseType: !2555, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2552, file: !137, line: 40, baseType: !2555, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2549, file: !137, line: 42, baseType: !2558, size: 32, offset: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2549, file: !137, line: 42, size: 32, elements: !2559)
!2559 = !{!2560, !2561}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2558, file: !137, line: 43, baseType: !2555, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2558, file: !137, line: 44, baseType: !2555, size: 32)
!2562 = !{!2542}
!2563 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2566)
!2566 = !{!2567, !2574}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2565, file: !472, line: 60, baseType: !2568, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!105, !2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2573)
!2573 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !472, line: 48, flags: DIFlagFwdDecl)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2565, file: !472, line: 65, baseType: !2571, size: 32, offset: 32)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2577 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2578, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2578 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2581, retainedTypes: !2589, splitDebugInlining: false, nameTableKind: None)
!2580 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2581 = !{!30, !2582}
!2582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2583, line: 54, baseType: !32, size: 32, elements: !2584)
!2583 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2584 = !{!2585, !2586, !2587, !2588}
!2585 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2586 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2587 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2588 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2589 = !{!104, !111, !432, !24, !2590, !22, !2596, !105, !1027, !2611}
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2583, line: 58, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2583, line: 58, size: 64, elements: !2593)
!2593 = !{!2594}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2592, file: !2583, line: 58, baseType: !2595, size: 64)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1627)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2583, line: 68, size: 128, elements: !2598)
!2598 = !{!2599, !2602, !2603, !2604}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2597, file: !2583, line: 69, baseType: !2600, size: 64)
!2600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2601, size: 64, elements: !158)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2583, line: 61, baseType: !113)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2597, file: !2583, line: 70, baseType: !2601, size: 32, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2597, file: !2583, line: 71, baseType: !113, size: 32, offset: 96)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2597, file: !2583, line: 77, baseType: !2605, offset: 128)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2606, elements: !2609)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2583, line: 64, size: 32, elements: !2607)
!2607 = !{!2608}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2606, file: !2583, line: 65, baseType: !2601, size: 32)
!2609 = !{!2610}
!2610 = !DISubrange(count: 0)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2614, retainedTypes: !2634, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2614 = !{!2615, !2623}
!2615 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2616, line: 69, baseType: !32, size: 32, elements: !2617)
!2616 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2617 = !{!2618, !2619, !2620, !2621, !2622}
!2618 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2619 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2620 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2621 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2622 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2623 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2616, line: 56, baseType: !32, size: 32, elements: !2624)
!2624 = !{!2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633}
!2625 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2626 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2627 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2628 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2629 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2630 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2631 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2632 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2633 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2634 = !{!105, !2615, !2623, !2635, !180, !499, !2637, !2638, !170, !184, !269, !111, !104, !22, !32, !428, !2640, !2641, !106, !429, !110, !430, !2636, !2642, !2643, !2644, !2645}
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2616, line: 31, baseType: !2636)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2616, line: 32, baseType: !2639)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2652, splitDebugInlining: false, nameTableKind: None)
!2651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2652 = !{!269, !170, !105, !32}
!2653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2655, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2655 = !{!2656, !30}
!2656 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2657, line: 27, baseType: !32, size: 32, elements: !2658)
!2657 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2658 = !{!2659, !2660, !2661, !2662, !2663}
!2659 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2660 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2661 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2662 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2663 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2666, retainedTypes: !2667, splitDebugInlining: false, nameTableKind: None)
!2665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2666 = !{!748, !2656, !30}
!2667 = !{!933, !2668, !104, !105, !116, !113, !169, !2685}
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2671)
!2671 = !{!2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2670, file: !679, line: 413, baseType: !1727, size: 256)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2670, file: !679, line: 414, baseType: !1729, size: 768, offset: 256)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2670, file: !679, line: 415, baseType: !1727, size: 256, offset: 1024)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2670, file: !679, line: 416, baseType: !1729, size: 768, offset: 1280)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2670, file: !679, line: 417, baseType: !1727, size: 256, offset: 2048)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2670, file: !679, line: 418, baseType: !1729, size: 768, offset: 2304)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2670, file: !679, line: 419, baseType: !1727, size: 256, offset: 3072)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2670, file: !679, line: 420, baseType: !1729, size: 768, offset: 3328)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2670, file: !679, line: 421, baseType: !1727, size: 256, offset: 4096)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2670, file: !679, line: 422, baseType: !1740, size: 1792, offset: 4352)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2670, file: !679, line: 423, baseType: !1744, size: 1920, offset: 6144)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2670, file: !679, line: 424, baseType: !1749, size: 20608, offset: 8064)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2670, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2687, file: !679, line: 447, baseType: !683, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2687, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2687, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2687, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2687, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2687, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2687, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2687, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2687, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2687, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2687, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2687, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2687, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2687, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2687, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2687, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2687, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2687, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2687, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2687, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2687, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2713, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2714, splitDebugInlining: false, nameTableKind: None)
!2713 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2714 = !{!104, !105, !22, !2715}
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2717)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2718)
!2718 = !{!2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2717, file: !679, line: 447, baseType: !683, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2717, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2717, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2717, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2717, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2717, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2717, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2717, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2717, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2717, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2717, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2717, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2717, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2717, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2717, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2717, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2717, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2717, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2717, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2717, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2717, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2741, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2742, splitDebugInlining: false, nameTableKind: None)
!2741 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2742 = !{!2743, !104, !105}
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2745)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2745, file: !679, line: 447, baseType: !683, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2745, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2745, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2745, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2745, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2745, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2745, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2745, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2745, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2745, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2745, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2745, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2745, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2745, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2745, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2745, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2745, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2745, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2745, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2745, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2745, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2770, splitDebugInlining: false, nameTableKind: None)
!2769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2770 = !{!2771, !113, !104, !105}
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2773, line: 98, size: 256, elements: !2774)
!2773 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2774 = !{!2775, !2780, !2785, !2790, !2795, !2800, !2805, !2810}
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 99, baseType: !2776, size: 32)
!2776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 99, size: 32, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2776, file: !2773, line: 99, baseType: !113, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2776, file: !2773, line: 99, baseType: !113, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 100, baseType: !2781, size: 32, offset: 32)
!2781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 100, size: 32, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2781, file: !2773, line: 100, baseType: !113, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2781, file: !2773, line: 100, baseType: !113, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 101, baseType: !2786, size: 32, offset: 64)
!2786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 101, size: 32, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2786, file: !2773, line: 101, baseType: !113, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2786, file: !2773, line: 101, baseType: !113, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 102, baseType: !2791, size: 32, offset: 96)
!2791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 102, size: 32, elements: !2792)
!2792 = !{!2793, !2794}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2791, file: !2773, line: 102, baseType: !113, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2791, file: !2773, line: 102, baseType: !113, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 103, baseType: !2796, size: 32, offset: 128)
!2796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 103, size: 32, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2796, file: !2773, line: 103, baseType: !113, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2796, file: !2773, line: 103, baseType: !113, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 104, baseType: !2801, size: 32, offset: 160)
!2801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 104, size: 32, elements: !2802)
!2802 = !{!2803, !2804}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2801, file: !2773, line: 104, baseType: !113, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2801, file: !2773, line: 104, baseType: !113, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2773, line: 105, baseType: !2806, size: 32, offset: 192)
!2806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !2773, line: 105, size: 32, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2806, file: !2773, line: 105, baseType: !113, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2806, file: !2773, line: 105, baseType: !113, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2772, file: !2773, line: 106, baseType: !113, size: 32, offset: 224)
!2811 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2812, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2655, retainedTypes: !2813, splitDebugInlining: false, nameTableKind: None)
!2812 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2813 = !{!2814, !104, !105, !2839, !2611, !113}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2817)
!2817 = !{!2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2816, file: !679, line: 447, baseType: !683, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2816, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2816, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2816, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2816, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2816, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2816, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2816, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2816, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2816, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2816, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2816, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2816, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2816, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2816, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2816, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2816, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2816, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2816, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2816, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2816, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2773, line: 141, baseType: !2841)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2773, line: 97, size: 256, elements: !2842)
!2842 = !{!2843}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2841, file: !2773, line: 107, baseType: !2844, size: 256)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2773, line: 98, size: 256, elements: !2845)
!2845 = !{!2846, !2851, !2856, !2861, !2866, !2871, !2876, !2881}
!2846 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 99, baseType: !2847, size: 32)
!2847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 99, size: 32, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2847, file: !2773, line: 99, baseType: !113, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2847, file: !2773, line: 99, baseType: !113, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 100, baseType: !2852, size: 32, offset: 32)
!2852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 100, size: 32, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2852, file: !2773, line: 100, baseType: !113, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2852, file: !2773, line: 100, baseType: !113, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 101, baseType: !2857, size: 32, offset: 64)
!2857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 101, size: 32, elements: !2858)
!2858 = !{!2859, !2860}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2857, file: !2773, line: 101, baseType: !113, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2857, file: !2773, line: 101, baseType: !113, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 102, baseType: !2862, size: 32, offset: 96)
!2862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 102, size: 32, elements: !2863)
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2862, file: !2773, line: 102, baseType: !113, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2862, file: !2773, line: 102, baseType: !113, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 103, baseType: !2867, size: 32, offset: 128)
!2867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 103, size: 32, elements: !2868)
!2868 = !{!2869, !2870}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2867, file: !2773, line: 103, baseType: !113, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2867, file: !2773, line: 103, baseType: !113, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 104, baseType: !2872, size: 32, offset: 160)
!2872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 104, size: 32, elements: !2873)
!2873 = !{!2874, !2875}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2872, file: !2773, line: 104, baseType: !113, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2872, file: !2773, line: 104, baseType: !113, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, scope: !2844, file: !2773, line: 105, baseType: !2877, size: 32, offset: 192)
!2877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2844, file: !2773, line: 105, size: 32, elements: !2878)
!2878 = !{!2879, !2880}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2877, file: !2773, line: 105, baseType: !113, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2877, file: !2773, line: 105, baseType: !113, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2844, file: !2773, line: 106, baseType: !113, size: 32, offset: 224)
!2882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1712, retainedTypes: !2884, splitDebugInlining: false, nameTableKind: None)
!2883 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2884 = !{!933, !116, !169, !113, !2885, !2902}
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2887)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2888)
!2888 = !{!2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2887, file: !679, line: 413, baseType: !1727, size: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2887, file: !679, line: 414, baseType: !1729, size: 768, offset: 256)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2887, file: !679, line: 415, baseType: !1727, size: 256, offset: 1024)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2887, file: !679, line: 416, baseType: !1729, size: 768, offset: 1280)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2887, file: !679, line: 417, baseType: !1727, size: 256, offset: 2048)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2887, file: !679, line: 418, baseType: !1729, size: 768, offset: 2304)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2887, file: !679, line: 419, baseType: !1727, size: 256, offset: 3072)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2887, file: !679, line: 420, baseType: !1729, size: 768, offset: 3328)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2887, file: !679, line: 421, baseType: !1727, size: 256, offset: 4096)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2887, file: !679, line: 422, baseType: !1740, size: 1792, offset: 4352)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2887, file: !679, line: 423, baseType: !1744, size: 1920, offset: 6144)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2887, file: !679, line: 424, baseType: !1749, size: 20608, offset: 8064)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2887, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2904)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2905)
!2905 = !{!2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2904, file: !679, line: 447, baseType: !683, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2904, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2904, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2904, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2904, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2904, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2904, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2904, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2904, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2904, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2904, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2904, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2904, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2904, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2904, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2904, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2904, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2904, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2904, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2904, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2904, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2928, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2929, splitDebugInlining: false, nameTableKind: None)
!2928 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2929 = !{!2930, !104, !105}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2932)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2933)
!2933 = !{!2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2932, file: !679, line: 447, baseType: !683, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2932, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2932, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2932, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2932, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2932, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2932, file: !679, line: 453, baseType: !1764, size: 96, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2932, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2932, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2932, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2932, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2932, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2932, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2932, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2932, file: !679, line: 461, baseType: !1775, size: 64, offset: 512)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2932, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2932, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2932, file: !679, line: 464, baseType: !1779, size: 128, offset: 640)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2932, file: !679, line: 465, baseType: !1781, size: 160, offset: 768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2932, file: !679, line: 466, baseType: !1783, size: 160, offset: 928)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2932, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2957, splitDebugInlining: false, nameTableKind: None)
!2956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2957 = !{!103, !102, !111, !1132, !2958, !170, !104}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2962, splitDebugInlining: false, nameTableKind: None)
!2961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2962 = !{!2963}
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 532, baseType: !2965)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 500, size: 1088, elements: !2966)
!2966 = !{!2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2965, file: !457, line: 502, baseType: !461, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2965, file: !457, line: 503, baseType: !461, size: 32, offset: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2965, file: !457, line: 504, baseType: !461, size: 32, offset: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2965, file: !457, line: 505, baseType: !461, size: 32, offset: 96)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2965, file: !457, line: 506, baseType: !461, size: 32, offset: 128)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2965, file: !457, line: 507, baseType: !461, size: 32, offset: 160)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2965, file: !457, line: 508, baseType: !461, size: 32, offset: 192)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2965, file: !457, line: 509, baseType: !113, size: 32, offset: 224)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2965, file: !457, line: 510, baseType: !461, size: 32, offset: 256)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2965, file: !457, line: 511, baseType: !461, size: 32, offset: 288)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2965, file: !457, line: 512, baseType: !1001, size: 64, offset: 320)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2965, file: !457, line: 513, baseType: !461, size: 32, offset: 384)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2965, file: !457, line: 514, baseType: !461, size: 32, offset: 416)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2965, file: !457, line: 515, baseType: !461, size: 32, offset: 448)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2965, file: !457, line: 516, baseType: !113, size: 32, offset: 480)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2965, file: !457, line: 517, baseType: !461, size: 32, offset: 512)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2965, file: !457, line: 518, baseType: !461, size: 32, offset: 544)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2965, file: !457, line: 519, baseType: !1001, size: 64, offset: 576)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2965, file: !457, line: 520, baseType: !461, size: 32, offset: 640)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2965, file: !457, line: 521, baseType: !461, size: 32, offset: 672)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2965, file: !457, line: 522, baseType: !461, size: 32, offset: 704)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2965, file: !457, line: 523, baseType: !113, size: 32, offset: 736)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2965, file: !457, line: 524, baseType: !461, size: 32, offset: 768)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2965, file: !457, line: 525, baseType: !461, size: 32, offset: 800)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2965, file: !457, line: 526, baseType: !1001, size: 64, offset: 832)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2965, file: !457, line: 527, baseType: !461, size: 32, offset: 896)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2965, file: !457, line: 528, baseType: !461, size: 32, offset: 928)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2965, file: !457, line: 529, baseType: !1001, size: 64, offset: 960)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2965, file: !457, line: 530, baseType: !461, size: 32, offset: 1024)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2965, file: !457, line: 531, baseType: !461, size: 32, offset: 1056)
!2997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!2999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3001, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3000 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3001 = !{!3002, !3009, !3013}
!3002 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3003, line: 38, baseType: !32, size: 32, elements: !3004)
!3003 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3004 = !{!3005, !3006, !3007, !3008}
!3005 = !DIEnumerator(name: "HAL_OK", value: 0)
!3006 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3007 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3008 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3009 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 184, baseType: !32, size: 32, elements: !3010)
!3010 = !{!3011, !3012}
!3011 = !DIEnumerator(name: "RESET", value: 0)
!3012 = !DIEnumerator(name: "SET", value: 1)
!3013 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 190, baseType: !32, size: 32, elements: !3014)
!3014 = !{!3015, !3016}
!3015 = !DIEnumerator(name: "DISABLE", value: 0)
!3016 = !DIEnumerator(name: "ENABLE", value: 1)
!3017 = !{!104, !3018, !169, !113, !1621, !3052, !3058, !3069, !183, !3070, !114}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 532, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 500, size: 1088, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3020, file: !457, line: 502, baseType: !461, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3020, file: !457, line: 503, baseType: !461, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3020, file: !457, line: 504, baseType: !461, size: 32, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3020, file: !457, line: 505, baseType: !461, size: 32, offset: 96)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3020, file: !457, line: 506, baseType: !461, size: 32, offset: 128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3020, file: !457, line: 507, baseType: !461, size: 32, offset: 160)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3020, file: !457, line: 508, baseType: !461, size: 32, offset: 192)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3020, file: !457, line: 509, baseType: !113, size: 32, offset: 224)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3020, file: !457, line: 510, baseType: !461, size: 32, offset: 256)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3020, file: !457, line: 511, baseType: !461, size: 32, offset: 288)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3020, file: !457, line: 512, baseType: !1001, size: 64, offset: 320)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3020, file: !457, line: 513, baseType: !461, size: 32, offset: 384)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3020, file: !457, line: 514, baseType: !461, size: 32, offset: 416)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3020, file: !457, line: 515, baseType: !461, size: 32, offset: 448)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3020, file: !457, line: 516, baseType: !113, size: 32, offset: 480)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3020, file: !457, line: 517, baseType: !461, size: 32, offset: 512)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3020, file: !457, line: 518, baseType: !461, size: 32, offset: 544)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3020, file: !457, line: 519, baseType: !1001, size: 64, offset: 576)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3020, file: !457, line: 520, baseType: !461, size: 32, offset: 640)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3020, file: !457, line: 521, baseType: !461, size: 32, offset: 672)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3020, file: !457, line: 522, baseType: !461, size: 32, offset: 704)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3020, file: !457, line: 523, baseType: !113, size: 32, offset: 736)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3020, file: !457, line: 524, baseType: !461, size: 32, offset: 768)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3020, file: !457, line: 525, baseType: !461, size: 32, offset: 800)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3020, file: !457, line: 526, baseType: !1001, size: 64, offset: 832)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3020, file: !457, line: 527, baseType: !461, size: 32, offset: 896)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3020, file: !457, line: 528, baseType: !461, size: 32, offset: 928)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3020, file: !457, line: 529, baseType: !1001, size: 64, offset: 960)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3020, file: !457, line: 530, baseType: !461, size: 32, offset: 1024)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3020, file: !457, line: 531, baseType: !461, size: 32, offset: 1056)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 494, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 490, size: 64, elements: !3055)
!3055 = !{!3056, !3057}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3054, file: !457, line: 492, baseType: !461, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3054, file: !457, line: 493, baseType: !461, size: 32, offset: 32)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 369, baseType: !3060)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 360, size: 224, elements: !3061)
!3061 = !{!3062, !3063, !3064, !3065, !3066, !3067, !3068}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3060, file: !457, line: 362, baseType: !461, size: 32)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3060, file: !457, line: 363, baseType: !461, size: 32, offset: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3060, file: !457, line: 364, baseType: !461, size: 32, offset: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3060, file: !457, line: 365, baseType: !461, size: 32, offset: 96)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3060, file: !457, line: 366, baseType: !461, size: 32, offset: 128)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3060, file: !457, line: 367, baseType: !461, size: 32, offset: 160)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3060, file: !457, line: 368, baseType: !461, size: 32, offset: 192)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 441, baseType: !3072)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 430, size: 320, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3072, file: !457, line: 432, baseType: !461, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3072, file: !457, line: 433, baseType: !461, size: 32, offset: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3072, file: !457, line: 434, baseType: !461, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3072, file: !457, line: 435, baseType: !461, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3072, file: !457, line: 436, baseType: !461, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3072, file: !457, line: 437, baseType: !461, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3072, file: !457, line: 438, baseType: !461, size: 32, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3072, file: !457, line: 439, baseType: !461, size: 32, offset: 224)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3072, file: !457, line: 440, baseType: !1286, size: 64, offset: 256)
!3083 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3084, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3085, retainedTypes: !3086, splitDebugInlining: false, nameTableKind: None)
!3084 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3085 = !{!973}
!3086 = !{!3087, !113, !3095, !3101, !3112}
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !3089)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !3090)
!3090 = !{!3091, !3092, !3093, !3094}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3089, file: !679, line: 766, baseType: !461, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3089, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3089, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3089, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 494, baseType: !3097)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 490, size: 64, elements: !3098)
!3098 = !{!3099, !3100}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3097, file: !457, line: 492, baseType: !461, size: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3097, file: !457, line: 493, baseType: !461, size: 32, offset: 32)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 369, baseType: !3103)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 360, size: 224, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3110, !3111}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3103, file: !457, line: 362, baseType: !461, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3103, file: !457, line: 363, baseType: !461, size: 32, offset: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3103, file: !457, line: 364, baseType: !461, size: 32, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3103, file: !457, line: 365, baseType: !461, size: 32, offset: 96)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3103, file: !457, line: 366, baseType: !461, size: 32, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3103, file: !457, line: 367, baseType: !461, size: 32, offset: 160)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3103, file: !457, line: 368, baseType: !461, size: 32, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 532, baseType: !3114)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 500, size: 1088, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3114, file: !457, line: 502, baseType: !461, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3114, file: !457, line: 503, baseType: !461, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3114, file: !457, line: 504, baseType: !461, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3114, file: !457, line: 505, baseType: !461, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3114, file: !457, line: 506, baseType: !461, size: 32, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3114, file: !457, line: 507, baseType: !461, size: 32, offset: 160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3114, file: !457, line: 508, baseType: !461, size: 32, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3114, file: !457, line: 509, baseType: !113, size: 32, offset: 224)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3114, file: !457, line: 510, baseType: !461, size: 32, offset: 256)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3114, file: !457, line: 511, baseType: !461, size: 32, offset: 288)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3114, file: !457, line: 512, baseType: !1001, size: 64, offset: 320)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3114, file: !457, line: 513, baseType: !461, size: 32, offset: 384)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3114, file: !457, line: 514, baseType: !461, size: 32, offset: 416)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3114, file: !457, line: 515, baseType: !461, size: 32, offset: 448)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3114, file: !457, line: 516, baseType: !113, size: 32, offset: 480)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3114, file: !457, line: 517, baseType: !461, size: 32, offset: 512)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3114, file: !457, line: 518, baseType: !461, size: 32, offset: 544)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3114, file: !457, line: 519, baseType: !1001, size: 64, offset: 576)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3114, file: !457, line: 520, baseType: !461, size: 32, offset: 640)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3114, file: !457, line: 521, baseType: !461, size: 32, offset: 672)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3114, file: !457, line: 522, baseType: !461, size: 32, offset: 704)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3114, file: !457, line: 523, baseType: !113, size: 32, offset: 736)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3114, file: !457, line: 524, baseType: !461, size: 32, offset: 768)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3114, file: !457, line: 525, baseType: !461, size: 32, offset: 800)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3114, file: !457, line: 526, baseType: !1001, size: 64, offset: 832)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3114, file: !457, line: 527, baseType: !461, size: 32, offset: 896)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3114, file: !457, line: 528, baseType: !461, size: 32, offset: 928)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3114, file: !457, line: 529, baseType: !1001, size: 64, offset: 960)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3114, file: !457, line: 530, baseType: !461, size: 32, offset: 1024)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3114, file: !457, line: 531, baseType: !461, size: 32, offset: 1056)
!3146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3147, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3148, splitDebugInlining: false, nameTableKind: None)
!3147 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3148 = !{!104, !111}
!3149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3150, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3151, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3150 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3151 = !{!3152, !3159, !2656, !30}
!3152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3153, line: 14, baseType: !32, size: 32, elements: !3154)
!3153 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3154 = !{!3155, !3156, !3157, !3158}
!3155 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3156 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3157 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3158 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3153, line: 42, baseType: !32, size: 32, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3164, !3165, !3166}
!3161 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3162 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3163 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3164 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3165 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3166 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3171, splitDebugInlining: false, nameTableKind: None)
!3170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3171 = !{!104, !105, !3172, !3187}
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !3174)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !3175)
!3175 = !{!3176, !3182}
!3176 = !DIDerivedType(tag: DW_TAG_member, scope: !3174, file: !137, line: 38, baseType: !3177, size: 32)
!3177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3174, file: !137, line: 38, size: 32, elements: !3178)
!3178 = !{!3179, !3181}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3177, file: !137, line: 39, baseType: !3180, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3177, file: !137, line: 40, baseType: !3180, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, scope: !3174, file: !137, line: 42, baseType: !3183, size: 32, offset: 32)
!3183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3174, file: !137, line: 42, size: 32, elements: !3184)
!3184 = !{!3185, !3186}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3183, file: !137, line: 43, baseType: !3180, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3183, file: !137, line: 44, baseType: !3180, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 32)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !3189)
!3189 = !{!3190, !3234, !3246, !3247, !3248, !3249, !3255, !3270}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3188, file: !127, line: 247, baseType: !3191, size: 384)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3192)
!3192 = !{!3193, !3203, !3210, !3211, !3212, !3221, !3222, !3223}
!3193 = !DIDerivedType(tag: DW_TAG_member, scope: !3191, file: !127, line: 60, baseType: !3194, size: 64)
!3194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3191, file: !127, line: 60, size: 64, elements: !3195)
!3195 = !{!3196, !3197}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3194, file: !127, line: 61, baseType: !3173, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3194, file: !127, line: 62, baseType: !3198, size: 64)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3199)
!3199 = !{!3200}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3198, file: !153, line: 50, baseType: !3201, size: 64)
!3201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3202, size: 64, elements: !158)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3191, file: !127, line: 68, baseType: !3204, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3206)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3207)
!3207 = !{!3208}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3206, file: !163, line: 232, baseType: !3209, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !3174)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3191, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3191, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3212 = !DIDerivedType(tag: DW_TAG_member, scope: !3191, file: !127, line: 90, baseType: !3213, size: 16, offset: 112)
!3213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3191, file: !127, line: 90, size: 16, elements: !3214)
!3214 = !{!3215, !3220}
!3215 = !DIDerivedType(tag: DW_TAG_member, scope: !3213, file: !127, line: 91, baseType: !3216, size: 16)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3213, file: !127, line: 91, size: 16, elements: !3217)
!3217 = !{!3218, !3219}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3216, file: !127, line: 96, baseType: !179, size: 8)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3216, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3213, file: !127, line: 100, baseType: !183, size: 16)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3191, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3191, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3191, file: !127, line: 131, baseType: !3224, size: 192, offset: 192)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3225)
!3225 = !{!3226, !3227, !3233}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3224, file: !163, line: 245, baseType: !3173, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3224, file: !163, line: 246, baseType: !3228, size: 32, offset: 64)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3229)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 32)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{null, !3232}
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3224, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3188, file: !127, line: 250, baseType: !3235, size: 288, offset: 384)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3236)
!3236 = !{!3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3235, file: !200, line: 26, baseType: !113, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3235, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3235, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3235, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3235, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3235, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3235, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3235, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3235, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3188, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3188, file: !127, line: 256, baseType: !3205, size: 64, offset: 704)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3188, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3188, file: !127, line: 300, baseType: !3250, size: 96, offset: 800)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !3251)
!3251 = !{!3252, !3253, !3254}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3250, file: !127, line: 153, baseType: !22, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3250, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3250, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3188, file: !127, line: 325, baseType: !3256, size: 32, offset: 896)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 32)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3258)
!3258 = !{!3259, !3265, !3266}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3257, file: !122, line: 5074, baseType: !3260, size: 96)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !3261)
!3261 = !{!3262, !3263, !3264}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3260, file: !226, line: 57, baseType: !229, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3260, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3260, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3257, file: !122, line: 5075, baseType: !3205, size: 64, offset: 96)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3257, file: !122, line: 5076, baseType: !3267, size: 32, offset: 160)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !3268)
!3268 = !{!3269}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3267, file: !236, line: 52, baseType: !22, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3188, file: !127, line: 343, baseType: !3271, size: 64, offset: 928)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3272)
!3272 = !{!3273, !3274}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3271, file: !200, line: 63, baseType: !113, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3271, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3275 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3276, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3277, splitDebugInlining: false, nameTableKind: None)
!3276 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3277 = !{!22, !104, !105}
!3278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3279, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3280 = !{!"Ubuntu clang version 14.0.6"}
!3281 = !{i32 7, !"Dwarf Version", i32 4}
!3282 = !{i32 2, !"Debug Info Version", i32 3}
!3283 = !{i32 1, !"wchar_size", i32 4}
!3284 = !{i32 1, !"min_enum_size", i32 4}
!3285 = !{i32 1, !"branch-target-enforcement", i32 0}
!3286 = !{i32 1, !"sign-return-address", i32 0}
!3287 = !{i32 1, !"sign-return-address-all", i32 0}
!3288 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3289 = !{i32 7, !"frame-pointer", i32 2}
!3290 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3291, file: !3291, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !397)
!3291 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3292 = !DILocation(line: 28, column: 1, scope: !3290)
!3293 = !{i64 2155128851, i64 2155128871, i64 2155128934}
!3294 = !DILocation(line: 29, column: 1, scope: !3290)
!3295 = !{i64 2155129266, i64 2155129286, i64 2155129349}
!3296 = !DILocation(line: 30, column: 1, scope: !3290)
!3297 = !{i64 2155129685, i64 2155129705, i64 2155129768}
!3298 = !DILocation(line: 31, column: 1, scope: !3290)
!3299 = !{i64 2155130104, i64 2155130124, i64 2155130187}
!3300 = !DILocation(line: 33, column: 1, scope: !3290)
!3301 = !{i64 2155130396, i64 2155130416, i64 2155130479}
!3302 = !DILocation(line: 35, column: 1, scope: !3290)
!3303 = !{i64 2155130721, i64 2155130741, i64 2155130804}
!3304 = !DILocation(line: 50, column: 1, scope: !3290)
!3305 = !{i64 2155131148, i64 2155131168, i64 2155131231}
!3306 = !DILocation(line: 54, column: 1, scope: !3290)
!3307 = !{i64 2155131587, i64 2155131607, i64 2155131670}
!3308 = !DILocation(line: 61, column: 1, scope: !3290)
!3309 = !{i64 2155131904, i64 2155131924, i64 2155131987}
!3310 = !DILocation(line: 63, column: 1, scope: !3290)
!3311 = !{i64 2155132284, i64 2155132304, i64 2155132367}
!3312 = !DILocation(line: 64, column: 1, scope: !3290)
!3313 = !{i64 2155132806, i64 2155132826, i64 2155132889}
!3314 = !DILocation(line: 65, column: 1, scope: !3290)
!3315 = !{i64 2155133304, i64 2155133324, i64 2155133387}
!3316 = !DILocation(line: 66, column: 1, scope: !3290)
!3317 = !{i64 2155133786, i64 2155133806, i64 2155133869}
!3318 = !DILocation(line: 67, column: 1, scope: !3290)
!3319 = !{i64 2155134293, i64 2155134313, i64 2155134376}
!3320 = !DILocation(line: 68, column: 1, scope: !3290)
!3321 = !{i64 2155134781, i64 2155134801, i64 2155134864}
!3322 = !DILocation(line: 70, column: 1, scope: !3290)
!3323 = !{i64 2155139310, i64 2155139330, i64 2155139393}
!3324 = !DILocation(line: 71, column: 1, scope: !3290)
!3325 = !{i64 2155139752, i64 2155139772, i64 2155139835}
!3326 = !DILocation(line: 72, column: 1, scope: !3290)
!3327 = !{i64 2155140210, i64 2155140230, i64 2155140293}
!3328 = !DILocation(line: 79, column: 1, scope: !3290)
!3329 = !{i64 2155140664, i64 2155140684, i64 2155140747}
!3330 = !DILocation(line: 80, column: 1, scope: !3290)
!3331 = !{i64 2155141175, i64 2155141195, i64 2155141258}
!3332 = !DILocation(line: 82, column: 1, scope: !3290)
!3333 = !{i64 2155141666, i64 2155141686, i64 2155141749}
!3334 = !DILocation(line: 97, column: 1, scope: !3290)
!3335 = !{i64 2155142003, i64 2155142023, i64 2155142086}
!3336 = !DILocation(line: 99, column: 1, scope: !3290)
!3337 = !{i64 2155142221, i64 2155142241, i64 2155142304}
!3338 = !DILocation(line: 102, column: 1, scope: !3290)
!3339 = !{i64 2155142478, i64 2155142498, i64 2155142561}
!3340 = !DILocation(line: 105, column: 1, scope: !3290)
!3341 = !{i64 2155142718, i64 2155142738, i64 2155142801}
!3342 = !DILocation(line: 115, column: 1, scope: !3290)
!3343 = !{i64 2155143057, i64 2155143077, i64 2155143140}
!3344 = !DILocation(line: 118, column: 1, scope: !3290)
!3345 = !{i64 2155143401, i64 2155143421, i64 2155143484}
!3346 = !DILocation(line: 32, column: 1, scope: !3347)
!3347 = !DILexicalBlockFile(scope: !3290, file: !3348, discriminator: 0)
!3348 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3349 = !{i64 2155143757, i64 2155143777, i64 2155143840}
!3350 = !DILocation(line: 33, column: 1, scope: !3347)
!3351 = !{i64 2155144269, i64 2155144289, i64 2155144352}
!3352 = !DILocation(line: 53, column: 1, scope: !3347)
!3353 = !{i64 2155144777, i64 2155144797, i64 2155144860}
!3354 = !DILocation(line: 54, column: 1, scope: !3347)
!3355 = !{i64 2155145195, i64 2155145215, i64 2155145278}
!3356 = !DILocation(line: 55, column: 1, scope: !3347)
!3357 = !{i64 2155145613, i64 2155145633, i64 2155145696}
!3358 = !DILocation(line: 56, column: 1, scope: !3347)
!3359 = !{i64 2155146031, i64 2155146051, i64 2155146114}
!3360 = !DILocation(line: 57, column: 1, scope: !3347)
!3361 = !{i64 2155146449, i64 2155146469, i64 2155146532}
!3362 = !DILocation(line: 58, column: 1, scope: !3347)
!3363 = !{i64 2155146867, i64 2155146887, i64 2155146950}
!3364 = !DILocation(line: 59, column: 1, scope: !3347)
!3365 = !{i64 2155147285, i64 2155147305, i64 2155147368}
!3366 = !DILocation(line: 60, column: 1, scope: !3347)
!3367 = !{i64 2155147709, i64 2155147729, i64 2155147792}
!3368 = !DILocation(line: 61, column: 1, scope: !3347)
!3369 = !{i64 2155148026, i64 2155148046, i64 2155148109}
!3370 = !DILocation(line: 70, column: 1, scope: !3347)
!3371 = !{i64 2155148255, i64 2155148275, i64 2155148338}
!3372 = !DILocation(line: 72, column: 1, scope: !3347)
!3373 = !{i64 2155148587, i64 2155148607, i64 2155148670}
!3374 = !DILocation(line: 73, column: 1, scope: !3347)
!3375 = !{i64 2155153098, i64 2155153118, i64 2155153181}
!3376 = !DILocation(line: 74, column: 1, scope: !3347)
!3377 = !{i64 2155153548, i64 2155153568, i64 2155153631}
!3378 = !DILocation(line: 75, column: 1, scope: !3347)
!3379 = !{i64 2155153998, i64 2155154018, i64 2155154081}
!3380 = !DILocation(line: 76, column: 1, scope: !3347)
!3381 = !{i64 2155154448, i64 2155154468, i64 2155154531}
!3382 = !DILocation(line: 77, column: 1, scope: !3347)
!3383 = !{i64 2155154898, i64 2155154918, i64 2155154981}
!3384 = !DILocation(line: 78, column: 1, scope: !3347)
!3385 = !{i64 2155155348, i64 2155155368, i64 2155155431}
!3386 = !DILocation(line: 79, column: 1, scope: !3347)
!3387 = !{i64 2155155798, i64 2155155818, i64 2155155881}
!3388 = !DILocation(line: 80, column: 1, scope: !3347)
!3389 = !{i64 2155156251, i64 2155156271, i64 2155156334}
!3390 = !DILocation(line: 84, column: 1, scope: !3347)
!3391 = !{i64 2155156583, i64 2155156603, i64 2155156666}
!3392 = !DILocation(line: 91, column: 1, scope: !3347)
!3393 = !{i64 2155156980, i64 2155157000, i64 2155157063}
!3394 = !DILocation(line: 93, column: 1, scope: !3347)
!3395 = !{i64 2155157347, i64 2155157367, i64 2155157430}
!3396 = !DILocation(line: 106, column: 1, scope: !3347)
!3397 = !{i64 2155157617, i64 2155157637, i64 2155157700}
!3398 = !DILocation(line: 11, column: 1, scope: !3399)
!3399 = !DILexicalBlockFile(scope: !3290, file: !3400, discriminator: 0)
!3400 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3401 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3402)
!3402 = !{!3403, !3404, !3405, !3406, !3408}
!3403 = !DILocalVariable(name: "p1", arg: 1, scope: !3401, file: !120, line: 48, type: !104)
!3404 = !DILocalVariable(name: "p2", arg: 2, scope: !3401, file: !120, line: 48, type: !104)
!3405 = !DILocalVariable(name: "p3", arg: 3, scope: !3401, file: !120, line: 48, type: !104)
!3406 = !DILocalVariable(name: "m", scope: !3407, file: !120, line: 59, type: !303)
!3407 = distinct !DILexicalBlock(scope: !3401, file: !120, line: 54, column: 15)
!3408 = !DILocalVariable(name: "ret", scope: !3407, file: !120, line: 64, type: !105)
!3409 = !DILocation(line: 0, scope: !3401)
!3410 = !DILocation(line: 54, column: 2, scope: !3401)
!3411 = !DILocation(line: 59, column: 3, scope: !3407)
!3412 = !DILocation(line: 59, column: 14, scope: !3407)
!3413 = !DILocation(line: 61, column: 3, scope: !3407)
!3414 = !DILocation(line: 62, column: 23, scope: !3407)
!3415 = !DILocation(line: 62, column: 44, scope: !3407)
!3416 = !DILocation(line: 62, column: 40, scope: !3407)
!3417 = !DILocation(line: 62, column: 21, scope: !3407)
!3418 = !DILocation(line: 64, column: 35, scope: !3407)
!3419 = !DILocation(line: 64, column: 43, scope: !3407)
!3420 = !DILocation(line: 64, column: 13, scope: !3407)
!3421 = !DILocation(line: 0, scope: !3407)
!3422 = !DILocation(line: 66, column: 7, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3407, file: !120, line: 66, column: 7)
!3424 = !DILocation(line: 66, column: 7, scope: !3407)
!3425 = !DILocation(line: 67, column: 4, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !120, line: 67, column: 4)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !120, line: 67, column: 4)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !120, line: 67, column: 4)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !120, line: 67, column: 4)
!3430 = distinct !DILexicalBlock(scope: !3423, file: !120, line: 66, column: 12)
!3431 = !DILocation(line: 69, column: 3, scope: !3430)
!3432 = !DILocation(line: 70, column: 2, scope: !3401)
!3433 = distinct !{!3433, !3410, !3432}
!3434 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3435 = !DILocation(line: 1677, column: 9, scope: !3434)
!3436 = !DILocation(line: 1677, column: 2, scope: !3434)
!3437 = distinct !DISubprogram(name: "k_msgq_put", scope: !3438, file: !3438, line: 1129, type: !3439, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3446)
!3438 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!105, !3441, !13, !3442}
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!3442 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3443)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3444)
!3444 = !{!3445}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3443, file: !108, line: 66, baseType: !107, size: 64)
!3446 = !{!3447, !3448, !3449}
!3447 = !DILocalVariable(name: "msgq", arg: 1, scope: !3437, file: !3438, line: 1129, type: !3441)
!3448 = !DILocalVariable(name: "data", arg: 2, scope: !3437, file: !3438, line: 1129, type: !13)
!3449 = !DILocalVariable(name: "timeout", arg: 3, scope: !3437, file: !3438, line: 1129, type: !3442)
!3450 = !DILocation(line: 0, scope: !3437)
!3451 = !DILocation(line: 1139, column: 2, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3437, file: !3438, line: 1139, column: 2)
!3453 = !{i64 2154855345}
!3454 = !DILocation(line: 1140, column: 9, scope: !3437)
!3455 = !DILocation(line: 1140, column: 2, scope: !3437)
!3456 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3457, file: !3457, line: 175, type: !3458, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3460)
!3457 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!103, !105}
!3460 = !{!3461}
!3461 = !DILocalVariable(name: "level", arg: 1, scope: !3456, file: !3457, line: 175, type: !105)
!3462 = !DILocation(line: 0, scope: !3456)
!3463 = !DILocation(line: 177, column: 2, scope: !3456)
!3464 = !DILocation(line: 189, column: 1, scope: !3456)
!3465 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3466, file: !3466, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3466 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3467 = !DILocation(line: 26, column: 9, scope: !3465)
!3468 = !DILocation(line: 26, column: 2, scope: !3465)
!3469 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3470)
!3470 = !{!3471, !3473}
!3471 = !DILocalVariable(name: "i", scope: !3472, file: !120, line: 228, type: !106)
!3472 = distinct !DILexicalBlock(scope: !3469, file: !120, line: 228, column: 2)
!3473 = !DILocalVariable(name: "prio", scope: !3474, file: !120, line: 235, type: !105)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !120, line: 228, column: 41)
!3475 = distinct !DILexicalBlock(scope: !3472, file: !120, line: 228, column: 2)
!3476 = !DILocation(line: 0, scope: !3472)
!3477 = !DILocation(line: 228, column: 2, scope: !3472)
!3478 = !DILocation(line: 246, column: 2, scope: !3469)
!3479 = !DILocation(line: 247, column: 1, scope: !3469)
!3480 = !DILocation(line: 235, column: 31, scope: !3474)
!3481 = !DILocation(line: 0, scope: !3474)
!3482 = !DILocation(line: 237, column: 27, scope: !3474)
!3483 = !DILocation(line: 237, column: 41, scope: !3474)
!3484 = !DILocation(line: 237, column: 33, scope: !3474)
!3485 = !DILocation(line: 237, column: 3, scope: !3474)
!3486 = !DILocation(line: 240, column: 31, scope: !3474)
!3487 = !DILocation(line: 241, column: 5, scope: !3474)
!3488 = !DILocation(line: 242, column: 16, scope: !3474)
!3489 = !DILocation(line: 240, column: 3, scope: !3474)
!3490 = !DILocation(line: 228, column: 37, scope: !3475)
!3491 = !DILocation(line: 228, column: 21, scope: !3475)
!3492 = distinct !{!3492, !3477, !3493}
!3493 = !DILocation(line: 244, column: 2, scope: !3472)
!3494 = distinct !DISubprogram(name: "k_thread_create", scope: !3438, file: !3438, line: 24, type: !3495, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3497)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !3442}
!3497 = !{!3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507}
!3498 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3494, file: !3438, line: 24, type: !125)
!3499 = !DILocalVariable(name: "stack", arg: 2, scope: !3494, file: !3438, line: 24, type: !245)
!3500 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3494, file: !3438, line: 24, type: !111)
!3501 = !DILocalVariable(name: "entry", arg: 4, scope: !3494, file: !3438, line: 24, type: !254)
!3502 = !DILocalVariable(name: "p1", arg: 5, scope: !3494, file: !3438, line: 24, type: !104)
!3503 = !DILocalVariable(name: "p2", arg: 6, scope: !3494, file: !3438, line: 24, type: !104)
!3504 = !DILocalVariable(name: "p3", arg: 7, scope: !3494, file: !3438, line: 24, type: !104)
!3505 = !DILocalVariable(name: "prio", arg: 8, scope: !3494, file: !3438, line: 24, type: !105)
!3506 = !DILocalVariable(name: "options", arg: 9, scope: !3494, file: !3438, line: 24, type: !113)
!3507 = !DILocalVariable(name: "delay", arg: 10, scope: !3494, file: !3438, line: 24, type: !3442)
!3508 = !DILocation(line: 0, scope: !3494)
!3509 = !DILocation(line: 49, column: 2, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3494, file: !3438, line: 49, column: 2)
!3511 = !{i64 2154850957}
!3512 = !DILocation(line: 50, column: 9, scope: !3494)
!3513 = !DILocation(line: 50, column: 2, scope: !3494)
!3514 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3515)
!3515 = !{!3516, !3517, !3518, !3519, !3520, !3521, !3523, !3524, !3528}
!3516 = !DILocalVariable(name: "p1", arg: 1, scope: !3514, file: !120, line: 177, type: !104)
!3517 = !DILocalVariable(name: "p2", arg: 2, scope: !3514, file: !120, line: 177, type: !104)
!3518 = !DILocalVariable(name: "p3", arg: 3, scope: !3514, file: !120, line: 177, type: !104)
!3519 = !DILocalVariable(name: "id", scope: !3514, file: !120, line: 181, type: !105)
!3520 = !DILocalVariable(name: "m", scope: !3514, file: !120, line: 182, type: !303)
!3521 = !DILocalVariable(name: "ret", scope: !3522, file: !120, line: 188, type: !105)
!3522 = distinct !DILexicalBlock(scope: !3514, file: !120, line: 187, column: 15)
!3523 = !DILocalVariable(name: "start", scope: !3522, file: !120, line: 189, type: !113)
!3524 = !DILocalVariable(name: "i", scope: !3525, file: !120, line: 202, type: !3527)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !120, line: 202, column: 4)
!3526 = distinct !DILexicalBlock(scope: !3522, file: !120, line: 201, column: 49)
!3527 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3528 = !DILocalVariable(name: "dur", scope: !3522, file: !120, line: 206, type: !113)
!3529 = !DILocation(line: 0, scope: !3514)
!3530 = !DILocation(line: 181, column: 11, scope: !3514)
!3531 = !DILocation(line: 182, column: 2, scope: !3514)
!3532 = !DILocation(line: 182, column: 13, scope: !3514)
!3533 = !DILocation(line: 184, column: 2, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !120, line: 184, column: 2)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !120, line: 184, column: 2)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !120, line: 184, column: 2)
!3537 = distinct !DILexicalBlock(scope: !3514, file: !120, line: 184, column: 2)
!3538 = !DILocation(line: 188, column: 13, scope: !3522)
!3539 = !DILocation(line: 0, scope: !3522)
!3540 = !DILocation(line: 189, column: 20, scope: !3522)
!3541 = !DILocation(line: 191, column: 3, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !120, line: 191, column: 3)
!3543 = distinct !DILexicalBlock(scope: !3522, file: !120, line: 191, column: 3)
!3544 = !DILocation(line: 191, column: 3, scope: !3543)
!3545 = !DILocation(line: 201, column: 10, scope: !3522)
!3546 = !DILocation(line: 201, column: 27, scope: !3522)
!3547 = !DILocation(line: 201, column: 39, scope: !3522)
!3548 = !DILocation(line: 201, column: 35, scope: !3522)
!3549 = !DILocation(line: 201, column: 3, scope: !3522)
!3550 = !DILocation(line: 191, column: 3, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3542, file: !120, line: 191, column: 3)
!3552 = !DILocation(line: 202, column: 9, scope: !3525)
!3553 = !DILocation(line: 202, column: 22, scope: !3525)
!3554 = !DILocation(line: 202, column: 29, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3525, file: !120, line: 202, column: 4)
!3556 = !DILocation(line: 202, column: 31, scope: !3555)
!3557 = !DILocation(line: 202, column: 4, scope: !3525)
!3558 = !DILocation(line: 202, column: 4, scope: !3555)
!3559 = distinct !{!3559, !3549, !3560}
!3560 = !DILocation(line: 204, column: 3, scope: !3522)
!3561 = !DILocation(line: 202, column: 39, scope: !3555)
!3562 = distinct !{!3562, !3557, !3563}
!3563 = !DILocation(line: 203, column: 4, scope: !3525)
!3564 = !DILocation(line: 206, column: 18, scope: !3522)
!3565 = !DILocation(line: 206, column: 35, scope: !3522)
!3566 = !DILocation(line: 216, column: 3, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !120, line: 216, column: 3)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !120, line: 216, column: 3)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !120, line: 216, column: 3)
!3570 = distinct !DILexicalBlock(scope: !3522, file: !120, line: 216, column: 3)
!3571 = !DILocation(line: 222, column: 34, scope: !3522)
!3572 = !DILocation(line: 222, column: 30, scope: !3522)
!3573 = !DILocation(line: 222, column: 3, scope: !3522)
!3574 = distinct !{!3574, !3575, !3576}
!3575 = !DILocation(line: 187, column: 2, scope: !3514)
!3576 = !DILocation(line: 223, column: 2, scope: !3514)
!3577 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3578, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!274}
!3580 = !DILocation(line: 535, column: 9, scope: !3577)
!3581 = !DILocation(line: 535, column: 2, scope: !3577)
!3582 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3438, file: !3438, line: 258, type: !3583, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3585)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!105, !274}
!3585 = !{!3586}
!3586 = !DILocalVariable(name: "thread", arg: 1, scope: !3582, file: !3438, line: 258, type: !274)
!3587 = !DILocation(line: 0, scope: !3582)
!3588 = !DILocation(line: 266, column: 2, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3582, file: !3438, line: 266, column: 2)
!3590 = !{i64 2154851841}
!3591 = !DILocation(line: 267, column: 9, scope: !3582)
!3592 = !DILocation(line: 267, column: 2, scope: !3582)
!3593 = distinct !DISubprogram(name: "k_msgq_get", scope: !3438, file: !3438, line: 1147, type: !3594, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!105, !3441, !104, !3442}
!3596 = !{!3597, !3598, !3599}
!3597 = !DILocalVariable(name: "msgq", arg: 1, scope: !3593, file: !3438, line: 1147, type: !3441)
!3598 = !DILocalVariable(name: "data", arg: 2, scope: !3593, file: !3438, line: 1147, type: !104)
!3599 = !DILocalVariable(name: "timeout", arg: 3, scope: !3593, file: !3438, line: 1147, type: !3442)
!3600 = !DILocation(line: 0, scope: !3593)
!3601 = !DILocation(line: 1157, column: 2, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3593, file: !3438, line: 1157, column: 2)
!3603 = !{i64 2154855413}
!3604 = !DILocation(line: 1158, column: 9, scope: !3593)
!3605 = !DILocation(line: 1158, column: 2, scope: !3593)
!3606 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3607, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3610)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{null, !3609, !113}
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!3610 = !{!3611, !3612, !3613, !3614, !3615, !3618, !3619, !3620, !3621, !3622}
!3611 = !DILocalVariable(name: "m", arg: 1, scope: !3606, file: !120, line: 111, type: !3609)
!3612 = !DILocalVariable(name: "latency", arg: 2, scope: !3606, file: !120, line: 111, type: !113)
!3613 = !DILocalVariable(name: "t", scope: !3606, file: !120, line: 129, type: !105)
!3614 = !DILocalVariable(name: "lidx", scope: !3606, file: !120, line: 130, type: !105)
!3615 = !DILocalVariable(name: "hi", scope: !3616, file: !120, line: 145, type: !113)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !120, line: 144, column: 32)
!3617 = distinct !DILexicalBlock(scope: !3606, file: !120, line: 144, column: 6)
!3618 = !DILocalVariable(name: "lo", scope: !3616, file: !120, line: 145, type: !113)
!3619 = !DILocalVariable(name: "mean", scope: !3616, file: !120, line: 145, type: !113)
!3620 = !DILocalVariable(name: "stdev", scope: !3616, file: !120, line: 145, type: !113)
!3621 = !DILocalVariable(name: "ret", scope: !3616, file: !120, line: 145, type: !113)
!3622 = !DILocalVariable(name: "i", scope: !3623, file: !120, line: 159, type: !105)
!3623 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 159, column: 3)
!3624 = !DILocation(line: 0, scope: !3606)
!3625 = !DILocation(line: 125, column: 9, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3606, file: !120, line: 125, column: 6)
!3627 = !DILocation(line: 125, column: 13, scope: !3626)
!3628 = !DILocation(line: 125, column: 6, scope: !3606)
!3629 = !DILocation(line: 129, column: 13, scope: !3606)
!3630 = !DILocation(line: 130, column: 30, scope: !3606)
!3631 = !DILocation(line: 130, column: 34, scope: !3606)
!3632 = !DILocation(line: 132, column: 11, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3606, file: !120, line: 132, column: 6)
!3634 = !DILocation(line: 132, column: 6, scope: !3606)
!3635 = !DILocation(line: 133, column: 3, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3633, file: !120, line: 132, column: 53)
!3637 = !DILocation(line: 133, column: 36, scope: !3636)
!3638 = !DILocation(line: 134, column: 2, scope: !3636)
!3639 = !DILocation(line: 136, column: 57, scope: !3606)
!3640 = !DILocation(line: 136, column: 23, scope: !3606)
!3641 = !DILocation(line: 136, column: 2, scope: !3606)
!3642 = !DILocation(line: 136, column: 52, scope: !3606)
!3643 = !DILocation(line: 144, column: 9, scope: !3617)
!3644 = !DILocation(line: 144, column: 13, scope: !3617)
!3645 = !DILocation(line: 144, column: 6, scope: !3606)
!3646 = !DILocation(line: 145, column: 3, scope: !3616)
!3647 = !DILocation(line: 147, column: 9, scope: !3616)
!3648 = !DILocation(line: 0, scope: !3616)
!3649 = !DILocation(line: 148, column: 3, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !120, line: 148, column: 3)
!3651 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 148, column: 3)
!3652 = !DILocation(line: 148, column: 3, scope: !3651)
!3653 = !DILocation(line: 148, column: 3, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3650, file: !120, line: 148, column: 3)
!3655 = !DILocation(line: 149, column: 3, scope: !3616)
!3656 = !DILocation(line: 151, column: 42, scope: !3616)
!3657 = !DILocation(line: 151, column: 3, scope: !3616)
!3658 = !DILocation(line: 154, column: 3, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !120, line: 154, column: 3)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !120, line: 154, column: 3)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !120, line: 154, column: 3)
!3662 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 154, column: 3)
!3663 = !DILocation(line: 155, column: 3, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !120, line: 155, column: 3)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !120, line: 155, column: 3)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !120, line: 155, column: 3)
!3667 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 155, column: 3)
!3668 = !DILocation(line: 156, column: 3, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !120, line: 156, column: 3)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !120, line: 156, column: 3)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !120, line: 156, column: 3)
!3672 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 156, column: 3)
!3673 = !DILocation(line: 0, scope: !3623)
!3674 = !DILocation(line: 159, column: 3, scope: !3623)
!3675 = !DILocation(line: 173, column: 3, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !120, line: 173, column: 3)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !120, line: 173, column: 3)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !120, line: 173, column: 3)
!3679 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 173, column: 3)
!3680 = !DILocation(line: 174, column: 2, scope: !3617)
!3681 = !DILocation(line: 174, column: 2, scope: !3616)
!3682 = !DILocation(line: 160, column: 25, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !120, line: 160, column: 8)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !120, line: 159, column: 41)
!3685 = distinct !DILexicalBlock(scope: !3623, file: !120, line: 159, column: 3)
!3686 = !DILocation(line: 160, column: 30, scope: !3683)
!3687 = !DILocation(line: 160, column: 8, scope: !3684)
!3688 = !DILocation(line: 161, column: 5, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !120, line: 161, column: 5)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !120, line: 161, column: 5)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !120, line: 161, column: 5)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !120, line: 161, column: 5)
!3693 = distinct !DILexicalBlock(scope: !3683, file: !120, line: 160, column: 36)
!3694 = !DILocation(line: 162, column: 5, scope: !3693)
!3695 = !DILocation(line: 165, column: 15, scope: !3684)
!3696 = !DILocation(line: 165, column: 4, scope: !3684)
!3697 = !DILocation(line: 169, column: 4, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !120, line: 169, column: 4)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !120, line: 169, column: 4)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !120, line: 169, column: 4)
!3701 = distinct !DILexicalBlock(scope: !3684, file: !120, line: 169, column: 4)
!3702 = !DILocation(line: 171, column: 3, scope: !3684)
!3703 = !DILocation(line: 159, column: 37, scope: !3685)
!3704 = !DILocation(line: 159, column: 21, scope: !3685)
!3705 = distinct !{!3705, !3674, !3706}
!3706 = !DILocation(line: 171, column: 3, scope: !3623)
!3707 = !DILocation(line: 175, column: 1, scope: !3606)
!3708 = distinct !DISubprogram(name: "atomic_inc", scope: !3709, file: !3709, line: 123, type: !3710, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3714)
!3709 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!3712, !3713}
!3712 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!3714 = !{!3715}
!3715 = !DILocalVariable(name: "target", arg: 1, scope: !3708, file: !3709, line: 123, type: !3713)
!3716 = !DILocation(line: 0, scope: !3708)
!3717 = !DILocation(line: 125, column: 9, scope: !3708)
!3718 = !DILocation(line: 125, column: 2, scope: !3708)
!3719 = distinct !DISubprogram(name: "k_sem_take", scope: !3438, file: !3438, line: 1044, type: !3720, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3723)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!105, !3722, !3442}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!3723 = !{!3724, !3725}
!3724 = !DILocalVariable(name: "sem", arg: 1, scope: !3719, file: !3438, line: 1044, type: !3722)
!3725 = !DILocalVariable(name: "timeout", arg: 2, scope: !3719, file: !3438, line: 1044, type: !3442)
!3726 = !DILocation(line: 0, scope: !3719)
!3727 = !DILocation(line: 1053, column: 2, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3719, file: !3438, line: 1053, column: 2)
!3729 = !{i64 2154855005}
!3730 = !DILocation(line: 1054, column: 9, scope: !3719)
!3731 = !DILocation(line: 1054, column: 2, scope: !3719)
!3732 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3733, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!116, !116}
!3735 = !{!3736}
!3736 = !DILocalVariable(name: "ms", arg: 1, scope: !3732, file: !122, line: 439, type: !116)
!3737 = !DILocation(line: 0, scope: !3732)
!3738 = !DILocation(line: 441, column: 9, scope: !3732)
!3739 = !DILocation(line: 441, column: 2, scope: !3732)
!3740 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3741, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3745)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{null, !3743, !113, !1027, !1027, !1027, !1027}
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 32)
!3744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3745 = !{!3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3756, !3758}
!3746 = !DILocalVariable(name: "array", arg: 1, scope: !3740, file: !120, line: 87, type: !3743)
!3747 = !DILocalVariable(name: "n", arg: 2, scope: !3740, file: !120, line: 87, type: !113)
!3748 = !DILocalVariable(name: "lo", arg: 3, scope: !3740, file: !120, line: 88, type: !1027)
!3749 = !DILocalVariable(name: "hi", arg: 4, scope: !3740, file: !120, line: 88, type: !1027)
!3750 = !DILocalVariable(name: "mean", arg: 5, scope: !3740, file: !120, line: 88, type: !1027)
!3751 = !DILocalVariable(name: "stdev", arg: 6, scope: !3740, file: !120, line: 88, type: !1027)
!3752 = !DILocalVariable(name: "tot", scope: !3740, file: !120, line: 90, type: !114)
!3753 = !DILocalVariable(name: "totsq", scope: !3740, file: !120, line: 90, type: !114)
!3754 = !DILocalVariable(name: "i", scope: !3755, file: !120, line: 94, type: !105)
!3755 = distinct !DILexicalBlock(scope: !3740, file: !120, line: 94, column: 2)
!3756 = !DILocalVariable(name: "i", scope: !3757, file: !120, line: 102, type: !105)
!3757 = distinct !DILexicalBlock(scope: !3740, file: !120, line: 102, column: 2)
!3758 = !DILocalVariable(name: "d", scope: !3759, file: !120, line: 103, type: !109)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !120, line: 102, column: 30)
!3760 = distinct !DILexicalBlock(scope: !3757, file: !120, line: 102, column: 2)
!3761 = !DILocation(line: 0, scope: !3740)
!3762 = !DILocation(line: 92, column: 6, scope: !3740)
!3763 = !DILocation(line: 93, column: 6, scope: !3740)
!3764 = !DILocation(line: 0, scope: !3755)
!3765 = !DILocation(line: 94, column: 20, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3755, file: !120, line: 94, column: 2)
!3767 = !DILocation(line: 94, column: 2, scope: !3755)
!3768 = !DILocation(line: 100, column: 31, scope: !3740)
!3769 = !DILocation(line: 100, column: 37, scope: !3740)
!3770 = !DILocation(line: 100, column: 10, scope: !3740)
!3771 = !DILocation(line: 100, column: 8, scope: !3740)
!3772 = !DILocation(line: 0, scope: !3757)
!3773 = !DILocation(line: 102, column: 2, scope: !3757)
!3774 = !DILocation(line: 100, column: 28, scope: !3740)
!3775 = !DILocation(line: 100, column: 26, scope: !3740)
!3776 = !DILocation(line: 100, column: 39, scope: !3740)
!3777 = !DILocation(line: 95, column: 9, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3766, file: !120, line: 94, column: 30)
!3779 = !DILocation(line: 95, column: 7, scope: !3778)
!3780 = !DILocation(line: 96, column: 9, scope: !3778)
!3781 = !DILocation(line: 96, column: 7, scope: !3778)
!3782 = !DILocation(line: 97, column: 10, scope: !3778)
!3783 = !DILocation(line: 97, column: 7, scope: !3778)
!3784 = !DILocation(line: 94, column: 26, scope: !3766)
!3785 = distinct !{!3785, !3767, !3786}
!3786 = !DILocation(line: 98, column: 2, scope: !3755)
!3787 = !DILocation(line: 108, column: 24, scope: !3740)
!3788 = !DILocation(line: 108, column: 35, scope: !3740)
!3789 = !DILocation(line: 108, column: 11, scope: !3740)
!3790 = !DILocation(line: 108, column: 9, scope: !3740)
!3791 = !DILocation(line: 109, column: 1, scope: !3740)
!3792 = !DILocation(line: 103, column: 26, scope: !3759)
!3793 = !DILocation(line: 103, column: 35, scope: !3759)
!3794 = !DILocation(line: 103, column: 15, scope: !3759)
!3795 = !DILocation(line: 0, scope: !3759)
!3796 = !DILocation(line: 105, column: 14, scope: !3759)
!3797 = !DILocation(line: 105, column: 9, scope: !3759)
!3798 = !DILocation(line: 102, column: 26, scope: !3760)
!3799 = !DILocation(line: 102, column: 20, scope: !3760)
!3800 = distinct !{!3800, !3773, !3801}
!3801 = !DILocation(line: 106, column: 2, scope: !3757)
!3802 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3803, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3805)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!113, !114}
!3805 = !{!3806, !3807, !3810}
!3806 = !DILocalVariable(name: "n", arg: 1, scope: !3802, file: !120, line: 76, type: !114)
!3807 = !DILocalVariable(name: "lo", scope: !3808, file: !120, line: 79, type: !114)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !120, line: 78, column: 13)
!3809 = distinct !DILexicalBlock(scope: !3802, file: !120, line: 78, column: 6)
!3810 = !DILocalVariable(name: "hi", scope: !3808, file: !120, line: 80, type: !114)
!3811 = !DILocation(line: 0, scope: !3802)
!3812 = !DILocation(line: 78, column: 8, scope: !3809)
!3813 = !DILocation(line: 78, column: 6, scope: !3802)
!3814 = !DILocation(line: 85, column: 1, scope: !3802)
!3815 = !DILocation(line: 79, column: 25, scope: !3808)
!3816 = !DILocation(line: 79, column: 17, scope: !3808)
!3817 = !DILocation(line: 79, column: 31, scope: !3808)
!3818 = !DILocation(line: 0, scope: !3808)
!3819 = !DILocation(line: 80, column: 20, scope: !3808)
!3820 = !DILocation(line: 82, column: 26, scope: !3808)
!3821 = !DILocation(line: 82, column: 32, scope: !3808)
!3822 = !DILocation(line: 82, column: 21, scope: !3808)
!3823 = distinct !DISubprogram(name: "k_sleep", scope: !3438, file: !3438, line: 91, type: !3824, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3826)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!116, !3442}
!3826 = !{!3827}
!3827 = !DILocalVariable(name: "timeout", arg: 1, scope: !3823, file: !3438, line: 91, type: !3442)
!3828 = !DILocation(line: 0, scope: !3823)
!3829 = !DILocation(line: 99, column: 2, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3823, file: !3438, line: 99, column: 2)
!3831 = !{i64 2154851161}
!3832 = !DILocation(line: 100, column: 9, scope: !3823)
!3833 = !DILocation(line: 100, column: 2, scope: !3823)
!3834 = distinct !DISubprogram(name: "atomic_add", scope: !3709, file: !3709, line: 86, type: !3835, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3837)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{!3712, !3713, !3712}
!3837 = !{!3838, !3839}
!3838 = !DILocalVariable(name: "target", arg: 1, scope: !3834, file: !3709, line: 86, type: !3713)
!3839 = !DILocalVariable(name: "value", arg: 2, scope: !3834, file: !3709, line: 86, type: !3712)
!3840 = !DILocation(line: 0, scope: !3834)
!3841 = !DILocation(line: 88, column: 9, scope: !3834)
!3842 = !DILocation(line: 88, column: 2, scope: !3834)
!3843 = distinct !DISubprogram(name: "z_current_get", scope: !3438, file: !3438, line: 173, type: !3578, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3844 = !DILocation(line: 180, column: 2, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3843, file: !3438, line: 180, column: 2)
!3846 = !{i64 2154851501}
!3847 = !DILocation(line: 181, column: 9, scope: !3843)
!3848 = !DILocation(line: 181, column: 2, scope: !3843)
!3849 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3850)
!3850 = !{!3851, !3852, !3853}
!3851 = !DILocalVariable(name: "cyc_per_tick", scope: !3849, file: !360, line: 90, type: !114)
!3852 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3849, file: !360, line: 91, type: !114)
!3853 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3849, file: !360, line: 92, type: !114)
!3854 = !DILocation(line: 0, scope: !3849)
!3855 = !DILocation(line: 94, column: 15, scope: !3849)
!3856 = !DILocation(line: 96, column: 2, scope: !3849)
!3857 = !DILocation(line: 97, column: 1, scope: !3849)
!3858 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3859)
!3859 = !{!3860, !3861, !3862, !3870}
!3860 = !DILocalVariable(name: "t", arg: 1, scope: !3858, file: !360, line: 54, type: !383)
!3861 = !DILocalVariable(name: "timestamp", scope: !3858, file: !360, line: 57, type: !113)
!3862 = !DILocalVariable(name: "m", scope: !3858, file: !360, line: 58, type: !3863)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3864)
!3864 = !{!3865, !3866, !3867, !3868, !3869}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3863, file: !304, line: 46, baseType: !113, size: 32)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3863, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3863, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3863, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3863, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3870 = !DILocalVariable(name: "ret", scope: !3858, file: !360, line: 65, type: !105)
!3871 = !DILocation(line: 0, scope: !3858)
!3872 = !DILocation(line: 56, column: 2, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !360, line: 56, column: 2)
!3874 = distinct !DILexicalBlock(scope: !3858, file: !360, line: 56, column: 2)
!3875 = !DILocation(line: 56, column: 2, scope: !3874)
!3876 = !DILocation(line: 56, column: 2, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3873, file: !360, line: 56, column: 2)
!3878 = !DILocation(line: 57, column: 23, scope: !3858)
!3879 = !DILocation(line: 58, column: 2, scope: !3858)
!3880 = !DILocation(line: 58, column: 13, scope: !3858)
!3881 = !DILocation(line: 60, column: 17, scope: !3858)
!3882 = !DILocation(line: 60, column: 4, scope: !3858)
!3883 = !DILocation(line: 60, column: 8, scope: !3858)
!3884 = !DILocation(line: 61, column: 4, scope: !3858)
!3885 = !DILocation(line: 61, column: 14, scope: !3858)
!3886 = !DILocation(line: 62, column: 13, scope: !3858)
!3887 = !DILocation(line: 62, column: 22, scope: !3858)
!3888 = !DILocation(line: 62, column: 4, scope: !3858)
!3889 = !DILocation(line: 62, column: 11, scope: !3858)
!3890 = !DILocation(line: 63, column: 15, scope: !3858)
!3891 = !DILocation(line: 63, column: 26, scope: !3858)
!3892 = !DILocation(line: 63, column: 24, scope: !3858)
!3893 = !DILocation(line: 63, column: 4, scope: !3858)
!3894 = !DILocation(line: 63, column: 13, scope: !3858)
!3895 = !DILocation(line: 65, column: 12, scope: !3858)
!3896 = !DILocation(line: 67, column: 10, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3858, file: !360, line: 67, column: 6)
!3898 = !DILocation(line: 67, column: 6, scope: !3858)
!3899 = !DILocation(line: 68, column: 3, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3897, file: !360, line: 67, column: 16)
!3901 = !DILocation(line: 69, column: 2, scope: !3900)
!3902 = !DILocation(line: 71, column: 8, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3858, file: !360, line: 71, column: 6)
!3904 = !DILocation(line: 71, column: 12, scope: !3903)
!3905 = !DILocation(line: 71, column: 6, scope: !3858)
!3906 = !DILocation(line: 72, column: 3, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3903, file: !360, line: 71, column: 26)
!3908 = !DILocation(line: 73, column: 2, scope: !3907)
!3909 = !DILocation(line: 74, column: 1, scope: !3858)
!3910 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3911 = !DILocation(line: 1677, column: 9, scope: !3910)
!3912 = !DILocation(line: 1677, column: 2, scope: !3910)
!3913 = !DILocation(line: 40, column: 7, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3915 = !DILocation(line: 40, column: 6, scope: !394)
!3916 = !DILocation(line: 41, column: 22, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3914, file: !360, line: 40, column: 14)
!3918 = !DILocation(line: 41, column: 12, scope: !3917)
!3919 = !DILocation(line: 41, column: 40, scope: !3917)
!3920 = !DILocation(line: 42, column: 2, scope: !3917)
!3921 = !DILocation(line: 45, column: 10, scope: !394)
!3922 = !DILocation(line: 45, column: 16, scope: !394)
!3923 = !DILocation(line: 45, column: 41, scope: !394)
!3924 = !DILocation(line: 45, column: 8, scope: !394)
!3925 = !DILocation(line: 46, column: 26, scope: !394)
!3926 = !DILocation(line: 46, column: 9, scope: !394)
!3927 = !DILocation(line: 46, column: 2, scope: !394)
!3928 = distinct !DISubprogram(name: "k_msgq_put", scope: !3438, file: !3438, line: 1129, type: !3929, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3936)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!105, !3931, !13, !3932}
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3932 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3933)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3934)
!3934 = !{!3935}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3933, file: !108, line: 66, baseType: !107, size: 64)
!3936 = !{!3937, !3938, !3939}
!3937 = !DILocalVariable(name: "msgq", arg: 1, scope: !3928, file: !3438, line: 1129, type: !3931)
!3938 = !DILocalVariable(name: "data", arg: 2, scope: !3928, file: !3438, line: 1129, type: !13)
!3939 = !DILocalVariable(name: "timeout", arg: 3, scope: !3928, file: !3438, line: 1129, type: !3932)
!3940 = !DILocation(line: 0, scope: !3928)
!3941 = !DILocation(line: 1139, column: 2, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3928, file: !3438, line: 1139, column: 2)
!3943 = !{i64 2154853608}
!3944 = !DILocation(line: 1140, column: 9, scope: !3928)
!3945 = !DILocation(line: 1140, column: 2, scope: !3928)
!3946 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3947)
!3947 = !{!3948}
!3948 = !DILocalVariable(name: "ticks", scope: !3946, file: !360, line: 78, type: !113)
!3949 = !DILocation(line: 78, column: 19, scope: !3946)
!3950 = !DILocation(line: 78, column: 28, scope: !3946)
!3951 = !DILocation(line: 0, scope: !3946)
!3952 = !DILocation(line: 80, column: 45, scope: !3946)
!3953 = !DILocation(line: 80, column: 2, scope: !3946)
!3954 = !DILocation(line: 81, column: 1, scope: !3946)
!3955 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3466, file: !3466, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3956 = !DILocation(line: 26, column: 9, scope: !3955)
!3957 = !DILocation(line: 26, column: 2, scope: !3955)
!3958 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !3959, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3962)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{null, !3961}
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 32)
!3962 = !{!3963, !3964}
!3963 = !DILocalVariable(name: "m", arg: 1, scope: !3958, file: !360, line: 99, type: !3961)
!3964 = !DILocalVariable(name: "ret", scope: !3958, file: !360, line: 101, type: !105)
!3965 = !DILocation(line: 0, scope: !3958)
!3966 = !DILocation(line: 101, column: 33, scope: !3958)
!3967 = !DILocation(line: 101, column: 12, scope: !3958)
!3968 = !DILocation(line: 103, column: 2, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !360, line: 103, column: 2)
!3970 = distinct !DILexicalBlock(scope: !3958, file: !360, line: 103, column: 2)
!3971 = !DILocation(line: 103, column: 2, scope: !3970)
!3972 = !DILocation(line: 103, column: 2, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !360, line: 103, column: 2)
!3974 = !DILocation(line: 104, column: 1, scope: !3958)
!3975 = distinct !DISubprogram(name: "k_msgq_get", scope: !3438, file: !3438, line: 1147, type: !3976, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3978)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!105, !3931, !104, !3932}
!3978 = !{!3979, !3980, !3981}
!3979 = !DILocalVariable(name: "msgq", arg: 1, scope: !3975, file: !3438, line: 1147, type: !3931)
!3980 = !DILocalVariable(name: "data", arg: 2, scope: !3975, file: !3438, line: 1147, type: !104)
!3981 = !DILocalVariable(name: "timeout", arg: 3, scope: !3975, file: !3438, line: 1147, type: !3932)
!3982 = !DILocation(line: 0, scope: !3975)
!3983 = !DILocation(line: 1157, column: 2, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3975, file: !3438, line: 1157, column: 2)
!3985 = !{i64 2154853676}
!3986 = !DILocation(line: 1158, column: 9, scope: !3975)
!3987 = !DILocation(line: 1158, column: 2, scope: !3975)
!3988 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !3989, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3998)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!105, !104, !111, !113, !269, !3991}
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3992, line: 99, baseType: !3993)
!3992 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3992, line: 40, baseType: !3994)
!3994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !3995)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3996)
!3996 = !{!3997}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3995, file: !434, line: 18, baseType: !104, size: 32)
!3998 = !{!3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4034, !4043, !4046, !4047, !4050, !4053, !4056, !4059, !4065}
!3999 = !DILocalVariable(name: "packaged", arg: 1, scope: !3988, file: !434, line: 233, type: !104)
!4000 = !DILocalVariable(name: "len", arg: 2, scope: !3988, file: !434, line: 233, type: !111)
!4001 = !DILocalVariable(name: "flags", arg: 3, scope: !3988, file: !434, line: 233, type: !113)
!4002 = !DILocalVariable(name: "fmt", arg: 4, scope: !3988, file: !434, line: 234, type: !269)
!4003 = !DILocalVariable(name: "ap", arg: 5, scope: !3988, file: !434, line: 234, type: !3991)
!4004 = !DILocalVariable(name: "buf0", scope: !3988, file: !434, line: 247, type: !432)
!4005 = !DILocalVariable(name: "buf", scope: !3988, file: !434, line: 248, type: !432)
!4006 = !DILocalVariable(name: "size", scope: !3988, file: !434, line: 249, type: !32)
!4007 = !DILocalVariable(name: "align", scope: !3988, file: !434, line: 250, type: !32)
!4008 = !DILocalVariable(name: "str_ptr_pos", scope: !3988, file: !434, line: 251, type: !4009)
!4009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!4010 = !DILocalVariable(name: "str_ptr_arg", scope: !3988, file: !434, line: 252, type: !4009)
!4011 = !DILocalVariable(name: "s_idx", scope: !3988, file: !434, line: 253, type: !32)
!4012 = !DILocalVariable(name: "s_rw_cnt", scope: !3988, file: !434, line: 254, type: !32)
!4013 = !DILocalVariable(name: "s_ro_cnt", scope: !3988, file: !434, line: 255, type: !32)
!4014 = !DILocalVariable(name: "arg_idx", scope: !3988, file: !434, line: 256, type: !105)
!4015 = !DILocalVariable(name: "i", scope: !3988, file: !434, line: 257, type: !32)
!4016 = !DILocalVariable(name: "s", scope: !3988, file: !434, line: 258, type: !269)
!4017 = !DILocalVariable(name: "parsing", scope: !3988, file: !434, line: 259, type: !492)
!4018 = !DILocalVariable(name: "rws_pos_en", scope: !3988, file: !434, line: 263, type: !492)
!4019 = !DILocalVariable(name: "fros_cnt", scope: !3988, file: !434, line: 268, type: !105)
!4020 = !DILocalVariable(name: "is_str_arg", scope: !3988, file: !434, line: 269, type: !492)
!4021 = !DILocalVariable(name: "pkg_hdr", scope: !3988, file: !434, line: 270, type: !4022)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 32)
!4023 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4024, line: 78, size: 32, elements: !4025)
!4024 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4025 = !{!4026, !4033}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4023, file: !4024, line: 80, baseType: !4027, size: 32)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4024, line: 45, size: 32, elements: !4028)
!4028 = !{!4029, !4030, !4031, !4032}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4027, file: !4024, line: 47, baseType: !169, size: 8)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4027, file: !4024, line: 50, baseType: !169, size: 8, offset: 8)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4027, file: !4024, line: 53, baseType: !169, size: 8, offset: 16)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4027, file: !4024, line: 56, baseType: !169, size: 8, offset: 24)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4023, file: !4024, line: 82, baseType: !104, size: 32)
!4034 = !DILocalVariable(name: "v", scope: !4035, file: !434, line: 567, type: !4039)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !434, line: 562, column: 14)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !434, line: 481, column: 18)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !434, line: 466, column: 3)
!4038 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 343, column: 15)
!4039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3988, file: !434, line: 567, size: 64, elements: !4040)
!4040 = !{!4041, !4042}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4039, file: !434, line: 567, baseType: !426, size: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4039, file: !434, line: 567, baseType: !424, size: 64)
!4043 = !DILocalVariable(name: "is_ro", scope: !4044, file: !434, line: 620, type: !492)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !434, line: 613, column: 19)
!4045 = distinct !DILexicalBlock(scope: !4038, file: !434, line: 613, column: 7)
!4046 = !DILocalVariable(name: "do_ro", scope: !4044, file: !434, line: 621, type: !492)
!4047 = !DILocalVariable(name: "s_ptr_idx", scope: !4048, file: !434, line: 626, type: !113)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !434, line: 625, column: 11)
!4049 = distinct !DILexicalBlock(scope: !4044, file: !434, line: 623, column: 8)
!4050 = !DILocalVariable(name: "v", scope: !4051, file: !434, line: 684, type: !105)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !434, line: 683, column: 35)
!4052 = distinct !DILexicalBlock(scope: !4045, file: !434, line: 683, column: 14)
!4053 = !DILocalVariable(name: "v", scope: !4054, file: !434, line: 691, type: !106)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !434, line: 690, column: 36)
!4055 = distinct !DILexicalBlock(scope: !4052, file: !434, line: 690, column: 14)
!4056 = !DILocalVariable(name: "v", scope: !4057, file: !434, line: 698, type: !110)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !434, line: 697, column: 41)
!4058 = distinct !DILexicalBlock(scope: !4055, file: !434, line: 697, column: 14)
!4059 = !DILocalVariable(name: "pos", scope: !4060, file: !434, line: 762, type: !169)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !434, line: 757, column: 31)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !434, line: 757, column: 3)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !434, line: 757, column: 3)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !434, line: 756, column: 16)
!4064 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 756, column: 6)
!4065 = !DILabel(scope: !4044, name: "process_string", file: !434, line: 615)
!4066 = !DILocation(line: 0, scope: !3988)
!4067 = !DILocation(line: 251, column: 2, scope: !3988)
!4068 = !DILocation(line: 251, column: 10, scope: !3988)
!4069 = !DILocation(line: 252, column: 2, scope: !3988)
!4070 = !DILocation(line: 252, column: 10, scope: !3988)
!4071 = !DILocation(line: 263, column: 29, scope: !3988)
!4072 = !DILocation(line: 263, column: 21, scope: !3988)
!4073 = !DILocation(line: 268, column: 21, scope: !3988)
!4074 = !DILocation(line: 268, column: 19, scope: !3988)
!4075 = !DILocation(line: 273, column: 6, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 273, column: 6)
!4077 = !DILocation(line: 273, column: 26, scope: !4076)
!4078 = !DILocation(line: 273, column: 6, scope: !3988)
!4079 = !DILocation(line: 297, column: 6, scope: !3988)
!4080 = !DILocation(line: 305, column: 11, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 305, column: 6)
!4082 = !DILocation(line: 305, column: 6, scope: !3988)
!4083 = !DILocation(line: 327, column: 19, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 327, column: 6)
!4085 = !DILocation(line: 327, column: 22, scope: !4084)
!4086 = !DILocation(line: 327, column: 33, scope: !4084)
!4087 = !DILocation(line: 327, column: 50, scope: !4084)
!4088 = !DILocation(line: 327, column: 6, scope: !3988)
!4089 = !DILocation(line: 338, column: 9, scope: !3988)
!4090 = !DILocation(line: 341, column: 2, scope: !3988)
!4091 = !DILocation(line: 472, column: 8, scope: !4037)
!4092 = !DILocation(line: 473, column: 14, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !434, line: 473, column: 9)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !434, line: 472, column: 18)
!4095 = distinct !DILexicalBlock(scope: !4037, file: !434, line: 472, column: 8)
!4096 = !DILocation(line: 473, column: 9, scope: !4094)
!4097 = !DILocation(line: 479, column: 5, scope: !4094)
!4098 = !DILocation(line: 468, column: 9, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4037, file: !434, line: 468, column: 8)
!4100 = !DILocation(line: 468, column: 8, scope: !4099)
!4101 = !DILocation(line: 468, column: 15, scope: !4099)
!4102 = !DILocation(line: 468, column: 8, scope: !4037)
!4103 = distinct !{!4103, !4104, !4105}
!4104 = !DILocation(line: 343, column: 2, scope: !3988)
!4105 = !DILocation(line: 712, column: 2, scope: !3988)
!4106 = !DILocation(line: 481, column: 4, scope: !4037)
!4107 = !DILocation(line: 484, column: 12, scope: !4036)
!4108 = !DILocation(line: 485, column: 5, scope: !4036)
!4109 = !DILocation(line: 505, column: 5, scope: !4036)
!4110 = !DILocation(line: 518, column: 5, scope: !4036)
!4111 = !DILocation(line: 523, column: 5, scope: !4036)
!4112 = !DILocation(line: 532, column: 9, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4036, file: !434, line: 532, column: 9)
!4114 = !DILocation(line: 532, column: 17, scope: !4113)
!4115 = !DILocation(line: 532, column: 9, scope: !4036)
!4116 = !DILocation(line: 533, column: 10, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !434, line: 533, column: 10)
!4118 = distinct !DILexicalBlock(scope: !4113, file: !434, line: 532, column: 25)
!4119 = !DILocation(line: 533, column: 18, scope: !4117)
!4120 = !DILocation(line: 0, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4035, file: !434, line: 569, column: 9)
!4122 = !DILocation(line: 0, scope: !4035)
!4123 = !DILocation(line: 579, column: 20, scope: !4035)
!4124 = !DILocation(line: 579, column: 11, scope: !4035)
!4125 = !DILocation(line: 580, column: 9, scope: !4035)
!4126 = !DILocation(line: 582, column: 21, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !434, line: 582, column: 10)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !434, line: 580, column: 23)
!4129 = distinct !DILexicalBlock(scope: !4035, file: !434, line: 580, column: 9)
!4130 = !DILocation(line: 582, column: 28, scope: !4127)
!4131 = !DILocation(line: 582, column: 10, scope: !4128)
!4132 = !DILocation(line: 0, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !434, line: 587, column: 17)
!4134 = distinct !DILexicalBlock(scope: !4128, file: !434, line: 585, column: 10)
!4135 = !DILocation(line: 593, column: 9, scope: !4035)
!4136 = !DILocation(line: 600, column: 5, scope: !4036)
!4137 = !DILocation(line: 605, column: 18, scope: !4038)
!4138 = !DILocation(line: 605, column: 9, scope: !4038)
!4139 = !DILocation(line: 608, column: 20, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4038, file: !434, line: 608, column: 7)
!4141 = !DILocation(line: 608, column: 23, scope: !4140)
!4142 = !DILocation(line: 608, column: 34, scope: !4140)
!4143 = !DILocation(line: 608, column: 41, scope: !4140)
!4144 = !DILocation(line: 608, column: 7, scope: !4038)
!4145 = !DILocation(line: 613, column: 7, scope: !4038)
!4146 = !DILocation(line: 614, column: 8, scope: !4044)
!4147 = !DILocation(line: 614, column: 4, scope: !4044)
!4148 = !DILocation(line: 256, column: 6, scope: !3988)
!4149 = !DILocation(line: 254, column: 15, scope: !3988)
!4150 = !DILocation(line: 320, column: 7, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4081, file: !434, line: 305, column: 20)
!4152 = !DILocation(line: 615, column: 1, scope: !4044)
!4153 = !DILocation(line: 616, column: 8, scope: !4044)
!4154 = !DILocation(line: 617, column: 5, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !434, line: 616, column: 22)
!4156 = distinct !DILexicalBlock(scope: !4044, file: !434, line: 616, column: 8)
!4157 = !DILocation(line: 617, column: 25, scope: !4155)
!4158 = !DILocation(line: 618, column: 4, scope: !4155)
!4159 = !DILocation(line: 620, column: 26, scope: !4044)
!4160 = !DILocation(line: 620, column: 29, scope: !4044)
!4161 = !DILocation(line: 620, column: 17, scope: !4044)
!4162 = !DILocation(line: 620, column: 43, scope: !4044)
!4163 = !DILocation(line: 0, scope: !4044)
!4164 = !DILocation(line: 623, column: 14, scope: !4049)
!4165 = !DILocation(line: 626, column: 26, scope: !4048)
!4166 = !DILocation(line: 626, column: 37, scope: !4048)
!4167 = !DILocation(line: 0, scope: !4048)
!4168 = !DILocation(line: 634, column: 15, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4048, file: !434, line: 634, column: 9)
!4170 = !DILocation(line: 635, column: 6, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !434, line: 635, column: 6)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !434, line: 635, column: 6)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !434, line: 635, column: 6)
!4174 = distinct !DILexicalBlock(scope: !4169, file: !434, line: 634, column: 44)
!4175 = !DILocation(line: 639, column: 15, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4048, file: !434, line: 639, column: 9)
!4177 = !DILocation(line: 639, column: 9, scope: !4048)
!4178 = !DILocation(line: 640, column: 6, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !434, line: 640, column: 6)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !434, line: 640, column: 6)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !434, line: 640, column: 6)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !434, line: 639, column: 43)
!4183 = !DILocation(line: 644, column: 9, scope: !4048)
!4184 = !DILocation(line: 649, column: 27, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !434, line: 644, column: 23)
!4186 = distinct !DILexicalBlock(scope: !4048, file: !434, line: 644, column: 9)
!4187 = !DILocation(line: 649, column: 6, scope: !4185)
!4188 = !DILocation(line: 649, column: 25, scope: !4185)
!4189 = !DILocation(line: 650, column: 27, scope: !4185)
!4190 = !DILocation(line: 650, column: 6, scope: !4185)
!4191 = !DILocation(line: 650, column: 25, scope: !4185)
!4192 = !DILocation(line: 651, column: 10, scope: !4185)
!4193 = !DILocation(line: 653, column: 26, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !434, line: 651, column: 17)
!4195 = distinct !DILexicalBlock(scope: !4185, file: !434, line: 651, column: 10)
!4196 = !DILocation(line: 654, column: 15, scope: !4194)
!4197 = !DILocation(line: 655, column: 6, scope: !4194)
!4198 = !DILocation(line: 656, column: 15, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4195, file: !434, line: 655, column: 13)
!4200 = !DILocation(line: 658, column: 16, scope: !4186)
!4201 = !DILocation(line: 663, column: 10, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !434, line: 658, column: 23)
!4203 = distinct !DILexicalBlock(scope: !4186, file: !434, line: 658, column: 16)
!4204 = !DILocation(line: 664, column: 5, scope: !4202)
!4205 = !DILocation(line: 664, column: 16, scope: !4203)
!4206 = !DILocation(line: 669, column: 10, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !434, line: 664, column: 28)
!4208 = distinct !DILexicalBlock(scope: !4203, file: !434, line: 664, column: 16)
!4209 = !DILocation(line: 670, column: 5, scope: !4207)
!4210 = !DILocation(line: 675, column: 13, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4208, file: !434, line: 670, column: 12)
!4212 = !DILocation(line: 675, column: 27, scope: !4211)
!4213 = !DILocation(line: 675, column: 10, scope: !4211)
!4214 = !DILocation(line: 678, column: 10, scope: !4048)
!4215 = !DILocation(line: 680, column: 8, scope: !4044)
!4216 = !DILocation(line: 683, column: 14, scope: !4045)
!4217 = !DILocation(line: 684, column: 12, scope: !4051)
!4218 = !DILocation(line: 0, scope: !4051)
!4219 = !DILocation(line: 686, column: 8, scope: !4051)
!4220 = !DILocation(line: 687, column: 5, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !434, line: 686, column: 22)
!4222 = distinct !DILexicalBlock(scope: !4051, file: !434, line: 686, column: 8)
!4223 = !DILocation(line: 687, column: 17, scope: !4221)
!4224 = !DILocation(line: 688, column: 4, scope: !4221)
!4225 = !DILocation(line: 698, column: 18, scope: !4057)
!4226 = !DILocation(line: 0, scope: !4057)
!4227 = !DILocation(line: 700, column: 8, scope: !4057)
!4228 = !DILocation(line: 704, column: 6, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !434, line: 703, column: 12)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !434, line: 701, column: 9)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !434, line: 700, column: 22)
!4232 = distinct !DILexicalBlock(scope: !4057, file: !434, line: 700, column: 8)
!4233 = !DILocation(line: 704, column: 24, scope: !4229)
!4234 = !DILocation(line: 706, column: 4, scope: !4231)
!4235 = !DILocation(line: 709, column: 4, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !434, line: 709, column: 4)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !434, line: 709, column: 4)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !434, line: 709, column: 4)
!4239 = distinct !DILexicalBlock(scope: !4058, file: !434, line: 708, column: 10)
!4240 = !DILocation(line: 0, scope: !4052)
!4241 = !DILocation(line: 0, scope: !4038)
!4242 = !DILocation(line: 720, column: 6, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 720, column: 6)
!4244 = !DILocation(line: 720, column: 17, scope: !4243)
!4245 = !DILocation(line: 720, column: 31, scope: !4243)
!4246 = !DILocation(line: 720, column: 6, scope: !3988)
!4247 = !DILocation(line: 721, column: 3, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4249, file: !434, line: 721, column: 3)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !434, line: 721, column: 3)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !434, line: 721, column: 3)
!4251 = distinct !DILexicalBlock(scope: !4243, file: !434, line: 720, column: 38)
!4252 = !DILocation(line: 729, column: 6, scope: !3988)
!4253 = !DILocation(line: 730, column: 21, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !434, line: 729, column: 20)
!4255 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 729, column: 6)
!4256 = !DILocation(line: 730, column: 27, scope: !4254)
!4257 = !DILocation(line: 730, column: 3, scope: !4254)
!4258 = !DILocation(line: 737, column: 22, scope: !3988)
!4259 = !DILocation(line: 737, column: 20, scope: !3988)
!4260 = !DILocation(line: 0, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 739, column: 6)
!4262 = !DILocation(line: 745, column: 17, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4261, file: !434, line: 743, column: 9)
!4264 = !DILocation(line: 745, column: 25, scope: !4263)
!4265 = !DILocation(line: 746, column: 17, scope: !4263)
!4266 = !DILocation(line: 746, column: 28, scope: !4263)
!4267 = !DILocation(line: 749, column: 29, scope: !3988)
!4268 = !DILocation(line: 749, column: 16, scope: !3988)
!4269 = !DILocation(line: 749, column: 27, scope: !3988)
!4270 = !DILocation(line: 756, column: 6, scope: !4064)
!4271 = !DILocation(line: 756, column: 6, scope: !3988)
!4272 = !DILocation(line: 757, column: 3, scope: !4062)
!4273 = !DILocation(line: 758, column: 10, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4060, file: !434, line: 758, column: 8)
!4275 = !DILocation(line: 758, column: 25, scope: !4274)
!4276 = !DILocation(line: 758, column: 8, scope: !4060)
!4277 = !DILocation(line: 0, scope: !4060)
!4278 = !DILocation(line: 765, column: 8, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4060, file: !434, line: 765, column: 8)
!4280 = !DILocation(line: 765, column: 19, scope: !4279)
!4281 = !DILocation(line: 765, column: 23, scope: !4279)
!4282 = !DILocation(line: 765, column: 8, scope: !4060)
!4283 = !DILocation(line: 762, column: 33, scope: !4060)
!4284 = !DILocation(line: 769, column: 8, scope: !4060)
!4285 = !DILocation(line: 769, column: 11, scope: !4060)
!4286 = !DILocation(line: 757, column: 27, scope: !4061)
!4287 = !DILocation(line: 757, column: 17, scope: !4061)
!4288 = distinct !{!4288, !4272, !4289}
!4289 = !DILocation(line: 770, column: 3, scope: !4062)
!4290 = !DILocation(line: 774, column: 16, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !434, line: 774, column: 2)
!4292 = distinct !DILexicalBlock(scope: !3988, file: !434, line: 774, column: 2)
!4293 = !DILocation(line: 774, column: 2, scope: !4292)
!4294 = !DILocation(line: 776, column: 16, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !434, line: 776, column: 7)
!4296 = distinct !DILexicalBlock(scope: !4291, file: !434, line: 774, column: 30)
!4297 = !DILocation(line: 776, column: 19, scope: !4295)
!4298 = !DILocation(line: 776, column: 34, scope: !4295)
!4299 = !DILocation(line: 776, column: 7, scope: !4296)
!4300 = !DILocation(line: 780, column: 7, scope: !4296)
!4301 = !DILocation(line: 782, column: 13, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !434, line: 780, column: 19)
!4303 = distinct !DILexicalBlock(scope: !4296, file: !434, line: 780, column: 7)
!4304 = !DILocation(line: 782, column: 8, scope: !4302)
!4305 = !DILocation(line: 782, column: 11, scope: !4302)
!4306 = !DILocation(line: 783, column: 3, scope: !4302)
!4307 = !DILocation(line: 785, column: 26, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4303, file: !434, line: 783, column: 10)
!4309 = !DILocation(line: 785, column: 41, scope: !4308)
!4310 = !DILocation(line: 785, column: 24, scope: !4308)
!4311 = !DILocation(line: 785, column: 8, scope: !4308)
!4312 = !DILocation(line: 787, column: 52, scope: !4308)
!4313 = !DILocation(line: 789, column: 11, scope: !4308)
!4314 = !DILocation(line: 789, column: 21, scope: !4308)
!4315 = !DILocation(line: 0, scope: !4303)
!4316 = !DILocation(line: 793, column: 7, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4296, file: !434, line: 793, column: 7)
!4318 = !DILocation(line: 793, column: 18, scope: !4317)
!4319 = !DILocation(line: 793, column: 22, scope: !4317)
!4320 = !DILocation(line: 793, column: 29, scope: !4317)
!4321 = !DILocation(line: 793, column: 7, scope: !4296)
!4322 = !DILocation(line: 797, column: 12, scope: !4296)
!4323 = !DILocation(line: 797, column: 7, scope: !4296)
!4324 = !DILocation(line: 797, column: 10, scope: !4296)
!4325 = !DILocation(line: 799, column: 3, scope: !4296)
!4326 = !DILocation(line: 800, column: 7, scope: !4296)
!4327 = !DILocation(line: 801, column: 2, scope: !4296)
!4328 = !DILocation(line: 338, column: 4, scope: !3988)
!4329 = !DILocation(line: 774, column: 26, scope: !4291)
!4330 = distinct !{!4330, !4293, !4331}
!4331 = !DILocation(line: 801, column: 2, scope: !4292)
!4332 = !DILocation(line: 808, column: 9, scope: !3988)
!4333 = !DILocation(line: 808, column: 2, scope: !3988)
!4334 = !DILocation(line: 813, column: 1, scope: !3988)
!4335 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !4336, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4338)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!492, !269}
!4338 = !{!4339}
!4339 = !DILocalVariable(name: "addr", arg: 1, scope: !4335, file: !434, line: 33, type: !269)
!4340 = !DILocation(line: 0, scope: !4335)
!4341 = !DILocation(line: 41, column: 9, scope: !4335)
!4342 = !DILocation(line: 41, column: 2, scope: !4335)
!4343 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4344, file: !4344, line: 24, type: !4345, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4347)
!4344 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4345 = !DISubroutineType(types: !4346)
!4346 = !{!492, !13}
!4347 = !{!4348}
!4348 = !DILocalVariable(name: "addr", arg: 1, scope: !4343, file: !4344, line: 24, type: !13)
!4349 = !DILocation(line: 0, scope: !4343)
!4350 = !DILocation(line: 49, column: 30, scope: !4343)
!4351 = !DILocation(line: 49, column: 57, scope: !4343)
!4352 = !DILocation(line: 49, column: 2, scope: !4343)
!4353 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !4354, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4356)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!105, !104, !111, !113, !269, null}
!4356 = !{!4357, !4358, !4359, !4360, !4361, !4362}
!4357 = !DILocalVariable(name: "packaged", arg: 1, scope: !4353, file: !434, line: 815, type: !104)
!4358 = !DILocalVariable(name: "len", arg: 2, scope: !4353, file: !434, line: 815, type: !111)
!4359 = !DILocalVariable(name: "flags", arg: 3, scope: !4353, file: !434, line: 815, type: !113)
!4360 = !DILocalVariable(name: "format", arg: 4, scope: !4353, file: !434, line: 816, type: !269)
!4361 = !DILocalVariable(name: "ap", scope: !4353, file: !434, line: 818, type: !3991)
!4362 = !DILocalVariable(name: "ret", scope: !4353, file: !434, line: 819, type: !105)
!4363 = !DILocation(line: 0, scope: !4353)
!4364 = !DILocation(line: 818, column: 2, scope: !4353)
!4365 = !DILocation(line: 818, column: 10, scope: !4353)
!4366 = !DILocation(line: 821, column: 2, scope: !4353)
!4367 = !DILocation(line: 822, column: 8, scope: !4353)
!4368 = !DILocation(line: 823, column: 2, scope: !4353)
!4369 = !DILocation(line: 825, column: 1, scope: !4353)
!4370 = !DILocation(line: 824, column: 2, scope: !4353)
!4371 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !4372, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4382)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!105, !4374, !4378, !104, !104}
!4374 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4024, line: 297, baseType: !4375)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 32)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!105, null}
!4378 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4024, line: 328, baseType: !4379)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 32)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!105, !4374, !104, !269, !3991}
!4382 = !{!4383, !4384, !4385, !4386, !4387, !4388, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401}
!4383 = !DILocalVariable(name: "out", arg: 1, scope: !4371, file: !434, line: 827, type: !4374)
!4384 = !DILocalVariable(name: "formatter", arg: 2, scope: !4371, file: !434, line: 828, type: !4378)
!4385 = !DILocalVariable(name: "ctx", arg: 3, scope: !4371, file: !434, line: 829, type: !104)
!4386 = !DILocalVariable(name: "packaged", arg: 4, scope: !4371, file: !434, line: 829, type: !104)
!4387 = !DILocalVariable(name: "buf", scope: !4371, file: !434, line: 831, type: !432)
!4388 = !DILocalVariable(name: "hdr", scope: !4371, file: !434, line: 832, type: !4389)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 32)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4024, line: 96, size: 64, elements: !4391)
!4391 = !{!4392, !4393}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4390, file: !4024, line: 98, baseType: !4023, size: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4390, file: !4024, line: 101, baseType: !102, size: 32, offset: 32)
!4394 = !DILocalVariable(name: "s", scope: !4371, file: !434, line: 833, type: !102)
!4395 = !DILocalVariable(name: "ps", scope: !4371, file: !434, line: 833, type: !431)
!4396 = !DILocalVariable(name: "i", scope: !4371, file: !434, line: 834, type: !32)
!4397 = !DILocalVariable(name: "args_size", scope: !4371, file: !434, line: 834, type: !32)
!4398 = !DILocalVariable(name: "s_nbr", scope: !4371, file: !434, line: 834, type: !32)
!4399 = !DILocalVariable(name: "ros_nbr", scope: !4371, file: !434, line: 834, type: !32)
!4400 = !DILocalVariable(name: "rws_nbr", scope: !4371, file: !434, line: 834, type: !32)
!4401 = !DILocalVariable(name: "s_idx", scope: !4371, file: !434, line: 834, type: !32)
!4402 = !DILocation(line: 0, scope: !4371)
!4403 = !DILocation(line: 836, column: 10, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4371, file: !434, line: 836, column: 6)
!4405 = !DILocation(line: 836, column: 6, scope: !4371)
!4406 = !DILocation(line: 842, column: 28, scope: !4371)
!4407 = !DILocation(line: 842, column: 14, scope: !4371)
!4408 = !DILocation(line: 852, column: 16, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !434, line: 852, column: 2)
!4410 = distinct !DILexicalBlock(scope: !4371, file: !434, line: 852, column: 2)
!4411 = !DILocation(line: 852, column: 2, scope: !4410)
!4412 = !DILocation(line: 841, column: 28, scope: !4371)
!4413 = !DILocation(line: 841, column: 14, scope: !4371)
!4414 = !DILocation(line: 841, column: 32, scope: !4371)
!4415 = !DILocation(line: 847, column: 19, scope: !4371)
!4416 = !DILocation(line: 843, column: 28, scope: !4371)
!4417 = !DILocation(line: 843, column: 14, scope: !4371)
!4418 = !DILocation(line: 847, column: 31, scope: !4371)
!4419 = !DILocation(line: 844, column: 28, scope: !4371)
!4420 = !DILocation(line: 844, column: 14, scope: !4371)
!4421 = !DILocation(line: 847, column: 45, scope: !4371)
!4422 = !DILocation(line: 847, column: 41, scope: !4371)
!4423 = !DILocation(line: 854, column: 24, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4409, file: !434, line: 852, column: 30)
!4425 = !DILocation(line: 854, column: 11, scope: !4424)
!4426 = !DILocation(line: 855, column: 30, scope: !4424)
!4427 = !DILocation(line: 855, column: 22, scope: !4424)
!4428 = !DILocation(line: 855, column: 8, scope: !4424)
!4429 = !DILocation(line: 857, column: 7, scope: !4424)
!4430 = !DILocation(line: 859, column: 8, scope: !4424)
!4431 = !DILocation(line: 859, column: 18, scope: !4424)
!4432 = !DILocation(line: 859, column: 5, scope: !4424)
!4433 = !DILocation(line: 852, column: 26, scope: !4409)
!4434 = distinct !{!4434, !4411, !4435}
!4435 = !DILocation(line: 860, column: 2, scope: !4410)
!4436 = !DILocation(line: 863, column: 6, scope: !4371)
!4437 = !DILocation(line: 866, column: 56, scope: !4371)
!4438 = !DILocation(line: 866, column: 9, scope: !4371)
!4439 = !DILocation(line: 866, column: 2, scope: !4371)
!4440 = !DILocation(line: 867, column: 1, scope: !4371)
!4441 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !4442, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4444)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!105, !4374, !4378, !104, !269, !104}
!4444 = !{!4445, !4446, !4447, !4448, !4449, !4450}
!4445 = !DILocalVariable(name: "out", arg: 1, scope: !4441, file: !434, line: 179, type: !4374)
!4446 = !DILocalVariable(name: "formatter", arg: 2, scope: !4441, file: !434, line: 180, type: !4378)
!4447 = !DILocalVariable(name: "ctx", arg: 3, scope: !4441, file: !434, line: 181, type: !104)
!4448 = !DILocalVariable(name: "fmt", arg: 4, scope: !4441, file: !434, line: 182, type: !269)
!4449 = !DILocalVariable(name: "buf", arg: 5, scope: !4441, file: !434, line: 182, type: !104)
!4450 = !DILocalVariable(name: "u", scope: !4441, file: !434, line: 187, type: !4451)
!4451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4441, file: !434, line: 184, size: 32, elements: !4452)
!4452 = !{!4453, !4454}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4451, file: !434, line: 185, baseType: !3991, size: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4451, file: !434, line: 186, baseType: !104, size: 32)
!4455 = !DILocation(line: 0, scope: !4441)
!4456 = !DILocation(line: 191, column: 9, scope: !4441)
!4457 = !DILocation(line: 191, column: 2, scope: !4441)
!4458 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !4459, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4461)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!492, !269, !105}
!4461 = !{!4462, !4463, !4464, !4465, !4466}
!4462 = !DILocalVariable(name: "fmt", arg: 1, scope: !4458, file: !434, line: 881, type: !269)
!4463 = !DILocalVariable(name: "n", arg: 2, scope: !4458, file: !434, line: 881, type: !105)
!4464 = !DILocalVariable(name: "c", scope: !4458, file: !434, line: 883, type: !103)
!4465 = !DILocalVariable(name: "mod", scope: !4458, file: !434, line: 884, type: !492)
!4466 = !DILocalVariable(name: "cnt", scope: !4458, file: !434, line: 885, type: !105)
!4467 = !DILocation(line: 0, scope: !4458)
!4468 = !DILocation(line: 887, column: 14, scope: !4458)
!4469 = !DILocation(line: 887, column: 22, scope: !4458)
!4470 = !DILocation(line: 887, column: 2, scope: !4458)
!4471 = !DILocation(line: 887, column: 18, scope: !4458)
!4472 = !DILocation(line: 888, column: 7, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4458, file: !434, line: 887, column: 31)
!4474 = !DILocation(line: 889, column: 12, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !434, line: 889, column: 8)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !434, line: 888, column: 12)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !434, line: 888, column: 7)
!4478 = !DILocation(line: 889, column: 8, scope: !4476)
!4479 = !DILocation(line: 890, column: 11, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !434, line: 890, column: 9)
!4481 = distinct !DILexicalBlock(scope: !4475, file: !434, line: 889, column: 18)
!4482 = !DILocation(line: 890, column: 9, scope: !4481)
!4483 = !DILocation(line: 892, column: 16, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4480, file: !434, line: 892, column: 16)
!4485 = !DILocation(line: 892, column: 16, scope: !4480)
!4486 = !DILocation(line: 895, column: 15, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4475, file: !434, line: 895, column: 15)
!4488 = !DILocation(line: 895, column: 15, scope: !4475)
!4489 = !DILocation(line: 900, column: 9, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4473, file: !434, line: 900, column: 7)
!4491 = !DILocation(line: 900, column: 7, scope: !4473)
!4492 = distinct !{!4492, !4470, !4493}
!4493 = !DILocation(line: 903, column: 2, scope: !4458)
!4494 = !DILocation(line: 906, column: 1, scope: !4458)
!4495 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !4496, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4498)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!492, !103}
!4498 = !{!4499}
!4499 = !DILocalVariable(name: "c", arg: 1, scope: !4495, file: !434, line: 873, type: !103)
!4500 = !DILocation(line: 0, scope: !4495)
!4501 = !DILocation(line: 875, column: 19, scope: !4495)
!4502 = !DILocation(line: 875, column: 2, scope: !4495)
!4503 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !4504, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4510)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{!105, !104, !111, !4506, !104, !113, !2611, !111}
!4506 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4024, line: 308, baseType: !4507)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 32)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!105, !13, !111, !104}
!4510 = !{!4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4528, !4529, !4530, !4531, !4532, !4538, !4541, !4542, !4543, !4545, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4561, !4564, !4565, !4566, !4567, !4568, !4569, !4571, !4574, !4575, !4576}
!4511 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4503, file: !434, line: 908, type: !104)
!4512 = !DILocalVariable(name: "in_len", arg: 2, scope: !4503, file: !434, line: 909, type: !111)
!4513 = !DILocalVariable(name: "cb", arg: 3, scope: !4503, file: !434, line: 910, type: !4506)
!4514 = !DILocalVariable(name: "ctx", arg: 4, scope: !4503, file: !434, line: 911, type: !104)
!4515 = !DILocalVariable(name: "flags", arg: 5, scope: !4503, file: !434, line: 912, type: !113)
!4516 = !DILocalVariable(name: "strl", arg: 6, scope: !4503, file: !434, line: 913, type: !2611)
!4517 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4503, file: !434, line: 914, type: !111)
!4518 = !DILocalVariable(name: "buf", scope: !4503, file: !434, line: 918, type: !432)
!4519 = !DILocalVariable(name: "buf32", scope: !4503, file: !434, line: 919, type: !1027)
!4520 = !DILocalVariable(name: "args_size", scope: !4503, file: !434, line: 920, type: !32)
!4521 = !DILocalVariable(name: "ros_nbr", scope: !4503, file: !434, line: 920, type: !32)
!4522 = !DILocalVariable(name: "rws_nbr", scope: !4503, file: !434, line: 920, type: !32)
!4523 = !DILocalVariable(name: "fmt_present", scope: !4503, file: !434, line: 921, type: !492)
!4524 = !DILocalVariable(name: "rw_cpy", scope: !4503, file: !434, line: 922, type: !492)
!4525 = !DILocalVariable(name: "ro_cpy", scope: !4503, file: !434, line: 923, type: !492)
!4526 = !DILocalVariable(name: "in_desc", scope: !4503, file: !434, line: 924, type: !4527)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 32)
!4528 = !DILocalVariable(name: "out_len", scope: !4503, file: !434, line: 960, type: !105)
!4529 = !DILocalVariable(name: "fmt", scope: !4503, file: !434, line: 965, type: !269)
!4530 = !DILocalVariable(name: "str_pos", scope: !4503, file: !434, line: 966, type: !432)
!4531 = !DILocalVariable(name: "strl_cnt", scope: !4503, file: !434, line: 967, type: !111)
!4532 = !DILocalVariable(name: "i", scope: !4533, file: !434, line: 973, type: !105)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !434, line: 973, column: 4)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !434, line: 972, column: 15)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !434, line: 972, column: 7)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !434, line: 970, column: 18)
!4537 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 970, column: 6)
!4538 = !DILocalVariable(name: "str", scope: !4539, file: !434, line: 974, type: !269)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !434, line: 973, column: 38)
!4540 = distinct !DILexicalBlock(scope: !4533, file: !434, line: 973, column: 4)
!4541 = !DILocalVariable(name: "len", scope: !4539, file: !434, line: 975, type: !105)
!4542 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4536, file: !434, line: 990, type: !492)
!4543 = !DILocalVariable(name: "i", scope: !4544, file: !434, line: 995, type: !105)
!4544 = distinct !DILexicalBlock(scope: !4536, file: !434, line: 995, column: 3)
!4545 = !DILocalVariable(name: "arg_idx", scope: !4546, file: !434, line: 996, type: !169)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !434, line: 995, column: 37)
!4547 = distinct !DILexicalBlock(scope: !4544, file: !434, line: 995, column: 3)
!4548 = !DILocalVariable(name: "arg_pos", scope: !4546, file: !434, line: 997, type: !169)
!4549 = !DILocalVariable(name: "str", scope: !4546, file: !434, line: 998, type: !269)
!4550 = !DILocalVariable(name: "is_ro", scope: !4546, file: !434, line: 999, type: !492)
!4551 = !DILocalVariable(name: "len", scope: !4546, file: !434, line: 1000, type: !105)
!4552 = !DILocalVariable(name: "out_desc", scope: !4503, file: !434, line: 1038, type: !4027)
!4553 = !DILocalVariable(name: "cpy_str_pos", scope: !4503, file: !434, line: 1040, type: !4009)
!4554 = !DILocalVariable(name: "keep_str_pos", scope: !4503, file: !434, line: 1042, type: !4009)
!4555 = !DILocalVariable(name: "scpy_cnt", scope: !4503, file: !434, line: 1043, type: !169)
!4556 = !DILocalVariable(name: "keep_cnt", scope: !4503, file: !434, line: 1044, type: !169)
!4557 = !DILocalVariable(name: "dst", scope: !4503, file: !434, line: 1045, type: !432)
!4558 = !DILocalVariable(name: "rv", scope: !4503, file: !434, line: 1046, type: !105)
!4559 = !DILocalVariable(name: "i", scope: !4560, file: !434, line: 1074, type: !105)
!4560 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1074, column: 2)
!4561 = !DILocalVariable(name: "arg_idx", scope: !4562, file: !434, line: 1075, type: !169)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !434, line: 1074, column: 36)
!4563 = distinct !DILexicalBlock(scope: !4560, file: !434, line: 1074, column: 2)
!4564 = !DILocalVariable(name: "arg_pos", scope: !4562, file: !434, line: 1076, type: !169)
!4565 = !DILocalVariable(name: "str", scope: !4562, file: !434, line: 1077, type: !269)
!4566 = !DILocalVariable(name: "is_ro", scope: !4562, file: !434, line: 1078, type: !492)
!4567 = !DILocalVariable(name: "in_desc_backup", scope: !4503, file: !434, line: 1114, type: !4027)
!4568 = !DILocalVariable(name: "strs_len", scope: !4503, file: !434, line: 1134, type: !111)
!4569 = !DILocalVariable(name: "i", scope: !4570, file: !434, line: 1143, type: !105)
!4570 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1143, column: 2)
!4571 = !DILocalVariable(name: "loc", scope: !4572, file: !434, line: 1144, type: !169)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !434, line: 1143, column: 37)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !434, line: 1143, column: 2)
!4574 = !DILocalVariable(name: "str", scope: !4572, file: !434, line: 1145, type: !269)
!4575 = !DILocalVariable(name: "str_len", scope: !4572, file: !434, line: 1146, type: !183)
!4576 = !DILabel(scope: !4577, name: "calculate_string_length", file: !434, line: 1021)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !434, line: 1020, column: 56)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !434, line: 1020, column: 15)
!4579 = distinct !DILexicalBlock(scope: !4546, file: !434, line: 1014, column: 8)
!4580 = !DILocation(line: 0, scope: !4503)
!4581 = !DILocation(line: 916, column: 2, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !434, line: 916, column: 2)
!4583 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 916, column: 2)
!4584 = !DILocation(line: 916, column: 2, scope: !4583)
!4585 = !DILocation(line: 916, column: 2, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !434, line: 916, column: 2)
!4587 = !DILocation(line: 919, column: 20, scope: !4503)
!4588 = !DILocation(line: 921, column: 27, scope: !4503)
!4589 = !DILocation(line: 921, column: 21, scope: !4503)
!4590 = !DILocation(line: 926, column: 18, scope: !4503)
!4591 = !DILocation(line: 926, column: 11, scope: !4503)
!4592 = !DILocation(line: 926, column: 34, scope: !4503)
!4593 = !DILocation(line: 931, column: 21, scope: !4503)
!4594 = !DILocation(line: 931, column: 12, scope: !4503)
!4595 = !DILocation(line: 932, column: 11, scope: !4503)
!4596 = !DILocation(line: 932, column: 19, scope: !4503)
!4597 = !DILocation(line: 938, column: 21, scope: !4503)
!4598 = !DILocation(line: 938, column: 12, scope: !4503)
!4599 = !DILocation(line: 939, column: 19, scope: !4503)
!4600 = !DILocation(line: 939, column: 23, scope: !4503)
!4601 = !DILocation(line: 946, column: 14, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 946, column: 6)
!4603 = !DILocation(line: 947, column: 7, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !434, line: 947, column: 7)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !434, line: 946, column: 26)
!4606 = !DILocation(line: 947, column: 7, scope: !4605)
!4607 = !DILocation(line: 948, column: 4, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4604, file: !434, line: 947, column: 11)
!4609 = !DILocation(line: 949, column: 3, scope: !4608)
!4610 = !DILocation(line: 958, column: 23, scope: !4503)
!4611 = !DILocation(line: 958, column: 14, scope: !4503)
!4612 = !DILocation(line: 958, column: 27, scope: !4503)
!4613 = !DILocation(line: 965, column: 41, scope: !4503)
!4614 = !DILocation(line: 965, column: 20, scope: !4503)
!4615 = !DILocation(line: 966, column: 22, scope: !4503)
!4616 = !DILocation(line: 970, column: 9, scope: !4537)
!4617 = !DILocation(line: 970, column: 6, scope: !4503)
!4618 = !DILocation(line: 972, column: 7, scope: !4536)
!4619 = !DILocation(line: 0, scope: !4533)
!4620 = !DILocation(line: 973, column: 4, scope: !4533)
!4621 = !DILocation(line: 974, column: 46, scope: !4539)
!4622 = !DILocation(line: 974, column: 40, scope: !4539)
!4623 = !DILocation(line: 974, column: 23, scope: !4539)
!4624 = !DILocation(line: 0, scope: !4539)
!4625 = !DILocation(line: 975, column: 15, scope: !4539)
!4626 = !DILocation(line: 978, column: 14, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4539, file: !434, line: 978, column: 9)
!4628 = !DILocation(line: 979, column: 25, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4627, file: !434, line: 978, column: 38)
!4630 = !DILocation(line: 979, column: 19, scope: !4629)
!4631 = !DILocation(line: 979, column: 6, scope: !4629)
!4632 = !DILocation(line: 979, column: 23, scope: !4629)
!4633 = !DILocation(line: 980, column: 5, scope: !4629)
!4634 = !DILocation(line: 981, column: 13, scope: !4539)
!4635 = !DILocation(line: 982, column: 12, scope: !4539)
!4636 = !DILocation(line: 973, column: 34, scope: !4540)
!4637 = !DILocation(line: 973, column: 22, scope: !4540)
!4638 = distinct !{!4638, !4620, !4639}
!4639 = !DILocation(line: 983, column: 4, scope: !4533)
!4640 = !DILocation(line: 985, column: 16, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !434, line: 985, column: 8)
!4642 = distinct !DILexicalBlock(scope: !4535, file: !434, line: 984, column: 10)
!4643 = !DILocation(line: 967, column: 9, scope: !4503)
!4644 = !DILocation(line: 971, column: 11, scope: !4536)
!4645 = !DILocation(line: 0, scope: !4536)
!4646 = !DILocation(line: 0, scope: !4544)
!4647 = !DILocation(line: 995, column: 21, scope: !4547)
!4648 = !DILocation(line: 995, column: 3, scope: !4544)
!4649 = !DILocation(line: 990, column: 34, scope: !4536)
!4650 = !DILocation(line: 990, column: 26, scope: !4536)
!4651 = !DILocation(line: 996, column: 30, scope: !4546)
!4652 = !DILocation(line: 0, scope: !4546)
!4653 = !DILocation(line: 997, column: 30, scope: !4546)
!4654 = !DILocation(line: 997, column: 22, scope: !4546)
!4655 = !DILocation(line: 998, column: 39, scope: !4546)
!4656 = !DILocation(line: 998, column: 22, scope: !4546)
!4657 = !DILocation(line: 999, column: 17, scope: !4546)
!4658 = !DILocation(line: 1002, column: 20, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4546, file: !434, line: 1002, column: 8)
!4660 = !DILocation(line: 996, column: 22, scope: !4546)
!4661 = !DILocation(line: 1002, column: 35, scope: !4659)
!4662 = !DILocation(line: 1002, column: 23, scope: !4659)
!4663 = !DILocation(line: 1002, column: 8, scope: !4546)
!4664 = !DILocation(line: 1003, column: 5, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !434, line: 1003, column: 5)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !434, line: 1003, column: 5)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !434, line: 1003, column: 5)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !434, line: 1003, column: 5)
!4669 = distinct !DILexicalBlock(scope: !4659, file: !434, line: 1002, column: 45)
!4670 = !DILocation(line: 1010, column: 13, scope: !4669)
!4671 = !DILocation(line: 1011, column: 5, scope: !4669)
!4672 = !DILocation(line: 1014, column: 8, scope: !4546)
!4673 = !DILocation(line: 1015, column: 9, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4579, file: !434, line: 1014, column: 15)
!4675 = !DILocation(line: 1018, column: 14, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !434, line: 1017, column: 12)
!4677 = distinct !DILexicalBlock(scope: !4674, file: !434, line: 1015, column: 9)
!4678 = !DILocation(line: 1020, column: 4, scope: !4674)
!4679 = !DILocation(line: 1020, column: 15, scope: !4579)
!4680 = !DILocation(line: 1021, column: 1, scope: !4577)
!4681 = !DILocation(line: 1022, column: 11, scope: !4577)
!4682 = !DILocation(line: 1025, column: 14, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4577, file: !434, line: 1025, column: 9)
!4684 = !DILocation(line: 1026, column: 25, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4683, file: !434, line: 1025, column: 38)
!4686 = !DILocation(line: 1026, column: 19, scope: !4685)
!4687 = !DILocation(line: 1026, column: 6, scope: !4685)
!4688 = !DILocation(line: 1026, column: 23, scope: !4685)
!4689 = !DILocation(line: 1027, column: 5, scope: !4685)
!4690 = !DILocation(line: 1031, column: 21, scope: !4577)
!4691 = !DILocation(line: 1031, column: 13, scope: !4577)
!4692 = !DILocation(line: 1032, column: 4, scope: !4577)
!4693 = !DILocation(line: 995, column: 33, scope: !4547)
!4694 = distinct !{!4694, !4648, !4695}
!4695 = !DILocation(line: 1033, column: 3, scope: !4544)
!4696 = !DILocation(line: 1040, column: 10, scope: !4503)
!4697 = !DILocation(line: 1042, column: 10, scope: !4503)
!4698 = !DILocation(line: 1052, column: 6, scope: !4503)
!4699 = !DILocation(line: 1055, column: 9, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !434, line: 1052, column: 14)
!4701 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1052, column: 6)
!4702 = !DILocation(line: 1056, column: 2, scope: !4700)
!4703 = !DILocation(line: 1056, column: 21, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4701, file: !434, line: 1056, column: 13)
!4705 = !DILocation(line: 1066, column: 3, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !434, line: 1065, column: 11)
!4707 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1065, column: 6)
!4708 = !DILocation(line: 1067, column: 2, scope: !4706)
!4709 = !DILocation(line: 1068, column: 10, scope: !4503)
!4710 = !DILocation(line: 0, scope: !4560)
!4711 = !DILocation(line: 1074, column: 20, scope: !4563)
!4712 = !DILocation(line: 1074, column: 2, scope: !4560)
!4713 = !DILocation(line: 1110, column: 24, scope: !4503)
!4714 = !DILocation(line: 1053, column: 12, scope: !4700)
!4715 = !DILocation(line: 1054, column: 12, scope: !4700)
!4716 = !DILocation(line: 1108, column: 30, scope: !4503)
!4717 = !DILocation(line: 1108, column: 40, scope: !4503)
!4718 = !DILocation(line: 1108, column: 38, scope: !4503)
!4719 = !DILocation(line: 1109, column: 31, scope: !4503)
!4720 = !DILocation(line: 1109, column: 24, scope: !4503)
!4721 = !DILocation(line: 1110, column: 31, scope: !4503)
!4722 = !DILocation(line: 1114, column: 31, scope: !4503)
!4723 = !DILocation(line: 1114, column: 48, scope: !4503)
!4724 = !DILocation(line: 1115, column: 13, scope: !4503)
!4725 = !DILocation(line: 1118, column: 7, scope: !4503)
!4726 = !DILocation(line: 1119, column: 9, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1119, column: 6)
!4728 = !DILocation(line: 1119, column: 6, scope: !4503)
!4729 = !DILocation(line: 1075, column: 29, scope: !4562)
!4730 = !DILocation(line: 1075, column: 21, scope: !4562)
!4731 = !DILocation(line: 0, scope: !4562)
!4732 = !DILocation(line: 1076, column: 29, scope: !4562)
!4733 = !DILocation(line: 1076, column: 21, scope: !4562)
!4734 = !DILocation(line: 1077, column: 38, scope: !4562)
!4735 = !DILocation(line: 1077, column: 21, scope: !4562)
!4736 = !DILocation(line: 1078, column: 16, scope: !4562)
!4737 = !DILocation(line: 1080, column: 19, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1080, column: 7)
!4739 = !DILocation(line: 1080, column: 34, scope: !4738)
!4740 = !DILocation(line: 1080, column: 22, scope: !4738)
!4741 = !DILocation(line: 1080, column: 7, scope: !4562)
!4742 = !DILocation(line: 1084, column: 7, scope: !4562)
!4743 = !DILocation(line: 1085, column: 8, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !434, line: 1084, column: 14)
!4745 = distinct !DILexicalBlock(scope: !4562, file: !434, line: 1084, column: 7)
!4746 = !DILocation(line: 1086, column: 5, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !434, line: 1086, column: 5)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !434, line: 1086, column: 5)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !434, line: 1085, column: 49)
!4750 = distinct !DILexicalBlock(scope: !4744, file: !434, line: 1085, column: 8)
!4751 = !DILocation(line: 1086, column: 5, scope: !4748)
!4752 = !DILocation(line: 1086, column: 5, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4747, file: !434, line: 1086, column: 5)
!4754 = !DILocation(line: 1087, column: 25, scope: !4749)
!4755 = !DILocation(line: 1087, column: 5, scope: !4749)
!4756 = !DILocation(line: 1088, column: 4, scope: !4749)
!4757 = !DILocation(line: 1088, column: 15, scope: !4750)
!4758 = !DILocation(line: 1089, column: 5, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !434, line: 1089, column: 5)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !434, line: 1089, column: 5)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !434, line: 1088, column: 61)
!4762 = distinct !DILexicalBlock(scope: !4750, file: !434, line: 1088, column: 15)
!4763 = !DILocation(line: 1089, column: 5, scope: !4760)
!4764 = !DILocation(line: 1089, column: 5, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4759, file: !434, line: 1089, column: 5)
!4766 = !DILocation(line: 1090, column: 26, scope: !4761)
!4767 = !DILocation(line: 1090, column: 5, scope: !4761)
!4768 = !DILocation(line: 1091, column: 4, scope: !4761)
!4769 = !DILocation(line: 1095, column: 8, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4745, file: !434, line: 1094, column: 10)
!4771 = !DILocation(line: 1096, column: 5, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !434, line: 1096, column: 5)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !434, line: 1096, column: 5)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !434, line: 1095, column: 49)
!4775 = distinct !DILexicalBlock(scope: !4770, file: !434, line: 1095, column: 8)
!4776 = !DILocation(line: 1096, column: 5, scope: !4773)
!4777 = !DILocation(line: 1096, column: 5, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4772, file: !434, line: 1096, column: 5)
!4779 = !DILocation(line: 1097, column: 25, scope: !4774)
!4780 = !DILocation(line: 1097, column: 5, scope: !4774)
!4781 = !DILocation(line: 1098, column: 4, scope: !4774)
!4782 = !DILocation(line: 1099, column: 5, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !434, line: 1099, column: 5)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !434, line: 1099, column: 5)
!4785 = distinct !DILexicalBlock(scope: !4775, file: !434, line: 1098, column: 11)
!4786 = !DILocation(line: 1099, column: 5, scope: !4784)
!4787 = !DILocation(line: 1099, column: 5, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4783, file: !434, line: 1099, column: 5)
!4789 = !DILocation(line: 1100, column: 26, scope: !4785)
!4790 = !DILocation(line: 1100, column: 5, scope: !4785)
!4791 = !DILocation(line: 1100, column: 30, scope: !4785)
!4792 = !DILocation(line: 1101, column: 26, scope: !4785)
!4793 = !DILocation(line: 1101, column: 5, scope: !4785)
!4794 = !DILocation(line: 0, scope: !4745)
!4795 = !DILocation(line: 1074, column: 32, scope: !4563)
!4796 = distinct !{!4796, !4712, !4797}
!4797 = !DILocation(line: 1104, column: 2, scope: !4560)
!4798 = !DILocation(line: 1124, column: 13, scope: !4503)
!4799 = !DILocation(line: 1127, column: 10, scope: !4503)
!4800 = !DILocation(line: 1127, column: 7, scope: !4503)
!4801 = !DILocation(line: 1128, column: 9, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1128, column: 6)
!4803 = !DILocation(line: 1128, column: 6, scope: !4503)
!4804 = !DILocation(line: 1134, column: 27, scope: !4503)
!4805 = !DILocation(line: 1136, column: 7, scope: !4503)
!4806 = !DILocation(line: 1137, column: 9, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4503, file: !434, line: 1137, column: 6)
!4808 = !DILocation(line: 1137, column: 6, scope: !4503)
!4809 = !DILocation(line: 1131, column: 10, scope: !4503)
!4810 = !DILocation(line: 1140, column: 10, scope: !4503)
!4811 = !DILocation(line: 0, scope: !4570)
!4812 = !DILocation(line: 1143, column: 20, scope: !4573)
!4813 = !DILocation(line: 1143, column: 2, scope: !4570)
!4814 = !DILocation(line: 1144, column: 3, scope: !4572)
!4815 = !DILocation(line: 1144, column: 17, scope: !4572)
!4816 = !DILocation(line: 0, scope: !4572)
!4817 = !DILocation(line: 1144, column: 11, scope: !4572)
!4818 = !DILocation(line: 1145, column: 38, scope: !4572)
!4819 = !DILocation(line: 1145, column: 21, scope: !4572)
!4820 = !DILocation(line: 1146, column: 22, scope: !4572)
!4821 = !DILocation(line: 1146, column: 29, scope: !4572)
!4822 = !DILocation(line: 1148, column: 8, scope: !4572)
!4823 = !DILocation(line: 1149, column: 10, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4572, file: !434, line: 1149, column: 7)
!4825 = !DILocation(line: 1149, column: 7, scope: !4572)
!4826 = !DILocation(line: 1154, column: 8, scope: !4572)
!4827 = !DILocation(line: 1155, column: 10, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4572, file: !434, line: 1155, column: 7)
!4829 = !DILocation(line: 1155, column: 7, scope: !4572)
!4830 = !DILocation(line: 1159, column: 2, scope: !4573)
!4831 = !DILocation(line: 1152, column: 11, scope: !4572)
!4832 = !DILocation(line: 1158, column: 11, scope: !4572)
!4833 = !DILocation(line: 1143, column: 33, scope: !4573)
!4834 = distinct !{!4834, !4813, !4835}
!4835 = !DILocation(line: 1159, column: 2, scope: !4570)
!4836 = !DILocation(line: 1162, column: 8, scope: !4503)
!4837 = !DILocation(line: 1164, column: 2, scope: !4503)
!4838 = !DILocation(line: 1165, column: 1, scope: !4503)
!4839 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4840, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4842)
!4840 = !DISubroutineType(types: !4841)
!4841 = !{!111, !104}
!4842 = !{!4843, !4844, !4845, !4846, !4847, !4848, !4849}
!4843 = !DILocalVariable(name: "packaged", arg: 1, scope: !4839, file: !434, line: 196, type: !104)
!4844 = !DILocalVariable(name: "buf", scope: !4839, file: !434, line: 200, type: !432)
!4845 = !DILocalVariable(name: "start", scope: !4839, file: !434, line: 201, type: !432)
!4846 = !DILocalVariable(name: "args_size", scope: !4839, file: !434, line: 202, type: !32)
!4847 = !DILocalVariable(name: "s_nbr", scope: !4839, file: !434, line: 202, type: !32)
!4848 = !DILocalVariable(name: "ros_nbr", scope: !4839, file: !434, line: 202, type: !32)
!4849 = !DILocalVariable(name: "i", scope: !4850, file: !434, line: 215, type: !105)
!4850 = distinct !DILexicalBlock(scope: !4839, file: !434, line: 215, column: 2)
!4851 = !DILocation(line: 0, scope: !4839)
!4852 = !DILocation(line: 198, column: 2, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !434, line: 198, column: 2)
!4854 = distinct !DILexicalBlock(scope: !4839, file: !434, line: 198, column: 2)
!4855 = !DILocation(line: 198, column: 2, scope: !4854)
!4856 = !DILocation(line: 198, column: 2, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !434, line: 198, column: 2)
!4858 = !DILocation(line: 204, column: 14, scope: !4839)
!4859 = !DILocation(line: 204, column: 21, scope: !4839)
!4860 = !DILocation(line: 205, column: 14, scope: !4839)
!4861 = !DILocation(line: 206, column: 14, scope: !4839)
!4862 = !DILocation(line: 209, column: 6, scope: !4839)
!4863 = !DILocation(line: 212, column: 6, scope: !4839)
!4864 = !DILocation(line: 0, scope: !4850)
!4865 = !DILocation(line: 215, column: 20, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4850, file: !434, line: 215, column: 2)
!4867 = !DILocation(line: 215, column: 2, scope: !4850)
!4868 = !DILocation(line: 220, column: 33, scope: !4839)
!4869 = !DILocation(line: 220, column: 2, scope: !4839)
!4870 = !DILocation(line: 216, column: 6, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4866, file: !434, line: 215, column: 34)
!4872 = !DILocation(line: 217, column: 10, scope: !4871)
!4873 = !DILocation(line: 217, column: 36, scope: !4871)
!4874 = !DILocation(line: 217, column: 7, scope: !4871)
!4875 = !DILocation(line: 215, column: 30, scope: !4866)
!4876 = distinct !{!4876, !4867, !4877}
!4877 = !DILocation(line: 218, column: 2, scope: !4850)
!4878 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4879, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4881)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!105, !4506, !104, !269, !183}
!4881 = !{!4882, !4883, !4884, !4885}
!4882 = !DILocalVariable(name: "cb", arg: 1, scope: !4878, file: !434, line: 223, type: !4506)
!4883 = !DILocalVariable(name: "ctx", arg: 2, scope: !4878, file: !434, line: 223, type: !104)
!4884 = !DILocalVariable(name: "str", arg: 3, scope: !4878, file: !434, line: 223, type: !269)
!4885 = !DILocalVariable(name: "strl", arg: 4, scope: !4878, file: !434, line: 223, type: !183)
!4886 = !DILocation(line: 0, scope: !4878)
!4887 = !DILocation(line: 225, column: 9, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4878, file: !434, line: 225, column: 6)
!4889 = !DILocation(line: 225, column: 6, scope: !4878)
!4890 = !DILocation(line: 226, column: 14, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4888, file: !434, line: 225, column: 18)
!4892 = !DILocation(line: 226, column: 12, scope: !4891)
!4893 = !DILocation(line: 226, column: 3, scope: !4891)
!4894 = !DILocation(line: 229, column: 14, scope: !4878)
!4895 = !DILocation(line: 229, column: 9, scope: !4878)
!4896 = !DILocation(line: 229, column: 27, scope: !4878)
!4897 = !DILocation(line: 229, column: 39, scope: !4878)
!4898 = !DILocation(line: 230, column: 17, scope: !4878)
!4899 = !DILocation(line: 230, column: 9, scope: !4878)
!4900 = !DILocation(line: 230, column: 2, scope: !4878)
!4901 = !DILocation(line: 231, column: 1, scope: !4878)
!4902 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4903)
!4903 = !{!4904}
!4904 = !DILocalVariable(name: "c", arg: 1, scope: !4902, file: !446, line: 45, type: !105)
!4905 = !DILocation(line: 0, scope: !4902)
!4906 = !DILocation(line: 50, column: 2, scope: !4902)
!4907 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4908, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4910)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !447}
!4910 = !{!4911}
!4911 = !DILocalVariable(name: "fn", arg: 1, scope: !4907, file: !446, line: 63, type: !447)
!4912 = !DILocation(line: 0, scope: !4907)
!4913 = !DILocation(line: 65, column: 12, scope: !4907)
!4914 = !DILocation(line: 66, column: 1, scope: !4907)
!4915 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4916, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!104}
!4918 = !DILocation(line: 78, column: 9, scope: !4915)
!4919 = !DILocation(line: 78, column: 2, scope: !4915)
!4920 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4921, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4929)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{null, !269, !4923}
!4923 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3992, line: 99, baseType: !4924)
!4924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3992, line: 40, baseType: !4925)
!4925 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4926)
!4926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4927)
!4927 = !{!4928}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4926, file: !446, line: 79, baseType: !104, size: 32)
!4929 = !{!4930, !4931, !4932}
!4930 = !DILocalVariable(name: "fmt", arg: 1, scope: !4920, file: !446, line: 113, type: !269)
!4931 = !DILocalVariable(name: "ap", arg: 2, scope: !4920, file: !446, line: 113, type: !4923)
!4932 = !DILocalVariable(name: "ctx", scope: !4933, file: !446, line: 121, type: !4935)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !446, line: 120, column: 27)
!4934 = distinct !DILexicalBlock(scope: !4920, file: !446, line: 120, column: 6)
!4935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4936)
!4936 = !{!4937, !4938}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4935, file: !446, line: 85, baseType: !32, size: 32)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4935, file: !446, line: 86, baseType: !4939, offset: 32)
!4939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2609)
!4940 = !DILocation(line: 0, scope: !4920)
!4941 = !DILocation(line: 148, column: 3, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4934, file: !446, line: 138, column: 9)
!4943 = !DILocation(line: 155, column: 1, scope: !4920)
!4944 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !4945, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4947)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!105, !105, !104}
!4947 = !{!4948, !4949}
!4948 = !DILocalVariable(name: "c", arg: 1, scope: !4944, file: !446, line: 107, type: !105)
!4949 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4944, file: !446, line: 107, type: !104)
!4950 = !DILocation(line: 0, scope: !4944)
!4951 = !DILocation(line: 110, column: 9, scope: !4944)
!4952 = !DILocation(line: 110, column: 2, scope: !4944)
!4953 = distinct !DISubprogram(name: "cbvprintf", scope: !4024, file: !4024, line: 739, type: !4954, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4956)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{!105, !4374, !104, !269, !4923}
!4956 = !{!4957, !4958, !4959, !4960}
!4957 = !DILocalVariable(name: "out", arg: 1, scope: !4953, file: !4024, line: 739, type: !4374)
!4958 = !DILocalVariable(name: "ctx", arg: 2, scope: !4953, file: !4024, line: 739, type: !104)
!4959 = !DILocalVariable(name: "format", arg: 3, scope: !4953, file: !4024, line: 739, type: !269)
!4960 = !DILocalVariable(name: "ap", arg: 4, scope: !4953, file: !4024, line: 739, type: !4923)
!4961 = !DILocation(line: 0, scope: !4953)
!4962 = !DILocation(line: 741, column: 9, scope: !4953)
!4963 = !DILocation(line: 741, column: 2, scope: !4953)
!4964 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !4965, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4967)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{null, !102, !111}
!4967 = !{!4968, !4969, !4970}
!4968 = !DILocalVariable(name: "c", arg: 1, scope: !4964, file: !446, line: 157, type: !102)
!4969 = !DILocalVariable(name: "n", arg: 2, scope: !4964, file: !446, line: 157, type: !111)
!4970 = !DILocalVariable(name: "i", scope: !4964, file: !446, line: 159, type: !111)
!4971 = !DILocation(line: 0, scope: !4964)
!4972 = !DILocation(line: 164, column: 16, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !446, line: 164, column: 2)
!4974 = distinct !DILexicalBlock(scope: !4964, file: !446, line: 164, column: 2)
!4975 = !DILocation(line: 164, column: 2, scope: !4974)
!4976 = !DILocation(line: 165, column: 3, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4973, file: !446, line: 164, column: 26)
!4978 = !DILocation(line: 165, column: 13, scope: !4977)
!4979 = !DILocation(line: 164, column: 22, scope: !4973)
!4980 = distinct !{!4980, !4975, !4981}
!4981 = !DILocation(line: 166, column: 2, scope: !4974)
!4982 = !DILocation(line: 171, column: 1, scope: !4964)
!4983 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !4984, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4986)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !269, null}
!4986 = !{!4987, !4988}
!4987 = !DILocalVariable(name: "fmt", arg: 1, scope: !4983, file: !446, line: 203, type: !269)
!4988 = !DILocalVariable(name: "ap", scope: !4983, file: !446, line: 205, type: !4923)
!4989 = !DILocation(line: 0, scope: !4983)
!4990 = !DILocation(line: 205, column: 2, scope: !4983)
!4991 = !DILocation(line: 205, column: 10, scope: !4983)
!4992 = !DILocation(line: 207, column: 2, scope: !4983)
!4993 = !DILocation(line: 209, column: 2, scope: !4983)
!4994 = !DILocation(line: 211, column: 2, scope: !4983)
!4995 = !DILocation(line: 212, column: 1, scope: !4983)
!4996 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !4997, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!105, !102, !111, !269, null}
!4999 = !{!5000, !5001, !5002, !5003, !5004}
!5000 = !DILocalVariable(name: "str", arg: 1, scope: !4996, file: !446, line: 239, type: !102)
!5001 = !DILocalVariable(name: "size", arg: 2, scope: !4996, file: !446, line: 239, type: !111)
!5002 = !DILocalVariable(name: "fmt", arg: 3, scope: !4996, file: !446, line: 239, type: !269)
!5003 = !DILocalVariable(name: "ap", scope: !4996, file: !446, line: 241, type: !4923)
!5004 = !DILocalVariable(name: "ret", scope: !4996, file: !446, line: 242, type: !105)
!5005 = !DILocation(line: 0, scope: !4996)
!5006 = !DILocation(line: 241, column: 2, scope: !4996)
!5007 = !DILocation(line: 241, column: 10, scope: !4996)
!5008 = !DILocation(line: 244, column: 2, scope: !4996)
!5009 = !DILocation(line: 245, column: 8, scope: !4996)
!5010 = !DILocation(line: 246, column: 2, scope: !4996)
!5011 = !DILocation(line: 249, column: 1, scope: !4996)
!5012 = !DILocation(line: 248, column: 2, scope: !4996)
!5013 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !5014, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5016)
!5014 = !DISubroutineType(types: !5015)
!5015 = !{!105, !102, !111, !269, !4923}
!5016 = !{!5017, !5018, !5019, !5020, !5021}
!5017 = !DILocalVariable(name: "str", arg: 1, scope: !5013, file: !446, line: 251, type: !102)
!5018 = !DILocalVariable(name: "size", arg: 2, scope: !5013, file: !446, line: 251, type: !111)
!5019 = !DILocalVariable(name: "fmt", arg: 3, scope: !5013, file: !446, line: 251, type: !269)
!5020 = !DILocalVariable(name: "ap", arg: 4, scope: !5013, file: !446, line: 251, type: !4923)
!5021 = !DILocalVariable(name: "ctx", scope: !5013, file: !446, line: 253, type: !5022)
!5022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !5023)
!5023 = !{!5024, !5025, !5026}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5022, file: !446, line: 218, baseType: !102, size: 32)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5022, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5022, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!5027 = !DILocation(line: 0, scope: !5013)
!5028 = !DILocation(line: 253, column: 2, scope: !5013)
!5029 = !DILocation(line: 253, column: 21, scope: !5013)
!5030 = !DILocation(line: 253, column: 27, scope: !5013)
!5031 = !DILocation(line: 255, column: 2, scope: !5013)
!5032 = !DILocation(line: 257, column: 10, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5013, file: !446, line: 257, column: 6)
!5034 = !DILocation(line: 257, column: 22, scope: !5033)
!5035 = !DILocation(line: 257, column: 16, scope: !5033)
!5036 = !DILocation(line: 257, column: 6, scope: !5013)
!5037 = !DILocation(line: 258, column: 3, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5033, file: !446, line: 257, column: 27)
!5039 = !DILocation(line: 258, column: 18, scope: !5038)
!5040 = !DILocation(line: 259, column: 2, scope: !5038)
!5041 = !DILocation(line: 262, column: 1, scope: !5013)
!5042 = !DILocation(line: 261, column: 2, scope: !5013)
!5043 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !5044, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5047)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!105, !105, !5046}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 32)
!5047 = !{!5048, !5049}
!5048 = !DILocalVariable(name: "c", arg: 1, scope: !5043, file: !446, line: 223, type: !105)
!5049 = !DILocalVariable(name: "ctx", arg: 2, scope: !5043, file: !446, line: 223, type: !5046)
!5050 = !DILocation(line: 0, scope: !5043)
!5051 = !DILocation(line: 225, column: 11, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5043, file: !446, line: 225, column: 6)
!5053 = !DILocation(line: 225, column: 15, scope: !5052)
!5054 = !DILocation(line: 0, scope: !5052)
!5055 = !DILocation(line: 225, column: 23, scope: !5052)
!5056 = !DILocation(line: 225, column: 45, scope: !5052)
!5057 = !DILocation(line: 225, column: 37, scope: !5052)
!5058 = !DILocation(line: 225, column: 6, scope: !5043)
!5059 = !DILocation(line: 226, column: 8, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5052, file: !446, line: 225, column: 50)
!5061 = !DILocation(line: 226, column: 13, scope: !5060)
!5062 = !DILocation(line: 227, column: 3, scope: !5060)
!5063 = !DILocation(line: 230, column: 29, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5043, file: !446, line: 230, column: 6)
!5065 = !DILocation(line: 230, column: 17, scope: !5064)
!5066 = !DILocation(line: 230, column: 6, scope: !5043)
!5067 = !DILocation(line: 231, column: 22, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !446, line: 230, column: 34)
!5069 = !DILocation(line: 231, column: 3, scope: !5068)
!5070 = !DILocation(line: 231, column: 26, scope: !5068)
!5071 = !DILocation(line: 232, column: 2, scope: !5068)
!5072 = !DILocation(line: 233, column: 28, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5064, file: !446, line: 232, column: 9)
!5074 = !DILocation(line: 233, column: 22, scope: !5073)
!5075 = !DILocation(line: 233, column: 3, scope: !5073)
!5076 = !DILocation(line: 233, column: 26, scope: !5073)
!5077 = !DILocation(line: 237, column: 1, scope: !5043)
!5078 = distinct !DISubprogram(name: "z_thread_entry", scope: !5079, file: !5079, line: 30, type: !5080, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !5082)
!5079 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5080 = !DISubroutineType(types: !5081)
!5081 = !{null, !254, !104, !104, !104}
!5082 = !{!5083, !5084, !5085, !5086}
!5083 = !DILocalVariable(name: "entry", arg: 1, scope: !5078, file: !5079, line: 30, type: !254)
!5084 = !DILocalVariable(name: "p1", arg: 2, scope: !5078, file: !5079, line: 31, type: !104)
!5085 = !DILocalVariable(name: "p2", arg: 3, scope: !5078, file: !5079, line: 31, type: !104)
!5086 = !DILocalVariable(name: "p3", arg: 4, scope: !5078, file: !5079, line: 31, type: !104)
!5087 = !DILocation(line: 0, scope: !5078)
!5088 = !DILocation(line: 36, column: 2, scope: !5078)
!5089 = !DILocation(line: 38, column: 17, scope: !5078)
!5090 = !DILocation(line: 38, column: 2, scope: !5078)
!5091 = !DILocation(line: 45, column: 2, scope: !5078)
!5092 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !5093, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !397)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!5095}
!5095 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !5096)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 32)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !5098)
!5098 = !{!5099, !5157, !5169, !5170, !5171, !5172, !5178, !5193}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5097, file: !127, line: 247, baseType: !5100, size: 384)
!5100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !5101)
!5101 = !{!5102, !5126, !5133, !5134, !5135, !5144, !5145, !5146}
!5102 = !DIDerivedType(tag: DW_TAG_member, scope: !5100, file: !127, line: 60, baseType: !5103, size: 64)
!5103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5100, file: !127, line: 60, size: 64, elements: !5104)
!5104 = !{!5105, !5120}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5103, file: !127, line: 61, baseType: !5106, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !5107)
!5107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !5108)
!5108 = !{!5109, !5115}
!5109 = !DIDerivedType(tag: DW_TAG_member, scope: !5107, file: !137, line: 38, baseType: !5110, size: 32)
!5110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5107, file: !137, line: 38, size: 32, elements: !5111)
!5111 = !{!5112, !5114}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5110, file: !137, line: 39, baseType: !5113, size: 32)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5107, size: 32)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5110, file: !137, line: 40, baseType: !5113, size: 32)
!5115 = !DIDerivedType(tag: DW_TAG_member, scope: !5107, file: !137, line: 42, baseType: !5116, size: 32, offset: 32)
!5116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5107, file: !137, line: 42, size: 32, elements: !5117)
!5117 = !{!5118, !5119}
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5116, file: !137, line: 43, baseType: !5113, size: 32)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5116, file: !137, line: 44, baseType: !5113, size: 32)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5103, file: !127, line: 62, baseType: !5121, size: 64)
!5121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !5122)
!5122 = !{!5123}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5121, file: !153, line: 50, baseType: !5124, size: 64)
!5124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5125, size: 64, elements: !158)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 32)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5100, file: !127, line: 68, baseType: !5127, size: 32, offset: 64)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 32)
!5128 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !5129)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !5130)
!5130 = !{!5131}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5129, file: !163, line: 232, baseType: !5132, size: 64)
!5132 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !5107)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5100, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5100, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!5135 = !DIDerivedType(tag: DW_TAG_member, scope: !5100, file: !127, line: 90, baseType: !5136, size: 16, offset: 112)
!5136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5100, file: !127, line: 90, size: 16, elements: !5137)
!5137 = !{!5138, !5143}
!5138 = !DIDerivedType(tag: DW_TAG_member, scope: !5136, file: !127, line: 91, baseType: !5139, size: 16)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5136, file: !127, line: 91, size: 16, elements: !5140)
!5140 = !{!5141, !5142}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5139, file: !127, line: 96, baseType: !179, size: 8)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5139, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5136, file: !127, line: 100, baseType: !183, size: 16)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5100, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5100, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5100, file: !127, line: 131, baseType: !5147, size: 192, offset: 192)
!5147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !5148)
!5148 = !{!5149, !5150, !5156}
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5147, file: !163, line: 245, baseType: !5106, size: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5147, file: !163, line: 246, baseType: !5151, size: 32, offset: 64)
!5151 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !5152)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 32)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{null, !5155}
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 32)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5147, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5097, file: !127, line: 250, baseType: !5158, size: 288, offset: 384)
!5158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !5159)
!5159 = !{!5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5158, file: !200, line: 26, baseType: !113, size: 32)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5158, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5158, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5158, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5158, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5158, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5158, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5158, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5158, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5097, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5097, file: !127, line: 256, baseType: !5128, size: 64, offset: 704)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5097, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5097, file: !127, line: 300, baseType: !5173, size: 96, offset: 800)
!5173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !5174)
!5174 = !{!5175, !5176, !5177}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5173, file: !127, line: 153, baseType: !22, size: 32)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5173, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5173, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5097, file: !127, line: 325, baseType: !5179, size: 32, offset: 896)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 32)
!5180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !5181)
!5181 = !{!5182, !5188, !5189}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5180, file: !122, line: 5074, baseType: !5183, size: 96)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5184)
!5184 = !{!5185, !5186, !5187}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5183, file: !226, line: 57, baseType: !229, size: 32)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5183, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5183, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5180, file: !122, line: 5075, baseType: !5128, size: 64, offset: 96)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5180, file: !122, line: 5076, baseType: !5190, size: 32, offset: 160)
!5190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !5191)
!5191 = !{!5192}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5190, file: !236, line: 52, baseType: !22, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5097, file: !127, line: 343, baseType: !5194, size: 64, offset: 928)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !5195)
!5195 = !{!5196, !5197}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5194, file: !200, line: 63, baseType: !113, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5194, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!5198 = !DILocation(line: 535, column: 9, scope: !5092)
!5199 = !DILocation(line: 535, column: 2, scope: !5092)
!5200 = distinct !DISubprogram(name: "k_thread_abort", scope: !3438, file: !3438, line: 188, type: !5201, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !5203)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{null, !5095}
!5203 = !{!5204}
!5204 = !DILocalVariable(name: "thread", arg: 1, scope: !5200, file: !3438, line: 188, type: !5095)
!5205 = !DILocation(line: 0, scope: !5200)
!5206 = !DILocation(line: 197, column: 2, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5200, file: !3438, line: 197, column: 2)
!5208 = !{i64 2154846289}
!5209 = !DILocation(line: 198, column: 2, scope: !5200)
!5210 = !DILocation(line: 199, column: 1, scope: !5200)
!5211 = distinct !DISubprogram(name: "z_current_get", scope: !3438, file: !3438, line: 173, type: !5093, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !397)
!5212 = !DILocation(line: 180, column: 2, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5211, file: !3438, line: 180, column: 2)
!5214 = !{i64 2154846221}
!5215 = !DILocation(line: 181, column: 9, scope: !5211)
!5216 = !DILocation(line: 181, column: 2, scope: !5211)
!5217 = distinct !DISubprogram(name: "sys_heap_free", scope: !5218, file: !5218, line: 163, type: !5219, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5227)
!5218 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !5221, !104}
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 32)
!5222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5223)
!5223 = !{!5224, !5225, !5226}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5222, file: !226, line: 57, baseType: !2596, size: 32)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5222, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5222, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5227 = !{!5228, !5229, !5230, !5231}
!5228 = !DILocalVariable(name: "heap", arg: 1, scope: !5217, file: !5218, line: 163, type: !5221)
!5229 = !DILocalVariable(name: "mem", arg: 2, scope: !5217, file: !5218, line: 163, type: !104)
!5230 = !DILocalVariable(name: "h", scope: !5217, file: !5218, line: 168, type: !2596)
!5231 = !DILocalVariable(name: "c", scope: !5217, file: !5218, line: 169, type: !2601)
!5232 = !DILocation(line: 0, scope: !5217)
!5233 = !DILocation(line: 165, column: 10, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5217, file: !5218, line: 165, column: 6)
!5235 = !DILocation(line: 165, column: 6, scope: !5217)
!5236 = !DILocation(line: 168, column: 27, scope: !5217)
!5237 = !DILocation(line: 169, column: 16, scope: !5217)
!5238 = !{i32 0, i32 536870912}
!5239 = !DILocation(line: 175, column: 2, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5241, file: !5218, line: 175, column: 2)
!5241 = distinct !DILexicalBlock(scope: !5217, file: !5218, line: 175, column: 2)
!5242 = !DILocation(line: 175, column: 2, scope: !5241)
!5243 = !DILocation(line: 175, column: 2, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !5218, line: 175, column: 2)
!5245 = !DILocation(line: 183, column: 2, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5247, file: !5218, line: 183, column: 2)
!5247 = distinct !DILexicalBlock(scope: !5217, file: !5218, line: 183, column: 2)
!5248 = !DILocation(line: 183, column: 2, scope: !5247)
!5249 = !DILocation(line: 183, column: 2, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5246, file: !5218, line: 183, column: 2)
!5251 = !DILocation(line: 187, column: 2, scope: !5217)
!5252 = !DILocation(line: 197, column: 2, scope: !5217)
!5253 = !DILocation(line: 198, column: 1, scope: !5217)
!5254 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5218, file: !5218, line: 157, type: !5255, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5257)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{!2601, !2596, !104}
!5257 = !{!5258, !5259, !5260, !5261}
!5258 = !DILocalVariable(name: "h", arg: 1, scope: !5254, file: !5218, line: 157, type: !2596)
!5259 = !DILocalVariable(name: "p", arg: 2, scope: !5254, file: !5218, line: 157, type: !104)
!5260 = !DILocalVariable(name: "mem", scope: !5254, file: !5218, line: 159, type: !432)
!5261 = !DILocalVariable(name: "base", scope: !5254, file: !5218, line: 159, type: !432)
!5262 = !DILocation(line: 0, scope: !5254)
!5263 = !DILocation(line: 159, column: 39, scope: !5254)
!5264 = !DILocation(line: 160, column: 14, scope: !5254)
!5265 = !DILocation(line: 160, column: 38, scope: !5254)
!5266 = !DILocation(line: 160, column: 46, scope: !5254)
!5267 = !DILocation(line: 160, column: 2, scope: !5254)
!5268 = distinct !DISubprogram(name: "chunk_used", scope: !2583, file: !2583, line: 137, type: !5269, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!492, !2596, !2601}
!5271 = !{!5272, !5273}
!5272 = !DILocalVariable(name: "h", arg: 1, scope: !5268, file: !2583, line: 137, type: !2596)
!5273 = !DILocalVariable(name: "c", arg: 2, scope: !5268, file: !2583, line: 137, type: !2601)
!5274 = !DILocation(line: 0, scope: !5268)
!5275 = !DILocation(line: 139, column: 9, scope: !5268)
!5276 = !DILocation(line: 139, column: 42, scope: !5268)
!5277 = !DILocation(line: 139, column: 2, scope: !5268)
!5278 = distinct !DISubprogram(name: "right_chunk", scope: !2583, file: !2583, line: 204, type: !5279, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5281)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{!2601, !2596, !2601}
!5281 = !{!5282, !5283}
!5282 = !DILocalVariable(name: "h", arg: 1, scope: !5278, file: !2583, line: 204, type: !2596)
!5283 = !DILocalVariable(name: "c", arg: 2, scope: !5278, file: !2583, line: 204, type: !2601)
!5284 = !DILocation(line: 0, scope: !5278)
!5285 = !DILocation(line: 206, column: 13, scope: !5278)
!5286 = !DILocation(line: 206, column: 11, scope: !5278)
!5287 = !DILocation(line: 206, column: 2, scope: !5278)
!5288 = distinct !DISubprogram(name: "left_chunk", scope: !2583, file: !2583, line: 199, type: !5279, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5289)
!5289 = !{!5290, !5291}
!5290 = !DILocalVariable(name: "h", arg: 1, scope: !5288, file: !2583, line: 199, type: !2596)
!5291 = !DILocalVariable(name: "c", arg: 2, scope: !5288, file: !2583, line: 199, type: !2601)
!5292 = !DILocation(line: 0, scope: !5288)
!5293 = !DILocation(line: 201, column: 13, scope: !5288)
!5294 = !DILocation(line: 201, column: 11, scope: !5288)
!5295 = !DILocation(line: 201, column: 2, scope: !5288)
!5296 = distinct !DISubprogram(name: "set_chunk_used", scope: !2583, file: !2583, line: 147, type: !5297, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5299)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{null, !2596, !2601, !492}
!5299 = !{!5300, !5301, !5302, !5303, !5304}
!5300 = !DILocalVariable(name: "h", arg: 1, scope: !5296, file: !2583, line: 147, type: !2596)
!5301 = !DILocalVariable(name: "c", arg: 2, scope: !5296, file: !2583, line: 147, type: !2601)
!5302 = !DILocalVariable(name: "used", arg: 3, scope: !5296, file: !2583, line: 147, type: !492)
!5303 = !DILocalVariable(name: "buf", scope: !5296, file: !2583, line: 149, type: !2590)
!5304 = !DILocalVariable(name: "cmem", scope: !5296, file: !2583, line: 150, type: !104)
!5305 = !DILocation(line: 0, scope: !5296)
!5306 = !DILocation(line: 149, column: 22, scope: !5296)
!5307 = !DILocation(line: 0, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5309, file: !2583, line: 159, column: 7)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !2583, line: 158, column: 9)
!5310 = distinct !DILexicalBlock(scope: !5296, file: !2583, line: 152, column: 6)
!5311 = !DILocation(line: 159, column: 7, scope: !5309)
!5312 = !DILocation(line: 165, column: 1, scope: !5296)
!5313 = distinct !DISubprogram(name: "free_chunk", scope: !5218, file: !5218, line: 133, type: !5314, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null, !2596, !2601}
!5316 = !{!5317, !5318}
!5317 = !DILocalVariable(name: "h", arg: 1, scope: !5313, file: !5218, line: 133, type: !2596)
!5318 = !DILocalVariable(name: "c", arg: 2, scope: !5313, file: !5218, line: 133, type: !2601)
!5319 = !DILocation(line: 0, scope: !5313)
!5320 = !DILocation(line: 136, column: 21, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5313, file: !5218, line: 136, column: 6)
!5322 = !DILocation(line: 136, column: 7, scope: !5321)
!5323 = !DILocation(line: 136, column: 6, scope: !5313)
!5324 = !DILocation(line: 137, column: 3, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5321, file: !5218, line: 136, column: 41)
!5326 = !DILocation(line: 138, column: 22, scope: !5325)
!5327 = !DILocation(line: 138, column: 3, scope: !5325)
!5328 = !DILocation(line: 139, column: 2, scope: !5325)
!5329 = !DILocation(line: 142, column: 21, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5313, file: !5218, line: 142, column: 6)
!5331 = !DILocation(line: 142, column: 7, scope: !5330)
!5332 = !DILocation(line: 142, column: 6, scope: !5313)
!5333 = !DILocation(line: 143, column: 3, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5330, file: !5218, line: 142, column: 40)
!5335 = !DILocation(line: 144, column: 19, scope: !5334)
!5336 = !DILocation(line: 144, column: 3, scope: !5334)
!5337 = !DILocation(line: 145, column: 7, scope: !5334)
!5338 = !DILocation(line: 146, column: 2, scope: !5334)
!5339 = !DILocation(line: 148, column: 2, scope: !5313)
!5340 = !DILocation(line: 149, column: 1, scope: !5313)
!5341 = distinct !DISubprogram(name: "free_list_remove", scope: !5218, file: !5218, line: 60, type: !5314, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5342)
!5342 = !{!5343, !5344, !5345}
!5343 = !DILocalVariable(name: "h", arg: 1, scope: !5341, file: !5218, line: 60, type: !2596)
!5344 = !DILocalVariable(name: "c", arg: 2, scope: !5341, file: !5218, line: 60, type: !2601)
!5345 = !DILocalVariable(name: "bidx", scope: !5346, file: !5218, line: 63, type: !105)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !5218, line: 62, column: 31)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !5218, line: 62, column: 6)
!5348 = !DILocation(line: 0, scope: !5341)
!5349 = !DILocation(line: 63, column: 28, scope: !5346)
!5350 = !{i32 0, i32 32768}
!5351 = !DILocation(line: 63, column: 14, scope: !5346)
!5352 = !DILocation(line: 0, scope: !5346)
!5353 = !DILocation(line: 64, column: 3, scope: !5346)
!5354 = !DILocation(line: 66, column: 1, scope: !5341)
!5355 = distinct !DISubprogram(name: "merge_chunks", scope: !5218, file: !5218, line: 125, type: !5356, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5358)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{null, !2596, !2601, !2601}
!5358 = !{!5359, !5360, !5361, !5362}
!5359 = !DILocalVariable(name: "h", arg: 1, scope: !5355, file: !5218, line: 125, type: !2596)
!5360 = !DILocalVariable(name: "lc", arg: 2, scope: !5355, file: !5218, line: 125, type: !2601)
!5361 = !DILocalVariable(name: "rc", arg: 3, scope: !5355, file: !5218, line: 125, type: !2601)
!5362 = !DILocalVariable(name: "newsz", scope: !5355, file: !5218, line: 127, type: !5363)
!5363 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2583, line: 62, baseType: !113)
!5364 = !DILocation(line: 0, scope: !5355)
!5365 = !DILocation(line: 127, column: 20, scope: !5355)
!5366 = !DILocation(line: 127, column: 40, scope: !5355)
!5367 = !DILocation(line: 127, column: 38, scope: !5355)
!5368 = !DILocation(line: 129, column: 2, scope: !5355)
!5369 = !DILocation(line: 130, column: 25, scope: !5355)
!5370 = !DILocation(line: 130, column: 2, scope: !5355)
!5371 = !DILocation(line: 131, column: 1, scope: !5355)
!5372 = distinct !DISubprogram(name: "free_list_add", scope: !5218, file: !5218, line: 98, type: !5314, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5373)
!5373 = !{!5374, !5375, !5376}
!5374 = !DILocalVariable(name: "h", arg: 1, scope: !5372, file: !5218, line: 98, type: !2596)
!5375 = !DILocalVariable(name: "c", arg: 2, scope: !5372, file: !5218, line: 98, type: !2601)
!5376 = !DILocalVariable(name: "bidx", scope: !5377, file: !5218, line: 101, type: !105)
!5377 = distinct !DILexicalBlock(scope: !5378, file: !5218, line: 100, column: 31)
!5378 = distinct !DILexicalBlock(scope: !5372, file: !5218, line: 100, column: 6)
!5379 = !DILocation(line: 0, scope: !5372)
!5380 = !DILocation(line: 101, column: 28, scope: !5377)
!5381 = !DILocation(line: 101, column: 14, scope: !5377)
!5382 = !DILocation(line: 0, scope: !5377)
!5383 = !DILocation(line: 102, column: 3, scope: !5377)
!5384 = !DILocation(line: 104, column: 1, scope: !5372)
!5385 = distinct !DISubprogram(name: "chunk_size", scope: !2583, file: !2583, line: 142, type: !5386, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5388)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!5363, !2596, !2601}
!5388 = !{!5389, !5390}
!5389 = !DILocalVariable(name: "h", arg: 1, scope: !5385, file: !2583, line: 142, type: !2596)
!5390 = !DILocalVariable(name: "c", arg: 2, scope: !5385, file: !2583, line: 142, type: !2601)
!5391 = !DILocation(line: 0, scope: !5385)
!5392 = !DILocation(line: 144, column: 9, scope: !5385)
!5393 = !DILocation(line: 144, column: 42, scope: !5385)
!5394 = !DILocation(line: 144, column: 2, scope: !5385)
!5395 = distinct !DISubprogram(name: "bucket_idx", scope: !2583, file: !2583, line: 250, type: !5396, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5398)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!105, !2596, !5363}
!5398 = !{!5399, !5400, !5401}
!5399 = !DILocalVariable(name: "h", arg: 1, scope: !5395, file: !2583, line: 250, type: !2596)
!5400 = !DILocalVariable(name: "sz", arg: 2, scope: !5395, file: !2583, line: 250, type: !5363)
!5401 = !DILocalVariable(name: "usable_sz", scope: !5395, file: !2583, line: 252, type: !32)
!5402 = !DILocation(line: 0, scope: !5395)
!5403 = !DILocation(line: 252, column: 32, scope: !5395)
!5404 = !DILocation(line: 252, column: 30, scope: !5395)
!5405 = !DILocation(line: 252, column: 50, scope: !5395)
!5406 = !DILocation(line: 253, column: 14, scope: !5395)
!5407 = !{i32 0, i32 33}
!5408 = !DILocation(line: 253, column: 12, scope: !5395)
!5409 = !DILocation(line: 253, column: 2, scope: !5395)
!5410 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5218, file: !5218, line: 68, type: !5411, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5413)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{null, !2596, !2601, !105}
!5413 = !{!5414, !5415, !5416, !5417, !5419, !5422}
!5414 = !DILocalVariable(name: "h", arg: 1, scope: !5410, file: !5218, line: 68, type: !2596)
!5415 = !DILocalVariable(name: "c", arg: 2, scope: !5410, file: !5218, line: 68, type: !2601)
!5416 = !DILocalVariable(name: "bidx", arg: 3, scope: !5410, file: !5218, line: 68, type: !105)
!5417 = !DILocalVariable(name: "b", scope: !5410, file: !5218, line: 70, type: !5418)
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!5419 = !DILocalVariable(name: "second", scope: !5420, file: !5218, line: 84, type: !2601)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !5218, line: 80, column: 9)
!5421 = distinct !DILexicalBlock(scope: !5410, file: !5218, line: 72, column: 6)
!5422 = !DILocalVariable(name: "first", scope: !5420, file: !5218, line: 85, type: !2601)
!5423 = !DILocation(line: 0, scope: !5410)
!5424 = !DILocation(line: 72, column: 9, scope: !5421)
!5425 = !DILocation(line: 72, column: 14, scope: !5421)
!5426 = !DILocation(line: 72, column: 6, scope: !5410)
!5427 = !DILocation(line: 76, column: 23, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5421, file: !5218, line: 72, column: 21)
!5429 = !DILocation(line: 76, column: 6, scope: !5428)
!5430 = !DILocation(line: 76, column: 20, scope: !5428)
!5431 = !DILocation(line: 77, column: 11, scope: !5428)
!5432 = !DILocation(line: 78, column: 3, scope: !5428)
!5433 = !DILocation(line: 79, column: 3, scope: !5428)
!5434 = !DILocation(line: 80, column: 2, scope: !5428)
!5435 = !DILocation(line: 0, scope: !5420)
!5436 = !DILocation(line: 85, column: 21, scope: !5420)
!5437 = !{i32 0, i32 65536}
!5438 = !DILocation(line: 87, column: 3, scope: !5420)
!5439 = !DILocation(line: 88, column: 3, scope: !5420)
!5440 = !DILocation(line: 89, column: 3, scope: !5420)
!5441 = !DILocation(line: 90, column: 3, scope: !5420)
!5442 = !DILocation(line: 96, column: 1, scope: !5410)
!5443 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2583, file: !2583, line: 187, type: !5356, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5444)
!5444 = !{!5445, !5446, !5447}
!5445 = !DILocalVariable(name: "h", arg: 1, scope: !5443, file: !2583, line: 187, type: !2596)
!5446 = !DILocalVariable(name: "c", arg: 2, scope: !5443, file: !2583, line: 187, type: !2601)
!5447 = !DILocalVariable(name: "prev", arg: 3, scope: !5443, file: !2583, line: 188, type: !2601)
!5448 = !DILocation(line: 0, scope: !5443)
!5449 = !DILocation(line: 190, column: 2, scope: !5443)
!5450 = !DILocation(line: 191, column: 1, scope: !5443)
!5451 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2583, file: !2583, line: 193, type: !5356, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5452)
!5452 = !{!5453, !5454, !5455}
!5453 = !DILocalVariable(name: "h", arg: 1, scope: !5451, file: !2583, line: 193, type: !2596)
!5454 = !DILocalVariable(name: "c", arg: 2, scope: !5451, file: !2583, line: 193, type: !2601)
!5455 = !DILocalVariable(name: "next", arg: 3, scope: !5451, file: !2583, line: 194, type: !2601)
!5456 = !DILocation(line: 0, scope: !5451)
!5457 = !DILocation(line: 196, column: 2, scope: !5451)
!5458 = !DILocation(line: 197, column: 1, scope: !5451)
!5459 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2583, file: !2583, line: 177, type: !5279, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5460)
!5460 = !{!5461, !5462}
!5461 = !DILocalVariable(name: "h", arg: 1, scope: !5459, file: !2583, line: 177, type: !2596)
!5462 = !DILocalVariable(name: "c", arg: 2, scope: !5459, file: !2583, line: 177, type: !2601)
!5463 = !DILocation(line: 0, scope: !5459)
!5464 = !DILocation(line: 179, column: 9, scope: !5459)
!5465 = !DILocation(line: 179, column: 2, scope: !5459)
!5466 = distinct !DISubprogram(name: "chunk_field", scope: !2583, file: !2583, line: 107, type: !5467, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5469)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!2601, !2596, !2601, !2582}
!5469 = !{!5470, !5471, !5472, !5473, !5474}
!5470 = !DILocalVariable(name: "h", arg: 1, scope: !5466, file: !2583, line: 107, type: !2596)
!5471 = !DILocalVariable(name: "c", arg: 2, scope: !5466, file: !2583, line: 107, type: !2601)
!5472 = !DILocalVariable(name: "f", arg: 3, scope: !5466, file: !2583, line: 108, type: !2582)
!5473 = !DILocalVariable(name: "buf", scope: !5466, file: !2583, line: 110, type: !2590)
!5474 = !DILocalVariable(name: "cmem", scope: !5466, file: !2583, line: 111, type: !104)
!5475 = !DILocation(line: 0, scope: !5466)
!5476 = !DILocation(line: 110, column: 22, scope: !5466)
!5477 = !DILocation(line: 111, column: 15, scope: !5466)
!5478 = !DILocation(line: 116, column: 11, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !2583, line: 115, column: 9)
!5480 = distinct !DILexicalBlock(scope: !5466, file: !2583, line: 113, column: 6)
!5481 = !DILocation(line: 116, column: 10, scope: !5479)
!5482 = !DILocation(line: 118, column: 1, scope: !5466)
!5483 = distinct !DISubprogram(name: "chunk_buf", scope: !2583, file: !2583, line: 101, type: !5484, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5486)
!5484 = !DISubroutineType(types: !5485)
!5485 = !{!2590, !2596}
!5486 = !{!5487}
!5487 = !DILocalVariable(name: "h", arg: 1, scope: !5483, file: !2583, line: 101, type: !2596)
!5488 = !DILocation(line: 0, scope: !5483)
!5489 = !DILocation(line: 104, column: 9, scope: !5483)
!5490 = !DILocation(line: 104, column: 2, scope: !5483)
!5491 = distinct !DISubprogram(name: "chunk_set", scope: !2583, file: !2583, line: 120, type: !5492, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5494)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{null, !2596, !2601, !2582, !2601}
!5494 = !{!5495, !5496, !5497, !5498, !5499, !5500}
!5495 = !DILocalVariable(name: "h", arg: 1, scope: !5491, file: !2583, line: 120, type: !2596)
!5496 = !DILocalVariable(name: "c", arg: 2, scope: !5491, file: !2583, line: 120, type: !2601)
!5497 = !DILocalVariable(name: "f", arg: 3, scope: !5491, file: !2583, line: 121, type: !2582)
!5498 = !DILocalVariable(name: "val", arg: 4, scope: !5491, file: !2583, line: 121, type: !2601)
!5499 = !DILocalVariable(name: "buf", scope: !5491, file: !2583, line: 125, type: !2590)
!5500 = !DILocalVariable(name: "cmem", scope: !5491, file: !2583, line: 126, type: !104)
!5501 = !DILocation(line: 0, scope: !5491)
!5502 = !DILocation(line: 125, column: 22, scope: !5491)
!5503 = !DILocation(line: 126, column: 15, scope: !5491)
!5504 = !DILocation(line: 133, column: 27, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !2583, line: 131, column: 9)
!5506 = distinct !DILexicalBlock(scope: !5491, file: !2583, line: 128, column: 6)
!5507 = !DILocation(line: 133, column: 4, scope: !5505)
!5508 = !DILocation(line: 133, column: 3, scope: !5505)
!5509 = !DILocation(line: 133, column: 25, scope: !5505)
!5510 = !DILocation(line: 135, column: 1, scope: !5491)
!5511 = distinct !DISubprogram(name: "min_chunk_size", scope: !2583, file: !2583, line: 240, type: !5512, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5514)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!5363, !2596}
!5514 = !{!5515}
!5515 = !DILocalVariable(name: "h", arg: 1, scope: !5511, file: !2583, line: 240, type: !2596)
!5516 = !DILocation(line: 0, scope: !5511)
!5517 = !DILocation(line: 242, column: 9, scope: !5511)
!5518 = !DILocation(line: 242, column: 2, scope: !5511)
!5519 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2583, file: !2583, line: 235, type: !5520, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5522)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{!5363, !2596, !111}
!5522 = !{!5523, !5524}
!5523 = !DILocalVariable(name: "h", arg: 1, scope: !5519, file: !2583, line: 235, type: !2596)
!5524 = !DILocalVariable(name: "bytes", arg: 2, scope: !5519, file: !2583, line: 235, type: !111)
!5525 = !DILocation(line: 0, scope: !5519)
!5526 = !DILocation(line: 237, column: 39, scope: !5519)
!5527 = !DILocation(line: 237, column: 9, scope: !5519)
!5528 = !DILocation(line: 237, column: 2, scope: !5519)
!5529 = distinct !DISubprogram(name: "chunksz", scope: !2583, file: !2583, line: 230, type: !5530, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5532)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!5363, !111}
!5532 = !{!5533}
!5533 = !DILocalVariable(name: "bytes", arg: 1, scope: !5529, file: !2583, line: 230, type: !111)
!5534 = !DILocation(line: 0, scope: !5529)
!5535 = !DILocation(line: 232, column: 29, scope: !5529)
!5536 = !DILocation(line: 232, column: 35, scope: !5529)
!5537 = !DILocation(line: 232, column: 2, scope: !5529)
!5538 = distinct !DISubprogram(name: "set_chunk_size", scope: !2583, file: !2583, line: 172, type: !5539, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5541)
!5539 = !DISubroutineType(types: !5540)
!5540 = !{null, !2596, !2601, !5363}
!5541 = !{!5542, !5543, !5544}
!5542 = !DILocalVariable(name: "h", arg: 1, scope: !5538, file: !2583, line: 172, type: !2596)
!5543 = !DILocalVariable(name: "c", arg: 2, scope: !5538, file: !2583, line: 172, type: !2601)
!5544 = !DILocalVariable(name: "size", arg: 3, scope: !5538, file: !2583, line: 172, type: !5363)
!5545 = !DILocation(line: 0, scope: !5538)
!5546 = !DILocation(line: 174, column: 38, scope: !5538)
!5547 = !DILocation(line: 174, column: 2, scope: !5538)
!5548 = !DILocation(line: 175, column: 1, scope: !5538)
!5549 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2583, file: !2583, line: 209, type: !5539, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5550)
!5550 = !{!5551, !5552, !5553}
!5551 = !DILocalVariable(name: "h", arg: 1, scope: !5549, file: !2583, line: 209, type: !2596)
!5552 = !DILocalVariable(name: "c", arg: 2, scope: !5549, file: !2583, line: 209, type: !2601)
!5553 = !DILocalVariable(name: "size", arg: 3, scope: !5549, file: !2583, line: 210, type: !5363)
!5554 = !DILocation(line: 0, scope: !5549)
!5555 = !DILocation(line: 212, column: 2, scope: !5549)
!5556 = !DILocation(line: 213, column: 1, scope: !5549)
!5557 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5218, file: !5218, line: 34, type: !5411, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5558)
!5558 = !{!5559, !5560, !5561, !5562, !5563, !5566}
!5559 = !DILocalVariable(name: "h", arg: 1, scope: !5557, file: !5218, line: 34, type: !2596)
!5560 = !DILocalVariable(name: "c", arg: 2, scope: !5557, file: !5218, line: 34, type: !2601)
!5561 = !DILocalVariable(name: "bidx", arg: 3, scope: !5557, file: !5218, line: 34, type: !105)
!5562 = !DILocalVariable(name: "b", scope: !5557, file: !5218, line: 36, type: !5418)
!5563 = !DILocalVariable(name: "first", scope: !5564, file: !5218, line: 47, type: !2601)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !5218, line: 46, column: 9)
!5565 = distinct !DILexicalBlock(scope: !5557, file: !5218, line: 42, column: 6)
!5566 = !DILocalVariable(name: "second", scope: !5564, file: !5218, line: 48, type: !2601)
!5567 = !DILocation(line: 0, scope: !5557)
!5568 = !DILocation(line: 36, column: 29, scope: !5557)
!5569 = !DILocation(line: 42, column: 6, scope: !5565)
!5570 = !DILocation(line: 42, column: 28, scope: !5565)
!5571 = !DILocation(line: 42, column: 6, scope: !5557)
!5572 = !DILocation(line: 44, column: 24, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5565, file: !5218, line: 42, column: 34)
!5574 = !DILocation(line: 44, column: 23, scope: !5573)
!5575 = !DILocation(line: 44, column: 6, scope: !5573)
!5576 = !DILocation(line: 44, column: 20, scope: !5573)
!5577 = !DILocation(line: 45, column: 6, scope: !5573)
!5578 = !DILocation(line: 45, column: 11, scope: !5573)
!5579 = !DILocation(line: 46, column: 2, scope: !5573)
!5580 = !DILocation(line: 47, column: 21, scope: !5564)
!5581 = !DILocation(line: 0, scope: !5564)
!5582 = !DILocation(line: 50, column: 6, scope: !5564)
!5583 = !DILocation(line: 50, column: 11, scope: !5564)
!5584 = !DILocation(line: 51, column: 3, scope: !5564)
!5585 = !DILocation(line: 52, column: 3, scope: !5564)
!5586 = !DILocation(line: 58, column: 1, scope: !5557)
!5587 = distinct !DISubprogram(name: "next_free_chunk", scope: !2583, file: !2583, line: 182, type: !5279, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5588)
!5588 = !{!5589, !5590}
!5589 = !DILocalVariable(name: "h", arg: 1, scope: !5587, file: !2583, line: 182, type: !2596)
!5590 = !DILocalVariable(name: "c", arg: 2, scope: !5587, file: !2583, line: 182, type: !2601)
!5591 = !DILocation(line: 0, scope: !5587)
!5592 = !DILocation(line: 184, column: 9, scope: !5587)
!5593 = !DILocation(line: 184, column: 2, scope: !5587)
!5594 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5218, file: !5218, line: 200, type: !5595, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5597)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!111, !5221, !104}
!5597 = !{!5598, !5599, !5600, !5601, !5602, !5603, !5604}
!5598 = !DILocalVariable(name: "heap", arg: 1, scope: !5594, file: !5218, line: 200, type: !5221)
!5599 = !DILocalVariable(name: "mem", arg: 2, scope: !5594, file: !5218, line: 200, type: !104)
!5600 = !DILocalVariable(name: "h", scope: !5594, file: !5218, line: 202, type: !2596)
!5601 = !DILocalVariable(name: "c", scope: !5594, file: !5218, line: 203, type: !2601)
!5602 = !DILocalVariable(name: "addr", scope: !5594, file: !5218, line: 204, type: !111)
!5603 = !DILocalVariable(name: "chunk_base", scope: !5594, file: !5218, line: 205, type: !111)
!5604 = !DILocalVariable(name: "chunk_sz", scope: !5594, file: !5218, line: 206, type: !111)
!5605 = !DILocation(line: 0, scope: !5594)
!5606 = !DILocation(line: 202, column: 27, scope: !5594)
!5607 = !DILocation(line: 203, column: 16, scope: !5594)
!5608 = !DILocation(line: 204, column: 16, scope: !5594)
!5609 = !DILocation(line: 205, column: 31, scope: !5594)
!5610 = !DILocation(line: 205, column: 22, scope: !5594)
!5611 = !DILocation(line: 206, column: 20, scope: !5594)
!5612 = !DILocation(line: 206, column: 37, scope: !5594)
!5613 = !DILocation(line: 208, column: 26, scope: !5594)
!5614 = !DILocation(line: 208, column: 18, scope: !5594)
!5615 = !DILocation(line: 208, column: 2, scope: !5594)
!5616 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5218, file: !5218, line: 263, type: !5617, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5619)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!104, !5221, !111}
!5619 = !{!5620, !5621, !5622, !5623, !5624, !5625}
!5620 = !DILocalVariable(name: "heap", arg: 1, scope: !5616, file: !5218, line: 263, type: !5221)
!5621 = !DILocalVariable(name: "bytes", arg: 2, scope: !5616, file: !5218, line: 263, type: !111)
!5622 = !DILocalVariable(name: "h", scope: !5616, file: !5218, line: 265, type: !2596)
!5623 = !DILocalVariable(name: "mem", scope: !5616, file: !5218, line: 266, type: !104)
!5624 = !DILocalVariable(name: "chunk_sz", scope: !5616, file: !5218, line: 272, type: !5363)
!5625 = !DILocalVariable(name: "c", scope: !5616, file: !5218, line: 273, type: !2601)
!5626 = !DILocation(line: 0, scope: !5616)
!5627 = !DILocation(line: 265, column: 27, scope: !5616)
!5628 = !DILocation(line: 268, column: 12, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5616, file: !5218, line: 268, column: 6)
!5630 = !DILocation(line: 268, column: 18, scope: !5629)
!5631 = !DILocation(line: 268, column: 21, scope: !5629)
!5632 = !DILocation(line: 268, column: 6, scope: !5616)
!5633 = !DILocation(line: 272, column: 23, scope: !5616)
!5634 = !DILocation(line: 273, column: 16, scope: !5616)
!5635 = !DILocation(line: 274, column: 8, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5616, file: !5218, line: 274, column: 6)
!5637 = !DILocation(line: 274, column: 6, scope: !5616)
!5638 = !DILocation(line: 279, column: 6, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5616, file: !5218, line: 279, column: 6)
!5640 = !DILocation(line: 279, column: 23, scope: !5639)
!5641 = !DILocation(line: 279, column: 6, scope: !5616)
!5642 = !DILocation(line: 280, column: 24, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5639, file: !5218, line: 279, column: 35)
!5644 = !DILocation(line: 280, column: 3, scope: !5643)
!5645 = !DILocation(line: 281, column: 3, scope: !5643)
!5646 = !DILocation(line: 282, column: 2, scope: !5643)
!5647 = !DILocation(line: 284, column: 2, scope: !5616)
!5648 = !DILocation(line: 286, column: 8, scope: !5616)
!5649 = !DILocation(line: 298, column: 2, scope: !5616)
!5650 = !DILocation(line: 299, column: 1, scope: !5616)
!5651 = distinct !DISubprogram(name: "size_too_big", scope: !2583, file: !2583, line: 256, type: !5652, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5654)
!5652 = !DISubroutineType(types: !5653)
!5653 = !{!492, !2596, !111}
!5654 = !{!5655, !5656}
!5655 = !DILocalVariable(name: "h", arg: 1, scope: !5651, file: !2583, line: 256, type: !2596)
!5656 = !DILocalVariable(name: "bytes", arg: 2, scope: !5651, file: !2583, line: 256, type: !111)
!5657 = !DILocation(line: 0, scope: !5651)
!5658 = !DILocation(line: 262, column: 16, scope: !5651)
!5659 = !DILocation(line: 262, column: 36, scope: !5651)
!5660 = !DILocation(line: 262, column: 30, scope: !5651)
!5661 = !DILocation(line: 262, column: 2, scope: !5651)
!5662 = distinct !DISubprogram(name: "alloc_chunk", scope: !5218, file: !5218, line: 211, type: !5663, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5665)
!5663 = !DISubroutineType(types: !5664)
!5664 = !{!2601, !2596, !5363}
!5665 = !{!5666, !5667, !5668, !5669, !5670, !5673, !5674, !5676, !5677, !5680}
!5666 = !DILocalVariable(name: "h", arg: 1, scope: !5662, file: !5218, line: 211, type: !2596)
!5667 = !DILocalVariable(name: "sz", arg: 2, scope: !5662, file: !5218, line: 211, type: !5363)
!5668 = !DILocalVariable(name: "bi", scope: !5662, file: !5218, line: 213, type: !105)
!5669 = !DILocalVariable(name: "b", scope: !5662, file: !5218, line: 214, type: !5418)
!5670 = !DILocalVariable(name: "first", scope: !5671, file: !5218, line: 233, type: !2601)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !5218, line: 232, column: 15)
!5672 = distinct !DILexicalBlock(scope: !5662, file: !5218, line: 232, column: 6)
!5673 = !DILocalVariable(name: "i", scope: !5671, file: !5218, line: 234, type: !105)
!5674 = !DILocalVariable(name: "c", scope: !5675, file: !5218, line: 236, type: !2601)
!5675 = distinct !DILexicalBlock(scope: !5671, file: !5218, line: 235, column: 6)
!5676 = !DILocalVariable(name: "bmask", scope: !5662, file: !5218, line: 249, type: !113)
!5677 = !DILocalVariable(name: "minbucket", scope: !5678, file: !5218, line: 252, type: !105)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !5218, line: 251, column: 19)
!5679 = distinct !DILexicalBlock(scope: !5662, file: !5218, line: 251, column: 6)
!5680 = !DILocalVariable(name: "c", scope: !5678, file: !5218, line: 253, type: !2601)
!5681 = !DILocation(line: 0, scope: !5662)
!5682 = !DILocation(line: 213, column: 11, scope: !5662)
!5683 = !DILocation(line: 232, column: 9, scope: !5672)
!5684 = !DILocation(line: 232, column: 6, scope: !5672)
!5685 = !DILocation(line: 232, column: 6, scope: !5662)
!5686 = !DILocation(line: 236, column: 21, scope: !5675)
!5687 = !DILocation(line: 0, scope: !5671)
!5688 = !DILocation(line: 0, scope: !5675)
!5689 = !DILocation(line: 237, column: 8, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5675, file: !5218, line: 237, column: 8)
!5691 = !DILocation(line: 237, column: 25, scope: !5690)
!5692 = !DILocation(line: 237, column: 8, scope: !5675)
!5693 = !DILocation(line: 238, column: 5, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !5218, line: 237, column: 32)
!5695 = !DILocation(line: 241, column: 14, scope: !5675)
!5696 = !DILocation(line: 241, column: 12, scope: !5675)
!5697 = !DILocation(line: 243, column: 12, scope: !5671)
!5698 = !DILocation(line: 243, column: 16, scope: !5671)
!5699 = distinct !{!5699, !5700, !5701}
!5700 = !DILocation(line: 235, column: 3, scope: !5671)
!5701 = !DILocation(line: 243, column: 35, scope: !5671)
!5702 = !DILocation(line: 249, column: 22, scope: !5662)
!5703 = !DILocation(line: 249, column: 39, scope: !5662)
!5704 = !DILocation(line: 249, column: 36, scope: !5662)
!5705 = !DILocation(line: 251, column: 12, scope: !5679)
!5706 = !DILocation(line: 251, column: 6, scope: !5662)
!5707 = !DILocation(line: 252, column: 19, scope: !5678)
!5708 = !DILocation(line: 0, scope: !5678)
!5709 = !DILocation(line: 253, column: 39, scope: !5678)
!5710 = !DILocation(line: 255, column: 3, scope: !5678)
!5711 = !DILocation(line: 261, column: 1, scope: !5662)
!5712 = distinct !DISubprogram(name: "split_chunks", scope: !5218, file: !5218, line: 109, type: !5356, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5713)
!5713 = !{!5714, !5715, !5716, !5717, !5718, !5719}
!5714 = !DILocalVariable(name: "h", arg: 1, scope: !5712, file: !5218, line: 109, type: !2596)
!5715 = !DILocalVariable(name: "lc", arg: 2, scope: !5712, file: !5218, line: 109, type: !2601)
!5716 = !DILocalVariable(name: "rc", arg: 3, scope: !5712, file: !5218, line: 109, type: !2601)
!5717 = !DILocalVariable(name: "sz0", scope: !5712, file: !5218, line: 114, type: !5363)
!5718 = !DILocalVariable(name: "lsz", scope: !5712, file: !5218, line: 115, type: !5363)
!5719 = !DILocalVariable(name: "rsz", scope: !5712, file: !5218, line: 116, type: !5363)
!5720 = !DILocation(line: 0, scope: !5712)
!5721 = !DILocation(line: 114, column: 18, scope: !5712)
!5722 = !DILocation(line: 115, column: 21, scope: !5712)
!5723 = !DILocation(line: 116, column: 22, scope: !5712)
!5724 = !DILocation(line: 118, column: 2, scope: !5712)
!5725 = !DILocation(line: 119, column: 2, scope: !5712)
!5726 = !DILocation(line: 120, column: 2, scope: !5712)
!5727 = !DILocation(line: 121, column: 25, scope: !5712)
!5728 = !DILocation(line: 121, column: 2, scope: !5712)
!5729 = !DILocation(line: 122, column: 1, scope: !5712)
!5730 = distinct !DISubprogram(name: "chunk_mem", scope: !5218, file: !5218, line: 24, type: !5731, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5733)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!104, !2596, !2601}
!5733 = !{!5734, !5735, !5736, !5737}
!5734 = !DILocalVariable(name: "h", arg: 1, scope: !5730, file: !5218, line: 24, type: !2596)
!5735 = !DILocalVariable(name: "c", arg: 2, scope: !5730, file: !5218, line: 24, type: !2601)
!5736 = !DILocalVariable(name: "buf", scope: !5730, file: !5218, line: 26, type: !2590)
!5737 = !DILocalVariable(name: "ret", scope: !5730, file: !5218, line: 27, type: !432)
!5738 = !DILocation(line: 0, scope: !5730)
!5739 = !DILocation(line: 26, column: 22, scope: !5730)
!5740 = !DILocation(line: 27, column: 38, scope: !5730)
!5741 = !DILocation(line: 31, column: 2, scope: !5730)
!5742 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5218, file: !5218, line: 301, type: !5743, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5745)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{!104, !5221, !111, !111}
!5745 = !{!5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757}
!5746 = !DILocalVariable(name: "heap", arg: 1, scope: !5742, file: !5218, line: 301, type: !5221)
!5747 = !DILocalVariable(name: "align", arg: 2, scope: !5742, file: !5218, line: 301, type: !111)
!5748 = !DILocalVariable(name: "bytes", arg: 3, scope: !5742, file: !5218, line: 301, type: !111)
!5749 = !DILocalVariable(name: "h", scope: !5742, file: !5218, line: 303, type: !2596)
!5750 = !DILocalVariable(name: "gap", scope: !5742, file: !5218, line: 304, type: !111)
!5751 = !DILocalVariable(name: "rew", scope: !5742, file: !5218, line: 304, type: !111)
!5752 = !DILocalVariable(name: "padded_sz", scope: !5742, file: !5218, line: 335, type: !5363)
!5753 = !DILocalVariable(name: "c0", scope: !5742, file: !5218, line: 336, type: !2601)
!5754 = !DILocalVariable(name: "mem", scope: !5742, file: !5218, line: 341, type: !432)
!5755 = !DILocalVariable(name: "end", scope: !5742, file: !5218, line: 345, type: !2590)
!5756 = !DILocalVariable(name: "c", scope: !5742, file: !5218, line: 348, type: !2601)
!5757 = !DILocalVariable(name: "c_end", scope: !5742, file: !5218, line: 349, type: !2601)
!5758 = !DILocation(line: 0, scope: !5742)
!5759 = !DILocation(line: 303, column: 27, scope: !5742)
!5760 = !DILocation(line: 313, column: 16, scope: !5742)
!5761 = !DILocation(line: 313, column: 14, scope: !5742)
!5762 = !DILocation(line: 314, column: 12, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5742, file: !5218, line: 314, column: 6)
!5764 = !DILocation(line: 314, column: 6, scope: !5742)
!5765 = !DILocation(line: 315, column: 9, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5763, file: !5218, line: 314, column: 20)
!5767 = !DILocation(line: 316, column: 9, scope: !5766)
!5768 = !DILocation(line: 318, column: 13, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !5218, line: 318, column: 7)
!5770 = distinct !DILexicalBlock(scope: !5763, file: !5218, line: 317, column: 9)
!5771 = !DILocation(line: 318, column: 7, scope: !5770)
!5772 = !DILocation(line: 319, column: 11, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5769, file: !5218, line: 318, column: 39)
!5774 = !DILocation(line: 319, column: 4, scope: !5773)
!5775 = !DILocation(line: 0, scope: !5763)
!5776 = !DILocation(line: 324, column: 2, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !5218, line: 324, column: 2)
!5778 = distinct !DILexicalBlock(scope: !5742, file: !5218, line: 324, column: 2)
!5779 = !DILocation(line: 324, column: 2, scope: !5778)
!5780 = !DILocation(line: 324, column: 2, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5777, file: !5218, line: 324, column: 2)
!5782 = !DILocation(line: 326, column: 12, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5742, file: !5218, line: 326, column: 6)
!5784 = !DILocation(line: 326, column: 17, scope: !5783)
!5785 = !DILocation(line: 326, column: 20, scope: !5783)
!5786 = !DILocation(line: 326, column: 6, scope: !5742)
!5787 = !DILocation(line: 335, column: 50, scope: !5742)
!5788 = !DILocation(line: 335, column: 58, scope: !5742)
!5789 = !DILocation(line: 335, column: 24, scope: !5742)
!5790 = !DILocation(line: 336, column: 17, scope: !5742)
!5791 = !DILocation(line: 338, column: 9, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5742, file: !5218, line: 338, column: 6)
!5793 = !DILocation(line: 338, column: 6, scope: !5742)
!5794 = !DILocation(line: 341, column: 17, scope: !5742)
!5795 = !DILocation(line: 344, column: 20, scope: !5742)
!5796 = !DILocation(line: 344, column: 8, scope: !5742)
!5797 = !DILocation(line: 344, column: 47, scope: !5742)
!5798 = !DILocation(line: 345, column: 39, scope: !5742)
!5799 = !DILocation(line: 348, column: 16, scope: !5742)
!5800 = !DILocation(line: 349, column: 26, scope: !5742)
!5801 = !DILocation(line: 349, column: 24, scope: !5742)
!5802 = !DILocation(line: 353, column: 8, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5742, file: !5218, line: 353, column: 6)
!5804 = !DILocation(line: 353, column: 6, scope: !5742)
!5805 = !DILocation(line: 354, column: 3, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5803, file: !5218, line: 353, column: 14)
!5807 = !DILocation(line: 355, column: 3, scope: !5806)
!5808 = !DILocation(line: 356, column: 2, scope: !5806)
!5809 = !DILocation(line: 359, column: 6, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5742, file: !5218, line: 359, column: 6)
!5811 = !DILocation(line: 359, column: 24, scope: !5810)
!5812 = !DILocation(line: 359, column: 6, scope: !5742)
!5813 = !DILocation(line: 360, column: 3, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5810, file: !5218, line: 359, column: 33)
!5815 = !DILocation(line: 361, column: 3, scope: !5814)
!5816 = !DILocation(line: 362, column: 2, scope: !5814)
!5817 = !DILocation(line: 364, column: 2, scope: !5742)
!5818 = !DILocation(line: 377, column: 1, scope: !5742)
!5819 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5218, file: !5218, line: 379, type: !5820, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5822)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{!104, !5221, !104, !111, !111}
!5822 = !{!5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5838, !5839}
!5823 = !DILocalVariable(name: "heap", arg: 1, scope: !5819, file: !5218, line: 379, type: !5221)
!5824 = !DILocalVariable(name: "ptr", arg: 2, scope: !5819, file: !5218, line: 379, type: !104)
!5825 = !DILocalVariable(name: "align", arg: 3, scope: !5819, file: !5218, line: 380, type: !111)
!5826 = !DILocalVariable(name: "bytes", arg: 4, scope: !5819, file: !5218, line: 380, type: !111)
!5827 = !DILocalVariable(name: "h", scope: !5819, file: !5218, line: 382, type: !2596)
!5828 = !DILocalVariable(name: "c", scope: !5819, file: !5218, line: 399, type: !2601)
!5829 = !DILocalVariable(name: "rc", scope: !5819, file: !5218, line: 400, type: !2601)
!5830 = !DILocalVariable(name: "align_gap", scope: !5819, file: !5218, line: 401, type: !111)
!5831 = !DILocalVariable(name: "chunks_need", scope: !5819, file: !5218, line: 402, type: !5363)
!5832 = !DILocalVariable(name: "split_size", scope: !5833, file: !5218, line: 435, type: !5363)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !5218, line: 433, column: 61)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !5218, line: 432, column: 13)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !5218, line: 409, column: 13)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !5218, line: 406, column: 13)
!5837 = distinct !DILexicalBlock(scope: !5819, file: !5218, line: 404, column: 6)
!5838 = !DILocalVariable(name: "ptr2", scope: !5819, file: !5218, line: 474, type: !104)
!5839 = !DILocalVariable(name: "prev_size", scope: !5840, file: !5218, line: 477, type: !111)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !5218, line: 476, column: 20)
!5841 = distinct !DILexicalBlock(scope: !5819, file: !5218, line: 476, column: 6)
!5842 = !DILocation(line: 0, scope: !5819)
!5843 = !DILocation(line: 382, column: 27, scope: !5819)
!5844 = !DILocation(line: 385, column: 10, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5819, file: !5218, line: 385, column: 6)
!5846 = !DILocation(line: 385, column: 6, scope: !5819)
!5847 = !DILocation(line: 386, column: 10, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !5218, line: 385, column: 19)
!5849 = !DILocation(line: 386, column: 3, scope: !5848)
!5850 = !DILocation(line: 388, column: 12, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5819, file: !5218, line: 388, column: 6)
!5852 = !DILocation(line: 388, column: 6, scope: !5819)
!5853 = !DILocation(line: 389, column: 3, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5851, file: !5218, line: 388, column: 18)
!5855 = !DILocation(line: 390, column: 3, scope: !5854)
!5856 = !DILocation(line: 393, column: 2, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !5218, line: 393, column: 2)
!5858 = distinct !DILexicalBlock(scope: !5819, file: !5218, line: 393, column: 2)
!5859 = !DILocation(line: 393, column: 2, scope: !5858)
!5860 = !DILocation(line: 393, column: 2, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5857, file: !5218, line: 393, column: 2)
!5862 = !DILocation(line: 395, column: 6, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5819, file: !5218, line: 395, column: 6)
!5864 = !DILocation(line: 395, column: 6, scope: !5819)
!5865 = !DILocation(line: 399, column: 16, scope: !5819)
!5866 = !DILocation(line: 400, column: 17, scope: !5819)
!5867 = !DILocation(line: 401, column: 49, scope: !5819)
!5868 = !DILocation(line: 401, column: 36, scope: !5819)
!5869 = !DILocation(line: 402, column: 52, scope: !5819)
!5870 = !DILocation(line: 402, column: 26, scope: !5819)
!5871 = !DILocation(line: 404, column: 6, scope: !5837)
!5872 = !DILocation(line: 404, column: 12, scope: !5837)
!5873 = !DILocation(line: 406, column: 13, scope: !5836)
!5874 = !DILocation(line: 406, column: 30, scope: !5836)
!5875 = !DILocation(line: 406, column: 13, scope: !5837)
!5876 = !DILocation(line: 409, column: 30, scope: !5835)
!5877 = !DILocation(line: 409, column: 13, scope: !5836)
!5878 = !DILocation(line: 420, column: 24, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5835, file: !5218, line: 409, column: 45)
!5880 = !DILocation(line: 420, column: 3, scope: !5879)
!5881 = !DILocation(line: 421, column: 3, scope: !5879)
!5882 = !DILocation(line: 422, column: 3, scope: !5879)
!5883 = !DILocation(line: 431, column: 3, scope: !5879)
!5884 = !DILocation(line: 432, column: 14, scope: !5834)
!5885 = !DILocation(line: 432, column: 32, scope: !5834)
!5886 = !DILocation(line: 433, column: 26, scope: !5834)
!5887 = !DILocation(line: 433, column: 24, scope: !5834)
!5888 = !DILocation(line: 433, column: 44, scope: !5834)
!5889 = !DILocation(line: 432, column: 13, scope: !5835)
!5890 = !DILocation(line: 435, column: 38, scope: !5833)
!5891 = !DILocation(line: 0, scope: !5833)
!5892 = !DILocation(line: 445, column: 3, scope: !5833)
!5893 = !DILocation(line: 447, column: 20, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5833, file: !5218, line: 447, column: 7)
!5895 = !DILocation(line: 447, column: 18, scope: !5894)
!5896 = !DILocation(line: 447, column: 7, scope: !5833)
!5897 = !DILocation(line: 448, column: 27, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5894, file: !5218, line: 447, column: 39)
!5899 = !DILocation(line: 448, column: 4, scope: !5898)
!5900 = !DILocation(line: 449, column: 4, scope: !5898)
!5901 = !DILocation(line: 450, column: 3, scope: !5898)
!5902 = !DILocation(line: 452, column: 3, scope: !5833)
!5903 = !DILocation(line: 453, column: 3, scope: !5833)
!5904 = !DILocation(line: 474, column: 15, scope: !5819)
!5905 = !DILocation(line: 476, column: 11, scope: !5841)
!5906 = !DILocation(line: 476, column: 6, scope: !5819)
!5907 = !DILocation(line: 477, column: 42, scope: !5840)
!5908 = !DILocation(line: 477, column: 22, scope: !5840)
!5909 = !DILocation(line: 477, column: 60, scope: !5840)
!5910 = !DILocation(line: 0, scope: !5840)
!5911 = !DILocation(line: 479, column: 21, scope: !5840)
!5912 = !DILocation(line: 479, column: 3, scope: !5840)
!5913 = !DILocation(line: 480, column: 3, scope: !5840)
!5914 = !DILocation(line: 481, column: 2, scope: !5840)
!5915 = !DILocation(line: 483, column: 1, scope: !5819)
!5916 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2583, file: !2583, line: 245, type: !5917, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5919)
!5917 = !DISubroutineType(types: !5918)
!5918 = !{!111, !2596, !5363}
!5919 = !{!5920, !5921}
!5920 = !DILocalVariable(name: "h", arg: 1, scope: !5916, file: !2583, line: 245, type: !2596)
!5921 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5916, file: !2583, line: 245, type: !5363)
!5922 = !DILocation(line: 0, scope: !5916)
!5923 = !DILocation(line: 247, column: 20, scope: !5916)
!5924 = !DILocation(line: 247, column: 33, scope: !5916)
!5925 = !DILocation(line: 247, column: 2, scope: !5916)
!5926 = distinct !DISubprogram(name: "sys_heap_init", scope: !5218, file: !5218, line: 485, type: !5927, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !5929)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{null, !5221, !104, !111}
!5929 = !{!5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939}
!5930 = !DILocalVariable(name: "heap", arg: 1, scope: !5926, file: !5218, line: 485, type: !5221)
!5931 = !DILocalVariable(name: "mem", arg: 2, scope: !5926, file: !5218, line: 485, type: !104)
!5932 = !DILocalVariable(name: "bytes", arg: 3, scope: !5926, file: !5218, line: 485, type: !111)
!5933 = !DILocalVariable(name: "addr", scope: !5926, file: !5218, line: 502, type: !22)
!5934 = !DILocalVariable(name: "end", scope: !5926, file: !5218, line: 503, type: !22)
!5935 = !DILocalVariable(name: "heap_sz", scope: !5926, file: !5218, line: 504, type: !5363)
!5936 = !DILocalVariable(name: "h", scope: !5926, file: !5218, line: 509, type: !2596)
!5937 = !DILocalVariable(name: "nb_buckets", scope: !5926, file: !5218, line: 520, type: !105)
!5938 = !DILocalVariable(name: "chunk0_size", scope: !5926, file: !5218, line: 521, type: !5363)
!5939 = !DILocalVariable(name: "i", scope: !5940, file: !5218, line: 526, type: !105)
!5940 = distinct !DILexicalBlock(scope: !5926, file: !5218, line: 526, column: 2)
!5941 = !DILocation(line: 0, scope: !5926)
!5942 = !DILocation(line: 491, column: 3, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !5218, line: 491, column: 3)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !5218, line: 491, column: 3)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !5218, line: 489, column: 46)
!5946 = distinct !DILexicalBlock(scope: !5926, file: !5218, line: 489, column: 6)
!5947 = !DILocation(line: 491, column: 3, scope: !5944)
!5948 = !DILocation(line: 491, column: 3, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5943, file: !5218, line: 491, column: 3)
!5950 = !DILocation(line: 498, column: 2, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !5218, line: 498, column: 2)
!5952 = distinct !DILexicalBlock(scope: !5926, file: !5218, line: 498, column: 2)
!5953 = !DILocation(line: 498, column: 2, scope: !5952)
!5954 = !DILocation(line: 498, column: 2, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5951, file: !5218, line: 498, column: 2)
!5956 = !DILocation(line: 499, column: 8, scope: !5926)
!5957 = !DILocation(line: 502, column: 19, scope: !5926)
!5958 = !DILocation(line: 503, column: 18, scope: !5926)
!5959 = !DILocation(line: 504, column: 27, scope: !5926)
!5960 = !DILocation(line: 504, column: 35, scope: !5926)
!5961 = !DILocation(line: 507, column: 2, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !5218, line: 507, column: 2)
!5963 = distinct !DILexicalBlock(scope: !5926, file: !5218, line: 507, column: 2)
!5964 = !DILocation(line: 507, column: 2, scope: !5963)
!5965 = !DILocation(line: 507, column: 2, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !5218, line: 507, column: 2)
!5967 = !DILocation(line: 509, column: 21, scope: !5926)
!5968 = !DILocation(line: 510, column: 8, scope: !5926)
!5969 = !DILocation(line: 510, column: 13, scope: !5926)
!5970 = !DILocation(line: 511, column: 5, scope: !5926)
!5971 = !DILocation(line: 511, column: 15, scope: !5926)
!5972 = !DILocation(line: 512, column: 5, scope: !5926)
!5973 = !DILocation(line: 512, column: 19, scope: !5926)
!5974 = !DILocation(line: 520, column: 19, scope: !5926)
!5975 = !DILocation(line: 522, column: 21, scope: !5926)
!5976 = !DILocation(line: 521, column: 56, scope: !5926)
!5977 = !DILocation(line: 521, column: 26, scope: !5926)
!5978 = !DILocation(line: 524, column: 2, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !5218, line: 524, column: 2)
!5980 = distinct !DILexicalBlock(scope: !5926, file: !5218, line: 524, column: 2)
!5981 = !DILocation(line: 524, column: 2, scope: !5980)
!5982 = !DILocation(line: 0, scope: !5940)
!5983 = !DILocation(line: 526, column: 20, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5940, file: !5218, line: 526, column: 2)
!5985 = !DILocation(line: 526, column: 2, scope: !5940)
!5986 = !DILocation(line: 524, column: 2, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5979, file: !5218, line: 524, column: 2)
!5988 = !DILocation(line: 531, column: 2, scope: !5926)
!5989 = !DILocation(line: 532, column: 2, scope: !5926)
!5990 = !DILocation(line: 533, column: 2, scope: !5926)
!5991 = !DILocation(line: 536, column: 41, scope: !5926)
!5992 = !DILocation(line: 536, column: 2, scope: !5926)
!5993 = !DILocation(line: 537, column: 2, scope: !5926)
!5994 = !DILocation(line: 540, column: 2, scope: !5926)
!5995 = !DILocation(line: 541, column: 2, scope: !5926)
!5996 = !DILocation(line: 542, column: 2, scope: !5926)
!5997 = !DILocation(line: 544, column: 2, scope: !5926)
!5998 = !DILocation(line: 545, column: 1, scope: !5926)
!5999 = !DILocation(line: 527, column: 17, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5984, file: !5218, line: 526, column: 39)
!6001 = !DILocation(line: 527, column: 22, scope: !6000)
!6002 = !DILocation(line: 526, column: 35, scope: !5984)
!6003 = distinct !{!6003, !5985, !6004}
!6004 = !DILocation(line: 528, column: 2, scope: !5940)
!6005 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2616, file: !2616, line: 1338, type: !6006, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6014)
!6006 = !DISubroutineType(types: !6007)
!6007 = !{!105, !4374, !104, !269, !6008, !113}
!6008 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3992, line: 99, baseType: !6009)
!6009 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3992, line: 40, baseType: !6010)
!6010 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2616, baseType: !6011)
!6011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6012)
!6012 = !{!6013}
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6011, file: !2616, baseType: !104, size: 32)
!6014 = !{!6015, !6016, !6017, !6018, !6019, !6020, !6024, !6025, !6026, !6028, !6033, !6076, !6079, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6091, !6092, !6093, !6097, !6100, !6102, !6105, !6106, !6107, !6112, !6118, !6121, !6125, !6131, !6135, !6138, !6140, !6143}
!6015 = !DILocalVariable(name: "out", arg: 1, scope: !6005, file: !2616, line: 1338, type: !4374)
!6016 = !DILocalVariable(name: "ctx", arg: 2, scope: !6005, file: !2616, line: 1338, type: !104)
!6017 = !DILocalVariable(name: "fp", arg: 3, scope: !6005, file: !2616, line: 1338, type: !269)
!6018 = !DILocalVariable(name: "ap", arg: 4, scope: !6005, file: !2616, line: 1339, type: !6008)
!6019 = !DILocalVariable(name: "flags", arg: 5, scope: !6005, file: !2616, line: 1339, type: !113)
!6020 = !DILocalVariable(name: "buf", scope: !6005, file: !2616, line: 1341, type: !6021)
!6021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !6022)
!6022 = !{!6023}
!6023 = !DISubrange(count: 22)
!6024 = !DILocalVariable(name: "count", scope: !6005, file: !2616, line: 1342, type: !111)
!6025 = !DILocalVariable(name: "sint", scope: !6005, file: !2616, line: 1343, type: !2635)
!6026 = !DILocalVariable(name: "tagged_ap", scope: !6005, file: !2616, line: 1345, type: !6027)
!6027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!6028 = !DILocalVariable(name: "rc", scope: !6029, file: !2616, line: 1377, type: !105)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !2616, line: 1377, column: 4)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !2616, line: 1376, column: 19)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1376, column: 7)
!6032 = distinct !DILexicalBlock(scope: !6005, file: !2616, line: 1375, column: 19)
!6033 = !DILocalVariable(name: "state", scope: !6032, file: !2616, line: 1395, type: !6034)
!6034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6005, file: !2616, line: 1392, size: 192, elements: !6035)
!6035 = !{!6036, !6044}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6034, file: !2616, line: 1393, baseType: !6037, size: 64)
!6037 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2616, line: 166, size: 64, elements: !6038)
!6038 = !{!6039, !6040, !6041, !6042, !6043}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6037, file: !2616, line: 168, baseType: !2635, size: 64)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6037, file: !2616, line: 171, baseType: !2638, size: 64)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6037, file: !2616, line: 174, baseType: !426, size: 64)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6037, file: !2616, line: 177, baseType: !424, size: 64)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6037, file: !2616, line: 180, baseType: !104, size: 32)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6034, file: !2616, line: 1394, baseType: !6045, size: 96, offset: 64)
!6045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2616, line: 189, size: 96, elements: !6046)
!6046 = !{!6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6071}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6045, file: !2616, line: 191, baseType: !492, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6045, file: !2616, line: 194, baseType: !492, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6045, file: !2616, line: 197, baseType: !492, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6045, file: !2616, line: 200, baseType: !492, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6045, file: !2616, line: 203, baseType: !492, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6045, file: !2616, line: 206, baseType: !492, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6045, file: !2616, line: 209, baseType: !492, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6045, file: !2616, line: 212, baseType: !492, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6045, file: !2616, line: 219, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6045, file: !2616, line: 222, baseType: !492, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6045, file: !2616, line: 229, baseType: !492, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6045, file: !2616, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6045, file: !2616, line: 238, baseType: !492, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6045, file: !2616, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6045, file: !2616, line: 244, baseType: !492, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6045, file: !2616, line: 247, baseType: !492, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6045, file: !2616, line: 252, baseType: !492, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6045, file: !2616, line: 257, baseType: !492, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6045, file: !2616, line: 260, baseType: !170, size: 8, offset: 24)
!6066 = !DIDerivedType(tag: DW_TAG_member, scope: !6045, file: !2616, line: 262, baseType: !6067, size: 32, offset: 32)
!6067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6045, file: !2616, line: 262, size: 32, elements: !6068)
!6068 = !{!6069, !6070}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6067, file: !2616, line: 267, baseType: !105, size: 32)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6067, file: !2616, line: 289, baseType: !105, size: 32)
!6071 = !DIDerivedType(tag: DW_TAG_member, scope: !6045, file: !2616, line: 292, baseType: !6072, size: 32, offset: 64)
!6072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6045, file: !2616, line: 292, size: 32, elements: !6073)
!6073 = !{!6074, !6075}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6072, file: !2616, line: 297, baseType: !105, size: 32)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6072, file: !2616, line: 306, baseType: !105, size: 32)
!6076 = !DILocalVariable(name: "conv", scope: !6032, file: !2616, line: 1400, type: !6077)
!6077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6078)
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 32)
!6079 = !DILocalVariable(name: "value", scope: !6032, file: !2616, line: 1401, type: !6080)
!6080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6081)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 32)
!6082 = !DILocalVariable(name: "sp", scope: !6032, file: !2616, line: 1402, type: !269)
!6083 = !DILocalVariable(name: "width", scope: !6032, file: !2616, line: 1403, type: !105)
!6084 = !DILocalVariable(name: "precision", scope: !6032, file: !2616, line: 1404, type: !105)
!6085 = !DILocalVariable(name: "bps", scope: !6032, file: !2616, line: 1405, type: !269)
!6086 = !DILocalVariable(name: "bpe", scope: !6032, file: !2616, line: 1406, type: !269)
!6087 = !DILocalVariable(name: "sign", scope: !6032, file: !2616, line: 1407, type: !103)
!6088 = !DILocalVariable(name: "arg", scope: !6089, file: !2616, line: 1432, type: !105)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !2616, line: 1431, column: 24)
!6090 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1431, column: 7)
!6091 = !DILocalVariable(name: "specifier_cat", scope: !6032, file: !2616, line: 1468, type: !2615)
!6092 = !DILocalVariable(name: "length_mod", scope: !6032, file: !2616, line: 1470, type: !2623)
!6093 = !DILocalVariable(name: "rc", scope: !6094, file: !2616, line: 1575, type: !105)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !2616, line: 1575, column: 4)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !2616, line: 1574, column: 43)
!6096 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1574, column: 7)
!6097 = !DILocalVariable(name: "rc", scope: !6098, file: !2616, line: 1584, type: !105)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1584, column: 4)
!6099 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1582, column: 28)
!6100 = !DILocalVariable(name: "len", scope: !6101, file: !2616, line: 1589, type: !111)
!6101 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1586, column: 13)
!6102 = !DILocalVariable(name: "len", scope: !6103, file: !2616, line: 1641, type: !111)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !2616, line: 1640, column: 24)
!6104 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1640, column: 8)
!6105 = !DILocalVariable(name: "nj_len", scope: !6032, file: !2616, line: 1722, type: !111)
!6106 = !DILocalVariable(name: "pad_len", scope: !6032, file: !2616, line: 1723, type: !105)
!6107 = !DILocalVariable(name: "pad", scope: !6108, file: !2616, line: 1751, type: !103)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !2616, line: 1750, column: 26)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !2616, line: 1750, column: 8)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !2616, line: 1747, column: 18)
!6111 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1747, column: 7)
!6112 = !DILocalVariable(name: "rc", scope: !6113, file: !2616, line: 1758, type: !105)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !2616, line: 1758, column: 7)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !2616, line: 1757, column: 21)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !2616, line: 1757, column: 10)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !2616, line: 1756, column: 26)
!6117 = distinct !DILexicalBlock(scope: !6108, file: !2616, line: 1756, column: 9)
!6118 = !DILocalVariable(name: "rc", scope: !6119, file: !2616, line: 1765, type: !105)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !2616, line: 1765, column: 6)
!6120 = distinct !DILexicalBlock(scope: !6108, file: !2616, line: 1764, column: 25)
!6121 = !DILocalVariable(name: "rc", scope: !6122, file: !2616, line: 1774, type: !105)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !2616, line: 1774, column: 4)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !2616, line: 1773, column: 18)
!6124 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1773, column: 7)
!6125 = !DILocalVariable(name: "rc", scope: !6126, file: !2616, line: 1819, type: !105)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !2616, line: 1819, column: 5)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !2616, line: 1818, column: 44)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !2616, line: 1818, column: 8)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !2616, line: 1817, column: 10)
!6130 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1777, column: 7)
!6131 = !DILocalVariable(name: "rc", scope: !6132, file: !2616, line: 1823, type: !105)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !2616, line: 1823, column: 5)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !2616, line: 1822, column: 26)
!6134 = distinct !DILexicalBlock(scope: !6129, file: !2616, line: 1822, column: 8)
!6135 = !DILocalVariable(name: "rc", scope: !6136, file: !2616, line: 1828, type: !105)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !2616, line: 1828, column: 5)
!6137 = distinct !DILexicalBlock(scope: !6129, file: !2616, line: 1827, column: 26)
!6138 = !DILocalVariable(name: "rc", scope: !6139, file: !2616, line: 1831, type: !105)
!6139 = distinct !DILexicalBlock(scope: !6129, file: !2616, line: 1831, column: 4)
!6140 = !DILocalVariable(name: "rc", scope: !6141, file: !2616, line: 1836, type: !105)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !2616, line: 1836, column: 4)
!6142 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1835, column: 21)
!6143 = !DILabel(scope: !6099, name: "prec_int_pad0", file: !2616, line: 1634)
!6144 = !DILocation(line: 0, scope: !6005)
!6145 = !DILocation(line: 1341, column: 2, scope: !6005)
!6146 = !DILocation(line: 1341, column: 7, scope: !6005)
!6147 = !DILocation(line: 1375, column: 2, scope: !6005)
!6148 = !DILocation(line: 1342, column: 9, scope: !6005)
!6149 = !DILocation(line: 1375, column: 9, scope: !6005)
!6150 = !DILocation(line: 1377, column: 4, scope: !6029)
!6151 = !DILocation(line: 0, scope: !6029)
!6152 = !DILocation(line: 1377, column: 4, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6029, file: !2616, line: 1377, column: 4)
!6154 = distinct !{!6154, !6147, !6155}
!6155 = !DILocation(line: 1839, column: 2, scope: !6005)
!6156 = !DILocation(line: 1392, column: 3, scope: !6032)
!6157 = !DILocation(line: 1395, column: 5, scope: !6032)
!6158 = !DILocation(line: 0, scope: !6032)
!6159 = !DILocation(line: 1409, column: 8, scope: !6032)
!6160 = !DILocation(line: 1414, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1414, column: 7)
!6162 = !DILocation(line: 1414, column: 7, scope: !6032)
!6163 = !DILocation(line: 1415, column: 12, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !2616, line: 1414, column: 25)
!6165 = !DILocation(line: 1417, column: 14, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6164, file: !2616, line: 1417, column: 8)
!6167 = !DILocation(line: 1417, column: 8, scope: !6164)
!6168 = !DILocation(line: 1418, column: 21, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6166, file: !2616, line: 1417, column: 19)
!6170 = !DILocation(line: 1419, column: 13, scope: !6169)
!6171 = !DILocation(line: 1420, column: 4, scope: !6169)
!6172 = !DILocation(line: 1421, column: 20, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6161, file: !2616, line: 1421, column: 14)
!6174 = !DILocation(line: 1421, column: 14, scope: !6161)
!6175 = !DILocation(line: 1431, column: 13, scope: !6090)
!6176 = !DILocation(line: 1431, column: 7, scope: !6032)
!6177 = !DILocation(line: 1432, column: 14, scope: !6089)
!6178 = !DILocation(line: 0, scope: !6089)
!6179 = !DILocation(line: 1434, column: 12, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6089, file: !2616, line: 1434, column: 8)
!6181 = !DILocation(line: 1434, column: 8, scope: !6089)
!6182 = !DILocation(line: 1435, column: 24, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6180, file: !2616, line: 1434, column: 17)
!6184 = !DILocation(line: 1436, column: 4, scope: !6183)
!6185 = !DILocation(line: 1439, column: 20, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6090, file: !2616, line: 1439, column: 14)
!6187 = !DILocation(line: 1439, column: 14, scope: !6090)
!6188 = !DILocation(line: 1469, column: 37, scope: !6032)
!6189 = !DILocation(line: 1448, column: 20, scope: !6032)
!6190 = !DILocation(line: 1449, column: 22, scope: !6032)
!6191 = !DILocation(line: 1471, column: 34, scope: !6032)
!6192 = !DILocation(line: 1478, column: 7, scope: !6032)
!6193 = !DILocation(line: 1479, column: 4, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !2616, line: 1478, column: 40)
!6195 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1478, column: 7)
!6196 = !DILocation(line: 1484, column: 19, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6194, file: !2616, line: 1479, column: 24)
!6198 = !DILocation(line: 1484, column: 17, scope: !6197)
!6199 = !DILocation(line: 1485, column: 5, scope: !6197)
!6200 = !DILocation(line: 1492, column: 20, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6202, file: !2616, line: 1491, column: 12)
!6202 = distinct !DILexicalBlock(scope: !6197, file: !2616, line: 1487, column: 9)
!6203 = !DILocation(line: 1492, column: 18, scope: !6201)
!6204 = !DILocation(line: 1494, column: 5, scope: !6197)
!6205 = !DILocation(line: 1497, column: 23, scope: !6197)
!6206 = !DILocation(line: 1496, column: 17, scope: !6197)
!6207 = !DILocation(line: 1498, column: 5, scope: !6197)
!6208 = !DILocation(line: 1501, column: 23, scope: !6197)
!6209 = !DILocation(line: 1500, column: 17, scope: !6197)
!6210 = !DILocation(line: 1502, column: 5, scope: !6197)
!6211 = !DILocation(line: 1513, column: 23, scope: !6197)
!6212 = !DILocation(line: 1513, column: 6, scope: !6197)
!6213 = !DILocation(line: 1512, column: 17, scope: !6197)
!6214 = !DILocation(line: 1514, column: 5, scope: !6197)
!6215 = !DILocation(line: 0, scope: !6197)
!6216 = !DILocation(line: 1516, column: 8, scope: !6194)
!6217 = !DILocation(line: 1517, column: 19, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !2616, line: 1516, column: 33)
!6219 = distinct !DILexicalBlock(scope: !6194, file: !2616, line: 1516, column: 8)
!6220 = !DILocation(line: 1517, column: 17, scope: !6218)
!6221 = !DILocation(line: 1518, column: 4, scope: !6218)
!6222 = !DILocation(line: 1519, column: 19, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !2616, line: 1518, column: 39)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !2616, line: 1518, column: 15)
!6225 = !DILocation(line: 1519, column: 17, scope: !6223)
!6226 = !DILocation(line: 1520, column: 4, scope: !6223)
!6227 = !DILocation(line: 1522, column: 4, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !2616, line: 1521, column: 47)
!6229 = distinct !DILexicalBlock(scope: !6195, file: !2616, line: 1521, column: 14)
!6230 = !DILocation(line: 1527, column: 19, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6228, file: !2616, line: 1522, column: 24)
!6232 = !DILocation(line: 1527, column: 17, scope: !6231)
!6233 = !DILocation(line: 1528, column: 5, scope: !6231)
!6234 = !DILocation(line: 0, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6231, file: !2616, line: 1530, column: 9)
!6236 = !DILocation(line: 1540, column: 23, scope: !6231)
!6237 = !DILocation(line: 1539, column: 17, scope: !6231)
!6238 = !DILocation(line: 1542, column: 5, scope: !6231)
!6239 = !DILocation(line: 1545, column: 23, scope: !6231)
!6240 = !DILocation(line: 1544, column: 17, scope: !6231)
!6241 = !DILocation(line: 1547, column: 5, scope: !6231)
!6242 = !DILocation(line: 1551, column: 23, scope: !6231)
!6243 = !DILocation(line: 1551, column: 6, scope: !6231)
!6244 = !DILocation(line: 1550, column: 17, scope: !6231)
!6245 = !DILocation(line: 1552, column: 5, scope: !6231)
!6246 = !DILocation(line: 0, scope: !6231)
!6247 = !DILocation(line: 1554, column: 8, scope: !6228)
!6248 = !DILocation(line: 1555, column: 19, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !2616, line: 1554, column: 33)
!6250 = distinct !DILexicalBlock(scope: !6228, file: !2616, line: 1554, column: 8)
!6251 = !DILocation(line: 1555, column: 17, scope: !6249)
!6252 = !DILocation(line: 1556, column: 4, scope: !6249)
!6253 = !DILocation(line: 1557, column: 19, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6255, file: !2616, line: 1556, column: 39)
!6255 = distinct !DILexicalBlock(scope: !6250, file: !2616, line: 1556, column: 15)
!6256 = !DILocation(line: 1557, column: 17, scope: !6254)
!6257 = !DILocation(line: 1558, column: 4, scope: !6254)
!6258 = !DILocation(line: 0, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !2616, line: 1560, column: 8)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !2616, line: 1559, column: 45)
!6261 = distinct !DILexicalBlock(scope: !6229, file: !2616, line: 1559, column: 14)
!6262 = !DILocation(line: 1566, column: 17, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !2616, line: 1565, column: 46)
!6264 = distinct !DILexicalBlock(scope: !6261, file: !2616, line: 1565, column: 14)
!6265 = !DILocation(line: 1566, column: 15, scope: !6263)
!6266 = !DILocation(line: 1567, column: 3, scope: !6263)
!6267 = !DILocation(line: 1574, column: 21, scope: !6096)
!6268 = !DILocation(line: 1575, column: 4, scope: !6094)
!6269 = !DILocation(line: 0, scope: !6094)
!6270 = !DILocation(line: 1575, column: 4, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6094, file: !2616, line: 1575, column: 4)
!6272 = !DILocation(line: 1582, column: 17, scope: !6032)
!6273 = !DILocation(line: 1582, column: 3, scope: !6032)
!6274 = !DILocation(line: 1584, column: 4, scope: !6098)
!6275 = !DILocation(line: 0, scope: !6098)
!6276 = !DILocation(line: 1584, column: 4, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6098, file: !2616, line: 1584, column: 4)
!6278 = !DILocation(line: 1587, column: 31, scope: !6101)
!6279 = !DILocation(line: 1591, column: 18, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6101, file: !2616, line: 1591, column: 8)
!6281 = !DILocation(line: 1591, column: 8, scope: !6101)
!6282 = !DILocation(line: 1592, column: 11, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6280, file: !2616, line: 1591, column: 24)
!6284 = !DILocation(line: 0, scope: !6101)
!6285 = !DILocation(line: 1593, column: 4, scope: !6283)
!6286 = !DILocation(line: 1594, column: 11, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6280, file: !2616, line: 1593, column: 11)
!6288 = !DILocation(line: 1604, column: 51, scope: !6099)
!6289 = !DILocation(line: 1604, column: 13, scope: !6099)
!6290 = !DILocation(line: 1604, column: 11, scope: !6099)
!6291 = !DILocation(line: 1606, column: 4, scope: !6099)
!6292 = !DILocation(line: 1609, column: 14, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1609, column: 8)
!6294 = !DILocation(line: 1609, column: 8, scope: !6099)
!6295 = !DILocation(line: 1619, column: 18, scope: !6099)
!6296 = !DILocation(line: 1620, column: 13, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1620, column: 8)
!6298 = !DILocation(line: 1620, column: 8, scope: !6099)
!6299 = !DILocation(line: 1622, column: 36, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6297, file: !2616, line: 1620, column: 18)
!6301 = !DILocation(line: 1622, column: 17, scope: !6300)
!6302 = !DILocation(line: 1623, column: 4, scope: !6300)
!6303 = !DILocation(line: 1632, column: 29, scope: !6099)
!6304 = !DILocation(line: 1632, column: 10, scope: !6099)
!6305 = !DILocation(line: 1632, column: 4, scope: !6099)
!6306 = !DILocation(line: 1407, column: 8, scope: !6032)
!6307 = !DILocation(line: 0, scope: !6099)
!6308 = !DILocation(line: 1634, column: 3, scope: !6099)
!6309 = !DILocation(line: 1640, column: 18, scope: !6104)
!6310 = !DILocation(line: 1640, column: 8, scope: !6099)
!6311 = !DILocation(line: 1729, column: 13, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1729, column: 7)
!6313 = !DILocation(line: 1641, column: 22, scope: !6103)
!6314 = !DILocation(line: 0, scope: !6103)
!6315 = !DILocation(line: 1646, column: 21, scope: !6103)
!6316 = !DILocation(line: 1649, column: 13, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6103, file: !2616, line: 1649, column: 9)
!6318 = !DILocation(line: 1649, column: 9, scope: !6103)
!6319 = !DILocation(line: 1650, column: 35, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6317, file: !2616, line: 1649, column: 34)
!6321 = !DILocation(line: 1650, column: 23, scope: !6320)
!6322 = !DILocation(line: 1651, column: 5, scope: !6320)
!6323 = !DILocation(line: 1660, column: 15, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1660, column: 8)
!6325 = !DILocation(line: 1660, column: 19, scope: !6324)
!6326 = !DILocation(line: 1660, column: 8, scope: !6099)
!6327 = !DILocation(line: 1661, column: 23, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6324, file: !2616, line: 1660, column: 28)
!6329 = !DILocation(line: 1661, column: 11, scope: !6328)
!6330 = !DILocation(line: 1665, column: 22, scope: !6328)
!6331 = !DILocation(line: 1666, column: 21, scope: !6328)
!6332 = !DILocation(line: 1668, column: 5, scope: !6328)
!6333 = !DILocation(line: 1677, column: 30, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !2616, line: 1676, column: 49)
!6335 = distinct !DILexicalBlock(scope: !6099, file: !2616, line: 1676, column: 8)
!6336 = !DILocation(line: 1677, column: 5, scope: !6334)
!6337 = !DILocation(line: 1680, column: 4, scope: !6099)
!6338 = !DILocation(line: 0, scope: !6280)
!6339 = !DILocation(line: 1597, column: 14, scope: !6101)
!6340 = !DILocation(line: 1699, column: 11, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1699, column: 7)
!6342 = !DILocation(line: 1699, column: 7, scope: !6032)
!6343 = !DILocation(line: 1725, column: 7, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1725, column: 7)
!6345 = !DILocation(line: 1725, column: 12, scope: !6344)
!6346 = !DILocation(line: 1747, column: 13, scope: !6111)
!6347 = !DILocation(line: 1747, column: 7, scope: !6032)
!6348 = !DILocation(line: 1722, column: 24, scope: !6032)
!6349 = !DILocation(line: 1725, column: 7, scope: !6032)
!6350 = !DILocation(line: 1729, column: 7, scope: !6032)
!6351 = !DILocation(line: 1736, column: 13, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6032, file: !2616, line: 1736, column: 7)
!6353 = !DILocation(line: 1735, column: 19, scope: !6032)
!6354 = !DILocation(line: 1736, column: 7, scope: !6032)
!6355 = !DILocation(line: 1748, column: 10, scope: !6110)
!6356 = !DILocation(line: 1750, column: 15, scope: !6109)
!6357 = !DILocation(line: 1750, column: 8, scope: !6110)
!6358 = !DILocation(line: 0, scope: !6108)
!6359 = !DILocation(line: 1756, column: 15, scope: !6117)
!6360 = !DILocation(line: 1756, column: 9, scope: !6108)
!6361 = !DILocation(line: 1758, column: 7, scope: !6113)
!6362 = !DILocation(line: 0, scope: !6113)
!6363 = !DILocation(line: 1758, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6113, file: !2616, line: 1758, column: 7)
!6365 = !DILocation(line: 1764, column: 5, scope: !6108)
!6366 = !DILocation(line: 0, scope: !6110)
!6367 = !DILocation(line: 1764, column: 20, scope: !6108)
!6368 = !DILocation(line: 1764, column: 17, scope: !6108)
!6369 = !DILocation(line: 1765, column: 6, scope: !6119)
!6370 = !DILocation(line: 0, scope: !6119)
!6371 = !DILocation(line: 1765, column: 6, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6119, file: !2616, line: 1765, column: 6)
!6373 = distinct !{!6373, !6365, !6374}
!6374 = !DILocation(line: 1766, column: 5, scope: !6108)
!6375 = !DILocation(line: 1773, column: 12, scope: !6124)
!6376 = !DILocation(line: 1773, column: 7, scope: !6032)
!6377 = !DILocation(line: 1773, column: 7, scope: !6124)
!6378 = !DILocation(line: 1774, column: 4, scope: !6122)
!6379 = !DILocation(line: 0, scope: !6122)
!6380 = !DILocation(line: 1774, column: 4, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6122, file: !2616, line: 1774, column: 4)
!6382 = !DILocation(line: 1818, column: 8, scope: !6128)
!6383 = !DILocation(line: 1818, column: 27, scope: !6128)
!6384 = !DILocation(line: 1818, column: 25, scope: !6128)
!6385 = !DILocation(line: 1818, column: 8, scope: !6129)
!6386 = !DILocation(line: 1819, column: 5, scope: !6126)
!6387 = !DILocation(line: 0, scope: !6126)
!6388 = !DILocation(line: 1819, column: 5, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6126, file: !2616, line: 1819, column: 5)
!6390 = !DILocation(line: 1822, column: 14, scope: !6134)
!6391 = !DILocation(line: 1822, column: 8, scope: !6129)
!6392 = !DILocation(line: 1823, column: 5, scope: !6132)
!6393 = !DILocation(line: 0, scope: !6132)
!6394 = !DILocation(line: 1823, column: 5, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6132, file: !2616, line: 1823, column: 5)
!6396 = !DILocation(line: 1826, column: 20, scope: !6129)
!6397 = !DILocation(line: 1827, column: 4, scope: !6129)
!6398 = !DILocation(line: 0, scope: !6129)
!6399 = !DILocation(line: 1827, column: 21, scope: !6129)
!6400 = !DILocation(line: 1827, column: 18, scope: !6129)
!6401 = !DILocation(line: 1828, column: 5, scope: !6136)
!6402 = !DILocation(line: 0, scope: !6136)
!6403 = !DILocation(line: 1828, column: 5, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6136, file: !2616, line: 1828, column: 5)
!6405 = distinct !{!6405, !6397, !6406}
!6406 = !DILocation(line: 1829, column: 4, scope: !6129)
!6407 = !DILocation(line: 1831, column: 4, scope: !6139)
!6408 = !DILocation(line: 0, scope: !6139)
!6409 = !DILocation(line: 1831, column: 4, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6139, file: !2616, line: 1831, column: 4)
!6411 = !DILocation(line: 1835, column: 16, scope: !6032)
!6412 = !DILocation(line: 1835, column: 3, scope: !6032)
!6413 = !DILocation(line: 1836, column: 4, scope: !6141)
!6414 = !DILocation(line: 0, scope: !6141)
!6415 = !DILocation(line: 1836, column: 4, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6141, file: !2616, line: 1836, column: 4)
!6417 = !DILocation(line: 1837, column: 4, scope: !6142)
!6418 = distinct !{!6418, !6412, !6419}
!6419 = !DILocation(line: 1838, column: 3, scope: !6032)
!6420 = !DILocation(line: 1844, column: 1, scope: !6005)
!6421 = distinct !DISubprogram(name: "extract_conversion", scope: !2616, file: !2616, line: 642, type: !6422, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6424)
!6422 = !DISubroutineType(types: !6423)
!6423 = !{!269, !6078, !269}
!6424 = !{!6425, !6426}
!6425 = !DILocalVariable(name: "conv", arg: 1, scope: !6421, file: !2616, line: 642, type: !6078)
!6426 = !DILocalVariable(name: "sp", arg: 2, scope: !6421, file: !2616, line: 643, type: !269)
!6427 = !DILocation(line: 0, scope: !6421)
!6428 = !DILocation(line: 645, column: 10, scope: !6421)
!6429 = !DILocation(line: 653, column: 2, scope: !6421)
!6430 = !DILocation(line: 654, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6421, file: !2616, line: 654, column: 6)
!6432 = !DILocation(line: 654, column: 10, scope: !6431)
!6433 = !DILocation(line: 654, column: 6, scope: !6421)
!6434 = !DILocation(line: 655, column: 24, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6431, file: !2616, line: 654, column: 18)
!6436 = !DILocation(line: 655, column: 19, scope: !6435)
!6437 = !DILocation(line: 656, column: 3, scope: !6435)
!6438 = !DILocation(line: 659, column: 7, scope: !6421)
!6439 = !DILocation(line: 660, column: 7, scope: !6421)
!6440 = !DILocation(line: 661, column: 7, scope: !6421)
!6441 = !DILocation(line: 662, column: 7, scope: !6421)
!6442 = !DILocation(line: 663, column: 7, scope: !6421)
!6443 = !DILocation(line: 665, column: 2, scope: !6421)
!6444 = !DILocation(line: 666, column: 1, scope: !6421)
!6445 = distinct !DISubprogram(name: "outs", scope: !2616, file: !2616, line: 1319, type: !6446, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6448)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{!105, !4374, !104, !269, !269}
!6448 = !{!6449, !6450, !6451, !6452, !6453, !6454}
!6449 = !DILocalVariable(name: "out", arg: 1, scope: !6445, file: !2616, line: 1319, type: !4374)
!6450 = !DILocalVariable(name: "ctx", arg: 2, scope: !6445, file: !2616, line: 1320, type: !104)
!6451 = !DILocalVariable(name: "sp", arg: 3, scope: !6445, file: !2616, line: 1321, type: !269)
!6452 = !DILocalVariable(name: "ep", arg: 4, scope: !6445, file: !2616, line: 1322, type: !269)
!6453 = !DILocalVariable(name: "count", scope: !6445, file: !2616, line: 1324, type: !111)
!6454 = !DILocalVariable(name: "rc", scope: !6455, file: !2616, line: 1327, type: !105)
!6455 = distinct !DILexicalBlock(scope: !6445, file: !2616, line: 1326, column: 45)
!6456 = !DILocation(line: 0, scope: !6445)
!6457 = !DILocation(line: 1326, column: 2, scope: !6445)
!6458 = !DILocation(line: 1324, column: 9, scope: !6445)
!6459 = !DILocation(line: 1326, column: 13, scope: !6445)
!6460 = !DILocation(line: 1326, column: 19, scope: !6445)
!6461 = !DILocation(line: 1327, column: 21, scope: !6455)
!6462 = !DILocation(line: 1326, column: 36, scope: !6445)
!6463 = !DILocation(line: 1326, column: 39, scope: !6445)
!6464 = !DILocation(line: 1327, column: 24, scope: !6455)
!6465 = !DILocation(line: 1327, column: 16, scope: !6455)
!6466 = !DILocation(line: 1327, column: 12, scope: !6455)
!6467 = !DILocation(line: 0, scope: !6455)
!6468 = !DILocation(line: 1329, column: 10, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6455, file: !2616, line: 1329, column: 7)
!6470 = !DILocation(line: 1329, column: 7, scope: !6455)
!6471 = distinct !{!6471, !6457, !6472}
!6472 = !DILocation(line: 1333, column: 2, scope: !6445)
!6473 = !DILocation(line: 1336, column: 1, scope: !6445)
!6474 = distinct !DISubprogram(name: "encode_uint", scope: !2616, file: !2616, line: 788, type: !6475, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6477)
!6475 = !DISubroutineType(types: !6476)
!6476 = !{!102, !2638, !6078, !102, !269}
!6477 = !{!6478, !6479, !6480, !6481, !6482, !6483, !6485, !6486}
!6478 = !DILocalVariable(name: "value", arg: 1, scope: !6474, file: !2616, line: 788, type: !2638)
!6479 = !DILocalVariable(name: "conv", arg: 2, scope: !6474, file: !2616, line: 789, type: !6078)
!6480 = !DILocalVariable(name: "bps", arg: 3, scope: !6474, file: !2616, line: 790, type: !102)
!6481 = !DILocalVariable(name: "bpe", arg: 4, scope: !6474, file: !2616, line: 791, type: !269)
!6482 = !DILocalVariable(name: "upcase", scope: !6474, file: !2616, line: 793, type: !492)
!6483 = !DILocalVariable(name: "radix", scope: !6474, file: !2616, line: 794, type: !6484)
!6484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6485 = !DILocalVariable(name: "bp", scope: !6474, file: !2616, line: 795, type: !102)
!6486 = !DILocalVariable(name: "lsv", scope: !6487, file: !2616, line: 798, type: !32)
!6487 = distinct !DILexicalBlock(scope: !6474, file: !2616, line: 797, column: 5)
!6488 = !DILocation(line: 0, scope: !6474)
!6489 = !DILocation(line: 793, column: 35, scope: !6474)
!6490 = !DILocation(line: 793, column: 24, scope: !6474)
!6491 = !DILocation(line: 793, column: 16, scope: !6474)
!6492 = !DILocation(line: 794, column: 29, scope: !6474)
!6493 = !DILocation(line: 795, column: 24, scope: !6474)
!6494 = !DILocation(line: 795, column: 17, scope: !6474)
!6495 = !DILocation(line: 797, column: 2, scope: !6474)
!6496 = !DILocation(line: 802, column: 9, scope: !6487)
!6497 = !DILocation(line: 798, column: 22, scope: !6487)
!6498 = !DILocation(line: 0, scope: !6487)
!6499 = !DILocation(line: 800, column: 16, scope: !6487)
!6500 = !DILocation(line: 800, column: 11, scope: !6487)
!6501 = !DILocation(line: 800, column: 4, scope: !6487)
!6502 = !DILocation(line: 800, column: 9, scope: !6487)
!6503 = !DILocation(line: 803, column: 18, scope: !6474)
!6504 = !DILocation(line: 803, column: 24, scope: !6474)
!6505 = !DILocation(line: 803, column: 2, scope: !6487)
!6506 = distinct !{!6506, !6495, !6507}
!6507 = !DILocation(line: 803, column: 37, scope: !6474)
!6508 = !DILocation(line: 808, column: 12, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6474, file: !2616, line: 808, column: 6)
!6510 = !DILocation(line: 808, column: 6, scope: !6474)
!6511 = !DILocation(line: 809, column: 7, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6509, file: !2616, line: 808, column: 23)
!6513 = !DILocation(line: 813, column: 3, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !2616, line: 811, column: 27)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !2616, line: 811, column: 14)
!6516 = distinct !DILexicalBlock(scope: !6512, file: !2616, line: 809, column: 7)
!6517 = !DILocation(line: 0, scope: !6516)
!6518 = !DILocation(line: 818, column: 2, scope: !6474)
!6519 = distinct !DISubprogram(name: "store_count", scope: !2616, file: !2616, line: 1280, type: !6520, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6524)
!6520 = !DISubroutineType(types: !6521)
!6521 = !{null, !6522, !104, !105}
!6522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6523, size: 32)
!6523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6045)
!6524 = !{!6525, !6526, !6527}
!6525 = !DILocalVariable(name: "conv", arg: 1, scope: !6519, file: !2616, line: 1280, type: !6522)
!6526 = !DILocalVariable(name: "dp", arg: 2, scope: !6519, file: !2616, line: 1281, type: !104)
!6527 = !DILocalVariable(name: "count", arg: 3, scope: !6519, file: !2616, line: 1282, type: !105)
!6528 = !DILocation(line: 0, scope: !6519)
!6529 = !DILocation(line: 1284, column: 38, scope: !6519)
!6530 = !DILocation(line: 1284, column: 2, scope: !6519)
!6531 = !DILocation(line: 1286, column: 4, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6519, file: !2616, line: 1284, column: 50)
!6533 = !DILocation(line: 1286, column: 14, scope: !6532)
!6534 = !DILocation(line: 1287, column: 3, scope: !6532)
!6535 = !DILocation(line: 1289, column: 24, scope: !6532)
!6536 = !DILocation(line: 1289, column: 22, scope: !6532)
!6537 = !DILocation(line: 1290, column: 3, scope: !6532)
!6538 = !DILocation(line: 1292, column: 18, scope: !6532)
!6539 = !DILocation(line: 1292, column: 4, scope: !6532)
!6540 = !DILocation(line: 1292, column: 16, scope: !6532)
!6541 = !DILocation(line: 1293, column: 3, scope: !6532)
!6542 = !DILocation(line: 1295, column: 4, scope: !6532)
!6543 = !DILocation(line: 1295, column: 15, scope: !6532)
!6544 = !DILocation(line: 1296, column: 3, scope: !6532)
!6545 = !DILocation(line: 1298, column: 22, scope: !6532)
!6546 = !DILocation(line: 1298, column: 4, scope: !6532)
!6547 = !DILocation(line: 1298, column: 20, scope: !6532)
!6548 = !DILocation(line: 1299, column: 3, scope: !6532)
!6549 = !DILocation(line: 1301, column: 21, scope: !6532)
!6550 = !DILocation(line: 1301, column: 4, scope: !6532)
!6551 = !DILocation(line: 1301, column: 19, scope: !6532)
!6552 = !DILocation(line: 1302, column: 3, scope: !6532)
!6553 = !DILocation(line: 1304, column: 4, scope: !6532)
!6554 = !DILocation(line: 1304, column: 17, scope: !6532)
!6555 = !DILocation(line: 1305, column: 3, scope: !6532)
!6556 = !DILocation(line: 1307, column: 4, scope: !6532)
!6557 = !DILocation(line: 1307, column: 20, scope: !6532)
!6558 = !DILocation(line: 1308, column: 3, scope: !6532)
!6559 = !DILocation(line: 1316, column: 1, scope: !6519)
!6560 = distinct !DISubprogram(name: "isupper", scope: !6561, file: !6561, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6562)
!6561 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6562 = !{!6563}
!6563 = !DILocalVariable(name: "a", arg: 1, scope: !6560, file: !6561, line: 16, type: !105)
!6564 = !DILocation(line: 0, scope: !6560)
!6565 = !DILocation(line: 18, column: 29, scope: !6560)
!6566 = !DILocation(line: 18, column: 45, scope: !6560)
!6567 = !DILocation(line: 18, column: 2, scope: !6560)
!6568 = distinct !DISubprogram(name: "conversion_radix", scope: !2616, file: !2616, line: 761, type: !6569, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6571)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{!111, !103}
!6571 = !{!6572}
!6572 = !DILocalVariable(name: "specifier", arg: 1, scope: !6568, file: !2616, line: 761, type: !103)
!6573 = !DILocation(line: 0, scope: !6568)
!6574 = !DILocation(line: 763, column: 2, scope: !6568)
!6575 = !DILocation(line: 770, column: 3, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6568, file: !2616, line: 763, column: 21)
!6577 = !DILocation(line: 774, column: 3, scope: !6576)
!6578 = !DILocation(line: 0, scope: !6576)
!6579 = !DILocation(line: 776, column: 1, scope: !6568)
!6580 = distinct !DISubprogram(name: "extract_flags", scope: !2616, file: !2616, line: 339, type: !6422, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6581)
!6581 = !{!6582, !6583, !6584}
!6582 = !DILocalVariable(name: "conv", arg: 1, scope: !6580, file: !2616, line: 339, type: !6078)
!6583 = !DILocalVariable(name: "sp", arg: 2, scope: !6580, file: !2616, line: 340, type: !269)
!6584 = !DILocalVariable(name: "loop", scope: !6580, file: !2616, line: 342, type: !492)
!6585 = !DILocation(line: 0, scope: !6580)
!6586 = !DILocation(line: 344, column: 2, scope: !6580)
!6587 = !DILocation(line: 345, column: 11, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6580, file: !2616, line: 344, column: 5)
!6589 = !DILocation(line: 345, column: 3, scope: !6588)
!6590 = !DILocation(line: 351, column: 4, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6588, file: !2616, line: 345, column: 16)
!6592 = !DILocation(line: 354, column: 4, scope: !6591)
!6593 = !DILocation(line: 357, column: 4, scope: !6591)
!6594 = !DILocation(line: 360, column: 4, scope: !6591)
!6595 = !DILocation(line: 0, scope: !6591)
!6596 = !DILocation(line: 370, column: 12, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6580, file: !2616, line: 370, column: 6)
!6598 = !DILocation(line: 370, column: 22, scope: !6597)
!6599 = !DILocation(line: 371, column: 19, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6597, file: !2616, line: 370, column: 42)
!6601 = !DILocation(line: 372, column: 2, scope: !6600)
!6602 = !DILocation(line: 376, column: 2, scope: !6580)
!6603 = distinct !DISubprogram(name: "extract_width", scope: !2616, file: !2616, line: 388, type: !6422, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6604)
!6604 = !{!6605, !6606, !6607, !6608}
!6605 = !DILocalVariable(name: "conv", arg: 1, scope: !6603, file: !2616, line: 388, type: !6078)
!6606 = !DILocalVariable(name: "sp", arg: 2, scope: !6603, file: !2616, line: 389, type: !269)
!6607 = !DILocalVariable(name: "wp", scope: !6603, file: !2616, line: 398, type: !269)
!6608 = !DILocalVariable(name: "width", scope: !6603, file: !2616, line: 399, type: !111)
!6609 = !DILocation(line: 0, scope: !6603)
!6610 = !DILocation(line: 391, column: 8, scope: !6603)
!6611 = !DILocation(line: 391, column: 22, scope: !6603)
!6612 = !DILocation(line: 393, column: 6, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6603, file: !2616, line: 393, column: 6)
!6614 = !DILocation(line: 393, column: 10, scope: !6613)
!6615 = !DILocation(line: 393, column: 6, scope: !6603)
!6616 = !DILocation(line: 394, column: 20, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6613, file: !2616, line: 393, column: 18)
!6618 = !DILocation(line: 395, column: 10, scope: !6617)
!6619 = !DILocation(line: 395, column: 3, scope: !6617)
!6620 = !DILocation(line: 399, column: 17, scope: !6603)
!6621 = !DILocation(line: 401, column: 6, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6603, file: !2616, line: 401, column: 6)
!6623 = !DILocation(line: 401, column: 9, scope: !6622)
!6624 = !DILocation(line: 401, column: 6, scope: !6603)
!6625 = !DILocation(line: 402, column: 23, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6622, file: !2616, line: 401, column: 16)
!6627 = !DILocation(line: 403, column: 9, scope: !6626)
!6628 = !DILocation(line: 403, column: 21, scope: !6626)
!6629 = !DILocation(line: 405, column: 11, scope: !6626)
!6630 = !DILocation(line: 404, column: 21, scope: !6626)
!6631 = !DILocation(line: 406, column: 2, scope: !6626)
!6632 = !DILocation(line: 409, column: 1, scope: !6603)
!6633 = distinct !DISubprogram(name: "extract_prec", scope: !2616, file: !2616, line: 420, type: !6422, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6634)
!6634 = !{!6635, !6636, !6637}
!6635 = !DILocalVariable(name: "conv", arg: 1, scope: !6633, file: !2616, line: 420, type: !6078)
!6636 = !DILocalVariable(name: "sp", arg: 2, scope: !6633, file: !2616, line: 421, type: !269)
!6637 = !DILocalVariable(name: "prec", scope: !6633, file: !2616, line: 435, type: !111)
!6638 = !DILocation(line: 0, scope: !6633)
!6639 = !DILocation(line: 423, column: 24, scope: !6633)
!6640 = !DILocation(line: 423, column: 28, scope: !6633)
!6641 = !DILocation(line: 423, column: 8, scope: !6633)
!6642 = !DILocation(line: 423, column: 21, scope: !6633)
!6643 = !DILocation(line: 425, column: 6, scope: !6633)
!6644 = !DILocation(line: 428, column: 2, scope: !6633)
!6645 = !DILocation(line: 430, column: 6, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6633, file: !2616, line: 430, column: 6)
!6647 = !DILocation(line: 430, column: 10, scope: !6646)
!6648 = !DILocation(line: 430, column: 6, scope: !6633)
!6649 = !DILocation(line: 431, column: 19, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6646, file: !2616, line: 430, column: 18)
!6651 = !DILocation(line: 432, column: 10, scope: !6650)
!6652 = !DILocation(line: 432, column: 3, scope: !6650)
!6653 = !DILocation(line: 435, column: 16, scope: !6633)
!6654 = !DILocation(line: 437, column: 8, scope: !6633)
!6655 = !DILocation(line: 437, column: 19, scope: !6633)
!6656 = !DILocation(line: 439, column: 10, scope: !6633)
!6657 = !DILocation(line: 438, column: 20, scope: !6633)
!6658 = !DILocation(line: 441, column: 9, scope: !6633)
!6659 = !DILocation(line: 442, column: 1, scope: !6633)
!6660 = distinct !DISubprogram(name: "extract_length", scope: !2616, file: !2616, line: 453, type: !6422, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6661)
!6661 = !{!6662, !6663}
!6662 = !DILocalVariable(name: "conv", arg: 1, scope: !6660, file: !2616, line: 453, type: !6078)
!6663 = !DILocalVariable(name: "sp", arg: 2, scope: !6660, file: !2616, line: 454, type: !269)
!6664 = !DILocation(line: 0, scope: !6660)
!6665 = !DILocation(line: 456, column: 10, scope: !6660)
!6666 = !DILocation(line: 456, column: 2, scope: !6660)
!6667 = !DILocation(line: 458, column: 8, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !2616, line: 458, column: 7)
!6669 = distinct !DILexicalBlock(scope: !6660, file: !2616, line: 456, column: 15)
!6670 = !DILocation(line: 458, column: 7, scope: !6668)
!6671 = !DILocation(line: 458, column: 13, scope: !6668)
!6672 = !DILocation(line: 0, scope: !6668)
!6673 = !DILocation(line: 458, column: 7, scope: !6669)
!6674 = !DILocation(line: 459, column: 21, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6668, file: !2616, line: 458, column: 21)
!6676 = !DILocation(line: 460, column: 4, scope: !6675)
!6677 = !DILocation(line: 461, column: 3, scope: !6675)
!6678 = !DILocation(line: 462, column: 21, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6668, file: !2616, line: 461, column: 10)
!6680 = !DILocation(line: 466, column: 8, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6669, file: !2616, line: 466, column: 7)
!6682 = !DILocation(line: 466, column: 7, scope: !6681)
!6683 = !DILocation(line: 466, column: 13, scope: !6681)
!6684 = !DILocation(line: 0, scope: !6681)
!6685 = !DILocation(line: 466, column: 7, scope: !6669)
!6686 = !DILocation(line: 467, column: 21, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6681, file: !2616, line: 466, column: 21)
!6688 = !DILocation(line: 468, column: 4, scope: !6687)
!6689 = !DILocation(line: 469, column: 3, scope: !6687)
!6690 = !DILocation(line: 470, column: 21, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6681, file: !2616, line: 469, column: 10)
!6692 = !DILocation(line: 474, column: 9, scope: !6669)
!6693 = !DILocation(line: 474, column: 20, scope: !6669)
!6694 = !DILocation(line: 475, column: 3, scope: !6669)
!6695 = !DILocation(line: 476, column: 3, scope: !6669)
!6696 = !DILocation(line: 478, column: 9, scope: !6669)
!6697 = !DILocation(line: 478, column: 20, scope: !6669)
!6698 = !DILocation(line: 479, column: 3, scope: !6669)
!6699 = !DILocation(line: 480, column: 3, scope: !6669)
!6700 = !DILocation(line: 482, column: 9, scope: !6669)
!6701 = !DILocation(line: 482, column: 20, scope: !6669)
!6702 = !DILocation(line: 483, column: 3, scope: !6669)
!6703 = !DILocation(line: 484, column: 3, scope: !6669)
!6704 = !DILocation(line: 486, column: 9, scope: !6669)
!6705 = !DILocation(line: 486, column: 20, scope: !6669)
!6706 = !DILocation(line: 487, column: 3, scope: !6669)
!6707 = !DILocation(line: 492, column: 21, scope: !6669)
!6708 = !DILocation(line: 493, column: 3, scope: !6669)
!6709 = !DILocation(line: 495, column: 9, scope: !6669)
!6710 = !DILocation(line: 495, column: 20, scope: !6669)
!6711 = !DILocation(line: 496, column: 3, scope: !6669)
!6712 = !DILocation(line: 498, column: 2, scope: !6660)
!6713 = distinct !DISubprogram(name: "extract_specifier", scope: !2616, file: !2616, line: 513, type: !6422, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6714)
!6714 = !{!6715, !6716, !6717, !6718}
!6715 = !DILocalVariable(name: "conv", arg: 1, scope: !6713, file: !2616, line: 513, type: !6078)
!6716 = !DILocalVariable(name: "sp", arg: 2, scope: !6713, file: !2616, line: 514, type: !269)
!6717 = !DILocalVariable(name: "unsupported", scope: !6713, file: !2616, line: 516, type: !492)
!6718 = !DILabel(scope: !6719, name: "int_conv", file: !2616, line: 526)
!6719 = distinct !DILexicalBlock(scope: !6713, file: !2616, line: 520, column: 27)
!6720 = !DILocation(line: 0, scope: !6713)
!6721 = !DILocation(line: 518, column: 20, scope: !6713)
!6722 = !DILocation(line: 518, column: 8, scope: !6713)
!6723 = !DILocation(line: 518, column: 18, scope: !6713)
!6724 = !DILocation(line: 520, column: 2, scope: !6713)
!6725 = !DILocation(line: 525, column: 3, scope: !6719)
!6726 = !DILocation(line: 0, scope: !6719)
!6727 = !DILocation(line: 526, column: 1, scope: !6719)
!6728 = !DILocation(line: 528, column: 24, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6719, file: !2616, line: 528, column: 7)
!6730 = !DILocation(line: 528, column: 7, scope: !6719)
!6731 = !DILocation(line: 535, column: 23, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6719, file: !2616, line: 535, column: 7)
!6733 = !DILocation(line: 535, column: 7, scope: !6719)
!6734 = !DILocation(line: 536, column: 36, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6732, file: !2616, line: 535, column: 31)
!6736 = !DILocation(line: 537, column: 3, scope: !6735)
!6737 = !DILocation(line: 570, column: 9, scope: !6719)
!6738 = !DILocation(line: 570, column: 23, scope: !6719)
!6739 = !DILocation(line: 575, column: 4, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !2616, line: 573, column: 48)
!6741 = distinct !DILexicalBlock(scope: !6719, file: !2616, line: 573, column: 7)
!6742 = !DILocation(line: 603, column: 9, scope: !6719)
!6743 = !DILocation(line: 603, column: 23, scope: !6719)
!6744 = !DILocation(line: 605, column: 24, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6719, file: !2616, line: 605, column: 7)
!6746 = !DILocation(line: 605, column: 7, scope: !6719)
!6747 = !DILocation(line: 612, column: 9, scope: !6719)
!6748 = !DILocation(line: 612, column: 23, scope: !6719)
!6749 = !DILocation(line: 619, column: 24, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6719, file: !2616, line: 619, column: 7)
!6751 = !DILocation(line: 619, column: 7, scope: !6719)
!6752 = !DILocation(line: 625, column: 9, scope: !6719)
!6753 = !DILocation(line: 625, column: 17, scope: !6719)
!6754 = !DILocation(line: 626, column: 3, scope: !6719)
!6755 = !DILocation(line: 629, column: 20, scope: !6713)
!6756 = !DILocation(line: 629, column: 8, scope: !6713)
!6757 = !DILocation(line: 518, column: 23, scope: !6713)
!6758 = !DILocation(line: 631, column: 2, scope: !6713)
!6759 = distinct !DISubprogram(name: "extract_decimal", scope: !2616, file: !2616, line: 318, type: !6760, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6762)
!6760 = !DISubroutineType(types: !6761)
!6761 = !{!111, !427}
!6762 = !{!6763, !6764, !6765}
!6763 = !DILocalVariable(name: "str", arg: 1, scope: !6759, file: !2616, line: 318, type: !427)
!6764 = !DILocalVariable(name: "sp", scope: !6759, file: !2616, line: 320, type: !269)
!6765 = !DILocalVariable(name: "val", scope: !6759, file: !2616, line: 321, type: !111)
!6766 = !DILocation(line: 0, scope: !6759)
!6767 = !DILocation(line: 320, column: 19, scope: !6759)
!6768 = !DILocation(line: 323, column: 37, scope: !6759)
!6769 = !DILocation(line: 323, column: 17, scope: !6759)
!6770 = !DILocation(line: 323, column: 9, scope: !6759)
!6771 = !DILocation(line: 323, column: 2, scope: !6759)
!6772 = !DILocation(line: 324, column: 13, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6759, file: !2616, line: 323, column: 43)
!6774 = !DILocation(line: 324, column: 24, scope: !6773)
!6775 = !DILocation(line: 324, column: 19, scope: !6773)
!6776 = !DILocation(line: 324, column: 27, scope: !6773)
!6777 = distinct !{!6777, !6771, !6778}
!6778 = !DILocation(line: 325, column: 2, scope: !6759)
!6779 = !DILocation(line: 326, column: 7, scope: !6759)
!6780 = !DILocation(line: 327, column: 2, scope: !6759)
!6781 = distinct !DISubprogram(name: "isdigit", scope: !6561, file: !6561, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6782)
!6782 = !{!6783}
!6783 = !DILocalVariable(name: "a", arg: 1, scope: !6781, file: !6561, line: 43, type: !105)
!6784 = !DILocation(line: 0, scope: !6781)
!6785 = !DILocation(line: 45, column: 29, scope: !6781)
!6786 = !DILocation(line: 45, column: 45, scope: !6781)
!6787 = !DILocation(line: 45, column: 2, scope: !6781)
!6788 = distinct !DISubprogram(name: "assert_post_action", scope: !6789, file: !6789, line: 26, type: !6790, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !6792)
!6789 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6790 = !DISubroutineType(types: !6791)
!6791 = !{null, !269, !32}
!6792 = !{!6793, !6794}
!6793 = !DILocalVariable(name: "file", arg: 1, scope: !6788, file: !6789, line: 26, type: !269)
!6794 = !DILocalVariable(name: "line", arg: 2, scope: !6788, file: !6789, line: 26, type: !32)
!6795 = !DILocation(line: 0, scope: !6788)
!6796 = !DILocation(line: 43, column: 2, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6788, file: !6789, line: 43, column: 2)
!6798 = !{i64 2154851633, i64 2154851649, i64 2154851675, i64 2154851703, i64 2154851723}
!6799 = !DILocation(line: 44, column: 1, scope: !6788)
!6800 = distinct !DISubprogram(name: "assert_print", scope: !6789, file: !6789, line: 46, type: !4984, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !6801)
!6801 = !{!6802, !6803}
!6802 = !DILocalVariable(name: "fmt", arg: 1, scope: !6800, file: !6789, line: 46, type: !269)
!6803 = !DILocalVariable(name: "ap", scope: !6800, file: !6789, line: 48, type: !6804)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3992, line: 99, baseType: !6805)
!6805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3992, line: 40, baseType: !6806)
!6806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6789, baseType: !6807)
!6807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6808)
!6808 = !{!6809}
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6807, file: !6789, line: 48, baseType: !104, size: 32)
!6810 = !DILocation(line: 0, scope: !6800)
!6811 = !DILocation(line: 48, column: 2, scope: !6800)
!6812 = !DILocation(line: 48, column: 10, scope: !6800)
!6813 = !DILocation(line: 50, column: 2, scope: !6800)
!6814 = !DILocation(line: 52, column: 2, scope: !6800)
!6815 = !DILocation(line: 54, column: 2, scope: !6800)
!6816 = !DILocation(line: 55, column: 1, scope: !6800)
!6817 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6818, file: !6818, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !397)
!6818 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!6819 = !DILocation(line: 11, column: 1, scope: !6817)
!6820 = !{i64 2147565036, i64 2147565079, i64 2147565119}
!6821 = !DILocation(line: 12, column: 1, scope: !6817)
!6822 = !{i64 2147569263, i64 2147569306, i64 2147569346}
!6823 = !DILocation(line: 13, column: 1, scope: !6817)
!6824 = !{i64 2147569472, i64 2147569515, i64 2147569555}
!6825 = !DILocation(line: 14, column: 1, scope: !6817)
!6826 = !{i64 2147569641, i64 2147569684, i64 2147569724}
!6827 = !DILocation(line: 15, column: 1, scope: !6817)
!6828 = !{i64 2147569804, i64 2147569847, i64 2147569887}
!6829 = !DILocation(line: 16, column: 1, scope: !6817)
!6830 = !{i64 2147569988, i64 2147570031, i64 2147570071}
!6831 = !DILocation(line: 17, column: 1, scope: !6817)
!6832 = !{i64 2147570167, i64 2147570210, i64 2147570250}
!6833 = !DILocation(line: 18, column: 1, scope: !6817)
!6834 = !{i64 2147570410, i64 2147570453, i64 2147570493}
!6835 = !DILocation(line: 19, column: 1, scope: !6817)
!6836 = !{i64 2147570645, i64 2147570688, i64 2147570728}
!6837 = !DILocation(line: 20, column: 1, scope: !6817)
!6838 = !{i64 2147570832, i64 2147570875, i64 2147570915}
!6839 = !DILocation(line: 21, column: 1, scope: !6817)
!6840 = !{i64 2147571048, i64 2147571091, i64 2147571131}
!6841 = !DILocation(line: 22, column: 1, scope: !6817)
!6842 = !{i64 2147571251, i64 2147571294, i64 2147571334}
!6843 = !DILocation(line: 23, column: 1, scope: !6817)
!6844 = !{i64 2147571454, i64 2147571497, i64 2147571537}
!6845 = !DILocation(line: 24, column: 1, scope: !6817)
!6846 = !{i64 2147571629, i64 2147571672, i64 2147571712}
!6847 = !DILocation(line: 25, column: 1, scope: !6817)
!6848 = !{i64 2147571837, i64 2147571880, i64 2147571920}
!6849 = !DILocation(line: 26, column: 1, scope: !6817)
!6850 = !{i64 2147572041, i64 2147572084, i64 2147572124}
!6851 = !DILocation(line: 27, column: 1, scope: !6817)
!6852 = !{i64 2147572234, i64 2147572277, i64 2147572317}
!6853 = !DILocation(line: 28, column: 1, scope: !6817)
!6854 = !{i64 2147572436, i64 2147572479, i64 2147572519}
!6855 = !DILocation(line: 29, column: 1, scope: !6817)
!6856 = !{i64 2147572635, i64 2147572678, i64 2147572718}
!6857 = !DILocation(line: 30, column: 1, scope: !6817)
!6858 = !{i64 2147572862, i64 2147572905, i64 2147572945}
!6859 = !DILocation(line: 31, column: 1, scope: !6817)
!6860 = !{i64 2147573064, i64 2147573107, i64 2147573147}
!6861 = !DILocation(line: 32, column: 1, scope: !6817)
!6862 = !{i64 2147573279, i64 2147573322, i64 2147573362}
!6863 = !DILocation(line: 33, column: 1, scope: !6817)
!6864 = !{i64 2147573451, i64 2147573494, i64 2147573534}
!6865 = !DILocation(line: 34, column: 1, scope: !6817)
!6866 = !{i64 2147573653, i64 2147573696, i64 2147573736}
!6867 = !DILocation(line: 35, column: 1, scope: !6817)
!6868 = !{i64 2147573879, i64 2147573922, i64 2147573962}
!6869 = !DILocation(line: 36, column: 1, scope: !6817)
!6870 = !{i64 2147574078, i64 2147574121, i64 2147574161}
!6871 = !DILocation(line: 37, column: 1, scope: !6817)
!6872 = !{i64 2147574253, i64 2147574296, i64 2147574336}
!6873 = !DILocation(line: 38, column: 1, scope: !6817)
!6874 = !{i64 2147574521, i64 2147574564, i64 2147574604}
!6875 = !DILocation(line: 39, column: 1, scope: !6817)
!6876 = !{i64 2147574774, i64 2147574817, i64 2147574857}
!6877 = !DILocation(line: 40, column: 1, scope: !6817)
!6878 = !{i64 2147575015, i64 2147575058, i64 2147575098}
!6879 = !DILocation(line: 41, column: 1, scope: !6817)
!6880 = !{i64 2147575250, i64 2147575293, i64 2147575333}
!6881 = !DILocation(line: 42, column: 1, scope: !6817)
!6882 = !{i64 2147575482, i64 2147575525, i64 2147575565}
!6883 = !DILocation(line: 43, column: 1, scope: !6817)
!6884 = !{i64 2147575708, i64 2147575751, i64 2147575791}
!6885 = !DILocation(line: 44, column: 1, scope: !6817)
!6886 = !{i64 2147575946, i64 2147575989, i64 2147576029}
!6887 = !DILocation(line: 45, column: 1, scope: !6817)
!6888 = !{i64 2147576172, i64 2147576215, i64 2147576255}
!6889 = !DILocation(line: 46, column: 1, scope: !6817)
!6890 = !{i64 2147576407, i64 2147576450, i64 2147576490}
!6891 = !DILocation(line: 47, column: 1, scope: !6817)
!6892 = !{i64 2147576642, i64 2147576685, i64 2147576725}
!6893 = !DILocation(line: 48, column: 1, scope: !6817)
!6894 = !{i64 2147576880, i64 2147576923, i64 2147576963}
!6895 = !DILocation(line: 49, column: 1, scope: !6817)
!6896 = !{i64 2147577154, i64 2147577197, i64 2147577237}
!6897 = !DILocation(line: 50, column: 1, scope: !6817)
!6898 = !{i64 2147577392, i64 2147577435, i64 2147577475}
!6899 = !DILocation(line: 51, column: 1, scope: !6817)
!6900 = !{i64 2147577645, i64 2147577688, i64 2147577728}
!6901 = !DILocation(line: 52, column: 1, scope: !6817)
!6902 = !{i64 2147577889, i64 2147577932, i64 2147577972}
!6903 = !DILocation(line: 53, column: 1, scope: !6817)
!6904 = !{i64 2147582200, i64 2147582243, i64 2147582283}
!6905 = !DILocation(line: 54, column: 1, scope: !6817)
!6906 = !{i64 2147582441, i64 2147582484, i64 2147582524}
!6907 = !DILocation(line: 55, column: 1, scope: !6817)
!6908 = !{i64 2147582688, i64 2147582731, i64 2147582771}
!6909 = !DILocation(line: 56, column: 1, scope: !6817)
!6910 = !{i64 2147582923, i64 2147582966, i64 2147583006}
!6911 = !DILocation(line: 57, column: 1, scope: !6817)
!6912 = !{i64 2147583158, i64 2147583201, i64 2147583241}
!6913 = !DILocation(line: 58, column: 1, scope: !6817)
!6914 = !{i64 2147583393, i64 2147583436, i64 2147583476}
!6915 = !DILocation(line: 59, column: 1, scope: !6817)
!6916 = !{i64 2147583631, i64 2147583674, i64 2147583714}
!6917 = !DILocation(line: 60, column: 1, scope: !6817)
!6918 = !{i64 2147583872, i64 2147583915, i64 2147583955}
!6919 = !DILocation(line: 61, column: 1, scope: !6817)
!6920 = !{i64 2147584152, i64 2147584195, i64 2147584235}
!6921 = !DILocation(line: 62, column: 1, scope: !6817)
!6922 = !{i64 2147584411, i64 2147584454, i64 2147584494}
!6923 = !DILocation(line: 63, column: 1, scope: !6817)
!6924 = !{i64 2147584649, i64 2147584692, i64 2147584732}
!6925 = !DILocation(line: 64, column: 1, scope: !6817)
!6926 = !{i64 2147584908, i64 2147584951, i64 2147584991}
!6927 = !DILocation(line: 65, column: 1, scope: !6817)
!6928 = !{i64 2147585137, i64 2147585180, i64 2147585220}
!6929 = !DILocation(line: 66, column: 1, scope: !6817)
!6930 = !{i64 2147585345, i64 2147585388, i64 2147585428}
!6931 = !DILocation(line: 67, column: 1, scope: !6817)
!6932 = !{i64 2147585556, i64 2147585599, i64 2147585639}
!6933 = !DILocation(line: 68, column: 1, scope: !6817)
!6934 = !{i64 2147585791, i64 2147585834, i64 2147585874}
!6935 = !DILocation(line: 69, column: 1, scope: !6817)
!6936 = !{i64 2147586020, i64 2147586063, i64 2147586103}
!6937 = !DILocation(line: 70, column: 1, scope: !6817)
!6938 = !{i64 2147586237, i64 2147586280, i64 2147586320}
!6939 = !DILocation(line: 71, column: 1, scope: !6817)
!6940 = !{i64 2147586466, i64 2147586509, i64 2147586549}
!6941 = !DILocation(line: 72, column: 1, scope: !6817)
!6942 = !{i64 2147586704, i64 2147586747, i64 2147586787}
!6943 = !DILocation(line: 73, column: 1, scope: !6817)
!6944 = !{i64 2147586936, i64 2147586979, i64 2147587019}
!6945 = !DILocation(line: 74, column: 1, scope: !6817)
!6946 = !{i64 2147587162, i64 2147587205, i64 2147587245}
!6947 = !DILocation(line: 75, column: 1, scope: !6817)
!6948 = !{i64 2147587379, i64 2147587422, i64 2147587462}
!6949 = !DILocation(line: 76, column: 1, scope: !6817)
!6950 = !{i64 2147587611, i64 2147587654, i64 2147587694}
!6951 = !DILocation(line: 77, column: 1, scope: !6817)
!6952 = !{i64 2147587837, i64 2147587880, i64 2147587920}
!6953 = !DILocation(line: 78, column: 1, scope: !6817)
!6954 = !{i64 2147588051, i64 2147588094, i64 2147588134}
!6955 = !DILocation(line: 79, column: 1, scope: !6817)
!6956 = !{i64 2147588271, i64 2147588314, i64 2147588354}
!6957 = !DILocation(line: 80, column: 1, scope: !6817)
!6958 = !{i64 2147588503, i64 2147588546, i64 2147588586}
!6959 = !DILocation(line: 81, column: 1, scope: !6817)
!6960 = !{i64 2147588711, i64 2147588754, i64 2147588794}
!6961 = !DILocation(line: 82, column: 1, scope: !6817)
!6962 = !{i64 2147588916, i64 2147588959, i64 2147588999}
!6963 = !DILocation(line: 83, column: 1, scope: !6817)
!6964 = !{i64 2147589133, i64 2147589176, i64 2147589216}
!6965 = !DILocation(line: 84, column: 1, scope: !6817)
!6966 = !{i64 2147589347, i64 2147589390, i64 2147589430}
!6967 = !DILocation(line: 85, column: 1, scope: !6817)
!6968 = !{i64 2147589573, i64 2147589616, i64 2147589656}
!6969 = !DILocation(line: 86, column: 1, scope: !6817)
!6970 = !{i64 2147589793, i64 2147589836, i64 2147589876}
!6971 = !DILocation(line: 87, column: 1, scope: !6817)
!6972 = !{i64 2147589998, i64 2147590041, i64 2147590081}
!6973 = !DILocation(line: 88, column: 1, scope: !6817)
!6974 = !{i64 2147594291, i64 2147594334, i64 2147594374}
!6975 = !DILocation(line: 89, column: 1, scope: !6817)
!6976 = !{i64 2147594526, i64 2147594569, i64 2147594609}
!6977 = !DILocation(line: 90, column: 1, scope: !6817)
!6978 = !{i64 2147594776, i64 2147594819, i64 2147594859}
!6979 = !DILocation(line: 91, column: 1, scope: !6817)
!6980 = !{i64 2147595026, i64 2147595069, i64 2147595109}
!6981 = !DILocation(line: 92, column: 1, scope: !6817)
!6982 = !{i64 2147595264, i64 2147595307, i64 2147595347}
!6983 = !DILocation(line: 93, column: 1, scope: !6817)
!6984 = !{i64 2147595475, i64 2147595518, i64 2147595558}
!6985 = !DILocation(line: 94, column: 1, scope: !6817)
!6986 = !{i64 2147595692, i64 2147595735, i64 2147595775}
!6987 = !DILocation(line: 95, column: 1, scope: !6817)
!6988 = !{i64 2147595888, i64 2147595931, i64 2147595971}
!6989 = !DILocation(line: 96, column: 1, scope: !6817)
!6990 = !{i64 2147596090, i64 2147596133, i64 2147596173}
!6991 = !DILocation(line: 97, column: 1, scope: !6817)
!6992 = !{i64 2147596283, i64 2147596326, i64 2147596366}
!6993 = !DILocation(line: 98, column: 1, scope: !6817)
!6994 = !{i64 2147596491, i64 2147596534, i64 2147596574}
!6995 = !DILocation(line: 99, column: 1, scope: !6817)
!6996 = !{i64 2147596687, i64 2147596730, i64 2147596770}
!6997 = !DILocation(line: 100, column: 1, scope: !6817)
!6998 = !{i64 2147596937, i64 2147596980, i64 2147597020}
!6999 = !DILocation(line: 101, column: 1, scope: !6817)
!7000 = !{i64 2147597148, i64 2147597191, i64 2147597231}
!7001 = !DILocation(line: 102, column: 1, scope: !6817)
!7002 = !{i64 2147597347, i64 2147597390, i64 2147597430}
!7003 = !DILocation(line: 103, column: 1, scope: !6817)
!7004 = !{i64 2147597522, i64 2147597565, i64 2147597605}
!7005 = !DILocation(line: 104, column: 1, scope: !6817)
!7006 = !{i64 2147597706, i64 2147597749, i64 2147597789}
!7007 = !DILocation(line: 105, column: 1, scope: !6817)
!7008 = !{i64 2147597908, i64 2147597951, i64 2147597991}
!7009 = !DILocation(line: 106, column: 1, scope: !6817)
!7010 = !{i64 2147598089, i64 2147598132, i64 2147598172}
!7011 = !DILocation(line: 107, column: 1, scope: !6817)
!7012 = !{i64 2147598288, i64 2147598331, i64 2147598371}
!7013 = !DILocation(line: 108, column: 1, scope: !6817)
!7014 = !{i64 2147598493, i64 2147598536, i64 2147598576}
!7015 = !DILocation(line: 109, column: 1, scope: !6817)
!7016 = !{i64 2147598686, i64 2147598729, i64 2147598769}
!7017 = !DILocation(line: 110, column: 1, scope: !6817)
!7018 = !{i64 2147598852, i64 2147598895, i64 2147598935}
!7019 = !DILocation(line: 111, column: 1, scope: !6817)
!7020 = !{i64 2147599036, i64 2147599079, i64 2147599119}
!7021 = !DILocation(line: 112, column: 1, scope: !6817)
!7022 = !{i64 2147599226, i64 2147599269, i64 2147599309}
!7023 = !DILocation(line: 113, column: 1, scope: !6817)
!7024 = !{i64 2147599410, i64 2147599453, i64 2147599493}
!7025 = !DILocation(line: 114, column: 1, scope: !6817)
!7026 = !{i64 2147599624, i64 2147599667, i64 2147599707}
!7027 = !DILocation(line: 115, column: 1, scope: !6817)
!7028 = !{i64 2147599835, i64 2147599878, i64 2147599918}
!7029 = !DILocation(line: 116, column: 1, scope: !6817)
!7030 = !{i64 2147600058, i64 2147600101, i64 2147600141}
!7031 = !DILocation(line: 117, column: 1, scope: !6817)
!7032 = !{i64 2147600242, i64 2147600285, i64 2147600325}
!7033 = !DILocation(line: 118, column: 1, scope: !6817)
!7034 = !{i64 2147600456, i64 2147600499, i64 2147600539}
!7035 = !DILocation(line: 119, column: 1, scope: !6817)
!7036 = !{i64 2147600622, i64 2147600665, i64 2147600705}
!7037 = !DILocation(line: 120, column: 1, scope: !6817)
!7038 = !{i64 2147600803, i64 2147600846, i64 2147600886}
!7039 = !DILocation(line: 121, column: 1, scope: !6817)
!7040 = !{i64 2147600996, i64 2147601039, i64 2147601079}
!7041 = !DILocation(line: 122, column: 1, scope: !6817)
!7042 = !{i64 2147601222, i64 2147601265, i64 2147601305}
!7043 = !DILocation(line: 123, column: 1, scope: !6817)
!7044 = !{i64 2147601436, i64 2147601479, i64 2147601519}
!7045 = !DILocation(line: 124, column: 1, scope: !6817)
!7046 = !{i64 2147601662, i64 2147601705, i64 2147601745}
!7047 = !DILocation(line: 125, column: 1, scope: !6817)
!7048 = !{i64 2147601879, i64 2147601922, i64 2147601962}
!7049 = !DILocation(line: 126, column: 1, scope: !6817)
!7050 = !{i64 2147602156, i64 2147602199, i64 2147602239}
!7051 = !DILocation(line: 127, column: 1, scope: !6817)
!7052 = !{i64 2147602382, i64 2147602425, i64 2147602465}
!7053 = !DILocation(line: 128, column: 1, scope: !6817)
!7054 = !{i64 2147602590, i64 2147602633, i64 2147602673}
!7055 = !DILocation(line: 129, column: 1, scope: !6817)
!7056 = !{i64 2147602786, i64 2147602829, i64 2147602869}
!7057 = !DILocation(line: 130, column: 1, scope: !6817)
!7058 = !{i64 2147603051, i64 2147603094, i64 2147603134}
!7059 = !DILocation(line: 131, column: 1, scope: !6817)
!7060 = !{i64 2147607326, i64 2147607369, i64 2147607409}
!7061 = !DILocation(line: 132, column: 1, scope: !6817)
!7062 = !{i64 2147607501, i64 2147607544, i64 2147607584}
!7063 = !DILocation(line: 133, column: 1, scope: !6817)
!7064 = !{i64 2147607755, i64 2147607798, i64 2147607838}
!7065 = !DILocation(line: 134, column: 1, scope: !6817)
!7066 = !{i64 2147607954, i64 2147607997, i64 2147608037}
!7067 = !DILocation(line: 135, column: 1, scope: !6817)
!7068 = !{i64 2147608196, i64 2147608239, i64 2147608279}
!7069 = !DILocation(line: 136, column: 1, scope: !6817)
!7070 = !{i64 2147608359, i64 2147608402, i64 2147608442}
!7071 = !DILocation(line: 137, column: 1, scope: !6817)
!7072 = !{i64 2147608546, i64 2147608589, i64 2147608629}
!7073 = !DILocation(line: 138, column: 1, scope: !6817)
!7074 = !{i64 2147608754, i64 2147608797, i64 2147608837}
!7075 = !DILocation(line: 139, column: 1, scope: !6817)
!7076 = !{i64 2147608950, i64 2147608993, i64 2147609033}
!7077 = !DILocation(line: 140, column: 1, scope: !6817)
!7078 = !{i64 2147609143, i64 2147609186, i64 2147609226}
!7079 = !DILocation(line: 141, column: 1, scope: !6817)
!7080 = !{i64 2147609326, i64 2147609369, i64 2147609409}
!7081 = !DILocation(line: 142, column: 1, scope: !6817)
!7082 = !{i64 2147609540, i64 2147609583, i64 2147609623}
!7083 = !DILocation(line: 143, column: 1, scope: !6817)
!7084 = !{i64 2147609751, i64 2147609794, i64 2147609834}
!7085 = !DILocation(line: 144, column: 1, scope: !6817)
!7086 = !{i64 2147609971, i64 2147610014, i64 2147610054}
!7087 = !DILocation(line: 145, column: 1, scope: !6817)
!7088 = !{i64 2147610178, i64 2147610221, i64 2147610261}
!7089 = !DILocation(line: 146, column: 1, scope: !6817)
!7090 = !{i64 2147610451, i64 2147610494, i64 2147610534}
!7091 = !DILocation(line: 147, column: 1, scope: !6817)
!7092 = !{i64 2147610699, i64 2147610742, i64 2147610782}
!7093 = !DILocation(line: 148, column: 1, scope: !6817)
!7094 = !{i64 2147610898, i64 2147610941, i64 2147610981}
!7095 = !DILocation(line: 149, column: 1, scope: !6817)
!7096 = !{i64 2147611133, i64 2147611176, i64 2147611216}
!7097 = !DILocation(line: 150, column: 1, scope: !6817)
!7098 = !{i64 2147611383, i64 2147611426, i64 2147611466}
!7099 = !DILocation(line: 151, column: 1, scope: !6817)
!7100 = !{i64 2147611585, i64 2147611628, i64 2147611668}
!7101 = !DILocation(line: 152, column: 1, scope: !6817)
!7102 = !{i64 2147611808, i64 2147611851, i64 2147611891}
!7103 = !DILocation(line: 153, column: 1, scope: !6817)
!7104 = !{i64 2147612022, i64 2147612065, i64 2147612105}
!7105 = !DILocation(line: 154, column: 1, scope: !6817)
!7106 = !{i64 2147612266, i64 2147612309, i64 2147612349}
!7107 = !DILocation(line: 155, column: 1, scope: !6817)
!7108 = !{i64 2147612495, i64 2147612538, i64 2147612578}
!7109 = !DILocation(line: 156, column: 1, scope: !6817)
!7110 = !{i64 2147612724, i64 2147612767, i64 2147612807}
!7111 = !DILocation(line: 157, column: 1, scope: !6817)
!7112 = !{i64 2147612932, i64 2147612975, i64 2147613015}
!7113 = !DILocation(line: 158, column: 1, scope: !6817)
!7114 = !{i64 2147613170, i64 2147613213, i64 2147613253}
!7115 = !DILocation(line: 159, column: 1, scope: !6817)
!7116 = !{i64 2147613396, i64 2147613439, i64 2147613479}
!7117 = !DILocation(line: 160, column: 1, scope: !6817)
!7118 = !{i64 2147613655, i64 2147613698, i64 2147613738}
!7119 = !DILocation(line: 161, column: 1, scope: !6817)
!7120 = !{i64 2147613875, i64 2147613918, i64 2147613958}
!7121 = !DILocation(line: 162, column: 1, scope: !6817)
!7122 = !{i64 2147614107, i64 2147614150, i64 2147614190}
!7123 = !DILocation(line: 163, column: 1, scope: !6817)
!7124 = !{i64 2147614348, i64 2147614391, i64 2147614431}
!7125 = !DILocation(line: 164, column: 1, scope: !6817)
!7126 = !{i64 2147614589, i64 2147614632, i64 2147614672}
!7127 = !DILocation(line: 165, column: 1, scope: !6817)
!7128 = !{i64 2147614812, i64 2147614855, i64 2147614895}
!7129 = !DILocation(line: 166, column: 1, scope: !6817)
!7130 = !{i64 2147615029, i64 2147615072, i64 2147615112}
!7131 = !DILocation(line: 167, column: 1, scope: !6817)
!7132 = !{i64 2147615270, i64 2147615313, i64 2147615353}
!7133 = !DILocation(line: 168, column: 1, scope: !6817)
!7134 = !{i64 2147615457, i64 2147615500, i64 2147615540}
!7135 = !DILocation(line: 169, column: 1, scope: !6817)
!7136 = !{i64 2147615644, i64 2147615687, i64 2147615727}
!7137 = !DILocation(line: 170, column: 1, scope: !6817)
!7138 = !{i64 2147615807, i64 2147615850, i64 2147615890}
!7139 = !DILocation(line: 171, column: 1, scope: !6817)
!7140 = !{i64 2147620073, i64 2147620116, i64 2147620156}
!7141 = !DILocation(line: 172, column: 1, scope: !6817)
!7142 = !{i64 2147620266, i64 2147620309, i64 2147620349}
!7143 = !DILocation(line: 173, column: 1, scope: !6817)
!7144 = !{i64 2147620525, i64 2147620568, i64 2147620608}
!7145 = !DILocation(line: 174, column: 1, scope: !6817)
!7146 = !{i64 2147620748, i64 2147620791, i64 2147620831}
!7147 = !DILocation(line: 175, column: 1, scope: !6817)
!7148 = !{i64 2147620977, i64 2147621020, i64 2147621060}
!7149 = !DILocation(line: 176, column: 1, scope: !6817)
!7150 = !{i64 2147621191, i64 2147621234, i64 2147621274}
!7151 = !DILocation(line: 177, column: 1, scope: !6817)
!7152 = !{i64 2147621393, i64 2147621436, i64 2147621476}
!7153 = !DILocation(line: 178, column: 1, scope: !6817)
!7154 = !{i64 2147621589, i64 2147621632, i64 2147621672}
!7155 = !DILocation(line: 179, column: 1, scope: !6817)
!7156 = !{i64 2147621801, i64 2147621844, i64 2147621884}
!7157 = !DILocation(line: 180, column: 1, scope: !6817)
!7158 = !{i64 2147622022, i64 2147622065, i64 2147622105}
!7159 = !DILocation(line: 181, column: 1, scope: !6817)
!7160 = !{i64 2147622236, i64 2147622279, i64 2147622319}
!7161 = !DILocation(line: 182, column: 1, scope: !6817)
!7162 = !{i64 2147622426, i64 2147622469, i64 2147622509}
!7163 = !DILocation(line: 183, column: 1, scope: !6817)
!7164 = !{i64 2147622625, i64 2147622668, i64 2147622708}
!7165 = !DILocation(line: 184, column: 1, scope: !6817)
!7166 = !{i64 2147622830, i64 2147622873, i64 2147622913}
!7167 = !DILocation(line: 185, column: 1, scope: !6817)
!7168 = !{i64 2147623050, i64 2147623093, i64 2147623133}
!7169 = !DILocation(line: 186, column: 1, scope: !6817)
!7170 = !{i64 2147623251, i64 2147623294, i64 2147623334}
!7171 = !DILocation(line: 187, column: 1, scope: !6817)
!7172 = !{i64 2147623450, i64 2147623493, i64 2147623533}
!7173 = !DILocation(line: 188, column: 1, scope: !6817)
!7174 = !{i64 2147623655, i64 2147623698, i64 2147623738}
!7175 = !DILocation(line: 189, column: 1, scope: !6817)
!7176 = !{i64 2147623824, i64 2147623867, i64 2147623907}
!7177 = !DILocation(line: 190, column: 1, scope: !6817)
!7178 = !{i64 2147624008, i64 2147624051, i64 2147624091}
!7179 = !DILocation(line: 191, column: 1, scope: !6817)
!7180 = !{i64 2147624192, i64 2147624235, i64 2147624275}
!7181 = !DILocation(line: 192, column: 1, scope: !6817)
!7182 = !{i64 2147624379, i64 2147624422, i64 2147624462}
!7183 = !DILocation(line: 193, column: 1, scope: !6817)
!7184 = !{i64 2147624563, i64 2147624606, i64 2147624646}
!7185 = !DILocation(line: 194, column: 1, scope: !6817)
!7186 = !{i64 2147624801, i64 2147624844, i64 2147624884}
!7187 = !DILocation(line: 195, column: 1, scope: !6817)
!7188 = !{i64 2147625031, i64 2147625074, i64 2147625114}
!7189 = !DILocation(line: 196, column: 1, scope: !6817)
!7190 = !{i64 2147625260, i64 2147625303, i64 2147625343}
!7191 = !DILocation(line: 197, column: 1, scope: !6817)
!7192 = !{i64 2147625447, i64 2147625490, i64 2147625530}
!7193 = !DILocation(line: 198, column: 1, scope: !6817)
!7194 = !{i64 2147625643, i64 2147625686, i64 2147625726}
!7195 = !DILocation(line: 199, column: 1, scope: !6817)
!7196 = !{i64 2147625851, i64 2147625894, i64 2147625934}
!7197 = !DILocation(line: 200, column: 1, scope: !6817)
!7198 = !{i64 2147626063, i64 2147626106, i64 2147626146}
!7199 = !DILocation(line: 201, column: 1, scope: !6817)
!7200 = !{i64 2147626262, i64 2147626305, i64 2147626345}
!7201 = !DILocation(line: 202, column: 1, scope: !6817)
!7202 = !{i64 2147626500, i64 2147626543, i64 2147626583}
!7203 = !DILocation(line: 203, column: 1, scope: !6817)
!7204 = !{i64 2147626696, i64 2147626739, i64 2147626779}
!7205 = !DILocation(line: 204, column: 1, scope: !6817)
!7206 = !{i64 2147626898, i64 2147626941, i64 2147626981}
!7207 = !DILocation(line: 205, column: 1, scope: !6817)
!7208 = !{i64 2147627091, i64 2147627134, i64 2147627174}
!7209 = !DILocation(line: 206, column: 1, scope: !6817)
!7210 = !{i64 2147627325, i64 2147627368, i64 2147627408}
!7211 = !DILocation(line: 207, column: 1, scope: !6817)
!7212 = !{i64 2147627488, i64 2147627531, i64 2147627571}
!7213 = !DILocation(line: 208, column: 1, scope: !6817)
!7214 = !{i64 2147627727, i64 2147627770, i64 2147627810}
!7215 = !DILocation(line: 209, column: 1, scope: !6817)
!7216 = !{i64 2147627966, i64 2147628009, i64 2147628049}
!7217 = !DILocation(line: 210, column: 1, scope: !6817)
!7218 = !{i64 2147628202, i64 2147628245, i64 2147628285}
!7219 = !DILocation(line: 211, column: 1, scope: !6817)
!7220 = !{i64 2147628432, i64 2147628475, i64 2147628515}
!7221 = !DILocation(line: 212, column: 1, scope: !6817)
!7222 = !{i64 2147628646, i64 2147628689, i64 2147628729}
!7223 = !DILocation(line: 213, column: 1, scope: !6817)
!7224 = !{i64 2147628833, i64 2147628876, i64 2147628916}
!7225 = !DILocation(line: 214, column: 1, scope: !6817)
!7226 = !{i64 2147629032, i64 2147629075, i64 2147629115}
!7227 = !DILocation(line: 215, column: 1, scope: !6817)
!7228 = !{i64 2147633364, i64 2147633407, i64 2147633447}
!7229 = !DILocation(line: 216, column: 1, scope: !6817)
!7230 = !{i64 2147633539, i64 2147633582, i64 2147633622}
!7231 = !DILocation(line: 217, column: 1, scope: !6817)
!7232 = !{i64 2147633773, i64 2147633816, i64 2147633856}
!7233 = !DILocation(line: 218, column: 1, scope: !6817)
!7234 = !{i64 2147633981, i64 2147634024, i64 2147634064}
!7235 = !DILocation(line: 219, column: 1, scope: !6817)
!7236 = !{i64 2147634199, i64 2147634242, i64 2147634282}
!7237 = !DILocation(line: 220, column: 1, scope: !6817)
!7238 = !{i64 2147634389, i64 2147634432, i64 2147634472}
!7239 = !DILocation(line: 221, column: 1, scope: !6817)
!7240 = !{i64 2147634621, i64 2147634664, i64 2147634704}
!7241 = !DILocation(line: 222, column: 1, scope: !6817)
!7242 = !{i64 2147634841, i64 2147634884, i64 2147634924}
!7243 = !DILocation(line: 223, column: 1, scope: !6817)
!7244 = !{i64 2147635037, i64 2147635080, i64 2147635120}
!7245 = !DILocation(line: 224, column: 1, scope: !6817)
!7246 = !{i64 2147635243, i64 2147635286, i64 2147635326}
!7247 = !DILocation(line: 225, column: 1, scope: !6817)
!7248 = !{i64 2147635448, i64 2147635491, i64 2147635531}
!7249 = !DILocation(line: 226, column: 1, scope: !6817)
!7250 = !{i64 2147635674, i64 2147635717, i64 2147635757}
!7251 = !DILocation(line: 227, column: 1, scope: !6817)
!7252 = !{i64 2147635882, i64 2147635925, i64 2147635965}
!7253 = !DILocation(line: 228, column: 1, scope: !6817)
!7254 = !{i64 2147636078, i64 2147636121, i64 2147636161}
!7255 = !DILocation(line: 229, column: 1, scope: !6817)
!7256 = !{i64 2147636310, i64 2147636353, i64 2147636393}
!7257 = !DILocation(line: 230, column: 1, scope: !6817)
!7258 = !{i64 2147636494, i64 2147636537, i64 2147636577}
!7259 = !DILocation(line: 231, column: 1, scope: !6817)
!7260 = !{i64 2147636703, i64 2147636746, i64 2147636786}
!7261 = !DILocation(line: 232, column: 1, scope: !6817)
!7262 = !{i64 2147636911, i64 2147636954, i64 2147636994}
!7263 = !DILocation(line: 233, column: 1, scope: !6817)
!7264 = !{i64 2147637107, i64 2147637150, i64 2147637190}
!7265 = !DILocation(line: 234, column: 1, scope: !6817)
!7266 = !{i64 2147637291, i64 2147637334, i64 2147637374}
!7267 = !DILocation(line: 235, column: 1, scope: !6817)
!7268 = !{i64 2147637517, i64 2147637560, i64 2147637600}
!7269 = !DILocation(line: 236, column: 1, scope: !6817)
!7270 = !{i64 2147637743, i64 2147637786, i64 2147637826}
!7271 = !DILocation(line: 237, column: 1, scope: !6817)
!7272 = !{i64 2147637969, i64 2147638012, i64 2147638052}
!7273 = !DILocation(line: 238, column: 1, scope: !6817)
!7274 = !{i64 2147638195, i64 2147638238, i64 2147638278}
!7275 = !DILocation(line: 239, column: 1, scope: !6817)
!7276 = !{i64 2147638421, i64 2147638464, i64 2147638504}
!7277 = !DILocation(line: 240, column: 1, scope: !6817)
!7278 = !{i64 2147638653, i64 2147638696, i64 2147638736}
!7279 = !DILocation(line: 241, column: 1, scope: !6817)
!7280 = !{i64 2147638891, i64 2147638934, i64 2147638974}
!7281 = !DILocation(line: 242, column: 1, scope: !6817)
!7282 = !{i64 2147639111, i64 2147639154, i64 2147639194}
!7283 = !DILocation(line: 243, column: 1, scope: !6817)
!7284 = !{i64 2147639355, i64 2147639398, i64 2147639438}
!7285 = !DILocation(line: 244, column: 1, scope: !6817)
!7286 = !{i64 2147639596, i64 2147639639, i64 2147639679}
!7287 = !DILocation(line: 245, column: 1, scope: !6817)
!7288 = !{i64 2147639831, i64 2147639874, i64 2147639914}
!7289 = !DILocation(line: 246, column: 1, scope: !6817)
!7290 = !{i64 2147640063, i64 2147640106, i64 2147640146}
!7291 = !DILocation(line: 247, column: 1, scope: !6817)
!7292 = !{i64 2147640265, i64 2147640308, i64 2147640348}
!7293 = !DILocation(line: 248, column: 1, scope: !6817)
!7294 = !{i64 2147640515, i64 2147640558, i64 2147640598}
!7295 = !DILocation(line: 249, column: 1, scope: !6817)
!7296 = !{i64 2147640753, i64 2147640796, i64 2147640836}
!7297 = !DILocation(line: 250, column: 1, scope: !6817)
!7298 = !{i64 2147640961, i64 2147641004, i64 2147641044}
!7299 = !DILocation(line: 251, column: 1, scope: !6817)
!7300 = !{i64 2147641157, i64 2147641200, i64 2147641240}
!7301 = !DILocation(line: 252, column: 1, scope: !6817)
!7302 = !{i64 2147641341, i64 2147641384, i64 2147641424}
!7303 = !DILocation(line: 253, column: 1, scope: !6817)
!7304 = !{i64 2147641558, i64 2147641601, i64 2147641641}
!7305 = !DILocation(line: 254, column: 1, scope: !6817)
!7306 = !{i64 2147641763, i64 2147641806, i64 2147641846}
!7307 = !DILocation(line: 255, column: 1, scope: !6817)
!7308 = !{i64 2147646059, i64 2147646102, i64 2147646142}
!7309 = !DILocation(line: 256, column: 1, scope: !6817)
!7310 = !{i64 2147646282, i64 2147646325, i64 2147646365}
!7311 = !DILocation(line: 257, column: 1, scope: !6817)
!7312 = !{i64 2147646506, i64 2147646549, i64 2147646589}
!7313 = !DILocation(line: 258, column: 1, scope: !6817)
!7314 = !{i64 2147646744, i64 2147646787, i64 2147646827}
!7315 = !DILocation(line: 259, column: 1, scope: !6817)
!7316 = !{i64 2147646982, i64 2147647025, i64 2147647065}
!7317 = !DILocation(line: 260, column: 1, scope: !6817)
!7318 = !{i64 2147647199, i64 2147647242, i64 2147647282}
!7319 = !DILocation(line: 261, column: 1, scope: !6817)
!7320 = !{i64 2147647404, i64 2147647447, i64 2147647487}
!7321 = !DILocation(line: 262, column: 1, scope: !6817)
!7322 = !{i64 2147647597, i64 2147647640, i64 2147647680}
!7323 = !DILocation(line: 263, column: 1, scope: !6817)
!7324 = !{i64 2147647850, i64 2147647893, i64 2147647933}
!7325 = !DILocation(line: 264, column: 1, scope: !6817)
!7326 = !{i64 2147648058, i64 2147648101, i64 2147648141}
!7327 = !DILocation(line: 265, column: 1, scope: !6817)
!7328 = !{i64 2147648254, i64 2147648297, i64 2147648337}
!7329 = !DILocation(line: 266, column: 1, scope: !6817)
!7330 = !{i64 2147648468, i64 2147648511, i64 2147648551}
!7331 = !DILocation(line: 267, column: 1, scope: !6817)
!7332 = !{i64 2147648676, i64 2147648719, i64 2147648759}
!7333 = !DILocation(line: 268, column: 1, scope: !6817)
!7334 = !{i64 2147648866, i64 2147648909, i64 2147648949}
!7335 = !DILocation(line: 269, column: 1, scope: !6817)
!7336 = !{i64 2147649080, i64 2147649123, i64 2147649163}
!7337 = !DILocation(line: 270, column: 1, scope: !6817)
!7338 = !{i64 2147649342, i64 2147649385, i64 2147649425}
!7339 = !DILocation(line: 271, column: 1, scope: !6817)
!7340 = !{i64 2147649553, i64 2147649596, i64 2147649636}
!7341 = !DILocation(line: 272, column: 1, scope: !6817)
!7342 = !{i64 2147649797, i64 2147649840, i64 2147649880}
!7343 = !DILocation(line: 273, column: 1, scope: !6817)
!7344 = !{i64 2147650008, i64 2147650051, i64 2147650091}
!7345 = !DILocation(line: 274, column: 1, scope: !6817)
!7346 = !{i64 2147650237, i64 2147650280, i64 2147650320}
!7347 = !DILocation(line: 275, column: 1, scope: !6817)
!7348 = !{i64 2147650502, i64 2147650545, i64 2147650585}
!7349 = !DILocation(line: 276, column: 1, scope: !6817)
!7350 = !{i64 2147650707, i64 2147650750, i64 2147650790}
!7351 = !DILocation(line: 277, column: 1, scope: !6817)
!7352 = !{i64 2147650903, i64 2147650946, i64 2147650986}
!7353 = !DILocation(line: 278, column: 1, scope: !6817)
!7354 = !{i64 2147651126, i64 2147651169, i64 2147651209}
!7355 = !DILocation(line: 279, column: 1, scope: !6817)
!7356 = !{i64 2147651289, i64 2147651332, i64 2147651372}
!7357 = !DILocation(line: 280, column: 1, scope: !6817)
!7358 = !{i64 2147651494, i64 2147651537, i64 2147651577}
!7359 = !DILocation(line: 281, column: 1, scope: !6817)
!7360 = !{i64 2147651714, i64 2147651757, i64 2147651797}
!7361 = !DILocation(line: 282, column: 1, scope: !6817)
!7362 = !{i64 2147651928, i64 2147651971, i64 2147652011}
!7363 = !DILocation(line: 283, column: 1, scope: !6817)
!7364 = !{i64 2147652172, i64 2147652215, i64 2147652255}
!7365 = !DILocation(line: 284, column: 1, scope: !6817)
!7366 = !{i64 2147652404, i64 2147652447, i64 2147652487}
!7367 = !DILocation(line: 285, column: 1, scope: !6817)
!7368 = !{i64 2147652618, i64 2147652661, i64 2147652701}
!7369 = !DILocation(line: 286, column: 1, scope: !6817)
!7370 = !{i64 2147652829, i64 2147652872, i64 2147652912}
!7371 = !DILocation(line: 287, column: 1, scope: !6817)
!7372 = !{i64 2147653022, i64 2147653065, i64 2147653105}
!7373 = !DILocation(line: 288, column: 1, scope: !6817)
!7374 = !{i64 2147653221, i64 2147653264, i64 2147653304}
!7375 = !DILocation(line: 289, column: 1, scope: !6817)
!7376 = !{i64 2147653393, i64 2147653436, i64 2147653476}
!7377 = !DILocation(line: 290, column: 1, scope: !6817)
!7378 = !{i64 2147653586, i64 2147653629, i64 2147653669}
!7379 = !DILocation(line: 291, column: 1, scope: !6817)
!7380 = !{i64 2147653758, i64 2147653801, i64 2147653841}
!7381 = !DILocation(line: 292, column: 1, scope: !6817)
!7382 = !{i64 2147653948, i64 2147653991, i64 2147654031}
!7383 = !DILocation(line: 293, column: 1, scope: !6817)
!7384 = !{i64 2147654141, i64 2147654184, i64 2147654224}
!7385 = !DILocation(line: 294, column: 1, scope: !6817)
!7386 = !{i64 2147654337, i64 2147654380, i64 2147654420}
!7387 = !DILocation(line: 295, column: 1, scope: !6817)
!7388 = !{i64 2147654500, i64 2147654543, i64 2147654583}
!7389 = !DILocation(line: 296, column: 1, scope: !6817)
!7390 = !{i64 2147654702, i64 2147654745, i64 2147654785}
!7391 = !DILocation(line: 297, column: 1, scope: !6817)
!7392 = !{i64 2147654907, i64 2147654950, i64 2147654990}
!7393 = !DILocation(line: 298, column: 1, scope: !6817)
!7394 = !{i64 2147659176, i64 2147659219, i64 2147659259}
!7395 = !DILocation(line: 299, column: 1, scope: !6817)
!7396 = !{i64 2147659369, i64 2147659412, i64 2147659452}
!7397 = !DILocation(line: 300, column: 1, scope: !6817)
!7398 = !{i64 2147659556, i64 2147659599, i64 2147659639}
!7399 = !DILocation(line: 301, column: 1, scope: !6817)
!7400 = !{i64 2147659773, i64 2147659816, i64 2147659856}
!7401 = !DILocation(line: 302, column: 1, scope: !6817)
!7402 = !{i64 2147659993, i64 2147660036, i64 2147660076}
!7403 = !DILocation(line: 303, column: 1, scope: !6817)
!7404 = !{i64 2147660220, i64 2147660263, i64 2147660303}
!7405 = !DILocation(line: 304, column: 1, scope: !6817)
!7406 = !{i64 2147660437, i64 2147660480, i64 2147660520}
!7407 = !DILocation(line: 305, column: 1, scope: !6817)
!7408 = !{i64 2147660729, i64 2147660772, i64 2147660812}
!7409 = !DILocation(line: 306, column: 1, scope: !6817)
!7410 = !{i64 2147660961, i64 2147661004, i64 2147661044}
!7411 = !DILocation(line: 307, column: 1, scope: !6817)
!7412 = !{i64 2147661178, i64 2147661221, i64 2147661261}
!7413 = !DILocation(line: 308, column: 1, scope: !6817)
!7414 = !{i64 2147661385, i64 2147661428, i64 2147661468}
!7415 = !DILocation(line: 309, column: 1, scope: !6817)
!7416 = !{i64 2147661586, i64 2147661629, i64 2147661669}
!7417 = !DILocation(line: 310, column: 1, scope: !6817)
!7418 = !{i64 2147661818, i64 2147661861, i64 2147661901}
!7419 = !DILocation(line: 311, column: 1, scope: !6817)
!7420 = !{i64 2147662026, i64 2147662069, i64 2147662109}
!7421 = !DILocation(line: 312, column: 1, scope: !6817)
!7422 = !{i64 2147662216, i64 2147662259, i64 2147662299}
!7423 = !DILocation(line: 313, column: 1, scope: !6817)
!7424 = !{i64 2147662442, i64 2147662485, i64 2147662525}
!7425 = !DILocation(line: 314, column: 1, scope: !6817)
!7426 = !{i64 2147662631, i64 2147662674, i64 2147662714}
!7427 = !DILocation(line: 315, column: 1, scope: !6817)
!7428 = !{i64 2147662902, i64 2147662945, i64 2147662985}
!7429 = !DILocation(line: 316, column: 1, scope: !6817)
!7430 = !{i64 2147663122, i64 2147663165, i64 2147663205}
!7431 = !DILocation(line: 317, column: 1, scope: !6817)
!7432 = !{i64 2147663375, i64 2147663418, i64 2147663458}
!7433 = !DILocation(line: 318, column: 1, scope: !6817)
!7434 = !{i64 2147663583, i64 2147663626, i64 2147663666}
!7435 = !DILocation(line: 319, column: 1, scope: !6817)
!7436 = !{i64 2147663815, i64 2147663858, i64 2147663898}
!7437 = !DILocation(line: 320, column: 1, scope: !6817)
!7438 = !{i64 2147664026, i64 2147664069, i64 2147664109}
!7439 = !DILocation(line: 321, column: 1, scope: !6817)
!7440 = !{i64 2147664216, i64 2147664259, i64 2147664299}
!7441 = !DILocation(line: 322, column: 1, scope: !6817)
!7442 = !{i64 2147664430, i64 2147664473, i64 2147664513}
!7443 = !DILocation(line: 323, column: 1, scope: !6817)
!7444 = !{i64 2147664629, i64 2147664672, i64 2147664712}
!7445 = !DILocation(line: 324, column: 1, scope: !6817)
!7446 = !{i64 2147664816, i64 2147664859, i64 2147664899}
!7447 = !DILocation(line: 325, column: 1, scope: !6817)
!7448 = !{i64 2147665024, i64 2147665067, i64 2147665107}
!7449 = !DILocation(line: 326, column: 1, scope: !6817)
!7450 = !{i64 2147665253, i64 2147665296, i64 2147665336}
!7451 = !DILocation(line: 327, column: 1, scope: !6817)
!7452 = !{i64 2147665455, i64 2147665498, i64 2147665538}
!7453 = !DILocation(line: 328, column: 1, scope: !6817)
!7454 = !{i64 2147665654, i64 2147665697, i64 2147665737}
!7455 = !DILocation(line: 329, column: 1, scope: !6817)
!7456 = !{i64 2147665871, i64 2147665914, i64 2147665954}
!7457 = !DILocation(line: 331, column: 1, scope: !6817)
!7458 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !469, file: !469, line: 30, type: !476, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7459)
!7459 = !{!7460, !7461}
!7460 = !DILocalVariable(name: "arg", arg: 1, scope: !7458, file: !469, line: 30, type: !478)
!7461 = !DILocalVariable(name: "key", scope: !7458, file: !469, line: 32, type: !113)
!7462 = !DILocation(line: 0, scope: !7458)
!7463 = !DILocation(line: 37, column: 2, scope: !7458)
!7464 = !DILocation(line: 38, column: 2, scope: !7458)
!7465 = !DILocation(line: 55, column: 2, scope: !7466, inlinedAt: !7473)
!7466 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7470)
!7467 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7468 = !DISubroutineType(types: !7469)
!7469 = !{!32}
!7470 = !{!7471, !7472}
!7471 = !DILocalVariable(name: "key", scope: !7466, file: !7467, line: 44, type: !32)
!7472 = !DILocalVariable(name: "tmp", scope: !7466, file: !7467, line: 53, type: !32)
!7473 = distinct !DILocation(line: 40, column: 8, scope: !7458)
!7474 = !{i64 2109987}
!7475 = !DILocation(line: 0, scope: !7466, inlinedAt: !7473)
!7476 = !DILocalVariable(name: "key", arg: 1, scope: !7477, file: !7467, line: 84, type: !32)
!7477 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7480)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{null, !32}
!7480 = !{!7476}
!7481 = !DILocation(line: 0, scope: !7477, inlinedAt: !7482)
!7482 = distinct !DILocation(line: 47, column: 2, scope: !7458)
!7483 = !DILocation(line: 95, column: 2, scope: !7477, inlinedAt: !7482)
!7484 = !{i64 2110804}
!7485 = !DILocation(line: 51, column: 18, scope: !7458)
!7486 = !DILocation(line: 53, column: 2, scope: !7458)
!7487 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7488, file: !7488, line: 1609, type: !266, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7488 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7489 = !DILocation(line: 1611, column: 3, scope: !7487)
!7490 = !DILocation(line: 1612, column: 1, scope: !7487)
!7491 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7488, file: !7488, line: 1629, type: !266, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7492 = !DILocation(line: 1631, column: 3, scope: !7491)
!7493 = !DILocation(line: 1632, column: 1, scope: !7491)
!7494 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !506, file: !506, line: 26, type: !512, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7495)
!7495 = !{!7496}
!7496 = !DILocalVariable(name: "dev", arg: 1, scope: !7494, file: !506, line: 26, type: !514)
!7497 = !DILocation(line: 0, scope: !7494)
!7498 = !DILocation(line: 68, column: 2, scope: !7494)
!7499 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7500, file: !7500, line: 14, type: !4984, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !7501)
!7500 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7501 = !{!7502, !7503}
!7502 = !DILocalVariable(name: "fmt", arg: 1, scope: !7499, file: !7500, line: 14, type: !269)
!7503 = !DILocalVariable(name: "ap", scope: !7499, file: !7500, line: 16, type: !7504)
!7504 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3992, line: 99, baseType: !7505)
!7505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3992, line: 40, baseType: !7506)
!7506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7500, baseType: !7507)
!7507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7508)
!7508 = !{!7509}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7507, file: !7500, line: 16, baseType: !104, size: 32)
!7510 = !DILocation(line: 0, scope: !7499)
!7511 = !DILocation(line: 16, column: 2, scope: !7499)
!7512 = !DILocation(line: 16, column: 10, scope: !7499)
!7513 = !DILocation(line: 18, column: 2, scope: !7499)
!7514 = !DILocation(line: 19, column: 2, scope: !7499)
!7515 = !DILocation(line: 20, column: 2, scope: !7499)
!7516 = !DILocation(line: 21, column: 1, scope: !7499)
!7517 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7500, file: !7500, line: 23, type: !7518, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !7520)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{null, !269, !7504}
!7520 = !{!7521, !7522}
!7521 = !DILocalVariable(name: "fmt", arg: 1, scope: !7517, file: !7500, line: 23, type: !269)
!7522 = !DILocalVariable(name: "ap", arg: 2, scope: !7517, file: !7500, line: 23, type: !7504)
!7523 = !DILocation(line: 0, scope: !7517)
!7524 = !DILocation(line: 25, column: 2, scope: !7517)
!7525 = !DILocation(line: 26, column: 1, scope: !7517)
!7526 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7500, file: !7500, line: 52, type: !7527, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !7529)
!7527 = !DISubroutineType(types: !7528)
!7528 = !{null, !105, !13, !111}
!7529 = !{!7530, !7531, !7532, !7533}
!7530 = !DILocalVariable(name: "level", arg: 1, scope: !7526, file: !7500, line: 52, type: !105)
!7531 = !DILocalVariable(name: "data", arg: 2, scope: !7526, file: !7500, line: 52, type: !13)
!7532 = !DILocalVariable(name: "size", arg: 3, scope: !7526, file: !7500, line: 52, type: !111)
!7533 = !DILocalVariable(name: "data_buffer", scope: !7526, file: !7500, line: 54, type: !269)
!7534 = !DILocation(line: 0, scope: !7526)
!7535 = !DILocation(line: 55, column: 14, scope: !7526)
!7536 = !DILocation(line: 55, column: 2, scope: !7526)
!7537 = !DILocation(line: 56, column: 3, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7526, file: !7500, line: 55, column: 20)
!7539 = !DILocation(line: 57, column: 3, scope: !7538)
!7540 = !DILocation(line: 59, column: 7, scope: !7538)
!7541 = distinct !{!7541, !7536, !7542}
!7542 = !DILocation(line: 65, column: 2, scope: !7526)
!7543 = !DILocation(line: 66, column: 1, scope: !7526)
!7544 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3457, file: !3457, line: 175, type: !3458, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !7545)
!7545 = !{!7546}
!7546 = !DILocalVariable(name: "level", arg: 1, scope: !7544, file: !3457, line: 175, type: !105)
!7547 = !DILocation(line: 0, scope: !7544)
!7548 = !DILocation(line: 177, column: 2, scope: !7544)
!7549 = !DILocation(line: 189, column: 1, scope: !7544)
!7550 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7500, file: !7500, line: 28, type: !7551, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !7553)
!7551 = !DISubroutineType(types: !7552)
!7552 = !{null, !269, !111}
!7553 = !{!7554, !7555, !7556, !7558, !7560}
!7554 = !DILocalVariable(name: "data", arg: 1, scope: !7550, file: !7500, line: 28, type: !269)
!7555 = !DILocalVariable(name: "length", arg: 2, scope: !7550, file: !7500, line: 28, type: !111)
!7556 = !DILocalVariable(name: "i", scope: !7557, file: !7500, line: 30, type: !111)
!7557 = distinct !DILexicalBlock(scope: !7550, file: !7500, line: 30, column: 2)
!7558 = !DILocalVariable(name: "i", scope: !7559, file: !7500, line: 40, type: !111)
!7559 = distinct !DILexicalBlock(scope: !7550, file: !7500, line: 40, column: 2)
!7560 = !DILocalVariable(name: "c", scope: !7561, file: !7500, line: 42, type: !170)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !7500, line: 41, column: 19)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !7500, line: 41, column: 7)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !7500, line: 40, column: 54)
!7564 = distinct !DILexicalBlock(scope: !7559, file: !7500, line: 40, column: 2)
!7565 = !DILocation(line: 0, scope: !7550)
!7566 = !DILocation(line: 0, scope: !7557)
!7567 = !DILocation(line: 30, column: 2, scope: !7557)
!7568 = !DILocation(line: 38, column: 2, scope: !7550)
!7569 = !DILocation(line: 0, scope: !7559)
!7570 = !DILocation(line: 40, column: 2, scope: !7559)
!7571 = !DILocation(line: 31, column: 9, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !7500, line: 31, column: 7)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !7500, line: 30, column: 54)
!7574 = distinct !DILexicalBlock(scope: !7557, file: !7500, line: 30, column: 2)
!7575 = !DILocation(line: 31, column: 7, scope: !7573)
!7576 = !DILocation(line: 32, column: 35, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !7500, line: 31, column: 19)
!7578 = !DILocation(line: 32, column: 20, scope: !7577)
!7579 = !DILocation(line: 32, column: 4, scope: !7577)
!7580 = !DILocation(line: 33, column: 3, scope: !7577)
!7581 = !DILocation(line: 34, column: 4, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7572, file: !7500, line: 33, column: 10)
!7583 = !DILocation(line: 30, column: 50, scope: !7574)
!7584 = !DILocation(line: 30, column: 24, scope: !7574)
!7585 = distinct !{!7585, !7567, !7586}
!7586 = !DILocation(line: 36, column: 2, scope: !7557)
!7587 = !DILocation(line: 49, column: 2, scope: !7550)
!7588 = !DILocation(line: 50, column: 1, scope: !7550)
!7589 = !DILocation(line: 41, column: 9, scope: !7562)
!7590 = !DILocation(line: 41, column: 7, scope: !7563)
!7591 = !DILocation(line: 42, column: 22, scope: !7561)
!7592 = !DILocation(line: 0, scope: !7561)
!7593 = !DILocation(line: 44, column: 25, scope: !7561)
!7594 = !DILocation(line: 44, column: 17, scope: !7561)
!7595 = !DILocation(line: 44, column: 33, scope: !7561)
!7596 = !DILocation(line: 44, column: 4, scope: !7561)
!7597 = !DILocation(line: 45, column: 3, scope: !7561)
!7598 = !DILocation(line: 46, column: 4, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7562, file: !7500, line: 45, column: 10)
!7600 = !DILocation(line: 40, column: 50, scope: !7564)
!7601 = !DILocation(line: 40, column: 24, scope: !7564)
!7602 = distinct !{!7602, !7570, !7603}
!7603 = !DILocation(line: 48, column: 2, scope: !7559)
!7604 = distinct !DISubprogram(name: "isprint", scope: !6561, file: !6561, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !7605)
!7605 = !{!7606}
!7606 = !DILocalVariable(name: "c", arg: 1, scope: !7604, file: !6561, line: 37, type: !105)
!7607 = !DILocation(line: 0, scope: !7604)
!7608 = !DILocation(line: 39, column: 38, scope: !7604)
!7609 = !DILocation(line: 39, column: 2, scope: !7604)
!7610 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7611, file: !7611, line: 57, type: !7612, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7658)
!7611 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7612 = !DISubroutineType(types: !7613)
!7613 = !{null, !32, !7614}
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7615, size: 32)
!7615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7616)
!7616 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2773, line: 141, baseType: !7617)
!7617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2773, line: 97, size: 256, elements: !7618)
!7618 = !{!7619}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7617, file: !2773, line: 107, baseType: !7620, size: 256)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2773, line: 98, size: 256, elements: !7621)
!7621 = !{!7622, !7627, !7632, !7637, !7642, !7647, !7652, !7657}
!7622 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 99, baseType: !7623, size: 32)
!7623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 99, size: 32, elements: !7624)
!7624 = !{!7625, !7626}
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7623, file: !2773, line: 99, baseType: !113, size: 32)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7623, file: !2773, line: 99, baseType: !113, size: 32)
!7627 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 100, baseType: !7628, size: 32, offset: 32)
!7628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 100, size: 32, elements: !7629)
!7629 = !{!7630, !7631}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7628, file: !2773, line: 100, baseType: !113, size: 32)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7628, file: !2773, line: 100, baseType: !113, size: 32)
!7632 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 101, baseType: !7633, size: 32, offset: 64)
!7633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 101, size: 32, elements: !7634)
!7634 = !{!7635, !7636}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7633, file: !2773, line: 101, baseType: !113, size: 32)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7633, file: !2773, line: 101, baseType: !113, size: 32)
!7637 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 102, baseType: !7638, size: 32, offset: 96)
!7638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 102, size: 32, elements: !7639)
!7639 = !{!7640, !7641}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7638, file: !2773, line: 102, baseType: !113, size: 32)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7638, file: !2773, line: 102, baseType: !113, size: 32)
!7642 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 103, baseType: !7643, size: 32, offset: 128)
!7643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 103, size: 32, elements: !7644)
!7644 = !{!7645, !7646}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7643, file: !2773, line: 103, baseType: !113, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7643, file: !2773, line: 103, baseType: !113, size: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 104, baseType: !7648, size: 32, offset: 160)
!7648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 104, size: 32, elements: !7649)
!7649 = !{!7650, !7651}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7648, file: !2773, line: 104, baseType: !113, size: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7648, file: !2773, line: 104, baseType: !113, size: 32)
!7652 = !DIDerivedType(tag: DW_TAG_member, scope: !7620, file: !2773, line: 105, baseType: !7653, size: 32, offset: 192)
!7653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7620, file: !2773, line: 105, size: 32, elements: !7654)
!7654 = !{!7655, !7656}
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7653, file: !2773, line: 105, baseType: !113, size: 32)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7653, file: !2773, line: 105, baseType: !113, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7620, file: !2773, line: 106, baseType: !113, size: 32, offset: 224)
!7658 = !{!7659, !7660}
!7659 = !DILocalVariable(name: "reason", arg: 1, scope: !7610, file: !7611, line: 57, type: !32)
!7660 = !DILocalVariable(name: "esf", arg: 2, scope: !7610, file: !7611, line: 57, type: !7614)
!7661 = !DILocation(line: 0, scope: !7610)
!7662 = !DILocation(line: 60, column: 10, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7610, file: !7611, line: 60, column: 6)
!7664 = !DILocation(line: 60, column: 6, scope: !7610)
!7665 = !DILocation(line: 61, column: 3, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7663, file: !7611, line: 60, column: 19)
!7667 = !DILocation(line: 62, column: 2, scope: !7666)
!7668 = !DILocation(line: 63, column: 2, scope: !7610)
!7669 = !DILocation(line: 64, column: 1, scope: !7610)
!7670 = distinct !DISubprogram(name: "esf_dump", scope: !7611, file: !7611, line: 20, type: !7671, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{null, !7614}
!7673 = !{!7674}
!7674 = !DILocalVariable(name: "esf", arg: 1, scope: !7670, file: !7611, line: 20, type: !7614)
!7675 = !DILocation(line: 0, scope: !7670)
!7676 = !DILocation(line: 22, column: 2, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !7611, line: 22, column: 2)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !7611, line: 22, column: 2)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !7611, line: 22, column: 2)
!7680 = distinct !DILexicalBlock(scope: !7670, file: !7611, line: 22, column: 2)
!7681 = !DILocation(line: 24, column: 2, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !7611, line: 24, column: 2)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !7611, line: 24, column: 2)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !7611, line: 24, column: 2)
!7685 = distinct !DILexicalBlock(scope: !7670, file: !7611, line: 24, column: 2)
!7686 = !DILocation(line: 26, column: 2, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !7611, line: 26, column: 2)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !7611, line: 26, column: 2)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !7611, line: 26, column: 2)
!7690 = distinct !DILexicalBlock(scope: !7670, file: !7611, line: 26, column: 2)
!7691 = !DILocation(line: 53, column: 2, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !7611, line: 53, column: 2)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !7611, line: 53, column: 2)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !7611, line: 53, column: 2)
!7695 = distinct !DILexicalBlock(scope: !7670, file: !7611, line: 53, column: 2)
!7696 = !DILocation(line: 55, column: 1, scope: !7670)
!7697 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7611, file: !7611, line: 82, type: !7698, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7713)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{null, !7614, !7700}
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7701, size: 32)
!7701 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7702)
!7702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7703)
!7703 = !{!7704, !7705, !7706, !7707, !7708, !7709, !7710, !7711, !7712}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7702, file: !200, line: 26, baseType: !113, size: 32)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7702, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7702, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7702, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7702, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7702, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7702, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7702, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7702, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7713 = !{!7714, !7715, !7716}
!7714 = !DILocalVariable(name: "esf", arg: 1, scope: !7697, file: !7611, line: 82, type: !7614)
!7715 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7697, file: !7611, line: 82, type: !7700)
!7716 = !DILocalVariable(name: "reason", scope: !7697, file: !7611, line: 88, type: !32)
!7717 = !DILocation(line: 0, scope: !7697)
!7718 = !DILocation(line: 88, column: 35, scope: !7697)
!7719 = !DILocation(line: 108, column: 2, scope: !7697)
!7720 = !DILocation(line: 131, column: 1, scope: !7697)
!7721 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7611, file: !7611, line: 133, type: !7722, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7724)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{null, !104}
!7724 = !{!7725, !7726, !7727}
!7725 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7721, file: !7611, line: 133, type: !104)
!7726 = !DILocalVariable(name: "ssf_contents", scope: !7721, file: !7611, line: 135, type: !1027)
!7727 = !DILocalVariable(name: "oops_esf", scope: !7721, file: !7611, line: 136, type: !7616)
!7728 = !DILocation(line: 0, scope: !7721)
!7729 = !DILocation(line: 136, column: 2, scope: !7721)
!7730 = !DILocation(line: 136, column: 15, scope: !7721)
!7731 = !DILocation(line: 139, column: 22, scope: !7721)
!7732 = !DILocation(line: 139, column: 17, scope: !7721)
!7733 = !DILocation(line: 139, column: 20, scope: !7721)
!7734 = !DILocation(line: 141, column: 2, scope: !7721)
!7735 = !DILocation(line: 142, column: 2, scope: !7721)
!7736 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7737, file: !7737, line: 40, type: !7478, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7738)
!7737 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7738 = !{!7739}
!7739 = !DILocalVariable(name: "irq", arg: 1, scope: !7736, file: !7737, line: 40, type: !32)
!7740 = !DILocation(line: 0, scope: !7736)
!7741 = !DILocation(line: 42, column: 2, scope: !7736)
!7742 = !DILocation(line: 43, column: 1, scope: !7736)
!7743 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !679, file: !679, line: 1684, type: !7744, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7746)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{null, !933}
!7746 = !{!7747}
!7747 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7743, file: !679, line: 1684, type: !933)
!7748 = !DILocation(line: 0, scope: !7743)
!7749 = !DILocation(line: 1686, column: 23, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7743, file: !679, line: 1686, column: 7)
!7751 = !DILocation(line: 1686, column: 7, scope: !7743)
!7752 = !DILocation(line: 1688, column: 5, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7750, file: !679, line: 1687, column: 3)
!7754 = !{i64 2151073105}
!7755 = !DILocation(line: 1689, column: 81, scope: !7753)
!7756 = !DILocation(line: 1689, column: 60, scope: !7753)
!7757 = !DILocation(line: 1689, column: 34, scope: !7753)
!7758 = !DILocation(line: 1689, column: 5, scope: !7753)
!7759 = !DILocation(line: 1689, column: 43, scope: !7753)
!7760 = !DILocation(line: 1690, column: 5, scope: !7753)
!7761 = !{i64 2151073219}
!7762 = !DILocation(line: 1691, column: 3, scope: !7753)
!7763 = !DILocation(line: 1692, column: 1, scope: !7743)
!7764 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7737, file: !7737, line: 45, type: !7478, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7765)
!7765 = !{!7766}
!7766 = !DILocalVariable(name: "irq", arg: 1, scope: !7764, file: !7737, line: 45, type: !32)
!7767 = !DILocation(line: 0, scope: !7764)
!7768 = !DILocation(line: 47, column: 2, scope: !7764)
!7769 = !DILocation(line: 48, column: 1, scope: !7764)
!7770 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !679, file: !679, line: 1722, type: !7744, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7771)
!7771 = !{!7772}
!7772 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7770, file: !679, line: 1722, type: !933)
!7773 = !DILocation(line: 0, scope: !7770)
!7774 = !DILocation(line: 1724, column: 23, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7770, file: !679, line: 1724, column: 7)
!7776 = !DILocation(line: 1724, column: 7, scope: !7770)
!7777 = !DILocation(line: 1726, column: 81, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7775, file: !679, line: 1725, column: 3)
!7779 = !DILocation(line: 1726, column: 60, scope: !7778)
!7780 = !DILocation(line: 1726, column: 34, scope: !7778)
!7781 = !DILocation(line: 1726, column: 5, scope: !7778)
!7782 = !DILocation(line: 1726, column: 43, scope: !7778)
!7783 = !DILocation(line: 271, column: 3, scope: !7784, inlinedAt: !7786)
!7784 = distinct !DISubprogram(name: "__DSB", scope: !7785, file: !7785, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !397)
!7785 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7786 = distinct !DILocation(line: 1727, column: 5, scope: !7778)
!7787 = !{i64 3527488}
!7788 = !DILocation(line: 260, column: 3, scope: !7789, inlinedAt: !7790)
!7789 = distinct !DISubprogram(name: "__ISB", scope: !7785, file: !7785, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !397)
!7790 = distinct !DILocation(line: 1728, column: 5, scope: !7778)
!7791 = !{i64 3527205}
!7792 = !DILocation(line: 1729, column: 3, scope: !7778)
!7793 = !DILocation(line: 1730, column: 1, scope: !7770)
!7794 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7737, file: !7737, line: 50, type: !7795, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7797)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!105, !32}
!7797 = !{!7798}
!7798 = !DILocalVariable(name: "irq", arg: 1, scope: !7794, file: !7737, line: 50, type: !32)
!7799 = !DILocation(line: 0, scope: !7794)
!7800 = !DILocation(line: 52, column: 20, scope: !7794)
!7801 = !DILocation(line: 52, column: 9, scope: !7794)
!7802 = !DILocation(line: 52, column: 41, scope: !7794)
!7803 = !DILocation(line: 52, column: 39, scope: !7794)
!7804 = !DILocation(line: 52, column: 2, scope: !7794)
!7805 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7737, file: !7737, line: 64, type: !7806, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7808)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{null, !32, !32, !113}
!7808 = !{!7809, !7810, !7811}
!7809 = !DILocalVariable(name: "irq", arg: 1, scope: !7805, file: !7737, line: 64, type: !32)
!7810 = !DILocalVariable(name: "prio", arg: 2, scope: !7805, file: !7737, line: 64, type: !32)
!7811 = !DILocalVariable(name: "flags", arg: 3, scope: !7805, file: !7737, line: 64, type: !113)
!7812 = !DILocation(line: 0, scope: !7805)
!7813 = !DILocation(line: 83, column: 8, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7737, line: 82, column: 9)
!7815 = distinct !DILexicalBlock(scope: !7805, file: !7737, line: 76, column: 6)
!7816 = !DILocation(line: 91, column: 2, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !7737, line: 91, column: 2)
!7818 = distinct !DILexicalBlock(scope: !7805, file: !7737, line: 91, column: 2)
!7819 = !DILocation(line: 91, column: 2, scope: !7818)
!7820 = !DILocation(line: 91, column: 2, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7817, file: !7737, line: 91, column: 2)
!7822 = !DILocation(line: 95, column: 2, scope: !7805)
!7823 = !DILocation(line: 96, column: 1, scope: !7805)
!7824 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7825, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7827)
!7825 = !DISubroutineType(types: !7826)
!7826 = !{null, !933, !113}
!7827 = !{!7828, !7829}
!7828 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7824, file: !679, line: 1814, type: !933)
!7829 = !DILocalVariable(name: "priority", arg: 2, scope: !7824, file: !679, line: 1814, type: !113)
!7830 = !DILocation(line: 0, scope: !7824)
!7831 = !DILocation(line: 0, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7824, file: !679, line: 1816, column: 7)
!7833 = !DILocation(line: 1816, column: 7, scope: !7824)
!7834 = !DILocation(line: 1824, column: 1, scope: !7824)
!7835 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7737, file: !7737, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7836)
!7836 = !{!7837}
!7837 = !DILocalVariable(name: "unused", arg: 1, scope: !7835, file: !7737, line: 155, type: !13)
!7838 = !DILocation(line: 0, scope: !7835)
!7839 = !DILocation(line: 159, column: 2, scope: !7835)
!7840 = !DILocation(line: 160, column: 1, scope: !7835)
!7841 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7842, file: !7842, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !397)
!7842 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7843 = !DILocation(line: 89, column: 2, scope: !7841)
!7844 = !DILocation(line: 90, column: 2, scope: !7841)
!7845 = !DILocation(line: 91, column: 1, scope: !7841)
!7846 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7842, file: !7842, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7847 = !DISubprogram(name: "z_arm_int_exit", scope: !7848, file: !7848, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7848 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7849 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7850, file: !7850, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !397)
!7850 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7851 = !DILocation(line: 258, column: 2, scope: !7849)
!7852 = !DILocation(line: 260, column: 2, scope: !7849)
!7853 = !DILocation(line: 262, column: 2, scope: !7849)
!7854 = !DILocation(line: 263, column: 2, scope: !7849)
!7855 = !DILocation(line: 267, column: 2, scope: !7849)
!7856 = !DILocation(line: 268, column: 2, scope: !7849)
!7857 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7850, file: !7850, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !397)
!7858 = !DILocation(line: 55, column: 12, scope: !7857)
!7859 = !DILocation(line: 271, column: 3, scope: !7860, inlinedAt: !7861)
!7860 = distinct !DISubprogram(name: "__DSB", scope: !7785, file: !7785, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !397)
!7861 = distinct !DILocation(line: 56, column: 2, scope: !7857)
!7862 = !{i64 3526159}
!7863 = !DILocation(line: 260, column: 3, scope: !7864, inlinedAt: !7865)
!7864 = distinct !DISubprogram(name: "__ISB", scope: !7785, file: !7785, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !397)
!7865 = distinct !DILocation(line: 57, column: 2, scope: !7857)
!7866 = !{i64 3525876}
!7867 = !DILocation(line: 58, column: 1, scope: !7857)
!7868 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7850, file: !7850, line: 96, type: !266, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !397)
!7869 = !DILocation(line: 103, column: 13, scope: !7868)
!7870 = !DILocation(line: 975, column: 3, scope: !7871, inlinedAt: !7874)
!7871 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7785, file: !7785, line: 971, type: !395, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7872)
!7872 = !{!7873}
!7873 = !DILocalVariable(name: "result", scope: !7871, file: !7785, line: 973, type: !113)
!7874 = distinct !DILocation(line: 189, column: 16, scope: !7868)
!7875 = !{i64 3546989}
!7876 = !DILocation(line: 0, scope: !7871, inlinedAt: !7874)
!7877 = !DILocation(line: 189, column: 32, scope: !7868)
!7878 = !DILocalVariable(name: "control", arg: 1, scope: !7879, file: !7785, line: 1001, type: !113)
!7879 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7785, file: !7785, line: 1001, type: !7880, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !7882)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{null, !113}
!7882 = !{!7878}
!7883 = !DILocation(line: 0, scope: !7879, inlinedAt: !7884)
!7884 = distinct !DILocation(line: 189, column: 2, scope: !7868)
!7885 = !DILocation(line: 1003, column: 3, scope: !7879, inlinedAt: !7884)
!7886 = !{i64 3547709}
!7887 = !DILocation(line: 260, column: 3, scope: !7864, inlinedAt: !7888)
!7888 = distinct !DILocation(line: 1004, column: 3, scope: !7879, inlinedAt: !7884)
!7889 = !DILocation(line: 191, column: 1, scope: !7868)
!7890 = distinct !DISubprogram(name: "arch_swap", scope: !7891, file: !7891, line: 33, type: !7795, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7892)
!7891 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7892 = !{!7893}
!7893 = !DILocalVariable(name: "key", arg: 1, scope: !7890, file: !7891, line: 33, type: !32)
!7894 = !DILocation(line: 0, scope: !7890)
!7895 = !DILocation(line: 36, column: 2, scope: !7890)
!7896 = !DILocation(line: 36, column: 17, scope: !7890)
!7897 = !DILocation(line: 36, column: 25, scope: !7890)
!7898 = !DILocation(line: 37, column: 37, scope: !7890)
!7899 = !DILocation(line: 37, column: 17, scope: !7890)
!7900 = !DILocation(line: 37, column: 35, scope: !7890)
!7901 = !DILocation(line: 41, column: 12, scope: !7890)
!7902 = !DILocalVariable(name: "key", arg: 1, scope: !7903, file: !7467, line: 84, type: !32)
!7903 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !7904)
!7904 = !{!7902}
!7905 = !DILocation(line: 0, scope: !7903, inlinedAt: !7906)
!7906 = distinct !DILocation(line: 44, column: 2, scope: !7890)
!7907 = !DILocation(line: 95, column: 2, scope: !7903, inlinedAt: !7906)
!7908 = !{i64 2225481}
!7909 = !DILocation(line: 53, column: 9, scope: !7890)
!7910 = !DILocation(line: 53, column: 24, scope: !7890)
!7911 = !DILocation(line: 53, column: 2, scope: !7890)
!7912 = distinct !DISubprogram(name: "arch_new_thread", scope: !7913, file: !7913, line: 56, type: !7914, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !8023)
!7913 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7914 = !DISubroutineType(types: !7915)
!7915 = !{null, !7916, !8018, !102, !254, !104, !104, !104}
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7917, size: 32)
!7917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7918)
!7918 = !{!7919, !7977, !7989, !7990, !7991, !7992, !7998, !8013}
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7917, file: !127, line: 247, baseType: !7920, size: 384)
!7920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7921)
!7921 = !{!7922, !7946, !7953, !7954, !7955, !7964, !7965, !7966}
!7922 = !DIDerivedType(tag: DW_TAG_member, scope: !7920, file: !127, line: 60, baseType: !7923, size: 64)
!7923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7920, file: !127, line: 60, size: 64, elements: !7924)
!7924 = !{!7925, !7940}
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7923, file: !127, line: 61, baseType: !7926, size: 64)
!7926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7927)
!7927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7928)
!7928 = !{!7929, !7935}
!7929 = !DIDerivedType(tag: DW_TAG_member, scope: !7927, file: !137, line: 38, baseType: !7930, size: 32)
!7930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7927, file: !137, line: 38, size: 32, elements: !7931)
!7931 = !{!7932, !7934}
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7930, file: !137, line: 39, baseType: !7933, size: 32)
!7933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7927, size: 32)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7930, file: !137, line: 40, baseType: !7933, size: 32)
!7935 = !DIDerivedType(tag: DW_TAG_member, scope: !7927, file: !137, line: 42, baseType: !7936, size: 32, offset: 32)
!7936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7927, file: !137, line: 42, size: 32, elements: !7937)
!7937 = !{!7938, !7939}
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7936, file: !137, line: 43, baseType: !7933, size: 32)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7936, file: !137, line: 44, baseType: !7933, size: 32)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7923, file: !127, line: 62, baseType: !7941, size: 64)
!7941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7942)
!7942 = !{!7943}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7941, file: !153, line: 50, baseType: !7944, size: 64)
!7944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7945, size: 64, elements: !158)
!7945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7941, size: 32)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7920, file: !127, line: 68, baseType: !7947, size: 32, offset: 64)
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7948, size: 32)
!7948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7949)
!7949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7950)
!7950 = !{!7951}
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7949, file: !163, line: 232, baseType: !7952, size: 64)
!7952 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7927)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7920, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7920, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7955 = !DIDerivedType(tag: DW_TAG_member, scope: !7920, file: !127, line: 90, baseType: !7956, size: 16, offset: 112)
!7956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7920, file: !127, line: 90, size: 16, elements: !7957)
!7957 = !{!7958, !7963}
!7958 = !DIDerivedType(tag: DW_TAG_member, scope: !7956, file: !127, line: 91, baseType: !7959, size: 16)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7956, file: !127, line: 91, size: 16, elements: !7960)
!7960 = !{!7961, !7962}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7959, file: !127, line: 96, baseType: !179, size: 8)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7959, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7956, file: !127, line: 100, baseType: !183, size: 16)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7920, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7920, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7920, file: !127, line: 131, baseType: !7967, size: 192, offset: 192)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7968)
!7968 = !{!7969, !7970, !7976}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7967, file: !163, line: 245, baseType: !7926, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7967, file: !163, line: 246, baseType: !7971, size: 32, offset: 64)
!7971 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7972)
!7972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7973, size: 32)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{null, !7975}
!7975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7967, size: 32)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7967, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7917, file: !127, line: 250, baseType: !7978, size: 288, offset: 384)
!7978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7979)
!7979 = !{!7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988}
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7978, file: !200, line: 26, baseType: !113, size: 32)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7978, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7978, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7978, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7978, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7978, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7978, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7978, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7978, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7917, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7917, file: !127, line: 256, baseType: !7948, size: 64, offset: 704)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7917, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7917, file: !127, line: 300, baseType: !7993, size: 96, offset: 800)
!7993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !7994)
!7994 = !{!7995, !7996, !7997}
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7993, file: !127, line: 153, baseType: !22, size: 32)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7993, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7993, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7917, file: !127, line: 325, baseType: !7999, size: 32, offset: 896)
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8000, size: 32)
!8000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8001)
!8001 = !{!8002, !8008, !8009}
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8000, file: !122, line: 5074, baseType: !8003, size: 96)
!8003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8004)
!8004 = !{!8005, !8006, !8007}
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8003, file: !226, line: 57, baseType: !229, size: 32)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8003, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8003, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8000, file: !122, line: 5075, baseType: !7948, size: 64, offset: 96)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8000, file: !122, line: 5076, baseType: !8010, size: 32, offset: 160)
!8010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8011)
!8011 = !{!8012}
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8010, file: !236, line: 52, baseType: !22, size: 32)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7917, file: !127, line: 343, baseType: !8014, size: 64, offset: 928)
!8014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8015)
!8015 = !{!8016, !8017}
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8014, file: !200, line: 63, baseType: !113, size: 32)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8014, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8019, size: 32)
!8019 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !8020)
!8020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !8021)
!8021 = !{!8022}
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8020, file: !249, line: 48, baseType: !103, size: 8)
!8023 = !{!8024, !8025, !8026, !8027, !8028, !8029, !8030, !8031}
!8024 = !DILocalVariable(name: "thread", arg: 1, scope: !7912, file: !7913, line: 56, type: !7916)
!8025 = !DILocalVariable(name: "stack", arg: 2, scope: !7912, file: !7913, line: 56, type: !8018)
!8026 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7912, file: !7913, line: 57, type: !102)
!8027 = !DILocalVariable(name: "entry", arg: 4, scope: !7912, file: !7913, line: 57, type: !254)
!8028 = !DILocalVariable(name: "p1", arg: 5, scope: !7912, file: !7913, line: 58, type: !104)
!8029 = !DILocalVariable(name: "p2", arg: 6, scope: !7912, file: !7913, line: 58, type: !104)
!8030 = !DILocalVariable(name: "p3", arg: 7, scope: !7912, file: !7913, line: 58, type: !104)
!8031 = !DILocalVariable(name: "iframe", scope: !7912, file: !7913, line: 60, type: !2771)
!8032 = !DILocation(line: 0, scope: !7912)
!8033 = !DILocation(line: 85, column: 11, scope: !7912)
!8034 = !DILocation(line: 93, column: 10, scope: !7912)
!8035 = !DILocation(line: 98, column: 13, scope: !7912)
!8036 = !DILocation(line: 100, column: 15, scope: !7912)
!8037 = !DILocation(line: 100, column: 10, scope: !7912)
!8038 = !DILocation(line: 100, column: 13, scope: !7912)
!8039 = !DILocation(line: 101, column: 15, scope: !7912)
!8040 = !DILocation(line: 101, column: 10, scope: !7912)
!8041 = !DILocation(line: 101, column: 13, scope: !7912)
!8042 = !DILocation(line: 102, column: 15, scope: !7912)
!8043 = !DILocation(line: 102, column: 10, scope: !7912)
!8044 = !DILocation(line: 102, column: 13, scope: !7912)
!8045 = !DILocation(line: 103, column: 15, scope: !7912)
!8046 = !DILocation(line: 103, column: 10, scope: !7912)
!8047 = !DILocation(line: 103, column: 13, scope: !7912)
!8048 = !DILocation(line: 106, column: 10, scope: !7912)
!8049 = !DILocation(line: 106, column: 15, scope: !7912)
!8050 = !DILocation(line: 122, column: 29, scope: !7912)
!8051 = !DILocation(line: 122, column: 23, scope: !7912)
!8052 = !DILocation(line: 122, column: 27, scope: !7912)
!8053 = !DILocation(line: 123, column: 15, scope: !7912)
!8054 = !DILocation(line: 123, column: 23, scope: !7912)
!8055 = !DILocation(line: 143, column: 1, scope: !7912)
!8056 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7913, file: !7913, line: 385, type: !8057, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !8059)
!8057 = !DISubroutineType(types: !8058)
!8058 = !{!113, !3744, !3744}
!8059 = !{!8060, !8061, !8062, !8065}
!8060 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8056, file: !7913, line: 385, type: !3744)
!8061 = !DILocalVariable(name: "psp", arg: 2, scope: !8056, file: !7913, line: 385, type: !3744)
!8062 = !DILocalVariable(name: "thread", scope: !8056, file: !7913, line: 388, type: !8063)
!8063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8064, size: 32)
!8064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7917)
!8065 = !DILocalVariable(name: "guard_len", scope: !8056, file: !7913, line: 405, type: !113)
!8066 = !DILocation(line: 0, scope: !8056)
!8067 = !DILocation(line: 388, column: 34, scope: !8056)
!8068 = !DILocation(line: 390, column: 13, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8056, file: !7913, line: 390, column: 6)
!8070 = !DILocation(line: 390, column: 6, scope: !8056)
!8071 = !DILocation(line: 438, column: 6, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8056, file: !7913, line: 438, column: 6)
!8073 = !DILocation(line: 438, column: 6, scope: !8056)
!8074 = !DILocation(line: 442, column: 3, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8072, file: !7913, line: 440, column: 22)
!8076 = !DILocation(line: 455, column: 1, scope: !8056)
!8077 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7913, file: !7913, line: 530, type: !8078, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !8080)
!8078 = !DISubroutineType(types: !8079)
!8079 = !{null, !7916, !102, !254}
!8080 = !{!8081, !8082, !8083}
!8081 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8077, file: !7913, line: 530, type: !7916)
!8082 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8077, file: !7913, line: 530, type: !102)
!8083 = !DILocalVariable(name: "_main", arg: 3, scope: !8077, file: !7913, line: 531, type: !254)
!8084 = !DILocation(line: 0, scope: !8077)
!8085 = !DILocation(line: 535, column: 11, scope: !8077)
!8086 = !DILocation(line: 560, column: 2, scope: !8077)
!8087 = !DILocation(line: 576, column: 2, scope: !8077)
!8088 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8089 = !DILocation(line: 603, column: 2, scope: !8077)
!8090 = distinct !DISubprogram(name: "z_arm_fault", scope: !8091, file: !8091, line: 1036, type: !8092, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8107)
!8091 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8092 = !DISubroutineType(types: !8093)
!8093 = !{null, !113, !113, !113, !8094}
!8094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8095, size: 32)
!8095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !8096)
!8096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8097)
!8097 = !{!8098, !8099, !8100, !8101, !8102, !8103, !8104, !8105, !8106}
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8096, file: !200, line: 26, baseType: !113, size: 32)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8096, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8096, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8096, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8096, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8096, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8096, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8096, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8096, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8107 = !{!8108, !8109, !8110, !8111, !8112, !8113, !8114, !8115, !8116, !8117}
!8108 = !DILocalVariable(name: "msp", arg: 1, scope: !8090, file: !8091, line: 1036, type: !113)
!8109 = !DILocalVariable(name: "psp", arg: 2, scope: !8090, file: !8091, line: 1036, type: !113)
!8110 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8090, file: !8091, line: 1036, type: !113)
!8111 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8090, file: !8091, line: 1037, type: !8094)
!8112 = !DILocalVariable(name: "reason", scope: !8090, file: !8091, line: 1039, type: !113)
!8113 = !DILocalVariable(name: "fault", scope: !8090, file: !8091, line: 1040, type: !105)
!8114 = !DILocalVariable(name: "recoverable", scope: !8090, file: !8091, line: 1041, type: !492)
!8115 = !DILocalVariable(name: "nested_exc", scope: !8090, file: !8091, line: 1041, type: !492)
!8116 = !DILocalVariable(name: "esf", scope: !8090, file: !8091, line: 1042, type: !2839)
!8117 = !DILocalVariable(name: "esf_copy", scope: !8090, file: !8091, line: 1047, type: !2840)
!8118 = !DILocation(line: 0, scope: !8090)
!8119 = !DILocation(line: 1040, column: 19, scope: !8090)
!8120 = !DILocation(line: 1041, column: 2, scope: !8090)
!8121 = !DILocation(line: 1047, column: 2, scope: !8090)
!8122 = !DILocation(line: 1047, column: 15, scope: !8090)
!8123 = !DILocalVariable(name: "key", arg: 1, scope: !8124, file: !7467, line: 84, type: !32)
!8124 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8125)
!8125 = !{!8123}
!8126 = !DILocation(line: 0, scope: !8124, inlinedAt: !8127)
!8127 = distinct !DILocation(line: 1050, column: 2, scope: !8090)
!8128 = !DILocation(line: 95, column: 2, scope: !8124, inlinedAt: !8127)
!8129 = !{i64 2258725}
!8130 = !DILocation(line: 1055, column: 9, scope: !8090)
!8131 = !DILocation(line: 1056, column: 2, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !8091, line: 1056, column: 2)
!8133 = distinct !DILexicalBlock(scope: !8090, file: !8091, line: 1056, column: 2)
!8134 = !DILocation(line: 1056, column: 2, scope: !8133)
!8135 = !DILocation(line: 1056, column: 2, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !8091, line: 1056, column: 2)
!8137 = !DILocation(line: 1040, column: 24, scope: !8090)
!8138 = !DILocation(line: 1063, column: 11, scope: !8090)
!8139 = !DILocation(line: 1064, column: 6, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8090, file: !8091, line: 1064, column: 6)
!8141 = !{i8 0, i8 2}
!8142 = !DILocation(line: 1064, column: 6, scope: !8090)
!8143 = !DILocation(line: 1070, column: 20, scope: !8090)
!8144 = !DILocation(line: 1070, column: 2, scope: !8090)
!8145 = !DILocation(line: 1089, column: 6, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8090, file: !8091, line: 1089, column: 6)
!8147 = !DILocation(line: 0, scope: !8146)
!8148 = !DILocation(line: 1089, column: 6, scope: !8090)
!8149 = !DILocation(line: 1090, column: 28, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !8091, line: 1090, column: 7)
!8151 = distinct !DILexicalBlock(scope: !8146, file: !8091, line: 1089, column: 18)
!8152 = !DILocation(line: 1090, column: 44, scope: !8150)
!8153 = !DILocation(line: 1090, column: 7, scope: !8151)
!8154 = !DILocation(line: 1091, column: 24, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !8091, line: 1090, column: 50)
!8156 = !DILocation(line: 1092, column: 3, scope: !8155)
!8157 = !DILocation(line: 1094, column: 23, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8146, file: !8091, line: 1093, column: 9)
!8159 = !DILocation(line: 1097, column: 2, scope: !8090)
!8160 = !DILocation(line: 1098, column: 1, scope: !8090)
!8161 = distinct !DISubprogram(name: "get_esf", scope: !8091, file: !8091, line: 894, type: !8162, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8165)
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!2839, !113, !113, !113, !8164}
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!8165 = !{!8166, !8167, !8168, !8169, !8170, !8171}
!8166 = !DILocalVariable(name: "msp", arg: 1, scope: !8161, file: !8091, line: 894, type: !113)
!8167 = !DILocalVariable(name: "psp", arg: 2, scope: !8161, file: !8091, line: 894, type: !113)
!8168 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8161, file: !8091, line: 894, type: !113)
!8169 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8161, file: !8091, line: 895, type: !8164)
!8170 = !DILocalVariable(name: "alternative_state_exc", scope: !8161, file: !8091, line: 897, type: !492)
!8171 = !DILocalVariable(name: "ptr_esf", scope: !8161, file: !8091, line: 898, type: !2839)
!8172 = !DILocation(line: 0, scope: !8161)
!8173 = !DILocation(line: 900, column: 14, scope: !8161)
!8174 = !DILocation(line: 902, column: 49, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8161, file: !8091, line: 902, column: 6)
!8176 = !DILocation(line: 902, column: 6, scope: !8161)
!8177 = !DILocation(line: 983, column: 44, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8161, file: !8091, line: 983, column: 6)
!8179 = !DILocation(line: 985, column: 3, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !8091, line: 985, column: 3)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !8091, line: 985, column: 3)
!8182 = distinct !DILexicalBlock(scope: !8183, file: !8091, line: 985, column: 3)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !8091, line: 985, column: 3)
!8184 = distinct !DILexicalBlock(scope: !8178, file: !8091, line: 984, column: 47)
!8185 = !DILocation(line: 986, column: 3, scope: !8184)
!8186 = !DILocation(line: 983, column: 18, scope: !8178)
!8187 = !DILocation(line: 991, column: 7, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !8091, line: 990, column: 30)
!8189 = distinct !DILexicalBlock(scope: !8161, file: !8091, line: 990, column: 6)
!8190 = !DILocation(line: 998, column: 16, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !8091, line: 995, column: 10)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !8091, line: 991, column: 7)
!8193 = !DILocation(line: 1002, column: 2, scope: !8161)
!8194 = !DILocation(line: 1003, column: 1, scope: !8161)
!8195 = distinct !DISubprogram(name: "fault_handle", scope: !8091, file: !8091, line: 786, type: !8196, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8198)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{!113, !2839, !105, !8164}
!8198 = !{!8199, !8200, !8201, !8202}
!8199 = !DILocalVariable(name: "esf", arg: 1, scope: !8195, file: !8091, line: 786, type: !2839)
!8200 = !DILocalVariable(name: "fault", arg: 2, scope: !8195, file: !8091, line: 786, type: !105)
!8201 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8195, file: !8091, line: 786, type: !8164)
!8202 = !DILocalVariable(name: "reason", scope: !8195, file: !8091, line: 788, type: !113)
!8203 = !DILocation(line: 0, scope: !8195)
!8204 = !DILocation(line: 790, column: 15, scope: !8195)
!8205 = !DILocation(line: 792, column: 2, scope: !8195)
!8206 = !DILocation(line: 794, column: 12, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8195, file: !8091, line: 792, column: 17)
!8208 = !DILocation(line: 795, column: 3, scope: !8207)
!8209 = !DILocation(line: 800, column: 12, scope: !8207)
!8210 = !DILocation(line: 801, column: 3, scope: !8207)
!8211 = !DILocation(line: 803, column: 12, scope: !8207)
!8212 = !DILocation(line: 804, column: 3, scope: !8207)
!8213 = !DILocation(line: 806, column: 12, scope: !8207)
!8214 = !DILocation(line: 807, column: 3, scope: !8207)
!8215 = !DILocation(line: 814, column: 3, scope: !8207)
!8216 = !DILocation(line: 815, column: 3, scope: !8207)
!8217 = !DILocation(line: 820, column: 3, scope: !8207)
!8218 = !DILocation(line: 821, column: 3, scope: !8207)
!8219 = !DILocation(line: 829, column: 2, scope: !8195)
!8220 = distinct !DISubprogram(name: "hard_fault", scope: !8091, file: !8091, line: 709, type: !8221, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8223)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{!113, !2839, !8164}
!8223 = !{!8224, !8225, !8226}
!8224 = !DILocalVariable(name: "esf", arg: 1, scope: !8220, file: !8091, line: 709, type: !2839)
!8225 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8220, file: !8091, line: 709, type: !8164)
!8226 = !DILocalVariable(name: "reason", scope: !8220, file: !8091, line: 711, type: !113)
!8227 = !DILocation(line: 0, scope: !8220)
!8228 = !DILocation(line: 713, column: 2, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !8091, line: 713, column: 2)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !8091, line: 713, column: 2)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !8091, line: 713, column: 2)
!8232 = distinct !DILexicalBlock(scope: !8220, file: !8091, line: 713, column: 2)
!8233 = !DILocation(line: 732, column: 15, scope: !8220)
!8234 = !DILocation(line: 734, column: 12, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8220, file: !8091, line: 734, column: 6)
!8236 = !DILocation(line: 734, column: 17, scope: !8235)
!8237 = !DILocation(line: 734, column: 41, scope: !8235)
!8238 = !DILocation(line: 734, column: 6, scope: !8220)
!8239 = !DILocation(line: 735, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !8091, line: 735, column: 3)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !8091, line: 735, column: 3)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !8091, line: 735, column: 3)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !8091, line: 735, column: 3)
!8244 = distinct !DILexicalBlock(scope: !8235, file: !8091, line: 734, column: 47)
!8245 = !DILocation(line: 736, column: 2, scope: !8244)
!8246 = !DILocation(line: 736, column: 19, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8235, file: !8091, line: 736, column: 13)
!8248 = !DILocation(line: 736, column: 49, scope: !8247)
!8249 = !DILocation(line: 736, column: 13, scope: !8235)
!8250 = !DILocation(line: 737, column: 3, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !8091, line: 737, column: 3)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !8091, line: 737, column: 3)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !8091, line: 737, column: 3)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !8091, line: 737, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8247, file: !8091, line: 736, column: 55)
!8256 = !DILocation(line: 738, column: 2, scope: !8255)
!8257 = !DILocation(line: 738, column: 19, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8247, file: !8091, line: 738, column: 13)
!8259 = !DILocation(line: 738, column: 24, scope: !8258)
!8260 = !DILocation(line: 738, column: 47, scope: !8258)
!8261 = !DILocation(line: 738, column: 13, scope: !8247)
!8262 = !DILocation(line: 739, column: 3, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !8091, line: 739, column: 3)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !8091, line: 739, column: 3)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !8091, line: 739, column: 3)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !8091, line: 739, column: 3)
!8267 = distinct !DILexicalBlock(scope: !8258, file: !8091, line: 738, column: 53)
!8268 = !DILocation(line: 740, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8267, file: !8091, line: 740, column: 7)
!8270 = !DILocation(line: 740, column: 7, scope: !8267)
!8271 = !DILocation(line: 741, column: 4, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !8091, line: 741, column: 4)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !8091, line: 741, column: 4)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !8091, line: 741, column: 4)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !8091, line: 741, column: 4)
!8276 = distinct !DILexicalBlock(scope: !8269, file: !8091, line: 740, column: 38)
!8277 = !DILocation(line: 742, column: 24, scope: !8276)
!8278 = !DILocation(line: 743, column: 3, scope: !8276)
!8279 = !DILocation(line: 743, column: 20, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8269, file: !8091, line: 743, column: 14)
!8281 = !DILocation(line: 743, column: 25, scope: !8280)
!8282 = !DILocation(line: 743, column: 52, scope: !8280)
!8283 = !DILocation(line: 743, column: 14, scope: !8269)
!8284 = !DILocation(line: 744, column: 13, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !8091, line: 743, column: 58)
!8286 = !DILocation(line: 745, column: 3, scope: !8285)
!8287 = !DILocation(line: 745, column: 20, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8280, file: !8091, line: 745, column: 14)
!8289 = !DILocation(line: 745, column: 25, scope: !8288)
!8290 = !DILocation(line: 745, column: 52, scope: !8288)
!8291 = !DILocation(line: 745, column: 14, scope: !8280)
!8292 = !DILocation(line: 746, column: 13, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8288, file: !8091, line: 745, column: 58)
!8294 = !DILocation(line: 747, column: 3, scope: !8293)
!8295 = !DILocation(line: 747, column: 20, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8288, file: !8091, line: 747, column: 14)
!8297 = !DILocation(line: 747, column: 52, scope: !8296)
!8298 = !DILocation(line: 747, column: 14, scope: !8288)
!8299 = !DILocation(line: 748, column: 13, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !8091, line: 747, column: 58)
!8301 = !DILocation(line: 754, column: 4, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !8091, line: 754, column: 4)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !8091, line: 754, column: 4)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !8091, line: 754, column: 4)
!8305 = distinct !DILexicalBlock(scope: !8296, file: !8091, line: 753, column: 10)
!8306 = !DILocation(line: 758, column: 3, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !8091, line: 758, column: 3)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !8091, line: 758, column: 3)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !8091, line: 758, column: 3)
!8310 = distinct !DILexicalBlock(scope: !8258, file: !8091, line: 757, column: 9)
!8311 = !DILocation(line: 766, column: 2, scope: !8220)
!8312 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8091, file: !8091, line: 229, type: !8196, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8313)
!8313 = !{!8314, !8315, !8316, !8317, !8318, !8319, !8322}
!8314 = !DILocalVariable(name: "esf", arg: 1, scope: !8312, file: !8091, line: 229, type: !2839)
!8315 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8312, file: !8091, line: 229, type: !105)
!8316 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8312, file: !8091, line: 230, type: !8164)
!8317 = !DILocalVariable(name: "reason", scope: !8312, file: !8091, line: 232, type: !113)
!8318 = !DILocalVariable(name: "mmfar", scope: !8312, file: !8091, line: 233, type: !113)
!8319 = !DILocalVariable(name: "temp", scope: !8320, file: !8091, line: 254, type: !113)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !8091, line: 244, column: 48)
!8321 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 244, column: 6)
!8322 = !DILocalVariable(name: "min_stack_ptr", scope: !8323, file: !8091, line: 309, type: !113)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !8091, line: 308, column: 43)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !8091, line: 308, column: 7)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !8091, line: 289, column: 40)
!8326 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 288, column: 6)
!8327 = !DILocation(line: 0, scope: !8312)
!8328 = !DILocation(line: 235, column: 2, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !8091, line: 235, column: 2)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8091, line: 235, column: 2)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !8091, line: 235, column: 2)
!8332 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 235, column: 2)
!8333 = !DILocation(line: 237, column: 12, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 237, column: 6)
!8335 = !DILocation(line: 237, column: 17, scope: !8334)
!8336 = !DILocation(line: 237, column: 41, scope: !8334)
!8337 = !DILocation(line: 237, column: 6, scope: !8312)
!8338 = !DILocation(line: 238, column: 3, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8091, line: 238, column: 3)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8091, line: 238, column: 3)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !8091, line: 238, column: 3)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !8091, line: 238, column: 3)
!8343 = distinct !DILexicalBlock(scope: !8334, file: !8091, line: 237, column: 47)
!8344 = !DILocation(line: 240, column: 2, scope: !8343)
!8345 = !DILocation(line: 241, column: 12, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 241, column: 6)
!8347 = !DILocation(line: 241, column: 17, scope: !8346)
!8348 = !DILocation(line: 241, column: 43, scope: !8346)
!8349 = !DILocation(line: 241, column: 6, scope: !8312)
!8350 = !DILocation(line: 242, column: 3, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !8091, line: 242, column: 3)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !8091, line: 242, column: 3)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !8091, line: 242, column: 3)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !8091, line: 242, column: 3)
!8355 = distinct !DILexicalBlock(scope: !8346, file: !8091, line: 241, column: 49)
!8356 = !DILocation(line: 243, column: 2, scope: !8355)
!8357 = !DILocation(line: 244, column: 12, scope: !8321)
!8358 = !DILocation(line: 244, column: 17, scope: !8321)
!8359 = !DILocation(line: 244, column: 42, scope: !8321)
!8360 = !DILocation(line: 244, column: 6, scope: !8312)
!8361 = !DILocation(line: 245, column: 3, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !8091, line: 245, column: 3)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !8091, line: 245, column: 3)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !8091, line: 245, column: 3)
!8365 = distinct !DILexicalBlock(scope: !8320, file: !8091, line: 245, column: 3)
!8366 = !DILocation(line: 254, column: 24, scope: !8320)
!8367 = !DILocation(line: 0, scope: !8320)
!8368 = !DILocation(line: 256, column: 13, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8320, file: !8091, line: 256, column: 7)
!8370 = !DILocation(line: 256, column: 18, scope: !8369)
!8371 = !DILocation(line: 256, column: 44, scope: !8369)
!8372 = !DILocation(line: 256, column: 7, scope: !8320)
!8373 = !DILocation(line: 258, column: 4, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !8091, line: 258, column: 4)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !8091, line: 258, column: 4)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !8091, line: 258, column: 4)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !8091, line: 258, column: 4)
!8378 = distinct !DILexicalBlock(scope: !8369, file: !8091, line: 256, column: 50)
!8379 = !DILocation(line: 259, column: 24, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8378, file: !8091, line: 259, column: 8)
!8381 = !DILocation(line: 259, column: 8, scope: !8378)
!8382 = !DILocation(line: 261, column: 15, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !8091, line: 259, column: 30)
!8384 = !DILocation(line: 262, column: 4, scope: !8383)
!8385 = !DILocation(line: 265, column: 12, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 265, column: 6)
!8387 = !DILocation(line: 265, column: 17, scope: !8386)
!8388 = !DILocation(line: 265, column: 42, scope: !8386)
!8389 = !DILocation(line: 265, column: 6, scope: !8312)
!8390 = !DILocation(line: 266, column: 3, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !8091, line: 266, column: 3)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8091, line: 266, column: 3)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !8091, line: 266, column: 3)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !8091, line: 266, column: 3)
!8395 = distinct !DILexicalBlock(scope: !8386, file: !8091, line: 265, column: 48)
!8396 = !DILocation(line: 267, column: 2, scope: !8395)
!8397 = !DILocation(line: 269, column: 12, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 269, column: 6)
!8399 = !DILocation(line: 269, column: 17, scope: !8398)
!8400 = !DILocation(line: 269, column: 41, scope: !8398)
!8401 = !DILocation(line: 269, column: 6, scope: !8312)
!8402 = !DILocation(line: 270, column: 3, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !8091, line: 270, column: 3)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !8091, line: 270, column: 3)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !8091, line: 270, column: 3)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !8091, line: 270, column: 3)
!8407 = distinct !DILexicalBlock(scope: !8398, file: !8091, line: 269, column: 47)
!8408 = !DILocation(line: 272, column: 2, scope: !8407)
!8409 = !DILocation(line: 288, column: 12, scope: !8326)
!8410 = !DILocation(line: 288, column: 17, scope: !8326)
!8411 = !DILocation(line: 288, column: 41, scope: !8326)
!8412 = !DILocation(line: 289, column: 9, scope: !8326)
!8413 = !DILocation(line: 289, column: 14, scope: !8326)
!8414 = !DILocation(line: 288, column: 6, scope: !8312)
!8415 = !DILocation(line: 308, column: 12, scope: !8324)
!8416 = !DILocation(line: 308, column: 17, scope: !8324)
!8417 = !DILocation(line: 308, column: 7, scope: !8325)
!8418 = !DILocation(line: 310, column: 6, scope: !8323)
!8419 = !DILocation(line: 309, column: 29, scope: !8323)
!8420 = !DILocation(line: 0, scope: !8323)
!8421 = !DILocation(line: 312, column: 8, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8323, file: !8091, line: 312, column: 8)
!8423 = !DILocation(line: 312, column: 8, scope: !8323)
!8424 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8425, file: !7785, line: 1099, type: !113)
!8425 = distinct !DISubprogram(name: "__set_PSP", scope: !7785, file: !7785, line: 1099, type: !7880, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8426)
!8426 = !{!8424}
!8427 = !DILocation(line: 0, scope: !8425, inlinedAt: !8428)
!8428 = distinct !DILocation(line: 338, column: 5, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8422, file: !8091, line: 312, column: 23)
!8430 = !DILocation(line: 1101, column: 3, scope: !8425, inlinedAt: !8428)
!8431 = !{i64 3577128}
!8432 = !DILocation(line: 341, column: 4, scope: !8429)
!8433 = !DILocation(line: 342, column: 5, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !8091, line: 342, column: 5)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !8091, line: 342, column: 5)
!8436 = distinct !DILexicalBlock(scope: !8422, file: !8091, line: 341, column: 11)
!8437 = !DILocation(line: 342, column: 5, scope: !8435)
!8438 = !DILocation(line: 342, column: 5, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8434, file: !8091, line: 342, column: 5)
!8440 = !DILocation(line: 360, column: 12, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8312, file: !8091, line: 360, column: 6)
!8442 = !DILocation(line: 360, column: 17, scope: !8441)
!8443 = !DILocation(line: 360, column: 41, scope: !8441)
!8444 = !DILocation(line: 360, column: 6, scope: !8312)
!8445 = !DILocation(line: 361, column: 14, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8441, file: !8091, line: 360, column: 47)
!8447 = !DILocation(line: 362, column: 2, scope: !8446)
!8448 = !DILocation(line: 366, column: 12, scope: !8312)
!8449 = !DILocation(line: 369, column: 15, scope: !8312)
!8450 = !DILocation(line: 371, column: 2, scope: !8312)
!8451 = distinct !DISubprogram(name: "bus_fault", scope: !8091, file: !8091, line: 383, type: !8452, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8454)
!8452 = !DISubroutineType(types: !8453)
!8453 = !{!105, !2839, !105, !8164}
!8454 = !{!8455, !8456, !8457, !8458, !8459}
!8455 = !DILocalVariable(name: "esf", arg: 1, scope: !8451, file: !8091, line: 383, type: !2839)
!8456 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8451, file: !8091, line: 383, type: !105)
!8457 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8451, file: !8091, line: 383, type: !8164)
!8458 = !DILocalVariable(name: "reason", scope: !8451, file: !8091, line: 385, type: !113)
!8459 = !DILocalVariable(name: "bfar", scope: !8460, file: !8091, line: 405, type: !113)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !8091, line: 395, column: 42)
!8461 = distinct !DILexicalBlock(scope: !8451, file: !8091, line: 395, column: 6)
!8462 = !DILocation(line: 0, scope: !8451)
!8463 = !DILocation(line: 387, column: 2, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !8091, line: 387, column: 2)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !8091, line: 387, column: 2)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !8091, line: 387, column: 2)
!8467 = distinct !DILexicalBlock(scope: !8451, file: !8091, line: 387, column: 2)
!8468 = !DILocation(line: 389, column: 11, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8451, file: !8091, line: 389, column: 6)
!8470 = !DILocation(line: 389, column: 16, scope: !8469)
!8471 = !DILocation(line: 389, column: 6, scope: !8451)
!8472 = !DILocation(line: 390, column: 3, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !8091, line: 390, column: 3)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8091, line: 390, column: 3)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8091, line: 390, column: 3)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !8091, line: 390, column: 3)
!8477 = distinct !DILexicalBlock(scope: !8469, file: !8091, line: 389, column: 39)
!8478 = !DILocation(line: 391, column: 2, scope: !8477)
!8479 = !DILocation(line: 392, column: 11, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8451, file: !8091, line: 392, column: 6)
!8481 = !DILocation(line: 392, column: 16, scope: !8480)
!8482 = !DILocation(line: 392, column: 6, scope: !8451)
!8483 = !DILocation(line: 393, column: 3, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !8091, line: 393, column: 3)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !8091, line: 393, column: 3)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !8091, line: 393, column: 3)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !8091, line: 393, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8480, file: !8091, line: 392, column: 41)
!8489 = !DILocation(line: 394, column: 2, scope: !8488)
!8490 = !DILocation(line: 395, column: 11, scope: !8461)
!8491 = !DILocation(line: 395, column: 16, scope: !8461)
!8492 = !DILocation(line: 395, column: 6, scope: !8451)
!8493 = !DILocation(line: 396, column: 3, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !8091, line: 396, column: 3)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !8091, line: 396, column: 3)
!8496 = distinct !DILexicalBlock(scope: !8497, file: !8091, line: 396, column: 3)
!8497 = distinct !DILexicalBlock(scope: !8460, file: !8091, line: 396, column: 3)
!8498 = !DILocation(line: 405, column: 3, scope: !8460)
!8499 = !DILocation(line: 0, scope: !8460)
!8500 = !DILocation(line: 407, column: 13, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8460, file: !8091, line: 407, column: 7)
!8502 = !DILocation(line: 407, column: 18, scope: !8501)
!8503 = !DILocation(line: 407, column: 44, scope: !8501)
!8504 = !DILocation(line: 407, column: 7, scope: !8460)
!8505 = !DILocation(line: 408, column: 4, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !8091, line: 408, column: 4)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !8091, line: 408, column: 4)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !8091, line: 408, column: 4)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !8091, line: 408, column: 4)
!8510 = distinct !DILexicalBlock(scope: !8501, file: !8091, line: 407, column: 50)
!8511 = !DILocation(line: 409, column: 24, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8510, file: !8091, line: 409, column: 8)
!8513 = !DILocation(line: 409, column: 8, scope: !8510)
!8514 = !DILocation(line: 411, column: 15, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8512, file: !8091, line: 409, column: 30)
!8516 = !DILocation(line: 412, column: 4, scope: !8515)
!8517 = !DILocation(line: 415, column: 11, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8451, file: !8091, line: 415, column: 6)
!8519 = !DILocation(line: 415, column: 16, scope: !8518)
!8520 = !DILocation(line: 415, column: 6, scope: !8451)
!8521 = !DILocation(line: 416, column: 3, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !8091, line: 416, column: 3)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !8091, line: 416, column: 3)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !8091, line: 416, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8091, line: 416, column: 3)
!8526 = distinct !DILexicalBlock(scope: !8518, file: !8091, line: 415, column: 44)
!8527 = !DILocation(line: 417, column: 2, scope: !8526)
!8528 = !DILocation(line: 418, column: 12, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8451, file: !8091, line: 418, column: 6)
!8530 = !DILocation(line: 418, column: 17, scope: !8529)
!8531 = !DILocation(line: 418, column: 41, scope: !8529)
!8532 = !DILocation(line: 418, column: 6, scope: !8451)
!8533 = !DILocation(line: 423, column: 18, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8529, file: !8091, line: 423, column: 13)
!8535 = !DILocation(line: 423, column: 23, scope: !8534)
!8536 = !DILocation(line: 423, column: 13, scope: !8529)
!8537 = !DILocation(line: 0, scope: !8529)
!8538 = !DILocation(line: 524, column: 12, scope: !8451)
!8539 = !DILocation(line: 526, column: 15, scope: !8451)
!8540 = !DILocation(line: 528, column: 2, scope: !8451)
!8541 = distinct !DISubprogram(name: "usage_fault", scope: !8091, file: !8091, line: 539, type: !8542, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8546)
!8542 = !DISubroutineType(types: !8543)
!8543 = !{!113, !8544}
!8544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8545, size: 32)
!8545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2840)
!8546 = !{!8547, !8548}
!8547 = !DILocalVariable(name: "esf", arg: 1, scope: !8541, file: !8091, line: 539, type: !8544)
!8548 = !DILocalVariable(name: "reason", scope: !8541, file: !8091, line: 541, type: !113)
!8549 = !DILocation(line: 0, scope: !8541)
!8550 = !DILocation(line: 543, column: 2, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !8091, line: 543, column: 2)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8091, line: 543, column: 2)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !8091, line: 543, column: 2)
!8554 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 543, column: 2)
!8555 = !DILocation(line: 546, column: 12, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 546, column: 6)
!8557 = !DILocation(line: 546, column: 17, scope: !8556)
!8558 = !DILocation(line: 546, column: 43, scope: !8556)
!8559 = !DILocation(line: 546, column: 6, scope: !8541)
!8560 = !DILocation(line: 547, column: 3, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !8091, line: 547, column: 3)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !8091, line: 547, column: 3)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !8091, line: 547, column: 3)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !8091, line: 547, column: 3)
!8565 = distinct !DILexicalBlock(scope: !8556, file: !8091, line: 546, column: 49)
!8566 = !DILocation(line: 548, column: 2, scope: !8565)
!8567 = !DILocation(line: 549, column: 12, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 549, column: 6)
!8569 = !DILocation(line: 549, column: 17, scope: !8568)
!8570 = !DILocation(line: 549, column: 43, scope: !8568)
!8571 = !DILocation(line: 549, column: 6, scope: !8541)
!8572 = !DILocation(line: 550, column: 3, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !8091, line: 550, column: 3)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !8091, line: 550, column: 3)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !8091, line: 550, column: 3)
!8576 = distinct !DILexicalBlock(scope: !8577, file: !8091, line: 550, column: 3)
!8577 = distinct !DILexicalBlock(scope: !8568, file: !8091, line: 549, column: 49)
!8578 = !DILocation(line: 551, column: 2, scope: !8577)
!8579 = !DILocation(line: 567, column: 12, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 567, column: 6)
!8581 = !DILocation(line: 567, column: 17, scope: !8580)
!8582 = !DILocation(line: 567, column: 38, scope: !8580)
!8583 = !DILocation(line: 567, column: 6, scope: !8541)
!8584 = !DILocation(line: 568, column: 3, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !8091, line: 568, column: 3)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !8091, line: 568, column: 3)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !8091, line: 568, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !8091, line: 568, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8580, file: !8091, line: 567, column: 44)
!8590 = !DILocation(line: 569, column: 2, scope: !8589)
!8591 = !DILocation(line: 570, column: 12, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 570, column: 6)
!8593 = !DILocation(line: 570, column: 17, scope: !8592)
!8594 = !DILocation(line: 570, column: 39, scope: !8592)
!8595 = !DILocation(line: 570, column: 6, scope: !8541)
!8596 = !DILocation(line: 571, column: 3, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !8091, line: 571, column: 3)
!8598 = distinct !DILexicalBlock(scope: !8599, file: !8091, line: 571, column: 3)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !8091, line: 571, column: 3)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !8091, line: 571, column: 3)
!8601 = distinct !DILexicalBlock(scope: !8592, file: !8091, line: 570, column: 45)
!8602 = !DILocation(line: 572, column: 2, scope: !8601)
!8603 = !DILocation(line: 573, column: 12, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 573, column: 6)
!8605 = !DILocation(line: 573, column: 17, scope: !8604)
!8606 = !DILocation(line: 573, column: 42, scope: !8604)
!8607 = !DILocation(line: 573, column: 6, scope: !8541)
!8608 = !DILocation(line: 574, column: 3, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !8091, line: 574, column: 3)
!8610 = distinct !DILexicalBlock(scope: !8611, file: !8091, line: 574, column: 3)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !8091, line: 574, column: 3)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8091, line: 574, column: 3)
!8613 = distinct !DILexicalBlock(scope: !8604, file: !8091, line: 573, column: 48)
!8614 = !DILocation(line: 575, column: 2, scope: !8613)
!8615 = !DILocation(line: 576, column: 12, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8541, file: !8091, line: 576, column: 6)
!8617 = !DILocation(line: 576, column: 17, scope: !8616)
!8618 = !DILocation(line: 576, column: 44, scope: !8616)
!8619 = !DILocation(line: 576, column: 6, scope: !8541)
!8620 = !DILocation(line: 577, column: 3, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !8091, line: 577, column: 3)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8091, line: 577, column: 3)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !8091, line: 577, column: 3)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !8091, line: 577, column: 3)
!8625 = distinct !DILexicalBlock(scope: !8616, file: !8091, line: 576, column: 50)
!8626 = !DILocation(line: 578, column: 2, scope: !8625)
!8627 = !DILocation(line: 581, column: 12, scope: !8541)
!8628 = !DILocation(line: 583, column: 2, scope: !8541)
!8629 = distinct !DISubprogram(name: "debug_monitor", scope: !8091, file: !8091, line: 632, type: !8630, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8632)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{null, !2839, !8164}
!8632 = !{!8633, !8634}
!8633 = !DILocalVariable(name: "esf", arg: 1, scope: !8629, file: !8091, line: 632, type: !2839)
!8634 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8629, file: !8091, line: 632, type: !8164)
!8635 = !DILocation(line: 0, scope: !8629)
!8636 = !DILocation(line: 634, column: 15, scope: !8629)
!8637 = !DILocation(line: 636, column: 2, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !8091, line: 636, column: 2)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !8091, line: 636, column: 2)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !8091, line: 636, column: 2)
!8641 = distinct !DILexicalBlock(scope: !8629, file: !8091, line: 636, column: 2)
!8642 = !DILocation(line: 652, column: 1, scope: !8629)
!8643 = distinct !DISubprogram(name: "reserved_exception", scope: !8091, file: !8091, line: 776, type: !8644, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8646)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{null, !8544, !105}
!8646 = !{!8647, !8648}
!8647 = !DILocalVariable(name: "esf", arg: 1, scope: !8643, file: !8091, line: 776, type: !8544)
!8648 = !DILocalVariable(name: "fault", arg: 2, scope: !8643, file: !8091, line: 776, type: !105)
!8649 = !DILocation(line: 0, scope: !8643)
!8650 = !DILocation(line: 780, column: 2, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !8091, line: 780, column: 2)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !8091, line: 780, column: 2)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !8091, line: 780, column: 2)
!8654 = distinct !DILexicalBlock(scope: !8643, file: !8091, line: 780, column: 2)
!8655 = !DILocation(line: 783, column: 1, scope: !8643)
!8656 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8091, file: !8091, line: 658, type: !8657, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !8659)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!492, !2839}
!8659 = !{!8660, !8661, !8662}
!8660 = !DILocalVariable(name: "esf", arg: 1, scope: !8656, file: !8091, line: 658, type: !2839)
!8661 = !DILocalVariable(name: "ret_addr", scope: !8656, file: !8091, line: 660, type: !2611)
!8662 = !DILocalVariable(name: "fault_insn", scope: !8656, file: !8091, line: 686, type: !183)
!8663 = !DILocation(line: 0, scope: !8656)
!8664 = !DILocation(line: 660, column: 46, scope: !8656)
!8665 = !DILocation(line: 660, column: 23, scope: !8656)
!8666 = !DILocation(line: 682, column: 11, scope: !8656)
!8667 = !DILocation(line: 271, column: 3, scope: !8668, inlinedAt: !8669)
!8668 = distinct !DISubprogram(name: "__DSB", scope: !7785, file: !7785, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !397)
!8669 = distinct !DILocation(line: 683, column: 2, scope: !8656)
!8670 = !{i64 3553263}
!8671 = !DILocation(line: 260, column: 3, scope: !8672, inlinedAt: !8673)
!8672 = distinct !DISubprogram(name: "__ISB", scope: !7785, file: !7785, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !397)
!8673 = distinct !DILocation(line: 684, column: 2, scope: !8656)
!8674 = !{i64 3552980}
!8675 = !DILocation(line: 686, column: 35, scope: !8656)
!8676 = !DILocation(line: 686, column: 24, scope: !8656)
!8677 = !DILocation(line: 688, column: 11, scope: !8656)
!8678 = !DILocation(line: 271, column: 3, scope: !8668, inlinedAt: !8679)
!8679 = distinct !DILocation(line: 689, column: 2, scope: !8656)
!8680 = !DILocation(line: 260, column: 3, scope: !8672, inlinedAt: !8681)
!8681 = distinct !DILocation(line: 690, column: 2, scope: !8656)
!8682 = !DILocation(line: 693, column: 45, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8656, file: !8091, line: 693, column: 6)
!8684 = !DILocation(line: 699, column: 1, scope: !8656)
!8685 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8091, file: !8091, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !397)
!8686 = !DILocation(line: 1111, column: 11, scope: !8685)
!8687 = !DILocation(line: 1136, column: 1, scope: !8685)
!8688 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8689, file: !8689, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !8690)
!8689 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8690 = !{!8691}
!8691 = !DILocalVariable(name: "irq", scope: !8688, file: !8689, line: 28, type: !105)
!8692 = !DILocation(line: 0, scope: !8688)
!8693 = !DILocation(line: 30, column: 2, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8688, file: !8689, line: 30, column: 2)
!8695 = !DILocation(line: 31, column: 3, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !8689, line: 30, column: 39)
!8697 = distinct !DILexicalBlock(scope: !8694, file: !8689, line: 30, column: 2)
!8698 = !DILocation(line: 30, column: 35, scope: !8697)
!8699 = !DILocation(line: 30, column: 13, scope: !8697)
!8700 = distinct !{!8700, !8693, !8701}
!8701 = !DILocation(line: 32, column: 2, scope: !8694)
!8702 = !DILocation(line: 33, column: 1, scope: !8688)
!8703 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7825, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2882, retainedNodes: !8704)
!8704 = !{!8705, !8706}
!8705 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8703, file: !679, line: 1814, type: !933)
!8706 = !DILocalVariable(name: "priority", arg: 2, scope: !8703, file: !679, line: 1814, type: !113)
!8707 = !DILocation(line: 0, scope: !8703)
!8708 = !DILocation(line: 1816, column: 7, scope: !8703)
!8709 = !DILocation(line: 0, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8703, file: !679, line: 1816, column: 7)
!8711 = !DILocation(line: 1824, column: 1, scope: !8703)
!8712 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8713, file: !8713, line: 27, type: !8714, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !8819)
!8713 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8714 = !DISubroutineType(types: !8715)
!8715 = !{null, !8716}
!8716 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8717)
!8717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8718, size: 32)
!8718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8719)
!8719 = !{!8720, !8778, !8790, !8791, !8792, !8793, !8799, !8814}
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8718, file: !127, line: 247, baseType: !8721, size: 384)
!8721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8722)
!8722 = !{!8723, !8747, !8754, !8755, !8756, !8765, !8766, !8767}
!8723 = !DIDerivedType(tag: DW_TAG_member, scope: !8721, file: !127, line: 60, baseType: !8724, size: 64)
!8724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8721, file: !127, line: 60, size: 64, elements: !8725)
!8725 = !{!8726, !8741}
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8724, file: !127, line: 61, baseType: !8727, size: 64)
!8727 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8728)
!8728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8729)
!8729 = !{!8730, !8736}
!8730 = !DIDerivedType(tag: DW_TAG_member, scope: !8728, file: !137, line: 38, baseType: !8731, size: 32)
!8731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8728, file: !137, line: 38, size: 32, elements: !8732)
!8732 = !{!8733, !8735}
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8731, file: !137, line: 39, baseType: !8734, size: 32)
!8734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8728, size: 32)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8731, file: !137, line: 40, baseType: !8734, size: 32)
!8736 = !DIDerivedType(tag: DW_TAG_member, scope: !8728, file: !137, line: 42, baseType: !8737, size: 32, offset: 32)
!8737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8728, file: !137, line: 42, size: 32, elements: !8738)
!8738 = !{!8739, !8740}
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8737, file: !137, line: 43, baseType: !8734, size: 32)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8737, file: !137, line: 44, baseType: !8734, size: 32)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8724, file: !127, line: 62, baseType: !8742, size: 64)
!8742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8743)
!8743 = !{!8744}
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8742, file: !153, line: 50, baseType: !8745, size: 64)
!8745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8746, size: 64, elements: !158)
!8746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8742, size: 32)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8721, file: !127, line: 68, baseType: !8748, size: 32, offset: 64)
!8748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8749, size: 32)
!8749 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8750)
!8750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8751)
!8751 = !{!8752}
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8750, file: !163, line: 232, baseType: !8753, size: 64)
!8753 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8728)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8721, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8721, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8756 = !DIDerivedType(tag: DW_TAG_member, scope: !8721, file: !127, line: 90, baseType: !8757, size: 16, offset: 112)
!8757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8721, file: !127, line: 90, size: 16, elements: !8758)
!8758 = !{!8759, !8764}
!8759 = !DIDerivedType(tag: DW_TAG_member, scope: !8757, file: !127, line: 91, baseType: !8760, size: 16)
!8760 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8757, file: !127, line: 91, size: 16, elements: !8761)
!8761 = !{!8762, !8763}
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8760, file: !127, line: 96, baseType: !179, size: 8)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8760, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8757, file: !127, line: 100, baseType: !183, size: 16)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8721, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8721, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8721, file: !127, line: 131, baseType: !8768, size: 192, offset: 192)
!8768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8769)
!8769 = !{!8770, !8771, !8777}
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8768, file: !163, line: 245, baseType: !8727, size: 64)
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8768, file: !163, line: 246, baseType: !8772, size: 32, offset: 64)
!8772 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8773)
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8774, size: 32)
!8774 = !DISubroutineType(types: !8775)
!8775 = !{null, !8776}
!8776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8768, size: 32)
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8768, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8718, file: !127, line: 250, baseType: !8779, size: 288, offset: 384)
!8779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8780)
!8780 = !{!8781, !8782, !8783, !8784, !8785, !8786, !8787, !8788, !8789}
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8779, file: !200, line: 26, baseType: !113, size: 32)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8779, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8779, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8779, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8779, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8779, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8779, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8779, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8779, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8718, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8718, file: !127, line: 256, baseType: !8749, size: 64, offset: 704)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8718, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8718, file: !127, line: 300, baseType: !8794, size: 96, offset: 800)
!8794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8795)
!8795 = !{!8796, !8797, !8798}
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8794, file: !127, line: 153, baseType: !22, size: 32)
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8794, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8794, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8718, file: !127, line: 325, baseType: !8800, size: 32, offset: 896)
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8801, size: 32)
!8801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8802)
!8802 = !{!8803, !8809, !8810}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8801, file: !122, line: 5074, baseType: !8804, size: 96)
!8804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8805)
!8805 = !{!8806, !8807, !8808}
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8804, file: !226, line: 57, baseType: !229, size: 32)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8804, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8804, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8801, file: !122, line: 5075, baseType: !8749, size: 64, offset: 96)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8801, file: !122, line: 5076, baseType: !8811, size: 32, offset: 160)
!8811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8812)
!8812 = !{!8813}
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8811, file: !236, line: 52, baseType: !22, size: 32)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8718, file: !127, line: 343, baseType: !8815, size: 64, offset: 928)
!8815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8816)
!8816 = !{!8817, !8818}
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8815, file: !200, line: 63, baseType: !113, size: 32)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8815, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8819 = !{!8820}
!8820 = !DILocalVariable(name: "thread", arg: 1, scope: !8712, file: !8713, line: 27, type: !8716)
!8821 = !DILocation(line: 0, scope: !8712)
!8822 = !DILocation(line: 29, column: 6, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8712, file: !8713, line: 29, column: 6)
!8824 = !DILocation(line: 29, column: 15, scope: !8823)
!8825 = !DILocation(line: 29, column: 6, scope: !8712)
!8826 = !DILocation(line: 1031, column: 3, scope: !8827, inlinedAt: !8830)
!8827 = distinct !DISubprogram(name: "__get_IPSR", scope: !7785, file: !7785, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !8828)
!8828 = !{!8829}
!8829 = !DILocalVariable(name: "result", scope: !8827, file: !7785, line: 1029, type: !113)
!8830 = distinct !DILocation(line: 48, column: 10, scope: !8831, inlinedAt: !8835)
!8831 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8832, file: !8832, line: 46, type: !8833, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2927, retainedNodes: !397)
!8832 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8833 = !DISubroutineType(types: !8834)
!8834 = !{!492}
!8835 = distinct !DILocation(line: 30, column: 7, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !8713, line: 30, column: 7)
!8837 = distinct !DILexicalBlock(scope: !8823, file: !8713, line: 29, column: 26)
!8838 = !{i64 3542111}
!8839 = !DILocation(line: 0, scope: !8827, inlinedAt: !8830)
!8840 = !DILocation(line: 48, column: 9, scope: !8831, inlinedAt: !8835)
!8841 = !DILocation(line: 30, column: 7, scope: !8837)
!8842 = !DILocation(line: 42, column: 14, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8836, file: !8713, line: 30, column: 25)
!8844 = !DILocation(line: 48, column: 15, scope: !8843)
!8845 = !DILocation(line: 49, column: 3, scope: !8843)
!8846 = !DILocation(line: 52, column: 2, scope: !8712)
!8847 = !DILocation(line: 53, column: 1, scope: !8712)
!8848 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !539, file: !539, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !397)
!8849 = !DILocation(line: 134, column: 2, scope: !8848)
!8850 = !DILocation(line: 156, column: 1, scope: !8848)
!8851 = !DILocation(line: 0, scope: !538)
!8852 = !DILocation(line: 289, column: 36, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !538, file: !539, line: 285, column: 2)
!8854 = !DILocation(line: 289, column: 42, scope: !8853)
!8855 = !DILocation(line: 300, column: 36, scope: !538)
!8856 = !DILocation(line: 301, column: 35, scope: !538)
!8857 = !DILocation(line: 302, column: 37, scope: !538)
!8858 = !DILocation(line: 311, column: 2, scope: !538)
!8859 = !DILocation(line: 316, column: 1, scope: !538)
!8860 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !707, file: !707, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8861 = !DILocation(line: 188, column: 12, scope: !8860)
!8862 = !DILocation(line: 271, column: 3, scope: !8863, inlinedAt: !8864)
!8863 = distinct !DISubprogram(name: "__DSB", scope: !7785, file: !7785, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8864 = distinct !DILocation(line: 192, column: 2, scope: !8860)
!8865 = !{i64 3705777}
!8866 = !DILocation(line: 260, column: 3, scope: !8867, inlinedAt: !8868)
!8867 = distinct !DISubprogram(name: "__ISB", scope: !7785, file: !7785, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8868 = distinct !DILocation(line: 193, column: 2, scope: !8860)
!8869 = !{i64 3705494}
!8870 = !DILocation(line: 194, column: 1, scope: !8860)
!8871 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !707, file: !707, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8872 = !DILocation(line: 282, column: 3, scope: !8873, inlinedAt: !8874)
!8873 = distinct !DISubprogram(name: "__DMB", scope: !7785, file: !7785, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8874 = distinct !DILocation(line: 202, column: 2, scope: !8871)
!8875 = !{i64 3706053}
!8876 = !DILocation(line: 205, column: 12, scope: !8871)
!8877 = !DILocation(line: 206, column: 1, scope: !8871)
!8878 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !707, file: !707, line: 275, type: !8879, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8892)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{null, !8881, !1959, !3744, !3744}
!8881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8882, size: 32)
!8882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8883)
!8883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !8884)
!8884 = !{!8885, !8886, !8887}
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8883, file: !651, line: 53, baseType: !22, size: 32)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8883, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8883, file: !651, line: 55, baseType: !8888, size: 32, offset: 64)
!8888 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !8889)
!8889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !8890)
!8890 = !{!8891}
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8889, file: !657, line: 150, baseType: !113, size: 32)
!8892 = !{!8893, !8894, !8895, !8896}
!8893 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8878, file: !707, line: 276, type: !8881)
!8894 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8878, file: !707, line: 276, type: !1959)
!8895 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8878, file: !707, line: 277, type: !3744)
!8896 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8878, file: !707, line: 277, type: !3744)
!8897 = !DILocation(line: 0, scope: !8878)
!8898 = !DILocation(line: 279, column: 6, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8878, file: !707, line: 279, column: 6)
!8900 = !DILocation(line: 280, column: 57, scope: !8899)
!8901 = !DILocation(line: 279, column: 6, scope: !8878)
!8902 = !DILocation(line: 282, column: 3, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !707, line: 282, column: 3)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !707, line: 282, column: 3)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !707, line: 282, column: 3)
!8906 = distinct !DILexicalBlock(scope: !8899, file: !707, line: 280, column: 69)
!8907 = !DILocation(line: 285, column: 1, scope: !8878)
!8908 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8909, file: !8909, line: 220, type: !8910, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8912)
!8909 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!105, !8881, !1959, !3744, !3744}
!8912 = !{!8913, !8914, !8915, !8916, !8917}
!8913 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8908, file: !8909, line: 221, type: !8881)
!8914 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8908, file: !8909, line: 221, type: !1959)
!8915 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8908, file: !8909, line: 222, type: !3744)
!8916 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8908, file: !8909, line: 223, type: !3744)
!8917 = !DILocalVariable(name: "mpu_reg_index", scope: !8908, file: !8909, line: 225, type: !105)
!8918 = !DILocation(line: 0, scope: !8908)
!8919 = !DILocation(line: 225, column: 22, scope: !8908)
!8920 = !DILocation(line: 233, column: 18, scope: !8908)
!8921 = !DILocation(line: 236, column: 23, scope: !8908)
!8922 = !DILocation(line: 236, column: 21, scope: !8908)
!8923 = !DILocation(line: 238, column: 2, scope: !8908)
!8924 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !707, file: !707, line: 105, type: !8925, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8927)
!8925 = !DISubroutineType(types: !8926)
!8926 = !{!105, !8881, !169, !169, !492}
!8927 = !{!8928, !8929, !8930, !8931, !8932, !8933}
!8928 = !DILocalVariable(name: "regions", arg: 1, scope: !8924, file: !707, line: 106, type: !8881)
!8929 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8924, file: !707, line: 106, type: !169)
!8930 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8924, file: !707, line: 106, type: !169)
!8931 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8924, file: !707, line: 107, type: !492)
!8932 = !DILocalVariable(name: "i", scope: !8924, file: !707, line: 109, type: !105)
!8933 = !DILocalVariable(name: "reg_index", scope: !8924, file: !707, line: 110, type: !105)
!8934 = !DILocation(line: 0, scope: !8924)
!8935 = !DILocation(line: 110, column: 18, scope: !8924)
!8936 = !DILocation(line: 112, column: 16, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !707, line: 112, column: 2)
!8938 = distinct !DILexicalBlock(scope: !8924, file: !707, line: 112, column: 2)
!8939 = !DILocation(line: 112, column: 2, scope: !8938)
!8940 = !DILocation(line: 113, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !707, line: 113, column: 7)
!8942 = distinct !DILexicalBlock(scope: !8937, file: !707, line: 112, column: 36)
!8943 = !DILocation(line: 113, column: 18, scope: !8941)
!8944 = !DILocation(line: 113, column: 23, scope: !8941)
!8945 = !DILocation(line: 113, column: 7, scope: !8942)
!8946 = !DILocation(line: 118, column: 23, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8942, file: !707, line: 118, column: 7)
!8948 = !DILocation(line: 119, column: 7, scope: !8947)
!8949 = !DILocation(line: 118, column: 7, scope: !8942)
!8950 = !DILocation(line: 120, column: 4, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !707, line: 120, column: 4)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !707, line: 120, column: 4)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !707, line: 120, column: 4)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !707, line: 120, column: 4)
!8955 = distinct !DILexicalBlock(scope: !8947, file: !707, line: 119, column: 45)
!8956 = !DILocation(line: 121, column: 4, scope: !8955)
!8957 = !DILocation(line: 124, column: 36, scope: !8942)
!8958 = !DILocation(line: 124, column: 15, scope: !8942)
!8959 = !DILocation(line: 126, column: 17, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8942, file: !707, line: 126, column: 7)
!8961 = !DILocation(line: 126, column: 7, scope: !8942)
!8962 = !DILocation(line: 131, column: 12, scope: !8942)
!8963 = !DILocation(line: 132, column: 2, scope: !8942)
!8964 = !DILocation(line: 112, column: 32, scope: !8937)
!8965 = distinct !{!8965, !8939, !8966}
!8966 = !DILocation(line: 132, column: 2, scope: !8938)
!8967 = !DILocation(line: 135, column: 1, scope: !8924)
!8968 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8909, file: !8909, line: 63, type: !8969, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8971)
!8969 = !DISubroutineType(types: !8970)
!8970 = !{!105, !8881}
!8971 = !{!8972, !8973}
!8972 = !DILocalVariable(name: "part", arg: 1, scope: !8968, file: !8909, line: 63, type: !8881)
!8973 = !DILocalVariable(name: "partition_is_valid", scope: !8968, file: !8909, line: 70, type: !105)
!8974 = !DILocation(line: 0, scope: !8968)
!8975 = !DILocation(line: 71, column: 11, scope: !8968)
!8976 = !DILocation(line: 71, column: 37, scope: !8968)
!8977 = !DILocation(line: 72, column: 3, scope: !8968)
!8978 = !DILocation(line: 71, column: 30, scope: !8968)
!8979 = !DILocation(line: 75, column: 11, scope: !8968)
!8980 = !DILocation(line: 75, column: 17, scope: !8968)
!8981 = !DILocation(line: 75, column: 38, scope: !8968)
!8982 = !DILocation(line: 77, column: 2, scope: !8968)
!8983 = distinct !DISubprogram(name: "mpu_configure_region", scope: !707, file: !707, line: 79, type: !8984, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8986)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!105, !1959, !8881}
!8986 = !{!8987, !8988, !8989}
!8987 = !DILocalVariable(name: "index", arg: 1, scope: !8983, file: !707, line: 79, type: !1959)
!8988 = !DILocalVariable(name: "new_region", arg: 2, scope: !8983, file: !707, line: 80, type: !8881)
!8989 = !DILocalVariable(name: "region_conf", scope: !8983, file: !707, line: 82, type: !696)
!8990 = !DILocation(line: 0, scope: !8983)
!8991 = !DILocation(line: 82, column: 2, scope: !8983)
!8992 = !DILocation(line: 82, column: 24, scope: !8983)
!8993 = !DILocation(line: 87, column: 33, scope: !8983)
!8994 = !DILocation(line: 87, column: 14, scope: !8983)
!8995 = !DILocation(line: 87, column: 19, scope: !8983)
!8996 = !DILocation(line: 91, column: 55, scope: !8983)
!8997 = !DILocation(line: 92, column: 16, scope: !8983)
!8998 = !DILocation(line: 92, column: 53, scope: !8983)
!8999 = !DILocation(line: 91, column: 2, scope: !8983)
!9000 = !DILocation(line: 95, column: 9, scope: !8983)
!9001 = !DILocation(line: 97, column: 1, scope: !8983)
!9002 = !DILocation(line: 95, column: 2, scope: !8983)
!9003 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8909, file: !8909, line: 113, type: !9004, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9009)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{null, !9006, !9007, !113, !113}
!9006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!9007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9008, size: 32)
!9008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8888)
!9009 = !{!9010, !9011, !9012, !9013}
!9010 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9003, file: !8909, line: 114, type: !9006)
!9011 = !DILocalVariable(name: "attr", arg: 2, scope: !9003, file: !8909, line: 115, type: !9007)
!9012 = !DILocalVariable(name: "base", arg: 3, scope: !9003, file: !8909, line: 115, type: !113)
!9013 = !DILocalVariable(name: "size", arg: 4, scope: !9003, file: !8909, line: 115, type: !113)
!9014 = !DILocation(line: 0, scope: !9003)
!9015 = !DILocation(line: 127, column: 23, scope: !9003)
!9016 = !DILocation(line: 127, column: 35, scope: !9003)
!9017 = !DILocation(line: 127, column: 33, scope: !9003)
!9018 = !DILocation(line: 127, column: 10, scope: !9003)
!9019 = !DILocation(line: 127, column: 15, scope: !9003)
!9020 = !DILocation(line: 129, column: 1, scope: !9003)
!9021 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !707, file: !707, line: 57, type: !9022, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9024)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{!105, !1959, !694}
!9024 = !{!9025, !9026}
!9025 = !DILocalVariable(name: "index", arg: 1, scope: !9021, file: !707, line: 57, type: !1959)
!9026 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9021, file: !707, line: 58, type: !694)
!9027 = !DILocation(line: 0, scope: !9021)
!9028 = !DILocation(line: 61, column: 6, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9021, file: !707, line: 61, column: 6)
!9030 = !DILocation(line: 61, column: 12, scope: !9029)
!9031 = !DILocation(line: 61, column: 6, scope: !9021)
!9032 = !DILocation(line: 64, column: 3, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !707, line: 64, column: 3)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !707, line: 64, column: 3)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !707, line: 64, column: 3)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !707, line: 64, column: 3)
!9037 = distinct !DILexicalBlock(scope: !9029, file: !707, line: 61, column: 40)
!9038 = !DILocation(line: 65, column: 3, scope: !9037)
!9039 = !DILocation(line: 71, column: 2, scope: !9021)
!9040 = !DILocation(line: 73, column: 2, scope: !9021)
!9041 = !DILocation(line: 74, column: 1, scope: !9021)
!9042 = distinct !DISubprogram(name: "region_init", scope: !8909, file: !8909, line: 29, type: !9043, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9045)
!9043 = !DISubroutineType(types: !9044)
!9044 = !{null, !3744, !694}
!9045 = !{!9046, !9047}
!9046 = !DILocalVariable(name: "index", arg: 1, scope: !9042, file: !8909, line: 29, type: !3744)
!9047 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9042, file: !8909, line: 30, type: !694)
!9048 = !DILocation(line: 0, scope: !9042)
!9049 = !DILocation(line: 33, column: 2, scope: !9042)
!9050 = !DILocation(line: 47, column: 28, scope: !9042)
!9051 = !DILocation(line: 47, column: 33, scope: !9042)
!9052 = !DILocation(line: 48, column: 26, scope: !9042)
!9053 = !DILocation(line: 47, column: 12, scope: !9042)
!9054 = !DILocation(line: 49, column: 32, scope: !9042)
!9055 = !DILocation(line: 49, column: 37, scope: !9042)
!9056 = !DILocation(line: 49, column: 12, scope: !9042)
!9057 = !DILocation(line: 53, column: 1, scope: !9042)
!9058 = distinct !DISubprogram(name: "set_region_number", scope: !9059, file: !9059, line: 32, type: !7880, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9060)
!9059 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9060 = !{!9061}
!9061 = !DILocalVariable(name: "index", arg: 1, scope: !9058, file: !9059, line: 32, type: !113)
!9062 = !DILocation(line: 0, scope: !9058)
!9063 = !DILocation(line: 34, column: 11, scope: !9058)
!9064 = !DILocation(line: 35, column: 1, scope: !9058)
!9065 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8909, file: !8909, line: 88, type: !9066, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9068)
!9066 = !DISubroutineType(types: !9067)
!9067 = !{!113, !113}
!9068 = !{!9069}
!9069 = !DILocalVariable(name: "size", arg: 1, scope: !9065, file: !8909, line: 88, type: !113)
!9070 = !DILocation(line: 0, scope: !9065)
!9071 = !DILocation(line: 91, column: 11, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9065, file: !8909, line: 91, column: 6)
!9073 = !DILocation(line: 91, column: 6, scope: !9065)
!9074 = !DILocation(line: 100, column: 11, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9065, file: !8909, line: 100, column: 6)
!9076 = !DILocation(line: 100, column: 6, scope: !9065)
!9077 = !DILocation(line: 104, column: 35, scope: !9065)
!9078 = !DILocation(line: 104, column: 16, scope: !9065)
!9079 = !DILocation(line: 104, column: 50, scope: !9065)
!9080 = !DILocation(line: 104, column: 72, scope: !9065)
!9081 = !DILocation(line: 104, column: 2, scope: !9065)
!9082 = !DILocation(line: 106, column: 1, scope: !9065)
!9083 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !707, file: !707, line: 307, type: !9084, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9086)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{null, !8881, !169}
!9086 = !{!9087, !9088}
!9087 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9083, file: !707, line: 308, type: !8881)
!9088 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9083, file: !707, line: 308, type: !169)
!9089 = !DILocation(line: 0, scope: !9083)
!9090 = !DILocation(line: 310, column: 6, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9083, file: !707, line: 310, column: 6)
!9092 = !DILocation(line: 311, column: 3, scope: !9091)
!9093 = !DILocation(line: 310, column: 6, scope: !9083)
!9094 = !DILocation(line: 313, column: 3, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !707, line: 313, column: 3)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !707, line: 313, column: 3)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !707, line: 313, column: 3)
!9098 = distinct !DILexicalBlock(scope: !9091, file: !707, line: 311, column: 15)
!9099 = !DILocation(line: 316, column: 1, scope: !9083)
!9100 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8909, file: !8909, line: 249, type: !9101, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9103)
!9101 = !DISubroutineType(types: !9102)
!9102 = !{!105, !8881, !169}
!9103 = !{!9104, !9105, !9106, !9107}
!9104 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9100, file: !8909, line: 250, type: !8881)
!9105 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9100, file: !8909, line: 250, type: !169)
!9106 = !DILocalVariable(name: "mpu_reg_index", scope: !9100, file: !8909, line: 252, type: !105)
!9107 = !DILocalVariable(name: "i", scope: !9108, file: !8909, line: 264, type: !105)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !8909, line: 264, column: 3)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !8909, line: 261, column: 32)
!9110 = distinct !DILexicalBlock(scope: !9100, file: !8909, line: 261, column: 6)
!9111 = !DILocation(line: 0, scope: !9100)
!9112 = !DILocation(line: 252, column: 22, scope: !9100)
!9113 = !DILocation(line: 258, column: 18, scope: !9100)
!9114 = !DILocation(line: 261, column: 20, scope: !9110)
!9115 = !DILocation(line: 261, column: 6, scope: !9100)
!9116 = !DILocation(line: 0, scope: !9108)
!9117 = !DILocation(line: 265, column: 4, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !8909, line: 264, column: 59)
!9119 = distinct !DILexicalBlock(scope: !9108, file: !8909, line: 264, column: 3)
!9120 = !DILocation(line: 264, column: 55, scope: !9119)
!9121 = !DILocation(line: 264, column: 33, scope: !9119)
!9122 = !DILocation(line: 264, column: 3, scope: !9108)
!9123 = distinct !{!9123, !9122, !9124}
!9124 = !DILocation(line: 266, column: 3, scope: !9108)
!9125 = !DILocation(line: 269, column: 2, scope: !9100)
!9126 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9127, file: !9127, line: 218, type: !7880, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9128)
!9127 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9128 = !{!9129}
!9129 = !DILocalVariable(name: "rnr", arg: 1, scope: !9126, file: !9127, line: 218, type: !113)
!9130 = !DILocation(line: 0, scope: !9126)
!9131 = !DILocation(line: 220, column: 12, scope: !9126)
!9132 = !DILocation(line: 221, column: 13, scope: !9126)
!9133 = !DILocation(line: 222, column: 1, scope: !9126)
!9134 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !707, file: !707, line: 326, type: !9135, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9137)
!9135 = !DISubroutineType(types: !9136)
!9136 = !{!105}
!9137 = !{!9138}
!9138 = !DILocalVariable(name: "r_index", scope: !9134, file: !707, line: 328, type: !113)
!9139 = !DILocation(line: 330, column: 17, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9134, file: !707, line: 330, column: 6)
!9141 = !DILocation(line: 330, column: 29, scope: !9140)
!9142 = !DILocation(line: 330, column: 6, scope: !9134)
!9143 = !DILocation(line: 337, column: 3, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9145, file: !707, line: 337, column: 3)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !707, line: 337, column: 3)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !707, line: 337, column: 3)
!9147 = distinct !DILexicalBlock(scope: !9140, file: !707, line: 330, column: 50)
!9148 = !DILocation(line: 347, column: 2, scope: !9134)
!9149 = !DILocation(line: 0, scope: !9134)
!9150 = !DILocation(line: 364, column: 29, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9152, file: !707, line: 364, column: 2)
!9152 = distinct !DILexicalBlock(scope: !9134, file: !707, line: 364, column: 2)
!9153 = !DILocation(line: 364, column: 2, scope: !9152)
!9154 = !DILocation(line: 365, column: 25, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9151, file: !707, line: 364, column: 66)
!9156 = !DILocation(line: 365, column: 3, scope: !9155)
!9157 = !DILocation(line: 364, column: 62, scope: !9151)
!9158 = distinct !{!9158, !9153, !9159}
!9159 = !DILocation(line: 366, column: 2, scope: !9152)
!9160 = !DILocation(line: 369, column: 23, scope: !9134)
!9161 = !DILocation(line: 369, column: 21, scope: !9134)
!9162 = !DILocation(line: 372, column: 2, scope: !9134)
!9163 = !DILocation(line: 433, column: 2, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !707, line: 433, column: 2)
!9165 = distinct !DILexicalBlock(scope: !9134, file: !707, line: 433, column: 2)
!9166 = !DILocation(line: 433, column: 2, scope: !9165)
!9167 = !DILocation(line: 433, column: 2, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !707, line: 433, column: 2)
!9169 = !DILocation(line: 444, column: 1, scope: !9134)
!9170 = distinct !DISubprogram(name: "strcpy", scope: !9171, file: !9171, line: 20, type: !9172, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9176)
!9171 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9172 = !DISubroutineType(types: !9173)
!9173 = !{!102, !9174, !9175}
!9174 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9175 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!9176 = !{!9177, !9178, !9179}
!9177 = !DILocalVariable(name: "d", arg: 1, scope: !9170, file: !9171, line: 20, type: !9174)
!9178 = !DILocalVariable(name: "s", arg: 2, scope: !9170, file: !9171, line: 20, type: !9175)
!9179 = !DILocalVariable(name: "dest", scope: !9170, file: !9171, line: 22, type: !102)
!9180 = !DILocation(line: 0, scope: !9170)
!9181 = !DILocation(line: 24, column: 9, scope: !9170)
!9182 = !DILocation(line: 24, column: 12, scope: !9170)
!9183 = !DILocation(line: 24, column: 2, scope: !9170)
!9184 = !DILocation(line: 25, column: 6, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9170, file: !9171, line: 24, column: 21)
!9186 = !DILocation(line: 26, column: 4, scope: !9185)
!9187 = !DILocation(line: 27, column: 4, scope: !9185)
!9188 = distinct !{!9188, !9183, !9189}
!9189 = !DILocation(line: 28, column: 2, scope: !9170)
!9190 = !DILocation(line: 30, column: 5, scope: !9170)
!9191 = !DILocation(line: 32, column: 2, scope: !9170)
!9192 = distinct !DISubprogram(name: "strncpy", scope: !9171, file: !9171, line: 42, type: !9193, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9195)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!102, !9174, !9175, !111}
!9195 = !{!9196, !9197, !9198, !9199}
!9196 = !DILocalVariable(name: "d", arg: 1, scope: !9192, file: !9171, line: 42, type: !9174)
!9197 = !DILocalVariable(name: "s", arg: 2, scope: !9192, file: !9171, line: 42, type: !9175)
!9198 = !DILocalVariable(name: "n", arg: 3, scope: !9192, file: !9171, line: 42, type: !111)
!9199 = !DILocalVariable(name: "dest", scope: !9192, file: !9171, line: 44, type: !102)
!9200 = !DILocation(line: 0, scope: !9192)
!9201 = !DILocation(line: 46, column: 12, scope: !9192)
!9202 = !DILocation(line: 46, column: 17, scope: !9192)
!9203 = !DILocation(line: 46, column: 20, scope: !9192)
!9204 = !DILocation(line: 46, column: 23, scope: !9192)
!9205 = !DILocation(line: 46, column: 2, scope: !9192)
!9206 = !DILocation(line: 47, column: 6, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9192, file: !9171, line: 46, column: 32)
!9208 = !DILocation(line: 48, column: 4, scope: !9207)
!9209 = !DILocation(line: 49, column: 4, scope: !9207)
!9210 = !DILocation(line: 50, column: 4, scope: !9207)
!9211 = distinct !{!9211, !9205, !9212}
!9212 = !DILocation(line: 51, column: 2, scope: !9192)
!9213 = !DILocation(line: 54, column: 6, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9192, file: !9171, line: 53, column: 16)
!9215 = !DILocation(line: 55, column: 4, scope: !9214)
!9216 = !DILocation(line: 56, column: 4, scope: !9214)
!9217 = !DILocation(line: 53, column: 11, scope: !9192)
!9218 = !DILocation(line: 53, column: 2, scope: !9192)
!9219 = distinct !{!9219, !9218, !9220}
!9220 = !DILocation(line: 57, column: 2, scope: !9192)
!9221 = !DILocation(line: 59, column: 2, scope: !9192)
!9222 = distinct !DISubprogram(name: "strchr", scope: !9171, file: !9171, line: 69, type: !9223, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9225)
!9223 = !DISubroutineType(types: !9224)
!9224 = !{!102, !269, !105}
!9225 = !{!9226, !9227, !9228}
!9226 = !DILocalVariable(name: "s", arg: 1, scope: !9222, file: !9171, line: 69, type: !269)
!9227 = !DILocalVariable(name: "c", arg: 2, scope: !9222, file: !9171, line: 69, type: !105)
!9228 = !DILocalVariable(name: "tmp", scope: !9222, file: !9171, line: 71, type: !103)
!9229 = !DILocation(line: 0, scope: !9222)
!9230 = !DILocation(line: 73, column: 2, scope: !9222)
!9231 = !DILocation(line: 73, column: 10, scope: !9222)
!9232 = !DILocation(line: 73, column: 13, scope: !9222)
!9233 = !DILocation(line: 73, column: 21, scope: !9222)
!9234 = !DILocation(line: 74, column: 4, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9222, file: !9171, line: 73, column: 38)
!9236 = distinct !{!9236, !9230, !9237}
!9237 = !DILocation(line: 75, column: 2, scope: !9222)
!9238 = !DILocation(line: 77, column: 9, scope: !9222)
!9239 = !DILocation(line: 77, column: 2, scope: !9222)
!9240 = distinct !DISubprogram(name: "strrchr", scope: !9171, file: !9171, line: 87, type: !9223, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9241)
!9241 = !{!9242, !9243, !9244}
!9242 = !DILocalVariable(name: "s", arg: 1, scope: !9240, file: !9171, line: 87, type: !269)
!9243 = !DILocalVariable(name: "c", arg: 2, scope: !9240, file: !9171, line: 87, type: !105)
!9244 = !DILocalVariable(name: "match", scope: !9240, file: !9171, line: 89, type: !102)
!9245 = !DILocation(line: 0, scope: !9240)
!9246 = !DILocation(line: 91, column: 2, scope: !9240)
!9247 = !DILocation(line: 92, column: 7, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !9171, line: 92, column: 7)
!9249 = distinct !DILexicalBlock(scope: !9240, file: !9171, line: 91, column: 5)
!9250 = !DILocation(line: 92, column: 10, scope: !9248)
!9251 = !DILocation(line: 92, column: 7, scope: !9249)
!9252 = !DILocation(line: 95, column: 13, scope: !9240)
!9253 = !DILocation(line: 95, column: 2, scope: !9249)
!9254 = distinct !{!9254, !9246, !9255}
!9255 = !DILocation(line: 95, column: 15, scope: !9240)
!9256 = !DILocation(line: 97, column: 2, scope: !9240)
!9257 = distinct !DISubprogram(name: "strlen", scope: !9171, file: !9171, line: 107, type: !9258, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!111, !269}
!9260 = !{!9261, !9262}
!9261 = !DILocalVariable(name: "s", arg: 1, scope: !9257, file: !9171, line: 107, type: !269)
!9262 = !DILocalVariable(name: "n", scope: !9257, file: !9171, line: 109, type: !111)
!9263 = !DILocation(line: 0, scope: !9257)
!9264 = !DILocation(line: 111, column: 9, scope: !9257)
!9265 = !DILocation(line: 111, column: 12, scope: !9257)
!9266 = !DILocation(line: 111, column: 2, scope: !9257)
!9267 = !DILocation(line: 112, column: 4, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9257, file: !9171, line: 111, column: 21)
!9269 = !DILocation(line: 113, column: 4, scope: !9268)
!9270 = distinct !{!9270, !9266, !9271}
!9271 = !DILocation(line: 114, column: 2, scope: !9257)
!9272 = !DILocation(line: 116, column: 2, scope: !9257)
!9273 = distinct !DISubprogram(name: "strnlen", scope: !9171, file: !9171, line: 126, type: !9274, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9276)
!9274 = !DISubroutineType(types: !9275)
!9275 = !{!111, !269, !111}
!9276 = !{!9277, !9278, !9279}
!9277 = !DILocalVariable(name: "s", arg: 1, scope: !9273, file: !9171, line: 126, type: !269)
!9278 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9273, file: !9171, line: 126, type: !111)
!9279 = !DILocalVariable(name: "n", scope: !9273, file: !9171, line: 128, type: !111)
!9280 = !DILocation(line: 0, scope: !9273)
!9281 = !DILocation(line: 130, column: 9, scope: !9273)
!9282 = !DILocation(line: 130, column: 12, scope: !9273)
!9283 = !DILocation(line: 130, column: 20, scope: !9273)
!9284 = !DILocation(line: 130, column: 2, scope: !9273)
!9285 = !DILocation(line: 131, column: 4, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9273, file: !9171, line: 130, column: 35)
!9287 = !DILocation(line: 132, column: 4, scope: !9286)
!9288 = distinct !{!9288, !9284, !9289}
!9289 = !DILocation(line: 133, column: 2, scope: !9273)
!9290 = !DILocation(line: 135, column: 2, scope: !9273)
!9291 = distinct !DISubprogram(name: "strcmp", scope: !9171, file: !9171, line: 145, type: !9292, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9294)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!105, !269, !269}
!9294 = !{!9295, !9296}
!9295 = !DILocalVariable(name: "s1", arg: 1, scope: !9291, file: !9171, line: 145, type: !269)
!9296 = !DILocalVariable(name: "s2", arg: 2, scope: !9291, file: !9171, line: 145, type: !269)
!9297 = !DILocation(line: 0, scope: !9291)
!9298 = !DILocation(line: 147, column: 10, scope: !9291)
!9299 = !DILocation(line: 147, column: 17, scope: !9291)
!9300 = !DILocation(line: 147, column: 14, scope: !9291)
!9301 = !DILocation(line: 147, column: 22, scope: !9291)
!9302 = !DILocation(line: 148, column: 5, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9291, file: !9171, line: 147, column: 40)
!9304 = !DILocation(line: 149, column: 5, scope: !9303)
!9305 = distinct !{!9305, !9306, !9307}
!9306 = !DILocation(line: 147, column: 2, scope: !9291)
!9307 = !DILocation(line: 150, column: 2, scope: !9291)
!9308 = !DILocation(line: 152, column: 9, scope: !9291)
!9309 = !DILocation(line: 152, column: 15, scope: !9291)
!9310 = !DILocation(line: 152, column: 13, scope: !9291)
!9311 = !DILocation(line: 152, column: 2, scope: !9291)
!9312 = distinct !DISubprogram(name: "strncmp", scope: !9171, file: !9171, line: 162, type: !9313, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9315)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!105, !269, !269, !111}
!9315 = !{!9316, !9317, !9318}
!9316 = !DILocalVariable(name: "s1", arg: 1, scope: !9312, file: !9171, line: 162, type: !269)
!9317 = !DILocalVariable(name: "s2", arg: 2, scope: !9312, file: !9171, line: 162, type: !269)
!9318 = !DILocalVariable(name: "n", arg: 3, scope: !9312, file: !9171, line: 162, type: !111)
!9319 = !DILocation(line: 0, scope: !9312)
!9320 = !DILocation(line: 164, column: 17, scope: !9312)
!9321 = !DILocation(line: 164, column: 21, scope: !9312)
!9322 = !DILocation(line: 164, column: 28, scope: !9312)
!9323 = !DILocation(line: 164, column: 25, scope: !9312)
!9324 = !DILocation(line: 164, column: 33, scope: !9312)
!9325 = !DILocation(line: 165, column: 5, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9312, file: !9171, line: 164, column: 51)
!9327 = !DILocation(line: 166, column: 5, scope: !9326)
!9328 = !DILocation(line: 167, column: 4, scope: !9326)
!9329 = distinct !{!9329, !9330, !9331}
!9330 = !DILocation(line: 164, column: 2, scope: !9312)
!9331 = !DILocation(line: 168, column: 2, scope: !9312)
!9332 = !DILocation(line: 170, column: 25, scope: !9312)
!9333 = !DILocation(line: 170, column: 31, scope: !9312)
!9334 = !DILocation(line: 170, column: 29, scope: !9312)
!9335 = !DILocation(line: 170, column: 9, scope: !9312)
!9336 = !DILocation(line: 170, column: 2, scope: !9312)
!9337 = distinct !DISubprogram(name: "strtok_r", scope: !9171, file: !9171, line: 180, type: !9338, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9340)
!9338 = !DISubroutineType(types: !9339)
!9339 = !{!102, !102, !269, !431}
!9340 = !{!9341, !9342, !9343, !9344, !9345}
!9341 = !DILocalVariable(name: "str", arg: 1, scope: !9337, file: !9171, line: 180, type: !102)
!9342 = !DILocalVariable(name: "sep", arg: 2, scope: !9337, file: !9171, line: 180, type: !269)
!9343 = !DILocalVariable(name: "state", arg: 3, scope: !9337, file: !9171, line: 180, type: !431)
!9344 = !DILocalVariable(name: "start", scope: !9337, file: !9171, line: 182, type: !102)
!9345 = !DILocalVariable(name: "end", scope: !9337, file: !9171, line: 182, type: !102)
!9346 = !DILocation(line: 0, scope: !9337)
!9347 = !DILocation(line: 184, column: 10, scope: !9337)
!9348 = !DILocation(line: 184, column: 22, scope: !9337)
!9349 = !DILocation(line: 187, column: 9, scope: !9337)
!9350 = !DILocation(line: 187, column: 16, scope: !9337)
!9351 = !DILocation(line: 187, column: 19, scope: !9337)
!9352 = !DILocation(line: 187, column: 2, scope: !9337)
!9353 = !DILocation(line: 188, column: 8, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9337, file: !9171, line: 187, column: 40)
!9355 = distinct !{!9355, !9352, !9356}
!9356 = !DILocation(line: 189, column: 2, scope: !9337)
!9357 = !DILocation(line: 198, column: 9, scope: !9337)
!9358 = !DILocation(line: 198, column: 18, scope: !9337)
!9359 = !DILocation(line: 198, column: 17, scope: !9337)
!9360 = !DILocation(line: 198, column: 2, scope: !9337)
!9361 = !DILocation(line: 199, column: 6, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9337, file: !9171, line: 198, column: 37)
!9363 = !DILocation(line: 198, column: 14, scope: !9337)
!9364 = distinct !{!9364, !9360, !9365}
!9365 = !DILocation(line: 200, column: 2, scope: !9337)
!9366 = !DILocation(line: 203, column: 8, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9368, file: !9171, line: 202, column: 20)
!9368 = distinct !DILexicalBlock(scope: !9337, file: !9171, line: 202, column: 6)
!9369 = !DILocation(line: 204, column: 16, scope: !9367)
!9370 = !DILocation(line: 205, column: 2, scope: !9367)
!9371 = !DILocation(line: 210, column: 1, scope: !9337)
!9372 = distinct !DISubprogram(name: "strcat", scope: !9171, file: !9171, line: 212, type: !9172, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9373)
!9373 = !{!9374, !9375}
!9374 = !DILocalVariable(name: "dest", arg: 1, scope: !9372, file: !9171, line: 212, type: !9174)
!9375 = !DILocalVariable(name: "src", arg: 2, scope: !9372, file: !9171, line: 212, type: !9175)
!9376 = !DILocation(line: 0, scope: !9372)
!9377 = !DILocation(line: 214, column: 16, scope: !9372)
!9378 = !DILocation(line: 214, column: 14, scope: !9372)
!9379 = !DILocation(line: 214, column: 2, scope: !9372)
!9380 = !DILocation(line: 215, column: 2, scope: !9372)
!9381 = distinct !DISubprogram(name: "strncat", scope: !9171, file: !9171, line: 218, type: !9193, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9382)
!9382 = !{!9383, !9384, !9385, !9386, !9387}
!9383 = !DILocalVariable(name: "dest", arg: 1, scope: !9381, file: !9171, line: 218, type: !9174)
!9384 = !DILocalVariable(name: "src", arg: 2, scope: !9381, file: !9171, line: 218, type: !9175)
!9385 = !DILocalVariable(name: "n", arg: 3, scope: !9381, file: !9171, line: 219, type: !111)
!9386 = !DILocalVariable(name: "orig_dest", scope: !9381, file: !9171, line: 221, type: !102)
!9387 = !DILocalVariable(name: "len", scope: !9381, file: !9171, line: 222, type: !111)
!9388 = !DILocation(line: 0, scope: !9381)
!9389 = !DILocation(line: 222, column: 15, scope: !9381)
!9390 = !DILocation(line: 224, column: 7, scope: !9381)
!9391 = !DILocation(line: 225, column: 14, scope: !9381)
!9392 = !DILocation(line: 225, column: 19, scope: !9381)
!9393 = !DILocation(line: 225, column: 11, scope: !9381)
!9394 = !DILocation(line: 225, column: 23, scope: !9381)
!9395 = !DILocation(line: 225, column: 28, scope: !9381)
!9396 = !DILocation(line: 225, column: 2, scope: !9381)
!9397 = !DILocation(line: 226, column: 17, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9381, file: !9171, line: 225, column: 38)
!9399 = !DILocation(line: 226, column: 8, scope: !9398)
!9400 = !DILocation(line: 226, column: 11, scope: !9398)
!9401 = distinct !{!9401, !9396, !9402}
!9402 = !DILocation(line: 227, column: 2, scope: !9381)
!9403 = !DILocation(line: 228, column: 8, scope: !9381)
!9404 = !DILocation(line: 230, column: 2, scope: !9381)
!9405 = distinct !DISubprogram(name: "memcmp", scope: !9171, file: !9171, line: 239, type: !9406, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9408)
!9406 = !DISubroutineType(types: !9407)
!9407 = !{!105, !13, !13, !111}
!9408 = !{!9409, !9410, !9411, !9412, !9413}
!9409 = !DILocalVariable(name: "m1", arg: 1, scope: !9405, file: !9171, line: 239, type: !13)
!9410 = !DILocalVariable(name: "m2", arg: 2, scope: !9405, file: !9171, line: 239, type: !13)
!9411 = !DILocalVariable(name: "n", arg: 3, scope: !9405, file: !9171, line: 239, type: !111)
!9412 = !DILocalVariable(name: "c1", scope: !9405, file: !9171, line: 241, type: !269)
!9413 = !DILocalVariable(name: "c2", scope: !9405, file: !9171, line: 242, type: !269)
!9414 = !DILocation(line: 0, scope: !9405)
!9415 = !DILocation(line: 244, column: 7, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9405, file: !9171, line: 244, column: 6)
!9417 = !DILocation(line: 244, column: 6, scope: !9405)
!9418 = !DILocation(line: 248, column: 10, scope: !9405)
!9419 = !DILocation(line: 248, column: 14, scope: !9405)
!9420 = !DILocation(line: 248, column: 19, scope: !9405)
!9421 = !DILocation(line: 248, column: 2, scope: !9405)
!9422 = !DILocation(line: 248, column: 23, scope: !9405)
!9423 = !DILocation(line: 248, column: 30, scope: !9405)
!9424 = !DILocation(line: 248, column: 27, scope: !9405)
!9425 = !DILocation(line: 249, column: 5, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9405, file: !9171, line: 248, column: 36)
!9427 = !DILocation(line: 250, column: 5, scope: !9426)
!9428 = distinct !{!9428, !9421, !9429}
!9429 = !DILocation(line: 251, column: 2, scope: !9405)
!9430 = !DILocation(line: 253, column: 9, scope: !9405)
!9431 = !DILocation(line: 253, column: 15, scope: !9405)
!9432 = !DILocation(line: 253, column: 13, scope: !9405)
!9433 = !DILocation(line: 253, column: 2, scope: !9405)
!9434 = !DILocation(line: 254, column: 1, scope: !9405)
!9435 = distinct !DISubprogram(name: "memmove", scope: !9171, file: !9171, line: 263, type: !9436, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9438)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{!104, !104, !13, !111}
!9438 = !{!9439, !9440, !9441, !9442, !9443}
!9439 = !DILocalVariable(name: "d", arg: 1, scope: !9435, file: !9171, line: 263, type: !104)
!9440 = !DILocalVariable(name: "s", arg: 2, scope: !9435, file: !9171, line: 263, type: !13)
!9441 = !DILocalVariable(name: "n", arg: 3, scope: !9435, file: !9171, line: 263, type: !111)
!9442 = !DILocalVariable(name: "dest", scope: !9435, file: !9171, line: 265, type: !102)
!9443 = !DILocalVariable(name: "src", scope: !9435, file: !9171, line: 266, type: !269)
!9444 = !DILocation(line: 0, scope: !9435)
!9445 = !DILocation(line: 268, column: 21, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9435, file: !9171, line: 268, column: 6)
!9447 = !DILocation(line: 268, column: 28, scope: !9446)
!9448 = !DILocation(line: 268, column: 6, scope: !9435)
!9449 = !DILocation(line: 280, column: 12, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9446, file: !9171, line: 278, column: 9)
!9451 = !DILocation(line: 280, column: 3, scope: !9450)
!9452 = !DILocation(line: 275, column: 5, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !9171, line: 274, column: 17)
!9454 = distinct !DILexicalBlock(scope: !9446, file: !9171, line: 268, column: 33)
!9455 = !DILocation(line: 276, column: 14, scope: !9453)
!9456 = !DILocation(line: 276, column: 4, scope: !9453)
!9457 = !DILocation(line: 276, column: 12, scope: !9453)
!9458 = !DILocation(line: 274, column: 12, scope: !9454)
!9459 = !DILocation(line: 274, column: 3, scope: !9454)
!9460 = distinct !{!9460, !9459, !9461}
!9461 = !DILocation(line: 277, column: 3, scope: !9454)
!9462 = !DILocation(line: 281, column: 12, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9450, file: !9171, line: 280, column: 17)
!9464 = !DILocation(line: 281, column: 10, scope: !9463)
!9465 = !DILocation(line: 282, column: 8, scope: !9463)
!9466 = !DILocation(line: 283, column: 7, scope: !9463)
!9467 = !DILocation(line: 284, column: 5, scope: !9463)
!9468 = distinct !{!9468, !9451, !9469}
!9469 = !DILocation(line: 285, column: 3, scope: !9450)
!9470 = !DILocation(line: 288, column: 2, scope: !9435)
!9471 = distinct !DISubprogram(name: "memcpy", scope: !9171, file: !9171, line: 298, type: !9472, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9476)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{!104, !9474, !9475, !111}
!9474 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!9475 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9476 = !{!9477, !9478, !9479, !9480, !9481}
!9477 = !DILocalVariable(name: "d", arg: 1, scope: !9471, file: !9171, line: 298, type: !9474)
!9478 = !DILocalVariable(name: "s", arg: 2, scope: !9471, file: !9171, line: 298, type: !9475)
!9479 = !DILocalVariable(name: "n", arg: 3, scope: !9471, file: !9171, line: 298, type: !111)
!9480 = !DILocalVariable(name: "d_byte", scope: !9471, file: !9171, line: 302, type: !1132)
!9481 = !DILocalVariable(name: "s_byte", scope: !9471, file: !9171, line: 303, type: !2958)
!9482 = !DILocation(line: 0, scope: !9471)
!9483 = !DILocation(line: 337, column: 11, scope: !9471)
!9484 = !DILocation(line: 337, column: 2, scope: !9471)
!9485 = !DILocation(line: 338, column: 25, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9471, file: !9171, line: 337, column: 16)
!9487 = !DILocation(line: 338, column: 17, scope: !9486)
!9488 = !DILocation(line: 338, column: 11, scope: !9486)
!9489 = !DILocation(line: 338, column: 15, scope: !9486)
!9490 = !DILocation(line: 339, column: 4, scope: !9486)
!9491 = distinct !{!9491, !9484, !9492}
!9492 = !DILocation(line: 340, column: 2, scope: !9471)
!9493 = !DILocation(line: 342, column: 2, scope: !9471)
!9494 = distinct !DISubprogram(name: "memset", scope: !9171, file: !9171, line: 352, type: !9495, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9497)
!9495 = !DISubroutineType(types: !9496)
!9496 = !{!104, !104, !105, !111}
!9497 = !{!9498, !9499, !9500, !9501, !9502}
!9498 = !DILocalVariable(name: "buf", arg: 1, scope: !9494, file: !9171, line: 352, type: !104)
!9499 = !DILocalVariable(name: "c", arg: 2, scope: !9494, file: !9171, line: 352, type: !105)
!9500 = !DILocalVariable(name: "n", arg: 3, scope: !9494, file: !9171, line: 352, type: !111)
!9501 = !DILocalVariable(name: "d_byte", scope: !9494, file: !9171, line: 356, type: !1132)
!9502 = !DILocalVariable(name: "c_byte", scope: !9494, file: !9171, line: 357, type: !170)
!9503 = !DILocation(line: 0, scope: !9494)
!9504 = !DILocation(line: 357, column: 25, scope: !9494)
!9505 = !DILocation(line: 389, column: 11, scope: !9494)
!9506 = !DILocation(line: 389, column: 2, scope: !9494)
!9507 = !DILocation(line: 390, column: 11, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9494, file: !9171, line: 389, column: 16)
!9509 = !DILocation(line: 390, column: 15, scope: !9508)
!9510 = !DILocation(line: 391, column: 4, scope: !9508)
!9511 = distinct !{!9511, !9506, !9512}
!9512 = !DILocation(line: 392, column: 2, scope: !9494)
!9513 = !DILocation(line: 394, column: 2, scope: !9494)
!9514 = distinct !DISubprogram(name: "memchr", scope: !9171, file: !9171, line: 404, type: !9515, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !9517)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{!104, !13, !105, !111}
!9517 = !{!9518, !9519, !9520, !9521}
!9518 = !DILocalVariable(name: "s", arg: 1, scope: !9514, file: !9171, line: 404, type: !13)
!9519 = !DILocalVariable(name: "c", arg: 2, scope: !9514, file: !9171, line: 404, type: !105)
!9520 = !DILocalVariable(name: "n", arg: 3, scope: !9514, file: !9171, line: 404, type: !111)
!9521 = !DILocalVariable(name: "p", scope: !9522, file: !9171, line: 407, type: !2958)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !9171, line: 406, column: 14)
!9523 = distinct !DILexicalBlock(scope: !9514, file: !9171, line: 406, column: 6)
!9524 = !DILocation(line: 0, scope: !9514)
!9525 = !DILocation(line: 406, column: 8, scope: !9523)
!9526 = !DILocation(line: 406, column: 6, scope: !9514)
!9527 = !DILocation(line: 409, column: 3, scope: !9522)
!9528 = !DILocation(line: 0, scope: !9522)
!9529 = !DILocation(line: 410, column: 8, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9531, file: !9171, line: 410, column: 8)
!9531 = distinct !DILexicalBlock(scope: !9522, file: !9171, line: 409, column: 6)
!9532 = !DILocation(line: 410, column: 13, scope: !9530)
!9533 = !DILocation(line: 410, column: 8, scope: !9531)
!9534 = distinct !{!9534, !9527, !9535}
!9535 = !DILocation(line: 414, column: 20, scope: !9522)
!9536 = !DILocation(line: 417, column: 2, scope: !9514)
!9537 = !DILocation(line: 418, column: 1, scope: !9514)
!9538 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !717, file: !717, line: 23, type: !4908, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9539)
!9539 = !{!9540}
!9540 = !DILocalVariable(name: "hook", arg: 1, scope: !9538, file: !717, line: 23, type: !447)
!9541 = !DILocation(line: 0, scope: !9538)
!9542 = !DILocation(line: 25, column: 15, scope: !9538)
!9543 = !DILocation(line: 26, column: 1, scope: !9538)
!9544 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !717, file: !717, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9545)
!9545 = !{!9546}
!9546 = !DILocalVariable(name: "c", arg: 1, scope: !9544, file: !717, line: 14, type: !105)
!9547 = !DILocation(line: 0, scope: !9544)
!9548 = !DILocation(line: 18, column: 2, scope: !9544)
!9549 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !717, file: !717, line: 28, type: !9550, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!105, !105, !713}
!9552 = !{!9553, !9554}
!9553 = !DILocalVariable(name: "c", arg: 1, scope: !9549, file: !717, line: 28, type: !105)
!9554 = !DILocalVariable(name: "stream", arg: 2, scope: !9549, file: !717, line: 28, type: !713)
!9555 = !DILocation(line: 0, scope: !9549)
!9556 = !DILocation(line: 30, column: 27, scope: !9549)
!9557 = !DILocation(line: 30, column: 50, scope: !9549)
!9558 = !DILocation(line: 30, column: 9, scope: !9549)
!9559 = !DILocation(line: 30, column: 2, scope: !9549)
!9560 = distinct !DISubprogram(name: "fputc", scope: !717, file: !717, line: 41, type: !9550, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9561)
!9561 = !{!9562, !9563}
!9562 = !DILocalVariable(name: "c", arg: 1, scope: !9560, file: !717, line: 41, type: !105)
!9563 = !DILocalVariable(name: "stream", arg: 2, scope: !9560, file: !717, line: 41, type: !713)
!9564 = !DILocation(line: 0, scope: !9560)
!9565 = !DILocation(line: 43, column: 9, scope: !9560)
!9566 = !DILocation(line: 43, column: 2, scope: !9560)
!9567 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9568, file: !9568, line: 72, type: !9550, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9569)
!9568 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!9569 = !{!9570, !9571}
!9570 = !DILocalVariable(name: "c", arg: 1, scope: !9567, file: !9568, line: 72, type: !105)
!9571 = !DILocalVariable(name: "stream", arg: 2, scope: !9567, file: !9568, line: 72, type: !713)
!9572 = !DILocation(line: 0, scope: !9567)
!9573 = !DILocation(line: 81, column: 2, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9567, file: !9568, line: 81, column: 2)
!9575 = !{i64 2154911754}
!9576 = !DILocation(line: 82, column: 9, scope: !9567)
!9577 = !DILocation(line: 82, column: 2, scope: !9567)
!9578 = distinct !DISubprogram(name: "fputs", scope: !717, file: !717, line: 46, type: !9579, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9582)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{!105, !9175, !9581}
!9581 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !713)
!9582 = !{!9583, !9584, !9585, !9586}
!9583 = !DILocalVariable(name: "s", arg: 1, scope: !9578, file: !717, line: 46, type: !9175)
!9584 = !DILocalVariable(name: "stream", arg: 2, scope: !9578, file: !717, line: 46, type: !9581)
!9585 = !DILocalVariable(name: "len", scope: !9578, file: !717, line: 48, type: !105)
!9586 = !DILocalVariable(name: "ret", scope: !9578, file: !717, line: 49, type: !105)
!9587 = !DILocation(line: 0, scope: !9578)
!9588 = !DILocation(line: 48, column: 12, scope: !9578)
!9589 = !DILocation(line: 51, column: 8, scope: !9578)
!9590 = !DILocation(line: 53, column: 13, scope: !9578)
!9591 = !DILocation(line: 53, column: 9, scope: !9578)
!9592 = !DILocation(line: 53, column: 2, scope: !9578)
!9593 = distinct !DISubprogram(name: "fwrite", scope: !717, file: !717, line: 99, type: !9594, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9596)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{!111, !9475, !111, !111, !9581}
!9596 = !{!9597, !9598, !9599, !9600}
!9597 = !DILocalVariable(name: "ptr", arg: 1, scope: !9593, file: !717, line: 99, type: !9475)
!9598 = !DILocalVariable(name: "size", arg: 2, scope: !9593, file: !717, line: 99, type: !111)
!9599 = !DILocalVariable(name: "nitems", arg: 3, scope: !9593, file: !717, line: 99, type: !111)
!9600 = !DILocalVariable(name: "stream", arg: 4, scope: !9593, file: !717, line: 100, type: !9581)
!9601 = !DILocation(line: 0, scope: !9593)
!9602 = !DILocation(line: 102, column: 9, scope: !9593)
!9603 = !DILocation(line: 102, column: 2, scope: !9593)
!9604 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9568, file: !9568, line: 96, type: !9594, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9605)
!9605 = !{!9606, !9607, !9608, !9609}
!9606 = !DILocalVariable(name: "ptr", arg: 1, scope: !9604, file: !9568, line: 96, type: !9475)
!9607 = !DILocalVariable(name: "size", arg: 2, scope: !9604, file: !9568, line: 96, type: !111)
!9608 = !DILocalVariable(name: "nitems", arg: 3, scope: !9604, file: !9568, line: 96, type: !111)
!9609 = !DILocalVariable(name: "stream", arg: 4, scope: !9604, file: !9568, line: 96, type: !9581)
!9610 = !DILocation(line: 0, scope: !9604)
!9611 = !DILocation(line: 107, column: 2, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9604, file: !9568, line: 107, column: 2)
!9613 = !{i64 2154911858}
!9614 = !DILocation(line: 108, column: 9, scope: !9604)
!9615 = !DILocation(line: 108, column: 2, scope: !9604)
!9616 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !717, file: !717, line: 56, type: !9594, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9617)
!9617 = !{!9618, !9619, !9620, !9621, !9622, !9623, !9624, !9625}
!9618 = !DILocalVariable(name: "ptr", arg: 1, scope: !9616, file: !717, line: 56, type: !9475)
!9619 = !DILocalVariable(name: "size", arg: 2, scope: !9616, file: !717, line: 56, type: !111)
!9620 = !DILocalVariable(name: "nitems", arg: 3, scope: !9616, file: !717, line: 57, type: !111)
!9621 = !DILocalVariable(name: "stream", arg: 4, scope: !9616, file: !717, line: 57, type: !9581)
!9622 = !DILocalVariable(name: "i", scope: !9616, file: !717, line: 59, type: !111)
!9623 = !DILocalVariable(name: "j", scope: !9616, file: !717, line: 60, type: !111)
!9624 = !DILocalVariable(name: "p", scope: !9616, file: !717, line: 61, type: !2958)
!9625 = !DILabel(scope: !9616, name: "done", file: !717, line: 82)
!9626 = !DILocation(line: 0, scope: !9616)
!9627 = !DILocation(line: 63, column: 14, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9616, file: !717, line: 63, column: 6)
!9629 = !DILocation(line: 63, column: 24, scope: !9628)
!9630 = !DILocation(line: 72, column: 3, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9616, file: !717, line: 70, column: 5)
!9632 = !DILocation(line: 0, scope: !9631)
!9633 = !DILocation(line: 73, column: 8, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !717, line: 73, column: 8)
!9635 = distinct !DILexicalBlock(scope: !9631, file: !717, line: 72, column: 6)
!9636 = !DILocation(line: 73, column: 29, scope: !9634)
!9637 = !DILocation(line: 73, column: 27, scope: !9634)
!9638 = !DILocation(line: 73, column: 21, scope: !9634)
!9639 = !DILocation(line: 73, column: 33, scope: !9634)
!9640 = !DILocation(line: 73, column: 8, scope: !9635)
!9641 = !DILocation(line: 76, column: 5, scope: !9635)
!9642 = !DILocation(line: 77, column: 14, scope: !9631)
!9643 = !DILocation(line: 77, column: 3, scope: !9635)
!9644 = distinct !{!9644, !9630, !9645}
!9645 = !DILocation(line: 77, column: 17, scope: !9631)
!9646 = !DILocation(line: 79, column: 4, scope: !9631)
!9647 = !DILocation(line: 80, column: 13, scope: !9616)
!9648 = !DILocation(line: 80, column: 2, scope: !9631)
!9649 = distinct !{!9649, !9650, !9651}
!9650 = !DILocation(line: 70, column: 2, scope: !9616)
!9651 = !DILocation(line: 80, column: 16, scope: !9616)
!9652 = !DILocation(line: 82, column: 1, scope: !9616)
!9653 = !DILocation(line: 83, column: 17, scope: !9616)
!9654 = !DILocation(line: 83, column: 2, scope: !9616)
!9655 = !DILocation(line: 84, column: 1, scope: !9616)
!9656 = distinct !DISubprogram(name: "puts", scope: !717, file: !717, line: 106, type: !9657, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9659)
!9657 = !DISubroutineType(types: !9658)
!9658 = !{!105, !269}
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "s", arg: 1, scope: !9656, file: !717, line: 106, type: !269)
!9661 = !DILocation(line: 0, scope: !9656)
!9662 = !DILocation(line: 108, column: 6, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9656, file: !717, line: 108, column: 6)
!9664 = !DILocation(line: 108, column: 23, scope: !9663)
!9665 = !DILocation(line: 108, column: 6, scope: !9656)
!9666 = !DILocation(line: 112, column: 9, scope: !9656)
!9667 = !DILocation(line: 112, column: 29, scope: !9656)
!9668 = !DILocation(line: 112, column: 2, scope: !9656)
!9669 = !DILocation(line: 113, column: 1, scope: !9656)
!9670 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !850, file: !850, line: 368, type: !901, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9671)
!9671 = !{!9672}
!9672 = !DILocalVariable(name: "dev", arg: 1, scope: !9670, file: !850, line: 368, type: !877)
!9673 = !DILocation(line: 0, scope: !9670)
!9674 = !DILocation(line: 370, column: 2, scope: !9670)
!9675 = !DILocation(line: 371, column: 1, scope: !9670)
!9676 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !850, file: !850, line: 243, type: !9677, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9679)
!9677 = !DISubroutineType(types: !9678)
!9678 = !{null, !105, !105, !877}
!9679 = !{!9680, !9681, !9682, !9683, !9685}
!9680 = !DILocalVariable(name: "min", arg: 1, scope: !9676, file: !850, line: 243, type: !105)
!9681 = !DILocalVariable(name: "max", arg: 2, scope: !9676, file: !850, line: 243, type: !105)
!9682 = !DILocalVariable(name: "dev", arg: 3, scope: !9676, file: !850, line: 243, type: !877)
!9683 = !DILocalVariable(name: "data", scope: !9676, file: !850, line: 245, type: !9684)
!9684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!9685 = !DILocalVariable(name: "line", scope: !9676, file: !850, line: 246, type: !105)
!9686 = !DILocation(line: 0, scope: !9676)
!9687 = !DILocation(line: 245, column: 38, scope: !9676)
!9688 = !DILocation(line: 249, column: 24, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !850, line: 249, column: 2)
!9690 = distinct !DILexicalBlock(scope: !9676, file: !850, line: 249, column: 2)
!9691 = !DILocation(line: 249, column: 2, scope: !9690)
!9692 = !DILocation(line: 251, column: 7, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !850, line: 251, column: 7)
!9694 = distinct !DILexicalBlock(scope: !9689, file: !850, line: 249, column: 39)
!9695 = !DILocation(line: 251, column: 7, scope: !9694)
!9696 = !DILocation(line: 253, column: 4, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9693, file: !850, line: 251, column: 36)
!9698 = !DILocation(line: 256, column: 24, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9697, file: !850, line: 256, column: 8)
!9700 = !DILocation(line: 256, column: 9, scope: !9699)
!9701 = !DILocation(line: 256, column: 8, scope: !9697)
!9702 = !DILocation(line: 260, column: 43, scope: !9697)
!9703 = !DILocation(line: 260, column: 4, scope: !9697)
!9704 = !DILocation(line: 261, column: 3, scope: !9697)
!9705 = !DILocation(line: 249, column: 35, scope: !9689)
!9706 = distinct !{!9706, !9691, !9707}
!9707 = !DILocation(line: 262, column: 2, scope: !9690)
!9708 = !DILocation(line: 263, column: 1, scope: !9676)
!9709 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !850, file: !850, line: 158, type: !448, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9710)
!9710 = !{!9711}
!9711 = !DILocalVariable(name: "line", arg: 1, scope: !9709, file: !850, line: 158, type: !105)
!9712 = !DILocation(line: 0, scope: !9709)
!9713 = !DILocation(line: 170, column: 38, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !850, line: 160, column: 17)
!9715 = distinct !DILexicalBlock(scope: !9709, file: !850, line: 160, column: 6)
!9716 = !DILocation(line: 170, column: 10, scope: !9714)
!9717 = !DILocation(line: 176, column: 1, scope: !9709)
!9718 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !850, file: !850, line: 183, type: !9719, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9721)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{null, !105}
!9721 = !{!9722}
!9722 = !DILocalVariable(name: "line", arg: 1, scope: !9718, file: !850, line: 183, type: !105)
!9723 = !DILocation(line: 0, scope: !9718)
!9724 = !DILocation(line: 195, column: 28, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !850, line: 185, column: 17)
!9726 = distinct !DILexicalBlock(scope: !9718, file: !850, line: 185, column: 6)
!9727 = !DILocation(line: 195, column: 3, scope: !9725)
!9728 = !DILocation(line: 200, column: 1, scope: !9718)
!9729 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9730, file: !9730, line: 910, type: !7880, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9731)
!9730 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9731 = !{!9732}
!9732 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9729, file: !9730, line: 910, type: !113)
!9733 = !DILocation(line: 0, scope: !9729)
!9734 = !DILocation(line: 912, column: 3, scope: !9729)
!9735 = !DILocation(line: 913, column: 1, scope: !9729)
!9736 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9730, file: !9730, line: 834, type: !9066, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9737)
!9737 = !{!9738}
!9738 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9736, file: !9730, line: 834, type: !113)
!9739 = !DILocation(line: 0, scope: !9736)
!9740 = !DILocation(line: 836, column: 11, scope: !9736)
!9741 = !DILocation(line: 836, column: 40, scope: !9736)
!9742 = !DILocation(line: 836, column: 3, scope: !9736)
!9743 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !850, file: !850, line: 304, type: !901, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9744)
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9743, file: !850, line: 304, type: !877)
!9746 = !DILocation(line: 0, scope: !9743)
!9747 = !DILocation(line: 306, column: 2, scope: !9743)
!9748 = !DILocation(line: 307, column: 1, scope: !9743)
!9749 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !850, file: !850, line: 299, type: !901, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9750)
!9750 = !{!9751}
!9751 = !DILocalVariable(name: "dev", arg: 1, scope: !9749, file: !850, line: 299, type: !877)
!9752 = !DILocation(line: 0, scope: !9749)
!9753 = !DILocation(line: 301, column: 2, scope: !9749)
!9754 = !DILocation(line: 302, column: 1, scope: !9749)
!9755 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !850, file: !850, line: 294, type: !901, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9756)
!9756 = !{!9757}
!9757 = !DILocalVariable(name: "dev", arg: 1, scope: !9755, file: !850, line: 294, type: !877)
!9758 = !DILocation(line: 0, scope: !9755)
!9759 = !DILocation(line: 296, column: 2, scope: !9755)
!9760 = !DILocation(line: 297, column: 1, scope: !9755)
!9761 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !850, file: !850, line: 397, type: !901, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9762)
!9762 = !{!9763}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !850, line: 397, type: !877)
!9764 = !DILocation(line: 0, scope: !9761)
!9765 = !DILocation(line: 399, column: 2, scope: !9761)
!9766 = !DILocation(line: 400, column: 1, scope: !9761)
!9767 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !850, file: !850, line: 392, type: !901, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9768)
!9768 = !{!9769}
!9769 = !DILocalVariable(name: "dev", arg: 1, scope: !9767, file: !850, line: 392, type: !877)
!9770 = !DILocation(line: 0, scope: !9767)
!9771 = !DILocation(line: 394, column: 2, scope: !9767)
!9772 = !DILocation(line: 395, column: 1, scope: !9767)
!9773 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !850, file: !850, line: 289, type: !901, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !850, line: 289, type: !877)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 291, column: 2, scope: !9773)
!9778 = !DILocation(line: 292, column: 1, scope: !9773)
!9779 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !850, file: !850, line: 387, type: !901, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9780)
!9780 = !{!9781}
!9781 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !850, line: 387, type: !877)
!9782 = !DILocation(line: 0, scope: !9779)
!9783 = !DILocation(line: 389, column: 2, scope: !9779)
!9784 = !DILocation(line: 390, column: 1, scope: !9779)
!9785 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !850, file: !850, line: 382, type: !901, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9786)
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !850, line: 382, type: !877)
!9788 = !DILocation(line: 0, scope: !9785)
!9789 = !DILocation(line: 384, column: 2, scope: !9785)
!9790 = !DILocation(line: 385, column: 1, scope: !9785)
!9791 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !850, file: !850, line: 373, type: !901, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9792)
!9792 = !{!9793}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !850, line: 373, type: !877)
!9794 = !DILocation(line: 0, scope: !9791)
!9795 = !DILocation(line: 375, column: 2, scope: !9791)
!9796 = !DILocation(line: 376, column: 1, scope: !9791)
!9797 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !850, file: !850, line: 284, type: !901, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9798)
!9798 = !{!9799}
!9799 = !DILocalVariable(name: "dev", arg: 1, scope: !9797, file: !850, line: 284, type: !877)
!9800 = !DILocation(line: 0, scope: !9797)
!9801 = !DILocation(line: 286, column: 2, scope: !9797)
!9802 = !DILocation(line: 287, column: 1, scope: !9797)
!9803 = distinct !DISubprogram(name: "stm32_exti_init", scope: !850, file: !850, line: 416, type: !875, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9804)
!9804 = !{!9805}
!9805 = !DILocalVariable(name: "dev", arg: 1, scope: !9803, file: !850, line: 416, type: !877)
!9806 = !DILocation(line: 0, scope: !9803)
!9807 = !DILocation(line: 418, column: 2, scope: !9803)
!9808 = !DILocation(line: 420, column: 2, scope: !9803)
!9809 = !DILocation(line: 0, scope: !900)
!9810 = !DILocation(line: 493, column: 2, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !900, file: !850, line: 493, column: 2)
!9812 = !DILocation(line: 497, column: 2, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !900, file: !850, line: 497, column: 2)
!9814 = !DILocation(line: 507, column: 2, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !900, file: !850, line: 507, column: 2)
!9816 = !DILocation(line: 512, column: 2, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !900, file: !850, line: 512, column: 2)
!9818 = !DILocation(line: 516, column: 2, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !900, file: !850, line: 516, column: 2)
!9820 = !DILocation(line: 523, column: 2, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !900, file: !850, line: 523, column: 2)
!9822 = !DILocation(line: 527, column: 2, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !900, file: !850, line: 527, column: 2)
!9824 = !DILocation(line: 581, column: 2, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !900, file: !850, line: 581, column: 2)
!9826 = !DILocation(line: 586, column: 2, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !900, file: !850, line: 586, column: 2)
!9828 = !DILocation(line: 591, column: 2, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !900, file: !850, line: 591, column: 2)
!9830 = !DILocation(line: 595, column: 2, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !900, file: !850, line: 595, column: 2)
!9832 = !DILocation(line: 607, column: 1, scope: !900)
!9833 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !850, file: !850, line: 112, type: !9719, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9834)
!9834 = !{!9835, !9836}
!9835 = !DILocalVariable(name: "line", arg: 1, scope: !9833, file: !850, line: 112, type: !105)
!9836 = !DILocalVariable(name: "irqnum", scope: !9833, file: !850, line: 114, type: !105)
!9837 = !DILocation(line: 0, scope: !9833)
!9838 = !DILocation(line: 122, column: 13, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9833, file: !850, line: 122, column: 6)
!9840 = !DILocation(line: 122, column: 6, scope: !9833)
!9841 = !DILocation(line: 123, column: 3, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !850, line: 123, column: 3)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !850, line: 123, column: 3)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !850, line: 123, column: 3)
!9845 = distinct !DILexicalBlock(scope: !9839, file: !850, line: 122, column: 22)
!9846 = !DILocation(line: 121, column: 11, scope: !9833)
!9847 = !DILocation(line: 130, column: 26, scope: !9833)
!9848 = !DILocation(line: 130, column: 2, scope: !9833)
!9849 = !DILocation(line: 134, column: 2, scope: !9833)
!9850 = !DILocation(line: 135, column: 1, scope: !9833)
!9851 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9730, file: !9730, line: 268, type: !7880, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9852)
!9852 = !{!9853}
!9853 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9851, file: !9730, line: 268, type: !113)
!9854 = !DILocation(line: 0, scope: !9851)
!9855 = !DILocation(line: 270, column: 3, scope: !9851)
!9856 = !DILocation(line: 271, column: 1, scope: !9851)
!9857 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !850, file: !850, line: 137, type: !9719, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9858)
!9858 = !{!9859}
!9859 = !DILocalVariable(name: "line", arg: 1, scope: !9857, file: !850, line: 137, type: !105)
!9860 = !DILocation(line: 0, scope: !9857)
!9861 = !DILocation(line: 141, column: 11, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9857, file: !850, line: 141, column: 6)
!9863 = !DILocation(line: 141, column: 6, scope: !9857)
!9864 = !DILocation(line: 145, column: 28, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9862, file: !850, line: 141, column: 17)
!9866 = !DILocation(line: 145, column: 3, scope: !9865)
!9867 = !DILocation(line: 147, column: 2, scope: !9865)
!9868 = !DILocation(line: 151, column: 1, scope: !9857)
!9869 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9730, file: !9730, line: 309, type: !7880, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9870)
!9870 = !{!9871}
!9871 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9869, file: !9730, line: 309, type: !113)
!9872 = !DILocation(line: 0, scope: !9869)
!9873 = !DILocation(line: 311, column: 3, scope: !9869)
!9874 = !DILocation(line: 312, column: 1, scope: !9869)
!9875 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !850, file: !850, line: 202, type: !9876, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{null, !105, !105}
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "line", arg: 1, scope: !9875, file: !850, line: 202, type: !105)
!9880 = !DILocalVariable(name: "trigger", arg: 2, scope: !9875, file: !850, line: 202, type: !105)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 211, column: 2, scope: !9875)
!9883 = !DILocation(line: 213, column: 36, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9875, file: !850, line: 211, column: 19)
!9885 = !DILocation(line: 213, column: 3, scope: !9884)
!9886 = !DILocation(line: 214, column: 3, scope: !9884)
!9887 = !DILocation(line: 215, column: 3, scope: !9884)
!9888 = !DILocation(line: 217, column: 35, scope: !9884)
!9889 = !DILocation(line: 217, column: 3, scope: !9884)
!9890 = !DILocation(line: 218, column: 3, scope: !9884)
!9891 = !DILocation(line: 219, column: 3, scope: !9884)
!9892 = !DILocation(line: 221, column: 36, scope: !9884)
!9893 = !DILocation(line: 221, column: 3, scope: !9884)
!9894 = !DILocation(line: 222, column: 3, scope: !9884)
!9895 = !DILocation(line: 223, column: 3, scope: !9884)
!9896 = !DILocation(line: 225, column: 35, scope: !9884)
!9897 = !DILocation(line: 225, column: 3, scope: !9884)
!9898 = !DILocation(line: 226, column: 3, scope: !9884)
!9899 = !DILocation(line: 227, column: 3, scope: !9884)
!9900 = !DILocation(line: 232, column: 1, scope: !9875)
!9901 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9730, file: !9730, line: 573, type: !7880, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9902)
!9902 = !{!9903}
!9903 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9901, file: !9730, line: 573, type: !113)
!9904 = !DILocation(line: 0, scope: !9901)
!9905 = !DILocation(line: 575, column: 3, scope: !9901)
!9906 = !DILocation(line: 577, column: 1, scope: !9901)
!9907 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9730, file: !9730, line: 703, type: !7880, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9908)
!9908 = !{!9909}
!9909 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9907, file: !9730, line: 703, type: !113)
!9910 = !DILocation(line: 0, scope: !9907)
!9911 = !DILocation(line: 705, column: 3, scope: !9907)
!9912 = !DILocation(line: 706, column: 1, scope: !9907)
!9913 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9730, file: !9730, line: 529, type: !7880, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9914)
!9914 = !{!9915}
!9915 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9913, file: !9730, line: 529, type: !113)
!9916 = !DILocation(line: 0, scope: !9913)
!9917 = !DILocation(line: 531, column: 3, scope: !9913)
!9918 = !DILocation(line: 533, column: 1, scope: !9913)
!9919 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9730, file: !9730, line: 661, type: !7880, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9920)
!9920 = !{!9921}
!9921 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9919, file: !9730, line: 661, type: !113)
!9922 = !DILocation(line: 0, scope: !9919)
!9923 = !DILocation(line: 663, column: 3, scope: !9919)
!9924 = !DILocation(line: 664, column: 1, scope: !9919)
!9925 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !850, file: !850, line: 433, type: !9926, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9928)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!105, !105, !888, !104}
!9928 = !{!9929, !9930, !9931, !9932, !9934}
!9929 = !DILocalVariable(name: "line", arg: 1, scope: !9925, file: !850, line: 433, type: !105)
!9930 = !DILocalVariable(name: "cb", arg: 2, scope: !9925, file: !850, line: 433, type: !888)
!9931 = !DILocalVariable(name: "arg", arg: 3, scope: !9925, file: !850, line: 433, type: !104)
!9932 = !DILocalVariable(name: "dev", scope: !9925, file: !850, line: 435, type: !9933)
!9933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !877)
!9934 = !DILocalVariable(name: "data", scope: !9925, file: !850, line: 436, type: !9684)
!9935 = !DILocation(line: 0, scope: !9925)
!9936 = !DILocation(line: 438, column: 21, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9925, file: !850, line: 438, column: 6)
!9938 = !DILocation(line: 438, column: 6, scope: !9937)
!9939 = !DILocation(line: 438, column: 6, scope: !9925)
!9940 = !DILocation(line: 442, column: 20, scope: !9925)
!9941 = !DILocation(line: 443, column: 17, scope: !9925)
!9942 = !DILocation(line: 443, column: 22, scope: !9925)
!9943 = !DILocation(line: 445, column: 2, scope: !9925)
!9944 = !DILocation(line: 446, column: 1, scope: !9925)
!9945 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !850, file: !850, line: 448, type: !9719, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9946)
!9946 = !{!9947, !9948, !9949}
!9947 = !DILocalVariable(name: "line", arg: 1, scope: !9945, file: !850, line: 448, type: !105)
!9948 = !DILocalVariable(name: "dev", scope: !9945, file: !850, line: 450, type: !9933)
!9949 = !DILocalVariable(name: "data", scope: !9945, file: !850, line: 451, type: !9684)
!9950 = !DILocation(line: 0, scope: !9945)
!9951 = !DILocation(line: 453, column: 17, scope: !9945)
!9952 = !DILocation(line: 453, column: 20, scope: !9945)
!9953 = !DILocation(line: 454, column: 17, scope: !9945)
!9954 = !DILocation(line: 454, column: 22, scope: !9945)
!9955 = !DILocation(line: 455, column: 1, scope: !9945)
!9956 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1031, file: !1031, line: 183, type: !1069, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !9957)
!9957 = !{!9958, !9959, !9960, !9961, !9962}
!9958 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1031, line: 183, type: !1060)
!9959 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9956, file: !1031, line: 184, type: !1071)
!9960 = !DILocalVariable(name: "pclken", scope: !9956, file: !1031, line: 186, type: !1021)
!9961 = !DILocalVariable(name: "reg", scope: !9956, file: !1031, line: 187, type: !1621)
!9962 = !DILocalVariable(name: "reg_val", scope: !9956, file: !1031, line: 188, type: !113)
!9963 = !DILocation(line: 0, scope: !9956)
!9964 = !DILocation(line: 192, column: 6, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9956, file: !1031, line: 192, column: 6)
!9966 = !DILocation(line: 192, column: 6, scope: !9956)
!9967 = !DILocation(line: 197, column: 52, scope: !9956)
!9968 = !DILocation(line: 197, column: 8, scope: !9956)
!9969 = !DILocation(line: 198, column: 12, scope: !9956)
!9970 = !DILocation(line: 199, column: 21, scope: !9956)
!9971 = !DILocation(line: 199, column: 10, scope: !9956)
!9972 = !DILocation(line: 200, column: 7, scope: !9956)
!9973 = !DILocation(line: 202, column: 2, scope: !9956)
!9974 = !DILocation(line: 203, column: 1, scope: !9956)
!9975 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1031, file: !1031, line: 205, type: !1069, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !9976)
!9976 = !{!9977, !9978, !9979, !9980, !9981}
!9977 = !DILocalVariable(name: "dev", arg: 1, scope: !9975, file: !1031, line: 205, type: !1060)
!9978 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9975, file: !1031, line: 206, type: !1071)
!9979 = !DILocalVariable(name: "pclken", scope: !9975, file: !1031, line: 208, type: !1021)
!9980 = !DILocalVariable(name: "reg", scope: !9975, file: !1031, line: 209, type: !1621)
!9981 = !DILocalVariable(name: "reg_val", scope: !9975, file: !1031, line: 210, type: !113)
!9982 = !DILocation(line: 0, scope: !9975)
!9983 = !DILocation(line: 214, column: 6, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9975, file: !1031, line: 214, column: 6)
!9985 = !DILocation(line: 214, column: 6, scope: !9975)
!9986 = !DILocation(line: 219, column: 52, scope: !9975)
!9987 = !DILocation(line: 219, column: 8, scope: !9975)
!9988 = !DILocation(line: 220, column: 12, scope: !9975)
!9989 = !DILocation(line: 221, column: 22, scope: !9975)
!9990 = !DILocation(line: 221, column: 13, scope: !9975)
!9991 = !DILocation(line: 221, column: 10, scope: !9975)
!9992 = !DILocation(line: 222, column: 7, scope: !9975)
!9993 = !DILocation(line: 224, column: 2, scope: !9975)
!9994 = !DILocation(line: 225, column: 1, scope: !9975)
!9995 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1031, file: !1031, line: 262, type: !1085, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !9996)
!9996 = !{!9997, !9998, !9999, !10000, !10001, !10002, !10003, !10004}
!9997 = !DILocalVariable(name: "clock", arg: 1, scope: !9995, file: !1031, line: 262, type: !1060)
!9998 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9995, file: !1031, line: 263, type: !1071)
!9999 = !DILocalVariable(name: "rate", arg: 3, scope: !9995, file: !1031, line: 264, type: !1027)
!10000 = !DILocalVariable(name: "pclken", scope: !9995, file: !1031, line: 266, type: !1021)
!10001 = !DILocalVariable(name: "ahb_clock", scope: !9995, file: !1031, line: 273, type: !113)
!10002 = !DILocalVariable(name: "apb1_clock", scope: !9995, file: !1031, line: 274, type: !113)
!10003 = !DILocalVariable(name: "apb2_clock", scope: !9995, file: !1031, line: 276, type: !113)
!10004 = !DILocalVariable(name: "ahb3_clock", scope: !9995, file: !1031, line: 286, type: !113)
!10005 = !DILocation(line: 0, scope: !9995)
!10006 = !DILocation(line: 273, column: 23, scope: !9995)
!10007 = !DILocation(line: 299, column: 18, scope: !9995)
!10008 = !DILocation(line: 299, column: 2, scope: !9995)
!10009 = !DILocation(line: 274, column: 24, scope: !9995)
!10010 = !DILocation(line: 319, column: 3, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9995, file: !1031, line: 299, column: 23)
!10012 = !DILocation(line: 276, column: 24, scope: !9995)
!10013 = !DILocation(line: 323, column: 3, scope: !10011)
!10014 = !DILocation(line: 346, column: 33, scope: !10011)
!10015 = !DILocation(line: 346, column: 11, scope: !10011)
!10016 = !DILocation(line: 350, column: 3, scope: !10011)
!10017 = !DILocation(line: 354, column: 33, scope: !10011)
!10018 = !DILocation(line: 354, column: 11, scope: !10011)
!10019 = !DILocation(line: 358, column: 3, scope: !10011)
!10020 = !DILocation(line: 374, column: 3, scope: !10011)
!10021 = !DILocation(line: 379, column: 3, scope: !10011)
!10022 = !DILocation(line: 0, scope: !10011)
!10023 = !DILocation(line: 396, column: 1, scope: !9995)
!10024 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1031, file: !1031, line: 227, type: !1101, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10025)
!10025 = !{!10026, !10027, !10028, !10029, !10030, !10031, !10032, !10033}
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10024, file: !1031, line: 227, type: !1060)
!10027 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10024, file: !1031, line: 228, type: !1071)
!10028 = !DILocalVariable(name: "data", arg: 3, scope: !10024, file: !1031, line: 229, type: !104)
!10029 = !DILocalVariable(name: "pclken", scope: !10024, file: !1031, line: 233, type: !1021)
!10030 = !DILocalVariable(name: "reg", scope: !10024, file: !1031, line: 234, type: !1621)
!10031 = !DILocalVariable(name: "reg_val", scope: !10024, file: !1031, line: 235, type: !113)
!10032 = !DILocalVariable(name: "dt_val", scope: !10024, file: !1031, line: 235, type: !113)
!10033 = !DILocalVariable(name: "err", scope: !10024, file: !1031, line: 236, type: !105)
!10034 = !DILocation(line: 0, scope: !10024)
!10035 = !DILocation(line: 241, column: 30, scope: !10024)
!10036 = !DILocation(line: 241, column: 8, scope: !10024)
!10037 = !DILocation(line: 242, column: 10, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10024, file: !1031, line: 242, column: 6)
!10039 = !DILocation(line: 242, column: 6, scope: !10024)
!10040 = !DILocation(line: 247, column: 11, scope: !10024)
!10041 = !DILocation(line: 248, column: 6, scope: !10024)
!10042 = !DILocation(line: 247, column: 44, scope: !10024)
!10043 = !DILocation(line: 250, column: 6, scope: !10024)
!10044 = !DILocation(line: 249, column: 52, scope: !10024)
!10045 = !DILocation(line: 249, column: 8, scope: !10024)
!10046 = !DILocation(line: 251, column: 12, scope: !10024)
!10047 = !DILocation(line: 252, column: 10, scope: !10024)
!10048 = !DILocation(line: 253, column: 7, scope: !10024)
!10049 = !DILocation(line: 255, column: 2, scope: !10024)
!10050 = !DILocation(line: 260, column: 1, scope: !10024)
!10051 = distinct !DISubprogram(name: "enabled_clock", scope: !1031, file: !1031, line: 100, type: !10052, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10054)
!10052 = !DISubroutineType(types: !10053)
!10053 = !{!105, !113}
!10054 = !{!10055, !10056}
!10055 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10051, file: !1031, line: 100, type: !113)
!10056 = !DILocalVariable(name: "r", scope: !10051, file: !1031, line: 102, type: !105)
!10057 = !DILocation(line: 0, scope: !10051)
!10058 = !DILocation(line: 104, column: 2, scope: !10051)
!10059 = !DILocation(line: 180, column: 2, scope: !10051)
!10060 = !DILocation(line: 181, column: 1, scope: !10051)
!10061 = distinct !DISubprogram(name: "get_bus_clock", scope: !1031, file: !1031, line: 79, type: !10062, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10064)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!113, !113, !113}
!10064 = !{!10065, !10066}
!10065 = !DILocalVariable(name: "clock", arg: 1, scope: !10061, file: !1031, line: 79, type: !113)
!10066 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10061, file: !1031, line: 79, type: !113)
!10067 = !DILocation(line: 0, scope: !10061)
!10068 = !DILocation(line: 81, column: 15, scope: !10061)
!10069 = !DILocation(line: 81, column: 2, scope: !10061)
!10070 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1031, file: !1031, line: 68, type: !10071, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!113, !113, !105, !105, !105}
!10073 = !{!10074, !10075, !10076, !10077}
!10074 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10070, file: !1031, line: 68, type: !113)
!10075 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10070, file: !1031, line: 69, type: !105)
!10076 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10070, file: !1031, line: 70, type: !105)
!10077 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10070, file: !1031, line: 71, type: !105)
!10078 = !DILocation(line: 0, scope: !10070)
!10079 = !DILocation(line: 75, column: 22, scope: !10070)
!10080 = !DILocation(line: 76, column: 13, scope: !10070)
!10081 = !DILocation(line: 75, column: 34, scope: !10070)
!10082 = !DILocation(line: 75, column: 2, scope: !10070)
!10083 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1031, file: !1031, line: 641, type: !1058, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10084)
!10084 = !{!10085, !10086, !10087}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10083, file: !1031, line: 641, type: !1060)
!10086 = !DILocalVariable(name: "old_flash_freq", scope: !10083, file: !1031, line: 664, type: !113)
!10087 = !DILocalVariable(name: "new_flash_freq", scope: !10083, file: !1031, line: 665, type: !113)
!10088 = !DILocation(line: 0, scope: !10083)
!10089 = !DILocation(line: 646, column: 2, scope: !10083)
!10090 = !DILocation(line: 667, column: 19, scope: !10083)
!10091 = !DILocation(line: 674, column: 21, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10083, file: !1031, line: 674, column: 6)
!10093 = !DILocation(line: 674, column: 6, scope: !10083)
!10094 = !DILocation(line: 675, column: 3, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10092, file: !1031, line: 674, column: 59)
!10096 = !DILocation(line: 676, column: 2, scope: !10095)
!10097 = !DILocation(line: 680, column: 2, scope: !10083)
!10098 = !DILocation(line: 683, column: 2, scope: !10083)
!10099 = !DILocation(line: 690, column: 3, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10101, file: !1031, line: 689, column: 9)
!10101 = distinct !DILexicalBlock(scope: !10083, file: !1031, line: 685, column: 6)
!10102 = !DILocation(line: 695, column: 2, scope: !10083)
!10103 = !DILocation(line: 696, column: 2, scope: !10083)
!10104 = !DILocation(line: 696, column: 9, scope: !10083)
!10105 = !DILocation(line: 696, column: 34, scope: !10083)
!10106 = distinct !{!10106, !10103, !10107}
!10107 = !DILocation(line: 697, column: 2, scope: !10083)
!10108 = !DILocation(line: 720, column: 21, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10083, file: !1031, line: 720, column: 6)
!10110 = !DILocation(line: 720, column: 6, scope: !10083)
!10111 = !DILocation(line: 721, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !1031, line: 720, column: 60)
!10113 = !DILocation(line: 722, column: 2, scope: !10112)
!10114 = !DILocation(line: 725, column: 18, scope: !10083)
!10115 = !DILocation(line: 728, column: 2, scope: !10083)
!10116 = !DILocation(line: 730, column: 2, scope: !10083)
!10117 = !DILocation(line: 745, column: 2, scope: !10083)
!10118 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10119, file: !10119, line: 3275, type: !395, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10119 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10120 = !DILocation(line: 3277, column: 21, scope: !10118)
!10121 = !DILocation(line: 3277, column: 3, scope: !10118)
!10122 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1031, file: !1031, line: 507, type: !266, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10123 = !DILocation(line: 516, column: 4, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !1031, line: 515, column: 10)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !1031, line: 513, column: 7)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !1031, line: 510, column: 37)
!10127 = distinct !DILexicalBlock(scope: !10122, file: !1031, line: 510, column: 6)
!10128 = !DILocation(line: 526, column: 3, scope: !10126)
!10129 = !DILocation(line: 527, column: 3, scope: !10126)
!10130 = !DILocation(line: 527, column: 10, scope: !10126)
!10131 = !DILocation(line: 527, column: 31, scope: !10126)
!10132 = distinct !{!10132, !10129, !10133}
!10133 = !DILocation(line: 529, column: 3, scope: !10126)
!10134 = !DILocation(line: 583, column: 3, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !1031, line: 577, column: 37)
!10136 = distinct !DILexicalBlock(scope: !10122, file: !1031, line: 577, column: 6)
!10137 = !DILocation(line: 584, column: 3, scope: !10135)
!10138 = !DILocation(line: 584, column: 10, scope: !10135)
!10139 = !DILocation(line: 584, column: 31, scope: !10135)
!10140 = distinct !{!10140, !10137, !10141}
!10141 = !DILocation(line: 585, column: 3, scope: !10135)
!10142 = !DILocation(line: 627, column: 1, scope: !10122)
!10143 = distinct !DISubprogram(name: "set_up_plls", scope: !1031, file: !1031, line: 448, type: !266, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10144 = !DILocation(line: 460, column: 6, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10143, file: !1031, line: 460, column: 6)
!10146 = !DILocation(line: 460, column: 31, scope: !10145)
!10147 = !DILocation(line: 460, column: 6, scope: !10143)
!10148 = !DILocation(line: 461, column: 3, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !1031, line: 460, column: 67)
!10150 = !DILocation(line: 462, column: 3, scope: !10149)
!10151 = !DILocation(line: 463, column: 2, scope: !10149)
!10152 = !DILocation(line: 464, column: 2, scope: !10143)
!10153 = !DILocation(line: 488, column: 2, scope: !10143)
!10154 = !DILocation(line: 492, column: 2, scope: !10143)
!10155 = !DILocation(line: 496, column: 2, scope: !10143)
!10156 = !DILocation(line: 499, column: 2, scope: !10143)
!10157 = !DILocation(line: 500, column: 2, scope: !10143)
!10158 = !DILocation(line: 500, column: 9, scope: !10143)
!10159 = !DILocation(line: 500, column: 30, scope: !10143)
!10160 = distinct !{!10160, !10157, !10161}
!10161 = !DILocation(line: 502, column: 2, scope: !10143)
!10162 = !DILocation(line: 505, column: 1, scope: !10143)
!10163 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10119, file: !10119, line: 3224, type: !7880, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10164)
!10164 = !{!10165}
!10165 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10163, file: !10119, line: 3224, type: !113)
!10166 = !DILocation(line: 0, scope: !10163)
!10167 = !DILocation(line: 3226, column: 3, scope: !10163)
!10168 = !DILocation(line: 3227, column: 1, scope: !10163)
!10169 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10119, file: !10119, line: 3188, type: !7880, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10170)
!10170 = !{!10171}
!10171 = !DILocalVariable(name: "Source", arg: 1, scope: !10169, file: !10119, line: 3188, type: !113)
!10172 = !DILocation(line: 0, scope: !10169)
!10173 = !DILocation(line: 3190, column: 3, scope: !10169)
!10174 = !DILocation(line: 3191, column: 1, scope: !10169)
!10175 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10119, file: !10119, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10176 = !DILocation(line: 3206, column: 21, scope: !10175)
!10177 = !DILocation(line: 3206, column: 3, scope: !10175)
!10178 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10119, file: !10119, line: 3240, type: !7880, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10179)
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10178, file: !10119, line: 3240, type: !113)
!10181 = !DILocation(line: 0, scope: !10178)
!10182 = !DILocation(line: 3242, column: 3, scope: !10178)
!10183 = !DILocation(line: 3243, column: 1, scope: !10178)
!10184 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10119, file: !10119, line: 3256, type: !7880, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !10185)
!10185 = !{!10186}
!10186 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10184, file: !10119, line: 3256, type: !113)
!10187 = !DILocation(line: 0, scope: !10184)
!10188 = !DILocation(line: 3258, column: 3, scope: !10184)
!10189 = !DILocation(line: 3259, column: 1, scope: !10184)
!10190 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1031, file: !1031, line: 409, type: !266, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10191 = !DILocation(line: 412, column: 6, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10190, file: !1031, line: 412, column: 6)
!10193 = !DILocation(line: 412, column: 27, scope: !10192)
!10194 = !DILocation(line: 412, column: 6, scope: !10190)
!10195 = !DILocation(line: 414, column: 3, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10192, file: !1031, line: 412, column: 33)
!10197 = !DILocation(line: 415, column: 3, scope: !10196)
!10198 = !DILocation(line: 415, column: 10, scope: !10196)
!10199 = !DILocation(line: 415, column: 31, scope: !10196)
!10200 = distinct !{!10200, !10197, !10201}
!10201 = !DILocation(line: 417, column: 3, scope: !10196)
!10202 = !DILocation(line: 421, column: 2, scope: !10190)
!10203 = !DILocation(line: 422, column: 2, scope: !10190)
!10204 = !DILocation(line: 422, column: 9, scope: !10190)
!10205 = !DILocation(line: 422, column: 34, scope: !10190)
!10206 = distinct !{!10206, !10203, !10207}
!10207 = !DILocation(line: 423, column: 2, scope: !10190)
!10208 = !DILocation(line: 424, column: 1, scope: !10190)
!10209 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10119, file: !10119, line: 4195, type: !266, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10210 = !DILocation(line: 4197, column: 3, scope: !10209)
!10211 = !DILocation(line: 4198, column: 1, scope: !10209)
!10212 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10119, file: !10119, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10213 = !DILocation(line: 4186, column: 3, scope: !10212)
!10214 = !DILocation(line: 4187, column: 1, scope: !10212)
!10215 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10119, file: !10119, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10216 = !DILocation(line: 4207, column: 11, scope: !10215)
!10217 = !DILocation(line: 4207, column: 44, scope: !10215)
!10218 = !DILocation(line: 4207, column: 3, scope: !10215)
!10219 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10119, file: !10119, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10220 = !DILocation(line: 3009, column: 11, scope: !10219)
!10221 = !DILocation(line: 3009, column: 44, scope: !10219)
!10222 = !DILocation(line: 3009, column: 3, scope: !10219)
!10223 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10119, file: !10119, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10224 = !DILocation(line: 2989, column: 3, scope: !10223)
!10225 = !DILocation(line: 2990, column: 1, scope: !10223)
!10226 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10119, file: !10119, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10227 = !DILocation(line: 2941, column: 3, scope: !10226)
!10228 = !DILocation(line: 2942, column: 1, scope: !10226)
!10229 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10119, file: !10119, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10230 = !DILocation(line: 2951, column: 3, scope: !10229)
!10231 = !DILocation(line: 2952, column: 1, scope: !10229)
!10232 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10119, file: !10119, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10233 = !DILocation(line: 2971, column: 11, scope: !10232)
!10234 = !DILocation(line: 2971, column: 44, scope: !10232)
!10235 = !DILocation(line: 2971, column: 3, scope: !10232)
!10236 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10119, file: !10119, line: 3143, type: !266, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10237 = !DILocation(line: 3145, column: 3, scope: !10236)
!10238 = !DILocation(line: 3146, column: 1, scope: !10236)
!10239 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10119, file: !10119, line: 3163, type: !395, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !970, retainedNodes: !397)
!10240 = !DILocation(line: 3165, column: 11, scope: !10239)
!10241 = !DILocation(line: 3165, column: 46, scope: !10239)
!10242 = !DILocation(line: 3165, column: 3, scope: !10239)
!10243 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10244, file: !10244, line: 40, type: !395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !397)
!10244 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10245 = !DILocation(line: 45, column: 3, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10247, file: !10244, line: 44, column: 44)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !10244, line: 44, column: 13)
!10248 = distinct !DILexicalBlock(scope: !10243, file: !10244, line: 42, column: 6)
!10249 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10244, file: !10244, line: 56, type: !266, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !397)
!10250 = !DILocation(line: 58, column: 2, scope: !10249)
!10251 = !DILocation(line: 62, column: 1, scope: !10249)
!10252 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10119, file: !10119, line: 4304, type: !10253, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !113, !113, !113, !113}
!10255 = !{!10256, !10257, !10258, !10259}
!10256 = !DILocalVariable(name: "Source", arg: 1, scope: !10252, file: !10119, line: 4304, type: !113)
!10257 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10252, file: !10119, line: 4304, type: !113)
!10258 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10252, file: !10119, line: 4304, type: !113)
!10259 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10252, file: !10119, line: 4304, type: !113)
!10260 = !DILocation(line: 0, scope: !10252)
!10261 = !DILocation(line: 4306, column: 3, scope: !10252)
!10262 = !DILocation(line: 4308, column: 3, scope: !10252)
!10263 = !DILocation(line: 4312, column: 1, scope: !10252)
!10264 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10244, file: !10244, line: 69, type: !266, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !397)
!10265 = !DILocation(line: 72, column: 2, scope: !10264)
!10266 = !DILocation(line: 73, column: 1, scope: !10264)
!10267 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10268, file: !10268, line: 1185, type: !7880, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !10269)
!10268 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10267, file: !10268, line: 1185, type: !113)
!10271 = !DILocalVariable(name: "tmpreg", scope: !10267, file: !10268, line: 1187, type: !461)
!10272 = !DILocation(line: 0, scope: !10267)
!10273 = !DILocation(line: 1187, column: 3, scope: !10267)
!10274 = !DILocation(line: 1187, column: 17, scope: !10267)
!10275 = !DILocation(line: 1188, column: 3, scope: !10267)
!10276 = !DILocation(line: 1190, column: 12, scope: !10267)
!10277 = !DILocation(line: 1190, column: 10, scope: !10267)
!10278 = !DILocation(line: 1191, column: 9, scope: !10267)
!10279 = !DILocation(line: 1192, column: 1, scope: !10267)
!10280 = distinct !DISubprogram(name: "uart_console_init", scope: !1162, file: !1162, line: 588, type: !1139, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10281)
!10281 = !{!10282}
!10282 = !DILocalVariable(name: "arg", arg: 1, scope: !10280, file: !1162, line: 588, type: !1117)
!10283 = !DILocation(line: 0, scope: !10280)
!10284 = !DILocation(line: 593, column: 7, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10280, file: !1162, line: 593, column: 6)
!10286 = !DILocation(line: 593, column: 6, scope: !10280)
!10287 = !DILocation(line: 597, column: 2, scope: !10280)
!10288 = !DILocation(line: 599, column: 2, scope: !10280)
!10289 = !DILocation(line: 600, column: 1, scope: !10280)
!10290 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !10292, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10294)
!10291 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!492, !1117}
!10294 = !{!10295}
!10295 = !DILocalVariable(name: "dev", arg: 1, scope: !10290, file: !10291, line: 47, type: !1117)
!10296 = !DILocation(line: 0, scope: !10290)
!10297 = !DILocation(line: 55, column: 2, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10290, file: !10291, line: 55, column: 2)
!10299 = !{i64 2155054756}
!10300 = !DILocation(line: 56, column: 9, scope: !10290)
!10301 = !DILocation(line: 56, column: 2, scope: !10290)
!10302 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1162, file: !1162, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !397)
!10303 = !DILocation(line: 576, column: 2, scope: !10302)
!10304 = !DILocation(line: 579, column: 2, scope: !10302)
!10305 = !DILocation(line: 581, column: 1, scope: !10302)
!10306 = distinct !DISubprogram(name: "console_out", scope: !1162, file: !1162, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10307)
!10307 = !{!10308}
!10308 = !DILocalVariable(name: "c", arg: 1, scope: !10306, file: !1162, line: 77, type: !105)
!10309 = !DILocation(line: 0, scope: !10306)
!10310 = !DILocation(line: 89, column: 11, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !1162, line: 89, column: 6)
!10312 = !DILocation(line: 89, column: 6, scope: !10306)
!10313 = !DILocation(line: 90, column: 3, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10311, file: !1162, line: 89, column: 17)
!10315 = !DILocation(line: 91, column: 2, scope: !10314)
!10316 = !DILocation(line: 92, column: 34, scope: !10306)
!10317 = !DILocation(line: 92, column: 2, scope: !10306)
!10318 = !DILocation(line: 94, column: 2, scope: !10306)
!10319 = distinct !DISubprogram(name: "uart_poll_out", scope: !10320, file: !10320, line: 95, type: !1135, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10321)
!10320 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!10321 = !{!10322, !10323}
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10319, file: !10320, line: 95, type: !1117)
!10323 = !DILocalVariable(name: "out_char", arg: 2, scope: !10319, file: !10320, line: 95, type: !170)
!10324 = !DILocation(line: 0, scope: !10319)
!10325 = !DILocation(line: 105, column: 2, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10319, file: !10320, line: 105, column: 2)
!10327 = !{i64 2155138147}
!10328 = !DILocation(line: 106, column: 2, scope: !10319)
!10329 = !DILocation(line: 107, column: 1, scope: !10319)
!10330 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1111, file: !1111, line: 574, type: !1135, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10331)
!10331 = !{!10332, !10333, !10334}
!10332 = !DILocalVariable(name: "dev", arg: 1, scope: !10330, file: !1111, line: 574, type: !1117)
!10333 = !DILocalVariable(name: "out_char", arg: 2, scope: !10330, file: !1111, line: 575, type: !170)
!10334 = !DILocalVariable(name: "api", scope: !10330, file: !1111, line: 577, type: !1108)
!10335 = !DILocation(line: 0, scope: !10330)
!10336 = !DILocation(line: 578, column: 40, scope: !10330)
!10337 = !DILocation(line: 580, column: 7, scope: !10330)
!10338 = !DILocation(line: 580, column: 2, scope: !10330)
!10339 = !DILocation(line: 581, column: 1, scope: !10330)
!10340 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !10292, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10341)
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "dev", arg: 1, scope: !10340, file: !481, line: 730, type: !1117)
!10343 = !DILocation(line: 0, scope: !10340)
!10344 = !DILocation(line: 732, column: 9, scope: !10340)
!10345 = !DILocation(line: 732, column: 2, scope: !10340)
!10346 = distinct !DISubprogram(name: "uart_register_input", scope: !1162, file: !1162, line: 560, type: !10347, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10394)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !10349, !10349, !10391}
!10349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10350, size: 32)
!10350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !10351)
!10351 = !{!10352}
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10350, file: !122, line: 2209, baseType: !10353, size: 160)
!10353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !10354)
!10354 = !{!10355, !10368, !10372}
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10353, file: !122, line: 1710, baseType: !10356, size: 64)
!10356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10357, line: 46, baseType: !10358)
!10357 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10357, line: 41, size: 64, elements: !10359)
!10359 = !{!10360, !10367}
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10358, file: !10357, line: 42, baseType: !10361, size: 32)
!10361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10362, size: 32)
!10362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10357, line: 39, baseType: !10363)
!10363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10357, line: 35, size: 32, elements: !10364)
!10364 = !{!10365}
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10363, file: !10357, line: 36, baseType: !10366, size: 32)
!10366 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10357, line: 32, baseType: !113)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10358, file: !10357, line: 43, baseType: !10361, size: 32, offset: 32)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10353, file: !122, line: 1711, baseType: !10369, size: 32, offset: 64)
!10369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10370)
!10370 = !{!10371}
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10369, file: !236, line: 52, baseType: !22, size: 32)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10353, file: !122, line: 1712, baseType: !10373, size: 64, offset: 96)
!10373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10374)
!10374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10375)
!10375 = !{!10376}
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10374, file: !163, line: 232, baseType: !10377, size: 64)
!10377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10378)
!10378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10379)
!10379 = !{!10380, !10386}
!10380 = !DIDerivedType(tag: DW_TAG_member, scope: !10378, file: !137, line: 38, baseType: !10381, size: 32)
!10381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10378, file: !137, line: 38, size: 32, elements: !10382)
!10382 = !{!10383, !10385}
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10381, file: !137, line: 39, baseType: !10384, size: 32)
!10384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10378, size: 32)
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10381, file: !137, line: 40, baseType: !10384, size: 32)
!10386 = !DIDerivedType(tag: DW_TAG_member, scope: !10378, file: !137, line: 42, baseType: !10387, size: 32, offset: 32)
!10387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10378, file: !137, line: 42, size: 32, elements: !10388)
!10388 = !{!10389, !10390}
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10387, file: !137, line: 43, baseType: !10384, size: 32)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10387, file: !137, line: 44, baseType: !10384, size: 32)
!10391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10392, size: 32)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!169, !102, !169}
!10394 = !{!10395, !10396, !10397}
!10395 = !DILocalVariable(name: "avail", arg: 1, scope: !10346, file: !1162, line: 560, type: !10349)
!10396 = !DILocalVariable(name: "lines", arg: 2, scope: !10346, file: !1162, line: 560, type: !10349)
!10397 = !DILocalVariable(name: "completion", arg: 3, scope: !10346, file: !1162, line: 561, type: !10391)
!10398 = !DILocation(line: 0, scope: !10346)
!10399 = !DILocation(line: 566, column: 1, scope: !10346)
!10400 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1340, file: !1340, line: 523, type: !1198, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10401)
!10401 = !{!10402, !10403, !10404, !10405, !10406}
!10402 = !DILocalVariable(name: "dev", arg: 1, scope: !10400, file: !1340, line: 523, type: !1200)
!10403 = !DILocalVariable(name: "pin", arg: 2, scope: !10400, file: !1340, line: 524, type: !1215)
!10404 = !DILocalVariable(name: "flags", arg: 3, scope: !10400, file: !1340, line: 524, type: !1216)
!10405 = !DILocalVariable(name: "err", scope: !10400, file: !1340, line: 526, type: !105)
!10406 = !DILocalVariable(name: "pincfg", scope: !10400, file: !1340, line: 527, type: !105)
!10407 = !DILocation(line: 0, scope: !10400)
!10408 = !DILocation(line: 527, column: 2, scope: !10400)
!10409 = !DILocation(line: 532, column: 8, scope: !10400)
!10410 = !DILocation(line: 533, column: 10, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10400, file: !1340, line: 533, column: 6)
!10412 = !DILocation(line: 533, column: 6, scope: !10400)
!10413 = !DILocation(line: 543, column: 13, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10400, file: !1340, line: 543, column: 6)
!10415 = !DILocation(line: 543, column: 28, scope: !10414)
!10416 = !DILocation(line: 543, column: 6, scope: !10400)
!10417 = !DILocation(line: 544, column: 14, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !1340, line: 544, column: 7)
!10419 = distinct !DILexicalBlock(scope: !10414, file: !1340, line: 543, column: 34)
!10420 = !DILocation(line: 544, column: 39, scope: !10418)
!10421 = !DILocation(line: 544, column: 7, scope: !10419)
!10422 = !DILocation(line: 545, column: 38, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10418, file: !1340, line: 544, column: 45)
!10424 = !DILocation(line: 545, column: 4, scope: !10423)
!10425 = !DILocation(line: 546, column: 3, scope: !10423)
!10426 = !DILocation(line: 546, column: 21, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10418, file: !1340, line: 546, column: 14)
!10428 = !DILocation(line: 546, column: 45, scope: !10427)
!10429 = !DILocation(line: 546, column: 14, scope: !10418)
!10430 = !DILocation(line: 547, column: 40, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10427, file: !1340, line: 546, column: 51)
!10432 = !DILocation(line: 547, column: 4, scope: !10431)
!10433 = !DILocation(line: 548, column: 3, scope: !10431)
!10434 = !DILocation(line: 551, column: 32, scope: !10400)
!10435 = !DILocation(line: 551, column: 37, scope: !10400)
!10436 = !DILocation(line: 551, column: 2, scope: !10400)
!10437 = !DILocation(line: 554, column: 6, scope: !10400)
!10438 = !DILocation(line: 562, column: 1, scope: !10400)
!10439 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1340, file: !1340, line: 410, type: !10440, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10442)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{!105, !1200, !1027}
!10442 = !{!10443, !10444, !10445, !10447}
!10443 = !DILocalVariable(name: "dev", arg: 1, scope: !10439, file: !1340, line: 410, type: !1200)
!10444 = !DILocalVariable(name: "value", arg: 2, scope: !10439, file: !1340, line: 410, type: !1027)
!10445 = !DILocalVariable(name: "cfg", scope: !10439, file: !1340, line: 412, type: !10446)
!10446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!10447 = !DILocalVariable(name: "gpio", scope: !10439, file: !1340, line: 413, type: !1273)
!10448 = !DILocation(line: 0, scope: !10439)
!10449 = !DILocation(line: 412, column: 45, scope: !10439)
!10450 = !DILocation(line: 413, column: 44, scope: !10439)
!10451 = !DILocation(line: 415, column: 11, scope: !10439)
!10452 = !DILocation(line: 415, column: 9, scope: !10439)
!10453 = !DILocation(line: 417, column: 2, scope: !10439)
!10454 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1340, file: !1340, line: 420, type: !1225, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10455)
!10455 = !{!10456, !10457, !10458, !10459, !10460, !10461}
!10456 = !DILocalVariable(name: "dev", arg: 1, scope: !10454, file: !1340, line: 420, type: !1200)
!10457 = !DILocalVariable(name: "mask", arg: 2, scope: !10454, file: !1340, line: 421, type: !1227)
!10458 = !DILocalVariable(name: "value", arg: 3, scope: !10454, file: !1340, line: 422, type: !1222)
!10459 = !DILocalVariable(name: "cfg", scope: !10454, file: !1340, line: 424, type: !10446)
!10460 = !DILocalVariable(name: "gpio", scope: !10454, file: !1340, line: 425, type: !1273)
!10461 = !DILocalVariable(name: "port_value", scope: !10454, file: !1340, line: 426, type: !113)
!10462 = !DILocation(line: 0, scope: !10454)
!10463 = !DILocation(line: 424, column: 45, scope: !10454)
!10464 = !DILocation(line: 425, column: 44, scope: !10454)
!10465 = !DILocation(line: 430, column: 15, scope: !10454)
!10466 = !DILocation(line: 431, column: 46, scope: !10454)
!10467 = !DILocation(line: 431, column: 44, scope: !10454)
!10468 = !DILocation(line: 431, column: 61, scope: !10454)
!10469 = !DILocation(line: 431, column: 53, scope: !10454)
!10470 = !DILocation(line: 431, column: 2, scope: !10454)
!10471 = !DILocation(line: 435, column: 2, scope: !10454)
!10472 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1340, file: !1340, line: 438, type: !1230, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477}
!10474 = !DILocalVariable(name: "dev", arg: 1, scope: !10472, file: !1340, line: 438, type: !1200)
!10475 = !DILocalVariable(name: "pins", arg: 2, scope: !10472, file: !1340, line: 439, type: !1227)
!10476 = !DILocalVariable(name: "cfg", scope: !10472, file: !1340, line: 441, type: !10446)
!10477 = !DILocalVariable(name: "gpio", scope: !10472, file: !1340, line: 442, type: !1273)
!10478 = !DILocation(line: 0, scope: !10472)
!10479 = !DILocation(line: 441, column: 45, scope: !10472)
!10480 = !DILocation(line: 442, column: 44, scope: !10472)
!10481 = !DILocation(line: 448, column: 2, scope: !10472)
!10482 = !DILocation(line: 450, column: 2, scope: !10472)
!10483 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1340, file: !1340, line: 453, type: !1230, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10484)
!10484 = !{!10485, !10486, !10487, !10488}
!10485 = !DILocalVariable(name: "dev", arg: 1, scope: !10483, file: !1340, line: 453, type: !1200)
!10486 = !DILocalVariable(name: "pins", arg: 2, scope: !10483, file: !1340, line: 454, type: !1227)
!10487 = !DILocalVariable(name: "cfg", scope: !10483, file: !1340, line: 456, type: !10446)
!10488 = !DILocalVariable(name: "gpio", scope: !10483, file: !1340, line: 457, type: !1273)
!10489 = !DILocation(line: 0, scope: !10483)
!10490 = !DILocation(line: 456, column: 45, scope: !10483)
!10491 = !DILocation(line: 457, column: 44, scope: !10483)
!10492 = !DILocation(line: 467, column: 2, scope: !10483)
!10493 = !DILocation(line: 470, column: 2, scope: !10483)
!10494 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1340, file: !1340, line: 473, type: !1230, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10495)
!10495 = !{!10496, !10497, !10498, !10499}
!10496 = !DILocalVariable(name: "dev", arg: 1, scope: !10494, file: !1340, line: 473, type: !1200)
!10497 = !DILocalVariable(name: "pins", arg: 2, scope: !10494, file: !1340, line: 474, type: !1227)
!10498 = !DILocalVariable(name: "cfg", scope: !10494, file: !1340, line: 476, type: !10446)
!10499 = !DILocalVariable(name: "gpio", scope: !10494, file: !1340, line: 477, type: !1273)
!10500 = !DILocation(line: 0, scope: !10494)
!10501 = !DILocation(line: 476, column: 45, scope: !10494)
!10502 = !DILocation(line: 477, column: 44, scope: !10494)
!10503 = !DILocation(line: 484, column: 2, scope: !10494)
!10504 = !DILocation(line: 487, column: 2, scope: !10494)
!10505 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1340, file: !1340, line: 594, type: !1236, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10506)
!10506 = !{!10507, !10508, !10509, !10510, !10511, !10512, !10514, !10515, !10516}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1340, line: 594, type: !1200)
!10508 = !DILocalVariable(name: "pin", arg: 2, scope: !10505, file: !1340, line: 595, type: !1215)
!10509 = !DILocalVariable(name: "mode", arg: 3, scope: !10505, file: !1340, line: 596, type: !1174)
!10510 = !DILocalVariable(name: "trig", arg: 4, scope: !10505, file: !1340, line: 597, type: !1180)
!10511 = !DILocalVariable(name: "cfg", scope: !10505, file: !1340, line: 599, type: !10446)
!10512 = !DILocalVariable(name: "data", scope: !10505, file: !1340, line: 600, type: !10513)
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!10514 = !DILocalVariable(name: "edge", scope: !10505, file: !1340, line: 601, type: !105)
!10515 = !DILocalVariable(name: "err", scope: !10505, file: !1340, line: 602, type: !105)
!10516 = !DILabel(scope: !10505, name: "exit", file: !1340, line: 643)
!10517 = !DILocation(line: 0, scope: !10505)
!10518 = !DILocation(line: 599, column: 45, scope: !10505)
!10519 = !DILocation(line: 604, column: 6, scope: !10505)
!10520 = !DILocation(line: 605, column: 34, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1340, line: 605, column: 7)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !1340, line: 604, column: 38)
!10523 = distinct !DILexicalBlock(scope: !10505, file: !1340, line: 604, column: 6)
!10524 = !DILocation(line: 605, column: 7, scope: !10521)
!10525 = !DILocation(line: 605, column: 47, scope: !10521)
!10526 = !DILocation(line: 605, column: 39, scope: !10521)
!10527 = !DILocation(line: 605, column: 7, scope: !10522)
!10528 = !DILocation(line: 606, column: 4, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10521, file: !1340, line: 605, column: 53)
!10530 = !DILocation(line: 607, column: 4, scope: !10529)
!10531 = !DILocation(line: 608, column: 4, scope: !10529)
!10532 = !DILocation(line: 609, column: 3, scope: !10529)
!10533 = !DILocation(line: 600, column: 38, scope: !10505)
!10534 = !DILocation(line: 620, column: 30, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10505, file: !1340, line: 620, column: 6)
!10536 = !DILocation(line: 620, column: 6, scope: !10535)
!10537 = !DILocation(line: 620, column: 57, scope: !10535)
!10538 = !DILocation(line: 620, column: 6, scope: !10505)
!10539 = !DILocation(line: 625, column: 29, scope: !10505)
!10540 = !DILocation(line: 625, column: 2, scope: !10505)
!10541 = !DILocation(line: 627, column: 2, scope: !10505)
!10542 = !DILocation(line: 630, column: 3, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10505, file: !1340, line: 627, column: 16)
!10544 = !DILocation(line: 633, column: 3, scope: !10543)
!10545 = !DILocation(line: 636, column: 3, scope: !10543)
!10546 = !DILocation(line: 639, column: 2, scope: !10505)
!10547 = !DILocation(line: 641, column: 2, scope: !10505)
!10548 = !DILocation(line: 643, column: 1, scope: !10505)
!10549 = !DILocation(line: 644, column: 2, scope: !10505)
!10550 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1340, file: !1340, line: 647, type: !1240, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10551)
!10551 = !{!10552, !10553, !10554, !10555}
!10552 = !DILocalVariable(name: "dev", arg: 1, scope: !10550, file: !1340, line: 647, type: !1200)
!10553 = !DILocalVariable(name: "callback", arg: 2, scope: !10550, file: !1340, line: 648, type: !1242)
!10554 = !DILocalVariable(name: "set", arg: 3, scope: !10550, file: !1340, line: 649, type: !492)
!10555 = !DILocalVariable(name: "data", scope: !10550, file: !1340, line: 651, type: !10513)
!10556 = !DILocation(line: 0, scope: !10550)
!10557 = !DILocation(line: 651, column: 38, scope: !10550)
!10558 = !DILocation(line: 653, column: 37, scope: !10550)
!10559 = !DILocation(line: 653, column: 9, scope: !10550)
!10560 = !DILocation(line: 653, column: 2, scope: !10550)
!10561 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10562, file: !10562, line: 38, type: !10563, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10566)
!10562 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!105, !10565, !1242, !492}
!10565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!10566 = !{!10567, !10568, !10569}
!10567 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10561, file: !10562, line: 38, type: !10565)
!10568 = !DILocalVariable(name: "callback", arg: 2, scope: !10561, file: !10562, line: 39, type: !1242)
!10569 = !DILocalVariable(name: "set", arg: 3, scope: !10561, file: !10562, line: 40, type: !492)
!10570 = !DILocation(line: 0, scope: !10561)
!10571 = !DILocation(line: 42, column: 2, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !10562, line: 42, column: 2)
!10573 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 42, column: 2)
!10574 = !DILocation(line: 42, column: 2, scope: !10573)
!10575 = !DILocation(line: 42, column: 2, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10572, file: !10562, line: 42, column: 2)
!10577 = !DILocation(line: 43, column: 2, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !10562, line: 43, column: 2)
!10579 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 43, column: 2)
!10580 = !DILocation(line: 43, column: 2, scope: !10579)
!10581 = !DILocation(line: 43, column: 2, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10578, file: !10562, line: 43, column: 2)
!10583 = !DILocation(line: 45, column: 7, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 45, column: 6)
!10585 = !DILocation(line: 45, column: 6, scope: !10561)
!10586 = !DILocation(line: 46, column: 56, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !10562, line: 46, column: 7)
!10588 = distinct !DILexicalBlock(scope: !10584, file: !10562, line: 45, column: 38)
!10589 = !DILocation(line: 46, column: 8, scope: !10587)
!10590 = !DILocation(line: 46, column: 7, scope: !10588)
!10591 = !DILocation(line: 51, column: 13, scope: !10584)
!10592 = !DILocation(line: 56, column: 43, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !10562, line: 55, column: 11)
!10594 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 55, column: 6)
!10595 = !DILocation(line: 56, column: 3, scope: !10593)
!10596 = !DILocation(line: 57, column: 2, scope: !10593)
!10597 = !DILocation(line: 60, column: 1, scope: !10561)
!10598 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1247, file: !1247, line: 261, type: !10599, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{!492, !10565}
!10601 = !{!10602}
!10602 = !DILocalVariable(name: "list", arg: 1, scope: !10598, file: !1247, line: 261, type: !10565)
!10603 = !DILocation(line: 0, scope: !10598)
!10604 = !DILocation(line: 261, column: 1, scope: !10598)
!10605 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1247, file: !1247, line: 417, type: !10606, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!492, !10565, !1419}
!10608 = !{!10609, !10610, !10611, !10612}
!10609 = !DILocalVariable(name: "list", arg: 1, scope: !10605, file: !1247, line: 417, type: !10565)
!10610 = !DILocalVariable(name: "node", arg: 2, scope: !10605, file: !1247, line: 417, type: !1419)
!10611 = !DILocalVariable(name: "prev", scope: !10605, file: !1247, line: 417, type: !1419)
!10612 = !DILocalVariable(name: "test", scope: !10605, file: !1247, line: 417, type: !1419)
!10613 = !DILocation(line: 0, scope: !10605)
!10614 = !DILocation(line: 417, column: 1, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10605, file: !1247, line: 417, column: 1)
!10616 = !DILocation(line: 417, column: 1, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10615, file: !1247, line: 417, column: 1)
!10618 = !DILocation(line: 417, column: 1, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !1247, line: 417, column: 1)
!10620 = distinct !DILexicalBlock(scope: !10617, file: !1247, line: 417, column: 1)
!10621 = !DILocation(line: 417, column: 1, scope: !10620)
!10622 = distinct !{!10622, !10614, !10614}
!10623 = !DILocation(line: 417, column: 1, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10619, file: !1247, line: 417, column: 1)
!10625 = !DILocation(line: 417, column: 1, scope: !10605)
!10626 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1247, file: !1247, line: 298, type: !10627, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10629)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{null, !10565, !1419}
!10629 = !{!10630, !10631}
!10630 = !DILocalVariable(name: "list", arg: 1, scope: !10626, file: !1247, line: 298, type: !10565)
!10631 = !DILocalVariable(name: "node", arg: 2, scope: !10626, file: !1247, line: 298, type: !1419)
!10632 = !DILocation(line: 0, scope: !10626)
!10633 = !DILocation(line: 298, column: 1, scope: !10626)
!10634 = !DILocation(line: 298, column: 1, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10626, file: !1247, line: 298, column: 1)
!10636 = !DILocation(line: 298, column: 1, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10635, file: !1247, line: 298, column: 1)
!10638 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1247, file: !1247, line: 231, type: !10639, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10641)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{!1419, !10565}
!10641 = !{!10642}
!10642 = !DILocalVariable(name: "list", arg: 1, scope: !10638, file: !1247, line: 231, type: !10565)
!10643 = !DILocation(line: 0, scope: !10638)
!10644 = !DILocation(line: 233, column: 15, scope: !10638)
!10645 = !DILocation(line: 233, column: 2, scope: !10638)
!10646 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1247, file: !1247, line: 209, type: !10647, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !1419, !1419}
!10649 = !{!10650, !10651}
!10650 = !DILocalVariable(name: "parent", arg: 1, scope: !10646, file: !1247, line: 209, type: !1419)
!10651 = !DILocalVariable(name: "child", arg: 2, scope: !10646, file: !1247, line: 209, type: !1419)
!10652 = !DILocation(line: 0, scope: !10646)
!10653 = !DILocation(line: 211, column: 10, scope: !10646)
!10654 = !DILocation(line: 211, column: 15, scope: !10646)
!10655 = !DILocation(line: 212, column: 1, scope: !10646)
!10656 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1247, file: !1247, line: 214, type: !10627, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10657)
!10657 = !{!10658, !10659}
!10658 = !DILocalVariable(name: "list", arg: 1, scope: !10656, file: !1247, line: 214, type: !10565)
!10659 = !DILocalVariable(name: "node", arg: 2, scope: !10656, file: !1247, line: 214, type: !1419)
!10660 = !DILocation(line: 0, scope: !10656)
!10661 = !DILocation(line: 216, column: 8, scope: !10656)
!10662 = !DILocation(line: 216, column: 13, scope: !10656)
!10663 = !DILocation(line: 217, column: 1, scope: !10656)
!10664 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1247, file: !1247, line: 243, type: !10639, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "list", arg: 1, scope: !10664, file: !1247, line: 243, type: !10565)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 245, column: 15, scope: !10664)
!10669 = !DILocation(line: 245, column: 2, scope: !10664)
!10670 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1247, file: !1247, line: 219, type: !10627, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10671)
!10671 = !{!10672, !10673}
!10672 = !DILocalVariable(name: "list", arg: 1, scope: !10670, file: !1247, line: 219, type: !10565)
!10673 = !DILocalVariable(name: "node", arg: 2, scope: !10670, file: !1247, line: 219, type: !1419)
!10674 = !DILocation(line: 0, scope: !10670)
!10675 = !DILocation(line: 221, column: 8, scope: !10670)
!10676 = !DILocation(line: 221, column: 13, scope: !10670)
!10677 = !DILocation(line: 222, column: 1, scope: !10670)
!10678 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1247, file: !1247, line: 401, type: !10679, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{null, !10565, !1419, !1419}
!10681 = !{!10682, !10683, !10684}
!10682 = !DILocalVariable(name: "list", arg: 1, scope: !10678, file: !1247, line: 401, type: !10565)
!10683 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10678, file: !1247, line: 401, type: !1419)
!10684 = !DILocalVariable(name: "node", arg: 3, scope: !10678, file: !1247, line: 401, type: !1419)
!10685 = !DILocation(line: 0, scope: !10678)
!10686 = !DILocation(line: 401, column: 1, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10678, file: !1247, line: 401, column: 1)
!10688 = !DILocation(line: 0, scope: !10687)
!10689 = !DILocation(line: 401, column: 1, scope: !10678)
!10690 = !DILocation(line: 401, column: 1, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10687, file: !1247, line: 401, column: 1)
!10692 = !DILocation(line: 401, column: 1, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10691, file: !1247, line: 401, column: 1)
!10694 = !DILocation(line: 401, column: 1, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10693, file: !1247, line: 401, column: 1)
!10696 = !DILocation(line: 401, column: 1, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10687, file: !1247, line: 401, column: 1)
!10698 = !DILocation(line: 401, column: 1, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10697, file: !1247, line: 401, column: 1)
!10700 = !DILocation(line: 401, column: 1, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10699, file: !1247, line: 401, column: 1)
!10702 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1247, file: !1247, line: 285, type: !10703, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10705)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!1419, !1419}
!10705 = !{!10706}
!10706 = !DILocalVariable(name: "node", arg: 1, scope: !10702, file: !1247, line: 285, type: !1419)
!10707 = !DILocation(line: 0, scope: !10702)
!10708 = !DILocation(line: 285, column: 1, scope: !10702)
!10709 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1247, file: !1247, line: 274, type: !10703, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10710)
!10710 = !{!10711}
!10711 = !DILocalVariable(name: "node", arg: 1, scope: !10709, file: !1247, line: 274, type: !1419)
!10712 = !DILocation(line: 0, scope: !10709)
!10713 = !DILocation(line: 274, column: 1, scope: !10709)
!10714 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1247, file: !1247, line: 204, type: !10703, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10715)
!10715 = !{!10716}
!10716 = !DILocalVariable(name: "node", arg: 1, scope: !10714, file: !1247, line: 204, type: !1419)
!10717 = !DILocation(line: 0, scope: !10714)
!10718 = !DILocation(line: 206, column: 15, scope: !10714)
!10719 = !DILocation(line: 206, column: 2, scope: !10714)
!10720 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1340, file: !1340, line: 342, type: !448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10721)
!10721 = !{!10722, !10723, !10724}
!10722 = !DILocalVariable(name: "pin", arg: 1, scope: !10720, file: !1340, line: 342, type: !105)
!10723 = !DILocalVariable(name: "line", scope: !10720, file: !1340, line: 344, type: !113)
!10724 = !DILocalVariable(name: "port", scope: !10720, file: !1340, line: 345, type: !105)
!10725 = !DILocation(line: 0, scope: !10720)
!10726 = !DILocation(line: 344, column: 18, scope: !10720)
!10727 = !{i32 983040, i32 0}
!10728 = !DILocation(line: 356, column: 9, scope: !10720)
!10729 = !DILocation(line: 370, column: 2, scope: !10720)
!10730 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1340, file: !1340, line: 37, type: !891, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10731)
!10731 = !{!10732, !10733, !10734}
!10732 = !DILocalVariable(name: "line", arg: 1, scope: !10730, file: !1340, line: 37, type: !105)
!10733 = !DILocalVariable(name: "arg", arg: 2, scope: !10730, file: !1340, line: 37, type: !104)
!10734 = !DILocalVariable(name: "data", scope: !10730, file: !1340, line: 39, type: !10513)
!10735 = !DILocation(line: 0, scope: !10730)
!10736 = !DILocation(line: 41, column: 29, scope: !10730)
!10737 = !DILocation(line: 41, column: 39, scope: !10730)
!10738 = !DILocation(line: 41, column: 44, scope: !10730)
!10739 = !DILocation(line: 41, column: 2, scope: !10730)
!10740 = !DILocation(line: 42, column: 1, scope: !10730)
!10741 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1340, file: !1340, line: 376, type: !10742, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10744)
!10742 = !DISubroutineType(types: !10743)
!10743 = !{!105, !105, !105}
!10744 = !{!10745, !10746, !10747, !10749, !10750}
!10745 = !DILocalVariable(name: "port", arg: 1, scope: !10741, file: !1340, line: 376, type: !105)
!10746 = !DILocalVariable(name: "pin", arg: 2, scope: !10741, file: !1340, line: 376, type: !105)
!10747 = !DILocalVariable(name: "clk", scope: !10741, file: !1340, line: 386, type: !10748)
!10748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!10749 = !DILocalVariable(name: "pclken", scope: !10741, file: !1340, line: 387, type: !1466)
!10750 = !DILocalVariable(name: "ret", scope: !10741, file: !1340, line: 396, type: !105)
!10751 = !DILocation(line: 0, scope: !10741)
!10752 = !DILocation(line: 387, column: 2, scope: !10741)
!10753 = !DILocation(line: 387, column: 22, scope: !10741)
!10754 = !DILocation(line: 399, column: 8, scope: !10741)
!10755 = !DILocation(line: 400, column: 10, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10741, file: !1340, line: 400, column: 6)
!10757 = !DILocation(line: 400, column: 6, scope: !10741)
!10758 = !DILocation(line: 405, column: 2, scope: !10741)
!10759 = !DILocation(line: 407, column: 2, scope: !10741)
!10760 = !DILocation(line: 408, column: 1, scope: !10741)
!10761 = distinct !DISubprogram(name: "clock_control_on", scope: !979, file: !979, line: 123, type: !1305, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10762)
!10762 = !{!10763, !10764, !10765}
!10763 = !DILocalVariable(name: "dev", arg: 1, scope: !10761, file: !979, line: 123, type: !1200)
!10764 = !DILocalVariable(name: "sys", arg: 2, scope: !10761, file: !979, line: 124, type: !1071)
!10765 = !DILocalVariable(name: "api", scope: !10761, file: !979, line: 126, type: !1298)
!10766 = !DILocation(line: 0, scope: !10761)
!10767 = !DILocation(line: 127, column: 49, scope: !10761)
!10768 = !DILocation(line: 129, column: 14, scope: !10761)
!10769 = !DILocation(line: 129, column: 9, scope: !10761)
!10770 = !DILocation(line: 129, column: 2, scope: !10761)
!10771 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1340, file: !1340, line: 311, type: !9876, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10772)
!10772 = !{!10773, !10774, !10775}
!10773 = !DILocalVariable(name: "port", arg: 1, scope: !10771, file: !1340, line: 311, type: !105)
!10774 = !DILocalVariable(name: "pin", arg: 2, scope: !10771, file: !1340, line: 311, type: !105)
!10775 = !DILocalVariable(name: "line", scope: !10771, file: !1340, line: 313, type: !113)
!10776 = !DILocation(line: 0, scope: !10771)
!10777 = !DILocation(line: 313, column: 18, scope: !10771)
!10778 = !DILocation(line: 337, column: 2, scope: !10771)
!10779 = !DILocation(line: 340, column: 1, scope: !10771)
!10780 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1340, file: !1340, line: 295, type: !10781, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!113, !105}
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "pin", arg: 1, scope: !10780, file: !1340, line: 295, type: !105)
!10785 = !DILocation(line: 0, scope: !10780)
!10786 = !DILocation(line: 307, column: 46, scope: !10780)
!10787 = !DILocation(line: 307, column: 27, scope: !10780)
!10788 = !DILocation(line: 307, column: 32, scope: !10780)
!10789 = !DILocation(line: 307, column: 14, scope: !10780)
!10790 = !DILocation(line: 307, column: 39, scope: !10780)
!10791 = !DILocation(line: 307, column: 2, scope: !10780)
!10792 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7488, file: !7488, line: 671, type: !10793, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10795)
!10793 = !DISubroutineType(types: !10794)
!10794 = !{null, !113, !113}
!10795 = !{!10796, !10797}
!10796 = !DILocalVariable(name: "Port", arg: 1, scope: !10792, file: !7488, line: 671, type: !113)
!10797 = !DILocalVariable(name: "Line", arg: 2, scope: !10792, file: !7488, line: 671, type: !113)
!10798 = !DILocation(line: 0, scope: !10792)
!10799 = !DILocation(line: 673, column: 3, scope: !10792)
!10800 = !DILocalVariable(name: "value", arg: 1, scope: !10801, file: !7785, line: 373, type: !113)
!10801 = distinct !DISubprogram(name: "__RBIT", scope: !7785, file: !7785, line: 373, type: !9066, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10802)
!10802 = !{!10800, !10803}
!10803 = !DILocalVariable(name: "result", scope: !10801, file: !7785, line: 375, type: !113)
!10804 = !DILocation(line: 0, scope: !10801, inlinedAt: !10805)
!10805 = distinct !DILocation(line: 673, column: 3, scope: !10792)
!10806 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !10805)
!10807 = !{i64 3549411}
!10808 = !DILocalVariable(name: "value", arg: 1, scope: !10809, file: !7785, line: 403, type: !113)
!10809 = distinct !DISubprogram(name: "__CLZ", scope: !7785, file: !7785, line: 403, type: !10810, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10812)
!10810 = !DISubroutineType(types: !10811)
!10811 = !{!169, !113}
!10812 = !{!10808}
!10813 = !DILocation(line: 0, scope: !10809, inlinedAt: !10814)
!10814 = distinct !DILocation(line: 673, column: 3, scope: !10792)
!10815 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !10814)
!10816 = !DILocation(line: 674, column: 1, scope: !10792)
!10817 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10562, file: !10562, line: 69, type: !10818, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{null, !10565, !1200, !113}
!10820 = !{!10821, !10822, !10823, !10824, !10825}
!10821 = !DILocalVariable(name: "list", arg: 1, scope: !10817, file: !10562, line: 69, type: !10565)
!10822 = !DILocalVariable(name: "port", arg: 2, scope: !10817, file: !10562, line: 70, type: !1200)
!10823 = !DILocalVariable(name: "pins", arg: 3, scope: !10817, file: !10562, line: 71, type: !113)
!10824 = !DILocalVariable(name: "cb", scope: !10817, file: !10562, line: 73, type: !1242)
!10825 = !DILocalVariable(name: "tmp", scope: !10817, file: !10562, line: 73, type: !1242)
!10826 = !DILocation(line: 0, scope: !10817)
!10827 = !DILocation(line: 75, column: 2, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10817, file: !10562, line: 75, column: 2)
!10829 = !DILocation(line: 0, scope: !10828)
!10830 = !DILocation(line: 76, column: 11, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !10562, line: 76, column: 7)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !10562, line: 75, column: 57)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !10562, line: 75, column: 2)
!10834 = !DILocation(line: 76, column: 20, scope: !10831)
!10835 = !DILocation(line: 76, column: 7, scope: !10832)
!10836 = !DILocation(line: 77, column: 4, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !10562, line: 77, column: 4)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !10562, line: 77, column: 4)
!10839 = distinct !DILexicalBlock(scope: !10831, file: !10562, line: 76, column: 28)
!10840 = !DILocation(line: 77, column: 4, scope: !10838)
!10841 = !DILocation(line: 77, column: 4, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10837, file: !10562, line: 77, column: 4)
!10843 = !DILocation(line: 78, column: 4, scope: !10839)
!10844 = !DILocation(line: 79, column: 3, scope: !10839)
!10845 = !DILocation(line: 75, column: 2, scope: !10833)
!10846 = !DILocation(line: 81, column: 1, scope: !10817)
!10847 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7488, file: !7488, line: 710, type: !9066, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10848)
!10848 = !{!10849}
!10849 = !DILocalVariable(name: "Line", arg: 1, scope: !10847, file: !7488, line: 710, type: !113)
!10850 = !DILocation(line: 0, scope: !10847)
!10851 = !DILocation(line: 712, column: 21, scope: !10847)
!10852 = !DILocation(line: 0, scope: !10801, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 712, column: 76, scope: !10847)
!10854 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !10853)
!10855 = !DILocation(line: 0, scope: !10809, inlinedAt: !10856)
!10856 = distinct !DILocation(line: 712, column: 76, scope: !10847)
!10857 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !10856)
!10858 = !DILocation(line: 712, column: 73, scope: !10847)
!10859 = !DILocation(line: 712, column: 3, scope: !10847)
!10860 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10861, file: !10861, line: 910, type: !10862, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10864)
!10861 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10862 = !DISubroutineType(types: !10863)
!10863 = !{null, !1273, !113}
!10864 = !{!10865, !10866}
!10865 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10860, file: !10861, line: 910, type: !1273)
!10866 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10860, file: !10861, line: 910, type: !113)
!10867 = !DILocation(line: 0, scope: !10860)
!10868 = !DILocation(line: 912, column: 3, scope: !10860)
!10869 = !DILocation(line: 913, column: 1, scope: !10860)
!10870 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10861, file: !10861, line: 823, type: !10871, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10873)
!10871 = !DISubroutineType(types: !10872)
!10872 = !{!113, !1273}
!10873 = !{!10874}
!10874 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10870, file: !10861, line: 823, type: !1273)
!10875 = !DILocation(line: 0, scope: !10870)
!10876 = !DILocation(line: 825, column: 21, scope: !10870)
!10877 = !DILocation(line: 825, column: 3, scope: !10870)
!10878 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10861, file: !10861, line: 812, type: !10862, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10879)
!10879 = !{!10880, !10881}
!10880 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10878, file: !10861, line: 812, type: !1273)
!10881 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10878, file: !10861, line: 812, type: !113)
!10882 = !DILocation(line: 0, scope: !10878)
!10883 = !DILocation(line: 814, column: 3, scope: !10878)
!10884 = !DILocation(line: 815, column: 1, scope: !10878)
!10885 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10861, file: !10861, line: 771, type: !10871, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10886)
!10886 = !{!10887}
!10887 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10885, file: !10861, line: 771, type: !1273)
!10888 = !DILocation(line: 0, scope: !10885)
!10889 = !DILocation(line: 773, column: 21, scope: !10885)
!10890 = !DILocation(line: 773, column: 3, scope: !10885)
!10891 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1340, file: !1340, line: 47, type: !10892, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10894)
!10892 = !DISubroutineType(types: !10893)
!10893 = !{!105, !1216, !428}
!10894 = !{!10895, !10896}
!10895 = !DILocalVariable(name: "flags", arg: 1, scope: !10891, file: !1340, line: 47, type: !1216)
!10896 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10891, file: !1340, line: 47, type: !428)
!10897 = !DILocation(line: 0, scope: !10891)
!10898 = !DILocation(line: 50, column: 13, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10891, file: !1340, line: 50, column: 6)
!10900 = !DILocation(line: 50, column: 28, scope: !10899)
!10901 = !DILocation(line: 50, column: 6, scope: !10891)
!10902 = !DILocation(line: 53, column: 11, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10899, file: !1340, line: 50, column: 34)
!10904 = !DILocation(line: 55, column: 14, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10903, file: !1340, line: 55, column: 7)
!10906 = !DILocation(line: 55, column: 35, scope: !10905)
!10907 = !DILocation(line: 55, column: 7, scope: !10903)
!10908 = !DILocation(line: 56, column: 14, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !1340, line: 56, column: 8)
!10910 = distinct !DILexicalBlock(scope: !10905, file: !1340, line: 55, column: 41)
!10911 = !DILocation(line: 56, column: 8, scope: !10910)
!10912 = !DILocation(line: 0, scope: !10905)
!10913 = !DILocation(line: 66, column: 14, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10903, file: !1340, line: 66, column: 7)
!10915 = !DILocation(line: 66, column: 30, scope: !10914)
!10916 = !DILocation(line: 66, column: 7, scope: !10903)
!10917 = !DILocation(line: 67, column: 12, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10914, file: !1340, line: 66, column: 36)
!10919 = !DILocation(line: 68, column: 3, scope: !10918)
!10920 = !DILocation(line: 68, column: 21, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10914, file: !1340, line: 68, column: 14)
!10922 = !DILocation(line: 68, column: 39, scope: !10921)
!10923 = !DILocation(line: 68, column: 14, scope: !10914)
!10924 = !DILocation(line: 69, column: 12, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10921, file: !1340, line: 68, column: 45)
!10926 = !DILocation(line: 70, column: 3, scope: !10925)
!10927 = !DILocation(line: 72, column: 21, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10899, file: !1340, line: 72, column: 14)
!10929 = !DILocation(line: 72, column: 35, scope: !10928)
!10930 = !DILocation(line: 72, column: 14, scope: !10899)
!10931 = !DILocation(line: 77, column: 14, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !1340, line: 77, column: 7)
!10933 = distinct !DILexicalBlock(scope: !10928, file: !1340, line: 72, column: 41)
!10934 = !DILocation(line: 77, column: 30, scope: !10932)
!10935 = !DILocation(line: 77, column: 7, scope: !10933)
!10936 = !DILocation(line: 0, scope: !10899)
!10937 = !DILocation(line: 90, column: 1, scope: !10891)
!10938 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1340, file: !1340, line: 157, type: !10939, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10941)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{null, !1200, !105, !105, !105}
!10941 = !{!10942, !10943, !10944, !10945, !10946, !10947, !10948, !10949, !10950, !10951, !10952}
!10942 = !DILocalVariable(name: "dev", arg: 1, scope: !10938, file: !1340, line: 157, type: !1200)
!10943 = !DILocalVariable(name: "pin", arg: 2, scope: !10938, file: !1340, line: 157, type: !105)
!10944 = !DILocalVariable(name: "conf", arg: 3, scope: !10938, file: !1340, line: 158, type: !105)
!10945 = !DILocalVariable(name: "func", arg: 4, scope: !10938, file: !1340, line: 158, type: !105)
!10946 = !DILocalVariable(name: "cfg", scope: !10938, file: !1340, line: 160, type: !10446)
!10947 = !DILocalVariable(name: "gpio", scope: !10938, file: !1340, line: 161, type: !1273)
!10948 = !DILocalVariable(name: "pin_ll", scope: !10938, file: !1340, line: 163, type: !105)
!10949 = !DILocalVariable(name: "mode", scope: !10938, file: !1340, line: 227, type: !32)
!10950 = !DILocalVariable(name: "otype", scope: !10938, file: !1340, line: 227, type: !32)
!10951 = !DILocalVariable(name: "ospeed", scope: !10938, file: !1340, line: 227, type: !32)
!10952 = !DILocalVariable(name: "pupd", scope: !10938, file: !1340, line: 227, type: !32)
!10953 = !DILocation(line: 0, scope: !10938)
!10954 = !DILocation(line: 160, column: 45, scope: !10938)
!10955 = !DILocation(line: 161, column: 44, scope: !10938)
!10956 = !DILocation(line: 163, column: 15, scope: !10938)
!10957 = !DILocation(line: 229, column: 14, scope: !10938)
!10958 = !DILocation(line: 246, column: 47, scope: !10938)
!10959 = !DILocation(line: 246, column: 2, scope: !10938)
!10960 = !DILocation(line: 248, column: 43, scope: !10938)
!10961 = !DILocation(line: 248, column: 2, scope: !10938)
!10962 = !DILocation(line: 250, column: 40, scope: !10938)
!10963 = !DILocation(line: 250, column: 2, scope: !10938)
!10964 = !DILocation(line: 252, column: 11, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10938, file: !1340, line: 252, column: 6)
!10966 = !DILocation(line: 252, column: 6, scope: !10938)
!10967 = !DILocation(line: 253, column: 11, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !1340, line: 253, column: 7)
!10969 = distinct !DILexicalBlock(scope: !10965, file: !1340, line: 252, column: 36)
!10970 = !DILocation(line: 253, column: 7, scope: !10969)
!10971 = !DILocation(line: 254, column: 4, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10968, file: !1340, line: 253, column: 16)
!10973 = !DILocation(line: 255, column: 3, scope: !10972)
!10974 = !DILocation(line: 256, column: 4, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !1340, line: 255, column: 10)
!10976 = !DILocation(line: 260, column: 40, scope: !10938)
!10977 = !DILocation(line: 260, column: 2, scope: !10938)
!10978 = !DILocation(line: 265, column: 1, scope: !10938)
!10979 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1340, file: !1340, line: 137, type: !10781, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10980)
!10980 = !{!10981, !10982}
!10981 = !DILocalVariable(name: "pin", arg: 1, scope: !10979, file: !1340, line: 137, type: !105)
!10982 = !DILocalVariable(name: "pinval", scope: !10979, file: !1340, line: 139, type: !113)
!10983 = !DILocation(line: 0, scope: !10979)
!10984 = !DILocation(line: 149, column: 13, scope: !10979)
!10985 = !DILocation(line: 151, column: 2, scope: !10979)
!10986 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10861, file: !10861, line: 342, type: !10987, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10989)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{null, !1273, !113, !113}
!10989 = !{!10990, !10991, !10992}
!10990 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10986, file: !10861, line: 342, type: !1273)
!10991 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10986, file: !10861, line: 342, type: !113)
!10992 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10986, file: !10861, line: 342, type: !113)
!10993 = !DILocation(line: 0, scope: !10986)
!10994 = !DILocation(line: 344, column: 3, scope: !10986)
!10995 = !DILocation(line: 345, column: 1, scope: !10986)
!10996 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10861, file: !10861, line: 413, type: !10987, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10997)
!10997 = !{!10998, !10999, !11000}
!10998 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10996, file: !10861, line: 413, type: !1273)
!10999 = !DILocalVariable(name: "Pin", arg: 2, scope: !10996, file: !10861, line: 413, type: !113)
!11000 = !DILocalVariable(name: "Speed", arg: 3, scope: !10996, file: !10861, line: 413, type: !113)
!11001 = !DILocation(line: 0, scope: !10996)
!11002 = !DILocation(line: 415, column: 3, scope: !10996)
!11003 = !DILocation(line: 0, scope: !10801, inlinedAt: !11004)
!11004 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11005 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11004)
!11006 = !DILocation(line: 0, scope: !10809, inlinedAt: !11007)
!11007 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11008 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11007)
!11009 = !DILocation(line: 0, scope: !10801, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11011 = !DILocation(line: 0, scope: !10809, inlinedAt: !11012)
!11012 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11013 = !DILocation(line: 417, column: 1, scope: !10996)
!11014 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10861, file: !10861, line: 484, type: !10987, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11014, file: !10861, line: 484, type: !1273)
!11017 = !DILocalVariable(name: "Pin", arg: 2, scope: !11014, file: !10861, line: 484, type: !113)
!11018 = !DILocalVariable(name: "Pull", arg: 3, scope: !11014, file: !10861, line: 484, type: !113)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 486, column: 3, scope: !11014)
!11021 = !DILocation(line: 0, scope: !10801, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11023 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11022)
!11024 = !DILocation(line: 0, scope: !10809, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11026 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11025)
!11027 = !DILocation(line: 0, scope: !10801, inlinedAt: !11028)
!11028 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11029 = !DILocation(line: 0, scope: !10809, inlinedAt: !11030)
!11030 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11031 = !DILocation(line: 487, column: 1, scope: !11014)
!11032 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10861, file: !10861, line: 556, type: !10987, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11033)
!11033 = !{!11034, !11035, !11036}
!11034 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11032, file: !10861, line: 556, type: !1273)
!11035 = !DILocalVariable(name: "Pin", arg: 2, scope: !11032, file: !10861, line: 556, type: !113)
!11036 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11032, file: !10861, line: 556, type: !113)
!11037 = !DILocation(line: 0, scope: !11032)
!11038 = !DILocation(line: 558, column: 3, scope: !11032)
!11039 = !DILocation(line: 0, scope: !10801, inlinedAt: !11040)
!11040 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11041 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11040)
!11042 = !DILocation(line: 0, scope: !10809, inlinedAt: !11043)
!11043 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11044 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11043)
!11045 = !DILocation(line: 0, scope: !10801, inlinedAt: !11046)
!11046 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11047 = !DILocation(line: 0, scope: !10809, inlinedAt: !11048)
!11048 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11049 = !DILocation(line: 560, column: 1, scope: !11032)
!11050 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10861, file: !10861, line: 633, type: !10987, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11051)
!11051 = !{!11052, !11053, !11054}
!11052 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11050, file: !10861, line: 633, type: !1273)
!11053 = !DILocalVariable(name: "Pin", arg: 2, scope: !11050, file: !10861, line: 633, type: !113)
!11054 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11050, file: !10861, line: 633, type: !113)
!11055 = !DILocation(line: 0, scope: !11050)
!11056 = !DILocation(line: 635, column: 3, scope: !11050)
!11057 = !DILocation(line: 0, scope: !10801, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11059 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11058)
!11060 = !DILocation(line: 0, scope: !10809, inlinedAt: !11061)
!11061 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11062 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11061)
!11063 = !DILocation(line: 0, scope: !10801, inlinedAt: !11064)
!11064 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11065 = !DILocation(line: 0, scope: !10809, inlinedAt: !11066)
!11066 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11067 = !DILocation(line: 637, column: 1, scope: !11050)
!11068 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10861, file: !10861, line: 273, type: !10987, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11069)
!11069 = !{!11070, !11071, !11072}
!11070 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11068, file: !10861, line: 273, type: !1273)
!11071 = !DILocalVariable(name: "Pin", arg: 2, scope: !11068, file: !10861, line: 273, type: !113)
!11072 = !DILocalVariable(name: "Mode", arg: 3, scope: !11068, file: !10861, line: 273, type: !113)
!11073 = !DILocation(line: 0, scope: !11068)
!11074 = !DILocation(line: 275, column: 3, scope: !11068)
!11075 = !DILocation(line: 0, scope: !10801, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11077 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11076)
!11078 = !DILocation(line: 0, scope: !10809, inlinedAt: !11079)
!11079 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11080 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11079)
!11081 = !DILocation(line: 0, scope: !10801, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11083 = !DILocation(line: 0, scope: !10809, inlinedAt: !11084)
!11084 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11085 = !DILocation(line: 276, column: 1, scope: !11068)
!11086 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1340, file: !1340, line: 698, type: !1353, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11087)
!11087 = !{!11088, !11089, !11090}
!11088 = !DILocalVariable(name: "dev", arg: 1, scope: !11086, file: !1340, line: 698, type: !1200)
!11089 = !DILocalVariable(name: "data", scope: !11086, file: !1340, line: 700, type: !10513)
!11090 = !DILocalVariable(name: "ret", scope: !11086, file: !1340, line: 701, type: !105)
!11091 = !DILocation(line: 0, scope: !11086)
!11092 = !DILocation(line: 700, column: 38, scope: !11086)
!11093 = !DILocation(line: 703, column: 8, scope: !11086)
!11094 = !DILocation(line: 703, column: 12, scope: !11086)
!11095 = !DILocation(line: 705, column: 7, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11086, file: !1340, line: 705, column: 6)
!11097 = !DILocation(line: 705, column: 6, scope: !11086)
!11098 = !DILocation(line: 722, column: 8, scope: !11086)
!11099 = !DILocation(line: 723, column: 10, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11086, file: !1340, line: 723, column: 6)
!11101 = !DILocation(line: 723, column: 6, scope: !11086)
!11102 = !DILocation(line: 731, column: 1, scope: !11086)
!11103 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !11104, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11106)
!11104 = !DISubroutineType(types: !11105)
!11105 = !{!492, !1200}
!11106 = !{!11107}
!11107 = !DILocalVariable(name: "dev", arg: 1, scope: !11103, file: !10291, line: 47, type: !1200)
!11108 = !DILocation(line: 0, scope: !11103)
!11109 = !DILocation(line: 55, column: 2, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11103, file: !10291, line: 55, column: 2)
!11111 = !{i64 2155045963}
!11112 = !DILocation(line: 56, column: 9, scope: !11103)
!11113 = !DILocation(line: 56, column: 2, scope: !11103)
!11114 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1340, file: !1340, line: 270, type: !11115, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11117)
!11115 = !DISubroutineType(types: !11116)
!11116 = !{!105, !1200, !492}
!11117 = !{!11118, !11119, !11120, !11121, !11122}
!11118 = !DILocalVariable(name: "dev", arg: 1, scope: !11114, file: !1340, line: 270, type: !1200)
!11119 = !DILocalVariable(name: "on", arg: 2, scope: !11114, file: !1340, line: 270, type: !492)
!11120 = !DILocalVariable(name: "cfg", scope: !11114, file: !1340, line: 272, type: !10446)
!11121 = !DILocalVariable(name: "ret", scope: !11114, file: !1340, line: 273, type: !105)
!11122 = !DILocalVariable(name: "clk", scope: !11114, file: !1340, line: 278, type: !10748)
!11123 = !DILocation(line: 0, scope: !11114)
!11124 = !DILocation(line: 272, column: 45, scope: !11114)
!11125 = !DILocation(line: 282, column: 38, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !1340, line: 280, column: 10)
!11127 = distinct !DILexicalBlock(scope: !11114, file: !1340, line: 280, column: 6)
!11128 = !DILocation(line: 282, column: 6, scope: !11126)
!11129 = !DILocation(line: 281, column: 9, scope: !11126)
!11130 = !DILocation(line: 293, column: 1, scope: !11114)
!11131 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11104, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11132)
!11132 = !{!11133}
!11133 = !DILocalVariable(name: "dev", arg: 1, scope: !11131, file: !481, line: 730, type: !1200)
!11134 = !DILocation(line: 0, scope: !11131)
!11135 = !DILocation(line: 732, column: 9, scope: !11131)
!11136 = !DILocation(line: 732, column: 2, scope: !11131)
!11137 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1340, file: !1340, line: 496, type: !11138, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11140)
!11138 = !DISubroutineType(types: !11139)
!11139 = !{!105, !1200, !105, !105, !105}
!11140 = !{!11141, !11142, !11143, !11144, !11145, !11146}
!11141 = !DILocalVariable(name: "dev", arg: 1, scope: !11137, file: !1340, line: 496, type: !1200)
!11142 = !DILocalVariable(name: "pin", arg: 2, scope: !11137, file: !1340, line: 496, type: !105)
!11143 = !DILocalVariable(name: "conf", arg: 3, scope: !11137, file: !1340, line: 496, type: !105)
!11144 = !DILocalVariable(name: "func", arg: 4, scope: !11137, file: !1340, line: 496, type: !105)
!11145 = !DILocalVariable(name: "ret", scope: !11137, file: !1340, line: 498, type: !105)
!11146 = !DILocalVariable(name: "gpio_out", scope: !11147, file: !1340, line: 508, type: !113)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !1340, line: 507, column: 27)
!11148 = distinct !DILexicalBlock(scope: !11137, file: !1340, line: 507, column: 6)
!11149 = !DILocation(line: 0, scope: !11137)
!11150 = !DILocation(line: 505, column: 2, scope: !11137)
!11151 = !DILocation(line: 507, column: 11, scope: !11148)
!11152 = !DILocation(line: 507, column: 6, scope: !11137)
!11153 = !DILocation(line: 508, column: 28, scope: !11147)
!11154 = !DILocation(line: 0, scope: !11147)
!11155 = !DILocation(line: 510, column: 16, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11147, file: !1340, line: 510, column: 7)
!11157 = !DILocation(line: 0, scope: !11156)
!11158 = !DILocation(line: 510, column: 7, scope: !11147)
!11159 = !DILocation(line: 511, column: 4, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11156, file: !1340, line: 510, column: 32)
!11161 = !DILocation(line: 512, column: 3, scope: !11160)
!11162 = !DILocation(line: 513, column: 4, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1340, line: 512, column: 39)
!11164 = distinct !DILexicalBlock(scope: !11156, file: !1340, line: 512, column: 14)
!11165 = !DILocation(line: 514, column: 3, scope: !11163)
!11166 = !DILocation(line: 518, column: 1, scope: !11137)
!11167 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1625, file: !1625, line: 526, type: !1528, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11168)
!11168 = !{!11169, !11170, !11171}
!11169 = !DILocalVariable(name: "dev", arg: 1, scope: !11167, file: !1625, line: 526, type: !1530)
!11170 = !DILocalVariable(name: "c", arg: 2, scope: !11167, file: !1625, line: 526, type: !1132)
!11171 = !DILocalVariable(name: "config", scope: !11167, file: !1625, line: 528, type: !11172)
!11172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!11173 = !DILocation(line: 0, scope: !11167)
!11174 = !DILocation(line: 528, column: 48, scope: !11167)
!11175 = !DILocation(line: 531, column: 40, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11167, file: !1625, line: 531, column: 6)
!11177 = !DILocation(line: 531, column: 6, scope: !11176)
!11178 = !DILocation(line: 531, column: 6, scope: !11167)
!11179 = !DILocation(line: 532, column: 34, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11176, file: !1625, line: 531, column: 48)
!11181 = !DILocation(line: 532, column: 3, scope: !11180)
!11182 = !DILocation(line: 533, column: 2, scope: !11180)
!11183 = !DILocation(line: 539, column: 42, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11167, file: !1625, line: 539, column: 6)
!11185 = !DILocation(line: 539, column: 7, scope: !11184)
!11186 = !DILocation(line: 539, column: 6, scope: !11167)
!11187 = !DILocation(line: 543, column: 52, scope: !11167)
!11188 = !DILocation(line: 543, column: 22, scope: !11167)
!11189 = !DILocation(line: 543, column: 5, scope: !11167)
!11190 = !DILocation(line: 545, column: 2, scope: !11167)
!11191 = !DILocation(line: 546, column: 1, scope: !11167)
!11192 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1625, file: !1625, line: 548, type: !1547, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11193)
!11193 = !{!11194, !11195, !11196, !11197}
!11194 = !DILocalVariable(name: "dev", arg: 1, scope: !11192, file: !1625, line: 548, type: !1530)
!11195 = !DILocalVariable(name: "c", arg: 2, scope: !11192, file: !1625, line: 549, type: !170)
!11196 = !DILocalVariable(name: "config", scope: !11192, file: !1625, line: 551, type: !11172)
!11197 = !DILocalVariable(name: "key", scope: !11192, file: !1625, line: 555, type: !32)
!11198 = !DILocation(line: 0, scope: !11192)
!11199 = !DILocation(line: 551, column: 48, scope: !11192)
!11200 = !DILocation(line: 562, column: 2, scope: !11192)
!11201 = !DILocation(line: 563, column: 41, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !1625, line: 563, column: 7)
!11203 = distinct !DILexicalBlock(scope: !11192, file: !1625, line: 562, column: 12)
!11204 = !DILocation(line: 563, column: 7, scope: !11202)
!11205 = !DILocation(line: 563, column: 7, scope: !11203)
!11206 = !DILocation(line: 55, column: 2, scope: !11207, inlinedAt: !11211)
!11207 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "key", scope: !11207, file: !7467, line: 44, type: !32)
!11210 = !DILocalVariable(name: "tmp", scope: !11207, file: !7467, line: 53, type: !32)
!11211 = distinct !DILocation(line: 564, column: 10, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11202, file: !1625, line: 563, column: 49)
!11213 = !{i64 2275082}
!11214 = !DILocation(line: 0, scope: !11207, inlinedAt: !11211)
!11215 = !DILocation(line: 565, column: 42, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11212, file: !1625, line: 565, column: 8)
!11217 = !DILocation(line: 565, column: 8, scope: !11216)
!11218 = !DILocation(line: 565, column: 8, scope: !11212)
!11219 = !DILocalVariable(name: "key", arg: 1, scope: !11220, file: !7467, line: 84, type: !32)
!11220 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11221)
!11221 = !{!11219}
!11222 = !DILocation(line: 0, scope: !11220, inlinedAt: !11223)
!11223 = distinct !DILocation(line: 568, column: 4, scope: !11212)
!11224 = !DILocation(line: 95, column: 2, scope: !11220, inlinedAt: !11223)
!11225 = !{i64 2275899}
!11226 = !DILocation(line: 569, column: 3, scope: !11212)
!11227 = distinct !{!11227, !11200, !11228}
!11228 = !DILocation(line: 570, column: 2, scope: !11192)
!11229 = !DILocation(line: 592, column: 33, scope: !11192)
!11230 = !DILocation(line: 592, column: 2, scope: !11192)
!11231 = !DILocation(line: 0, scope: !11220, inlinedAt: !11232)
!11232 = distinct !DILocation(line: 593, column: 2, scope: !11192)
!11233 = !DILocation(line: 95, column: 2, scope: !11220, inlinedAt: !11232)
!11234 = !DILocation(line: 594, column: 1, scope: !11192)
!11235 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1625, file: !1625, line: 596, type: !1551, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11236)
!11236 = !{!11237, !11238, !11239}
!11237 = !DILocalVariable(name: "dev", arg: 1, scope: !11235, file: !1625, line: 596, type: !1530)
!11238 = !DILocalVariable(name: "config", scope: !11235, file: !1625, line: 598, type: !11172)
!11239 = !DILocalVariable(name: "err", scope: !11235, file: !1625, line: 599, type: !113)
!11240 = !DILocation(line: 0, scope: !11235)
!11241 = !DILocation(line: 598, column: 48, scope: !11235)
!11242 = !DILocation(line: 606, column: 40, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 606, column: 6)
!11244 = !DILocation(line: 606, column: 6, scope: !11243)
!11245 = !DILocation(line: 606, column: 6, scope: !11235)
!11246 = !DILocation(line: 610, column: 39, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 610, column: 6)
!11248 = !DILocation(line: 610, column: 6, scope: !11247)
!11249 = !DILocation(line: 610, column: 6, scope: !11235)
!11250 = !DILocation(line: 614, column: 39, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 614, column: 6)
!11252 = !DILocation(line: 614, column: 6, scope: !11251)
!11253 = !DILocation(line: 614, column: 6, scope: !11235)
!11254 = !DILocation(line: 619, column: 40, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 619, column: 6)
!11256 = !DILocation(line: 619, column: 6, scope: !11255)
!11257 = !DILocation(line: 619, column: 6, scope: !11235)
!11258 = !DILocation(line: 623, column: 10, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 623, column: 6)
!11260 = !DILocation(line: 623, column: 6, scope: !11235)
!11261 = !DILocation(line: 624, column: 34, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11259, file: !1625, line: 623, column: 24)
!11263 = !DILocation(line: 624, column: 3, scope: !11262)
!11264 = !DILocation(line: 625, column: 2, scope: !11262)
!11265 = !DILocation(line: 632, column: 10, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 632, column: 6)
!11267 = !DILocation(line: 632, column: 6, scope: !11235)
!11268 = !DILocation(line: 633, column: 34, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11266, file: !1625, line: 632, column: 32)
!11270 = !DILocation(line: 633, column: 3, scope: !11269)
!11271 = !DILocation(line: 634, column: 2, scope: !11269)
!11272 = !DILocation(line: 636, column: 10, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 636, column: 6)
!11274 = !DILocation(line: 636, column: 6, scope: !11235)
!11275 = !DILocation(line: 637, column: 33, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11273, file: !1625, line: 636, column: 31)
!11277 = !DILocation(line: 637, column: 3, scope: !11276)
!11278 = !DILocation(line: 638, column: 2, scope: !11276)
!11279 = !DILocation(line: 640, column: 10, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11235, file: !1625, line: 640, column: 6)
!11281 = !DILocation(line: 640, column: 6, scope: !11235)
!11282 = !DILocation(line: 641, column: 33, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11280, file: !1625, line: 640, column: 32)
!11284 = !DILocation(line: 641, column: 3, scope: !11283)
!11285 = !DILocation(line: 642, column: 2, scope: !11283)
!11286 = !DILocation(line: 646, column: 32, scope: !11235)
!11287 = !DILocation(line: 646, column: 2, scope: !11235)
!11288 = !DILocation(line: 648, column: 2, scope: !11235)
!11289 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1625, file: !1625, line: 419, type: !1555, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11290)
!11290 = !{!11291, !11292, !11293, !11294, !11296, !11297, !11298, !11299}
!11291 = !DILocalVariable(name: "dev", arg: 1, scope: !11289, file: !1625, line: 419, type: !1530)
!11292 = !DILocalVariable(name: "cfg", arg: 2, scope: !11289, file: !1625, line: 420, type: !1557)
!11293 = !DILocalVariable(name: "config", scope: !11289, file: !1625, line: 422, type: !11172)
!11294 = !DILocalVariable(name: "data", scope: !11289, file: !1625, line: 423, type: !11295)
!11295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!11296 = !DILocalVariable(name: "parity", scope: !11289, file: !1625, line: 424, type: !3744)
!11297 = !DILocalVariable(name: "stopbits", scope: !11289, file: !1625, line: 425, type: !3744)
!11298 = !DILocalVariable(name: "databits", scope: !11289, file: !1625, line: 426, type: !3744)
!11299 = !DILocalVariable(name: "flowctrl", scope: !11289, file: !1625, line: 428, type: !3744)
!11300 = !DILocation(line: 0, scope: !11289)
!11301 = !DILocation(line: 422, column: 48, scope: !11289)
!11302 = !DILocation(line: 423, column: 38, scope: !11289)
!11303 = !DILocation(line: 424, column: 56, scope: !11289)
!11304 = !DILocation(line: 424, column: 51, scope: !11289)
!11305 = !DILocation(line: 424, column: 26, scope: !11289)
!11306 = !DILocation(line: 425, column: 60, scope: !11289)
!11307 = !DILocation(line: 425, column: 55, scope: !11289)
!11308 = !DILocation(line: 425, column: 28, scope: !11289)
!11309 = !DILocation(line: 426, column: 60, scope: !11289)
!11310 = !DILocation(line: 426, column: 55, scope: !11289)
!11311 = !DILocation(line: 426, column: 28, scope: !11289)
!11312 = !DILocation(line: 428, column: 58, scope: !11289)
!11313 = !DILocation(line: 428, column: 53, scope: !11289)
!11314 = !DILocation(line: 428, column: 28, scope: !11289)
!11315 = !DILocation(line: 431, column: 44, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 431, column: 6)
!11317 = !DILocation(line: 438, column: 22, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 437, column: 6)
!11319 = !DILocation(line: 437, column: 6, scope: !11289)
!11320 = !DILocation(line: 448, column: 6, scope: !11289)
!11321 = !DILocation(line: 465, column: 47, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 465, column: 6)
!11323 = !DILocation(line: 475, column: 21, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 475, column: 6)
!11325 = !DILocation(line: 475, column: 6, scope: !11289)
!11326 = !DILocation(line: 476, column: 8, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !1625, line: 476, column: 7)
!11328 = distinct !DILexicalBlock(scope: !11324, file: !1625, line: 475, column: 49)
!11329 = !DILocation(line: 477, column: 34, scope: !11327)
!11330 = !DILocation(line: 476, column: 7, scope: !11328)
!11331 = !DILocation(line: 482, column: 27, scope: !11289)
!11332 = !DILocation(line: 482, column: 2, scope: !11289)
!11333 = !DILocation(line: 484, column: 16, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 484, column: 6)
!11335 = !DILocation(line: 484, column: 13, scope: !11334)
!11336 = !DILocation(line: 484, column: 6, scope: !11289)
!11337 = !DILocation(line: 485, column: 3, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !1625, line: 484, column: 44)
!11339 = !DILocation(line: 486, column: 2, scope: !11338)
!11340 = !DILocation(line: 488, column: 18, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 488, column: 6)
!11342 = !DILocation(line: 488, column: 15, scope: !11341)
!11343 = !DILocation(line: 488, column: 6, scope: !11289)
!11344 = !DILocation(line: 489, column: 3, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11341, file: !1625, line: 488, column: 48)
!11346 = !DILocation(line: 490, column: 2, scope: !11345)
!11347 = !DILocation(line: 492, column: 18, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 492, column: 6)
!11349 = !DILocation(line: 492, column: 15, scope: !11348)
!11350 = !DILocation(line: 492, column: 6, scope: !11289)
!11351 = !DILocation(line: 493, column: 3, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11348, file: !1625, line: 492, column: 48)
!11353 = !DILocation(line: 494, column: 2, scope: !11352)
!11354 = !DILocation(line: 496, column: 18, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 496, column: 6)
!11356 = !DILocation(line: 496, column: 15, scope: !11355)
!11357 = !DILocation(line: 496, column: 6, scope: !11289)
!11358 = !DILocation(line: 497, column: 3, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11355, file: !1625, line: 496, column: 46)
!11360 = !DILocation(line: 498, column: 2, scope: !11359)
!11361 = !DILocation(line: 500, column: 11, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11289, file: !1625, line: 500, column: 6)
!11363 = !DILocation(line: 500, column: 29, scope: !11362)
!11364 = !DILocation(line: 500, column: 20, scope: !11362)
!11365 = !DILocation(line: 500, column: 6, scope: !11289)
!11366 = !DILocation(line: 501, column: 3, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11362, file: !1625, line: 500, column: 40)
!11368 = !DILocation(line: 502, column: 26, scope: !11367)
!11369 = !DILocation(line: 502, column: 19, scope: !11367)
!11370 = !DILocation(line: 503, column: 2, scope: !11367)
!11371 = !DILocation(line: 505, column: 26, scope: !11289)
!11372 = !DILocation(line: 505, column: 2, scope: !11289)
!11373 = !DILocation(line: 506, column: 2, scope: !11289)
!11374 = !DILocation(line: 507, column: 1, scope: !11289)
!11375 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1625, file: !1625, line: 509, type: !1568, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11376)
!11376 = !{!11377, !11378, !11379}
!11377 = !DILocalVariable(name: "dev", arg: 1, scope: !11375, file: !1625, line: 509, type: !1530)
!11378 = !DILocalVariable(name: "cfg", arg: 2, scope: !11375, file: !1625, line: 510, type: !1570)
!11379 = !DILocalVariable(name: "data", scope: !11375, file: !1625, line: 512, type: !11295)
!11380 = !DILocation(line: 0, scope: !11375)
!11381 = !DILocation(line: 512, column: 38, scope: !11375)
!11382 = !DILocation(line: 514, column: 24, scope: !11375)
!11383 = !DILocation(line: 514, column: 7, scope: !11375)
!11384 = !DILocation(line: 514, column: 16, scope: !11375)
!11385 = !DILocation(line: 515, column: 41, scope: !11375)
!11386 = !{i32 0, i32 1537}
!11387 = !DILocation(line: 515, column: 16, scope: !11375)
!11388 = !DILocation(line: 515, column: 7, scope: !11375)
!11389 = !DILocation(line: 515, column: 14, scope: !11375)
!11390 = !DILocation(line: 517, column: 3, scope: !11375)
!11391 = !{i32 0, i32 12289}
!11392 = !DILocation(line: 516, column: 19, scope: !11375)
!11393 = !DILocation(line: 516, column: 7, scope: !11375)
!11394 = !DILocation(line: 516, column: 17, scope: !11375)
!11395 = !DILocation(line: 519, column: 3, scope: !11375)
!11396 = !DILocation(line: 519, column: 33, scope: !11375)
!11397 = !DILocation(line: 518, column: 19, scope: !11375)
!11398 = !DILocation(line: 518, column: 7, scope: !11375)
!11399 = !DILocation(line: 518, column: 17, scope: !11375)
!11400 = !DILocation(line: 521, column: 3, scope: !11375)
!11401 = !{i32 0, i32 769}
!11402 = !DILocation(line: 520, column: 19, scope: !11375)
!11403 = !DILocation(line: 520, column: 7, scope: !11375)
!11404 = !DILocation(line: 520, column: 17, scope: !11375)
!11405 = !DILocation(line: 522, column: 2, scope: !11375)
!11406 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1625, file: !1625, line: 205, type: !11407, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!113, !1530}
!11409 = !{!11410, !11411}
!11410 = !DILocalVariable(name: "dev", arg: 1, scope: !11406, file: !1625, line: 205, type: !1530)
!11411 = !DILocalVariable(name: "config", scope: !11406, file: !1625, line: 207, type: !11172)
!11412 = !DILocation(line: 0, scope: !11406)
!11413 = !DILocation(line: 207, column: 48, scope: !11406)
!11414 = !DILocation(line: 209, column: 36, scope: !11406)
!11415 = !DILocation(line: 209, column: 9, scope: !11406)
!11416 = !DILocation(line: 209, column: 2, scope: !11406)
!11417 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1625, file: !1625, line: 270, type: !11418, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11420)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{!1496, !113}
!11420 = !{!11421}
!11421 = !DILocalVariable(name: "parity", arg: 1, scope: !11417, file: !1625, line: 270, type: !113)
!11422 = !DILocation(line: 0, scope: !11417)
!11423 = !DILocation(line: 272, column: 2, scope: !11417)
!11424 = !DILocation(line: 281, column: 1, scope: !11417)
!11425 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1625, file: !1625, line: 220, type: !11407, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11426)
!11426 = !{!11427, !11428}
!11427 = !DILocalVariable(name: "dev", arg: 1, scope: !11425, file: !1625, line: 220, type: !1530)
!11428 = !DILocalVariable(name: "config", scope: !11425, file: !1625, line: 222, type: !11172)
!11429 = !DILocation(line: 0, scope: !11425)
!11430 = !DILocation(line: 222, column: 48, scope: !11425)
!11431 = !DILocation(line: 224, column: 44, scope: !11425)
!11432 = !DILocation(line: 224, column: 9, scope: !11425)
!11433 = !DILocation(line: 224, column: 2, scope: !11425)
!11434 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1625, file: !1625, line: 304, type: !11435, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!1510, !113}
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "sb", arg: 1, scope: !11434, file: !1625, line: 304, type: !113)
!11439 = !DILocation(line: 0, scope: !11434)
!11440 = !DILocation(line: 306, column: 2, scope: !11434)
!11441 = !DILocation(line: 0, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11434, file: !1625, line: 306, column: 14)
!11443 = !DILocation(line: 323, column: 1, scope: !11434)
!11444 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1625, file: !1625, line: 235, type: !11407, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11445)
!11445 = !{!11446, !11447}
!11446 = !DILocalVariable(name: "dev", arg: 1, scope: !11444, file: !1625, line: 235, type: !1530)
!11447 = !DILocalVariable(name: "config", scope: !11444, file: !1625, line: 237, type: !11172)
!11448 = !DILocation(line: 0, scope: !11444)
!11449 = !DILocation(line: 237, column: 48, scope: !11444)
!11450 = !DILocation(line: 239, column: 39, scope: !11444)
!11451 = !DILocation(line: 239, column: 9, scope: !11444)
!11452 = !DILocation(line: 239, column: 2, scope: !11444)
!11453 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1625, file: !1625, line: 355, type: !11454, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11456)
!11454 = !DISubroutineType(types: !11455)
!11455 = !{!1503, !113, !113}
!11456 = !{!11457, !11458}
!11457 = !DILocalVariable(name: "db", arg: 1, scope: !11453, file: !1625, line: 355, type: !113)
!11458 = !DILocalVariable(name: "p", arg: 2, scope: !11453, file: !1625, line: 356, type: !113)
!11459 = !DILocation(line: 0, scope: !11453)
!11460 = !DILocation(line: 358, column: 2, scope: !11453)
!11461 = !DILocation(line: 384, column: 1, scope: !11453)
!11462 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1625, file: !1625, line: 250, type: !11407, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11463)
!11463 = !{!11464, !11465}
!11464 = !DILocalVariable(name: "dev", arg: 1, scope: !11462, file: !1625, line: 250, type: !1530)
!11465 = !DILocalVariable(name: "config", scope: !11462, file: !1625, line: 252, type: !11172)
!11466 = !DILocation(line: 0, scope: !11462)
!11467 = !DILocation(line: 252, column: 48, scope: !11462)
!11468 = !DILocation(line: 254, column: 40, scope: !11462)
!11469 = !DILocation(line: 254, column: 9, scope: !11462)
!11470 = !DILocation(line: 254, column: 2, scope: !11462)
!11471 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1625, file: !1625, line: 409, type: !11472, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11474)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!1516, !113}
!11474 = !{!11475}
!11475 = !DILocalVariable(name: "fc", arg: 1, scope: !11471, file: !1625, line: 409, type: !113)
!11476 = !DILocation(line: 0, scope: !11471)
!11477 = !DILocation(line: 411, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11471, file: !1625, line: 411, column: 6)
!11479 = !DILocation(line: 416, column: 1, scope: !11471)
!11480 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11481, file: !11481, line: 967, type: !11482, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11484)
!11481 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11482 = !DISubroutineType(types: !11483)
!11483 = !{!113, !1571}
!11484 = !{!11485}
!11485 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11480, file: !11481, line: 967, type: !1571)
!11486 = !DILocation(line: 0, scope: !11480)
!11487 = !DILocation(line: 969, column: 21, scope: !11480)
!11488 = !DILocation(line: 969, column: 3, scope: !11480)
!11489 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11481, file: !11481, line: 601, type: !11482, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11490)
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11489, file: !11481, line: 601, type: !1571)
!11492 = !DILocation(line: 0, scope: !11489)
!11493 = !DILocation(line: 603, column: 21, scope: !11489)
!11494 = !DILocation(line: 603, column: 3, scope: !11489)
!11495 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11481, file: !11481, line: 820, type: !11482, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11495, file: !11481, line: 820, type: !1571)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 822, column: 21, scope: !11495)
!11500 = !DILocation(line: 822, column: 3, scope: !11495)
!11501 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11481, file: !11481, line: 547, type: !11482, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11502)
!11502 = !{!11503}
!11503 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11501, file: !11481, line: 547, type: !1571)
!11504 = !DILocation(line: 0, scope: !11501)
!11505 = !DILocation(line: 549, column: 21, scope: !11501)
!11506 = !DILocation(line: 549, column: 3, scope: !11501)
!11507 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1625, file: !1625, line: 257, type: !11508, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11510)
!11508 = !DISubroutineType(types: !11509)
!11509 = !{!113, !1496}
!11510 = !{!11511}
!11511 = !DILocalVariable(name: "parity", arg: 1, scope: !11507, file: !1625, line: 257, type: !1496)
!11512 = !DILocation(line: 0, scope: !11507)
!11513 = !DILocation(line: 259, column: 2, scope: !11507)
!11514 = !DILocation(line: 268, column: 1, scope: !11507)
!11515 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1625, file: !1625, line: 283, type: !11516, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11518)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{!113, !1510}
!11518 = !{!11519}
!11519 = !DILocalVariable(name: "sb", arg: 1, scope: !11515, file: !1625, line: 283, type: !1510)
!11520 = !DILocation(line: 0, scope: !11515)
!11521 = !DILocation(line: 285, column: 2, scope: !11515)
!11522 = !DILocation(line: 0, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11515, file: !1625, line: 285, column: 14)
!11524 = !DILocation(line: 302, column: 1, scope: !11515)
!11525 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1625, file: !1625, line: 325, type: !11526, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11528)
!11526 = !DISubroutineType(types: !11527)
!11527 = !{!113, !1503, !1496}
!11528 = !{!11529, !11530}
!11529 = !DILocalVariable(name: "db", arg: 1, scope: !11525, file: !1625, line: 325, type: !1503)
!11530 = !DILocalVariable(name: "p", arg: 2, scope: !11525, file: !1625, line: 326, type: !1496)
!11531 = !DILocation(line: 0, scope: !11525)
!11532 = !DILocation(line: 328, column: 2, scope: !11525)
!11533 = !DILocation(line: 353, column: 1, scope: !11525)
!11534 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1625, file: !1625, line: 393, type: !11535, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11537)
!11535 = !DISubroutineType(types: !11536)
!11536 = !{!113, !1516}
!11537 = !{!11538}
!11538 = !DILocalVariable(name: "fc", arg: 1, scope: !11534, file: !1625, line: 393, type: !1516)
!11539 = !DILocation(line: 0, scope: !11534)
!11540 = !DILocation(line: 395, column: 9, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11534, file: !1625, line: 395, column: 6)
!11542 = !DILocation(line: 400, column: 1, scope: !11534)
!11543 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11481, file: !11481, line: 424, type: !11544, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{null, !1571}
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11543, file: !11481, line: 424, type: !1571)
!11548 = !DILocation(line: 0, scope: !11543)
!11549 = !DILocation(line: 426, column: 3, scope: !11543)
!11550 = !DILocation(line: 427, column: 1, scope: !11543)
!11551 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1625, file: !1625, line: 197, type: !11552, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11554)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{null, !1530, !113}
!11554 = !{!11555, !11556, !11557}
!11555 = !DILocalVariable(name: "dev", arg: 1, scope: !11551, file: !1625, line: 197, type: !1530)
!11556 = !DILocalVariable(name: "parity", arg: 2, scope: !11551, file: !1625, line: 198, type: !113)
!11557 = !DILocalVariable(name: "config", scope: !11551, file: !1625, line: 200, type: !11172)
!11558 = !DILocation(line: 0, scope: !11551)
!11559 = !DILocation(line: 200, column: 48, scope: !11551)
!11560 = !DILocation(line: 202, column: 29, scope: !11551)
!11561 = !DILocation(line: 202, column: 2, scope: !11551)
!11562 = !DILocation(line: 203, column: 1, scope: !11551)
!11563 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1625, file: !1625, line: 212, type: !11552, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11564)
!11564 = !{!11565, !11566, !11567}
!11565 = !DILocalVariable(name: "dev", arg: 1, scope: !11563, file: !1625, line: 212, type: !1530)
!11566 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11563, file: !1625, line: 213, type: !113)
!11567 = !DILocalVariable(name: "config", scope: !11563, file: !1625, line: 215, type: !11172)
!11568 = !DILocation(line: 0, scope: !11563)
!11569 = !DILocation(line: 215, column: 48, scope: !11563)
!11570 = !DILocation(line: 217, column: 37, scope: !11563)
!11571 = !DILocation(line: 217, column: 2, scope: !11563)
!11572 = !DILocation(line: 218, column: 1, scope: !11563)
!11573 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1625, file: !1625, line: 227, type: !11552, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11574)
!11574 = !{!11575, !11576, !11577}
!11575 = !DILocalVariable(name: "dev", arg: 1, scope: !11573, file: !1625, line: 227, type: !1530)
!11576 = !DILocalVariable(name: "databits", arg: 2, scope: !11573, file: !1625, line: 228, type: !113)
!11577 = !DILocalVariable(name: "config", scope: !11573, file: !1625, line: 230, type: !11172)
!11578 = !DILocation(line: 0, scope: !11573)
!11579 = !DILocation(line: 230, column: 48, scope: !11573)
!11580 = !DILocation(line: 232, column: 32, scope: !11573)
!11581 = !DILocation(line: 232, column: 2, scope: !11573)
!11582 = !DILocation(line: 233, column: 1, scope: !11573)
!11583 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1625, file: !1625, line: 242, type: !11552, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11584)
!11584 = !{!11585, !11586, !11587}
!11585 = !DILocalVariable(name: "dev", arg: 1, scope: !11583, file: !1625, line: 242, type: !1530)
!11586 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11583, file: !1625, line: 243, type: !113)
!11587 = !DILocalVariable(name: "config", scope: !11583, file: !1625, line: 245, type: !11172)
!11588 = !DILocation(line: 0, scope: !11583)
!11589 = !DILocation(line: 245, column: 48, scope: !11583)
!11590 = !DILocation(line: 247, column: 33, scope: !11583)
!11591 = !DILocation(line: 247, column: 2, scope: !11583)
!11592 = !DILocation(line: 248, column: 1, scope: !11583)
!11593 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1625, file: !1625, line: 107, type: !11552, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11594)
!11594 = !{!11595, !11596, !11597, !11598, !11599}
!11595 = !DILocalVariable(name: "dev", arg: 1, scope: !11593, file: !1625, line: 107, type: !1530)
!11596 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11593, file: !1625, line: 107, type: !113)
!11597 = !DILocalVariable(name: "config", scope: !11593, file: !1625, line: 109, type: !11172)
!11598 = !DILocalVariable(name: "data", scope: !11593, file: !1625, line: 110, type: !11295)
!11599 = !DILocalVariable(name: "clock_rate", scope: !11593, file: !1625, line: 112, type: !113)
!11600 = !DILocation(line: 0, scope: !11593)
!11601 = !DILocation(line: 109, column: 48, scope: !11593)
!11602 = !DILocation(line: 110, column: 38, scope: !11593)
!11603 = !DILocation(line: 112, column: 2, scope: !11593)
!11604 = !DILocation(line: 123, column: 36, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !1625, line: 123, column: 7)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !1625, line: 122, column: 9)
!11607 = distinct !DILexicalBlock(scope: !11593, file: !1625, line: 115, column: 6)
!11608 = !DILocation(line: 124, column: 42, scope: !11605)
!11609 = !DILocation(line: 123, column: 7, scope: !11605)
!11610 = !DILocation(line: 125, column: 22, scope: !11605)
!11611 = !DILocation(line: 123, column: 7, scope: !11606)
!11612 = !DILocation(line: 126, column: 4, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11614, file: !1625, line: 126, column: 4)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !1625, line: 126, column: 4)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !1625, line: 126, column: 4)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !1625, line: 126, column: 4)
!11617 = distinct !DILexicalBlock(scope: !11605, file: !1625, line: 125, column: 27)
!11618 = !DILocation(line: 127, column: 4, scope: !11617)
!11619 = !DILocation(line: 176, column: 36, scope: !11593)
!11620 = !DILocation(line: 176, column: 3, scope: !11593)
!11621 = !DILocation(line: 179, column: 32, scope: !11593)
!11622 = !DILocation(line: 180, column: 10, scope: !11593)
!11623 = !DILocation(line: 179, column: 3, scope: !11593)
!11624 = !DILocation(line: 189, column: 3, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1625, line: 189, column: 3)
!11626 = distinct !DILexicalBlock(scope: !11593, file: !1625, line: 189, column: 3)
!11627 = !DILocation(line: 189, column: 3, scope: !11626)
!11628 = !DILocation(line: 189, column: 3, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11625, file: !1625, line: 189, column: 3)
!11630 = !DILocation(line: 195, column: 1, scope: !11593)
!11631 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11481, file: !11481, line: 410, type: !11544, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11632)
!11632 = !{!11633}
!11633 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11631, file: !11481, line: 410, type: !1571)
!11634 = !DILocation(line: 0, scope: !11631)
!11635 = !DILocation(line: 412, column: 3, scope: !11631)
!11636 = !DILocation(line: 413, column: 1, scope: !11631)
!11637 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !979, file: !979, line: 216, type: !1604, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11638)
!11638 = !{!11639, !11640, !11641, !11642}
!11639 = !DILocalVariable(name: "dev", arg: 1, scope: !11637, file: !979, line: 216, type: !1530)
!11640 = !DILocalVariable(name: "sys", arg: 2, scope: !11637, file: !979, line: 217, type: !1071)
!11641 = !DILocalVariable(name: "rate", arg: 3, scope: !11637, file: !979, line: 218, type: !1027)
!11642 = !DILocalVariable(name: "api", scope: !11637, file: !979, line: 220, type: !1582)
!11643 = !DILocation(line: 0, scope: !11637)
!11644 = !DILocation(line: 221, column: 49, scope: !11637)
!11645 = !DILocation(line: 223, column: 11, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11637, file: !979, line: 223, column: 6)
!11647 = !DILocation(line: 223, column: 20, scope: !11646)
!11648 = !DILocation(line: 223, column: 6, scope: !11637)
!11649 = !DILocation(line: 227, column: 9, scope: !11637)
!11650 = !DILocation(line: 227, column: 2, scope: !11637)
!11651 = !DILocation(line: 228, column: 1, scope: !11637)
!11652 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3457, file: !3457, line: 175, type: !3458, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11653)
!11653 = !{!11654}
!11654 = !DILocalVariable(name: "level", arg: 1, scope: !11652, file: !3457, line: 175, type: !105)
!11655 = !DILocation(line: 0, scope: !11652)
!11656 = !DILocation(line: 177, column: 2, scope: !11652)
!11657 = !DILocation(line: 189, column: 1, scope: !11652)
!11658 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11481, file: !11481, line: 615, type: !11659, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11661)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{null, !1571, !113}
!11661 = !{!11662, !11663}
!11662 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11658, file: !11481, line: 615, type: !1571)
!11663 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11658, file: !11481, line: 615, type: !113)
!11664 = !DILocation(line: 0, scope: !11658)
!11665 = !DILocation(line: 617, column: 3, scope: !11658)
!11666 = !DILocation(line: 618, column: 1, scope: !11658)
!11667 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11481, file: !11481, line: 1020, type: !11668, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11670)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{null, !1571, !113, !113, !113}
!11670 = !{!11671, !11672, !11673, !11674}
!11671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11667, file: !11481, line: 1020, type: !1571)
!11672 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11667, file: !11481, line: 1020, type: !113)
!11673 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11667, file: !11481, line: 1020, type: !113)
!11674 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11667, file: !11481, line: 1021, type: !113)
!11675 = !DILocation(line: 0, scope: !11667)
!11676 = !DILocation(line: 1029, column: 30, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !11481, line: 1028, column: 3)
!11678 = distinct !DILexicalBlock(scope: !11667, file: !11481, line: 1023, column: 7)
!11679 = !DILocation(line: 1029, column: 19, scope: !11677)
!11680 = !DILocation(line: 1029, column: 13, scope: !11677)
!11681 = !DILocation(line: 1029, column: 17, scope: !11677)
!11682 = !DILocation(line: 1031, column: 1, scope: !11667)
!11683 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11481, file: !11481, line: 949, type: !11659, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11684)
!11684 = !{!11685, !11686}
!11685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11683, file: !11481, line: 949, type: !1571)
!11686 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11683, file: !11481, line: 949, type: !113)
!11687 = !DILocation(line: 0, scope: !11683)
!11688 = !DILocation(line: 951, column: 3, scope: !11683)
!11689 = !DILocation(line: 952, column: 1, scope: !11683)
!11690 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11481, file: !11481, line: 588, type: !11659, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11691)
!11691 = !{!11692, !11693}
!11692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11690, file: !11481, line: 588, type: !1571)
!11693 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11690, file: !11481, line: 588, type: !113)
!11694 = !DILocation(line: 0, scope: !11690)
!11695 = !DILocation(line: 590, column: 3, scope: !11690)
!11696 = !DILocation(line: 591, column: 1, scope: !11690)
!11697 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11481, file: !11481, line: 805, type: !11659, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11698)
!11698 = !{!11699, !11700}
!11699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11481, line: 805, type: !1571)
!11700 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11697, file: !11481, line: 805, type: !113)
!11701 = !DILocation(line: 0, scope: !11697)
!11702 = !DILocation(line: 807, column: 3, scope: !11697)
!11703 = !DILocation(line: 808, column: 1, scope: !11697)
!11704 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11481, file: !11481, line: 532, type: !11659, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11705)
!11705 = !{!11706, !11707}
!11706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11704, file: !11481, line: 532, type: !1571)
!11707 = !DILocalVariable(name: "Parity", arg: 2, scope: !11704, file: !11481, line: 532, type: !113)
!11708 = !DILocation(line: 0, scope: !11704)
!11709 = !DILocation(line: 534, column: 3, scope: !11704)
!11710 = !DILocation(line: 535, column: 1, scope: !11704)
!11711 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11481, file: !11481, line: 1770, type: !11482, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11712)
!11712 = !{!11713}
!11713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11711, file: !11481, line: 1770, type: !1571)
!11714 = !DILocation(line: 0, scope: !11711)
!11715 = !DILocation(line: 1772, column: 11, scope: !11711)
!11716 = !DILocation(line: 1772, column: 46, scope: !11711)
!11717 = !DILocation(line: 1772, column: 3, scope: !11711)
!11718 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11481, file: !11481, line: 1737, type: !11482, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11719)
!11719 = !{!11720}
!11720 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11718, file: !11481, line: 1737, type: !1571)
!11721 = !DILocation(line: 0, scope: !11718)
!11722 = !DILocation(line: 1739, column: 11, scope: !11718)
!11723 = !DILocation(line: 1739, column: 3, scope: !11718)
!11724 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11481, file: !11481, line: 1748, type: !11482, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11725)
!11725 = !{!11726}
!11726 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11724, file: !11481, line: 1748, type: !1571)
!11727 = !DILocation(line: 0, scope: !11724)
!11728 = !DILocation(line: 1750, column: 11, scope: !11724)
!11729 = !DILocation(line: 1750, column: 45, scope: !11724)
!11730 = !DILocation(line: 1750, column: 3, scope: !11724)
!11731 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11481, file: !11481, line: 1827, type: !11482, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11732)
!11732 = !{!11733}
!11733 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11731, file: !11481, line: 1827, type: !1571)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 1829, column: 11, scope: !11731)
!11736 = !DILocation(line: 1829, column: 46, scope: !11731)
!11737 = !DILocation(line: 1829, column: 3, scope: !11731)
!11738 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11481, file: !11481, line: 1992, type: !11544, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11739)
!11739 = !{!11740}
!11740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11738, file: !11481, line: 1992, type: !1571)
!11741 = !DILocation(line: 0, scope: !11738)
!11742 = !DILocation(line: 1994, column: 3, scope: !11738)
!11743 = !DILocation(line: 1995, column: 1, scope: !11738)
!11744 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11481, file: !11481, line: 1934, type: !11544, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11745)
!11745 = !{!11746, !11747}
!11746 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11744, file: !11481, line: 1934, type: !1571)
!11747 = !DILocalVariable(name: "tmpreg", scope: !11744, file: !11481, line: 1936, type: !461)
!11748 = !DILocation(line: 0, scope: !11744)
!11749 = !DILocation(line: 1936, column: 3, scope: !11744)
!11750 = !DILocation(line: 1936, column: 17, scope: !11744)
!11751 = !DILocation(line: 1937, column: 20, scope: !11744)
!11752 = !DILocation(line: 1937, column: 10, scope: !11744)
!11753 = !DILocation(line: 1938, column: 10, scope: !11744)
!11754 = !DILocation(line: 1939, column: 20, scope: !11744)
!11755 = !DILocation(line: 1939, column: 10, scope: !11744)
!11756 = !DILocation(line: 1940, column: 10, scope: !11744)
!11757 = !DILocation(line: 1941, column: 1, scope: !11744)
!11758 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11481, file: !11481, line: 1877, type: !11544, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11759)
!11759 = !{!11760, !11761}
!11760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11758, file: !11481, line: 1877, type: !1571)
!11761 = !DILocalVariable(name: "tmpreg", scope: !11758, file: !11481, line: 1879, type: !461)
!11762 = !DILocation(line: 0, scope: !11758)
!11763 = !DILocation(line: 1879, column: 3, scope: !11758)
!11764 = !DILocation(line: 1879, column: 17, scope: !11758)
!11765 = !DILocation(line: 1880, column: 20, scope: !11758)
!11766 = !DILocation(line: 1880, column: 10, scope: !11758)
!11767 = !DILocation(line: 1881, column: 10, scope: !11758)
!11768 = !DILocation(line: 1882, column: 20, scope: !11758)
!11769 = !DILocation(line: 1882, column: 10, scope: !11758)
!11770 = !DILocation(line: 1883, column: 10, scope: !11758)
!11771 = !DILocation(line: 1884, column: 1, scope: !11758)
!11772 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11481, file: !11481, line: 1896, type: !11544, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11773)
!11773 = !{!11774, !11775}
!11774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11772, file: !11481, line: 1896, type: !1571)
!11775 = !DILocalVariable(name: "tmpreg", scope: !11772, file: !11481, line: 1898, type: !461)
!11776 = !DILocation(line: 0, scope: !11772)
!11777 = !DILocation(line: 1898, column: 3, scope: !11772)
!11778 = !DILocation(line: 1898, column: 17, scope: !11772)
!11779 = !DILocation(line: 1899, column: 20, scope: !11772)
!11780 = !DILocation(line: 1899, column: 10, scope: !11772)
!11781 = !DILocation(line: 1900, column: 10, scope: !11772)
!11782 = !DILocation(line: 1901, column: 20, scope: !11772)
!11783 = !DILocation(line: 1901, column: 10, scope: !11772)
!11784 = !DILocation(line: 1902, column: 10, scope: !11772)
!11785 = !DILocation(line: 1903, column: 1, scope: !11772)
!11786 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11481, file: !11481, line: 1915, type: !11544, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11787)
!11787 = !{!11788, !11789}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11481, line: 1915, type: !1571)
!11789 = !DILocalVariable(name: "tmpreg", scope: !11786, file: !11481, line: 1917, type: !461)
!11790 = !DILocation(line: 0, scope: !11786)
!11791 = !DILocation(line: 1917, column: 3, scope: !11786)
!11792 = !DILocation(line: 1917, column: 17, scope: !11786)
!11793 = !DILocation(line: 1918, column: 20, scope: !11786)
!11794 = !DILocation(line: 1918, column: 10, scope: !11786)
!11795 = !DILocation(line: 1919, column: 10, scope: !11786)
!11796 = !DILocation(line: 1920, column: 20, scope: !11786)
!11797 = !DILocation(line: 1920, column: 10, scope: !11786)
!11798 = !DILocation(line: 1921, column: 10, scope: !11786)
!11799 = !DILocation(line: 1922, column: 1, scope: !11786)
!11800 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11481, file: !11481, line: 1814, type: !11482, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11801)
!11801 = !{!11802}
!11802 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11800, file: !11481, line: 1814, type: !1571)
!11803 = !DILocation(line: 0, scope: !11800)
!11804 = !DILocation(line: 1816, column: 11, scope: !11800)
!11805 = !DILocation(line: 1816, column: 46, scope: !11800)
!11806 = !DILocation(line: 1816, column: 3, scope: !11800)
!11807 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11481, file: !11481, line: 2426, type: !11808, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11810)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{null, !1571, !169}
!11810 = !{!11811, !11812}
!11811 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11807, file: !11481, line: 2426, type: !1571)
!11812 = !DILocalVariable(name: "Value", arg: 2, scope: !11807, file: !11481, line: 2426, type: !169)
!11813 = !DILocation(line: 0, scope: !11807)
!11814 = !DILocation(line: 2428, column: 16, scope: !11807)
!11815 = !DILocation(line: 2428, column: 11, scope: !11807)
!11816 = !DILocation(line: 2428, column: 14, scope: !11807)
!11817 = !DILocation(line: 2429, column: 1, scope: !11807)
!11818 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11481, file: !11481, line: 1792, type: !11482, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11819)
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11818, file: !11481, line: 1792, type: !1571)
!11821 = !DILocation(line: 0, scope: !11818)
!11822 = !DILocation(line: 1794, column: 11, scope: !11818)
!11823 = !DILocation(line: 1794, column: 47, scope: !11818)
!11824 = !DILocation(line: 1794, column: 3, scope: !11818)
!11825 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11481, file: !11481, line: 2403, type: !11826, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11828)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{!169, !1571}
!11828 = !{!11829}
!11829 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11825, file: !11481, line: 2403, type: !1571)
!11830 = !DILocation(line: 0, scope: !11825)
!11831 = !DILocation(line: 2405, column: 20, scope: !11825)
!11832 = !DILocation(line: 2405, column: 10, scope: !11825)
!11833 = !DILocation(line: 2405, column: 3, scope: !11825)
!11834 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1625, file: !1625, line: 1583, type: !1551, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11835)
!11835 = !{!11836, !11837, !11838, !11839, !11840, !11841}
!11836 = !DILocalVariable(name: "dev", arg: 1, scope: !11834, file: !1625, line: 1583, type: !1530)
!11837 = !DILocalVariable(name: "config", scope: !11834, file: !1625, line: 1585, type: !11172)
!11838 = !DILocalVariable(name: "data", scope: !11834, file: !1625, line: 1586, type: !11295)
!11839 = !DILocalVariable(name: "ll_parity", scope: !11834, file: !1625, line: 1587, type: !113)
!11840 = !DILocalVariable(name: "ll_datawidth", scope: !11834, file: !1625, line: 1588, type: !113)
!11841 = !DILocalVariable(name: "err", scope: !11834, file: !1625, line: 1589, type: !105)
!11842 = !DILocation(line: 0, scope: !11834)
!11843 = !DILocation(line: 1585, column: 48, scope: !11834)
!11844 = !DILocation(line: 1586, column: 38, scope: !11834)
!11845 = !DILocation(line: 1591, column: 2, scope: !11834)
!11846 = !DILocation(line: 1593, column: 29, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11834, file: !1625, line: 1593, column: 6)
!11848 = !DILocation(line: 1593, column: 7, scope: !11847)
!11849 = !DILocation(line: 1593, column: 6, scope: !11834)
!11850 = !DILocation(line: 1594, column: 3, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !1625, line: 1594, column: 3)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !1625, line: 1594, column: 3)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !1625, line: 1594, column: 3)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !1625, line: 1594, column: 3)
!11855 = distinct !DILexicalBlock(scope: !11847, file: !1625, line: 1593, column: 37)
!11856 = !DILocation(line: 1595, column: 3, scope: !11855)
!11857 = !DILocation(line: 1599, column: 31, scope: !11834)
!11858 = !DILocation(line: 1599, column: 71, scope: !11834)
!11859 = !DILocation(line: 1599, column: 8, scope: !11834)
!11860 = !DILocation(line: 1600, column: 10, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11834, file: !1625, line: 1600, column: 6)
!11862 = !DILocation(line: 1600, column: 6, scope: !11834)
!11863 = !DILocation(line: 1601, column: 3, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !1625, line: 1601, column: 3)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !1625, line: 1601, column: 3)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !1625, line: 1601, column: 3)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !1625, line: 1601, column: 3)
!11868 = distinct !DILexicalBlock(scope: !11861, file: !1625, line: 1600, column: 16)
!11869 = !DILocation(line: 1602, column: 3, scope: !11868)
!11870 = !DILocation(line: 1616, column: 36, scope: !11834)
!11871 = !DILocation(line: 1616, column: 8, scope: !11834)
!11872 = !DILocation(line: 1617, column: 10, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11834, file: !1625, line: 1617, column: 6)
!11874 = !DILocation(line: 1617, column: 6, scope: !11834)
!11875 = !DILocation(line: 1621, column: 27, scope: !11834)
!11876 = !DILocation(line: 1621, column: 2, scope: !11834)
!11877 = !DILocation(line: 1624, column: 40, scope: !11834)
!11878 = !DILocation(line: 1624, column: 2, scope: !11834)
!11879 = !DILocation(line: 1630, column: 14, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11834, file: !1625, line: 1630, column: 6)
!11881 = !DILocation(line: 1630, column: 6, scope: !11834)
!11882 = !DILocation(line: 1640, column: 4, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !1625, line: 1640, column: 4)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1625, line: 1640, column: 4)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !1625, line: 1640, column: 4)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !1625, line: 1640, column: 4)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !1625, line: 1639, column: 28)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !1625, line: 1639, column: 7)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !1625, line: 1638, column: 9)
!11890 = distinct !DILexicalBlock(scope: !11880, file: !1625, line: 1634, column: 13)
!11891 = !DILocation(line: 0, scope: !11880)
!11892 = !DILocation(line: 1649, column: 35, scope: !11834)
!11893 = !DILocation(line: 1649, column: 2, scope: !11834)
!11894 = !DILocation(line: 1654, column: 14, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11834, file: !1625, line: 1654, column: 6)
!11896 = !DILocation(line: 1654, column: 6, scope: !11834)
!11897 = !DILocation(line: 1655, column: 3, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11895, file: !1625, line: 1654, column: 31)
!11899 = !DILocation(line: 1656, column: 2, scope: !11898)
!11900 = !DILocation(line: 1659, column: 37, scope: !11834)
!11901 = !DILocation(line: 1659, column: 2, scope: !11834)
!11902 = !DILocation(line: 1662, column: 14, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11834, file: !1625, line: 1662, column: 6)
!11904 = !DILocation(line: 1662, column: 6, scope: !11834)
!11905 = !DILocation(line: 1663, column: 37, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !1625, line: 1662, column: 27)
!11907 = !DILocation(line: 1663, column: 3, scope: !11906)
!11908 = !DILocation(line: 1664, column: 2, scope: !11906)
!11909 = !DILocation(line: 1684, column: 26, scope: !11834)
!11910 = !DILocation(line: 1684, column: 2, scope: !11834)
!11911 = !DILocation(line: 1722, column: 2, scope: !11834)
!11912 = !DILocation(line: 1724, column: 1, scope: !11834)
!11913 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1625, file: !1625, line: 651, type: !11914, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11916)
!11914 = !DISubroutineType(types: !11915)
!11915 = !{null, !1530}
!11916 = !{!11917, !11918, !11919}
!11917 = !DILocalVariable(name: "dev", arg: 1, scope: !11913, file: !1625, line: 651, type: !1530)
!11918 = !DILocalVariable(name: "data", scope: !11913, file: !1625, line: 653, type: !11295)
!11919 = !DILocalVariable(name: "clk", scope: !11913, file: !1625, line: 654, type: !11920)
!11920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!11921 = !DILocation(line: 0, scope: !11913)
!11922 = !DILocation(line: 653, column: 38, scope: !11913)
!11923 = !DILocation(line: 656, column: 8, scope: !11913)
!11924 = !DILocation(line: 656, column: 14, scope: !11913)
!11925 = !DILocation(line: 657, column: 1, scope: !11913)
!11926 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !11927, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!492, !1530}
!11929 = !{!11930}
!11930 = !DILocalVariable(name: "dev", arg: 1, scope: !11926, file: !10291, line: 47, type: !1530)
!11931 = !DILocation(line: 0, scope: !11926)
!11932 = !DILocation(line: 55, column: 2, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11926, file: !10291, line: 55, column: 2)
!11934 = !{i64 2155137126}
!11935 = !DILocation(line: 56, column: 9, scope: !11926)
!11936 = !DILocation(line: 56, column: 2, scope: !11926)
!11937 = distinct !DISubprogram(name: "clock_control_on", scope: !979, file: !979, line: 123, type: !1589, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11938)
!11938 = !{!11939, !11940, !11941}
!11939 = !DILocalVariable(name: "dev", arg: 1, scope: !11937, file: !979, line: 123, type: !1530)
!11940 = !DILocalVariable(name: "sys", arg: 2, scope: !11937, file: !979, line: 124, type: !1071)
!11941 = !DILocalVariable(name: "api", scope: !11937, file: !979, line: 126, type: !1582)
!11942 = !DILocation(line: 0, scope: !11937)
!11943 = !DILocation(line: 127, column: 49, scope: !11937)
!11944 = !DILocation(line: 129, column: 14, scope: !11937)
!11945 = !DILocation(line: 129, column: 9, scope: !11937)
!11946 = !DILocation(line: 129, column: 2, scope: !11937)
!11947 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1665, file: !1665, line: 342, type: !11948, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11950)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!105, !1662, !169}
!11950 = !{!11951, !11952, !11953, !11954}
!11951 = !DILocalVariable(name: "config", arg: 1, scope: !11947, file: !1665, line: 342, type: !1662)
!11952 = !DILocalVariable(name: "id", arg: 2, scope: !11947, file: !1665, line: 343, type: !169)
!11953 = !DILocalVariable(name: "ret", scope: !11947, file: !1665, line: 345, type: !105)
!11954 = !DILocalVariable(name: "state", scope: !11947, file: !1665, line: 346, type: !1668)
!11955 = !DILocation(line: 0, scope: !11947)
!11956 = !DILocation(line: 346, column: 2, scope: !11947)
!11957 = !DILocation(line: 348, column: 8, scope: !11947)
!11958 = !DILocation(line: 349, column: 10, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11947, file: !1665, line: 349, column: 6)
!11960 = !DILocation(line: 349, column: 6, scope: !11947)
!11961 = !DILocation(line: 353, column: 44, scope: !11947)
!11962 = !DILocation(line: 353, column: 9, scope: !11947)
!11963 = !DILocation(line: 353, column: 2, scope: !11947)
!11964 = !DILocation(line: 354, column: 1, scope: !11947)
!11965 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11481, file: !11481, line: 497, type: !11659, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11966)
!11966 = !{!11967, !11968, !11969}
!11967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11965, file: !11481, line: 497, type: !1571)
!11968 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11965, file: !11481, line: 497, type: !113)
!11969 = !DILocalVariable(name: "val", scope: !11970, file: !11481, line: 499, type: !113)
!11970 = distinct !DILexicalBlock(scope: !11965, file: !11481, line: 499, column: 3)
!11971 = !DILocation(line: 0, scope: !11965)
!11972 = !DILocation(line: 499, column: 3, scope: !11970)
!11973 = !DILocalVariable(name: "addr", arg: 1, scope: !11974, file: !7785, line: 476, type: !1621)
!11974 = distinct !DISubprogram(name: "__LDREXW", scope: !7785, file: !7785, line: 476, type: !11975, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11977)
!11975 = !DISubroutineType(types: !11976)
!11976 = !{!113, !1621}
!11977 = !{!11973, !11978}
!11978 = !DILocalVariable(name: "result", scope: !11974, file: !7785, line: 478, type: !113)
!11979 = !DILocation(line: 0, scope: !11974, inlinedAt: !11980)
!11980 = distinct !DILocation(line: 499, column: 3, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11970, file: !11481, line: 499, column: 3)
!11982 = !DILocation(line: 480, column: 4, scope: !11974, inlinedAt: !11980)
!11983 = !{i64 3577018}
!11984 = !DILocation(line: 499, column: 3, scope: !11981)
!11985 = !DILocation(line: 0, scope: !11970)
!11986 = !DILocalVariable(name: "value", arg: 1, scope: !11987, file: !7785, line: 527, type: !113)
!11987 = distinct !DISubprogram(name: "__STREXW", scope: !7785, file: !7785, line: 527, type: !11988, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11990)
!11988 = !DISubroutineType(types: !11989)
!11989 = !{!113, !113, !1621}
!11990 = !{!11986, !11991, !11992}
!11991 = !DILocalVariable(name: "addr", arg: 2, scope: !11987, file: !7785, line: 527, type: !1621)
!11992 = !DILocalVariable(name: "result", scope: !11987, file: !7785, line: 529, type: !113)
!11993 = !DILocation(line: 0, scope: !11987, inlinedAt: !11994)
!11994 = distinct !DILocation(line: 499, column: 3, scope: !11970)
!11995 = !DILocation(line: 531, column: 4, scope: !11987, inlinedAt: !11994)
!11996 = !{i64 3578454}
!11997 = distinct !{!11997, !11972, !11972}
!11998 = !DILocation(line: 500, column: 1, scope: !11965)
!11999 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11481, file: !11481, line: 850, type: !11668, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !12000)
!12000 = !{!12001, !12002, !12003, !12004}
!12001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11999, file: !11481, line: 850, type: !1571)
!12002 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11999, file: !11481, line: 850, type: !113)
!12003 = !DILocalVariable(name: "Parity", arg: 3, scope: !11999, file: !11481, line: 850, type: !113)
!12004 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11999, file: !11481, line: 851, type: !113)
!12005 = !DILocation(line: 0, scope: !11999)
!12006 = !DILocation(line: 853, column: 3, scope: !11999)
!12007 = !DILocation(line: 854, column: 3, scope: !11999)
!12008 = !DILocation(line: 855, column: 1, scope: !11999)
!12009 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11481, file: !11481, line: 1337, type: !11544, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !12010)
!12010 = !{!12011}
!12011 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12009, file: !11481, line: 1337, type: !1571)
!12012 = !DILocation(line: 0, scope: !12009)
!12013 = !DILocation(line: 1339, column: 3, scope: !12009)
!12014 = !DILocation(line: 1340, column: 1, scope: !12009)
!12015 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1665, file: !1665, line: 316, type: !12016, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !12018)
!12016 = !DISubroutineType(types: !12017)
!12017 = !{!105, !1662, !1668}
!12018 = !{!12019, !12020, !12021}
!12019 = !DILocalVariable(name: "config", arg: 1, scope: !12015, file: !1665, line: 317, type: !1662)
!12020 = !DILocalVariable(name: "state", arg: 2, scope: !12015, file: !1665, line: 318, type: !1668)
!12021 = !DILocalVariable(name: "reg", scope: !12015, file: !1665, line: 320, type: !22)
!12022 = !DILocation(line: 0, scope: !12015)
!12023 = !DILocation(line: 329, column: 39, scope: !12015)
!12024 = !DILocation(line: 329, column: 52, scope: !12015)
!12025 = !DILocation(line: 329, column: 9, scope: !12015)
!12026 = !DILocation(line: 329, column: 2, scope: !12015)
!12027 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11927, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !12028)
!12028 = !{!12029}
!12029 = !DILocalVariable(name: "dev", arg: 1, scope: !12027, file: !481, line: 730, type: !1530)
!12030 = !DILocation(line: 0, scope: !12027)
!12031 = !DILocation(line: 732, column: 9, scope: !12027)
!12032 = !DILocation(line: 732, column: 2, scope: !12027)
!12033 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1788, file: !1788, line: 270, type: !1794, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12034)
!12034 = !{!12035}
!12035 = !DILocalVariable(name: "dev", arg: 1, scope: !12033, file: !1788, line: 270, type: !1796)
!12036 = !DILocation(line: 0, scope: !12033)
!12037 = !DILocation(line: 274, column: 2, scope: !12033)
!12038 = !DILocation(line: 275, column: 12, scope: !12033)
!12039 = !DILocation(line: 276, column: 15, scope: !12033)
!12040 = !DILocation(line: 277, column: 16, scope: !12033)
!12041 = !DILocation(line: 278, column: 15, scope: !12033)
!12042 = !DILocation(line: 279, column: 16, scope: !12033)
!12043 = !DILocation(line: 282, column: 2, scope: !12033)
!12044 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7825, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12045)
!12045 = !{!12046, !12047}
!12046 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12044, file: !679, line: 1814, type: !933)
!12047 = !DILocalVariable(name: "priority", arg: 2, scope: !12044, file: !679, line: 1814, type: !113)
!12048 = !DILocation(line: 0, scope: !12044)
!12049 = !DILocation(line: 1822, column: 46, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12051, file: !679, line: 1821, column: 3)
!12051 = distinct !DILexicalBlock(scope: !12044, file: !679, line: 1816, column: 7)
!12052 = !DILocation(line: 1824, column: 1, scope: !12044)
!12053 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1788, file: !1788, line: 118, type: !7722, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12054)
!12054 = !{!12055, !12056}
!12055 = !DILocalVariable(name: "arg", arg: 1, scope: !12053, file: !1788, line: 118, type: !104)
!12056 = !DILocalVariable(name: "dticks", scope: !12053, file: !1788, line: 121, type: !113)
!12057 = !DILocation(line: 0, scope: !12053)
!12058 = !DILocation(line: 124, column: 2, scope: !12053)
!12059 = !DILocation(line: 129, column: 17, scope: !12053)
!12060 = !DILocation(line: 129, column: 14, scope: !12053)
!12061 = !DILocation(line: 130, column: 15, scope: !12053)
!12062 = !DILocation(line: 145, column: 27, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !1788, line: 132, column: 16)
!12064 = distinct !DILexicalBlock(scope: !12053, file: !1788, line: 132, column: 6)
!12065 = !DILocation(line: 145, column: 25, scope: !12063)
!12066 = !DILocation(line: 145, column: 45, scope: !12063)
!12067 = !DILocation(line: 146, column: 30, scope: !12063)
!12068 = !DILocation(line: 146, column: 20, scope: !12063)
!12069 = !DILocation(line: 147, column: 3, scope: !12063)
!12070 = !DILocation(line: 151, column: 2, scope: !12053)
!12071 = !DILocation(line: 152, column: 1, scope: !12053)
!12072 = distinct !DISubprogram(name: "elapsed", scope: !1788, file: !1788, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12073)
!12073 = !{!12074, !12075, !12076}
!12074 = !DILocalVariable(name: "val1", scope: !12072, file: !1788, line: 87, type: !113)
!12075 = !DILocalVariable(name: "ctrl", scope: !12072, file: !1788, line: 88, type: !113)
!12076 = !DILocalVariable(name: "val2", scope: !12072, file: !1788, line: 89, type: !113)
!12077 = !DILocation(line: 87, column: 27, scope: !12072)
!12078 = !DILocation(line: 0, scope: !12072)
!12079 = !DILocation(line: 88, column: 27, scope: !12072)
!12080 = !DILocation(line: 89, column: 27, scope: !12072)
!12081 = !DILocation(line: 105, column: 12, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12072, file: !1788, line: 105, column: 6)
!12083 = !DILocation(line: 106, column: 6, scope: !12082)
!12084 = !DILocation(line: 107, column: 16, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12082, file: !1788, line: 106, column: 24)
!12086 = !DILocation(line: 111, column: 18, scope: !12085)
!12087 = !DILocation(line: 112, column: 2, scope: !12085)
!12088 = !DILocation(line: 114, column: 20, scope: !12072)
!12089 = !DILocation(line: 114, column: 30, scope: !12072)
!12090 = !DILocation(line: 114, column: 28, scope: !12072)
!12091 = !DILocation(line: 114, column: 2, scope: !12072)
!12092 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1788, file: !1788, line: 154, type: !12093, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12095)
!12093 = !DISubroutineType(types: !12094)
!12094 = !{null, !116, !492}
!12095 = !{!12096, !12097, !12098, !12099, !12100, !12101, !12102, !12107, !12108}
!12096 = !DILocalVariable(name: "ticks", arg: 1, scope: !12092, file: !1788, line: 154, type: !116)
!12097 = !DILocalVariable(name: "idle", arg: 2, scope: !12092, file: !1788, line: 154, type: !492)
!12098 = !DILocalVariable(name: "delay", scope: !12092, file: !1788, line: 169, type: !113)
!12099 = !DILocalVariable(name: "val1", scope: !12092, file: !1788, line: 170, type: !113)
!12100 = !DILocalVariable(name: "val2", scope: !12092, file: !1788, line: 170, type: !113)
!12101 = !DILocalVariable(name: "last_load_", scope: !12092, file: !1788, line: 171, type: !113)
!12102 = !DILocalVariable(name: "key", scope: !12092, file: !1788, line: 176, type: !12103)
!12103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12104)
!12104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12105)
!12105 = !{!12106}
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12104, file: !236, line: 33, baseType: !105, size: 32)
!12107 = !DILocalVariable(name: "pending", scope: !12092, file: !1788, line: 178, type: !113)
!12108 = !DILocalVariable(name: "unannounced", scope: !12092, file: !1788, line: 185, type: !113)
!12109 = !DILocation(line: 0, scope: !12092)
!12110 = !DILocation(line: 162, column: 49, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12092, file: !1788, line: 162, column: 6)
!12112 = !DILocation(line: 163, column: 17, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12111, file: !1788, line: 162, column: 78)
!12114 = !DILocation(line: 164, column: 13, scope: !12113)
!12115 = !DILocation(line: 165, column: 3, scope: !12113)
!12116 = !DILocation(line: 171, column: 24, scope: !12092)
!12117 = !DILocation(line: 173, column: 10, scope: !12092)
!12118 = !DILocation(line: 174, column: 10, scope: !12092)
!12119 = !DILocalVariable(name: "l", arg: 1, scope: !12120, file: !236, line: 136, type: !12123)
!12120 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12121, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12124)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!12103, !12123}
!12123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!12124 = !{!12119, !12125}
!12125 = !DILocalVariable(name: "k", scope: !12120, file: !236, line: 139, type: !12103)
!12126 = !DILocation(line: 0, scope: !12120, inlinedAt: !12127)
!12127 = distinct !DILocation(line: 176, column: 25, scope: !12092)
!12128 = !DILocation(line: 55, column: 2, scope: !12129, inlinedAt: !12133)
!12129 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12130)
!12130 = !{!12131, !12132}
!12131 = !DILocalVariable(name: "key", scope: !12129, file: !7467, line: 44, type: !32)
!12132 = !DILocalVariable(name: "tmp", scope: !12129, file: !7467, line: 53, type: !32)
!12133 = distinct !DILocation(line: 145, column: 10, scope: !12120, inlinedAt: !12127)
!12134 = !{i64 2200216}
!12135 = !DILocation(line: 0, scope: !12129, inlinedAt: !12133)
!12136 = !DILocation(line: 148, column: 2, scope: !12137, inlinedAt: !12127)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !236, line: 148, column: 2)
!12138 = distinct !DILexicalBlock(scope: !12120, file: !236, line: 148, column: 2)
!12139 = !DILocation(line: 148, column: 2, scope: !12138, inlinedAt: !12127)
!12140 = !DILocation(line: 148, column: 2, scope: !12141, inlinedAt: !12127)
!12141 = distinct !DILexicalBlock(scope: !12137, file: !236, line: 148, column: 2)
!12142 = !DILocation(line: 160, column: 2, scope: !12120, inlinedAt: !12127)
!12143 = !DILocation(line: 178, column: 21, scope: !12092)
!12144 = !DILocation(line: 180, column: 18, scope: !12092)
!12145 = !DILocation(line: 182, column: 14, scope: !12092)
!12146 = !DILocation(line: 183, column: 15, scope: !12092)
!12147 = !DILocation(line: 185, column: 39, scope: !12092)
!12148 = !DILocation(line: 185, column: 37, scope: !12092)
!12149 = !DILocation(line: 187, column: 27, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12092, file: !1788, line: 187, column: 6)
!12151 = !DILocation(line: 187, column: 6, scope: !12092)
!12152 = !DILocation(line: 202, column: 27, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12150, file: !1788, line: 195, column: 9)
!12154 = !DILocation(line: 202, column: 48, scope: !12153)
!12155 = !DILocation(line: 203, column: 9, scope: !12153)
!12156 = !DILocation(line: 204, column: 11, scope: !12153)
!12157 = !DILocation(line: 205, column: 13, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12153, file: !1788, line: 205, column: 7)
!12159 = !DILocation(line: 205, column: 7, scope: !12153)
!12160 = !DILocation(line: 0, scope: !12150)
!12161 = !DILocation(line: 212, column: 18, scope: !12092)
!12162 = !DILocation(line: 214, column: 28, scope: !12092)
!12163 = !DILocation(line: 214, column: 16, scope: !12092)
!12164 = !DILocation(line: 215, column: 15, scope: !12092)
!12165 = !DILocation(line: 227, column: 11, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12092, file: !1788, line: 227, column: 6)
!12167 = !DILocation(line: 227, column: 6, scope: !12092)
!12168 = !DILocation(line: 228, column: 15, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12166, file: !1788, line: 227, column: 19)
!12170 = !DILocation(line: 228, column: 38, scope: !12169)
!12171 = !DILocation(line: 228, column: 24, scope: !12169)
!12172 = !DILocation(line: 229, column: 2, scope: !12169)
!12173 = !DILocation(line: 230, column: 24, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12166, file: !1788, line: 229, column: 9)
!12175 = !DILocation(line: 230, column: 15, scope: !12174)
!12176 = !DILocation(line: 0, scope: !12166)
!12177 = !DILocalVariable(name: "key", arg: 2, scope: !12178, file: !236, line: 190, type: !12103)
!12178 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12179, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12181)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{null, !12123, !12103}
!12181 = !{!12182, !12177}
!12182 = !DILocalVariable(name: "l", arg: 1, scope: !12178, file: !236, line: 189, type: !12123)
!12183 = !DILocation(line: 0, scope: !12178, inlinedAt: !12184)
!12184 = distinct !DILocation(line: 232, column: 2, scope: !12092)
!12185 = !DILocation(line: 194, column: 2, scope: !12186, inlinedAt: !12184)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !236, line: 194, column: 2)
!12187 = distinct !DILexicalBlock(scope: !12178, file: !236, line: 194, column: 2)
!12188 = !DILocation(line: 194, column: 2, scope: !12187, inlinedAt: !12184)
!12189 = !DILocation(line: 194, column: 2, scope: !12190, inlinedAt: !12184)
!12190 = distinct !DILexicalBlock(scope: !12186, file: !236, line: 194, column: 2)
!12191 = !DILocalVariable(name: "key", arg: 1, scope: !12192, file: !7467, line: 84, type: !32)
!12192 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12193)
!12193 = !{!12191}
!12194 = !DILocation(line: 0, scope: !12192, inlinedAt: !12195)
!12195 = distinct !DILocation(line: 215, column: 2, scope: !12178, inlinedAt: !12184)
!12196 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12195)
!12197 = !{i64 2201033}
!12198 = !DILocation(line: 234, column: 1, scope: !12092)
!12199 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1788, file: !1788, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12200)
!12200 = !{!12201, !12202}
!12201 = !DILocalVariable(name: "key", scope: !12199, file: !1788, line: 242, type: !12103)
!12202 = !DILocalVariable(name: "cyc", scope: !12199, file: !1788, line: 243, type: !113)
!12203 = !DILocation(line: 0, scope: !12120, inlinedAt: !12204)
!12204 = distinct !DILocation(line: 242, column: 25, scope: !12199)
!12205 = !DILocation(line: 55, column: 2, scope: !12129, inlinedAt: !12206)
!12206 = distinct !DILocation(line: 145, column: 10, scope: !12120, inlinedAt: !12204)
!12207 = !DILocation(line: 0, scope: !12129, inlinedAt: !12206)
!12208 = !DILocation(line: 148, column: 2, scope: !12137, inlinedAt: !12204)
!12209 = !DILocation(line: 148, column: 2, scope: !12138, inlinedAt: !12204)
!12210 = !DILocation(line: 148, column: 2, scope: !12141, inlinedAt: !12204)
!12211 = !DILocation(line: 160, column: 2, scope: !12120, inlinedAt: !12204)
!12212 = !DILocation(line: 0, scope: !12199)
!12213 = !DILocation(line: 243, column: 17, scope: !12199)
!12214 = !DILocation(line: 243, column: 29, scope: !12199)
!12215 = !DILocation(line: 243, column: 43, scope: !12199)
!12216 = !DILocation(line: 0, scope: !12178, inlinedAt: !12217)
!12217 = distinct !DILocation(line: 245, column: 2, scope: !12199)
!12218 = !DILocation(line: 194, column: 2, scope: !12186, inlinedAt: !12217)
!12219 = !DILocation(line: 194, column: 2, scope: !12187, inlinedAt: !12217)
!12220 = !DILocation(line: 194, column: 2, scope: !12190, inlinedAt: !12217)
!12221 = !DILocation(line: 243, column: 27, scope: !12199)
!12222 = !DILocation(line: 243, column: 41, scope: !12199)
!12223 = !DILocation(line: 0, scope: !12192, inlinedAt: !12224)
!12224 = distinct !DILocation(line: 215, column: 2, scope: !12178, inlinedAt: !12217)
!12225 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12224)
!12226 = !DILocation(line: 246, column: 13, scope: !12199)
!12227 = !DILocation(line: 246, column: 2, scope: !12199)
!12228 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1788, file: !1788, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !12229)
!12229 = !{!12230, !12231}
!12230 = !DILocalVariable(name: "key", scope: !12228, file: !1788, line: 251, type: !12103)
!12231 = !DILocalVariable(name: "ret", scope: !12228, file: !1788, line: 252, type: !113)
!12232 = !DILocation(line: 0, scope: !12120, inlinedAt: !12233)
!12233 = distinct !DILocation(line: 251, column: 25, scope: !12228)
!12234 = !DILocation(line: 55, column: 2, scope: !12129, inlinedAt: !12235)
!12235 = distinct !DILocation(line: 145, column: 10, scope: !12120, inlinedAt: !12233)
!12236 = !DILocation(line: 0, scope: !12129, inlinedAt: !12235)
!12237 = !DILocation(line: 148, column: 2, scope: !12137, inlinedAt: !12233)
!12238 = !DILocation(line: 148, column: 2, scope: !12138, inlinedAt: !12233)
!12239 = !DILocation(line: 148, column: 2, scope: !12141, inlinedAt: !12233)
!12240 = !DILocation(line: 160, column: 2, scope: !12120, inlinedAt: !12233)
!12241 = !DILocation(line: 0, scope: !12228)
!12242 = !DILocation(line: 252, column: 17, scope: !12228)
!12243 = !DILocation(line: 252, column: 29, scope: !12228)
!12244 = !DILocation(line: 0, scope: !12178, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 254, column: 2, scope: !12228)
!12246 = !DILocation(line: 194, column: 2, scope: !12186, inlinedAt: !12245)
!12247 = !DILocation(line: 194, column: 2, scope: !12187, inlinedAt: !12245)
!12248 = !DILocation(line: 194, column: 2, scope: !12190, inlinedAt: !12245)
!12249 = !DILocation(line: 252, column: 27, scope: !12228)
!12250 = !DILocation(line: 0, scope: !12192, inlinedAt: !12251)
!12251 = distinct !DILocation(line: 215, column: 2, scope: !12178, inlinedAt: !12245)
!12252 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12251)
!12253 = !DILocation(line: 255, column: 2, scope: !12228)
!12254 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1788, file: !1788, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !397)
!12255 = !DILocation(line: 260, column: 6, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12254, file: !1788, line: 260, column: 6)
!12257 = !DILocation(line: 260, column: 16, scope: !12256)
!12258 = !DILocation(line: 260, column: 6, scope: !12254)
!12259 = !DILocation(line: 261, column: 17, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12256, file: !1788, line: 260, column: 34)
!12261 = !DILocation(line: 262, column: 2, scope: !12260)
!12262 = !DILocation(line: 263, column: 1, scope: !12254)
!12263 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1788, file: !1788, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1710, retainedNodes: !397)
!12264 = !DILocation(line: 267, column: 16, scope: !12263)
!12265 = !DILocation(line: 268, column: 1, scope: !12263)
!12266 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12267, file: !12267, line: 9, type: !12268, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !12291)
!12267 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12268 = !DISubroutineType(types: !12269)
!12269 = !{!105, !12270, !169, !12290}
!12270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12271, size: 32)
!12271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12272)
!12272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1665, line: 60, size: 64, elements: !12273)
!12273 = !{!12274, !12289}
!12274 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12272, file: !1665, line: 69, baseType: !12275, size: 32)
!12275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12276, size: 32)
!12276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12277)
!12277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1665, line: 50, size: 64, elements: !12278)
!12278 = !{!12279, !12287, !12288}
!12279 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12277, file: !1665, line: 52, baseType: !12280, size: 32)
!12280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12281, size: 32)
!12281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12282)
!12282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !12283)
!12283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !12284)
!12284 = !{!12285, !12286}
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12283, file: !1676, line: 34, baseType: !113, size: 32)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12283, file: !1676, line: 36, baseType: !113, size: 32, offset: 32)
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12277, file: !1665, line: 54, baseType: !169, size: 8, offset: 32)
!12288 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12277, file: !1665, line: 56, baseType: !169, size: 8, offset: 40)
!12289 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12272, file: !1665, line: 71, baseType: !169, size: 8, offset: 32)
!12290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12275, size: 32)
!12291 = !{!12292, !12293, !12294}
!12292 = !DILocalVariable(name: "config", arg: 1, scope: !12266, file: !12267, line: 9, type: !12270)
!12293 = !DILocalVariable(name: "id", arg: 2, scope: !12266, file: !12267, line: 9, type: !169)
!12294 = !DILocalVariable(name: "state", arg: 3, scope: !12266, file: !12267, line: 10, type: !12290)
!12295 = !DILocation(line: 0, scope: !12266)
!12296 = !DILocation(line: 12, column: 20, scope: !12266)
!12297 = !DILocation(line: 13, column: 27, scope: !12266)
!12298 = !DILocation(line: 13, column: 42, scope: !12266)
!12299 = !DILocation(line: 13, column: 19, scope: !12266)
!12300 = !DILocation(line: 13, column: 16, scope: !12266)
!12301 = !DILocation(line: 13, column: 2, scope: !12266)
!12302 = distinct !{!12302, !12301, !12303}
!12303 = !DILocation(line: 19, column: 2, scope: !12266)
!12304 = !DILocation(line: 14, column: 23, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !12267, line: 14, column: 7)
!12306 = distinct !DILexicalBlock(scope: !12266, file: !12267, line: 13, column: 54)
!12307 = !DILocation(line: 14, column: 10, scope: !12305)
!12308 = !DILocation(line: 18, column: 11, scope: !12306)
!12309 = !DILocation(line: 14, column: 7, scope: !12306)
!12310 = !DILocation(line: 22, column: 1, scope: !12266)
!12311 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1907, file: !1907, line: 193, type: !12312, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12321)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{!105, !12314, !169, !22}
!12314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12315, size: 32)
!12315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12316)
!12316 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !12317)
!12317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !12318)
!12318 = !{!12319, !12320}
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12317, file: !1676, line: 34, baseType: !113, size: 32)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12317, file: !1676, line: 36, baseType: !113, size: 32, offset: 32)
!12321 = !{!12322, !12323, !12324, !12325, !12326, !12327, !12328, !12329, !12331}
!12322 = !DILocalVariable(name: "pins", arg: 1, scope: !12311, file: !1907, line: 193, type: !12314)
!12323 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12311, file: !1907, line: 193, type: !169)
!12324 = !DILocalVariable(name: "reg", arg: 3, scope: !12311, file: !1907, line: 194, type: !22)
!12325 = !DILocalVariable(name: "pin", scope: !12311, file: !1907, line: 196, type: !113)
!12326 = !DILocalVariable(name: "mux", scope: !12311, file: !1907, line: 196, type: !113)
!12327 = !DILocalVariable(name: "pin_cgf", scope: !12311, file: !1907, line: 197, type: !113)
!12328 = !DILocalVariable(name: "ret", scope: !12311, file: !1907, line: 198, type: !105)
!12329 = !DILocalVariable(name: "i", scope: !12330, file: !1907, line: 209, type: !169)
!12330 = distinct !DILexicalBlock(scope: !12311, file: !1907, line: 209, column: 2)
!12331 = !DILocalVariable(name: "gpio_out", scope: !12332, file: !1907, line: 239, type: !113)
!12332 = distinct !DILexicalBlock(scope: !12333, file: !1907, line: 238, column: 55)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !1907, line: 238, column: 14)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !1907, line: 236, column: 14)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !1907, line: 234, column: 7)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !1907, line: 209, column: 41)
!12337 = distinct !DILexicalBlock(scope: !12330, file: !1907, line: 209, column: 2)
!12338 = !DILocation(line: 0, scope: !12311)
!12339 = !DILocation(line: 0, scope: !12330)
!12340 = !DILocation(line: 209, column: 25, scope: !12337)
!12341 = !DILocation(line: 209, column: 2, scope: !12330)
!12342 = distinct !{!12342, !12341, !12343}
!12343 = !DILocation(line: 259, column: 2, scope: !12330)
!12344 = !DILocation(line: 210, column: 17, scope: !12336)
!12345 = !DILocation(line: 234, column: 7, scope: !12335)
!12346 = !DILocation(line: 234, column: 33, scope: !12335)
!12347 = !DILocation(line: 234, column: 7, scope: !12336)
!12348 = !DILocation(line: 235, column: 22, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12335, file: !1907, line: 234, column: 49)
!12350 = !DILocation(line: 235, column: 29, scope: !12349)
!12351 = !DILocation(line: 236, column: 3, scope: !12349)
!12352 = !DILocation(line: 236, column: 14, scope: !12335)
!12353 = !DILocation(line: 239, column: 32, scope: !12332)
!12354 = !DILocation(line: 0, scope: !12332)
!12355 = !DILocation(line: 241, column: 8, scope: !12332)
!12356 = !DILocation(line: 246, column: 3, scope: !12332)
!12357 = !DILocation(line: 252, column: 9, scope: !12336)
!12358 = !DILocation(line: 255, column: 9, scope: !12336)
!12359 = !DILocation(line: 256, column: 11, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12336, file: !1907, line: 256, column: 7)
!12361 = !DILocation(line: 209, column: 37, scope: !12337)
!12362 = !DILocation(line: 256, column: 7, scope: !12336)
!12363 = !DILocation(line: 262, column: 1, scope: !12311)
!12364 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1907, file: !1907, line: 176, type: !12365, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12367)
!12365 = !DISubroutineType(types: !12366)
!12366 = !{!105, !113, !113, !113}
!12367 = !{!12368, !12369, !12370, !12371}
!12368 = !DILocalVariable(name: "pin", arg: 1, scope: !12364, file: !1907, line: 176, type: !113)
!12369 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12364, file: !1907, line: 176, type: !113)
!12370 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12364, file: !1907, line: 176, type: !113)
!12371 = !DILocalVariable(name: "port_device", scope: !12364, file: !1907, line: 178, type: !1837)
!12372 = !DILocation(line: 0, scope: !12364)
!12373 = !DILocation(line: 180, column: 22, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12364, file: !1907, line: 180, column: 6)
!12375 = !DILocation(line: 180, column: 6, scope: !12364)
!12376 = !DILocation(line: 180, column: 6, scope: !12374)
!12377 = !DILocation(line: 184, column: 16, scope: !12364)
!12378 = !DILocation(line: 186, column: 19, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12364, file: !1907, line: 186, column: 6)
!12380 = !DILocation(line: 186, column: 28, scope: !12379)
!12381 = !DILocation(line: 186, column: 33, scope: !12379)
!12382 = !DILocation(line: 186, column: 6, scope: !12364)
!12383 = !DILocation(line: 190, column: 43, scope: !12364)
!12384 = !DILocation(line: 190, column: 9, scope: !12364)
!12385 = !DILocation(line: 190, column: 2, scope: !12364)
!12386 = !DILocation(line: 191, column: 1, scope: !12364)
!12387 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !12388, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12390)
!12388 = !DISubroutineType(types: !12389)
!12389 = !{!492, !1837}
!12390 = !{!12391}
!12391 = !DILocalVariable(name: "dev", arg: 1, scope: !12387, file: !10291, line: 47, type: !1837)
!12392 = !DILocation(line: 0, scope: !12387)
!12393 = !DILocation(line: 55, column: 2, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12387, file: !10291, line: 55, column: 2)
!12395 = !{i64 2149438283}
!12396 = !DILocation(line: 56, column: 9, scope: !12387)
!12397 = !DILocation(line: 56, column: 2, scope: !12387)
!12398 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !12388, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !12399)
!12399 = !{!12400}
!12400 = !DILocalVariable(name: "dev", arg: 1, scope: !12398, file: !481, line: 730, type: !1837)
!12401 = !DILocation(line: 0, scope: !12398)
!12402 = !DILocation(line: 732, column: 9, scope: !12398)
!12403 = !DILocation(line: 732, column: 2, scope: !12398)
!12404 = distinct !DISubprogram(name: "SystemInit", scope: !1955, file: !1955, line: 167, type: !266, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, retainedNodes: !397)
!12405 = !DILocation(line: 182, column: 1, scope: !12404)
!12406 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1955, file: !1955, line: 220, type: !266, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1915, retainedNodes: !12407)
!12407 = !{!12408, !12409, !12410, !12411, !12412}
!12408 = !DILocalVariable(name: "tmp", scope: !12406, file: !1955, line: 222, type: !113)
!12409 = !DILocalVariable(name: "pllvco", scope: !12406, file: !1955, line: 222, type: !113)
!12410 = !DILocalVariable(name: "pllp", scope: !12406, file: !1955, line: 222, type: !113)
!12411 = !DILocalVariable(name: "pllsource", scope: !12406, file: !1955, line: 222, type: !113)
!12412 = !DILocalVariable(name: "pllm", scope: !12406, file: !1955, line: 222, type: !113)
!12413 = !DILocation(line: 0, scope: !12406)
!12414 = !DILocation(line: 225, column: 14, scope: !12406)
!12415 = !DILocation(line: 225, column: 19, scope: !12406)
!12416 = !DILocation(line: 227, column: 3, scope: !12406)
!12417 = !DILocation(line: 234, column: 7, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12406, file: !1955, line: 228, column: 3)
!12419 = !DILocation(line: 240, column: 25, scope: !12418)
!12420 = !DILocation(line: 241, column: 19, scope: !12418)
!12421 = !DILocation(line: 241, column: 27, scope: !12418)
!12422 = !DILocation(line: 243, column: 21, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12418, file: !1955, line: 243, column: 11)
!12424 = !DILocation(line: 0, scope: !12423)
!12425 = !DILocation(line: 254, column: 22, scope: !12418)
!12426 = !DILocation(line: 254, column: 62, scope: !12418)
!12427 = !DILocation(line: 255, column: 31, scope: !12418)
!12428 = !DILocation(line: 256, column: 7, scope: !12418)
!12429 = !DILocation(line: 0, scope: !12418)
!12430 = !DILocation(line: 263, column: 30, scope: !12406)
!12431 = !DILocation(line: 263, column: 52, scope: !12406)
!12432 = !DILocation(line: 263, column: 9, scope: !12406)
!12433 = !DILocation(line: 265, column: 19, scope: !12406)
!12434 = !DILocation(line: 266, column: 1, scope: !12406)
!12435 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12436, file: !12436, line: 200, type: !12437, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!12436 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12437 = !DISubroutineType(types: !12438)
!12438 = !{!12439}
!12439 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3003, line: 44, baseType: !3002)
!12440 = !DILocation(line: 202, column: 3, scope: !12435)
!12441 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12436, file: !12436, line: 219, type: !12442, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !12466)
!12442 = !DISubroutineType(types: !12443)
!12443 = !{!12439, !12444}
!12444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12445, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12446, line: 70, baseType: !12447)
!12446 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12446, line: 49, size: 384, elements: !12448)
!12448 = !{!12449, !12450, !12451, !12452, !12453, !12454, !12455}
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12447, file: !12446, line: 51, baseType: !113, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12447, file: !12446, line: 54, baseType: !113, size: 32, offset: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12447, file: !12446, line: 57, baseType: !113, size: 32, offset: 64)
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12447, file: !12446, line: 60, baseType: !113, size: 32, offset: 96)
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12447, file: !12446, line: 63, baseType: !113, size: 32, offset: 128)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12447, file: !12446, line: 66, baseType: !113, size: 32, offset: 160)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12447, file: !12446, line: 69, baseType: !12456, size: 192, offset: 192)
!12456 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12457, line: 73, baseType: !12458)
!12457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12457, line: 45, size: 192, elements: !12459)
!12459 = !{!12460, !12461, !12462, !12463, !12464, !12465}
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12458, file: !12457, line: 47, baseType: !113, size: 32)
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12458, file: !12457, line: 50, baseType: !113, size: 32, offset: 32)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12458, file: !12457, line: 53, baseType: !113, size: 32, offset: 64)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12458, file: !12457, line: 56, baseType: !113, size: 32, offset: 96)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12458, file: !12457, line: 60, baseType: !113, size: 32, offset: 128)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12458, file: !12457, line: 63, baseType: !113, size: 32, offset: 160)
!12466 = !{!12467, !12468, !12469, !12470, !12474}
!12467 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12441, file: !12436, line: 219, type: !12444)
!12468 = !DILocalVariable(name: "tickstart", scope: !12441, file: !12436, line: 221, type: !113)
!12469 = !DILocalVariable(name: "pll_config", scope: !12441, file: !12436, line: 221, type: !113)
!12470 = !DILocalVariable(name: "pwrclkchanged", scope: !12471, file: !12436, line: 391, type: !12473)
!12471 = distinct !DILexicalBlock(scope: !12472, file: !12436, line: 390, column: 3)
!12472 = distinct !DILexicalBlock(scope: !12441, file: !12436, line: 389, column: 6)
!12473 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !974, line: 188, baseType: !3009)
!12474 = !DILocalVariable(name: "tmpreg", scope: !12475, file: !12436, line: 400, type: !461)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !12436, line: 400, column: 7)
!12476 = distinct !DILexicalBlock(scope: !12477, file: !12436, line: 399, column: 5)
!12477 = distinct !DILexicalBlock(scope: !12471, file: !12436, line: 398, column: 8)
!12478 = !DILocation(line: 0, scope: !12441)
!12479 = !DILocation(line: 224, column: 24, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12441, file: !12436, line: 224, column: 6)
!12481 = !DILocation(line: 224, column: 6, scope: !12441)
!12482 = !DILocation(line: 232, column: 27, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12441, file: !12436, line: 232, column: 6)
!12484 = !DILocation(line: 232, column: 43, scope: !12483)
!12485 = !DILocation(line: 232, column: 69, scope: !12483)
!12486 = !DILocation(line: 232, column: 6, scope: !12441)
!12487 = !DILocation(line: 237, column: 9, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !12436, line: 237, column: 8)
!12489 = distinct !DILexicalBlock(scope: !12483, file: !12436, line: 233, column: 3)
!12490 = !DILocation(line: 237, column: 39, scope: !12488)
!12491 = !DILocation(line: 237, column: 60, scope: !12488)
!12492 = !DILocation(line: 238, column: 9, scope: !12488)
!12493 = !DILocation(line: 238, column: 39, scope: !12488)
!12494 = !DILocation(line: 238, column: 60, scope: !12488)
!12495 = !DILocation(line: 238, column: 70, scope: !12488)
!12496 = !DILocation(line: 238, column: 78, scope: !12488)
!12497 = !DILocation(line: 238, column: 100, scope: !12488)
!12498 = !DILocation(line: 237, column: 8, scope: !12489)
!12499 = !DILocation(line: 240, column: 11, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12501, file: !12436, line: 240, column: 10)
!12501 = distinct !DILexicalBlock(scope: !12488, file: !12436, line: 239, column: 5)
!12502 = !DILocation(line: 240, column: 57, scope: !12500)
!12503 = !DILocation(line: 240, column: 80, scope: !12500)
!12504 = !DILocation(line: 240, column: 89, scope: !12500)
!12505 = !DILocation(line: 240, column: 10, scope: !12501)
!12506 = !DILocation(line: 248, column: 7, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !12436, line: 248, column: 7)
!12508 = distinct !DILexicalBlock(scope: !12509, file: !12436, line: 248, column: 7)
!12509 = distinct !DILexicalBlock(scope: !12488, file: !12436, line: 246, column: 5)
!12510 = !DILocation(line: 248, column: 7, scope: !12508)
!12511 = !DILocation(line: 248, column: 7, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12507, file: !12436, line: 248, column: 7)
!12513 = !DILocation(line: 248, column: 7, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !12436, line: 248, column: 7)
!12515 = distinct !DILexicalBlock(scope: !12507, file: !12436, line: 248, column: 7)
!12516 = !DILocation(line: 248, column: 7, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12515, file: !12436, line: 248, column: 7)
!12518 = !DILocation(line: 0, scope: !12507)
!12519 = !DILocation(line: 251, column: 30, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12509, file: !12436, line: 251, column: 10)
!12521 = !DILocation(line: 251, column: 40, scope: !12520)
!12522 = !DILocation(line: 0, scope: !12520)
!12523 = !DILocation(line: 251, column: 10, scope: !12509)
!12524 = !DILocation(line: 257, column: 15, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12520, file: !12436, line: 252, column: 7)
!12526 = !DILocation(line: 257, column: 51, scope: !12525)
!12527 = !DILocation(line: 257, column: 9, scope: !12525)
!12528 = !DILocation(line: 259, column: 15, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !12436, line: 259, column: 14)
!12530 = distinct !DILexicalBlock(scope: !12525, file: !12436, line: 258, column: 9)
!12531 = !DILocation(line: 259, column: 29, scope: !12529)
!12532 = !DILocation(line: 259, column: 43, scope: !12529)
!12533 = !DILocation(line: 259, column: 14, scope: !12530)
!12534 = distinct !{!12534, !12527, !12535}
!12535 = !DILocation(line: 263, column: 9, scope: !12525)
!12536 = !DILocation(line: 271, column: 15, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12520, file: !12436, line: 266, column: 7)
!12538 = !DILocation(line: 271, column: 9, scope: !12537)
!12539 = !DILocation(line: 273, column: 15, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !12436, line: 273, column: 14)
!12541 = distinct !DILexicalBlock(scope: !12537, file: !12436, line: 272, column: 9)
!12542 = !DILocation(line: 273, column: 29, scope: !12540)
!12543 = !DILocation(line: 273, column: 43, scope: !12540)
!12544 = !DILocation(line: 273, column: 14, scope: !12541)
!12545 = distinct !{!12545, !12538, !12546}
!12546 = !DILocation(line: 277, column: 9, scope: !12537)
!12547 = !DILocation(line: 282, column: 27, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12441, file: !12436, line: 282, column: 6)
!12549 = !DILocation(line: 282, column: 43, scope: !12548)
!12550 = !DILocation(line: 282, column: 69, scope: !12548)
!12551 = !DILocation(line: 282, column: 6, scope: !12441)
!12552 = !DILocation(line: 289, column: 9, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !12436, line: 289, column: 8)
!12554 = distinct !DILexicalBlock(scope: !12548, file: !12436, line: 283, column: 3)
!12555 = !DILocation(line: 289, column: 39, scope: !12553)
!12556 = !DILocation(line: 289, column: 60, scope: !12553)
!12557 = !DILocation(line: 290, column: 9, scope: !12553)
!12558 = !DILocation(line: 290, column: 39, scope: !12553)
!12559 = !DILocation(line: 290, column: 60, scope: !12553)
!12560 = !DILocation(line: 290, column: 70, scope: !12553)
!12561 = !DILocation(line: 290, column: 78, scope: !12553)
!12562 = !DILocation(line: 290, column: 100, scope: !12553)
!12563 = !DILocation(line: 289, column: 8, scope: !12554)
!12564 = !DILocation(line: 293, column: 11, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12566, file: !12436, line: 293, column: 10)
!12566 = distinct !DILexicalBlock(scope: !12553, file: !12436, line: 291, column: 5)
!12567 = !DILocation(line: 293, column: 57, scope: !12565)
!12568 = !DILocation(line: 293, column: 80, scope: !12565)
!12569 = !DILocation(line: 293, column: 89, scope: !12565)
!12570 = !DILocation(line: 293, column: 10, scope: !12566)
!12571 = !DILocation(line: 307, column: 30, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !12436, line: 307, column: 10)
!12573 = distinct !DILexicalBlock(scope: !12553, file: !12436, line: 305, column: 5)
!12574 = !DILocation(line: 307, column: 39, scope: !12572)
!12575 = !DILocation(line: 307, column: 10, scope: !12573)
!12576 = !DILocation(line: 310, column: 9, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12572, file: !12436, line: 308, column: 7)
!12578 = !DILocation(line: 313, column: 21, scope: !12577)
!12579 = !DILocation(line: 316, column: 9, scope: !12577)
!12580 = !DILocation(line: 316, column: 15, scope: !12577)
!12581 = !DILocation(line: 316, column: 51, scope: !12577)
!12582 = !DILocation(line: 318, column: 15, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12584, file: !12436, line: 318, column: 14)
!12584 = distinct !DILexicalBlock(scope: !12577, file: !12436, line: 317, column: 9)
!12585 = !DILocation(line: 318, column: 29, scope: !12583)
!12586 = !DILocation(line: 318, column: 43, scope: !12583)
!12587 = !DILocation(line: 318, column: 14, scope: !12584)
!12588 = distinct !{!12588, !12579, !12589}
!12589 = !DILocation(line: 322, column: 9, scope: !12577)
!12590 = !DILocation(line: 330, column: 9, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12572, file: !12436, line: 328, column: 7)
!12592 = !DILocation(line: 333, column: 21, scope: !12591)
!12593 = !DILocation(line: 336, column: 9, scope: !12591)
!12594 = !DILocation(line: 336, column: 15, scope: !12591)
!12595 = !DILocation(line: 338, column: 15, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !12436, line: 338, column: 14)
!12597 = distinct !DILexicalBlock(scope: !12591, file: !12436, line: 337, column: 9)
!12598 = !DILocation(line: 338, column: 29, scope: !12596)
!12599 = !DILocation(line: 338, column: 43, scope: !12596)
!12600 = !DILocation(line: 338, column: 14, scope: !12597)
!12601 = distinct !{!12601, !12593, !12602}
!12602 = !DILocation(line: 342, column: 9, scope: !12591)
!12603 = !DILocation(line: 0, scope: !12553)
!12604 = !DILocation(line: 347, column: 27, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12441, file: !12436, line: 347, column: 6)
!12606 = !DILocation(line: 347, column: 43, scope: !12605)
!12607 = !DILocation(line: 347, column: 69, scope: !12605)
!12608 = !DILocation(line: 347, column: 6, scope: !12441)
!12609 = !DILocation(line: 353, column: 28, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12611, file: !12436, line: 353, column: 8)
!12611 = distinct !DILexicalBlock(scope: !12605, file: !12436, line: 348, column: 3)
!12612 = !DILocation(line: 353, column: 37, scope: !12610)
!12613 = !DILocation(line: 353, column: 8, scope: !12611)
!12614 = !DILocation(line: 356, column: 7, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12610, file: !12436, line: 354, column: 5)
!12616 = !DILocation(line: 359, column: 19, scope: !12615)
!12617 = !DILocation(line: 362, column: 7, scope: !12615)
!12618 = !DILocation(line: 362, column: 13, scope: !12615)
!12619 = !DILocation(line: 362, column: 49, scope: !12615)
!12620 = !DILocation(line: 364, column: 13, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !12436, line: 364, column: 12)
!12622 = distinct !DILexicalBlock(scope: !12615, file: !12436, line: 363, column: 7)
!12623 = !DILocation(line: 364, column: 27, scope: !12621)
!12624 = !DILocation(line: 364, column: 41, scope: !12621)
!12625 = !DILocation(line: 364, column: 12, scope: !12622)
!12626 = distinct !{!12626, !12617, !12627}
!12627 = !DILocation(line: 368, column: 7, scope: !12615)
!12628 = !DILocation(line: 373, column: 7, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12610, file: !12436, line: 371, column: 5)
!12630 = !DILocation(line: 376, column: 19, scope: !12629)
!12631 = !DILocation(line: 379, column: 7, scope: !12629)
!12632 = !DILocation(line: 379, column: 13, scope: !12629)
!12633 = !DILocation(line: 381, column: 13, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !12436, line: 381, column: 12)
!12635 = distinct !DILexicalBlock(scope: !12629, file: !12436, line: 380, column: 7)
!12636 = !DILocation(line: 381, column: 27, scope: !12634)
!12637 = !DILocation(line: 381, column: 41, scope: !12634)
!12638 = !DILocation(line: 381, column: 12, scope: !12635)
!12639 = distinct !{!12639, !12631, !12640}
!12640 = !DILocation(line: 385, column: 7, scope: !12629)
!12641 = !DILocation(line: 389, column: 27, scope: !12472)
!12642 = !DILocation(line: 389, column: 43, scope: !12472)
!12643 = !DILocation(line: 389, column: 69, scope: !12472)
!12644 = !DILocation(line: 389, column: 6, scope: !12441)
!12645 = !DILocation(line: 0, scope: !12471)
!12646 = !DILocation(line: 398, column: 8, scope: !12477)
!12647 = !DILocation(line: 398, column: 8, scope: !12471)
!12648 = !DILocation(line: 400, column: 7, scope: !12475)
!12649 = !DILocation(line: 400, column: 7, scope: !12476)
!12650 = !DILocation(line: 402, column: 5, scope: !12476)
!12651 = !DILocation(line: 404, column: 8, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12471, file: !12436, line: 404, column: 8)
!12653 = !DILocation(line: 404, column: 8, scope: !12471)
!12654 = !DILocation(line: 407, column: 7, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12652, file: !12436, line: 405, column: 5)
!12656 = !DILocation(line: 410, column: 19, scope: !12655)
!12657 = !DILocation(line: 412, column: 7, scope: !12655)
!12658 = !DILocation(line: 412, column: 13, scope: !12655)
!12659 = !DILocation(line: 414, column: 13, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12661, file: !12436, line: 414, column: 12)
!12661 = distinct !DILexicalBlock(scope: !12655, file: !12436, line: 413, column: 7)
!12662 = !DILocation(line: 414, column: 27, scope: !12660)
!12663 = !DILocation(line: 414, column: 40, scope: !12660)
!12664 = !DILocation(line: 414, column: 12, scope: !12661)
!12665 = distinct !{!12665, !12657, !12666}
!12666 = !DILocation(line: 418, column: 7, scope: !12655)
!12667 = !DILocation(line: 422, column: 5, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12436, line: 422, column: 5)
!12669 = distinct !DILexicalBlock(scope: !12471, file: !12436, line: 422, column: 5)
!12670 = !DILocation(line: 422, column: 5, scope: !12669)
!12671 = !DILocation(line: 422, column: 5, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12668, file: !12436, line: 422, column: 5)
!12673 = !DILocation(line: 422, column: 5, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12436, line: 422, column: 5)
!12675 = distinct !DILexicalBlock(scope: !12668, file: !12436, line: 422, column: 5)
!12676 = !DILocation(line: 422, column: 5, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12675, file: !12436, line: 422, column: 5)
!12678 = !DILocation(line: 0, scope: !12668)
!12679 = !DILocation(line: 424, column: 28, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12471, file: !12436, line: 424, column: 8)
!12681 = !DILocation(line: 424, column: 38, scope: !12680)
!12682 = !DILocation(line: 0, scope: !12680)
!12683 = !DILocation(line: 424, column: 8, scope: !12471)
!12684 = !DILocation(line: 430, column: 13, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12680, file: !12436, line: 425, column: 5)
!12686 = !DILocation(line: 430, column: 49, scope: !12685)
!12687 = !DILocation(line: 430, column: 7, scope: !12685)
!12688 = !DILocation(line: 432, column: 13, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !12436, line: 432, column: 12)
!12690 = distinct !DILexicalBlock(scope: !12685, file: !12436, line: 431, column: 7)
!12691 = !DILocation(line: 432, column: 27, scope: !12689)
!12692 = !DILocation(line: 432, column: 41, scope: !12689)
!12693 = !DILocation(line: 432, column: 12, scope: !12690)
!12694 = distinct !{!12694, !12687, !12695}
!12695 = !DILocation(line: 436, column: 7, scope: !12685)
!12696 = !DILocation(line: 444, column: 13, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12680, file: !12436, line: 439, column: 5)
!12698 = !DILocation(line: 444, column: 7, scope: !12697)
!12699 = !DILocation(line: 446, column: 13, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !12436, line: 446, column: 12)
!12701 = distinct !DILexicalBlock(scope: !12697, file: !12436, line: 445, column: 7)
!12702 = !DILocation(line: 446, column: 27, scope: !12700)
!12703 = !DILocation(line: 446, column: 41, scope: !12700)
!12704 = !DILocation(line: 446, column: 12, scope: !12701)
!12705 = distinct !{!12705, !12698, !12706}
!12706 = !DILocation(line: 450, column: 7, scope: !12697)
!12707 = !DILocation(line: 454, column: 8, scope: !12471)
!12708 = !DILocation(line: 456, column: 7, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !12436, line: 455, column: 5)
!12710 = distinct !DILexicalBlock(scope: !12471, file: !12436, line: 454, column: 8)
!12711 = !DILocation(line: 457, column: 5, scope: !12709)
!12712 = !DILocation(line: 462, column: 31, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12441, file: !12436, line: 462, column: 7)
!12714 = !DILocation(line: 462, column: 41, scope: !12713)
!12715 = !DILocation(line: 462, column: 7, scope: !12441)
!12716 = !DILocation(line: 465, column: 8, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !12436, line: 465, column: 8)
!12718 = distinct !DILexicalBlock(scope: !12713, file: !12436, line: 463, column: 3)
!12719 = !DILocation(line: 465, column: 38, scope: !12717)
!12720 = !DILocation(line: 465, column: 8, scope: !12718)
!12721 = !DILocation(line: 467, column: 44, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !12436, line: 467, column: 10)
!12723 = distinct !DILexicalBlock(scope: !12717, file: !12436, line: 466, column: 5)
!12724 = !DILocation(line: 0, scope: !12722)
!12725 = !DILocation(line: 467, column: 10, scope: !12723)
!12726 = !DILocation(line: 483, column: 15, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12722, file: !12436, line: 468, column: 7)
!12728 = !DILocation(line: 483, column: 9, scope: !12727)
!12729 = !DILocation(line: 485, column: 15, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12731, file: !12436, line: 485, column: 14)
!12731 = distinct !DILexicalBlock(scope: !12727, file: !12436, line: 484, column: 9)
!12732 = !DILocation(line: 485, column: 29, scope: !12730)
!12733 = !DILocation(line: 485, column: 43, scope: !12730)
!12734 = !DILocation(line: 485, column: 14, scope: !12731)
!12735 = distinct !{!12735, !12728, !12736}
!12736 = !DILocation(line: 489, column: 9, scope: !12727)
!12737 = !DILocation(line: 492, column: 9, scope: !12727)
!12738 = !DILocation(line: 498, column: 9, scope: !12727)
!12739 = !DILocation(line: 501, column: 21, scope: !12727)
!12740 = !DILocation(line: 504, column: 9, scope: !12727)
!12741 = !DILocation(line: 504, column: 15, scope: !12727)
!12742 = !DILocation(line: 504, column: 51, scope: !12727)
!12743 = !DILocation(line: 506, column: 15, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !12436, line: 506, column: 14)
!12745 = distinct !DILexicalBlock(scope: !12727, file: !12436, line: 505, column: 9)
!12746 = !DILocation(line: 506, column: 29, scope: !12744)
!12747 = !DILocation(line: 506, column: 43, scope: !12744)
!12748 = !DILocation(line: 506, column: 14, scope: !12745)
!12749 = distinct !{!12749, !12740, !12750}
!12750 = !DILocation(line: 510, column: 9, scope: !12727)
!12751 = !DILocation(line: 521, column: 15, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12722, file: !12436, line: 513, column: 7)
!12753 = !DILocation(line: 521, column: 9, scope: !12752)
!12754 = !DILocation(line: 523, column: 15, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !12436, line: 523, column: 14)
!12756 = distinct !DILexicalBlock(scope: !12752, file: !12436, line: 522, column: 9)
!12757 = !DILocation(line: 523, column: 29, scope: !12755)
!12758 = !DILocation(line: 523, column: 43, scope: !12755)
!12759 = !DILocation(line: 523, column: 14, scope: !12756)
!12760 = distinct !{!12760, !12753, !12761}
!12761 = !DILocation(line: 527, column: 9, scope: !12752)
!12762 = !DILocation(line: 533, column: 44, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12764, file: !12436, line: 533, column: 10)
!12764 = distinct !DILexicalBlock(scope: !12717, file: !12436, line: 531, column: 5)
!12765 = !DILocation(line: 533, column: 10, scope: !12764)
!12766 = !DILocation(line: 540, column: 27, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12763, file: !12436, line: 538, column: 7)
!12768 = !DILocation(line: 551, column: 14, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12767, file: !12436, line: 550, column: 13)
!12770 = !DILocation(line: 551, column: 81, scope: !12769)
!12771 = !DILocation(line: 551, column: 55, scope: !12769)
!12772 = !DILocation(line: 551, column: 92, scope: !12769)
!12773 = !DILocation(line: 552, column: 14, scope: !12769)
!12774 = !DILocation(line: 552, column: 80, scope: !12769)
!12775 = !DILocation(line: 552, column: 53, scope: !12769)
!12776 = !DILocation(line: 552, column: 111, scope: !12769)
!12777 = !DILocation(line: 553, column: 14, scope: !12769)
!12778 = !DILocation(line: 553, column: 80, scope: !12769)
!12779 = !DILocation(line: 553, column: 86, scope: !12769)
!12780 = !DILocation(line: 553, column: 53, scope: !12769)
!12781 = !DILocation(line: 553, column: 111, scope: !12769)
!12782 = !DILocation(line: 554, column: 14, scope: !12769)
!12783 = !DILocation(line: 554, column: 82, scope: !12769)
!12784 = !DILocation(line: 554, column: 101, scope: !12769)
!12785 = !DILocation(line: 554, column: 53, scope: !12769)
!12786 = !DILocation(line: 554, column: 126, scope: !12769)
!12787 = !DILocation(line: 555, column: 14, scope: !12769)
!12788 = !DILocation(line: 555, column: 80, scope: !12769)
!12789 = !DILocation(line: 555, column: 85, scope: !12769)
!12790 = !DILocation(line: 555, column: 53, scope: !12769)
!12791 = !DILocation(line: 550, column: 13, scope: !12767)
!12792 = !DILocation(line: 563, column: 3, scope: !12441)
!12793 = !DILocation(line: 564, column: 1, scope: !12441)
!12794 = !DISubprogram(name: "HAL_GetTick", scope: !12795, file: !12795, line: 234, type: !395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12795 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12796 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12436, file: !12436, line: 591, type: !12797, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !12808)
!12797 = !DISubroutineType(types: !12798)
!12798 = !{!12439, !12799, !113}
!12799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12800, size: 32)
!12800 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12446, line: 92, baseType: !12801)
!12801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12446, line: 75, size: 160, elements: !12802)
!12802 = !{!12803, !12804, !12805, !12806, !12807}
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12801, file: !12446, line: 77, baseType: !113, size: 32)
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12801, file: !12446, line: 80, baseType: !113, size: 32, offset: 32)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12801, file: !12446, line: 83, baseType: !113, size: 32, offset: 64)
!12806 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12801, file: !12446, line: 86, baseType: !113, size: 32, offset: 96)
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12801, file: !12446, line: 89, baseType: !113, size: 32, offset: 128)
!12808 = !{!12809, !12810, !12811}
!12809 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12796, file: !12436, line: 591, type: !12799)
!12810 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12796, file: !12436, line: 591, type: !113)
!12811 = !DILocalVariable(name: "tickstart", scope: !12796, file: !12436, line: 593, type: !113)
!12812 = !DILocation(line: 0, scope: !12796)
!12813 = !DILocation(line: 596, column: 24, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 596, column: 6)
!12815 = !DILocation(line: 596, column: 6, scope: !12796)
!12816 = !DILocation(line: 610, column: 17, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 610, column: 6)
!12818 = !DILocation(line: 610, column: 15, scope: !12817)
!12819 = !DILocation(line: 610, column: 6, scope: !12796)
!12820 = !DILocation(line: 613, column: 5, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12817, file: !12436, line: 611, column: 3)
!12822 = !DILocation(line: 617, column: 8, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12821, file: !12436, line: 617, column: 8)
!12824 = !DILocation(line: 617, column: 34, scope: !12823)
!12825 = !DILocation(line: 617, column: 8, scope: !12821)
!12826 = !DILocation(line: 624, column: 27, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 624, column: 6)
!12828 = !DILocation(line: 624, column: 38, scope: !12827)
!12829 = !DILocation(line: 624, column: 60, scope: !12827)
!12830 = !DILocation(line: 624, column: 6, scope: !12796)
!12831 = !DILocation(line: 628, column: 40, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12833, file: !12436, line: 628, column: 8)
!12833 = distinct !DILexicalBlock(scope: !12827, file: !12436, line: 625, column: 3)
!12834 = !DILocation(line: 628, column: 63, scope: !12832)
!12835 = !DILocation(line: 628, column: 8, scope: !12833)
!12836 = !DILocation(line: 630, column: 7, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12832, file: !12436, line: 629, column: 5)
!12838 = !DILocation(line: 633, column: 29, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12833, file: !12436, line: 633, column: 8)
!12840 = !DILocation(line: 631, column: 5, scope: !12837)
!12841 = !DILocation(line: 633, column: 40, scope: !12839)
!12842 = !DILocation(line: 633, column: 63, scope: !12839)
!12843 = !DILocation(line: 633, column: 8, scope: !12833)
!12844 = !DILocation(line: 635, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12839, file: !12436, line: 634, column: 5)
!12846 = !DILocation(line: 636, column: 5, scope: !12845)
!12847 = !DILocation(line: 639, column: 5, scope: !12833)
!12848 = !DILocation(line: 643, column: 27, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 643, column: 6)
!12850 = !DILocation(line: 640, column: 3, scope: !12833)
!12851 = !DILocation(line: 643, column: 38, scope: !12849)
!12852 = !DILocation(line: 643, column: 62, scope: !12849)
!12853 = !DILocation(line: 643, column: 6, scope: !12796)
!12854 = !DILocation(line: 648, column: 27, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !12436, line: 648, column: 8)
!12856 = distinct !DILexicalBlock(scope: !12849, file: !12436, line: 644, column: 3)
!12857 = !DILocation(line: 648, column: 8, scope: !12856)
!12858 = !DILocation(line: 651, column: 10, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !12436, line: 651, column: 10)
!12860 = distinct !DILexicalBlock(scope: !12855, file: !12436, line: 649, column: 5)
!12861 = !DILocation(line: 651, column: 46, scope: !12859)
!12862 = !DILocation(line: 651, column: 10, scope: !12860)
!12863 = !DILocation(line: 661, column: 10, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12865, file: !12436, line: 661, column: 10)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !12436, line: 659, column: 5)
!12866 = distinct !DILexicalBlock(scope: !12855, file: !12436, line: 657, column: 13)
!12867 = !DILocation(line: 661, column: 46, scope: !12864)
!12868 = !DILocation(line: 661, column: 10, scope: !12865)
!12869 = !DILocation(line: 670, column: 10, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12871, file: !12436, line: 670, column: 10)
!12871 = distinct !DILexicalBlock(scope: !12866, file: !12436, line: 668, column: 5)
!12872 = !DILocation(line: 670, column: 46, scope: !12870)
!12873 = !DILocation(line: 670, column: 10, scope: !12871)
!12874 = !DILocation(line: 676, column: 5, scope: !12856)
!12875 = !DILocation(line: 679, column: 17, scope: !12856)
!12876 = !DILocation(line: 681, column: 5, scope: !12856)
!12877 = !DILocation(line: 681, column: 12, scope: !12856)
!12878 = !DILocation(line: 681, column: 65, scope: !12856)
!12879 = !DILocation(line: 681, column: 78, scope: !12856)
!12880 = !DILocation(line: 681, column: 42, scope: !12856)
!12881 = !DILocation(line: 683, column: 12, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !12436, line: 683, column: 11)
!12883 = distinct !DILexicalBlock(scope: !12856, file: !12436, line: 682, column: 5)
!12884 = !DILocation(line: 683, column: 26, scope: !12882)
!12885 = !DILocation(line: 683, column: 39, scope: !12882)
!12886 = !DILocation(line: 683, column: 11, scope: !12883)
!12887 = distinct !{!12887, !12876, !12888}
!12888 = !DILocation(line: 687, column: 5, scope: !12856)
!12889 = !DILocation(line: 691, column: 17, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 691, column: 6)
!12891 = !DILocation(line: 691, column: 15, scope: !12890)
!12892 = !DILocation(line: 691, column: 6, scope: !12796)
!12893 = !DILocation(line: 694, column: 5, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12890, file: !12436, line: 692, column: 3)
!12895 = !DILocation(line: 698, column: 8, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12894, file: !12436, line: 698, column: 8)
!12897 = !DILocation(line: 698, column: 34, scope: !12896)
!12898 = !DILocation(line: 698, column: 8, scope: !12894)
!12899 = !DILocation(line: 705, column: 27, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 705, column: 6)
!12901 = !DILocation(line: 705, column: 38, scope: !12900)
!12902 = !DILocation(line: 705, column: 61, scope: !12900)
!12903 = !DILocation(line: 705, column: 6, scope: !12796)
!12904 = !DILocation(line: 708, column: 5, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12900, file: !12436, line: 706, column: 3)
!12906 = !DILocation(line: 712, column: 27, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12796, file: !12436, line: 712, column: 6)
!12908 = !DILocation(line: 709, column: 3, scope: !12905)
!12909 = !DILocation(line: 712, column: 38, scope: !12907)
!12910 = !DILocation(line: 712, column: 61, scope: !12907)
!12911 = !DILocation(line: 712, column: 6, scope: !12796)
!12912 = !DILocation(line: 715, column: 5, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12907, file: !12436, line: 713, column: 3)
!12914 = !DILocation(line: 716, column: 3, scope: !12913)
!12915 = !DILocation(line: 719, column: 21, scope: !12796)
!12916 = !DILocation(line: 719, column: 70, scope: !12796)
!12917 = !DILocation(line: 719, column: 91, scope: !12796)
!12918 = !DILocation(line: 719, column: 50, scope: !12796)
!12919 = !DILocation(line: 719, column: 47, scope: !12796)
!12920 = !DILocation(line: 719, column: 19, scope: !12796)
!12921 = !DILocation(line: 722, column: 17, scope: !12796)
!12922 = !DILocation(line: 722, column: 3, scope: !12796)
!12923 = !DILocation(line: 724, column: 3, scope: !12796)
!12924 = !DILocation(line: 725, column: 1, scope: !12796)
!12925 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12436, file: !12436, line: 885, type: !395, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !12926)
!12926 = !{!12927, !12928, !12929, !12930}
!12927 = !DILocalVariable(name: "pllm", scope: !12925, file: !12436, line: 887, type: !113)
!12928 = !DILocalVariable(name: "pllvco", scope: !12925, file: !12436, line: 887, type: !113)
!12929 = !DILocalVariable(name: "pllp", scope: !12925, file: !12436, line: 887, type: !113)
!12930 = !DILocalVariable(name: "sysclockfreq", scope: !12925, file: !12436, line: 888, type: !113)
!12931 = !DILocation(line: 0, scope: !12925)
!12932 = !DILocation(line: 891, column: 16, scope: !12925)
!12933 = !DILocation(line: 891, column: 21, scope: !12925)
!12934 = !DILocation(line: 891, column: 3, scope: !12925)
!12935 = !DILocation(line: 901, column: 7, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !12436, line: 899, column: 5)
!12937 = distinct !DILexicalBlock(scope: !12925, file: !12436, line: 892, column: 3)
!12938 = !DILocation(line: 907, column: 19, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12937, file: !12436, line: 904, column: 5)
!12940 = !DILocation(line: 907, column: 27, scope: !12939)
!12941 = !DILocation(line: 908, column: 10, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12939, file: !12436, line: 908, column: 10)
!12943 = !DILocation(line: 908, column: 40, scope: !12942)
!12944 = !DILocation(line: 0, scope: !12942)
!12945 = !DILocation(line: 918, column: 23, scope: !12939)
!12946 = !DILocation(line: 918, column: 82, scope: !12939)
!12947 = !DILocation(line: 920, column: 28, scope: !12939)
!12948 = !DILocation(line: 921, column: 7, scope: !12939)
!12949 = !DILocation(line: 0, scope: !12937)
!12950 = !DILocation(line: 929, column: 3, scope: !12925)
!12951 = !DISubprogram(name: "HAL_InitTick", scope: !12795, file: !12795, line: 223, type: !12952, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12952 = !DISubroutineType(types: !12953)
!12953 = !{!12439, !113}
!12954 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12436, file: !12436, line: 775, type: !12955, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !12957)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{null, !113, !113, !113}
!12957 = !{!12958, !12959, !12960, !12961, !12971, !12975}
!12958 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12954, file: !12436, line: 775, type: !113)
!12959 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12954, file: !12436, line: 775, type: !113)
!12960 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12954, file: !12436, line: 775, type: !113)
!12961 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12954, file: !12436, line: 777, type: !12962)
!12962 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12963, line: 62, baseType: !12964)
!12963 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12963, line: 46, size: 160, elements: !12965)
!12965 = !{!12966, !12967, !12968, !12969, !12970}
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12964, file: !12963, line: 48, baseType: !113, size: 32)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12964, file: !12963, line: 51, baseType: !113, size: 32, offset: 32)
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12964, file: !12963, line: 54, baseType: !113, size: 32, offset: 64)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12964, file: !12963, line: 57, baseType: !113, size: 32, offset: 96)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12964, file: !12963, line: 60, baseType: !113, size: 32, offset: 128)
!12971 = !DILocalVariable(name: "tmpreg", scope: !12972, file: !12436, line: 787, type: !461)
!12972 = distinct !DILexicalBlock(scope: !12973, file: !12436, line: 787, column: 5)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !12436, line: 783, column: 3)
!12974 = distinct !DILexicalBlock(scope: !12954, file: !12436, line: 782, column: 6)
!12975 = !DILocalVariable(name: "tmpreg", scope: !12976, file: !12436, line: 811, type: !461)
!12976 = distinct !DILexicalBlock(scope: !12977, file: !12436, line: 811, column: 5)
!12977 = distinct !DILexicalBlock(scope: !12974, file: !12436, line: 807, column: 3)
!12978 = !DILocation(line: 0, scope: !12954)
!12979 = !DILocation(line: 777, column: 3, scope: !12954)
!12980 = !DILocation(line: 777, column: 20, scope: !12954)
!12981 = !DILocation(line: 782, column: 15, scope: !12974)
!12982 = !DILocation(line: 782, column: 6, scope: !12954)
!12983 = !DILocation(line: 787, column: 5, scope: !12972)
!12984 = !DILocation(line: 787, column: 5, scope: !12973)
!12985 = !DILocation(line: 790, column: 21, scope: !12973)
!12986 = !DILocation(line: 790, column: 25, scope: !12973)
!12987 = !DILocation(line: 791, column: 21, scope: !12973)
!12988 = !DILocation(line: 791, column: 26, scope: !12973)
!12989 = !DILocation(line: 792, column: 21, scope: !12973)
!12990 = !DILocation(line: 792, column: 27, scope: !12973)
!12991 = !DILocation(line: 793, column: 21, scope: !12973)
!12992 = !DILocation(line: 793, column: 26, scope: !12973)
!12993 = !DILocation(line: 794, column: 21, scope: !12973)
!12994 = !DILocation(line: 794, column: 31, scope: !12973)
!12995 = !DILocation(line: 795, column: 5, scope: !12973)
!12996 = !DILocation(line: 798, column: 5, scope: !12973)
!12997 = !DILocation(line: 804, column: 3, scope: !12973)
!12998 = !DILocation(line: 811, column: 5, scope: !12976)
!12999 = !DILocation(line: 811, column: 5, scope: !12977)
!13000 = !DILocation(line: 814, column: 21, scope: !12977)
!13001 = !DILocation(line: 814, column: 25, scope: !12977)
!13002 = !DILocation(line: 815, column: 21, scope: !12977)
!13003 = !DILocation(line: 815, column: 26, scope: !12977)
!13004 = !DILocation(line: 816, column: 21, scope: !12977)
!13005 = !DILocation(line: 816, column: 27, scope: !12977)
!13006 = !DILocation(line: 817, column: 21, scope: !12977)
!13007 = !DILocation(line: 817, column: 26, scope: !12977)
!13008 = !DILocation(line: 818, column: 21, scope: !12977)
!13009 = !DILocation(line: 818, column: 31, scope: !12977)
!13010 = !DILocation(line: 819, column: 5, scope: !12977)
!13011 = !DILocation(line: 822, column: 5, scope: !12977)
!13012 = !DILocation(line: 0, scope: !12974)
!13013 = !DILocation(line: 830, column: 1, scope: !12954)
!13014 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12963, file: !12963, line: 224, type: !13015, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{null, !3070, !13017}
!13017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12962, size: 32)
!13018 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12436, file: !12436, line: 841, type: !266, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13019 = !DILocation(line: 843, column: 38, scope: !13018)
!13020 = !DILocation(line: 844, column: 1, scope: !13018)
!13021 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12436, file: !12436, line: 850, type: !266, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13022 = !DILocation(line: 852, column: 38, scope: !13021)
!13023 = !DILocation(line: 853, column: 1, scope: !13021)
!13024 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12436, file: !12436, line: 941, type: !395, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13025 = !DILocation(line: 943, column: 10, scope: !13024)
!13026 = !DILocation(line: 943, column: 3, scope: !13024)
!13027 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12436, file: !12436, line: 952, type: !395, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13028 = !DILocation(line: 955, column: 11, scope: !13027)
!13029 = !DILocation(line: 955, column: 56, scope: !13027)
!13030 = !DILocation(line: 955, column: 78, scope: !13027)
!13031 = !DILocation(line: 955, column: 36, scope: !13027)
!13032 = !DILocation(line: 955, column: 33, scope: !13027)
!13033 = !DILocation(line: 955, column: 3, scope: !13027)
!13034 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12436, file: !12436, line: 964, type: !395, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13035 = !DILocation(line: 967, column: 11, scope: !13034)
!13036 = !DILocation(line: 967, column: 55, scope: !13034)
!13037 = !DILocation(line: 967, column: 77, scope: !13034)
!13038 = !DILocation(line: 967, column: 35, scope: !13034)
!13039 = !DILocation(line: 967, column: 32, scope: !13034)
!13040 = !DILocation(line: 967, column: 3, scope: !13034)
!13041 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12436, file: !12436, line: 977, type: !13042, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !13044)
!13042 = !DISubroutineType(types: !13043)
!13043 = !{null, !12444}
!13044 = !{!13045}
!13045 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13041, file: !12436, line: 977, type: !12444)
!13046 = !DILocation(line: 0, scope: !13041)
!13047 = !DILocation(line: 980, column: 22, scope: !13041)
!13048 = !DILocation(line: 980, column: 37, scope: !13041)
!13049 = !DILocation(line: 983, column: 12, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13041, file: !12436, line: 983, column: 6)
!13051 = !DILocation(line: 983, column: 15, scope: !13050)
!13052 = !DILocation(line: 983, column: 31, scope: !13050)
!13053 = !DILocation(line: 983, column: 6, scope: !13041)
!13054 = !DILocation(line: 985, column: 24, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !12436, line: 984, column: 3)
!13056 = !DILocation(line: 985, column: 33, scope: !13055)
!13057 = !DILocation(line: 986, column: 3, scope: !13055)
!13058 = !DILocation(line: 987, column: 17, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13050, file: !12436, line: 987, column: 11)
!13060 = !DILocation(line: 987, column: 20, scope: !13059)
!13061 = !DILocation(line: 987, column: 35, scope: !13059)
!13062 = !DILocation(line: 0, scope: !13059)
!13063 = !DILocation(line: 987, column: 11, scope: !13050)
!13064 = !DILocation(line: 989, column: 33, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13059, file: !12436, line: 988, column: 3)
!13066 = !DILocation(line: 990, column: 3, scope: !13065)
!13067 = !DILocation(line: 993, column: 33, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13059, file: !12436, line: 992, column: 3)
!13069 = !DILocation(line: 997, column: 12, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13041, file: !12436, line: 997, column: 6)
!13071 = !DILocation(line: 997, column: 15, scope: !13070)
!13072 = !DILocation(line: 1003, column: 24, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13070, file: !12436, line: 1002, column: 3)
!13074 = !DILocation(line: 1003, column: 33, scope: !13073)
!13075 = !DILocation(line: 1006, column: 61, scope: !13041)
!13076 = !DILocation(line: 1006, column: 81, scope: !13041)
!13077 = !DILocation(line: 1006, column: 22, scope: !13041)
!13078 = !DILocation(line: 1006, column: 42, scope: !13041)
!13079 = !DILocation(line: 1009, column: 12, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13041, file: !12436, line: 1009, column: 6)
!13081 = !DILocation(line: 1009, column: 17, scope: !13080)
!13082 = !DILocation(line: 1009, column: 35, scope: !13080)
!13083 = !DILocation(line: 1009, column: 6, scope: !13041)
!13084 = !DILocation(line: 1011, column: 24, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13080, file: !12436, line: 1010, column: 3)
!13086 = !DILocation(line: 1011, column: 33, scope: !13085)
!13087 = !DILocation(line: 1012, column: 3, scope: !13085)
!13088 = !DILocation(line: 1013, column: 17, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13080, file: !12436, line: 1013, column: 11)
!13090 = !DILocation(line: 1013, column: 22, scope: !13089)
!13091 = !DILocation(line: 1013, column: 39, scope: !13089)
!13092 = !DILocation(line: 0, scope: !13089)
!13093 = !DILocation(line: 1013, column: 11, scope: !13080)
!13094 = !DILocation(line: 1015, column: 33, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13089, file: !12436, line: 1014, column: 3)
!13096 = !DILocation(line: 1016, column: 3, scope: !13095)
!13097 = !DILocation(line: 1019, column: 33, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13089, file: !12436, line: 1018, column: 3)
!13099 = !DILocation(line: 1023, column: 12, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13041, file: !12436, line: 1023, column: 6)
!13101 = !DILocation(line: 1023, column: 16, scope: !13100)
!13102 = !DILocation(line: 1029, column: 24, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13100, file: !12436, line: 1028, column: 3)
!13104 = !DILocation(line: 1029, column: 33, scope: !13103)
!13105 = !DILocation(line: 1033, column: 12, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13041, file: !12436, line: 1033, column: 6)
!13107 = !DILocation(line: 1033, column: 15, scope: !13106)
!13108 = !DILocation(line: 1033, column: 30, scope: !13106)
!13109 = !DILocation(line: 1033, column: 6, scope: !13041)
!13110 = !DILocation(line: 1039, column: 28, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13106, file: !12436, line: 1038, column: 3)
!13112 = !DILocation(line: 1039, column: 37, scope: !13111)
!13113 = !DILocation(line: 1041, column: 54, scope: !13041)
!13114 = !DILocation(line: 1041, column: 62, scope: !13041)
!13115 = !DILocation(line: 1041, column: 26, scope: !13041)
!13116 = !DILocation(line: 1041, column: 36, scope: !13041)
!13117 = !DILocation(line: 1042, column: 49, scope: !13041)
!13118 = !DILocation(line: 1042, column: 57, scope: !13041)
!13119 = !DILocation(line: 1042, column: 26, scope: !13041)
!13120 = !DILocation(line: 1042, column: 31, scope: !13041)
!13121 = !DILocation(line: 1043, column: 50, scope: !13041)
!13122 = !DILocation(line: 1043, column: 78, scope: !13041)
!13123 = !DILocation(line: 1043, column: 26, scope: !13041)
!13124 = !DILocation(line: 1043, column: 31, scope: !13041)
!13125 = !DILocation(line: 1044, column: 52, scope: !13041)
!13126 = !DILocation(line: 1044, column: 102, scope: !13041)
!13127 = !DILocation(line: 1044, column: 109, scope: !13041)
!13128 = !DILocation(line: 1044, column: 26, scope: !13041)
!13129 = !DILocation(line: 1044, column: 31, scope: !13041)
!13130 = !DILocation(line: 1045, column: 50, scope: !13041)
!13131 = !DILocation(line: 1045, column: 78, scope: !13041)
!13132 = !DILocation(line: 1045, column: 26, scope: !13041)
!13133 = !DILocation(line: 1045, column: 31, scope: !13041)
!13134 = !DILocation(line: 1046, column: 1, scope: !13041)
!13135 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12436, file: !12436, line: 1056, type: !13136, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !13138)
!13136 = !DISubroutineType(types: !13137)
!13137 = !{null, !12799, !1027}
!13138 = !{!13139, !13140}
!13139 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13135, file: !12436, line: 1056, type: !12799)
!13140 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13135, file: !12436, line: 1056, type: !1027)
!13141 = !DILocation(line: 0, scope: !13135)
!13142 = !DILocation(line: 1059, column: 22, scope: !13135)
!13143 = !DILocation(line: 1059, column: 32, scope: !13135)
!13144 = !DILocation(line: 1062, column: 53, scope: !13135)
!13145 = !DILocation(line: 1062, column: 58, scope: !13135)
!13146 = !DILocation(line: 1062, column: 22, scope: !13135)
!13147 = !DILocation(line: 1062, column: 35, scope: !13135)
!13148 = !DILocation(line: 1065, column: 54, scope: !13135)
!13149 = !DILocation(line: 1065, column: 59, scope: !13135)
!13150 = !DILocation(line: 1065, column: 22, scope: !13135)
!13151 = !DILocation(line: 1065, column: 36, scope: !13135)
!13152 = !DILocation(line: 1068, column: 55, scope: !13135)
!13153 = !DILocation(line: 1068, column: 60, scope: !13135)
!13154 = !DILocation(line: 1068, column: 22, scope: !13135)
!13155 = !DILocation(line: 1068, column: 37, scope: !13135)
!13156 = !DILocation(line: 1071, column: 56, scope: !13135)
!13157 = !DILocation(line: 1071, column: 79, scope: !13135)
!13158 = !DILocation(line: 1071, column: 22, scope: !13135)
!13159 = !DILocation(line: 1071, column: 37, scope: !13135)
!13160 = !DILocation(line: 1074, column: 34, scope: !13135)
!13161 = !DILocation(line: 1074, column: 38, scope: !13135)
!13162 = !DILocation(line: 1074, column: 14, scope: !13135)
!13163 = !DILocation(line: 1075, column: 1, scope: !13135)
!13164 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12436, file: !12436, line: 1082, type: !266, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13165 = !DILocation(line: 1085, column: 6, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13164, file: !12436, line: 1085, column: 6)
!13167 = !DILocation(line: 1085, column: 6, scope: !13164)
!13168 = !DILocation(line: 1088, column: 5, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13166, file: !12436, line: 1086, column: 3)
!13170 = !DILocation(line: 1091, column: 5, scope: !13169)
!13171 = !DILocation(line: 1092, column: 3, scope: !13169)
!13172 = !DILocation(line: 1093, column: 1, scope: !13164)
!13173 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12436, file: !12436, line: 1099, type: !266, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !397)
!13174 = !DILocation(line: 1104, column: 1, scope: !13173)
!13175 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13176, file: !13176, line: 257, type: !7880, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13177)
!13176 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13177 = !{!13178}
!13178 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13175, file: !13176, line: 257, type: !113)
!13179 = !DILocation(line: 0, scope: !13175)
!13180 = !DILocation(line: 260, column: 3, scope: !13175)
!13181 = !DILocation(line: 261, column: 1, scope: !13175)
!13182 = distinct !DISubprogram(name: "LL_InitTick", scope: !13183, file: !13183, line: 260, type: !10793, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13184)
!13183 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13184 = !{!13185, !13186}
!13185 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13182, file: !13183, line: 260, type: !113)
!13186 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13182, file: !13183, line: 260, type: !113)
!13187 = !DILocation(line: 0, scope: !13182)
!13188 = !DILocation(line: 263, column: 46, scope: !13182)
!13189 = !DILocation(line: 263, column: 55, scope: !13182)
!13190 = !DILocation(line: 263, column: 18, scope: !13182)
!13191 = !DILocation(line: 264, column: 18, scope: !13182)
!13192 = !DILocation(line: 265, column: 18, scope: !13182)
!13193 = !DILocation(line: 267, column: 1, scope: !13182)
!13194 = distinct !DISubprogram(name: "LL_mDelay", scope: !13176, file: !13176, line: 273, type: !7880, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13195)
!13195 = !{!13196, !13197}
!13196 = !DILocalVariable(name: "Delay", arg: 1, scope: !13194, file: !13176, line: 273, type: !113)
!13197 = !DILocalVariable(name: "tmp", scope: !13194, file: !13176, line: 275, type: !461)
!13198 = !DILocation(line: 0, scope: !13194)
!13199 = !DILocation(line: 275, column: 3, scope: !13194)
!13200 = !DILocation(line: 275, column: 18, scope: !13194)
!13201 = !DILocation(line: 275, column: 33, scope: !13194)
!13202 = !DILocation(line: 277, column: 10, scope: !13194)
!13203 = !DILocation(line: 280, column: 12, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13194, file: !13176, line: 280, column: 6)
!13205 = !DILocation(line: 285, column: 3, scope: !13194)
!13206 = !DILocation(line: 287, column: 18, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13208, file: !13176, line: 287, column: 8)
!13208 = distinct !DILexicalBlock(scope: !13194, file: !13176, line: 286, column: 3)
!13209 = !DILocation(line: 292, column: 1, scope: !13194)
!13210 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13176, file: !13176, line: 323, type: !7880, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13211)
!13211 = !{!13212}
!13212 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13210, file: !13176, line: 323, type: !113)
!13213 = !DILocation(line: 0, scope: !13210)
!13214 = !DILocation(line: 326, column: 19, scope: !13210)
!13215 = !DILocation(line: 327, column: 1, scope: !13210)
!13216 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13176, file: !13176, line: 338, type: !13217, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13220)
!13217 = !DISubroutineType(types: !13218)
!13218 = !{!13219, !113}
!13219 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !974, line: 201, baseType: !973)
!13220 = !{!13221, !13222, !13223, !13224, !13225}
!13221 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13216, file: !13176, line: 338, type: !113)
!13222 = !DILocalVariable(name: "timeout", scope: !13216, file: !13176, line: 340, type: !113)
!13223 = !DILocalVariable(name: "getlatency", scope: !13216, file: !13176, line: 341, type: !113)
!13224 = !DILocalVariable(name: "latency", scope: !13216, file: !13176, line: 342, type: !113)
!13225 = !DILocalVariable(name: "status", scope: !13216, file: !13176, line: 343, type: !13219)
!13226 = !DILocation(line: 0, scope: !13216)
!13227 = !DILocation(line: 347, column: 21, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13216, file: !13176, line: 347, column: 6)
!13229 = !DILocation(line: 347, column: 6, scope: !13216)
!13230 = !DILocation(line: 353, column: 8, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13232, file: !13176, line: 353, column: 8)
!13232 = distinct !DILexicalBlock(scope: !13228, file: !13176, line: 352, column: 3)
!13233 = !DILocation(line: 353, column: 40, scope: !13231)
!13234 = !DILocation(line: 353, column: 8, scope: !13232)
!13235 = !DILocation(line: 356, column: 26, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !13176, line: 356, column: 10)
!13237 = distinct !DILexicalBlock(scope: !13231, file: !13176, line: 354, column: 5)
!13238 = !DILocation(line: 356, column: 55, scope: !13236)
!13239 = !DILocation(line: 362, column: 55, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13237, file: !13176, line: 362, column: 10)
!13241 = !DILocation(line: 368, column: 55, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13237, file: !13176, line: 368, column: 10)
!13243 = !DILocation(line: 374, column: 26, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13237, file: !13176, line: 374, column: 10)
!13245 = !DILocation(line: 374, column: 55, scope: !13244)
!13246 = !DILocation(line: 380, column: 28, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13248, file: !13176, line: 380, column: 12)
!13248 = distinct !DILexicalBlock(scope: !13244, file: !13176, line: 379, column: 7)
!13249 = !DILocation(line: 380, column: 57, scope: !13247)
!13250 = !DILocation(line: 387, column: 8, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13232, file: !13176, line: 387, column: 8)
!13252 = !DILocation(line: 387, column: 40, scope: !13251)
!13253 = !DILocation(line: 387, column: 8, scope: !13232)
!13254 = !DILocation(line: 396, column: 26, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13256, file: !13176, line: 396, column: 10)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !13176, line: 388, column: 5)
!13257 = !DILocation(line: 396, column: 55, scope: !13255)
!13258 = !DILocation(line: 402, column: 26, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13256, file: !13176, line: 402, column: 10)
!13260 = !DILocation(line: 402, column: 55, scope: !13259)
!13261 = !DILocation(line: 407, column: 26, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13256, file: !13176, line: 407, column: 10)
!13263 = !DILocation(line: 407, column: 55, scope: !13262)
!13264 = !DILocation(line: 413, column: 28, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13266, file: !13176, line: 413, column: 12)
!13266 = distinct !DILexicalBlock(scope: !13262, file: !13176, line: 412, column: 7)
!13267 = !DILocation(line: 413, column: 57, scope: !13265)
!13268 = !DILocation(line: 0, scope: !13232)
!13269 = !DILocation(line: 444, column: 5, scope: !13232)
!13270 = !DILocation(line: 448, column: 5, scope: !13232)
!13271 = !DILocation(line: 451, column: 18, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13232, file: !13176, line: 449, column: 5)
!13273 = !DILocation(line: 452, column: 12, scope: !13272)
!13274 = !DILocation(line: 453, column: 26, scope: !13232)
!13275 = !DILocation(line: 453, column: 38, scope: !13232)
!13276 = !DILocation(line: 453, column: 5, scope: !13272)
!13277 = distinct !{!13277, !13270, !13278}
!13278 = !DILocation(line: 453, column: 54, scope: !13232)
!13279 = !DILocation(line: 0, scope: !13228)
!13280 = !DILocation(line: 464, column: 3, scope: !13216)
!13281 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13282, file: !13282, line: 519, type: !395, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13282 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13283 = !DILocation(line: 521, column: 21, scope: !13281)
!13284 = !DILocation(line: 521, column: 3, scope: !13281)
!13285 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7488, file: !7488, line: 1543, type: !7880, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13286)
!13286 = !{!13287}
!13287 = !DILocalVariable(name: "Latency", arg: 1, scope: !13285, file: !7488, line: 1543, type: !113)
!13288 = !DILocation(line: 0, scope: !13285)
!13289 = !DILocation(line: 1545, column: 3, scope: !13285)
!13290 = !DILocation(line: 1546, column: 1, scope: !13285)
!13291 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7488, file: !7488, line: 1569, type: !395, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13292 = !DILocation(line: 1571, column: 21, scope: !13291)
!13293 = !DILocation(line: 1571, column: 3, scope: !13291)
!13294 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13176, file: !13176, line: 483, type: !13295, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13311)
!13295 = !DISubroutineType(types: !13296)
!13296 = !{!13219, !13297, !13304}
!13297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13298, size: 32)
!13298 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13183, line: 114, baseType: !13299)
!13299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13183, line: 94, size: 96, elements: !13300)
!13300 = !{!13301, !13302, !13303}
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13299, file: !13183, line: 96, baseType: !113, size: 32)
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13299, file: !13183, line: 102, baseType: !113, size: 32, offset: 32)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13299, file: !13183, line: 109, baseType: !113, size: 32, offset: 64)
!13304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13305, size: 32)
!13305 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13183, line: 139, baseType: !13306)
!13306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13183, line: 119, size: 96, elements: !13307)
!13307 = !{!13308, !13309, !13310}
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13306, file: !13183, line: 121, baseType: !113, size: 32)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13306, file: !13183, line: 127, baseType: !113, size: 32, offset: 32)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13306, file: !13183, line: 133, baseType: !113, size: 32, offset: 64)
!13311 = !{!13312, !13313, !13314, !13315}
!13312 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13294, file: !13176, line: 483, type: !13297)
!13313 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13294, file: !13176, line: 484, type: !13304)
!13314 = !DILocalVariable(name: "status", scope: !13294, file: !13176, line: 486, type: !13219)
!13315 = !DILocalVariable(name: "pllfreq", scope: !13294, file: !13176, line: 487, type: !113)
!13316 = !DILocation(line: 0, scope: !13294)
!13317 = !DILocation(line: 490, column: 6, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13294, file: !13176, line: 490, column: 6)
!13319 = !DILocation(line: 490, column: 25, scope: !13318)
!13320 = !DILocation(line: 490, column: 6, scope: !13294)
!13321 = !DILocation(line: 493, column: 15, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13318, file: !13176, line: 491, column: 3)
!13323 = !DILocation(line: 496, column: 8, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13322, file: !13176, line: 496, column: 8)
!13325 = !DILocation(line: 496, column: 29, scope: !13324)
!13326 = !DILocation(line: 496, column: 8, scope: !13322)
!13327 = !DILocation(line: 498, column: 7, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13324, file: !13176, line: 497, column: 5)
!13329 = !DILocation(line: 499, column: 7, scope: !13328)
!13330 = !DILocation(line: 499, column: 14, scope: !13328)
!13331 = !DILocation(line: 499, column: 35, scope: !13328)
!13332 = distinct !{!13332, !13329, !13333}
!13333 = !DILocation(line: 502, column: 7, scope: !13328)
!13334 = !DILocation(line: 506, column: 76, scope: !13322)
!13335 = !DILocation(line: 506, column: 103, scope: !13322)
!13336 = !DILocation(line: 507, column: 54, scope: !13322)
!13337 = !DILocation(line: 506, column: 5, scope: !13322)
!13338 = !DILocation(line: 510, column: 14, scope: !13322)
!13339 = !DILocation(line: 511, column: 3, scope: !13322)
!13340 = !DILocation(line: 0, scope: !13318)
!13341 = !DILocation(line: 518, column: 3, scope: !13294)
!13342 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13176, file: !13176, line: 642, type: !13343, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13345)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{!13219}
!13345 = !{!13346}
!13346 = !DILocalVariable(name: "status", scope: !13342, file: !13176, line: 644, type: !13219)
!13347 = !DILocation(line: 0, scope: !13342)
!13348 = !DILocation(line: 647, column: 6, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13342, file: !13176, line: 647, column: 6)
!13350 = !DILocation(line: 647, column: 27, scope: !13349)
!13351 = !DILocation(line: 663, column: 6, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13342, file: !13176, line: 663, column: 6)
!13353 = !DILocation(line: 663, column: 30, scope: !13352)
!13354 = !DILocation(line: 663, column: 6, scope: !13342)
!13355 = !DILocation(line: 669, column: 3, scope: !13342)
!13356 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13176, file: !13176, line: 611, type: !13357, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13359)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{!113, !113, !13297}
!13359 = !{!13360, !13361, !13362}
!13360 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13356, file: !13176, line: 611, type: !113)
!13361 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13356, file: !13176, line: 611, type: !13297)
!13362 = !DILocalVariable(name: "pllfreq", scope: !13356, file: !13176, line: 613, type: !113)
!13363 = !DILocation(line: 0, scope: !13356)
!13364 = !DILocation(line: 622, column: 56, scope: !13356)
!13365 = !DILocation(line: 622, column: 61, scope: !13356)
!13366 = !DILocation(line: 622, column: 32, scope: !13356)
!13367 = !DILocation(line: 626, column: 45, scope: !13356)
!13368 = !DILocation(line: 626, column: 50, scope: !13356)
!13369 = !DILocation(line: 626, column: 21, scope: !13356)
!13370 = !DILocation(line: 630, column: 47, scope: !13356)
!13371 = !DILocation(line: 630, column: 82, scope: !13356)
!13372 = !DILocation(line: 630, column: 21, scope: !13356)
!13373 = !DILocation(line: 633, column: 3, scope: !13356)
!13374 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10119, file: !10119, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13375 = !DILocation(line: 3009, column: 11, scope: !13374)
!13376 = !DILocation(line: 3009, column: 44, scope: !13374)
!13377 = !DILocation(line: 3009, column: 3, scope: !13374)
!13378 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10119, file: !10119, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13379 = !DILocation(line: 2989, column: 3, scope: !13378)
!13380 = !DILocation(line: 2990, column: 1, scope: !13378)
!13381 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10119, file: !10119, line: 4304, type: !10253, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13382)
!13382 = !{!13383, !13384, !13385, !13386}
!13383 = !DILocalVariable(name: "Source", arg: 1, scope: !13381, file: !10119, line: 4304, type: !113)
!13384 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13381, file: !10119, line: 4304, type: !113)
!13385 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13381, file: !10119, line: 4304, type: !113)
!13386 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13381, file: !10119, line: 4304, type: !113)
!13387 = !DILocation(line: 0, scope: !13381)
!13388 = !DILocation(line: 4306, column: 3, scope: !13381)
!13389 = !DILocation(line: 4308, column: 3, scope: !13381)
!13390 = !DILocation(line: 4312, column: 1, scope: !13381)
!13391 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13176, file: !13176, line: 681, type: !13392, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13394)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!13219, !113, !13304}
!13394 = !{!13395, !13396, !13397, !13398}
!13395 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13391, file: !13176, line: 681, type: !113)
!13396 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13391, file: !13176, line: 681, type: !13304)
!13397 = !DILocalVariable(name: "status", scope: !13391, file: !13176, line: 683, type: !13219)
!13398 = !DILocalVariable(name: "hclk_frequency", scope: !13391, file: !13176, line: 684, type: !113)
!13399 = !DILocation(line: 0, scope: !13391)
!13400 = !DILocation(line: 691, column: 20, scope: !13391)
!13401 = !DILocation(line: 694, column: 6, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13391, file: !13176, line: 694, column: 6)
!13403 = !DILocation(line: 694, column: 22, scope: !13402)
!13404 = !DILocation(line: 694, column: 6, scope: !13391)
!13405 = !DILocation(line: 697, column: 14, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13402, file: !13176, line: 695, column: 3)
!13407 = !DILocation(line: 701, column: 13, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13391, file: !13176, line: 701, column: 6)
!13409 = !DILocation(line: 701, column: 6, scope: !13391)
!13410 = !DILocation(line: 704, column: 5, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13408, file: !13176, line: 702, column: 3)
!13412 = !DILocation(line: 705, column: 5, scope: !13411)
!13413 = !DILocation(line: 705, column: 12, scope: !13411)
!13414 = !DILocation(line: 705, column: 33, scope: !13411)
!13415 = distinct !{!13415, !13412, !13416}
!13416 = !DILocation(line: 708, column: 5, scope: !13411)
!13417 = !DILocation(line: 711, column: 49, scope: !13411)
!13418 = !DILocation(line: 711, column: 5, scope: !13411)
!13419 = !DILocation(line: 712, column: 5, scope: !13411)
!13420 = !DILocation(line: 713, column: 5, scope: !13411)
!13421 = !DILocation(line: 713, column: 12, scope: !13411)
!13422 = !DILocation(line: 713, column: 37, scope: !13411)
!13423 = distinct !{!13423, !13420, !13424}
!13424 = !DILocation(line: 716, column: 5, scope: !13411)
!13425 = !DILocation(line: 719, column: 50, scope: !13411)
!13426 = !DILocation(line: 719, column: 5, scope: !13411)
!13427 = !DILocation(line: 720, column: 50, scope: !13411)
!13428 = !DILocation(line: 720, column: 5, scope: !13411)
!13429 = !DILocation(line: 721, column: 3, scope: !13411)
!13430 = !DILocation(line: 724, column: 6, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13391, file: !13176, line: 724, column: 6)
!13432 = !DILocation(line: 724, column: 22, scope: !13431)
!13433 = !DILocation(line: 724, column: 6, scope: !13391)
!13434 = !DILocation(line: 727, column: 14, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13431, file: !13176, line: 725, column: 3)
!13436 = !DILocation(line: 728, column: 3, scope: !13435)
!13437 = !DILocation(line: 731, column: 13, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13391, file: !13176, line: 731, column: 6)
!13439 = !DILocation(line: 731, column: 6, scope: !13391)
!13440 = !DILocation(line: 733, column: 5, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13438, file: !13176, line: 732, column: 3)
!13442 = !DILocation(line: 734, column: 3, scope: !13441)
!13443 = !DILocation(line: 736, column: 3, scope: !13391)
!13444 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10119, file: !10119, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13445 = !DILocation(line: 4186, column: 3, scope: !13444)
!13446 = !DILocation(line: 4187, column: 1, scope: !13444)
!13447 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10119, file: !10119, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13448 = !DILocation(line: 4207, column: 11, scope: !13447)
!13449 = !DILocation(line: 4207, column: 44, scope: !13447)
!13450 = !DILocation(line: 4207, column: 3, scope: !13447)
!13451 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10119, file: !10119, line: 3224, type: !7880, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13452)
!13452 = !{!13453}
!13453 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13451, file: !10119, line: 3224, type: !113)
!13454 = !DILocation(line: 0, scope: !13451)
!13455 = !DILocation(line: 3226, column: 3, scope: !13451)
!13456 = !DILocation(line: 3227, column: 1, scope: !13451)
!13457 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10119, file: !10119, line: 3188, type: !7880, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13458)
!13458 = !{!13459}
!13459 = !DILocalVariable(name: "Source", arg: 1, scope: !13457, file: !10119, line: 3188, type: !113)
!13460 = !DILocation(line: 0, scope: !13457)
!13461 = !DILocation(line: 3190, column: 3, scope: !13457)
!13462 = !DILocation(line: 3191, column: 1, scope: !13457)
!13463 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10119, file: !10119, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13464 = !DILocation(line: 3206, column: 21, scope: !13463)
!13465 = !DILocation(line: 3206, column: 3, scope: !13463)
!13466 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10119, file: !10119, line: 3240, type: !7880, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13467)
!13467 = !{!13468}
!13468 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13466, file: !10119, line: 3240, type: !113)
!13469 = !DILocation(line: 0, scope: !13466)
!13470 = !DILocation(line: 3242, column: 3, scope: !13466)
!13471 = !DILocation(line: 3243, column: 1, scope: !13466)
!13472 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10119, file: !10119, line: 3256, type: !7880, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13473)
!13473 = !{!13474}
!13474 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13472, file: !10119, line: 3256, type: !113)
!13475 = !DILocation(line: 0, scope: !13472)
!13476 = !DILocation(line: 3258, column: 3, scope: !13472)
!13477 = !DILocation(line: 3259, column: 1, scope: !13472)
!13478 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10119, file: !10119, line: 5153, type: !395, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13479 = !DILocation(line: 5155, column: 11, scope: !13478)
!13480 = !DILocation(line: 5155, column: 47, scope: !13478)
!13481 = !DILocation(line: 5155, column: 3, scope: !13478)
!13482 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13176, file: !13176, line: 540, type: !13483, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !13485)
!13483 = !DISubroutineType(types: !13484)
!13484 = !{!13219, !113, !113, !13297, !13304}
!13485 = !{!13486, !13487, !13488, !13489, !13490, !13491}
!13486 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13482, file: !13176, line: 540, type: !113)
!13487 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13482, file: !13176, line: 540, type: !113)
!13488 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13482, file: !13176, line: 541, type: !13297)
!13489 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13482, file: !13176, line: 541, type: !13304)
!13490 = !DILocalVariable(name: "status", scope: !13482, file: !13176, line: 543, type: !13219)
!13491 = !DILocalVariable(name: "pllfreq", scope: !13482, file: !13176, line: 544, type: !113)
!13492 = !DILocation(line: 0, scope: !13482)
!13493 = !DILocation(line: 551, column: 6, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13482, file: !13176, line: 551, column: 6)
!13495 = !DILocation(line: 551, column: 25, scope: !13494)
!13496 = !DILocation(line: 551, column: 6, scope: !13482)
!13497 = !DILocation(line: 554, column: 15, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13494, file: !13176, line: 552, column: 3)
!13499 = !DILocation(line: 557, column: 8, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13498, file: !13176, line: 557, column: 8)
!13501 = !DILocation(line: 557, column: 29, scope: !13500)
!13502 = !DILocation(line: 557, column: 8, scope: !13498)
!13503 = !DILocation(line: 560, column: 20, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13505, file: !13176, line: 560, column: 10)
!13505 = distinct !DILexicalBlock(scope: !13500, file: !13176, line: 558, column: 5)
!13506 = !DILocation(line: 560, column: 10, scope: !13505)
!13507 = !DILocation(line: 562, column: 9, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13504, file: !13176, line: 561, column: 7)
!13509 = !DILocation(line: 563, column: 7, scope: !13508)
!13510 = !DILocation(line: 566, column: 9, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13504, file: !13176, line: 565, column: 7)
!13512 = !DILocation(line: 570, column: 7, scope: !13505)
!13513 = !DILocation(line: 571, column: 7, scope: !13505)
!13514 = !DILocation(line: 571, column: 14, scope: !13505)
!13515 = !DILocation(line: 571, column: 35, scope: !13505)
!13516 = distinct !{!13516, !13513, !13517}
!13517 = !DILocation(line: 574, column: 7, scope: !13505)
!13518 = !DILocation(line: 578, column: 76, scope: !13498)
!13519 = !DILocation(line: 578, column: 103, scope: !13498)
!13520 = !DILocation(line: 579, column: 54, scope: !13498)
!13521 = !DILocation(line: 578, column: 5, scope: !13498)
!13522 = !DILocation(line: 582, column: 14, scope: !13498)
!13523 = !DILocation(line: 583, column: 3, scope: !13498)
!13524 = !DILocation(line: 0, scope: !13494)
!13525 = !DILocation(line: 590, column: 3, scope: !13482)
!13526 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10119, file: !10119, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13527 = !DILocation(line: 2971, column: 11, scope: !13526)
!13528 = !DILocation(line: 2971, column: 44, scope: !13526)
!13529 = !DILocation(line: 2971, column: 3, scope: !13526)
!13530 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10119, file: !10119, line: 2929, type: !266, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13531 = !DILocation(line: 2931, column: 3, scope: !13530)
!13532 = !DILocation(line: 2932, column: 1, scope: !13530)
!13533 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10119, file: !10119, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13534 = !DILocation(line: 2941, column: 3, scope: !13533)
!13535 = !DILocation(line: 2942, column: 1, scope: !13533)
!13536 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10119, file: !10119, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3083, retainedNodes: !397)
!13537 = !DILocation(line: 2951, column: 3, scope: !13536)
!13538 = !DILocation(line: 2952, column: 1, scope: !13536)
!13539 = distinct !DISubprogram(name: "z_device_state_init", scope: !13540, file: !13540, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13541)
!13540 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13541 = !{!13542}
!13542 = !DILocalVariable(name: "dev", scope: !13539, file: !13540, line: 25, type: !13543)
!13543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13544, size: 32)
!13544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13545)
!13545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !13546)
!13546 = !{!13547, !13548, !13549, !13550, !13556, !13557}
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13545, file: !481, line: 380, baseType: !269, size: 32)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13545, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13545, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!13550 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13545, file: !481, line: 386, baseType: !13551, size: 32, offset: 96)
!13551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13552, size: 32)
!13552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !13553)
!13553 = !{!13554, !13555}
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13552, file: !481, line: 359, baseType: !169, size: 8)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13552, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13545, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!13557 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13545, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!13558 = !DILocation(line: 0, scope: !13539)
!13559 = !DILocation(line: 31, column: 1, scope: !13539)
!13560 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13540, file: !13540, line: 33, type: !13561, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13563)
!13561 = !DISubroutineType(types: !13562)
!13562 = !{!13543, !269}
!13563 = !{!13564, !13565}
!13564 = !DILocalVariable(name: "name", arg: 1, scope: !13560, file: !13540, line: 33, type: !269)
!13565 = !DILocalVariable(name: "dev", scope: !13560, file: !13540, line: 35, type: !13543)
!13566 = !DILocation(line: 0, scope: !13560)
!13567 = !DILocation(line: 40, column: 12, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13560, file: !13540, line: 40, column: 6)
!13569 = !DILocation(line: 40, column: 21, scope: !13568)
!13570 = !DILocation(line: 40, column: 25, scope: !13568)
!13571 = !DILocation(line: 40, column: 33, scope: !13568)
!13572 = !DILocation(line: 40, column: 6, scope: !13560)
!13573 = !DILocation(line: 55, column: 2, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13560, file: !13540, line: 55, column: 2)
!13575 = !DILocation(line: 50, column: 7, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !13540, line: 50, column: 7)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !13540, line: 49, column: 57)
!13578 = distinct !DILexicalBlock(scope: !13579, file: !13540, line: 49, column: 2)
!13579 = distinct !DILexicalBlock(scope: !13560, file: !13540, line: 49, column: 2)
!13580 = !DILocation(line: 50, column: 30, scope: !13576)
!13581 = !DILocation(line: 50, column: 39, scope: !13576)
!13582 = !DILocation(line: 50, column: 44, scope: !13576)
!13583 = !DILocation(line: 50, column: 7, scope: !13577)
!13584 = !DILocation(line: 49, column: 53, scope: !13578)
!13585 = !DILocation(line: 49, column: 33, scope: !13578)
!13586 = !DILocation(line: 49, column: 2, scope: !13579)
!13587 = distinct !{!13587, !13586, !13588}
!13588 = !DILocation(line: 53, column: 2, scope: !13579)
!13589 = !DILocation(line: 56, column: 7, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !13540, line: 56, column: 7)
!13591 = distinct !DILexicalBlock(scope: !13592, file: !13540, line: 55, column: 57)
!13592 = distinct !DILexicalBlock(scope: !13574, file: !13540, line: 55, column: 2)
!13593 = !DILocation(line: 56, column: 30, scope: !13590)
!13594 = !DILocation(line: 56, column: 52, scope: !13590)
!13595 = !DILocation(line: 56, column: 34, scope: !13590)
!13596 = !DILocation(line: 56, column: 58, scope: !13590)
!13597 = !DILocation(line: 56, column: 7, scope: !13591)
!13598 = !DILocation(line: 55, column: 53, scope: !13592)
!13599 = !DILocation(line: 55, column: 33, scope: !13592)
!13600 = distinct !{!13600, !13573, !13601}
!13601 = !DILocation(line: 59, column: 2, scope: !13574)
!13602 = !DILocation(line: 62, column: 1, scope: !13560)
!13603 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13540, file: !13540, line: 93, type: !13604, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13606)
!13604 = !DISubroutineType(types: !13605)
!13605 = !{!492, !13543}
!13606 = !{!13607}
!13607 = !DILocalVariable(name: "dev", arg: 1, scope: !13603, file: !13540, line: 93, type: !13543)
!13608 = !DILocation(line: 0, scope: !13603)
!13609 = !DILocation(line: 99, column: 10, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13603, file: !13540, line: 99, column: 6)
!13611 = !DILocation(line: 99, column: 6, scope: !13603)
!13612 = !DILocation(line: 103, column: 14, scope: !13603)
!13613 = !DILocation(line: 103, column: 21, scope: !13603)
!13614 = !DILocation(line: 103, column: 33, scope: !13603)
!13615 = !DILocation(line: 103, column: 49, scope: !13603)
!13616 = !DILocation(line: 103, column: 58, scope: !13603)
!13617 = !DILocation(line: 104, column: 1, scope: !13603)
!13618 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13540, file: !13540, line: 87, type: !13619, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13622)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{!111, !13621}
!13621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13543, size: 32)
!13622 = !{!13623}
!13623 = !DILocalVariable(name: "devices", arg: 1, scope: !13618, file: !13540, line: 87, type: !13621)
!13624 = !DILocation(line: 0, scope: !13618)
!13625 = !DILocation(line: 89, column: 11, scope: !13618)
!13626 = !DILocation(line: 90, column: 2, scope: !13618)
!13627 = distinct !DISubprogram(name: "device_required_foreach", scope: !13540, file: !13540, line: 125, type: !13628, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13634)
!13628 = !DISubroutineType(types: !13629)
!13629 = !{!105, !13543, !13630, !104}
!13630 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !481, line: 471, baseType: !13631)
!13631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13632, size: 32)
!13632 = !DISubroutineType(types: !13633)
!13633 = !{!105, !13543, !104}
!13634 = !{!13635, !13636, !13637, !13638, !13639}
!13635 = !DILocalVariable(name: "dev", arg: 1, scope: !13627, file: !13540, line: 125, type: !13543)
!13636 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13627, file: !13540, line: 126, type: !13630)
!13637 = !DILocalVariable(name: "context", arg: 3, scope: !13627, file: !13540, line: 127, type: !104)
!13638 = !DILocalVariable(name: "handle_count", scope: !13627, file: !13540, line: 129, type: !111)
!13639 = !DILocalVariable(name: "handles", scope: !13627, file: !13540, line: 130, type: !495)
!13640 = !DILocation(line: 0, scope: !13627)
!13641 = !DILocation(line: 129, column: 2, scope: !13627)
!13642 = !DILocation(line: 129, column: 9, scope: !13627)
!13643 = !DILocation(line: 130, column: 35, scope: !13627)
!13644 = !DILocation(line: 132, column: 33, scope: !13627)
!13645 = !DILocation(line: 132, column: 9, scope: !13627)
!13646 = !DILocation(line: 133, column: 1, scope: !13627)
!13647 = !DILocation(line: 132, column: 2, scope: !13627)
!13648 = distinct !DISubprogram(name: "device_required_handles_get", scope: !481, file: !481, line: 493, type: !13649, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13651)
!13649 = !DISubroutineType(types: !13650)
!13650 = !{!495, !13543, !2643}
!13651 = !{!13652, !13653, !13654, !13655}
!13652 = !DILocalVariable(name: "dev", arg: 1, scope: !13648, file: !481, line: 493, type: !13543)
!13653 = !DILocalVariable(name: "count", arg: 2, scope: !13648, file: !481, line: 493, type: !2643)
!13654 = !DILocalVariable(name: "rv", scope: !13648, file: !481, line: 495, type: !495)
!13655 = !DILocalVariable(name: "i", scope: !13656, file: !481, line: 498, type: !111)
!13656 = distinct !DILexicalBlock(scope: !13657, file: !481, line: 497, column: 18)
!13657 = distinct !DILexicalBlock(scope: !13648, file: !481, line: 497, column: 6)
!13658 = !DILocation(line: 0, scope: !13648)
!13659 = !DILocation(line: 495, column: 35, scope: !13648)
!13660 = !DILocation(line: 497, column: 9, scope: !13657)
!13661 = !DILocation(line: 497, column: 6, scope: !13648)
!13662 = !DILocation(line: 0, scope: !13656)
!13663 = !DILocation(line: 500, column: 11, scope: !13656)
!13664 = !DILocation(line: 500, column: 40, scope: !13656)
!13665 = !DILocation(line: 502, column: 4, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13656, file: !481, line: 501, column: 40)
!13667 = distinct !{!13667, !13668, !13669}
!13668 = !DILocation(line: 500, column: 3, scope: !13656)
!13669 = !DILocation(line: 503, column: 3, scope: !13656)
!13670 = !DILocation(line: 504, column: 10, scope: !13656)
!13671 = !DILocation(line: 505, column: 2, scope: !13656)
!13672 = !DILocation(line: 507, column: 2, scope: !13648)
!13673 = distinct !DISubprogram(name: "device_visitor", scope: !13540, file: !13540, line: 106, type: !13674, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13676)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{!105, !495, !111, !13630, !104}
!13676 = !{!13677, !13678, !13679, !13680, !13681, !13683, !13686, !13687}
!13677 = !DILocalVariable(name: "handles", arg: 1, scope: !13673, file: !13540, line: 106, type: !495)
!13678 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13673, file: !13540, line: 107, type: !111)
!13679 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13673, file: !13540, line: 108, type: !13630)
!13680 = !DILocalVariable(name: "context", arg: 4, scope: !13673, file: !13540, line: 109, type: !104)
!13681 = !DILocalVariable(name: "i", scope: !13682, file: !13540, line: 112, type: !111)
!13682 = distinct !DILexicalBlock(scope: !13673, file: !13540, line: 112, column: 2)
!13683 = !DILocalVariable(name: "dh", scope: !13684, file: !13540, line: 113, type: !497)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !13540, line: 112, column: 44)
!13685 = distinct !DILexicalBlock(scope: !13682, file: !13540, line: 112, column: 2)
!13686 = !DILocalVariable(name: "rdev", scope: !13684, file: !13540, line: 114, type: !13543)
!13687 = !DILocalVariable(name: "rc", scope: !13684, file: !13540, line: 115, type: !105)
!13688 = !DILocation(line: 0, scope: !13673)
!13689 = !DILocation(line: 0, scope: !13682)
!13690 = !DILocation(line: 112, column: 23, scope: !13685)
!13691 = !DILocation(line: 112, column: 2, scope: !13682)
!13692 = distinct !{!13692, !13691, !13693}
!13693 = !DILocation(line: 120, column: 2, scope: !13682)
!13694 = !DILocation(line: 113, column: 24, scope: !13684)
!13695 = !DILocation(line: 0, scope: !13684)
!13696 = !DILocation(line: 114, column: 31, scope: !13684)
!13697 = !DILocation(line: 115, column: 12, scope: !13684)
!13698 = !DILocation(line: 117, column: 10, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13684, file: !13540, line: 117, column: 7)
!13700 = !DILocation(line: 112, column: 39, scope: !13685)
!13701 = !DILocation(line: 123, column: 1, scope: !13673)
!13702 = distinct !DISubprogram(name: "device_from_handle", scope: !481, file: !481, line: 439, type: !13703, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13705)
!13703 = !DISubroutineType(types: !13704)
!13704 = !{!13543, !497}
!13705 = !{!13706, !13707, !13708}
!13706 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13702, file: !481, line: 439, type: !497)
!13707 = !DILocalVariable(name: "dev", scope: !13702, file: !481, line: 443, type: !13543)
!13708 = !DILocalVariable(name: "numdev", scope: !13702, file: !481, line: 444, type: !111)
!13709 = !DILocation(line: 0, scope: !13702)
!13710 = !DILocation(line: 446, column: 7, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13702, file: !481, line: 446, column: 6)
!13712 = !DILocation(line: 446, column: 18, scope: !13711)
!13713 = !DILocation(line: 446, column: 23, scope: !13711)
!13714 = !DILocation(line: 450, column: 2, scope: !13702)
!13715 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13540, file: !13540, line: 135, type: !13628, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13716)
!13716 = !{!13717, !13718, !13719, !13720, !13721}
!13717 = !DILocalVariable(name: "dev", arg: 1, scope: !13715, file: !13540, line: 135, type: !13543)
!13718 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13715, file: !13540, line: 136, type: !13630)
!13719 = !DILocalVariable(name: "context", arg: 3, scope: !13715, file: !13540, line: 137, type: !104)
!13720 = !DILocalVariable(name: "handle_count", scope: !13715, file: !13540, line: 139, type: !111)
!13721 = !DILocalVariable(name: "handles", scope: !13715, file: !13540, line: 140, type: !495)
!13722 = !DILocation(line: 0, scope: !13715)
!13723 = !DILocation(line: 139, column: 2, scope: !13715)
!13724 = !DILocation(line: 139, column: 9, scope: !13715)
!13725 = !DILocation(line: 140, column: 35, scope: !13715)
!13726 = !DILocation(line: 142, column: 33, scope: !13715)
!13727 = !DILocation(line: 142, column: 9, scope: !13715)
!13728 = !DILocation(line: 143, column: 1, scope: !13715)
!13729 = !DILocation(line: 142, column: 2, scope: !13715)
!13730 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !481, file: !481, line: 573, type: !13649, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3146, retainedNodes: !13731)
!13731 = !{!13732, !13733, !13734, !13735, !13736}
!13732 = !DILocalVariable(name: "dev", arg: 1, scope: !13730, file: !481, line: 573, type: !13543)
!13733 = !DILocalVariable(name: "count", arg: 2, scope: !13730, file: !481, line: 573, type: !2643)
!13734 = !DILocalVariable(name: "rv", scope: !13730, file: !481, line: 575, type: !495)
!13735 = !DILocalVariable(name: "region", scope: !13730, file: !481, line: 576, type: !111)
!13736 = !DILocalVariable(name: "i", scope: !13730, file: !481, line: 577, type: !111)
!13737 = !DILocation(line: 0, scope: !13730)
!13738 = !DILocation(line: 575, column: 35, scope: !13730)
!13739 = !DILocation(line: 579, column: 9, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13730, file: !481, line: 579, column: 6)
!13741 = !DILocation(line: 579, column: 6, scope: !13730)
!13742 = !DILocation(line: 582, column: 8, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13744, file: !481, line: 582, column: 8)
!13744 = distinct !DILexicalBlock(scope: !13745, file: !481, line: 581, column: 23)
!13745 = distinct !DILexicalBlock(scope: !13740, file: !481, line: 579, column: 18)
!13746 = !DILocation(line: 582, column: 12, scope: !13743)
!13747 = !DILocation(line: 585, column: 6, scope: !13744)
!13748 = !DILocation(line: 0, scope: !13745)
!13749 = !DILocation(line: 581, column: 17, scope: !13745)
!13750 = !DILocation(line: 581, column: 3, scope: !13745)
!13751 = !DILocation(line: 588, column: 10, scope: !13745)
!13752 = !DILocation(line: 588, column: 16, scope: !13745)
!13753 = !DILocation(line: 589, column: 4, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13745, file: !481, line: 588, column: 39)
!13755 = !DILocation(line: 588, column: 3, scope: !13745)
!13756 = distinct !{!13756, !13755, !13757}
!13757 = !DILocation(line: 590, column: 3, scope: !13745)
!13758 = !DILocation(line: 591, column: 10, scope: !13745)
!13759 = !DILocation(line: 592, column: 2, scope: !13745)
!13760 = !DILocation(line: 575, column: 25, scope: !13730)
!13761 = !DILocation(line: 594, column: 2, scope: !13730)
!13762 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1966, file: !1966, line: 49, type: !13763, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1963, retainedNodes: !397)
!13763 = !DISubroutineType(types: !13764)
!13764 = !{!428}
!13765 = !DILocation(line: 51, column: 10, scope: !13762)
!13766 = !DILocation(line: 51, column: 20, scope: !13762)
!13767 = !DILocation(line: 51, column: 2, scope: !13762)
!13768 = distinct !DISubprogram(name: "coredump", scope: !3153, file: !3153, line: 209, type: !13769, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13917)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{null, !32, !13771, !13815}
!13771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13772, size: 32)
!13772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13773)
!13773 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2773, line: 141, baseType: !13774)
!13774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2773, line: 97, size: 256, elements: !13775)
!13775 = !{!13776}
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13774, file: !2773, line: 107, baseType: !13777, size: 256)
!13777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2773, line: 98, size: 256, elements: !13778)
!13778 = !{!13779, !13784, !13789, !13794, !13799, !13804, !13809, !13814}
!13779 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 99, baseType: !13780, size: 32)
!13780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 99, size: 32, elements: !13781)
!13781 = !{!13782, !13783}
!13782 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13780, file: !2773, line: 99, baseType: !113, size: 32)
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13780, file: !2773, line: 99, baseType: !113, size: 32)
!13784 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 100, baseType: !13785, size: 32, offset: 32)
!13785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 100, size: 32, elements: !13786)
!13786 = !{!13787, !13788}
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13785, file: !2773, line: 100, baseType: !113, size: 32)
!13788 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13785, file: !2773, line: 100, baseType: !113, size: 32)
!13789 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 101, baseType: !13790, size: 32, offset: 64)
!13790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 101, size: 32, elements: !13791)
!13791 = !{!13792, !13793}
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13790, file: !2773, line: 101, baseType: !113, size: 32)
!13793 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13790, file: !2773, line: 101, baseType: !113, size: 32)
!13794 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 102, baseType: !13795, size: 32, offset: 96)
!13795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 102, size: 32, elements: !13796)
!13796 = !{!13797, !13798}
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13795, file: !2773, line: 102, baseType: !113, size: 32)
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13795, file: !2773, line: 102, baseType: !113, size: 32)
!13799 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 103, baseType: !13800, size: 32, offset: 128)
!13800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 103, size: 32, elements: !13801)
!13801 = !{!13802, !13803}
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13800, file: !2773, line: 103, baseType: !113, size: 32)
!13803 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13800, file: !2773, line: 103, baseType: !113, size: 32)
!13804 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 104, baseType: !13805, size: 32, offset: 160)
!13805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 104, size: 32, elements: !13806)
!13806 = !{!13807, !13808}
!13807 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13805, file: !2773, line: 104, baseType: !113, size: 32)
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13805, file: !2773, line: 104, baseType: !113, size: 32)
!13809 = !DIDerivedType(tag: DW_TAG_member, scope: !13777, file: !2773, line: 105, baseType: !13810, size: 32, offset: 192)
!13810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13777, file: !2773, line: 105, size: 32, elements: !13811)
!13811 = !{!13812, !13813}
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13810, file: !2773, line: 105, baseType: !113, size: 32)
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13810, file: !2773, line: 105, baseType: !113, size: 32)
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13777, file: !2773, line: 106, baseType: !113, size: 32, offset: 224)
!13815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13816, size: 32)
!13816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !13817)
!13817 = !{!13818, !13876, !13888, !13889, !13890, !13891, !13897, !13912}
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13816, file: !127, line: 247, baseType: !13819, size: 384)
!13819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !13820)
!13820 = !{!13821, !13845, !13852, !13853, !13854, !13863, !13864, !13865}
!13821 = !DIDerivedType(tag: DW_TAG_member, scope: !13819, file: !127, line: 60, baseType: !13822, size: 64)
!13822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13819, file: !127, line: 60, size: 64, elements: !13823)
!13823 = !{!13824, !13839}
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13822, file: !127, line: 61, baseType: !13825, size: 64)
!13825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !13826)
!13826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !13827)
!13827 = !{!13828, !13834}
!13828 = !DIDerivedType(tag: DW_TAG_member, scope: !13826, file: !137, line: 38, baseType: !13829, size: 32)
!13829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13826, file: !137, line: 38, size: 32, elements: !13830)
!13830 = !{!13831, !13833}
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13829, file: !137, line: 39, baseType: !13832, size: 32)
!13832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13826, size: 32)
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13829, file: !137, line: 40, baseType: !13832, size: 32)
!13834 = !DIDerivedType(tag: DW_TAG_member, scope: !13826, file: !137, line: 42, baseType: !13835, size: 32, offset: 32)
!13835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13826, file: !137, line: 42, size: 32, elements: !13836)
!13836 = !{!13837, !13838}
!13837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13835, file: !137, line: 43, baseType: !13832, size: 32)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13835, file: !137, line: 44, baseType: !13832, size: 32)
!13839 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13822, file: !127, line: 62, baseType: !13840, size: 64)
!13840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !13841)
!13841 = !{!13842}
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13840, file: !153, line: 50, baseType: !13843, size: 64)
!13843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13844, size: 64, elements: !158)
!13844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13840, size: 32)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13819, file: !127, line: 68, baseType: !13846, size: 32, offset: 64)
!13846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13847, size: 32)
!13847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !13848)
!13848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !13849)
!13849 = !{!13850}
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13848, file: !163, line: 232, baseType: !13851, size: 64)
!13851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !13826)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13819, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13819, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!13854 = !DIDerivedType(tag: DW_TAG_member, scope: !13819, file: !127, line: 90, baseType: !13855, size: 16, offset: 112)
!13855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13819, file: !127, line: 90, size: 16, elements: !13856)
!13856 = !{!13857, !13862}
!13857 = !DIDerivedType(tag: DW_TAG_member, scope: !13855, file: !127, line: 91, baseType: !13858, size: 16)
!13858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13855, file: !127, line: 91, size: 16, elements: !13859)
!13859 = !{!13860, !13861}
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13858, file: !127, line: 96, baseType: !179, size: 8)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13858, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13855, file: !127, line: 100, baseType: !183, size: 16)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13819, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13819, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13819, file: !127, line: 131, baseType: !13866, size: 192, offset: 192)
!13866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !13867)
!13867 = !{!13868, !13869, !13875}
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13866, file: !163, line: 245, baseType: !13825, size: 64)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13866, file: !163, line: 246, baseType: !13870, size: 32, offset: 64)
!13870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !13871)
!13871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13872, size: 32)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{null, !13874}
!13874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13866, size: 32)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13866, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13816, file: !127, line: 250, baseType: !13877, size: 288, offset: 384)
!13877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !13878)
!13878 = !{!13879, !13880, !13881, !13882, !13883, !13884, !13885, !13886, !13887}
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13877, file: !200, line: 26, baseType: !113, size: 32)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13877, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13877, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13877, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13877, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13877, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13877, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13877, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13877, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13816, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13816, file: !127, line: 256, baseType: !13847, size: 64, offset: 704)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13816, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13816, file: !127, line: 300, baseType: !13892, size: 96, offset: 800)
!13892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !13893)
!13893 = !{!13894, !13895, !13896}
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13892, file: !127, line: 153, baseType: !22, size: 32)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13892, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!13896 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13892, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!13897 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13816, file: !127, line: 325, baseType: !13898, size: 32, offset: 896)
!13898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13899, size: 32)
!13899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !13900)
!13900 = !{!13901, !13907, !13908}
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13899, file: !122, line: 5074, baseType: !13902, size: 96)
!13902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !13903)
!13903 = !{!13904, !13905, !13906}
!13904 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13902, file: !226, line: 57, baseType: !229, size: 32)
!13905 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13902, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!13906 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13902, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13899, file: !122, line: 5075, baseType: !13847, size: 64, offset: 96)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13899, file: !122, line: 5076, baseType: !13909, size: 32, offset: 160)
!13909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !13910)
!13910 = !{!13911}
!13911 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13909, file: !236, line: 52, baseType: !22, size: 32)
!13912 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13816, file: !127, line: 343, baseType: !13913, size: 64, offset: 928)
!13913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !13914)
!13914 = !{!13915, !13916}
!13915 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13913, file: !200, line: 63, baseType: !113, size: 32)
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13913, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!13917 = !{!13918, !13919, !13920}
!13918 = !DILocalVariable(name: "reason", arg: 1, scope: !13768, file: !3153, line: 209, type: !32)
!13919 = !DILocalVariable(name: "esf", arg: 2, scope: !13768, file: !3153, line: 209, type: !13771)
!13920 = !DILocalVariable(name: "thread", arg: 3, scope: !13768, file: !3153, line: 210, type: !13815)
!13921 = !DILocation(line: 0, scope: !13768)
!13922 = !DILocation(line: 212, column: 1, scope: !13768)
!13923 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3153, file: !3153, line: 214, type: !13924, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13926)
!13924 = !DISubroutineType(types: !13925)
!13925 = !{null, !22, !22}
!13926 = !{!13927, !13928}
!13927 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13923, file: !3153, line: 214, type: !22)
!13928 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13923, file: !3153, line: 214, type: !22)
!13929 = !DILocation(line: 0, scope: !13923)
!13930 = !DILocation(line: 216, column: 1, scope: !13923)
!13931 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3153, file: !3153, line: 218, type: !13932, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13934)
!13932 = !DISubroutineType(types: !13933)
!13933 = !{null, !432, !111}
!13934 = !{!13935, !13936}
!13935 = !DILocalVariable(name: "buf", arg: 1, scope: !13931, file: !3153, line: 218, type: !432)
!13936 = !DILocalVariable(name: "buflen", arg: 2, scope: !13931, file: !3153, line: 218, type: !111)
!13937 = !DILocation(line: 0, scope: !13931)
!13938 = !DILocation(line: 220, column: 1, scope: !13931)
!13939 = distinct !DISubprogram(name: "coredump_query", scope: !3153, file: !3153, line: 222, type: !13940, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{!105, !3152, !104}
!13942 = !{!13943, !13944}
!13943 = !DILocalVariable(name: "query_id", arg: 1, scope: !13939, file: !3153, line: 222, type: !3152)
!13944 = !DILocalVariable(name: "arg", arg: 2, scope: !13939, file: !3153, line: 222, type: !104)
!13945 = !DILocation(line: 0, scope: !13939)
!13946 = !DILocation(line: 224, column: 2, scope: !13939)
!13947 = distinct !DISubprogram(name: "coredump_cmd", scope: !3153, file: !3153, line: 227, type: !13948, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13950)
!13948 = !DISubroutineType(types: !13949)
!13949 = !{!105, !3159, !104}
!13950 = !{!13951, !13952}
!13951 = !DILocalVariable(name: "query_id", arg: 1, scope: !13947, file: !3153, line: 227, type: !3159)
!13952 = !DILocalVariable(name: "arg", arg: 2, scope: !13947, file: !3153, line: 227, type: !104)
!13953 = !DILocation(line: 0, scope: !13947)
!13954 = !DILocation(line: 229, column: 2, scope: !13947)
!13955 = distinct !DISubprogram(name: "arch_system_halt", scope: !13956, file: !13956, line: 23, type: !7478, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13957)
!13956 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13957 = !{!13958}
!13958 = !DILocalVariable(name: "reason", arg: 1, scope: !13955, file: !13956, line: 23, type: !32)
!13959 = !DILocation(line: 0, scope: !13955)
!13960 = !DILocation(line: 55, column: 2, scope: !13961, inlinedAt: !13965)
!13961 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13962)
!13962 = !{!13963, !13964}
!13963 = !DILocalVariable(name: "key", scope: !13961, file: !7467, line: 44, type: !32)
!13964 = !DILocalVariable(name: "tmp", scope: !13961, file: !7467, line: 53, type: !32)
!13965 = distinct !DILocation(line: 31, column: 8, scope: !13955)
!13966 = !{i64 2227642}
!13967 = !DILocation(line: 0, scope: !13961, inlinedAt: !13965)
!13968 = !DILocation(line: 32, column: 2, scope: !13955)
!13969 = !DILocation(line: 32, column: 2, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !13956, line: 32, column: 2)
!13971 = distinct !DILexicalBlock(scope: !13955, file: !13956, line: 32, column: 2)
!13972 = distinct !{!13972, !13973, !13974}
!13973 = !DILocation(line: 32, column: 2, scope: !13971)
!13974 = !DILocation(line: 34, column: 2, scope: !13971)
!13975 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13956, file: !13956, line: 39, type: !13976, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{null, !32, !13771}
!13978 = !{!13979, !13980}
!13979 = !DILocalVariable(name: "reason", arg: 1, scope: !13975, file: !13956, line: 39, type: !32)
!13980 = !DILocalVariable(name: "esf", arg: 2, scope: !13975, file: !13956, line: 40, type: !13771)
!13981 = !DILocation(line: 0, scope: !13975)
!13982 = !DILocation(line: 45, column: 2, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13984, file: !13956, line: 45, column: 2)
!13984 = distinct !DILexicalBlock(scope: !13985, file: !13956, line: 45, column: 2)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !13956, line: 45, column: 2)
!13986 = distinct !DILexicalBlock(scope: !13975, file: !13956, line: 45, column: 2)
!13987 = !DILocation(line: 46, column: 2, scope: !13975)
!13988 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13956, file: !13956, line: 81, type: !7478, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13989)
!13989 = !{!13990}
!13990 = !DILocalVariable(name: "reason", arg: 1, scope: !13988, file: !13956, line: 81, type: !32)
!13991 = !DILocation(line: 0, scope: !13988)
!13992 = !DILocation(line: 83, column: 2, scope: !13988)
!13993 = distinct !DISubprogram(name: "z_fatal_error", scope: !13956, file: !13956, line: 96, type: !13976, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !13994)
!13994 = !{!13995, !13996, !13997, !13998}
!13995 = !DILocalVariable(name: "reason", arg: 1, scope: !13993, file: !13956, line: 96, type: !32)
!13996 = !DILocalVariable(name: "esf", arg: 2, scope: !13993, file: !13956, line: 96, type: !13771)
!13997 = !DILocalVariable(name: "key", scope: !13993, file: !13956, line: 102, type: !32)
!13998 = !DILocalVariable(name: "thread", scope: !13993, file: !13956, line: 103, type: !13815)
!13999 = !DILocation(line: 0, scope: !13993)
!14000 = !DILocation(line: 55, column: 2, scope: !13961, inlinedAt: !14001)
!14001 = distinct !DILocation(line: 102, column: 21, scope: !13993)
!14002 = !DILocation(line: 0, scope: !13961, inlinedAt: !14001)
!14003 = !DILocation(line: 104, column: 4, scope: !13993)
!14004 = !DILocation(line: 109, column: 2, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14006, file: !13956, line: 109, column: 2)
!14006 = distinct !DILexicalBlock(scope: !14007, file: !13956, line: 109, column: 2)
!14007 = distinct !DILexicalBlock(scope: !14008, file: !13956, line: 109, column: 2)
!14008 = distinct !DILexicalBlock(scope: !13993, file: !13956, line: 109, column: 2)
!14009 = !DILocation(line: 119, column: 11, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13993, file: !13956, line: 119, column: 6)
!14011 = !DILocation(line: 119, column: 20, scope: !14010)
!14012 = !DILocalVariable(name: "esf", arg: 1, scope: !14013, file: !8832, line: 71, type: !13771)
!14013 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8832, file: !8832, line: 71, type: !14014, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !14016)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{!492, !13771}
!14016 = !{!14012}
!14017 = !DILocation(line: 0, scope: !14013, inlinedAt: !14018)
!14018 = distinct !DILocation(line: 119, column: 23, scope: !14010)
!14019 = !DILocation(line: 73, column: 21, scope: !14013, inlinedAt: !14018)
!14020 = !DILocation(line: 73, column: 26, scope: !14013, inlinedAt: !14018)
!14021 = !DILocation(line: 73, column: 9, scope: !14013, inlinedAt: !14018)
!14022 = !DILocation(line: 119, column: 6, scope: !13993)
!14023 = !DILocation(line: 120, column: 3, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !13956, line: 120, column: 3)
!14025 = distinct !DILexicalBlock(scope: !14026, file: !13956, line: 120, column: 3)
!14026 = distinct !DILexicalBlock(scope: !14027, file: !13956, line: 120, column: 3)
!14027 = distinct !DILexicalBlock(scope: !14028, file: !13956, line: 120, column: 3)
!14028 = distinct !DILexicalBlock(scope: !14010, file: !13956, line: 119, column: 57)
!14029 = !DILocation(line: 121, column: 2, scope: !14028)
!14030 = !DILocation(line: 124, column: 2, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14032, file: !13956, line: 124, column: 2)
!14032 = distinct !DILexicalBlock(scope: !14033, file: !13956, line: 124, column: 2)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !13956, line: 124, column: 2)
!14034 = distinct !DILexicalBlock(scope: !13993, file: !13956, line: 124, column: 2)
!14035 = !DILocation(line: 131, column: 2, scope: !13993)
!14036 = !DILocation(line: 147, column: 3, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !13956, line: 147, column: 3)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !13956, line: 147, column: 3)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !13956, line: 146, column: 32)
!14040 = distinct !DILexicalBlock(scope: !13993, file: !13956, line: 146, column: 6)
!14041 = !DILocation(line: 147, column: 3, scope: !14038)
!14042 = !DILocation(line: 147, column: 3, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14037, file: !13956, line: 147, column: 3)
!14044 = !DILocalVariable(name: "key", arg: 1, scope: !14045, file: !7467, line: 84, type: !32)
!14045 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !14046)
!14046 = !{!14044}
!14047 = !DILocation(line: 0, scope: !14045, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 186, column: 2, scope: !13993)
!14049 = !DILocation(line: 95, column: 2, scope: !14045, inlinedAt: !14048)
!14050 = !{i64 2228459}
!14051 = !DILocation(line: 189, column: 3, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14053, file: !13956, line: 188, column: 41)
!14053 = distinct !DILexicalBlock(scope: !13993, file: !13956, line: 188, column: 6)
!14054 = !DILocation(line: 191, column: 1, scope: !13993)
!14055 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !14056, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !397)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!14058}
!14058 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !13815)
!14059 = !DILocation(line: 535, column: 9, scope: !14055)
!14060 = !DILocation(line: 535, column: 2, scope: !14055)
!14061 = distinct !DISubprogram(name: "reason_to_str", scope: !13956, file: !13956, line: 62, type: !14062, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !14064)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{!269, !32}
!14064 = !{!14065}
!14065 = !DILocalVariable(name: "reason", arg: 1, scope: !14061, file: !13956, line: 62, type: !32)
!14066 = !DILocation(line: 0, scope: !14061)
!14067 = !DILocation(line: 64, column: 2, scope: !14061)
!14068 = !DILocation(line: 0, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14061, file: !13956, line: 64, column: 18)
!14070 = !DILocation(line: 78, column: 1, scope: !14061)
!14071 = distinct !DISubprogram(name: "thread_name_get", scope: !13956, file: !13956, line: 51, type: !14072, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !14074)
!14072 = !DISubroutineType(types: !14073)
!14073 = !{!269, !13815}
!14074 = !{!14075, !14076}
!14075 = !DILocalVariable(name: "thread", arg: 1, scope: !14071, file: !13956, line: 51, type: !13815)
!14076 = !DILocalVariable(name: "thread_name", scope: !14071, file: !13956, line: 53, type: !269)
!14077 = !DILocation(line: 0, scope: !14071)
!14078 = !DILocation(line: 53, column: 36, scope: !14071)
!14079 = !DILocation(line: 53, column: 28, scope: !14071)
!14080 = !DILocation(line: 53, column: 47, scope: !14071)
!14081 = !DILocation(line: 55, column: 19, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14071, file: !13956, line: 55, column: 6)
!14083 = !DILocation(line: 55, column: 28, scope: !14082)
!14084 = !DILocation(line: 55, column: 32, scope: !14082)
!14085 = !DILocation(line: 55, column: 47, scope: !14082)
!14086 = !DILocation(line: 55, column: 6, scope: !14071)
!14087 = !DILocation(line: 57, column: 2, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14082, file: !13956, line: 55, column: 57)
!14089 = !DILocation(line: 59, column: 2, scope: !14071)
!14090 = distinct !DISubprogram(name: "k_thread_abort", scope: !3438, file: !3438, line: 188, type: !14091, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !14093)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{null, !14058}
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "thread", arg: 1, scope: !14090, file: !3438, line: 188, type: !14058)
!14095 = !DILocation(line: 0, scope: !14090)
!14096 = !DILocation(line: 197, column: 2, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14090, file: !3438, line: 197, column: 2)
!14098 = !{i64 2154849994}
!14099 = !DILocation(line: 198, column: 2, scope: !14090)
!14100 = !DILocation(line: 199, column: 1, scope: !14090)
!14101 = distinct !DISubprogram(name: "z_current_get", scope: !3438, file: !3438, line: 173, type: !14056, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !397)
!14102 = !DILocation(line: 180, column: 2, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14101, file: !3438, line: 180, column: 2)
!14104 = !{i64 2154849926}
!14105 = !DILocation(line: 181, column: 9, scope: !14101)
!14106 = !DILocation(line: 181, column: 2, scope: !14101)
!14107 = distinct !DISubprogram(name: "z_early_memset", scope: !1974, file: !1974, line: 108, type: !14108, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14110)
!14108 = !DISubroutineType(types: !14109)
!14109 = !{null, !104, !105, !111}
!14110 = !{!14111, !14112, !14113}
!14111 = !DILocalVariable(name: "dst", arg: 1, scope: !14107, file: !1974, line: 108, type: !104)
!14112 = !DILocalVariable(name: "c", arg: 2, scope: !14107, file: !1974, line: 108, type: !105)
!14113 = !DILocalVariable(name: "n", arg: 3, scope: !14107, file: !1974, line: 108, type: !111)
!14114 = !DILocation(line: 0, scope: !14107)
!14115 = !DILocation(line: 110, column: 9, scope: !14107)
!14116 = !DILocation(line: 111, column: 1, scope: !14107)
!14117 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1974, file: !1974, line: 121, type: !14118, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14120)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{null, !104, !13, !111}
!14120 = !{!14121, !14122, !14123}
!14121 = !DILocalVariable(name: "dst", arg: 1, scope: !14117, file: !1974, line: 121, type: !104)
!14122 = !DILocalVariable(name: "src", arg: 2, scope: !14117, file: !1974, line: 121, type: !13)
!14123 = !DILocalVariable(name: "n", arg: 3, scope: !14117, file: !1974, line: 121, type: !111)
!14124 = !DILocation(line: 0, scope: !14117)
!14125 = !DILocation(line: 123, column: 9, scope: !14117)
!14126 = !DILocation(line: 124, column: 1, scope: !14117)
!14127 = distinct !DISubprogram(name: "z_bss_zero", scope: !1974, file: !1974, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !397)
!14128 = !DILocation(line: 143, column: 2, scope: !14127)
!14129 = !DILocation(line: 145, column: 2, scope: !14127)
!14130 = !DILocation(line: 168, column: 1, scope: !14127)
!14131 = distinct !DISubprogram(name: "z_init_cpu", scope: !1974, file: !1974, line: 372, type: !9719, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14132)
!14132 = !{!14133}
!14133 = !DILocalVariable(name: "id", arg: 1, scope: !14131, file: !1974, line: 372, type: !105)
!14134 = !DILocation(line: 0, scope: !14131)
!14135 = !DILocation(line: 374, column: 2, scope: !14131)
!14136 = !DILocation(line: 375, column: 34, scope: !14131)
!14137 = !DILocation(line: 375, column: 19, scope: !14131)
!14138 = !DILocation(line: 375, column: 31, scope: !14131)
!14139 = !DILocation(line: 376, column: 24, scope: !14131)
!14140 = !DILocation(line: 376, column: 19, scope: !14131)
!14141 = !DILocation(line: 376, column: 22, scope: !14131)
!14142 = !DILocation(line: 378, column: 26, scope: !14131)
!14143 = !DILocation(line: 378, column: 4, scope: !14131)
!14144 = !DILocation(line: 378, column: 50, scope: !14131)
!14145 = !DILocation(line: 377, column: 19, scope: !14131)
!14146 = !DILocation(line: 377, column: 29, scope: !14131)
!14147 = !DILocation(line: 384, column: 1, scope: !14131)
!14148 = distinct !DISubprogram(name: "init_idle_thread", scope: !1974, file: !1974, line: 343, type: !9719, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14149)
!14149 = !{!14150, !14151, !14152, !14155}
!14150 = !DILocalVariable(name: "i", arg: 1, scope: !14148, file: !1974, line: 343, type: !105)
!14151 = !DILocalVariable(name: "thread", scope: !14148, file: !1974, line: 345, type: !2066)
!14152 = !DILocalVariable(name: "stack", scope: !14148, file: !1974, line: 346, type: !14153)
!14153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14154, size: 32)
!14154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !2183)
!14155 = !DILocalVariable(name: "tname", scope: !14148, file: !1974, line: 358, type: !102)
!14156 = !DILocation(line: 0, scope: !14148)
!14157 = !DILocation(line: 345, column: 29, scope: !14148)
!14158 = !DILocation(line: 346, column: 28, scope: !14148)
!14159 = !DILocation(line: 362, column: 37, scope: !14148)
!14160 = !DILocation(line: 362, column: 36, scope: !14148)
!14161 = !DILocation(line: 361, column: 2, scope: !14148)
!14162 = !DILocation(line: 365, column: 2, scope: !14148)
!14163 = !DILocation(line: 370, column: 1, scope: !14148)
!14164 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14165, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14167)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{!102, !14153}
!14167 = !{!14168}
!14168 = !DILocalVariable(name: "sym", arg: 1, scope: !14164, file: !249, line: 331, type: !14153)
!14169 = !DILocation(line: 0, scope: !14164)
!14170 = !DILocation(line: 333, column: 21, scope: !14164)
!14171 = !DILocation(line: 333, column: 2, scope: !14164)
!14172 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14173, file: !14173, line: 155, type: !14174, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14176)
!14173 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14174 = !DISubroutineType(types: !14175)
!14175 = !{null, !2066}
!14176 = !{!14177}
!14177 = !DILocalVariable(name: "thread", arg: 1, scope: !14172, file: !14173, line: 155, type: !2066)
!14178 = !DILocation(line: 0, scope: !14172)
!14179 = !DILocation(line: 157, column: 15, scope: !14172)
!14180 = !DILocation(line: 157, column: 28, scope: !14172)
!14181 = !DILocation(line: 158, column: 1, scope: !14172)
!14182 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1974, file: !1974, line: 451, type: !13932, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14183)
!14183 = !{!14184, !14185}
!14184 = !DILocalVariable(name: "buf", arg: 1, scope: !14182, file: !1974, line: 451, type: !432)
!14185 = !DILocalVariable(name: "length", arg: 2, scope: !14182, file: !1974, line: 451, type: !111)
!14186 = !DILocation(line: 0, scope: !14182)
!14187 = !DILocation(line: 485, column: 2, scope: !14182)
!14188 = !DILocation(line: 486, column: 1, scope: !14182)
!14189 = distinct !DISubprogram(name: "sys_rand_get", scope: !14190, file: !14190, line: 46, type: !14191, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14193)
!14190 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/metairq_dispatch")
!14191 = !DISubroutineType(types: !14192)
!14192 = !{null, !104, !111}
!14193 = !{!14194, !14195}
!14194 = !DILocalVariable(name: "dst", arg: 1, scope: !14189, file: !14190, line: 46, type: !104)
!14195 = !DILocalVariable(name: "len", arg: 2, scope: !14189, file: !14190, line: 46, type: !111)
!14196 = !DILocation(line: 0, scope: !14189)
!14197 = !DILocation(line: 56, column: 2, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14189, file: !14190, line: 56, column: 2)
!14199 = !{i64 2155067723}
!14200 = !DILocation(line: 57, column: 2, scope: !14189)
!14201 = !DILocation(line: 58, column: 1, scope: !14189)
!14202 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !14190, file: !14190, line: 43, type: !14191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14203 = distinct !DISubprogram(name: "z_cstart", scope: !1974, file: !1974, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14204)
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "dummy_thread", scope: !14203, file: !1974, line: 518, type: !2067)
!14206 = !DILocation(line: 507, column: 2, scope: !14203)
!14207 = !DILocation(line: 43, column: 14, scope: !14208, inlinedAt: !14212)
!14208 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14209, file: !14209, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14210)
!14209 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14210 = !{!14211}
!14211 = !DILocalVariable(name: "msp", scope: !14208, file: !14209, line: 42, type: !113)
!14212 = distinct !DILocation(line: 44, column: 2, scope: !14213, inlinedAt: !14215)
!14213 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14214, file: !14214, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !397)
!14214 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14215 = distinct !DILocation(line: 510, column: 2, scope: !14203)
!14216 = !DILocation(line: 43, column: 3, scope: !14208, inlinedAt: !14212)
!14217 = !DILocation(line: 43, column: 60, scope: !14208, inlinedAt: !14212)
!14218 = !DILocation(line: 0, scope: !14208, inlinedAt: !14212)
!14219 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14220, file: !7785, line: 1153, type: !113)
!14220 = distinct !DISubprogram(name: "__set_MSP", scope: !7785, file: !7785, line: 1153, type: !7880, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14221)
!14221 = !{!14219}
!14222 = !DILocation(line: 0, scope: !14220, inlinedAt: !14223)
!14223 = distinct !DILocation(line: 46, column: 2, scope: !14208, inlinedAt: !14212)
!14224 = !DILocation(line: 1155, column: 3, scope: !14220, inlinedAt: !14223)
!14225 = !{i64 3564760}
!14226 = !DILocation(line: 62, column: 11, scope: !14208, inlinedAt: !14212)
!14227 = !DILocation(line: 102, column: 2, scope: !14228, inlinedAt: !14229)
!14228 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8832, file: !8832, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !397)
!14229 = distinct !DILocation(line: 45, column: 2, scope: !14213, inlinedAt: !14215)
!14230 = !DILocation(line: 108, column: 2, scope: !14228, inlinedAt: !14229)
!14231 = !DILocation(line: 112, column: 2, scope: !14228, inlinedAt: !14229)
!14232 = !DILocation(line: 113, column: 2, scope: !14228, inlinedAt: !14229)
!14233 = !DILocation(line: 114, column: 2, scope: !14228, inlinedAt: !14229)
!14234 = !DILocation(line: 116, column: 2, scope: !14228, inlinedAt: !14229)
!14235 = !DILocation(line: 123, column: 13, scope: !14228, inlinedAt: !14229)
!14236 = !DILocation(line: 46, column: 2, scope: !14213, inlinedAt: !14215)
!14237 = !DILocation(line: 47, column: 2, scope: !14213, inlinedAt: !14215)
!14238 = !DILocation(line: 174, column: 12, scope: !14239, inlinedAt: !14240)
!14239 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8832, file: !8832, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !397)
!14240 = distinct !DILocation(line: 48, column: 2, scope: !14213, inlinedAt: !14215)
!14241 = !DILocation(line: 179, column: 12, scope: !14239, inlinedAt: !14240)
!14242 = !DILocation(line: 50, column: 2, scope: !14213, inlinedAt: !14215)
!14243 = !DILocation(line: 57, column: 2, scope: !14213, inlinedAt: !14215)
!14244 = !DILocation(line: 518, column: 2, scope: !14203)
!14245 = !DILocation(line: 518, column: 18, scope: !14203)
!14246 = !DILocation(line: 520, column: 2, scope: !14203)
!14247 = !DILocation(line: 523, column: 2, scope: !14203)
!14248 = !DILocation(line: 526, column: 2, scope: !14203)
!14249 = !DILocation(line: 527, column: 2, scope: !14203)
!14250 = !DILocation(line: 543, column: 24, scope: !14203)
!14251 = !DILocation(line: 543, column: 2, scope: !14203)
!14252 = !DILocation(line: 0, scope: !2206)
!14253 = !DILocation(line: 246, column: 15, scope: !2224)
!14254 = !DILocation(line: 246, column: 36, scope: !2223)
!14255 = !DILocation(line: 246, column: 2, scope: !2224)
!14256 = !DILocation(line: 247, column: 37, scope: !2222)
!14257 = !DILocation(line: 0, scope: !2222)
!14258 = !DILocation(line: 248, column: 19, scope: !2222)
!14259 = !DILocation(line: 248, column: 12, scope: !2222)
!14260 = !DILocation(line: 250, column: 11, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !2222, file: !1974, line: 250, column: 7)
!14262 = !DILocation(line: 250, column: 7, scope: !2222)
!14263 = !DILocation(line: 254, column: 11, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !1974, line: 254, column: 8)
!14265 = distinct !DILexicalBlock(scope: !14261, file: !1974, line: 250, column: 20)
!14266 = !DILocation(line: 254, column: 8, scope: !14265)
!14267 = !DILocation(line: 255, column: 9, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14264, file: !1974, line: 254, column: 17)
!14269 = !DILocation(line: 258, column: 9, scope: !14268)
!14270 = !DILocation(line: 261, column: 28, scope: !14268)
!14271 = !DILocation(line: 261, column: 10, scope: !14268)
!14272 = !DILocation(line: 261, column: 17, scope: !14268)
!14273 = !DILocation(line: 261, column: 26, scope: !14268)
!14274 = !DILocation(line: 262, column: 4, scope: !14268)
!14275 = !DILocation(line: 263, column: 9, scope: !14265)
!14276 = !DILocation(line: 263, column: 16, scope: !14265)
!14277 = !DILocation(line: 263, column: 28, scope: !14265)
!14278 = !DILocation(line: 264, column: 3, scope: !14265)
!14279 = !DILocation(line: 246, column: 60, scope: !2223)
!14280 = distinct !{!14280, !14255, !14281}
!14281 = !DILocation(line: 265, column: 2, scope: !2224)
!14282 = !DILocation(line: 266, column: 1, scope: !2206)
!14283 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7825, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14284)
!14284 = !{!14285, !14286}
!14285 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14283, file: !679, line: 1814, type: !933)
!14286 = !DILocalVariable(name: "priority", arg: 2, scope: !14283, file: !679, line: 1814, type: !113)
!14287 = !DILocation(line: 0, scope: !14283)
!14288 = !DILocation(line: 1822, column: 48, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14290, file: !679, line: 1821, column: 3)
!14290 = distinct !DILexicalBlock(scope: !14283, file: !679, line: 1816, column: 7)
!14291 = !DILocation(line: 1822, column: 32, scope: !14289)
!14292 = !DILocation(line: 1822, column: 40, scope: !14289)
!14293 = !DILocation(line: 1822, column: 5, scope: !14289)
!14294 = !DILocation(line: 1822, column: 46, scope: !14289)
!14295 = !DILocation(line: 1824, column: 1, scope: !14283)
!14296 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14214, file: !14214, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14297 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14298, file: !14298, line: 215, type: !14174, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14299)
!14298 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14297, file: !14298, line: 215, type: !2066)
!14301 = !DILocation(line: 0, scope: !14297)
!14302 = !DILocation(line: 217, column: 21, scope: !14297)
!14303 = !DILocation(line: 217, column: 34, scope: !14297)
!14304 = !DILocation(line: 221, column: 21, scope: !14297)
!14305 = !DILocation(line: 221, column: 34, scope: !14297)
!14306 = !DILocation(line: 223, column: 27, scope: !14297)
!14307 = !DILocation(line: 223, column: 33, scope: !14297)
!14308 = !DILocation(line: 224, column: 27, scope: !14297)
!14309 = !DILocation(line: 224, column: 32, scope: !14297)
!14310 = !DILocation(line: 232, column: 16, scope: !14297)
!14311 = !DILocation(line: 232, column: 30, scope: !14297)
!14312 = !DILocation(line: 239, column: 24, scope: !14297)
!14313 = !DILocation(line: 240, column: 1, scope: !14297)
!14314 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1974, file: !1974, line: 399, type: !14315, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!102}
!14317 = !{!14318}
!14318 = !DILocalVariable(name: "stack_ptr", scope: !14314, file: !1974, line: 401, type: !102)
!14319 = !DILocation(line: 404, column: 2, scope: !14314)
!14320 = !DILocation(line: 416, column: 24, scope: !14314)
!14321 = !DILocation(line: 418, column: 14, scope: !14314)
!14322 = !DILocation(line: 0, scope: !14314)
!14323 = !DILocation(line: 423, column: 2, scope: !14314)
!14324 = !DILocation(line: 424, column: 2, scope: !14314)
!14325 = !DILocation(line: 426, column: 2, scope: !14314)
!14326 = !DILocation(line: 428, column: 2, scope: !14314)
!14327 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1974, file: !1974, line: 432, type: !14328, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14330)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{null, !102}
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14327, file: !1974, line: 432, type: !102)
!14332 = !DILocation(line: 0, scope: !14327)
!14333 = !DILocation(line: 435, column: 2, scope: !14327)
!14334 = !DILocation(line: 445, column: 2, scope: !14327)
!14335 = distinct !DISubprogram(name: "bg_thread_main", scope: !1974, file: !1974, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !14336)
!14336 = !{!14337, !14338, !14339}
!14337 = !DILocalVariable(name: "unused1", arg: 1, scope: !14335, file: !1974, line: 277, type: !104)
!14338 = !DILocalVariable(name: "unused2", arg: 2, scope: !14335, file: !1974, line: 277, type: !104)
!14339 = !DILocalVariable(name: "unused3", arg: 3, scope: !14335, file: !1974, line: 277, type: !104)
!14340 = !DILocation(line: 0, scope: !14335)
!14341 = !DILocation(line: 291, column: 20, scope: !14335)
!14342 = !DILocation(line: 293, column: 2, scope: !14335)
!14343 = !DILocation(line: 297, column: 2, scope: !14335)
!14344 = !DILocation(line: 305, column: 2, scope: !14335)
!14345 = !DILocation(line: 307, column: 2, scope: !14335)
!14346 = !DILocation(line: 330, column: 8, scope: !14335)
!14347 = !DILocation(line: 333, column: 34, scope: !14335)
!14348 = !DILocation(line: 339, column: 1, scope: !14335)
!14349 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2235, file: !2235, line: 45, type: !14350, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14358)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{null, !14352, !104}
!14352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !14353)
!14353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14354, size: 32)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{null, !14356, !104}
!14356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14357, size: 32)
!14357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2240)
!14358 = !{!14359, !14360}
!14359 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14349, file: !2235, line: 45, type: !14352)
!14360 = !DILocalVariable(name: "user_data", arg: 2, scope: !14349, file: !2235, line: 45, type: !104)
!14361 = !DILocation(line: 0, scope: !14349)
!14362 = !DILocation(line: 71, column: 1, scope: !14349)
!14363 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2235, file: !2235, line: 73, type: !14350, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14364)
!14364 = !{!14365, !14366}
!14365 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14363, file: !2235, line: 73, type: !14352)
!14366 = !DILocalVariable(name: "user_data", arg: 2, scope: !14363, file: !2235, line: 73, type: !104)
!14367 = !DILocation(line: 0, scope: !14363)
!14368 = !DILocation(line: 95, column: 1, scope: !14363)
!14369 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2235, file: !2235, line: 97, type: !8833, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !397)
!14370 = !DILocation(line: 1031, column: 3, scope: !14371, inlinedAt: !14374)
!14371 = distinct !DISubprogram(name: "__get_IPSR", scope: !7785, file: !7785, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14372)
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "result", scope: !14371, file: !7785, line: 1029, type: !113)
!14374 = distinct !DILocation(line: 48, column: 10, scope: !14375, inlinedAt: !14376)
!14375 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8832, file: !8832, line: 46, type: !8833, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !397)
!14376 = distinct !DILocation(line: 99, column: 9, scope: !14369)
!14377 = !{i64 3570411}
!14378 = !DILocation(line: 0, scope: !14371, inlinedAt: !14374)
!14379 = !DILocation(line: 48, column: 9, scope: !14375, inlinedAt: !14376)
!14380 = !DILocation(line: 99, column: 2, scope: !14369)
!14381 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2235, file: !2235, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !397)
!14382 = !DILocation(line: 108, column: 2, scope: !14381)
!14383 = !DILocation(line: 108, column: 17, scope: !14381)
!14384 = !DILocation(line: 108, column: 30, scope: !14381)
!14385 = !DILocation(line: 109, column: 1, scope: !14381)
!14386 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2235, file: !2235, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !397)
!14387 = !DILocation(line: 118, column: 2, scope: !14386)
!14388 = !DILocation(line: 118, column: 17, scope: !14386)
!14389 = !DILocation(line: 118, column: 30, scope: !14386)
!14390 = !DILocation(line: 119, column: 1, scope: !14386)
!14391 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2235, file: !2235, line: 126, type: !8833, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !397)
!14392 = !DILocation(line: 128, column: 10, scope: !14391)
!14393 = !DILocation(line: 128, column: 25, scope: !14391)
!14394 = !DILocation(line: 128, column: 38, scope: !14391)
!14395 = !DILocation(line: 128, column: 53, scope: !14391)
!14396 = !DILocation(line: 128, column: 2, scope: !14391)
!14397 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2235, file: !2235, line: 187, type: !14398, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{!105, !2239, !269}
!14400 = !{!14401, !14402}
!14401 = !DILocalVariable(name: "thread", arg: 1, scope: !14397, file: !2235, line: 187, type: !2239)
!14402 = !DILocalVariable(name: "value", arg: 2, scope: !14397, file: !2235, line: 187, type: !269)
!14403 = !DILocation(line: 0, scope: !14397)
!14404 = !DILocation(line: 206, column: 2, scope: !14397)
!14405 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2235, file: !2235, line: 238, type: !14406, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14408)
!14406 = !DISubroutineType(types: !14407)
!14407 = !{!269, !2239}
!14408 = !{!14409}
!14409 = !DILocalVariable(name: "thread", arg: 1, scope: !14405, file: !2235, line: 238, type: !2239)
!14410 = !DILocation(line: 0, scope: !14405)
!14411 = !DILocation(line: 244, column: 2, scope: !14405)
!14412 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2235, file: !2235, line: 248, type: !14413, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!105, !2238, !102, !111}
!14415 = !{!14416, !14417, !14418}
!14416 = !DILocalVariable(name: "thread", arg: 1, scope: !14412, file: !2235, line: 248, type: !2238)
!14417 = !DILocalVariable(name: "buf", arg: 2, scope: !14412, file: !2235, line: 248, type: !102)
!14418 = !DILocalVariable(name: "size", arg: 3, scope: !14412, file: !2235, line: 248, type: !111)
!14419 = !DILocation(line: 0, scope: !14412)
!14420 = !DILocation(line: 257, column: 2, scope: !14412)
!14421 = !DILocation(line: 0, scope: !2234)
!14422 = !DILocation(line: 281, column: 11, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !2234, file: !2235, line: 281, column: 6)
!14424 = !DILocation(line: 281, column: 20, scope: !14423)
!14425 = !DILocation(line: 275, column: 45, scope: !2234)
!14426 = !DILocation(line: 285, column: 10, scope: !2234)
!14427 = !DILocation(line: 0, scope: !2357)
!14428 = !DILocation(line: 293, column: 39, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !2357, file: !2235, line: 293, column: 2)
!14430 = !DILocation(line: 293, column: 2, scope: !2357)
!14431 = !DILocation(line: 273, column: 14, scope: !2234)
!14432 = !DILocation(line: 309, column: 2, scope: !2234)
!14433 = !DILocation(line: 309, column: 11, scope: !2234)
!14434 = !DILocation(line: 311, column: 2, scope: !2234)
!14435 = !DILocation(line: 293, column: 26, scope: !14429)
!14436 = !DILocation(line: 294, column: 9, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14429, file: !2235, line: 293, column: 54)
!14438 = !DILocation(line: 295, column: 21, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14437, file: !2235, line: 295, column: 7)
!14440 = !DILocation(line: 295, column: 28, scope: !14439)
!14441 = !DILocation(line: 295, column: 7, scope: !14437)
!14442 = !DILocation(line: 299, column: 25, scope: !14437)
!14443 = !DILocation(line: 299, column: 41, scope: !14437)
!14444 = !DILocation(line: 300, column: 7, scope: !14437)
!14445 = !DILocation(line: 300, column: 26, scope: !14437)
!14446 = !DILocation(line: 299, column: 10, scope: !14437)
!14447 = !DILocation(line: 299, column: 7, scope: !14437)
!14448 = !DILocation(line: 302, column: 16, scope: !14437)
!14449 = !DILocation(line: 304, column: 20, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14437, file: !2235, line: 304, column: 7)
!14451 = !DILocation(line: 304, column: 7, scope: !14437)
!14452 = !DILocation(line: 305, column: 26, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14450, file: !2235, line: 304, column: 26)
!14454 = !DILocation(line: 305, column: 42, scope: !14453)
!14455 = !DILocation(line: 305, column: 11, scope: !14453)
!14456 = !DILocation(line: 305, column: 8, scope: !14453)
!14457 = !DILocation(line: 306, column: 3, scope: !14453)
!14458 = !DILocation(line: 293, column: 50, scope: !14429)
!14459 = !DILocation(line: 312, column: 1, scope: !2234)
!14460 = distinct !DISubprogram(name: "copy_bytes", scope: !2235, file: !2235, line: 261, type: !14461, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14463)
!14461 = !DISubroutineType(types: !14462)
!14462 = !{!111, !102, !111, !269, !111}
!14463 = !{!14464, !14465, !14466, !14467, !14468}
!14464 = !DILocalVariable(name: "dest", arg: 1, scope: !14460, file: !2235, line: 261, type: !102)
!14465 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14460, file: !2235, line: 261, type: !111)
!14466 = !DILocalVariable(name: "src", arg: 3, scope: !14460, file: !2235, line: 261, type: !269)
!14467 = !DILocalVariable(name: "src_size", arg: 4, scope: !14460, file: !2235, line: 261, type: !111)
!14468 = !DILocalVariable(name: "bytes_to_copy", scope: !14460, file: !2235, line: 263, type: !111)
!14469 = !DILocation(line: 0, scope: !14460)
!14470 = !DILocation(line: 265, column: 18, scope: !14460)
!14471 = !DILocation(line: 266, column: 2, scope: !14460)
!14472 = !DILocation(line: 268, column: 2, scope: !14460)
!14473 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2235, file: !2235, line: 383, type: !14474, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14476)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{null, !2239}
!14476 = !{!14477}
!14477 = !DILocalVariable(name: "thread", arg: 1, scope: !14473, file: !2235, line: 383, type: !2239)
!14478 = !DILocation(line: 0, scope: !14473)
!14479 = !DILocation(line: 387, column: 2, scope: !14473)
!14480 = !DILocation(line: 388, column: 1, scope: !14473)
!14481 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2235, file: !2235, line: 528, type: !14482, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14489)
!14482 = !DISubroutineType(types: !14483)
!14483 = !{!102, !2239, !14484, !111, !254, !104, !104, !104, !105, !113, !269}
!14484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14485, size: 32)
!14485 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !14486)
!14486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !14487)
!14487 = !{!14488}
!14488 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14486, file: !249, line: 48, baseType: !103, size: 8)
!14489 = !{!14490, !14491, !14492, !14493, !14494, !14495, !14496, !14497, !14498, !14499, !14500}
!14490 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14481, file: !2235, line: 528, type: !2239)
!14491 = !DILocalVariable(name: "stack", arg: 2, scope: !14481, file: !2235, line: 529, type: !14484)
!14492 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14481, file: !2235, line: 529, type: !111)
!14493 = !DILocalVariable(name: "entry", arg: 4, scope: !14481, file: !2235, line: 530, type: !254)
!14494 = !DILocalVariable(name: "p1", arg: 5, scope: !14481, file: !2235, line: 531, type: !104)
!14495 = !DILocalVariable(name: "p2", arg: 6, scope: !14481, file: !2235, line: 531, type: !104)
!14496 = !DILocalVariable(name: "p3", arg: 7, scope: !14481, file: !2235, line: 531, type: !104)
!14497 = !DILocalVariable(name: "prio", arg: 8, scope: !14481, file: !2235, line: 532, type: !105)
!14498 = !DILocalVariable(name: "options", arg: 9, scope: !14481, file: !2235, line: 532, type: !113)
!14499 = !DILocalVariable(name: "name", arg: 10, scope: !14481, file: !2235, line: 532, type: !269)
!14500 = !DILocalVariable(name: "stack_ptr", scope: !14481, file: !2235, line: 534, type: !102)
!14501 = !DILocation(line: 0, scope: !14481)
!14502 = !DILocation(line: 536, column: 2, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !2235, line: 536, column: 2)
!14504 = distinct !DILexicalBlock(scope: !14505, file: !2235, line: 536, column: 2)
!14505 = distinct !DILexicalBlock(scope: !14481, file: !2235, line: 536, column: 2)
!14506 = !DILocation(line: 536, column: 2, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14503, file: !2235, line: 536, column: 2)
!14508 = !DILocation(line: 550, column: 28, scope: !14481)
!14509 = !DILocation(line: 550, column: 2, scope: !14481)
!14510 = !DILocation(line: 553, column: 34, scope: !14481)
!14511 = !DILocation(line: 553, column: 2, scope: !14481)
!14512 = !DILocation(line: 554, column: 14, scope: !14481)
!14513 = !DILocation(line: 564, column: 2, scope: !14481)
!14514 = !DILocation(line: 567, column: 14, scope: !14481)
!14515 = !DILocation(line: 567, column: 24, scope: !14481)
!14516 = !DILocation(line: 612, column: 7, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14481, file: !2235, line: 612, column: 6)
!14518 = !DILocation(line: 612, column: 6, scope: !14481)
!14519 = !DILocation(line: 627, column: 40, scope: !14481)
!14520 = !DILocation(line: 637, column: 2, scope: !14481)
!14521 = !DILocation(line: 613, column: 15, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14517, file: !2235, line: 612, column: 17)
!14523 = !DILocation(line: 613, column: 29, scope: !14522)
!14524 = !DILocation(line: 638, column: 1, scope: !14481)
!14525 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14173, file: !14173, line: 78, type: !14526, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14528)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{!492, !104}
!14528 = !{!14529}
!14529 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14525, file: !14173, line: 78, type: !104)
!14530 = !DILocation(line: 0, scope: !14525)
!14531 = !DILocation(line: 80, column: 21, scope: !14525)
!14532 = !DILocation(line: 80, column: 2, scope: !14525)
!14533 = distinct !DISubprogram(name: "z_waitq_init", scope: !14534, file: !14534, line: 47, type: !14535, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14537)
!14534 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14535 = !DISubroutineType(types: !14536)
!14536 = !{null, !2270}
!14537 = !{!14538}
!14538 = !DILocalVariable(name: "w", arg: 1, scope: !14533, file: !14534, line: 47, type: !2270)
!14539 = !DILocation(line: 0, scope: !14533)
!14540 = !DILocation(line: 49, column: 21, scope: !14533)
!14541 = !DILocation(line: 49, column: 2, scope: !14533)
!14542 = !DILocation(line: 50, column: 1, scope: !14533)
!14543 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2235, file: !2235, line: 791, type: !14544, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14547)
!14544 = !DISubroutineType(types: !14545)
!14545 = !{null, !14546, !105, !113, !32}
!14546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!14547 = !{!14548, !14549, !14550, !14551}
!14548 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14543, file: !2235, line: 791, type: !14546)
!14549 = !DILocalVariable(name: "priority", arg: 2, scope: !14543, file: !2235, line: 791, type: !105)
!14550 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14543, file: !2235, line: 792, type: !113)
!14551 = !DILocalVariable(name: "options", arg: 4, scope: !14543, file: !2235, line: 792, type: !32)
!14552 = !DILocation(line: 0, scope: !14543)
!14553 = !DILocation(line: 795, column: 15, scope: !14543)
!14554 = !DILocation(line: 795, column: 25, scope: !14543)
!14555 = !DILocation(line: 796, column: 30, scope: !14543)
!14556 = !DILocation(line: 796, column: 15, scope: !14543)
!14557 = !DILocation(line: 796, column: 28, scope: !14543)
!14558 = !DILocation(line: 797, column: 30, scope: !14543)
!14559 = !DILocation(line: 797, column: 15, scope: !14543)
!14560 = !DILocation(line: 797, column: 28, scope: !14543)
!14561 = !DILocation(line: 799, column: 22, scope: !14543)
!14562 = !DILocation(line: 799, column: 15, scope: !14543)
!14563 = !DILocation(line: 799, column: 20, scope: !14543)
!14564 = !DILocation(line: 801, column: 15, scope: !14543)
!14565 = !DILocation(line: 801, column: 28, scope: !14543)
!14566 = !DILocation(line: 814, column: 2, scope: !14543)
!14567 = !DILocation(line: 815, column: 1, scope: !14543)
!14568 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2235, file: !2235, line: 449, type: !14569, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14571)
!14569 = !DISubroutineType(types: !14570)
!14570 = !{!102, !2239, !14484, !111}
!14571 = !{!14572, !14573, !14574, !14575, !14576, !14577, !14578, !14579}
!14572 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14568, file: !2235, line: 449, type: !2239)
!14573 = !DILocalVariable(name: "stack", arg: 2, scope: !14568, file: !2235, line: 450, type: !14484)
!14574 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14568, file: !2235, line: 450, type: !111)
!14575 = !DILocalVariable(name: "stack_obj_size", scope: !14568, file: !2235, line: 452, type: !111)
!14576 = !DILocalVariable(name: "stack_buf_size", scope: !14568, file: !2235, line: 452, type: !111)
!14577 = !DILocalVariable(name: "stack_ptr", scope: !14568, file: !2235, line: 453, type: !102)
!14578 = !DILocalVariable(name: "stack_buf_start", scope: !14568, file: !2235, line: 453, type: !102)
!14579 = !DILocalVariable(name: "delta", scope: !14568, file: !2235, line: 454, type: !111)
!14580 = !DILocation(line: 0, scope: !14568)
!14581 = !DILocation(line: 465, column: 20, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14568, file: !2235, line: 463, column: 2)
!14583 = !DILocation(line: 466, column: 21, scope: !14582)
!14584 = !DILocation(line: 473, column: 28, scope: !14568)
!14585 = !DILocation(line: 514, column: 33, scope: !14568)
!14586 = !DILocation(line: 514, column: 25, scope: !14568)
!14587 = !DILocation(line: 514, column: 31, scope: !14568)
!14588 = !DILocation(line: 515, column: 25, scope: !14568)
!14589 = !DILocation(line: 515, column: 30, scope: !14568)
!14590 = !DILocation(line: 516, column: 25, scope: !14568)
!14591 = !DILocation(line: 516, column: 31, scope: !14568)
!14592 = !DILocation(line: 520, column: 2, scope: !14568)
!14593 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14594, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14596)
!14594 = !DISubroutineType(types: !14595)
!14595 = !{!102, !14484}
!14596 = !{!14597}
!14597 = !DILocalVariable(name: "sym", arg: 1, scope: !14593, file: !249, line: 331, type: !14484)
!14598 = !DILocation(line: 0, scope: !14593)
!14599 = !DILocation(line: 333, column: 21, scope: !14593)
!14600 = !DILocation(line: 333, column: 2, scope: !14593)
!14601 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14602, file: !14602, line: 40, type: !14603, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14605)
!14602 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14603 = !DISubroutineType(types: !14604)
!14604 = !{null, !14546}
!14605 = !{!14606}
!14606 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14601, file: !14602, line: 40, type: !14546)
!14607 = !DILocation(line: 0, scope: !14601)
!14608 = !DILocation(line: 42, column: 31, scope: !14601)
!14609 = !DILocation(line: 42, column: 2, scope: !14601)
!14610 = !DILocation(line: 43, column: 1, scope: !14601)
!14611 = distinct !DISubprogram(name: "z_init_timeout", scope: !14602, file: !14602, line: 25, type: !2296, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14612)
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "to", arg: 1, scope: !14611, file: !14602, line: 25, type: !2298)
!14614 = !DILocation(line: 0, scope: !14611)
!14615 = !DILocation(line: 27, column: 22, scope: !14611)
!14616 = !DILocation(line: 27, column: 2, scope: !14611)
!14617 = !DILocation(line: 28, column: 1, scope: !14611)
!14618 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !14619, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{null, !2344}
!14621 = !{!14622}
!14622 = !DILocalVariable(name: "node", arg: 1, scope: !14618, file: !137, line: 211, type: !2344)
!14623 = !DILocation(line: 0, scope: !14618)
!14624 = !DILocation(line: 213, column: 8, scope: !14618)
!14625 = !DILocation(line: 213, column: 13, scope: !14618)
!14626 = !DILocation(line: 214, column: 8, scope: !14618)
!14627 = !DILocation(line: 214, column: 13, scope: !14618)
!14628 = !DILocation(line: 215, column: 1, scope: !14618)
!14629 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14630, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14633)
!14630 = !DISubroutineType(types: !14631)
!14631 = !{null, !14632}
!14632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!14633 = !{!14634}
!14634 = !DILocalVariable(name: "list", arg: 1, scope: !14629, file: !137, line: 197, type: !14632)
!14635 = !DILocation(line: 0, scope: !14629)
!14636 = !DILocation(line: 199, column: 8, scope: !14629)
!14637 = !DILocation(line: 199, column: 13, scope: !14629)
!14638 = !DILocation(line: 200, column: 8, scope: !14629)
!14639 = !DILocation(line: 200, column: 13, scope: !14629)
!14640 = !DILocation(line: 201, column: 1, scope: !14629)
!14641 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2235, file: !2235, line: 641, type: !14642, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14648)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!2238, !2239, !14484, !111, !254, !104, !104, !104, !105, !113, !14644}
!14644 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14645)
!14645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14646)
!14646 = !{!14647}
!14647 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14645, file: !108, line: 66, baseType: !107, size: 64)
!14648 = !{!14649, !14650, !14651, !14652, !14653, !14654, !14655, !14656, !14657, !14658}
!14649 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14641, file: !2235, line: 641, type: !2239)
!14650 = !DILocalVariable(name: "stack", arg: 2, scope: !14641, file: !2235, line: 642, type: !14484)
!14651 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14641, file: !2235, line: 643, type: !111)
!14652 = !DILocalVariable(name: "entry", arg: 4, scope: !14641, file: !2235, line: 643, type: !254)
!14653 = !DILocalVariable(name: "p1", arg: 5, scope: !14641, file: !2235, line: 644, type: !104)
!14654 = !DILocalVariable(name: "p2", arg: 6, scope: !14641, file: !2235, line: 644, type: !104)
!14655 = !DILocalVariable(name: "p3", arg: 7, scope: !14641, file: !2235, line: 644, type: !104)
!14656 = !DILocalVariable(name: "prio", arg: 8, scope: !14641, file: !2235, line: 645, type: !105)
!14657 = !DILocalVariable(name: "options", arg: 9, scope: !14641, file: !2235, line: 645, type: !113)
!14658 = !DILocalVariable(name: "delay", arg: 10, scope: !14641, file: !2235, line: 645, type: !14644)
!14659 = !DILocation(line: 0, scope: !14641)
!14660 = !DILocation(line: 1031, column: 3, scope: !14371, inlinedAt: !14661)
!14661 = distinct !DILocation(line: 48, column: 10, scope: !14375, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 647, column: 2, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14664, file: !2235, line: 647, column: 2)
!14664 = distinct !DILexicalBlock(scope: !14641, file: !2235, line: 647, column: 2)
!14665 = !DILocation(line: 0, scope: !14371, inlinedAt: !14661)
!14666 = !DILocation(line: 48, column: 9, scope: !14375, inlinedAt: !14662)
!14667 = !DILocation(line: 647, column: 2, scope: !14664)
!14668 = !DILocation(line: 647, column: 2, scope: !14669)
!14669 = distinct !DILexicalBlock(scope: !14663, file: !2235, line: 647, column: 2)
!14670 = !DILocation(line: 649, column: 2, scope: !14641)
!14671 = !DILocation(line: 652, column: 7, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14641, file: !2235, line: 652, column: 6)
!14673 = !DILocation(line: 652, column: 6, scope: !14641)
!14674 = !DILocation(line: 653, column: 3, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14672, file: !2235, line: 652, column: 39)
!14676 = !DILocation(line: 654, column: 2, scope: !14675)
!14677 = !DILocation(line: 656, column: 2, scope: !14641)
!14678 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2235, file: !2235, line: 401, type: !14679, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14681)
!14679 = !DISubroutineType(types: !14680)
!14680 = !{null, !2239, !14644}
!14681 = !{!14682, !14683}
!14682 = !DILocalVariable(name: "thread", arg: 1, scope: !14678, file: !2235, line: 401, type: !2239)
!14683 = !DILocalVariable(name: "delay", arg: 2, scope: !14678, file: !2235, line: 401, type: !14644)
!14684 = !DILocation(line: 0, scope: !14678)
!14685 = !DILocation(line: 404, column: 6, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14678, file: !2235, line: 404, column: 6)
!14687 = !DILocation(line: 404, column: 6, scope: !14678)
!14688 = !DILocation(line: 405, column: 3, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14686, file: !2235, line: 404, column: 38)
!14690 = !DILocation(line: 406, column: 2, scope: !14689)
!14691 = !DILocation(line: 407, column: 3, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14686, file: !2235, line: 406, column: 9)
!14693 = !DILocation(line: 413, column: 1, scope: !14678)
!14694 = distinct !DISubprogram(name: "k_thread_start", scope: !3438, file: !3438, line: 205, type: !14695, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14697)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{null, !2238}
!14697 = !{!14698}
!14698 = !DILocalVariable(name: "thread", arg: 1, scope: !14694, file: !3438, line: 205, type: !2238)
!14699 = !DILocation(line: 0, scope: !14694)
!14700 = !DILocation(line: 214, column: 2, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14694, file: !3438, line: 214, column: 2)
!14702 = !{i64 2154875218}
!14703 = !DILocation(line: 215, column: 2, scope: !14694)
!14704 = !DILocation(line: 216, column: 1, scope: !14694)
!14705 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14602, file: !14602, line: 47, type: !14679, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14706)
!14706 = !{!14707, !14708}
!14707 = !DILocalVariable(name: "thread", arg: 1, scope: !14705, file: !14602, line: 47, type: !2239)
!14708 = !DILocalVariable(name: "ticks", arg: 2, scope: !14705, file: !14602, line: 47, type: !14644)
!14709 = !DILocation(line: 0, scope: !14705)
!14710 = !DILocation(line: 49, column: 30, scope: !14705)
!14711 = !DILocation(line: 49, column: 2, scope: !14705)
!14712 = !DILocation(line: 50, column: 1, scope: !14705)
!14713 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2235, file: !2235, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14714)
!14714 = !{!14715, !14732}
!14715 = !DILocalVariable(name: "thread_data", scope: !14716, file: !2235, line: 750, type: !14717)
!14716 = distinct !DILexicalBlock(scope: !14713, file: !2235, line: 750, column: 2)
!14717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14718, size: 32)
!14718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !14719)
!14719 = !{!14720, !14721, !14722, !14723, !14724, !14725, !14726, !14727, !14728, !14729, !14730, !14731}
!14720 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14718, file: !122, line: 621, baseType: !2239, size: 32)
!14721 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14718, file: !122, line: 622, baseType: !14484, size: 32, offset: 32)
!14722 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14718, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!14723 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14718, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!14724 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14718, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!14725 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14718, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!14726 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14718, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!14727 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14718, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!14728 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14718, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!14729 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14718, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!14730 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14718, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!14731 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14718, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!14732 = !DILocalVariable(name: "thread_data", scope: !14733, file: !2235, line: 781, type: !14717)
!14733 = distinct !DILexicalBlock(scope: !14713, file: !2235, line: 781, column: 2)
!14734 = !DILocation(line: 0, scope: !14716)
!14735 = !DILocation(line: 750, column: 2, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !2235, line: 750, column: 2)
!14737 = distinct !DILexicalBlock(scope: !14738, file: !2235, line: 750, column: 2)
!14738 = distinct !DILexicalBlock(scope: !14716, file: !2235, line: 750, column: 2)
!14739 = !DILocation(line: 750, column: 2, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14741, file: !2235, line: 750, column: 2)
!14741 = distinct !DILexicalBlock(scope: !14736, file: !2235, line: 750, column: 2)
!14742 = !DILocation(line: 750, column: 2, scope: !14737)
!14743 = !DILocation(line: 750, column: 2, scope: !14716)
!14744 = !DILocation(line: 780, column: 2, scope: !14713)
!14745 = !DILocation(line: 0, scope: !14733)
!14746 = !DILocation(line: 781, column: 2, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !2235, line: 781, column: 2)
!14748 = distinct !DILexicalBlock(scope: !14749, file: !2235, line: 781, column: 2)
!14749 = distinct !DILexicalBlock(scope: !14733, file: !2235, line: 781, column: 2)
!14750 = !DILocation(line: 752, column: 17, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14738, file: !2235, line: 750, column: 38)
!14752 = !DILocation(line: 753, column: 17, scope: !14751)
!14753 = !DILocation(line: 754, column: 17, scope: !14751)
!14754 = !DILocation(line: 755, column: 17, scope: !14751)
!14755 = !DILocation(line: 756, column: 17, scope: !14751)
!14756 = !DILocation(line: 757, column: 17, scope: !14751)
!14757 = !DILocation(line: 758, column: 17, scope: !14751)
!14758 = !DILocation(line: 759, column: 17, scope: !14751)
!14759 = !DILocation(line: 760, column: 17, scope: !14751)
!14760 = !DILocation(line: 751, column: 3, scope: !14751)
!14761 = !DILocation(line: 763, column: 16, scope: !14751)
!14762 = !DILocation(line: 763, column: 29, scope: !14751)
!14763 = !DILocation(line: 763, column: 39, scope: !14751)
!14764 = !DILocation(line: 750, column: 2, scope: !14738)
!14765 = !DILocation(line: 750, column: 2, scope: !14741)
!14766 = distinct !{!14766, !14743, !14767}
!14767 = !DILocation(line: 764, column: 2, scope: !14716)
!14768 = !DILocation(line: 781, column: 2, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !2235, line: 781, column: 2)
!14770 = distinct !DILexicalBlock(scope: !14747, file: !2235, line: 781, column: 2)
!14771 = !DILocation(line: 781, column: 2, scope: !14748)
!14772 = !DILocation(line: 781, column: 2, scope: !14733)
!14773 = !DILocation(line: 787, column: 2, scope: !14713)
!14774 = !DILocation(line: 788, column: 1, scope: !14713)
!14775 = !DILocation(line: 782, column: 20, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14777, file: !2235, line: 782, column: 7)
!14777 = distinct !DILexicalBlock(scope: !14749, file: !2235, line: 781, column: 38)
!14778 = !DILocation(line: 782, column: 31, scope: !14776)
!14779 = !DILocation(line: 782, column: 7, scope: !14777)
!14780 = !DILocation(line: 783, column: 37, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14776, file: !2235, line: 782, column: 51)
!14782 = !DILocation(line: 784, column: 10, scope: !14781)
!14783 = !DILocation(line: 783, column: 4, scope: !14781)
!14784 = !DILocation(line: 785, column: 3, scope: !14781)
!14785 = !DILocation(line: 781, column: 2, scope: !14749)
!14786 = !DILocation(line: 781, column: 2, scope: !14770)
!14787 = distinct !{!14787, !14772, !14788}
!14788 = !DILocation(line: 786, column: 2, scope: !14733)
!14789 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14790, file: !14790, line: 403, type: !14791, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14793)
!14790 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14791 = !DISubroutineType(types: !14792)
!14792 = !{!114, !114}
!14793 = !{!14794}
!14794 = !DILocalVariable(name: "t", arg: 1, scope: !14789, file: !14790, line: 403, type: !114)
!14795 = !DILocation(line: 0, scope: !14789)
!14796 = !DILocalVariable(name: "t", arg: 1, scope: !14797, file: !14790, line: 102, type: !114)
!14797 = distinct !DISubprogram(name: "z_tmcvt", scope: !14790, file: !14790, line: 102, type: !14798, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{!114, !114, !113, !113, !492, !492, !492, !492}
!14800 = !{!14796, !14801, !14802, !14803, !14804, !14805, !14806, !14807, !14808, !14809, !14810}
!14801 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14797, file: !14790, line: 102, type: !113)
!14802 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14797, file: !14790, line: 103, type: !113)
!14803 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14797, file: !14790, line: 103, type: !492)
!14804 = !DILocalVariable(name: "result32", arg: 5, scope: !14797, file: !14790, line: 104, type: !492)
!14805 = !DILocalVariable(name: "round_up", arg: 6, scope: !14797, file: !14790, line: 104, type: !492)
!14806 = !DILocalVariable(name: "round_off", arg: 7, scope: !14797, file: !14790, line: 105, type: !492)
!14807 = !DILocalVariable(name: "mul_ratio", scope: !14797, file: !14790, line: 107, type: !492)
!14808 = !DILocalVariable(name: "div_ratio", scope: !14797, file: !14790, line: 109, type: !492)
!14809 = !DILocalVariable(name: "off", scope: !14797, file: !14790, line: 116, type: !114)
!14810 = !DILocalVariable(name: "rdivisor", scope: !14811, file: !14790, line: 119, type: !113)
!14811 = distinct !DILexicalBlock(scope: !14812, file: !14790, line: 118, column: 18)
!14812 = distinct !DILexicalBlock(scope: !14797, file: !14790, line: 118, column: 6)
!14813 = !DILocation(line: 0, scope: !14797, inlinedAt: !14814)
!14814 = distinct !DILocation(line: 406, column: 9, scope: !14789)
!14815 = !DILocation(line: 145, column: 13, scope: !14816, inlinedAt: !14814)
!14816 = distinct !DILexicalBlock(scope: !14817, file: !14790, line: 144, column: 10)
!14817 = distinct !DILexicalBlock(scope: !14818, file: !14790, line: 142, column: 7)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !14790, line: 141, column: 24)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !14790, line: 141, column: 13)
!14820 = distinct !DILexicalBlock(scope: !14797, file: !14790, line: 134, column: 6)
!14821 = !DILocation(line: 406, column: 2, scope: !14789)
!14822 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2235, file: !2235, line: 817, type: !5080, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14823)
!14823 = !{!14824, !14825, !14826, !14827}
!14824 = !DILocalVariable(name: "entry", arg: 1, scope: !14822, file: !2235, line: 817, type: !254)
!14825 = !DILocalVariable(name: "p1", arg: 2, scope: !14822, file: !2235, line: 818, type: !104)
!14826 = !DILocalVariable(name: "p2", arg: 3, scope: !14822, file: !2235, line: 818, type: !104)
!14827 = !DILocalVariable(name: "p3", arg: 4, scope: !14822, file: !2235, line: 818, type: !104)
!14828 = !DILocation(line: 0, scope: !14822)
!14829 = !DILocation(line: 822, column: 2, scope: !14822)
!14830 = !DILocation(line: 822, column: 17, scope: !14822)
!14831 = !DILocation(line: 822, column: 30, scope: !14822)
!14832 = !DILocation(line: 823, column: 2, scope: !14822)
!14833 = !DILocation(line: 845, column: 2, scope: !14822)
!14834 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2235, file: !2235, line: 853, type: !14835, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14838)
!14835 = !DISubroutineType(types: !14836)
!14836 = !{!492, !14837}
!14837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!14838 = !{!14839, !14840}
!14839 = !DILocalVariable(name: "l", arg: 1, scope: !14834, file: !2235, line: 853, type: !14837)
!14840 = !DILocalVariable(name: "thread_cpu", scope: !14834, file: !2235, line: 855, type: !22)
!14841 = !DILocation(line: 0, scope: !14834)
!14842 = !DILocation(line: 855, column: 28, scope: !14834)
!14843 = !DILocation(line: 857, column: 17, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14834, file: !2235, line: 857, column: 6)
!14845 = !DILocation(line: 857, column: 6, scope: !14834)
!14846 = !DILocation(line: 858, column: 19, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !2235, line: 858, column: 7)
!14848 = distinct !DILexicalBlock(scope: !14844, file: !2235, line: 857, column: 24)
!14849 = !DILocation(line: 858, column: 42, scope: !14847)
!14850 = !DILocation(line: 858, column: 28, scope: !14847)
!14851 = !DILocation(line: 858, column: 25, scope: !14847)
!14852 = !DILocation(line: 858, column: 7, scope: !14848)
!14853 = !DILocation(line: 862, column: 2, scope: !14834)
!14854 = !DILocation(line: 863, column: 1, scope: !14834)
!14855 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2235, file: !2235, line: 865, type: !14835, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14856)
!14856 = !{!14857}
!14857 = !DILocalVariable(name: "l", arg: 1, scope: !14855, file: !2235, line: 865, type: !14837)
!14858 = !DILocation(line: 0, scope: !14855)
!14859 = !DILocation(line: 867, column: 9, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14855, file: !2235, line: 867, column: 6)
!14861 = !DILocation(line: 867, column: 38, scope: !14860)
!14862 = !DILocation(line: 867, column: 24, scope: !14860)
!14863 = !DILocation(line: 867, column: 54, scope: !14860)
!14864 = !DILocation(line: 867, column: 43, scope: !14860)
!14865 = !DILocation(line: 867, column: 41, scope: !14860)
!14866 = !DILocation(line: 867, column: 20, scope: !14860)
!14867 = !DILocation(line: 867, column: 6, scope: !14855)
!14868 = !DILocation(line: 870, column: 16, scope: !14855)
!14869 = !DILocation(line: 871, column: 2, scope: !14855)
!14870 = !DILocation(line: 872, column: 1, scope: !14855)
!14871 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2235, file: !2235, line: 874, type: !14872, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14874)
!14872 = !DISubroutineType(types: !14873)
!14873 = !{null, !14837}
!14874 = !{!14875}
!14875 = !DILocalVariable(name: "l", arg: 1, scope: !14871, file: !2235, line: 874, type: !14837)
!14876 = !DILocation(line: 0, scope: !14871)
!14877 = !DILocation(line: 876, column: 32, scope: !14871)
!14878 = !DILocation(line: 876, column: 18, scope: !14871)
!14879 = !DILocation(line: 876, column: 48, scope: !14871)
!14880 = !DILocation(line: 876, column: 37, scope: !14871)
!14881 = !DILocation(line: 876, column: 35, scope: !14871)
!14882 = !DILocation(line: 876, column: 5, scope: !14871)
!14883 = !DILocation(line: 876, column: 16, scope: !14871)
!14884 = !DILocation(line: 877, column: 1, scope: !14871)
!14885 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2235, file: !2235, line: 888, type: !14886, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14888)
!14886 = !DISubroutineType(types: !14887)
!14887 = !{!105, !2239}
!14888 = !{!14889}
!14889 = !DILocalVariable(name: "thread", arg: 1, scope: !14885, file: !2235, line: 888, type: !2239)
!14890 = !DILocation(line: 0, scope: !14885)
!14891 = !DILocation(line: 893, column: 2, scope: !14885)
!14892 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2235, file: !2235, line: 897, type: !14893, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14895)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{!105, !2239, !32}
!14895 = !{!14896, !14897}
!14896 = !DILocalVariable(name: "thread", arg: 1, scope: !14892, file: !2235, line: 897, type: !2239)
!14897 = !DILocalVariable(name: "options", arg: 2, scope: !14892, file: !2235, line: 897, type: !32)
!14898 = !DILocation(line: 0, scope: !14892)
!14899 = !DILocation(line: 902, column: 2, scope: !14892)
!14900 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2235, file: !2235, line: 1072, type: !14901, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14906)
!14901 = !DISubroutineType(types: !14902)
!14902 = !{!105, !2238, !14903}
!14903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14904, size: 32)
!14904 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !14905)
!14905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!14906 = !{!14907, !14908}
!14907 = !DILocalVariable(name: "thread", arg: 1, scope: !14900, file: !2235, line: 1072, type: !2238)
!14908 = !DILocalVariable(name: "stats", arg: 2, scope: !14900, file: !2235, line: 1073, type: !14903)
!14909 = !DILocation(line: 0, scope: !14900)
!14910 = !DILocation(line: 1075, column: 14, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14900, file: !2235, line: 1075, column: 6)
!14912 = !DILocation(line: 1075, column: 23, scope: !14911)
!14913 = !DILocation(line: 1086, column: 1, scope: !14900)
!14914 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2235, file: !2235, line: 1088, type: !14915, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2341, retainedNodes: !14917)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{!105, !14903}
!14917 = !{!14918}
!14918 = !DILocalVariable(name: "stats", arg: 1, scope: !14914, file: !2235, line: 1088, type: !14903)
!14919 = !DILocation(line: 0, scope: !14914)
!14920 = !DILocation(line: 1094, column: 12, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14914, file: !2235, line: 1094, column: 6)
!14922 = !DILocation(line: 1120, column: 1, scope: !14914)
!14923 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14924, file: !14924, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3167, retainedNodes: !397)
!14924 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14925 = !DILocation(line: 30, column: 2, scope: !14923)
!14926 = !DILocation(line: 31, column: 1, scope: !14923)
!14927 = distinct !DISubprogram(name: "idle", scope: !14924, file: !14924, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3167, retainedNodes: !14928)
!14928 = !{!14929, !14930, !14931}
!14929 = !DILocalVariable(name: "unused1", arg: 1, scope: !14927, file: !14924, line: 33, type: !104)
!14930 = !DILocalVariable(name: "unused2", arg: 2, scope: !14927, file: !14924, line: 33, type: !104)
!14931 = !DILocalVariable(name: "unused3", arg: 3, scope: !14927, file: !14924, line: 33, type: !104)
!14932 = !DILocation(line: 0, scope: !14927)
!14933 = !DILocation(line: 39, column: 2, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !14924, line: 39, column: 2)
!14935 = distinct !DILexicalBlock(scope: !14927, file: !14924, line: 39, column: 2)
!14936 = !DILocation(line: 39, column: 2, scope: !14935)
!14937 = !DILocation(line: 39, column: 2, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14934, file: !14924, line: 39, column: 2)
!14939 = !DILocation(line: 55, column: 2, scope: !14940, inlinedAt: !14944)
!14940 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3167, retainedNodes: !14941)
!14941 = !{!14942, !14943}
!14942 = !DILocalVariable(name: "key", scope: !14940, file: !7467, line: 44, type: !32)
!14943 = !DILocalVariable(name: "tmp", scope: !14940, file: !7467, line: 53, type: !32)
!14944 = distinct !DILocation(line: 62, column: 10, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14927, file: !14924, line: 41, column: 15)
!14946 = !{i64 2225984}
!14947 = !DILocation(line: 0, scope: !14940, inlinedAt: !14944)
!14948 = !DILocation(line: 86, column: 3, scope: !14945)
!14949 = !DILocation(line: 41, column: 2, scope: !14927)
!14950 = distinct !{!14950, !14949, !14951}
!14951 = !DILocation(line: 105, column: 2, scope: !14927)
!14952 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3167, retainedNodes: !397)
!14953 = !DILocation(line: 5629, column: 2, scope: !14952)
!14954 = !DILocation(line: 5630, column: 1, scope: !14952)
!14955 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14956 = distinct !DISubprogram(name: "k_msgq_init", scope: !14957, file: !14957, line: 35, type: !14958, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !14973)
!14957 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14958 = !DISubroutineType(types: !14959)
!14959 = !{null, !14960, !102, !111, !113}
!14960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14961, size: 32)
!14961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !14962)
!14962 = !{!14963, !14964, !14965, !14966, !14967, !14968, !14969, !14970, !14971, !14972}
!14963 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14961, file: !122, line: 4206, baseType: !3205, size: 64)
!14964 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14961, file: !122, line: 4208, baseType: !3267, size: 32, offset: 64)
!14965 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14961, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!14966 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14961, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!14967 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14961, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!14968 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14961, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!14969 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14961, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!14970 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14961, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!14971 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14961, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!14972 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14961, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!14973 = !{!14974, !14975, !14976, !14977}
!14974 = !DILocalVariable(name: "msgq", arg: 1, scope: !14956, file: !14957, line: 35, type: !14960)
!14975 = !DILocalVariable(name: "buffer", arg: 2, scope: !14956, file: !14957, line: 35, type: !102)
!14976 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14956, file: !14957, line: 35, type: !111)
!14977 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14956, file: !14957, line: 36, type: !113)
!14978 = !DILocation(line: 0, scope: !14956)
!14979 = !DILocation(line: 38, column: 8, scope: !14956)
!14980 = !DILocation(line: 38, column: 17, scope: !14956)
!14981 = !DILocation(line: 39, column: 8, scope: !14956)
!14982 = !DILocation(line: 39, column: 17, scope: !14956)
!14983 = !DILocation(line: 40, column: 8, scope: !14956)
!14984 = !DILocation(line: 40, column: 21, scope: !14956)
!14985 = !DILocation(line: 41, column: 40, scope: !14956)
!14986 = !DILocation(line: 41, column: 28, scope: !14956)
!14987 = !DILocation(line: 41, column: 8, scope: !14956)
!14988 = !DILocation(line: 41, column: 19, scope: !14956)
!14989 = !DILocation(line: 42, column: 8, scope: !14956)
!14990 = !DILocation(line: 42, column: 17, scope: !14956)
!14991 = !DILocation(line: 43, column: 8, scope: !14956)
!14992 = !DILocation(line: 43, column: 18, scope: !14956)
!14993 = !DILocation(line: 44, column: 8, scope: !14956)
!14994 = !DILocation(line: 44, column: 18, scope: !14956)
!14995 = !DILocation(line: 45, column: 8, scope: !14956)
!14996 = !DILocation(line: 45, column: 14, scope: !14956)
!14997 = !DILocation(line: 46, column: 22, scope: !14956)
!14998 = !DILocation(line: 46, column: 2, scope: !14956)
!14999 = !DILocation(line: 47, column: 15, scope: !14956)
!15000 = !DILocation(line: 55, column: 1, scope: !14956)
!15001 = distinct !DISubprogram(name: "z_waitq_init", scope: !14534, file: !14534, line: 47, type: !15002, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15004)
!15002 = !DISubroutineType(types: !15003)
!15003 = !{null, !3204}
!15004 = !{!15005}
!15005 = !DILocalVariable(name: "w", arg: 1, scope: !15001, file: !14534, line: 47, type: !3204)
!15006 = !DILocation(line: 0, scope: !15001)
!15007 = !DILocation(line: 49, column: 21, scope: !15001)
!15008 = !DILocation(line: 49, column: 2, scope: !15001)
!15009 = !DILocation(line: 50, column: 1, scope: !15001)
!15010 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15011, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15014)
!15011 = !DISubroutineType(types: !15012)
!15012 = !{null, !15013}
!15013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 32)
!15014 = !{!15015}
!15015 = !DILocalVariable(name: "list", arg: 1, scope: !15010, file: !137, line: 197, type: !15013)
!15016 = !DILocation(line: 0, scope: !15010)
!15017 = !DILocation(line: 199, column: 8, scope: !15010)
!15018 = !DILocation(line: 199, column: 13, scope: !15010)
!15019 = !DILocation(line: 200, column: 8, scope: !15010)
!15020 = !DILocation(line: 200, column: 13, scope: !15010)
!15021 = !DILocation(line: 201, column: 1, scope: !15010)
!15022 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14957, file: !14957, line: 57, type: !15023, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15025)
!15023 = !DISubroutineType(types: !15024)
!15024 = !{!105, !14960, !111, !113}
!15025 = !{!15026, !15027, !15028, !15029, !15030, !15031}
!15026 = !DILocalVariable(name: "msgq", arg: 1, scope: !15022, file: !14957, line: 57, type: !14960)
!15027 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15022, file: !14957, line: 57, type: !111)
!15028 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15022, file: !14957, line: 58, type: !113)
!15029 = !DILocalVariable(name: "buffer", scope: !15022, file: !14957, line: 60, type: !104)
!15030 = !DILocalVariable(name: "ret", scope: !15022, file: !14957, line: 61, type: !105)
!15031 = !DILocalVariable(name: "total_size", scope: !15022, file: !14957, line: 62, type: !111)
!15032 = !DILocation(line: 0, scope: !15022)
!15033 = !DILocation(line: 62, column: 2, scope: !15022)
!15034 = !DILocation(line: 66, column: 6, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15022, file: !14957, line: 66, column: 6)
!15036 = !DILocation(line: 66, column: 6, scope: !15022)
!15037 = !DILocation(line: 69, column: 28, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15035, file: !14957, line: 68, column: 9)
!15039 = !DILocation(line: 69, column: 12, scope: !15038)
!15040 = !DILocation(line: 70, column: 14, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15038, file: !14957, line: 70, column: 7)
!15042 = !DILocation(line: 70, column: 7, scope: !15038)
!15043 = !DILocation(line: 71, column: 4, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15041, file: !14957, line: 70, column: 23)
!15045 = !DILocation(line: 72, column: 10, scope: !15044)
!15046 = !DILocation(line: 72, column: 16, scope: !15044)
!15047 = !DILocation(line: 74, column: 3, scope: !15044)
!15048 = !DILocation(line: 0, scope: !15035)
!15049 = !DILocation(line: 82, column: 1, scope: !15022)
!15050 = !DILocation(line: 81, column: 2, scope: !15022)
!15051 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15052, file: !15052, line: 105, type: !15053, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15055)
!15052 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15053 = !DISubroutineType(types: !15054)
!15054 = !{!492, !111, !111, !2643}
!15055 = !{!15056, !15057, !15058}
!15056 = !DILocalVariable(name: "a", arg: 1, scope: !15051, file: !15052, line: 105, type: !111)
!15057 = !DILocalVariable(name: "b", arg: 2, scope: !15051, file: !15052, line: 105, type: !111)
!15058 = !DILocalVariable(name: "result", arg: 3, scope: !15051, file: !15052, line: 105, type: !2643)
!15059 = !DILocation(line: 0, scope: !15051)
!15060 = !DILocation(line: 107, column: 9, scope: !15051)
!15061 = !DILocation(line: 107, column: 2, scope: !15051)
!15062 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15063, file: !15063, line: 102, type: !15064, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15065)
!15063 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15064 = !DISubroutineType(types: !3148)
!15065 = !{!15066}
!15066 = !DILocalVariable(name: "size", arg: 1, scope: !15062, file: !15063, line: 102, type: !111)
!15067 = !DILocation(line: 0, scope: !15062)
!15068 = !DILocation(line: 104, column: 9, scope: !15062)
!15069 = !DILocation(line: 104, column: 2, scope: !15062)
!15070 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15063, file: !15063, line: 87, type: !15071, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15071 = !DISubroutineType(types: !15072)
!15072 = !{!104, !111, !111}
!15073 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14957, file: !14957, line: 95, type: !15074, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15076)
!15074 = !DISubroutineType(types: !15075)
!15075 = !{!105, !14960}
!15076 = !{!15077}
!15077 = !DILocalVariable(name: "msgq", arg: 1, scope: !15073, file: !14957, line: 95, type: !14960)
!15078 = !DILocation(line: 0, scope: !15073)
!15079 = !DILocation(line: 99, column: 2, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15073, file: !14957, line: 99, column: 2)
!15081 = !DILocation(line: 99, column: 2, scope: !15073)
!15082 = !DILocation(line: 105, column: 13, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15073, file: !14957, line: 105, column: 6)
!15084 = !DILocation(line: 105, column: 19, scope: !15083)
!15085 = !DILocation(line: 105, column: 40, scope: !15083)
!15086 = !DILocation(line: 105, column: 6, scope: !15073)
!15087 = !DILocation(line: 106, column: 16, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15083, file: !14957, line: 105, column: 47)
!15089 = !DILocation(line: 106, column: 3, scope: !15088)
!15090 = !DILocation(line: 107, column: 15, scope: !15088)
!15091 = !DILocation(line: 108, column: 2, scope: !15088)
!15092 = !DILocation(line: 113, column: 1, scope: !15073)
!15093 = distinct !DISubprogram(name: "z_waitq_head", scope: !14534, file: !14534, line: 52, type: !15094, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15096)
!15094 = !DISubroutineType(types: !15095)
!15095 = !{!3187, !3204}
!15096 = !{!15097}
!15097 = !DILocalVariable(name: "w", arg: 1, scope: !15093, file: !14534, line: 52, type: !3204)
!15098 = !DILocation(line: 0, scope: !15093)
!15099 = !DILocation(line: 54, column: 52, scope: !15093)
!15100 = !DILocation(line: 54, column: 28, scope: !15093)
!15101 = !DILocation(line: 54, column: 9, scope: !15093)
!15102 = !DILocation(line: 54, column: 2, scope: !15093)
!15103 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7722, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15104 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !15105, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15107)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{!3172, !15013}
!15107 = !{!15108}
!15108 = !DILocalVariable(name: "list", arg: 1, scope: !15104, file: !137, line: 294, type: !15013)
!15109 = !DILocation(line: 0, scope: !15104)
!15110 = !DILocation(line: 296, column: 9, scope: !15104)
!15111 = !DILocation(line: 296, column: 49, scope: !15104)
!15112 = !DILocation(line: 296, column: 2, scope: !15104)
!15113 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !15114, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15116)
!15114 = !DISubroutineType(types: !15115)
!15115 = !{!492, !15013}
!15116 = !{!15117}
!15117 = !DILocalVariable(name: "list", arg: 1, scope: !15113, file: !137, line: 266, type: !15013)
!15118 = !DILocation(line: 0, scope: !15113)
!15119 = !DILocation(line: 268, column: 15, scope: !15113)
!15120 = !DILocation(line: 268, column: 20, scope: !15113)
!15121 = !DILocation(line: 268, column: 2, scope: !15113)
!15122 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14957, file: !14957, line: 116, type: !15123, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15129)
!15123 = !DISubroutineType(types: !15124)
!15124 = !{!105, !14960, !13, !15125}
!15125 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15126)
!15126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15127)
!15127 = !{!15128}
!15128 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15126, file: !108, line: 66, baseType: !107, size: 64)
!15129 = !{!15130, !15131, !15132, !15133, !15134, !15139}
!15130 = !DILocalVariable(name: "msgq", arg: 1, scope: !15122, file: !14957, line: 116, type: !14960)
!15131 = !DILocalVariable(name: "data", arg: 2, scope: !15122, file: !14957, line: 116, type: !13)
!15132 = !DILocalVariable(name: "timeout", arg: 3, scope: !15122, file: !14957, line: 116, type: !15125)
!15133 = !DILocalVariable(name: "pending_thread", scope: !15122, file: !14957, line: 120, type: !3187)
!15134 = !DILocalVariable(name: "key", scope: !15122, file: !14957, line: 121, type: !15135)
!15135 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15136)
!15136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15137)
!15137 = !{!15138}
!15138 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15136, file: !236, line: 33, baseType: !105, size: 32)
!15139 = !DILocalVariable(name: "result", scope: !15122, file: !14957, line: 122, type: !105)
!15140 = !DILocation(line: 0, scope: !15122)
!15141 = !DILocation(line: 1031, column: 3, scope: !15142, inlinedAt: !15145)
!15142 = distinct !DISubprogram(name: "__get_IPSR", scope: !7785, file: !7785, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15143)
!15143 = !{!15144}
!15144 = !DILocalVariable(name: "result", scope: !15142, file: !7785, line: 1029, type: !113)
!15145 = distinct !DILocation(line: 48, column: 10, scope: !15146, inlinedAt: !15147)
!15146 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8832, file: !8832, line: 46, type: !8833, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !397)
!15147 = distinct !DILocation(line: 118, column: 2, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15149, file: !14957, line: 118, column: 2)
!15149 = distinct !DILexicalBlock(scope: !15122, file: !14957, line: 118, column: 2)
!15150 = !{i64 3549734}
!15151 = !DILocation(line: 0, scope: !15142, inlinedAt: !15145)
!15152 = !DILocation(line: 48, column: 9, scope: !15146, inlinedAt: !15147)
!15153 = !DILocation(line: 118, column: 2, scope: !15148)
!15154 = !DILocation(line: 118, column: 2, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15148, file: !14957, line: 118, column: 2)
!15156 = !DILocation(line: 124, column: 27, scope: !15122)
!15157 = !DILocalVariable(name: "l", arg: 1, scope: !15158, file: !236, line: 136, type: !15161)
!15158 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15159, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15162)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!15135, !15161}
!15161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 32)
!15162 = !{!15157, !15163}
!15163 = !DILocalVariable(name: "k", scope: !15158, file: !236, line: 139, type: !15135)
!15164 = !DILocation(line: 0, scope: !15158, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 124, column: 8, scope: !15122)
!15166 = !DILocation(line: 55, column: 2, scope: !15167, inlinedAt: !15171)
!15167 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15168)
!15168 = !{!15169, !15170}
!15169 = !DILocalVariable(name: "key", scope: !15167, file: !7467, line: 44, type: !32)
!15170 = !DILocalVariable(name: "tmp", scope: !15167, file: !7467, line: 53, type: !32)
!15171 = distinct !DILocation(line: 145, column: 10, scope: !15158, inlinedAt: !15165)
!15172 = !{i64 2232121}
!15173 = !DILocation(line: 0, scope: !15167, inlinedAt: !15171)
!15174 = !DILocation(line: 148, column: 2, scope: !15175, inlinedAt: !15165)
!15175 = distinct !DILexicalBlock(scope: !15176, file: !236, line: 148, column: 2)
!15176 = distinct !DILexicalBlock(scope: !15158, file: !236, line: 148, column: 2)
!15177 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15165)
!15178 = !DILocation(line: 148, column: 2, scope: !15179, inlinedAt: !15165)
!15179 = distinct !DILexicalBlock(scope: !15175, file: !236, line: 148, column: 2)
!15180 = !DILocation(line: 160, column: 2, scope: !15158, inlinedAt: !15165)
!15181 = !DILocation(line: 128, column: 12, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15122, file: !14957, line: 128, column: 6)
!15183 = !DILocation(line: 128, column: 30, scope: !15182)
!15184 = !DILocation(line: 128, column: 22, scope: !15182)
!15185 = !DILocation(line: 128, column: 6, scope: !15122)
!15186 = !DILocation(line: 130, column: 49, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15182, file: !14957, line: 128, column: 40)
!15188 = !DILocation(line: 130, column: 20, scope: !15187)
!15189 = !DILocation(line: 131, column: 22, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15187, file: !14957, line: 131, column: 7)
!15191 = !DILocation(line: 131, column: 7, scope: !15187)
!15192 = !DILocation(line: 135, column: 38, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15190, file: !14957, line: 131, column: 31)
!15194 = !DILocation(line: 136, column: 17, scope: !15193)
!15195 = !DILocation(line: 135, column: 10, scope: !15193)
!15196 = !DILocalVariable(name: "thread", arg: 1, scope: !15197, file: !14214, line: 65, type: !3187)
!15197 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14214, file: !14214, line: 65, type: !15198, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15200)
!15198 = !DISubroutineType(types: !15199)
!15199 = !{null, !3187, !32}
!15200 = !{!15196, !15201}
!15201 = !DILocalVariable(name: "value", arg: 2, scope: !15197, file: !14214, line: 65, type: !32)
!15202 = !DILocation(line: 0, scope: !15197, inlinedAt: !15203)
!15203 = distinct !DILocation(line: 138, column: 4, scope: !15193)
!15204 = !DILocation(line: 67, column: 15, scope: !15197, inlinedAt: !15203)
!15205 = !DILocation(line: 67, column: 33, scope: !15197, inlinedAt: !15203)
!15206 = !DILocation(line: 139, column: 4, scope: !15193)
!15207 = !DILocation(line: 140, column: 4, scope: !15193)
!15208 = !DILocation(line: 141, column: 4, scope: !15193)
!15209 = !DILocation(line: 144, column: 23, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15190, file: !14957, line: 142, column: 10)
!15211 = !DILocation(line: 144, column: 46, scope: !15210)
!15212 = !DILocation(line: 144, column: 10, scope: !15210)
!15213 = !DILocation(line: 145, column: 29, scope: !15210)
!15214 = !DILocation(line: 145, column: 20, scope: !15210)
!15215 = !DILocation(line: 146, column: 33, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15210, file: !14957, line: 146, column: 8)
!15217 = !DILocation(line: 146, column: 24, scope: !15216)
!15218 = !DILocation(line: 146, column: 8, scope: !15210)
!15219 = !DILocation(line: 147, column: 29, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15216, file: !14957, line: 146, column: 45)
!15221 = !DILocation(line: 147, column: 21, scope: !15220)
!15222 = !DILocation(line: 148, column: 4, scope: !15220)
!15223 = !DILocation(line: 149, column: 19, scope: !15210)
!15224 = !DILocation(line: 155, column: 2, scope: !15187)
!15225 = !DILocation(line: 155, column: 13, scope: !15182)
!15226 = !DILocation(line: 162, column: 3, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !14957, line: 158, column: 9)
!15228 = distinct !DILexicalBlock(scope: !15182, file: !14957, line: 155, column: 13)
!15229 = !DILocation(line: 162, column: 18, scope: !15227)
!15230 = !DILocation(line: 162, column: 28, scope: !15227)
!15231 = !DILocation(line: 164, column: 49, scope: !15227)
!15232 = !DILocation(line: 164, column: 12, scope: !15227)
!15233 = !DILocation(line: 166, column: 3, scope: !15227)
!15234 = !DILocation(line: 0, scope: !15182)
!15235 = !DILocalVariable(name: "key", arg: 2, scope: !15236, file: !236, line: 190, type: !15135)
!15236 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15237, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15239)
!15237 = !DISubroutineType(types: !15238)
!15238 = !{null, !15161, !15135}
!15239 = !{!15240, !15235}
!15240 = !DILocalVariable(name: "l", arg: 1, scope: !15236, file: !236, line: 189, type: !15161)
!15241 = !DILocation(line: 0, scope: !15236, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 171, column: 2, scope: !15122)
!15243 = !DILocation(line: 194, column: 2, scope: !15244, inlinedAt: !15242)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !236, line: 194, column: 2)
!15245 = distinct !DILexicalBlock(scope: !15236, file: !236, line: 194, column: 2)
!15246 = !DILocation(line: 194, column: 2, scope: !15245, inlinedAt: !15242)
!15247 = !DILocation(line: 194, column: 2, scope: !15248, inlinedAt: !15242)
!15248 = distinct !DILexicalBlock(scope: !15244, file: !236, line: 194, column: 2)
!15249 = !DILocalVariable(name: "key", arg: 1, scope: !15250, file: !7467, line: 84, type: !32)
!15250 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15251)
!15251 = !{!15249}
!15252 = !DILocation(line: 0, scope: !15250, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 215, column: 2, scope: !15236, inlinedAt: !15242)
!15254 = !DILocation(line: 95, column: 2, scope: !15250, inlinedAt: !15253)
!15255 = !{i64 2232938}
!15256 = !DILocation(line: 173, column: 2, scope: !15122)
!15257 = !DILocation(line: 174, column: 1, scope: !15122)
!15258 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14957, file: !14957, line: 188, type: !15259, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15267)
!15259 = !DISubroutineType(types: !15260)
!15260 = !{null, !14960, !15261}
!15261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15262, size: 32)
!15262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !15263)
!15263 = !{!15264, !15265, !15266}
!15264 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15262, file: !122, line: 4261, baseType: !111, size: 32)
!15265 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15262, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!15266 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15262, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!15267 = !{!15268, !15269}
!15268 = !DILocalVariable(name: "msgq", arg: 1, scope: !15258, file: !14957, line: 188, type: !14960)
!15269 = !DILocalVariable(name: "attrs", arg: 2, scope: !15258, file: !14957, line: 188, type: !15261)
!15270 = !DILocation(line: 0, scope: !15258)
!15271 = !DILocation(line: 190, column: 26, scope: !15258)
!15272 = !DILocation(line: 190, column: 9, scope: !15258)
!15273 = !DILocation(line: 190, column: 18, scope: !15258)
!15274 = !DILocation(line: 191, column: 26, scope: !15258)
!15275 = !DILocation(line: 191, column: 9, scope: !15258)
!15276 = !DILocation(line: 191, column: 18, scope: !15258)
!15277 = !DILocation(line: 192, column: 27, scope: !15258)
!15278 = !DILocation(line: 192, column: 9, scope: !15258)
!15279 = !DILocation(line: 192, column: 19, scope: !15258)
!15280 = !DILocation(line: 193, column: 1, scope: !15258)
!15281 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14957, file: !14957, line: 206, type: !15282, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15284)
!15282 = !DISubroutineType(types: !15283)
!15283 = !{!105, !14960, !104, !15125}
!15284 = !{!15285, !15286, !15287, !15288, !15289, !15290}
!15285 = !DILocalVariable(name: "msgq", arg: 1, scope: !15281, file: !14957, line: 206, type: !14960)
!15286 = !DILocalVariable(name: "data", arg: 2, scope: !15281, file: !14957, line: 206, type: !104)
!15287 = !DILocalVariable(name: "timeout", arg: 3, scope: !15281, file: !14957, line: 206, type: !15125)
!15288 = !DILocalVariable(name: "key", scope: !15281, file: !14957, line: 210, type: !15135)
!15289 = !DILocalVariable(name: "pending_thread", scope: !15281, file: !14957, line: 211, type: !3187)
!15290 = !DILocalVariable(name: "result", scope: !15281, file: !14957, line: 212, type: !105)
!15291 = !DILocation(line: 0, scope: !15281)
!15292 = !DILocation(line: 1031, column: 3, scope: !15142, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 48, column: 10, scope: !15146, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 208, column: 2, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15296, file: !14957, line: 208, column: 2)
!15296 = distinct !DILexicalBlock(scope: !15281, file: !14957, line: 208, column: 2)
!15297 = !DILocation(line: 0, scope: !15142, inlinedAt: !15293)
!15298 = !DILocation(line: 48, column: 9, scope: !15146, inlinedAt: !15294)
!15299 = !DILocation(line: 208, column: 2, scope: !15295)
!15300 = !DILocation(line: 208, column: 2, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15295, file: !14957, line: 208, column: 2)
!15302 = !DILocation(line: 214, column: 27, scope: !15281)
!15303 = !DILocation(line: 0, scope: !15158, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 214, column: 8, scope: !15281)
!15305 = !DILocation(line: 55, column: 2, scope: !15167, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 145, column: 10, scope: !15158, inlinedAt: !15304)
!15307 = !DILocation(line: 0, scope: !15167, inlinedAt: !15306)
!15308 = !DILocation(line: 148, column: 2, scope: !15175, inlinedAt: !15304)
!15309 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15304)
!15310 = !DILocation(line: 148, column: 2, scope: !15179, inlinedAt: !15304)
!15311 = !DILocation(line: 160, column: 2, scope: !15158, inlinedAt: !15304)
!15312 = !DILocation(line: 218, column: 12, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15281, file: !14957, line: 218, column: 6)
!15314 = !DILocation(line: 218, column: 22, scope: !15313)
!15315 = !DILocation(line: 218, column: 6, scope: !15281)
!15316 = !DILocation(line: 220, column: 28, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15313, file: !14957, line: 218, column: 28)
!15318 = !DILocation(line: 220, column: 44, scope: !15317)
!15319 = !DILocation(line: 220, column: 9, scope: !15317)
!15320 = !DILocation(line: 221, column: 27, scope: !15317)
!15321 = !DILocation(line: 221, column: 18, scope: !15317)
!15322 = !DILocation(line: 222, column: 31, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15317, file: !14957, line: 222, column: 7)
!15324 = !DILocation(line: 222, column: 22, scope: !15323)
!15325 = !DILocation(line: 222, column: 7, scope: !15317)
!15326 = !DILocation(line: 223, column: 27, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15323, file: !14957, line: 222, column: 43)
!15328 = !DILocation(line: 223, column: 19, scope: !15327)
!15329 = !DILocation(line: 224, column: 3, scope: !15327)
!15330 = !DILocation(line: 225, column: 18, scope: !15317)
!15331 = !DILocation(line: 228, column: 49, scope: !15317)
!15332 = !DILocation(line: 228, column: 20, scope: !15317)
!15333 = !DILocation(line: 229, column: 22, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15317, file: !14957, line: 229, column: 7)
!15335 = !DILocation(line: 229, column: 7, scope: !15317)
!15336 = !DILocation(line: 233, column: 23, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15334, file: !14957, line: 229, column: 31)
!15338 = !DILocation(line: 233, column: 55, scope: !15337)
!15339 = !DILocation(line: 234, column: 17, scope: !15337)
!15340 = !DILocation(line: 233, column: 10, scope: !15337)
!15341 = !DILocation(line: 235, column: 29, scope: !15337)
!15342 = !DILocation(line: 235, column: 20, scope: !15337)
!15343 = !DILocation(line: 236, column: 33, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15337, file: !14957, line: 236, column: 8)
!15345 = !DILocation(line: 236, column: 24, scope: !15344)
!15346 = !DILocation(line: 236, column: 8, scope: !15337)
!15347 = !DILocation(line: 237, column: 29, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15344, file: !14957, line: 236, column: 45)
!15349 = !DILocation(line: 237, column: 21, scope: !15348)
!15350 = !DILocation(line: 238, column: 4, scope: !15348)
!15351 = !DILocation(line: 239, column: 19, scope: !15337)
!15352 = !DILocation(line: 0, scope: !15197, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 242, column: 4, scope: !15337)
!15354 = !DILocation(line: 67, column: 15, scope: !15197, inlinedAt: !15353)
!15355 = !DILocation(line: 67, column: 33, scope: !15197, inlinedAt: !15353)
!15356 = !DILocation(line: 243, column: 4, scope: !15337)
!15357 = !DILocation(line: 244, column: 4, scope: !15337)
!15358 = !DILocation(line: 248, column: 4, scope: !15337)
!15359 = !DILocation(line: 251, column: 13, scope: !15313)
!15360 = !DILocation(line: 258, column: 3, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15362, file: !14957, line: 254, column: 9)
!15362 = distinct !DILexicalBlock(scope: !15313, file: !14957, line: 251, column: 13)
!15363 = !DILocation(line: 258, column: 18, scope: !15361)
!15364 = !DILocation(line: 258, column: 28, scope: !15361)
!15365 = !DILocation(line: 260, column: 49, scope: !15361)
!15366 = !DILocation(line: 260, column: 12, scope: !15361)
!15367 = !DILocation(line: 262, column: 3, scope: !15361)
!15368 = !DILocation(line: 0, scope: !15313)
!15369 = !DILocation(line: 0, scope: !15236, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 267, column: 2, scope: !15281)
!15371 = !DILocation(line: 194, column: 2, scope: !15244, inlinedAt: !15370)
!15372 = !DILocation(line: 194, column: 2, scope: !15245, inlinedAt: !15370)
!15373 = !DILocation(line: 194, column: 2, scope: !15248, inlinedAt: !15370)
!15374 = !DILocation(line: 0, scope: !15250, inlinedAt: !15375)
!15375 = distinct !DILocation(line: 215, column: 2, scope: !15236, inlinedAt: !15370)
!15376 = !DILocation(line: 95, column: 2, scope: !15250, inlinedAt: !15375)
!15377 = !DILocation(line: 269, column: 2, scope: !15281)
!15378 = !DILocation(line: 270, column: 1, scope: !15281)
!15379 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14957, file: !14957, line: 284, type: !15380, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15382)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{!105, !14960, !104}
!15382 = !{!15383, !15384, !15385, !15386}
!15383 = !DILocalVariable(name: "msgq", arg: 1, scope: !15379, file: !14957, line: 284, type: !14960)
!15384 = !DILocalVariable(name: "data", arg: 2, scope: !15379, file: !14957, line: 284, type: !104)
!15385 = !DILocalVariable(name: "key", scope: !15379, file: !14957, line: 286, type: !15135)
!15386 = !DILocalVariable(name: "result", scope: !15379, file: !14957, line: 287, type: !105)
!15387 = !DILocation(line: 0, scope: !15379)
!15388 = !DILocation(line: 289, column: 27, scope: !15379)
!15389 = !DILocation(line: 0, scope: !15158, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 289, column: 8, scope: !15379)
!15391 = !DILocation(line: 55, column: 2, scope: !15167, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 145, column: 10, scope: !15158, inlinedAt: !15390)
!15393 = !DILocation(line: 0, scope: !15167, inlinedAt: !15392)
!15394 = !DILocation(line: 148, column: 2, scope: !15175, inlinedAt: !15390)
!15395 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15390)
!15396 = !DILocation(line: 148, column: 2, scope: !15179, inlinedAt: !15390)
!15397 = !DILocation(line: 160, column: 2, scope: !15158, inlinedAt: !15390)
!15398 = !DILocation(line: 291, column: 12, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15379, file: !14957, line: 291, column: 6)
!15400 = !DILocation(line: 291, column: 22, scope: !15399)
!15401 = !DILocation(line: 291, column: 6, scope: !15379)
!15402 = !DILocation(line: 293, column: 28, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15399, file: !14957, line: 291, column: 28)
!15404 = !DILocation(line: 293, column: 44, scope: !15403)
!15405 = !DILocation(line: 293, column: 9, scope: !15403)
!15406 = !DILocation(line: 295, column: 2, scope: !15403)
!15407 = !DILocation(line: 0, scope: !15399)
!15408 = !DILocation(line: 0, scope: !15236, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 302, column: 2, scope: !15379)
!15410 = !DILocation(line: 194, column: 2, scope: !15244, inlinedAt: !15409)
!15411 = !DILocation(line: 194, column: 2, scope: !15245, inlinedAt: !15409)
!15412 = !DILocation(line: 194, column: 2, scope: !15248, inlinedAt: !15409)
!15413 = !DILocation(line: 0, scope: !15250, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 215, column: 2, scope: !15236, inlinedAt: !15409)
!15415 = !DILocation(line: 95, column: 2, scope: !15250, inlinedAt: !15414)
!15416 = !DILocation(line: 304, column: 2, scope: !15379)
!15417 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14957, file: !14957, line: 318, type: !15418, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !15420)
!15418 = !DISubroutineType(types: !15419)
!15419 = !{null, !14960}
!15420 = !{!15421, !15422, !15423}
!15421 = !DILocalVariable(name: "msgq", arg: 1, scope: !15417, file: !14957, line: 318, type: !14960)
!15422 = !DILocalVariable(name: "key", scope: !15417, file: !14957, line: 320, type: !15135)
!15423 = !DILocalVariable(name: "pending_thread", scope: !15417, file: !14957, line: 321, type: !3187)
!15424 = !DILocation(line: 0, scope: !15417)
!15425 = !DILocation(line: 323, column: 27, scope: !15417)
!15426 = !DILocation(line: 0, scope: !15158, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 323, column: 8, scope: !15417)
!15428 = !DILocation(line: 55, column: 2, scope: !15167, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 145, column: 10, scope: !15158, inlinedAt: !15427)
!15430 = !DILocation(line: 0, scope: !15167, inlinedAt: !15429)
!15431 = !DILocation(line: 148, column: 2, scope: !15175, inlinedAt: !15427)
!15432 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15427)
!15433 = !DILocation(line: 148, column: 2, scope: !15179, inlinedAt: !15427)
!15434 = !DILocation(line: 160, column: 2, scope: !15158, inlinedAt: !15427)
!15435 = !DILocation(line: 328, column: 27, scope: !15417)
!15436 = !DILocation(line: 328, column: 65, scope: !15417)
!15437 = !DILocation(line: 328, column: 2, scope: !15417)
!15438 = !DILocation(line: 0, scope: !15197, inlinedAt: !15439)
!15439 = distinct !DILocation(line: 329, column: 3, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15417, file: !14957, line: 328, column: 74)
!15441 = !DILocation(line: 67, column: 15, scope: !15197, inlinedAt: !15439)
!15442 = !DILocation(line: 67, column: 33, scope: !15197, inlinedAt: !15439)
!15443 = !DILocation(line: 330, column: 3, scope: !15440)
!15444 = distinct !{!15444, !15437, !15445}
!15445 = !DILocation(line: 331, column: 2, scope: !15417)
!15446 = !DILocation(line: 333, column: 8, scope: !15417)
!15447 = !DILocation(line: 333, column: 18, scope: !15417)
!15448 = !DILocation(line: 334, column: 25, scope: !15417)
!15449 = !DILocation(line: 334, column: 8, scope: !15417)
!15450 = !DILocation(line: 334, column: 17, scope: !15417)
!15451 = !DILocation(line: 336, column: 2, scope: !15417)
!15452 = !DILocation(line: 337, column: 1, scope: !15417)
!15453 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2380, file: !2380, line: 41, type: !15454, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15467)
!15454 = !DISubroutineType(types: !15455)
!15455 = !{!105, !15456, !32, !32}
!15456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15457, size: 32)
!15457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !15458)
!15458 = !{!15459, !15465, !15466}
!15459 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15457, file: !122, line: 2910, baseType: !15460, size: 64)
!15460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !15461)
!15461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !15462)
!15462 = !{!15463}
!15463 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15461, file: !163, line: 232, baseType: !15464, size: 64)
!15464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2366)
!15465 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15457, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!15466 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15457, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!15467 = !{!15468, !15469, !15470}
!15468 = !DILocalVariable(name: "sem", arg: 1, scope: !15453, file: !2380, line: 41, type: !15456)
!15469 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15453, file: !2380, line: 41, type: !32)
!15470 = !DILocalVariable(name: "limit", arg: 3, scope: !15453, file: !2380, line: 42, type: !32)
!15471 = !DILocation(line: 0, scope: !15453)
!15472 = !DILocation(line: 47, column: 2, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15453, file: !2380, line: 47, column: 2)
!15474 = !DILocation(line: 53, column: 7, scope: !15453)
!15475 = !DILocation(line: 53, column: 13, scope: !15453)
!15476 = !DILocation(line: 54, column: 7, scope: !15453)
!15477 = !DILocation(line: 54, column: 13, scope: !15453)
!15478 = !DILocation(line: 58, column: 21, scope: !15453)
!15479 = !DILocation(line: 58, column: 2, scope: !15453)
!15480 = !DILocation(line: 64, column: 2, scope: !15453)
!15481 = !DILocation(line: 65, column: 1, scope: !15453)
!15482 = distinct !DISubprogram(name: "z_waitq_init", scope: !14534, file: !14534, line: 47, type: !15483, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15486)
!15483 = !DISubroutineType(types: !15484)
!15484 = !{null, !15485}
!15485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15460, size: 32)
!15486 = !{!15487}
!15487 = !DILocalVariable(name: "w", arg: 1, scope: !15482, file: !14534, line: 47, type: !15485)
!15488 = !DILocation(line: 0, scope: !15482)
!15489 = !DILocation(line: 49, column: 21, scope: !15482)
!15490 = !DILocation(line: 49, column: 2, scope: !15482)
!15491 = !DILocation(line: 50, column: 1, scope: !15482)
!15492 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15493, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15496)
!15493 = !DISubroutineType(types: !15494)
!15494 = !{null, !15495}
!15495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15464, size: 32)
!15496 = !{!15497}
!15497 = !DILocalVariable(name: "list", arg: 1, scope: !15492, file: !137, line: 197, type: !15495)
!15498 = !DILocation(line: 0, scope: !15492)
!15499 = !DILocation(line: 199, column: 8, scope: !15492)
!15500 = !DILocation(line: 199, column: 13, scope: !15492)
!15501 = !DILocation(line: 200, column: 8, scope: !15492)
!15502 = !DILocation(line: 200, column: 13, scope: !15492)
!15503 = !DILocation(line: 201, column: 1, scope: !15492)
!15504 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2380, file: !2380, line: 86, type: !15505, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15507)
!15505 = !DISubroutineType(types: !15506)
!15506 = !{null, !15456}
!15507 = !{!15508, !15509, !15514}
!15508 = !DILocalVariable(name: "sem", arg: 1, scope: !15504, file: !2380, line: 86, type: !15456)
!15509 = !DILocalVariable(name: "key", scope: !15504, file: !2380, line: 88, type: !15510)
!15510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15511)
!15511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15512)
!15512 = !{!15513}
!15513 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15511, file: !236, line: 33, baseType: !105, size: 32)
!15514 = !DILocalVariable(name: "thread", scope: !15504, file: !2380, line: 89, type: !15515)
!15515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15516, size: 32)
!15516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !15517)
!15517 = !{!15518, !15556, !15568, !15569, !15570, !15571, !15577, !15589}
!15518 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15516, file: !127, line: 247, baseType: !15519, size: 384)
!15519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !15520)
!15520 = !{!15521, !15531, !15532, !15533, !15534, !15543, !15544, !15545}
!15521 = !DIDerivedType(tag: DW_TAG_member, scope: !15519, file: !127, line: 60, baseType: !15522, size: 64)
!15522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15519, file: !127, line: 60, size: 64, elements: !15523)
!15523 = !{!15524, !15525}
!15524 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15522, file: !127, line: 61, baseType: !2365, size: 64)
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15522, file: !127, line: 62, baseType: !15526, size: 64)
!15526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !15527)
!15527 = !{!15528}
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15526, file: !153, line: 50, baseType: !15529, size: 64)
!15529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15530, size: 64, elements: !158)
!15530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15526, size: 32)
!15531 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15519, file: !127, line: 68, baseType: !15485, size: 32, offset: 64)
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15519, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15519, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!15534 = !DIDerivedType(tag: DW_TAG_member, scope: !15519, file: !127, line: 90, baseType: !15535, size: 16, offset: 112)
!15535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15519, file: !127, line: 90, size: 16, elements: !15536)
!15536 = !{!15537, !15542}
!15537 = !DIDerivedType(tag: DW_TAG_member, scope: !15535, file: !127, line: 91, baseType: !15538, size: 16)
!15538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15535, file: !127, line: 91, size: 16, elements: !15539)
!15539 = !{!15540, !15541}
!15540 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15538, file: !127, line: 96, baseType: !179, size: 8)
!15541 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15538, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!15542 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15535, file: !127, line: 100, baseType: !183, size: 16)
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15519, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!15544 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15519, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!15545 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15519, file: !127, line: 131, baseType: !15546, size: 192, offset: 192)
!15546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !15547)
!15547 = !{!15548, !15549, !15555}
!15548 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15546, file: !163, line: 245, baseType: !2365, size: 64)
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15546, file: !163, line: 246, baseType: !15550, size: 32, offset: 64)
!15550 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !15551)
!15551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15552, size: 32)
!15552 = !DISubroutineType(types: !15553)
!15553 = !{null, !15554}
!15554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15546, size: 32)
!15555 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15546, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15516, file: !127, line: 250, baseType: !15557, size: 288, offset: 384)
!15557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !15558)
!15558 = !{!15559, !15560, !15561, !15562, !15563, !15564, !15565, !15566, !15567}
!15559 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15557, file: !200, line: 26, baseType: !113, size: 32)
!15560 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15557, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15557, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15557, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15557, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15557, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15557, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15557, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15557, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15516, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15516, file: !127, line: 256, baseType: !15460, size: 64, offset: 704)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15516, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15516, file: !127, line: 300, baseType: !15572, size: 96, offset: 800)
!15572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !15573)
!15573 = !{!15574, !15575, !15576}
!15574 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15572, file: !127, line: 153, baseType: !22, size: 32)
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15572, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15572, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15516, file: !127, line: 325, baseType: !15578, size: 32, offset: 896)
!15578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15579, size: 32)
!15579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !15580)
!15580 = !{!15581, !15587, !15588}
!15581 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15579, file: !122, line: 5074, baseType: !15582, size: 96)
!15582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !15583)
!15583 = !{!15584, !15585, !15586}
!15584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15582, file: !226, line: 57, baseType: !229, size: 32)
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15582, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15582, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15579, file: !122, line: 5075, baseType: !15460, size: 64, offset: 96)
!15588 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15579, file: !122, line: 5076, baseType: !2381, size: 32, offset: 160)
!15589 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15516, file: !127, line: 343, baseType: !15590, size: 64, offset: 928)
!15590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !15591)
!15591 = !{!15592, !15593}
!15592 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15590, file: !200, line: 63, baseType: !113, size: 32)
!15593 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15590, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!15594 = !DILocation(line: 0, scope: !15504)
!15595 = !DILocalVariable(name: "l", arg: 1, scope: !15596, file: !236, line: 136, type: !15599)
!15596 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15597, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15600)
!15597 = !DISubroutineType(types: !15598)
!15598 = !{!15510, !15599}
!15599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!15600 = !{!15595, !15601}
!15601 = !DILocalVariable(name: "k", scope: !15596, file: !236, line: 139, type: !15510)
!15602 = !DILocation(line: 0, scope: !15596, inlinedAt: !15603)
!15603 = distinct !DILocation(line: 88, column: 25, scope: !15504)
!15604 = !DILocation(line: 55, column: 2, scope: !15605, inlinedAt: !15609)
!15605 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15606)
!15606 = !{!15607, !15608}
!15607 = !DILocalVariable(name: "key", scope: !15605, file: !7467, line: 44, type: !32)
!15608 = !DILocalVariable(name: "tmp", scope: !15605, file: !7467, line: 53, type: !32)
!15609 = distinct !DILocation(line: 145, column: 10, scope: !15596, inlinedAt: !15603)
!15610 = !{i64 2227546}
!15611 = !DILocation(line: 0, scope: !15605, inlinedAt: !15609)
!15612 = !DILocation(line: 148, column: 2, scope: !15613, inlinedAt: !15603)
!15613 = distinct !DILexicalBlock(scope: !15614, file: !236, line: 148, column: 2)
!15614 = distinct !DILexicalBlock(scope: !15596, file: !236, line: 148, column: 2)
!15615 = !DILocation(line: 148, column: 2, scope: !15614, inlinedAt: !15603)
!15616 = !DILocation(line: 148, column: 2, scope: !15617, inlinedAt: !15603)
!15617 = distinct !DILexicalBlock(scope: !15613, file: !236, line: 148, column: 2)
!15618 = !DILocation(line: 160, column: 2, scope: !15596, inlinedAt: !15603)
!15619 = !DILocation(line: 93, column: 39, scope: !15504)
!15620 = !DILocation(line: 93, column: 11, scope: !15504)
!15621 = !DILocation(line: 95, column: 13, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15504, file: !2380, line: 95, column: 6)
!15623 = !DILocation(line: 95, column: 6, scope: !15504)
!15624 = !DILocalVariable(name: "thread", arg: 1, scope: !15625, file: !14214, line: 65, type: !15515)
!15625 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14214, file: !14214, line: 65, type: !15626, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15628)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{null, !15515, !32}
!15628 = !{!15624, !15629}
!15629 = !DILocalVariable(name: "value", arg: 2, scope: !15625, file: !14214, line: 65, type: !32)
!15630 = !DILocation(line: 0, scope: !15625, inlinedAt: !15631)
!15631 = distinct !DILocation(line: 96, column: 3, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15622, file: !2380, line: 95, column: 22)
!15633 = !DILocation(line: 67, column: 15, scope: !15625, inlinedAt: !15631)
!15634 = !DILocation(line: 67, column: 33, scope: !15625, inlinedAt: !15631)
!15635 = !DILocation(line: 97, column: 3, scope: !15632)
!15636 = !DILocation(line: 98, column: 2, scope: !15632)
!15637 = !DILocation(line: 99, column: 23, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15622, file: !2380, line: 98, column: 9)
!15639 = !DILocation(line: 99, column: 37, scope: !15638)
!15640 = !DILocation(line: 99, column: 29, scope: !15638)
!15641 = !DILocation(line: 99, column: 17, scope: !15638)
!15642 = !DILocation(line: 99, column: 14, scope: !15638)
!15643 = !DILocation(line: 103, column: 2, scope: !15504)
!15644 = !DILocation(line: 106, column: 1, scope: !15504)
!15645 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2380, file: !2380, line: 117, type: !15646, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15652)
!15646 = !DISubroutineType(types: !15647)
!15647 = !{!105, !15456, !15648}
!15648 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15649)
!15649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15650)
!15650 = !{!15651}
!15651 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15649, file: !108, line: 66, baseType: !107, size: 64)
!15652 = !{!15653, !15654, !15655, !15656, !15657}
!15653 = !DILocalVariable(name: "sem", arg: 1, scope: !15645, file: !2380, line: 117, type: !15456)
!15654 = !DILocalVariable(name: "timeout", arg: 2, scope: !15645, file: !2380, line: 117, type: !15648)
!15655 = !DILocalVariable(name: "ret", scope: !15645, file: !2380, line: 119, type: !105)
!15656 = !DILocalVariable(name: "key", scope: !15645, file: !2380, line: 124, type: !15510)
!15657 = !DILabel(scope: !15645, name: "out", file: !2380, line: 145)
!15658 = !DILocation(line: 0, scope: !15645)
!15659 = !DILocation(line: 1031, column: 3, scope: !15660, inlinedAt: !15663)
!15660 = distinct !DISubprogram(name: "__get_IPSR", scope: !7785, file: !7785, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15661)
!15661 = !{!15662}
!15662 = !DILocalVariable(name: "result", scope: !15660, file: !7785, line: 1029, type: !113)
!15663 = distinct !DILocation(line: 48, column: 10, scope: !15664, inlinedAt: !15665)
!15664 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8832, file: !8832, line: 46, type: !8833, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !397)
!15665 = distinct !DILocation(line: 121, column: 2, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15667, file: !2380, line: 121, column: 2)
!15667 = distinct !DILexicalBlock(scope: !15645, file: !2380, line: 121, column: 2)
!15668 = !{i64 3545159}
!15669 = !DILocation(line: 0, scope: !15660, inlinedAt: !15663)
!15670 = !DILocation(line: 48, column: 9, scope: !15664, inlinedAt: !15665)
!15671 = !DILocation(line: 121, column: 2, scope: !15666)
!15672 = !DILocation(line: 121, column: 2, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15666, file: !2380, line: 121, column: 2)
!15674 = !DILocation(line: 0, scope: !15596, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 124, column: 25, scope: !15645)
!15676 = !DILocation(line: 55, column: 2, scope: !15605, inlinedAt: !15677)
!15677 = distinct !DILocation(line: 145, column: 10, scope: !15596, inlinedAt: !15675)
!15678 = !DILocation(line: 0, scope: !15605, inlinedAt: !15677)
!15679 = !DILocation(line: 148, column: 2, scope: !15613, inlinedAt: !15675)
!15680 = !DILocation(line: 148, column: 2, scope: !15614, inlinedAt: !15675)
!15681 = !DILocation(line: 148, column: 2, scope: !15617, inlinedAt: !15675)
!15682 = !DILocation(line: 160, column: 2, scope: !15596, inlinedAt: !15675)
!15683 = !DILocation(line: 128, column: 6, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15645, file: !2380, line: 128, column: 6)
!15685 = !DILocation(line: 128, column: 6, scope: !15645)
!15686 = !{!"branch_weights", i32 1, i32 2000}
!15687 = !DILocation(line: 129, column: 13, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15684, file: !2380, line: 128, column: 31)
!15689 = !DILocalVariable(name: "key", arg: 2, scope: !15690, file: !236, line: 190, type: !15510)
!15690 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15691, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15693)
!15691 = !DISubroutineType(types: !15692)
!15692 = !{null, !15599, !15510}
!15693 = !{!15694, !15689}
!15694 = !DILocalVariable(name: "l", arg: 1, scope: !15690, file: !236, line: 189, type: !15599)
!15695 = !DILocation(line: 0, scope: !15690, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 130, column: 3, scope: !15688)
!15697 = !DILocation(line: 194, column: 2, scope: !15698, inlinedAt: !15696)
!15698 = distinct !DILexicalBlock(scope: !15699, file: !236, line: 194, column: 2)
!15699 = distinct !DILexicalBlock(scope: !15690, file: !236, line: 194, column: 2)
!15700 = !DILocation(line: 194, column: 2, scope: !15699, inlinedAt: !15696)
!15701 = !DILocation(line: 194, column: 2, scope: !15702, inlinedAt: !15696)
!15702 = distinct !DILexicalBlock(scope: !15698, file: !236, line: 194, column: 2)
!15703 = !DILocalVariable(name: "key", arg: 1, scope: !15704, file: !7467, line: 84, type: !32)
!15704 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15705)
!15705 = !{!15703}
!15706 = !DILocation(line: 0, scope: !15704, inlinedAt: !15707)
!15707 = distinct !DILocation(line: 215, column: 2, scope: !15690, inlinedAt: !15696)
!15708 = !DILocation(line: 95, column: 2, scope: !15704, inlinedAt: !15707)
!15709 = !{i64 2228363}
!15710 = !DILocation(line: 132, column: 3, scope: !15688)
!15711 = !DILocation(line: 135, column: 6, scope: !15645)
!15712 = !DILocation(line: 0, scope: !15690, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 136, column: 3, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15715, file: !2380, line: 135, column: 40)
!15715 = distinct !DILexicalBlock(scope: !15645, file: !2380, line: 135, column: 6)
!15716 = !DILocation(line: 194, column: 2, scope: !15698, inlinedAt: !15713)
!15717 = !DILocation(line: 194, column: 2, scope: !15699, inlinedAt: !15713)
!15718 = !DILocation(line: 194, column: 2, scope: !15702, inlinedAt: !15713)
!15719 = !DILocation(line: 0, scope: !15704, inlinedAt: !15720)
!15720 = distinct !DILocation(line: 215, column: 2, scope: !15690, inlinedAt: !15713)
!15721 = !DILocation(line: 95, column: 2, scope: !15704, inlinedAt: !15720)
!15722 = !DILocation(line: 138, column: 3, scope: !15714)
!15723 = !DILocation(line: 143, column: 38, scope: !15645)
!15724 = !DILocation(line: 143, column: 8, scope: !15645)
!15725 = !DILocation(line: 143, column: 2, scope: !15645)
!15726 = !DILocation(line: 145, column: 1, scope: !15645)
!15727 = !DILocation(line: 148, column: 2, scope: !15645)
!15728 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2380, file: !2380, line: 151, type: !15505, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !15729)
!15729 = !{!15730, !15731, !15732}
!15730 = !DILocalVariable(name: "sem", arg: 1, scope: !15728, file: !2380, line: 151, type: !15456)
!15731 = !DILocalVariable(name: "thread", scope: !15728, file: !2380, line: 153, type: !15515)
!15732 = !DILocalVariable(name: "key", scope: !15728, file: !2380, line: 154, type: !15510)
!15733 = !DILocation(line: 0, scope: !15728)
!15734 = !DILocation(line: 0, scope: !15596, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 154, column: 25, scope: !15728)
!15736 = !DILocation(line: 55, column: 2, scope: !15605, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 145, column: 10, scope: !15596, inlinedAt: !15735)
!15738 = !DILocation(line: 0, scope: !15605, inlinedAt: !15737)
!15739 = !DILocation(line: 148, column: 2, scope: !15613, inlinedAt: !15735)
!15740 = !DILocation(line: 148, column: 2, scope: !15614, inlinedAt: !15735)
!15741 = !DILocation(line: 148, column: 2, scope: !15617, inlinedAt: !15735)
!15742 = !DILocation(line: 160, column: 2, scope: !15596, inlinedAt: !15735)
!15743 = !DILocation(line: 157, column: 12, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15728, file: !2380, line: 156, column: 15)
!15745 = !DILocation(line: 158, column: 14, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15744, file: !2380, line: 158, column: 7)
!15747 = !DILocation(line: 158, column: 7, scope: !15744)
!15748 = !DILocation(line: 0, scope: !15625, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 161, column: 3, scope: !15744)
!15750 = !DILocation(line: 67, column: 15, scope: !15625, inlinedAt: !15749)
!15751 = !DILocation(line: 67, column: 33, scope: !15625, inlinedAt: !15749)
!15752 = !DILocation(line: 162, column: 3, scope: !15744)
!15753 = distinct !{!15753, !15754, !15755}
!15754 = !DILocation(line: 156, column: 2, scope: !15728)
!15755 = !DILocation(line: 163, column: 2, scope: !15728)
!15756 = !DILocation(line: 164, column: 7, scope: !15728)
!15757 = !DILocation(line: 164, column: 13, scope: !15728)
!15758 = !DILocation(line: 170, column: 2, scope: !15728)
!15759 = !DILocation(line: 171, column: 1, scope: !15728)
!15760 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2496, file: !2496, line: 93, type: !15761, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15763)
!15761 = !DISubroutineType(types: !15762)
!15762 = !{!116, !2389, !2389}
!15763 = !{!15764, !15765, !15766, !15767}
!15764 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15760, file: !2496, line: 93, type: !2389)
!15765 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15760, file: !2496, line: 94, type: !2389)
!15766 = !DILocalVariable(name: "b1", scope: !15760, file: !2496, line: 97, type: !116)
!15767 = !DILocalVariable(name: "b2", scope: !15760, file: !2496, line: 98, type: !116)
!15768 = !DILocation(line: 0, scope: !15760)
!15769 = !DILocation(line: 97, column: 30, scope: !15760)
!15770 = !DILocation(line: 98, column: 30, scope: !15760)
!15771 = !DILocation(line: 100, column: 9, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15760, file: !2496, line: 100, column: 6)
!15773 = !DILocation(line: 100, column: 6, scope: !15760)
!15774 = !DILocation(line: 125, column: 1, scope: !15760)
!15775 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2496, file: !2496, line: 428, type: !15776, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15778)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{null, !2389}
!15778 = !{!15779}
!15779 = !DILocalVariable(name: "curr", arg: 1, scope: !15775, file: !2496, line: 428, type: !2389)
!15780 = !DILocation(line: 0, scope: !15775)
!15781 = !DILocation(line: 434, column: 6, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15775, file: !2496, line: 434, column: 6)
!15783 = !DILocation(line: 434, column: 23, scope: !15782)
!15784 = !DILocation(line: 434, column: 6, scope: !15775)
!15785 = !DILocation(line: 435, column: 50, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15782, file: !2496, line: 434, column: 29)
!15787 = !DILocation(line: 435, column: 48, scope: !15786)
!15788 = !DILocation(line: 435, column: 29, scope: !15786)
!15789 = !DILocation(line: 436, column: 24, scope: !15786)
!15790 = !DILocation(line: 436, column: 3, scope: !15786)
!15791 = !DILocation(line: 437, column: 2, scope: !15786)
!15792 = !DILocation(line: 438, column: 1, scope: !15775)
!15793 = distinct !DISubprogram(name: "slice_time", scope: !2496, file: !2496, line: 407, type: !15794, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15796)
!15794 = !DISubroutineType(types: !15795)
!15795 = !{!105, !2389}
!15796 = !{!15797, !15798}
!15797 = !DILocalVariable(name: "curr", arg: 1, scope: !15793, file: !2496, line: 407, type: !2389)
!15798 = !DILocalVariable(name: "ret", scope: !15793, file: !2496, line: 409, type: !105)
!15799 = !DILocation(line: 0, scope: !15793)
!15800 = !DILocation(line: 409, column: 12, scope: !15793)
!15801 = !DILocation(line: 416, column: 2, scope: !15793)
!15802 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2496, file: !2496, line: 440, type: !15803, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15805)
!15803 = !DISubroutineType(types: !15804)
!15804 = !{null, !116, !105}
!15805 = !{!15806, !15807, !15808, !15814}
!15806 = !DILocalVariable(name: "slice", arg: 1, scope: !15802, file: !2496, line: 440, type: !116)
!15807 = !DILocalVariable(name: "prio", arg: 2, scope: !15802, file: !2496, line: 440, type: !105)
!15808 = !DILocalVariable(name: "__i", scope: !15809, file: !2496, line: 442, type: !15810)
!15809 = distinct !DILexicalBlock(scope: !15802, file: !2496, line: 442, column: 2)
!15810 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15811)
!15811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15812)
!15812 = !{!15813}
!15813 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15811, file: !236, line: 33, baseType: !105, size: 32)
!15814 = !DILocalVariable(name: "__key", scope: !15809, file: !2496, line: 442, type: !15810)
!15815 = !DILocation(line: 0, scope: !15802)
!15816 = !DILocation(line: 0, scope: !15809)
!15817 = !DILocalVariable(name: "l", arg: 1, scope: !15818, file: !236, line: 136, type: !15821)
!15818 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15819, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15822)
!15819 = !DISubroutineType(types: !15820)
!15820 = !{!15810, !15821}
!15821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!15822 = !{!15817, !15823}
!15823 = !DILocalVariable(name: "k", scope: !15818, file: !236, line: 139, type: !15810)
!15824 = !DILocation(line: 0, scope: !15818, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 442, column: 2, scope: !15809)
!15826 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !15831)
!15827 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15828)
!15828 = !{!15829, !15830}
!15829 = !DILocalVariable(name: "key", scope: !15827, file: !7467, line: 44, type: !32)
!15830 = !DILocalVariable(name: "tmp", scope: !15827, file: !7467, line: 53, type: !32)
!15831 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !15825)
!15832 = !{i64 2269955}
!15833 = !DILocation(line: 0, scope: !15827, inlinedAt: !15831)
!15834 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !15825)
!15835 = distinct !DILexicalBlock(scope: !15836, file: !236, line: 148, column: 2)
!15836 = distinct !DILexicalBlock(scope: !15818, file: !236, line: 148, column: 2)
!15837 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !15825)
!15838 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !15825)
!15839 = distinct !DILexicalBlock(scope: !15835, file: !236, line: 148, column: 2)
!15840 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !15825)
!15841 = !DILocation(line: 443, column: 29, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !2496, line: 442, column: 26)
!15843 = distinct !DILexicalBlock(scope: !15809, file: !2496, line: 442, column: 2)
!15844 = !DILocation(line: 444, column: 17, scope: !15842)
!15845 = !DILocation(line: 445, column: 51, scope: !15846)
!15846 = distinct !DILexicalBlock(scope: !15842, file: !2496, line: 445, column: 7)
!15847 = !DILocation(line: 445, column: 7, scope: !15842)
!15848 = !DILocation(line: 0, scope: !15842)
!15849 = !DILocation(line: 451, column: 18, scope: !15842)
!15850 = !DILocation(line: 452, column: 3, scope: !15842)
!15851 = !DILocalVariable(name: "key", arg: 2, scope: !15852, file: !236, line: 190, type: !15810)
!15852 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15853, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15855)
!15853 = !DISubroutineType(types: !15854)
!15854 = !{null, !15821, !15810}
!15855 = !{!15856, !15851}
!15856 = !DILocalVariable(name: "l", arg: 1, scope: !15852, file: !236, line: 189, type: !15821)
!15857 = !DILocation(line: 0, scope: !15852, inlinedAt: !15858)
!15858 = distinct !DILocation(line: 442, column: 2, scope: !15843)
!15859 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !15858)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !236, line: 194, column: 2)
!15861 = distinct !DILexicalBlock(scope: !15852, file: !236, line: 194, column: 2)
!15862 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !15858)
!15863 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !15858)
!15864 = distinct !DILexicalBlock(scope: !15860, file: !236, line: 194, column: 2)
!15865 = !DILocalVariable(name: "key", arg: 1, scope: !15866, file: !7467, line: 84, type: !32)
!15866 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15867)
!15867 = !{!15865}
!15868 = !DILocation(line: 0, scope: !15866, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !15858)
!15870 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !15869)
!15871 = !{i64 2270772}
!15872 = !DILocation(line: 454, column: 1, scope: !15802)
!15873 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14790, file: !14790, line: 389, type: !9066, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15874)
!15874 = !{!15875}
!15875 = !DILocalVariable(name: "t", arg: 1, scope: !15873, file: !14790, line: 389, type: !113)
!15876 = !DILocation(line: 0, scope: !15873)
!15877 = !DILocalVariable(name: "t", arg: 1, scope: !15878, file: !14790, line: 102, type: !114)
!15878 = distinct !DISubprogram(name: "z_tmcvt", scope: !14790, file: !14790, line: 102, type: !14798, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15879)
!15879 = !{!15877, !15880, !15881, !15882, !15883, !15884, !15885, !15886, !15887, !15888, !15889}
!15880 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15878, file: !14790, line: 102, type: !113)
!15881 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15878, file: !14790, line: 103, type: !113)
!15882 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15878, file: !14790, line: 103, type: !492)
!15883 = !DILocalVariable(name: "result32", arg: 5, scope: !15878, file: !14790, line: 104, type: !492)
!15884 = !DILocalVariable(name: "round_up", arg: 6, scope: !15878, file: !14790, line: 104, type: !492)
!15885 = !DILocalVariable(name: "round_off", arg: 7, scope: !15878, file: !14790, line: 105, type: !492)
!15886 = !DILocalVariable(name: "mul_ratio", scope: !15878, file: !14790, line: 107, type: !492)
!15887 = !DILocalVariable(name: "div_ratio", scope: !15878, file: !14790, line: 109, type: !492)
!15888 = !DILocalVariable(name: "off", scope: !15878, file: !14790, line: 116, type: !114)
!15889 = !DILocalVariable(name: "rdivisor", scope: !15890, file: !14790, line: 119, type: !113)
!15890 = distinct !DILexicalBlock(scope: !15891, file: !14790, line: 118, column: 18)
!15891 = distinct !DILexicalBlock(scope: !15878, file: !14790, line: 118, column: 6)
!15892 = !DILocation(line: 0, scope: !15878, inlinedAt: !15893)
!15893 = distinct !DILocation(line: 392, column: 9, scope: !15873)
!15894 = !DILocation(line: 143, column: 25, scope: !15895, inlinedAt: !15893)
!15895 = distinct !DILexicalBlock(scope: !15896, file: !14790, line: 142, column: 17)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !14790, line: 142, column: 7)
!15897 = distinct !DILexicalBlock(scope: !15898, file: !14790, line: 141, column: 24)
!15898 = distinct !DILexicalBlock(scope: !15899, file: !14790, line: 141, column: 13)
!15899 = distinct !DILexicalBlock(scope: !15878, file: !14790, line: 134, column: 6)
!15900 = !DILocation(line: 392, column: 2, scope: !15873)
!15901 = distinct !DISubprogram(name: "z_time_slice", scope: !2496, file: !2496, line: 502, type: !9719, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15902)
!15902 = !{!15903, !15904}
!15903 = !DILocalVariable(name: "ticks", arg: 1, scope: !15901, file: !2496, line: 502, type: !105)
!15904 = !DILocalVariable(name: "key", scope: !15901, file: !2496, line: 511, type: !15810)
!15905 = !DILocation(line: 0, scope: !15901)
!15906 = !DILocation(line: 0, scope: !15818, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 511, column: 25, scope: !15901)
!15908 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !15909)
!15909 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !15907)
!15910 = !DILocation(line: 0, scope: !15827, inlinedAt: !15909)
!15911 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !15907)
!15912 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !15907)
!15913 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !15907)
!15914 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !15907)
!15915 = !DILocation(line: 514, column: 6, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15901, file: !2496, line: 514, column: 6)
!15917 = !DILocation(line: 514, column: 25, scope: !15916)
!15918 = !DILocation(line: 514, column: 22, scope: !15916)
!15919 = !DILocation(line: 514, column: 6, scope: !15901)
!15920 = !DILocation(line: 515, column: 3, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15916, file: !2496, line: 514, column: 35)
!15922 = !DILocation(line: 0, scope: !15852, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 516, column: 3, scope: !15921)
!15924 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !15923)
!15925 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !15923)
!15926 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !15923)
!15927 = !DILocation(line: 0, scope: !15866, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !15923)
!15929 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !15928)
!15930 = !DILocation(line: 517, column: 3, scope: !15921)
!15931 = !DILocation(line: 519, column: 18, scope: !15901)
!15932 = !DILocation(line: 522, column: 6, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15901, file: !2496, line: 522, column: 6)
!15934 = !DILocation(line: 522, column: 27, scope: !15933)
!15935 = !DILocation(line: 522, column: 30, scope: !15933)
!15936 = !DILocation(line: 522, column: 6, scope: !15901)
!15937 = !DILocation(line: 523, column: 30, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15939, file: !2496, line: 523, column: 7)
!15939 = distinct !DILexicalBlock(scope: !15933, file: !2496, line: 522, column: 51)
!15940 = !DILocation(line: 523, column: 13, scope: !15938)
!15941 = !DILocation(line: 523, column: 7, scope: !15939)
!15942 = !DILocation(line: 530, column: 10, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15938, file: !2496, line: 523, column: 43)
!15944 = !DILocation(line: 531, column: 3, scope: !15943)
!15945 = !DILocation(line: 532, column: 30, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15938, file: !2496, line: 531, column: 10)
!15947 = !DILocation(line: 535, column: 29, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15933, file: !2496, line: 534, column: 9)
!15949 = !DILocation(line: 0, scope: !15852, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 537, column: 2, scope: !15901)
!15951 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !15950)
!15952 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !15950)
!15953 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !15950)
!15954 = !DILocation(line: 0, scope: !15866, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !15950)
!15956 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !15955)
!15957 = !DILocation(line: 538, column: 1, scope: !15901)
!15958 = distinct !DISubprogram(name: "sliceable", scope: !2496, file: !2496, line: 468, type: !15959, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15961)
!15959 = !DISubroutineType(types: !15960)
!15960 = !{!492, !2389}
!15961 = !{!15962, !15963}
!15962 = !DILocalVariable(name: "thread", arg: 1, scope: !15958, file: !2496, line: 468, type: !2389)
!15963 = !DILocalVariable(name: "ret", scope: !15958, file: !2496, line: 470, type: !492)
!15964 = !DILocation(line: 0, scope: !15958)
!15965 = !DILocation(line: 470, column: 13, scope: !15958)
!15966 = !DILocation(line: 471, column: 3, scope: !15958)
!15967 = !DILocation(line: 471, column: 7, scope: !15958)
!15968 = !DILocation(line: 472, column: 3, scope: !15958)
!15969 = !DILocation(line: 472, column: 37, scope: !15958)
!15970 = !DILocation(line: 472, column: 24, scope: !15958)
!15971 = !DILocation(line: 472, column: 43, scope: !15958)
!15972 = !DILocation(line: 472, column: 7, scope: !15958)
!15973 = !DILocation(line: 473, column: 3, scope: !15958)
!15974 = !DILocation(line: 473, column: 7, scope: !15958)
!15975 = !DILocation(line: 473, column: 6, scope: !15958)
!15976 = !DILocation(line: 479, column: 2, scope: !15958)
!15977 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2496, file: !2496, line: 482, type: !15978, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15980)
!15978 = !DISubroutineType(types: !15979)
!15979 = !{!15810, !15810}
!15980 = !{!15981, !15982}
!15981 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15977, file: !2496, line: 482, type: !15810)
!15982 = !DILocalVariable(name: "curr", scope: !15977, file: !2496, line: 484, type: !2389)
!15983 = !DILocation(line: 0, scope: !15977)
!15984 = !DILocation(line: 484, column: 26, scope: !15977)
!15985 = !DILocation(line: 493, column: 7, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15977, file: !2496, line: 493, column: 6)
!15987 = !DILocation(line: 493, column: 6, scope: !15977)
!15988 = !DILocation(line: 494, column: 3, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15986, file: !2496, line: 493, column: 49)
!15990 = !DILocation(line: 495, column: 2, scope: !15989)
!15991 = !DILocation(line: 496, column: 2, scope: !15977)
!15992 = !DILocation(line: 499, column: 1, scope: !15977)
!15993 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14173, file: !14173, line: 106, type: !15959, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !15994)
!15994 = !{!15995, !15996}
!15995 = !DILocalVariable(name: "thread", arg: 1, scope: !15993, file: !14173, line: 106, type: !2389)
!15996 = !DILocalVariable(name: "state", scope: !15993, file: !14173, line: 108, type: !169)
!15997 = !DILocation(line: 0, scope: !15993)
!15998 = !DILocation(line: 108, column: 31, scope: !15993)
!15999 = !DILocation(line: 110, column: 16, scope: !15993)
!16000 = !DILocation(line: 111, column: 41, scope: !15993)
!16001 = !DILocation(line: 110, column: 2, scope: !15993)
!16002 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2496, file: !2496, line: 393, type: !15776, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16003)
!16003 = !{!16004}
!16004 = !DILocalVariable(name: "thread", arg: 1, scope: !16002, file: !2496, line: 393, type: !2389)
!16005 = !DILocation(line: 0, scope: !16002)
!16006 = !DILocation(line: 395, column: 6, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16002, file: !2496, line: 395, column: 6)
!16008 = !DILocation(line: 395, column: 6, scope: !16002)
!16009 = !DILocalVariable(name: "thread", arg: 1, scope: !16010, file: !2496, line: 264, type: !2389)
!16010 = distinct !DISubprogram(name: "dequeue_thread", scope: !2496, file: !2496, line: 264, type: !15776, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16011)
!16011 = !{!16009}
!16012 = !DILocation(line: 0, scope: !16010, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 396, column: 3, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16007, file: !2496, line: 395, column: 34)
!16015 = !DILocation(line: 266, column: 15, scope: !16010, inlinedAt: !16013)
!16016 = !DILocation(line: 266, column: 28, scope: !16010, inlinedAt: !16013)
!16017 = !DILocalVariable(name: "thread", arg: 1, scope: !16018, file: !2496, line: 232, type: !2389)
!16018 = distinct !DISubprogram(name: "runq_remove", scope: !2496, file: !2496, line: 232, type: !15776, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16019)
!16019 = !{!16017}
!16020 = !DILocation(line: 0, scope: !16018, inlinedAt: !16021)
!16021 = distinct !DILocation(line: 268, column: 3, scope: !16022, inlinedAt: !16013)
!16022 = distinct !DILexicalBlock(scope: !16023, file: !2496, line: 267, column: 35)
!16023 = distinct !DILexicalBlock(scope: !16010, file: !2496, line: 267, column: 6)
!16024 = !DILocation(line: 234, column: 2, scope: !16018, inlinedAt: !16021)
!16025 = !DILocation(line: 397, column: 2, scope: !16014)
!16026 = !DILocalVariable(name: "thread", arg: 1, scope: !16027, file: !2496, line: 250, type: !2389)
!16027 = distinct !DISubprogram(name: "queue_thread", scope: !2496, file: !2496, line: 250, type: !15776, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16028)
!16028 = !{!16026}
!16029 = !DILocation(line: 0, scope: !16027, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 398, column: 2, scope: !16002)
!16031 = !DILocation(line: 252, column: 15, scope: !16027, inlinedAt: !16030)
!16032 = !DILocation(line: 252, column: 28, scope: !16027, inlinedAt: !16030)
!16033 = !DILocalVariable(name: "thread", arg: 1, scope: !16034, file: !2496, line: 227, type: !2389)
!16034 = distinct !DISubprogram(name: "runq_add", scope: !2496, file: !2496, line: 227, type: !15776, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16035)
!16035 = !{!16033}
!16036 = !DILocation(line: 0, scope: !16034, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 254, column: 3, scope: !16038, inlinedAt: !16030)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !2496, line: 253, column: 35)
!16039 = distinct !DILexicalBlock(scope: !16027, file: !2496, line: 253, column: 6)
!16040 = !DILocalVariable(name: "pq", arg: 1, scope: !16041, file: !2496, line: 181, type: !16044)
!16041 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2496, file: !2496, line: 181, type: !16042, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16045)
!16042 = !DISubroutineType(types: !16043)
!16043 = !{null, !16044, !2389}
!16044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!16045 = !{!16040, !16046, !16047}
!16046 = !DILocalVariable(name: "thread", arg: 2, scope: !16041, file: !2496, line: 182, type: !2389)
!16047 = !DILocalVariable(name: "t", scope: !16041, file: !2496, line: 184, type: !2389)
!16048 = !DILocation(line: 0, scope: !16041, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 229, column: 2, scope: !16034, inlinedAt: !16037)
!16050 = !DILocation(line: 186, column: 2, scope: !16051, inlinedAt: !16049)
!16051 = distinct !DILexicalBlock(scope: !16052, file: !2496, line: 186, column: 2)
!16052 = distinct !DILexicalBlock(scope: !16041, file: !2496, line: 186, column: 2)
!16053 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !16049)
!16054 = !DILocation(line: 186, column: 2, scope: !16055, inlinedAt: !16049)
!16055 = distinct !DILexicalBlock(scope: !16051, file: !2496, line: 186, column: 2)
!16056 = !DILocation(line: 188, column: 2, scope: !16057, inlinedAt: !16049)
!16057 = distinct !DILexicalBlock(scope: !16041, file: !2496, line: 188, column: 2)
!16058 = !DILocation(line: 188, column: 2, scope: !16059, inlinedAt: !16049)
!16059 = distinct !DILexicalBlock(scope: !16057, file: !2496, line: 188, column: 2)
!16060 = !DILocation(line: 0, scope: !16057, inlinedAt: !16049)
!16061 = !DILocation(line: 189, column: 7, scope: !16062, inlinedAt: !16049)
!16062 = distinct !DILexicalBlock(scope: !16063, file: !2496, line: 189, column: 7)
!16063 = distinct !DILexicalBlock(scope: !16059, file: !2496, line: 188, column: 56)
!16064 = !DILocation(line: 189, column: 35, scope: !16062, inlinedAt: !16049)
!16065 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !16049)
!16066 = !DILocation(line: 191, column: 21, scope: !16067, inlinedAt: !16049)
!16067 = distinct !DILexicalBlock(scope: !16062, file: !2496, line: 189, column: 40)
!16068 = !DILocation(line: 190, column: 4, scope: !16067, inlinedAt: !16049)
!16069 = !DILocation(line: 192, column: 4, scope: !16067, inlinedAt: !16049)
!16070 = distinct !{!16070, !16056, !16071}
!16071 = !DILocation(line: 194, column: 2, scope: !16057, inlinedAt: !16049)
!16072 = !DILocation(line: 196, column: 37, scope: !16041, inlinedAt: !16049)
!16073 = !DILocation(line: 196, column: 2, scope: !16041, inlinedAt: !16049)
!16074 = !DILocation(line: 197, column: 1, scope: !16041, inlinedAt: !16049)
!16075 = !DILocation(line: 399, column: 25, scope: !16002)
!16076 = !DILocation(line: 399, column: 22, scope: !16002)
!16077 = !DILocation(line: 399, column: 2, scope: !16002)
!16078 = !DILocation(line: 400, column: 1, scope: !16002)
!16079 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14173, file: !14173, line: 136, type: !15959, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16080)
!16080 = !{!16081}
!16081 = !DILocalVariable(name: "thread", arg: 1, scope: !16079, file: !14173, line: 136, type: !2389)
!16082 = !DILocation(line: 0, scope: !16079)
!16083 = !DILocation(line: 138, column: 9, scope: !16079)
!16084 = !DILocation(line: 138, column: 2, scope: !16079)
!16085 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2496, file: !2496, line: 1137, type: !16042, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16086)
!16086 = !{!16087, !16088}
!16087 = !DILocalVariable(name: "pq", arg: 1, scope: !16085, file: !2496, line: 1137, type: !16044)
!16088 = !DILocalVariable(name: "thread", arg: 2, scope: !16085, file: !2496, line: 1137, type: !2389)
!16089 = !DILocation(line: 0, scope: !16085)
!16090 = !DILocation(line: 1139, column: 2, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2496, line: 1139, column: 2)
!16092 = distinct !DILexicalBlock(scope: !16085, file: !2496, line: 1139, column: 2)
!16093 = !DILocation(line: 1139, column: 2, scope: !16092)
!16094 = !DILocation(line: 1139, column: 2, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16091, file: !2496, line: 1139, column: 2)
!16096 = !DILocation(line: 1141, column: 33, scope: !16085)
!16097 = !DILocation(line: 1141, column: 2, scope: !16085)
!16098 = !DILocation(line: 1142, column: 1, scope: !16085)
!16099 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14173, file: !14173, line: 83, type: !15959, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16100)
!16100 = !{!16101}
!16101 = !DILocalVariable(name: "thread", arg: 1, scope: !16099, file: !14173, line: 83, type: !2389)
!16102 = !DILocation(line: 0, scope: !16099)
!16103 = !DILocation(line: 89, column: 16, scope: !16099)
!16104 = !DILocation(line: 89, column: 2, scope: !16099)
!16105 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16106, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16108)
!16106 = !DISubroutineType(types: !16107)
!16107 = !{!2492, !16044}
!16108 = !{!16109}
!16109 = !DILocalVariable(name: "list", arg: 1, scope: !16105, file: !137, line: 294, type: !16044)
!16110 = !DILocation(line: 0, scope: !16105)
!16111 = !DILocation(line: 296, column: 9, scope: !16105)
!16112 = !DILocation(line: 296, column: 49, scope: !16105)
!16113 = !DILocation(line: 296, column: 2, scope: !16105)
!16114 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16115, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16117)
!16115 = !DISubroutineType(types: !16116)
!16116 = !{null, !2492, !2492}
!16117 = !{!16118, !16119, !16120}
!16118 = !DILocalVariable(name: "successor", arg: 1, scope: !16114, file: !137, line: 443, type: !2492)
!16119 = !DILocalVariable(name: "node", arg: 2, scope: !16114, file: !137, line: 443, type: !2492)
!16120 = !DILocalVariable(name: "prev", scope: !16114, file: !137, line: 445, type: !16121)
!16121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!16122 = !DILocation(line: 0, scope: !16114)
!16123 = !DILocation(line: 445, column: 39, scope: !16114)
!16124 = !DILocation(line: 447, column: 8, scope: !16114)
!16125 = !DILocation(line: 447, column: 13, scope: !16114)
!16126 = !DILocation(line: 448, column: 8, scope: !16114)
!16127 = !DILocation(line: 448, column: 13, scope: !16114)
!16128 = !DILocation(line: 449, column: 8, scope: !16114)
!16129 = !DILocation(line: 449, column: 13, scope: !16114)
!16130 = !DILocation(line: 450, column: 18, scope: !16114)
!16131 = !DILocation(line: 451, column: 1, scope: !16114)
!16132 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16133, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16135)
!16133 = !DISubroutineType(types: !16134)
!16134 = !{!2492, !16044, !2492}
!16135 = !{!16136, !16137}
!16136 = !DILocalVariable(name: "list", arg: 1, scope: !16132, file: !137, line: 341, type: !16044)
!16137 = !DILocalVariable(name: "node", arg: 2, scope: !16132, file: !137, line: 342, type: !2492)
!16138 = !DILocation(line: 0, scope: !16132)
!16139 = !DILocation(line: 344, column: 15, scope: !16132)
!16140 = !DILocation(line: 344, column: 9, scope: !16132)
!16141 = !DILocation(line: 344, column: 26, scope: !16132)
!16142 = !DILocation(line: 344, column: 2, scope: !16132)
!16143 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16144, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16146)
!16144 = !DISubroutineType(types: !16145)
!16145 = !{null, !16044, !2492}
!16146 = !{!16147, !16148, !16149}
!16147 = !DILocalVariable(name: "list", arg: 1, scope: !16143, file: !137, line: 404, type: !16044)
!16148 = !DILocalVariable(name: "node", arg: 2, scope: !16143, file: !137, line: 404, type: !2492)
!16149 = !DILocalVariable(name: "tail", scope: !16143, file: !137, line: 406, type: !16121)
!16150 = !DILocation(line: 0, scope: !16143)
!16151 = !DILocation(line: 406, column: 34, scope: !16143)
!16152 = !DILocation(line: 408, column: 8, scope: !16143)
!16153 = !DILocation(line: 408, column: 13, scope: !16143)
!16154 = !DILocation(line: 409, column: 8, scope: !16143)
!16155 = !DILocation(line: 409, column: 13, scope: !16143)
!16156 = !DILocation(line: 411, column: 8, scope: !16143)
!16157 = !DILocation(line: 411, column: 13, scope: !16143)
!16158 = !DILocation(line: 412, column: 13, scope: !16143)
!16159 = !DILocation(line: 413, column: 1, scope: !16143)
!16160 = distinct !DISubprogram(name: "update_cache", scope: !2496, file: !2496, line: 559, type: !9719, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16161)
!16161 = !{!16162, !16163}
!16162 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16160, file: !2496, line: 559, type: !105)
!16163 = !DILocalVariable(name: "thread", scope: !16160, file: !2496, line: 562, type: !2389)
!16164 = !DILocation(line: 0, scope: !16160)
!16165 = !DILocation(line: 239, column: 9, scope: !16166, inlinedAt: !16169)
!16166 = distinct !DISubprogram(name: "runq_best", scope: !2496, file: !2496, line: 237, type: !16167, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!16167 = !DISubroutineType(types: !16168)
!16168 = !{!2389}
!16169 = distinct !DILocation(line: 314, column: 28, scope: !16170, inlinedAt: !16174)
!16170 = distinct !DISubprogram(name: "next_up", scope: !2496, file: !2496, line: 312, type: !16167, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16171)
!16171 = !{!16172, !16173}
!16172 = !DILocalVariable(name: "thread", scope: !16170, file: !2496, line: 314, type: !2389)
!16173 = !DILocalVariable(name: "mirqp", scope: !16170, file: !2496, line: 322, type: !2389)
!16174 = distinct !DILocation(line: 562, column: 28, scope: !16160)
!16175 = !DILocation(line: 0, scope: !16170, inlinedAt: !16174)
!16176 = !DILocation(line: 322, column: 41, scope: !16170, inlinedAt: !16174)
!16177 = !DILocation(line: 324, column: 12, scope: !16178, inlinedAt: !16174)
!16178 = distinct !DILexicalBlock(scope: !16170, file: !2496, line: 324, column: 6)
!16179 = !DILocation(line: 324, column: 20, scope: !16178, inlinedAt: !16174)
!16180 = !DILocation(line: 324, column: 31, scope: !16178, inlinedAt: !16174)
!16181 = !DILocation(line: 324, column: 39, scope: !16178, inlinedAt: !16174)
!16182 = !DILocation(line: 324, column: 43, scope: !16178, inlinedAt: !16174)
!16183 = !DILocation(line: 324, column: 6, scope: !16170, inlinedAt: !16174)
!16184 = !DILocation(line: 325, column: 8, scope: !16185, inlinedAt: !16174)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !2496, line: 325, column: 7)
!16186 = distinct !DILexicalBlock(scope: !16178, file: !2496, line: 324, column: 64)
!16187 = !DILocation(line: 325, column: 7, scope: !16186, inlinedAt: !16174)
!16188 = !DILocation(line: 328, column: 36, scope: !16189, inlinedAt: !16174)
!16189 = distinct !DILexicalBlock(scope: !16185, file: !2496, line: 327, column: 10)
!16190 = !DILocation(line: 340, column: 17, scope: !16170, inlinedAt: !16174)
!16191 = !DILocation(line: 340, column: 9, scope: !16170, inlinedAt: !16174)
!16192 = !DILocalVariable(name: "thread", arg: 1, scope: !16193, file: !2496, line: 127, type: !2389)
!16193 = distinct !DISubprogram(name: "should_preempt", scope: !2496, file: !2496, line: 127, type: !16194, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16196)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{!492, !2389, !105}
!16196 = !{!16192, !16197}
!16197 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16193, file: !2496, line: 128, type: !105)
!16198 = !DILocation(line: 0, scope: !16193, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 564, column: 6, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16160, file: !2496, line: 564, column: 6)
!16201 = !DILocation(line: 133, column: 17, scope: !16202, inlinedAt: !16199)
!16202 = distinct !DILexicalBlock(scope: !16193, file: !2496, line: 133, column: 6)
!16203 = !DILocation(line: 0, scope: !16200)
!16204 = !DILocation(line: 133, column: 6, scope: !16193, inlinedAt: !16199)
!16205 = !DILocation(line: 137, column: 2, scope: !16206, inlinedAt: !16199)
!16206 = distinct !DILexicalBlock(scope: !16207, file: !2496, line: 137, column: 2)
!16207 = distinct !DILexicalBlock(scope: !16193, file: !2496, line: 137, column: 2)
!16208 = !DILocation(line: 137, column: 2, scope: !16207, inlinedAt: !16199)
!16209 = !DILocation(line: 137, column: 2, scope: !16210, inlinedAt: !16199)
!16210 = distinct !DILexicalBlock(scope: !16206, file: !2496, line: 137, column: 2)
!16211 = !DILocation(line: 140, column: 6, scope: !16212, inlinedAt: !16199)
!16212 = distinct !DILexicalBlock(scope: !16193, file: !2496, line: 140, column: 6)
!16213 = !DILocation(line: 140, column: 6, scope: !16193, inlinedAt: !16199)
!16214 = !DILocation(line: 150, column: 9, scope: !16215, inlinedAt: !16199)
!16215 = distinct !DILexicalBlock(scope: !16193, file: !2496, line: 149, column: 6)
!16216 = !DILocation(line: 149, column: 6, scope: !16193, inlinedAt: !16199)
!16217 = !DILocation(line: 157, column: 6, scope: !16218, inlinedAt: !16199)
!16218 = distinct !DILexicalBlock(scope: !16193, file: !2496, line: 157, column: 6)
!16219 = !DILocation(line: 157, column: 27, scope: !16218, inlinedAt: !16199)
!16220 = !DILocation(line: 157, column: 30, scope: !16218, inlinedAt: !16199)
!16221 = !DILocation(line: 564, column: 6, scope: !16160)
!16222 = !DILocation(line: 566, column: 14, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16224, file: !2496, line: 566, column: 7)
!16224 = distinct !DILexicalBlock(scope: !16200, file: !2496, line: 564, column: 42)
!16225 = !DILocation(line: 566, column: 7, scope: !16224)
!16226 = !DILocation(line: 567, column: 4, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16223, file: !2496, line: 566, column: 27)
!16228 = !DILocation(line: 568, column: 3, scope: !16227)
!16229 = !DILocation(line: 570, column: 3, scope: !16224)
!16230 = !DILocation(line: 572, column: 2, scope: !16224)
!16231 = !DILocation(line: 585, column: 1, scope: !16160)
!16232 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2496, file: !2496, line: 1144, type: !16233, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16235)
!16233 = !DISubroutineType(types: !16234)
!16234 = !{!2389, !16044}
!16235 = !{!16236, !16237, !16238}
!16236 = !DILocalVariable(name: "pq", arg: 1, scope: !16232, file: !2496, line: 1144, type: !16044)
!16237 = !DILocalVariable(name: "thread", scope: !16232, file: !2496, line: 1146, type: !2389)
!16238 = !DILocalVariable(name: "n", scope: !16232, file: !2496, line: 1147, type: !2492)
!16239 = !DILocation(line: 0, scope: !16232)
!16240 = !DILocation(line: 1147, column: 19, scope: !16232)
!16241 = !DILocation(line: 1152, column: 2, scope: !16232)
!16242 = distinct !DISubprogram(name: "is_metairq", scope: !2496, file: !2496, line: 68, type: !15794, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16243)
!16243 = !{!16244}
!16244 = !DILocalVariable(name: "thread", arg: 1, scope: !16242, file: !2496, line: 68, type: !2389)
!16245 = !DILocation(line: 0, scope: !16242)
!16246 = !DILocation(line: 71, column: 23, scope: !16242)
!16247 = !DILocation(line: 72, column: 3, scope: !16242)
!16248 = !DILocation(line: 71, column: 2, scope: !16242)
!16249 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14173, file: !14173, line: 115, type: !15959, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16250)
!16250 = !{!16251}
!16251 = !DILocalVariable(name: "thread", arg: 1, scope: !16249, file: !14173, line: 115, type: !2389)
!16252 = !DILocation(line: 0, scope: !16249)
!16253 = !DILocation(line: 117, column: 46, scope: !16249)
!16254 = !DILocation(line: 117, column: 10, scope: !16249)
!16255 = !DILocation(line: 117, column: 9, scope: !16249)
!16256 = !DILocation(line: 117, column: 2, scope: !16249)
!16257 = distinct !DISubprogram(name: "is_preempt", scope: !2496, file: !2496, line: 62, type: !15794, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16258)
!16258 = !{!16259}
!16259 = !DILocalVariable(name: "thread", arg: 1, scope: !16257, file: !2496, line: 62, type: !2389)
!16260 = !DILocation(line: 0, scope: !16257)
!16261 = !DILocation(line: 65, column: 22, scope: !16257)
!16262 = !DILocation(line: 65, column: 30, scope: !16257)
!16263 = !DILocation(line: 65, column: 2, scope: !16257)
!16264 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2496, file: !2496, line: 545, type: !15776, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16265)
!16265 = !{!16266}
!16266 = !DILocalVariable(name: "thread", arg: 1, scope: !16264, file: !2496, line: 545, type: !2389)
!16267 = !DILocation(line: 0, scope: !16264)
!16268 = !DILocation(line: 548, column: 6, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16264, file: !2496, line: 548, column: 6)
!16270 = !DILocation(line: 548, column: 25, scope: !16269)
!16271 = !DILocation(line: 548, column: 40, scope: !16269)
!16272 = !DILocation(line: 548, column: 29, scope: !16269)
!16273 = !DILocation(line: 548, column: 50, scope: !16269)
!16274 = !DILocation(line: 549, column: 7, scope: !16269)
!16275 = !DILocation(line: 548, column: 6, scope: !16264)
!16276 = !DILocation(line: 552, column: 37, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16269, file: !2496, line: 552, column: 13)
!16278 = !DILocation(line: 552, column: 13, scope: !16269)
!16279 = !DILocation(line: 0, scope: !16269)
!16280 = !DILocation(line: 557, column: 1, scope: !16264)
!16281 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14602, file: !14602, line: 35, type: !16282, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16286)
!16282 = !DISubroutineType(types: !16283)
!16283 = !{!492, !16284}
!16284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16285, size: 32)
!16285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2440)
!16286 = !{!16287}
!16287 = !DILocalVariable(name: "to", arg: 1, scope: !16281, file: !14602, line: 35, type: !16284)
!16288 = !DILocation(line: 0, scope: !16281)
!16289 = !DILocation(line: 37, column: 35, scope: !16281)
!16290 = !DILocation(line: 37, column: 10, scope: !16281)
!16291 = !DILocation(line: 37, column: 9, scope: !16281)
!16292 = !DILocation(line: 37, column: 2, scope: !16281)
!16293 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16294, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16298)
!16294 = !DISubroutineType(types: !16295)
!16295 = !{!492, !16296}
!16296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16297, size: 32)
!16297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2399)
!16298 = !{!16299}
!16299 = !DILocalVariable(name: "node", arg: 1, scope: !16293, file: !137, line: 225, type: !16296)
!16300 = !DILocation(line: 0, scope: !16293)
!16301 = !DILocation(line: 227, column: 15, scope: !16293)
!16302 = !DILocation(line: 227, column: 20, scope: !16293)
!16303 = !DILocation(line: 227, column: 2, scope: !16293)
!16304 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16133, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16305)
!16305 = !{!16306, !16307}
!16306 = !DILocalVariable(name: "list", arg: 1, scope: !16304, file: !137, line: 325, type: !16044)
!16307 = !DILocalVariable(name: "node", arg: 2, scope: !16304, file: !137, line: 326, type: !2492)
!16308 = !DILocation(line: 0, scope: !16304)
!16309 = !DILocation(line: 328, column: 24, scope: !16304)
!16310 = !DILocation(line: 328, column: 15, scope: !16304)
!16311 = !DILocation(line: 328, column: 9, scope: !16304)
!16312 = !DILocation(line: 328, column: 45, scope: !16304)
!16313 = !DILocation(line: 328, column: 2, scope: !16304)
!16314 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16315, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16317)
!16315 = !DISubroutineType(types: !16316)
!16316 = !{!492, !16044}
!16317 = !{!16318}
!16318 = !DILocalVariable(name: "list", arg: 1, scope: !16314, file: !137, line: 266, type: !16044)
!16319 = !DILocation(line: 0, scope: !16314)
!16320 = !DILocation(line: 268, column: 15, scope: !16314)
!16321 = !DILocation(line: 268, column: 20, scope: !16314)
!16322 = !DILocation(line: 268, column: 2, scope: !16314)
!16323 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16324, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16326)
!16324 = !DISubroutineType(types: !16325)
!16325 = !{null, !2492}
!16326 = !{!16327, !16328, !16329}
!16327 = !DILocalVariable(name: "node", arg: 1, scope: !16323, file: !137, line: 496, type: !2492)
!16328 = !DILocalVariable(name: "prev", scope: !16323, file: !137, line: 498, type: !16121)
!16329 = !DILocalVariable(name: "next", scope: !16323, file: !137, line: 499, type: !16121)
!16330 = !DILocation(line: 0, scope: !16323)
!16331 = !DILocation(line: 498, column: 34, scope: !16323)
!16332 = !DILocation(line: 499, column: 34, scope: !16323)
!16333 = !DILocation(line: 501, column: 8, scope: !16323)
!16334 = !DILocation(line: 501, column: 13, scope: !16323)
!16335 = !DILocation(line: 502, column: 8, scope: !16323)
!16336 = !DILocation(line: 502, column: 13, scope: !16323)
!16337 = !DILocation(line: 503, column: 2, scope: !16323)
!16338 = !DILocation(line: 504, column: 1, scope: !16323)
!16339 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16324, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16340)
!16340 = !{!16341}
!16341 = !DILocalVariable(name: "node", arg: 1, scope: !16339, file: !137, line: 211, type: !2492)
!16342 = !DILocation(line: 0, scope: !16339)
!16343 = !DILocation(line: 213, column: 8, scope: !16339)
!16344 = !DILocation(line: 213, column: 13, scope: !16339)
!16345 = !DILocation(line: 214, column: 8, scope: !16339)
!16346 = !DILocation(line: 214, column: 13, scope: !16339)
!16347 = !DILocation(line: 215, column: 1, scope: !16339)
!16348 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14173, file: !14173, line: 131, type: !16349, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16351)
!16349 = !DISubroutineType(types: !16350)
!16350 = !{!492, !2389, !113}
!16351 = !{!16352, !16353}
!16352 = !DILocalVariable(name: "thread", arg: 1, scope: !16348, file: !14173, line: 131, type: !2389)
!16353 = !DILocalVariable(name: "state", arg: 2, scope: !16348, file: !14173, line: 131, type: !113)
!16354 = !DILocation(line: 0, scope: !16348)
!16355 = !DILocation(line: 133, column: 23, scope: !16348)
!16356 = !DILocation(line: 133, column: 10, scope: !16348)
!16357 = !DILocation(line: 133, column: 36, scope: !16348)
!16358 = !DILocation(line: 133, column: 45, scope: !16348)
!16359 = !DILocation(line: 133, column: 2, scope: !16348)
!16360 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14173, file: !14173, line: 211, type: !16361, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{!492, !105, !105}
!16363 = !{!16364, !16365}
!16364 = !DILocalVariable(name: "prio", arg: 1, scope: !16360, file: !14173, line: 211, type: !105)
!16365 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16360, file: !14173, line: 211, type: !105)
!16366 = !DILocation(line: 0, scope: !16360)
!16367 = !DILocation(line: 213, column: 9, scope: !16360)
!16368 = !DILocation(line: 213, column: 2, scope: !16360)
!16369 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14173, file: !14173, line: 206, type: !16361, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16370)
!16370 = !{!16371, !16372}
!16371 = !DILocalVariable(name: "prio1", arg: 1, scope: !16369, file: !14173, line: 206, type: !105)
!16372 = !DILocalVariable(name: "prio2", arg: 2, scope: !16369, file: !14173, line: 206, type: !105)
!16373 = !DILocation(line: 0, scope: !16369)
!16374 = !DILocation(line: 208, column: 15, scope: !16369)
!16375 = !DILocation(line: 208, column: 2, scope: !16369)
!16376 = distinct !DISubprogram(name: "z_ready_thread", scope: !2496, file: !2496, line: 635, type: !15776, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16377)
!16377 = !{!16378, !16379, !16381}
!16378 = !DILocalVariable(name: "thread", arg: 1, scope: !16376, file: !2496, line: 635, type: !2389)
!16379 = !DILocalVariable(name: "__i", scope: !16380, file: !2496, line: 637, type: !15810)
!16380 = distinct !DILexicalBlock(scope: !16376, file: !2496, line: 637, column: 2)
!16381 = !DILocalVariable(name: "__key", scope: !16380, file: !2496, line: 637, type: !15810)
!16382 = !DILocation(line: 0, scope: !16376)
!16383 = !DILocation(line: 0, scope: !16380)
!16384 = !DILocation(line: 0, scope: !15818, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 637, column: 2, scope: !16380)
!16386 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16385)
!16388 = !DILocation(line: 0, scope: !15827, inlinedAt: !16387)
!16389 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16385)
!16390 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16385)
!16391 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16385)
!16392 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16385)
!16393 = !DILocation(line: 639, column: 4, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16395, file: !2496, line: 638, column: 41)
!16395 = distinct !DILexicalBlock(scope: !16396, file: !2496, line: 638, column: 7)
!16396 = distinct !DILexicalBlock(scope: !16397, file: !2496, line: 637, column: 26)
!16397 = distinct !DILexicalBlock(scope: !16380, file: !2496, line: 637, column: 2)
!16398 = !DILocation(line: 0, scope: !15852, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 637, column: 2, scope: !16397)
!16400 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16399)
!16401 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16399)
!16402 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16399)
!16403 = !DILocation(line: 0, scope: !15866, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16399)
!16405 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16404)
!16406 = !DILocation(line: 642, column: 1, scope: !16376)
!16407 = distinct !DISubprogram(name: "ready_thread", scope: !2496, file: !2496, line: 617, type: !15776, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16408)
!16408 = !{!16409}
!16409 = !DILocalVariable(name: "thread", arg: 1, scope: !16407, file: !2496, line: 617, type: !2389)
!16410 = !DILocation(line: 0, scope: !16407)
!16411 = !DILocation(line: 626, column: 7, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16407, file: !2496, line: 626, column: 6)
!16413 = !DILocation(line: 626, column: 34, scope: !16412)
!16414 = !DILocation(line: 626, column: 37, scope: !16412)
!16415 = !DILocation(line: 626, column: 6, scope: !16407)
!16416 = !DILocation(line: 0, scope: !16027, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 629, column: 3, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16412, file: !2496, line: 626, column: 64)
!16419 = !DILocation(line: 252, column: 15, scope: !16027, inlinedAt: !16417)
!16420 = !DILocation(line: 252, column: 28, scope: !16027, inlinedAt: !16417)
!16421 = !DILocation(line: 0, scope: !16034, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 254, column: 3, scope: !16038, inlinedAt: !16417)
!16423 = !DILocation(line: 0, scope: !16041, inlinedAt: !16424)
!16424 = distinct !DILocation(line: 229, column: 2, scope: !16034, inlinedAt: !16422)
!16425 = !DILocation(line: 186, column: 2, scope: !16051, inlinedAt: !16424)
!16426 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !16424)
!16427 = !DILocation(line: 186, column: 2, scope: !16055, inlinedAt: !16424)
!16428 = !DILocation(line: 188, column: 2, scope: !16057, inlinedAt: !16424)
!16429 = !DILocation(line: 188, column: 2, scope: !16059, inlinedAt: !16424)
!16430 = !DILocation(line: 0, scope: !16057, inlinedAt: !16424)
!16431 = !DILocation(line: 189, column: 7, scope: !16062, inlinedAt: !16424)
!16432 = !DILocation(line: 189, column: 35, scope: !16062, inlinedAt: !16424)
!16433 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !16424)
!16434 = !DILocation(line: 191, column: 21, scope: !16067, inlinedAt: !16424)
!16435 = !DILocation(line: 190, column: 4, scope: !16067, inlinedAt: !16424)
!16436 = !DILocation(line: 192, column: 4, scope: !16067, inlinedAt: !16424)
!16437 = distinct !{!16437, !16428, !16438}
!16438 = !DILocation(line: 194, column: 2, scope: !16057, inlinedAt: !16424)
!16439 = !DILocation(line: 196, column: 37, scope: !16041, inlinedAt: !16424)
!16440 = !DILocation(line: 196, column: 2, scope: !16041, inlinedAt: !16424)
!16441 = !DILocation(line: 197, column: 1, scope: !16041, inlinedAt: !16424)
!16442 = !DILocation(line: 630, column: 3, scope: !16418)
!16443 = !DILocation(line: 632, column: 2, scope: !16418)
!16444 = !DILocation(line: 633, column: 1, scope: !16407)
!16445 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14173, file: !14173, line: 120, type: !15959, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16446)
!16446 = !{!16447}
!16447 = !DILocalVariable(name: "thread", arg: 1, scope: !16445, file: !14173, line: 120, type: !2389)
!16448 = !DILocation(line: 0, scope: !16445)
!16449 = !DILocation(line: 122, column: 12, scope: !16445)
!16450 = !DILocation(line: 122, column: 62, scope: !16445)
!16451 = !DILocation(line: 123, column: 4, scope: !16445)
!16452 = !DILocation(line: 122, column: 2, scope: !16445)
!16453 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2496, file: !2496, line: 644, type: !15776, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16454)
!16454 = !{!16455, !16456, !16458}
!16455 = !DILocalVariable(name: "thread", arg: 1, scope: !16453, file: !2496, line: 644, type: !2389)
!16456 = !DILocalVariable(name: "__i", scope: !16457, file: !2496, line: 646, type: !15810)
!16457 = distinct !DILexicalBlock(scope: !16453, file: !2496, line: 646, column: 2)
!16458 = !DILocalVariable(name: "__key", scope: !16457, file: !2496, line: 646, type: !15810)
!16459 = !DILocation(line: 0, scope: !16453)
!16460 = !DILocation(line: 0, scope: !16457)
!16461 = !DILocation(line: 0, scope: !15818, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 646, column: 2, scope: !16457)
!16463 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16462)
!16465 = !DILocation(line: 0, scope: !15827, inlinedAt: !16464)
!16466 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16462)
!16467 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16462)
!16468 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16462)
!16469 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16462)
!16470 = !DILocation(line: 647, column: 3, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16472, file: !2496, line: 646, column: 26)
!16472 = distinct !DILexicalBlock(scope: !16457, file: !2496, line: 646, column: 2)
!16473 = !DILocation(line: 0, scope: !15852, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 646, column: 2, scope: !16472)
!16475 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16474)
!16476 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16474)
!16477 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16474)
!16478 = !DILocation(line: 0, scope: !15866, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16474)
!16480 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16479)
!16481 = !DILocation(line: 649, column: 1, scope: !16453)
!16482 = distinct !DISubprogram(name: "z_sched_start", scope: !2496, file: !2496, line: 651, type: !15776, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16483)
!16483 = !{!16484, !16485}
!16484 = !DILocalVariable(name: "thread", arg: 1, scope: !16482, file: !2496, line: 651, type: !2389)
!16485 = !DILocalVariable(name: "key", scope: !16482, file: !2496, line: 653, type: !15810)
!16486 = !DILocation(line: 0, scope: !16482)
!16487 = !DILocation(line: 0, scope: !15818, inlinedAt: !16488)
!16488 = distinct !DILocation(line: 653, column: 25, scope: !16482)
!16489 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16488)
!16491 = !DILocation(line: 0, scope: !15827, inlinedAt: !16490)
!16492 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16488)
!16493 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16488)
!16494 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16488)
!16495 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16488)
!16496 = !DILocation(line: 655, column: 6, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16482, file: !2496, line: 655, column: 6)
!16498 = !DILocation(line: 655, column: 6, scope: !16482)
!16499 = !DILocation(line: 0, scope: !15852, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 656, column: 3, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !16497, file: !2496, line: 655, column: 36)
!16502 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16500)
!16503 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16500)
!16504 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16500)
!16505 = !DILocation(line: 0, scope: !15866, inlinedAt: !16506)
!16506 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16500)
!16507 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16506)
!16508 = !DILocation(line: 657, column: 3, scope: !16501)
!16509 = !DILocation(line: 660, column: 2, scope: !16482)
!16510 = !DILocation(line: 661, column: 2, scope: !16482)
!16511 = !DILocation(line: 662, column: 2, scope: !16482)
!16512 = !DILocation(line: 663, column: 1, scope: !16482)
!16513 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14173, file: !14173, line: 126, type: !15959, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16514)
!16514 = !{!16515}
!16515 = !DILocalVariable(name: "thread", arg: 1, scope: !16513, file: !14173, line: 126, type: !2389)
!16516 = !DILocation(line: 0, scope: !16513)
!16517 = !DILocation(line: 128, column: 23, scope: !16513)
!16518 = !DILocation(line: 128, column: 36, scope: !16513)
!16519 = !DILocation(line: 128, column: 56, scope: !16513)
!16520 = !DILocation(line: 128, column: 2, scope: !16513)
!16521 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14173, file: !14173, line: 155, type: !15776, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16522)
!16522 = !{!16523}
!16523 = !DILocalVariable(name: "thread", arg: 1, scope: !16521, file: !14173, line: 155, type: !2389)
!16524 = !DILocation(line: 0, scope: !16521)
!16525 = !DILocation(line: 157, column: 15, scope: !16521)
!16526 = !DILocation(line: 157, column: 28, scope: !16521)
!16527 = !DILocation(line: 158, column: 1, scope: !16521)
!16528 = distinct !DISubprogram(name: "z_reschedule", scope: !2496, file: !2496, line: 967, type: !15853, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16529)
!16529 = !{!16530, !16531}
!16530 = !DILocalVariable(name: "lock", arg: 1, scope: !16528, file: !2496, line: 967, type: !15821)
!16531 = !DILocalVariable(name: "key", arg: 2, scope: !16528, file: !2496, line: 967, type: !15810)
!16532 = !DILocation(line: 0, scope: !16528)
!16533 = !DILocation(line: 969, column: 6, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16528, file: !2496, line: 969, column: 6)
!16535 = !DILocation(line: 969, column: 23, scope: !16534)
!16536 = !DILocation(line: 969, column: 26, scope: !16534)
!16537 = !DILocation(line: 969, column: 6, scope: !16528)
!16538 = !DILocalVariable(name: "key", arg: 2, scope: !16539, file: !14298, line: 193, type: !15810)
!16539 = distinct !DISubprogram(name: "z_swap", scope: !14298, file: !14298, line: 193, type: !16540, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16542)
!16540 = !DISubroutineType(types: !16541)
!16541 = !{!105, !15821, !15810}
!16542 = !{!16543, !16538}
!16543 = !DILocalVariable(name: "lock", arg: 1, scope: !16539, file: !14298, line: 193, type: !15821)
!16544 = !DILocation(line: 0, scope: !16539, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 970, column: 3, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16534, file: !2496, line: 969, column: 39)
!16547 = !DILocalVariable(name: "l", arg: 1, scope: !16548, file: !236, line: 221, type: !15821)
!16548 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !16549, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16551)
!16549 = !DISubroutineType(types: !16550)
!16550 = !{null, !15821}
!16551 = !{!16547}
!16552 = !DILocation(line: 0, scope: !16548, inlinedAt: !16553)
!16553 = distinct !DILocation(line: 195, column: 2, scope: !16539, inlinedAt: !16545)
!16554 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !16553)
!16555 = distinct !DILexicalBlock(scope: !16556, file: !236, line: 225, column: 2)
!16556 = distinct !DILexicalBlock(scope: !16548, file: !236, line: 225, column: 2)
!16557 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !16553)
!16558 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !16553)
!16559 = distinct !DILexicalBlock(scope: !16555, file: !236, line: 225, column: 2)
!16560 = !DILocation(line: 196, column: 9, scope: !16539, inlinedAt: !16545)
!16561 = !DILocation(line: 971, column: 2, scope: !16546)
!16562 = !DILocation(line: 0, scope: !15852, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 972, column: 3, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16534, file: !2496, line: 971, column: 9)
!16565 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16563)
!16566 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16563)
!16567 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16563)
!16568 = !DILocation(line: 0, scope: !15866, inlinedAt: !16569)
!16569 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16563)
!16570 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16569)
!16571 = !DILocation(line: 975, column: 1, scope: !16528)
!16572 = distinct !DISubprogram(name: "resched", scope: !2496, file: !2496, line: 940, type: !16573, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16575)
!16573 = !DISubroutineType(types: !16574)
!16574 = !{!492, !113}
!16575 = !{!16576}
!16576 = !DILocalVariable(name: "key", arg: 1, scope: !16572, file: !2496, line: 940, type: !113)
!16577 = !DILocation(line: 0, scope: !16572)
!16578 = !DILocalVariable(name: "key", arg: 1, scope: !16579, file: !7467, line: 112, type: !32)
!16579 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7467, file: !7467, line: 112, type: !16580, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16582)
!16580 = !DISubroutineType(types: !16581)
!16581 = !{!492, !32}
!16582 = !{!16578}
!16583 = !DILocation(line: 0, scope: !16579, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 946, column: 9, scope: !16572)
!16585 = !DILocation(line: 115, column: 13, scope: !16579, inlinedAt: !16584)
!16586 = !DILocation(line: 946, column: 32, scope: !16572)
!16587 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !16591)
!16588 = distinct !DISubprogram(name: "__get_IPSR", scope: !7785, file: !7785, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16589)
!16589 = !{!16590}
!16590 = !DILocalVariable(name: "result", scope: !16588, file: !7785, line: 1029, type: !113)
!16591 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !16593)
!16592 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8832, file: !8832, line: 46, type: !8833, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!16593 = distinct !DILocation(line: 946, column: 36, scope: !16572)
!16594 = !{i64 3587568}
!16595 = !DILocation(line: 0, scope: !16588, inlinedAt: !16591)
!16596 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !16593)
!16597 = !DILocation(line: 946, column: 2, scope: !16572)
!16598 = distinct !DISubprogram(name: "need_swap", scope: !2496, file: !2496, line: 953, type: !8833, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16599)
!16599 = !{!16600}
!16600 = !DILocalVariable(name: "new_thread", scope: !16598, file: !2496, line: 959, type: !2389)
!16601 = !DILocation(line: 962, column: 31, scope: !16598)
!16602 = !DILocation(line: 0, scope: !16598)
!16603 = !DILocation(line: 963, column: 23, scope: !16598)
!16604 = !DILocation(line: 963, column: 20, scope: !16598)
!16605 = !DILocation(line: 963, column: 2, scope: !16598)
!16606 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14298, file: !14298, line: 181, type: !7795, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16607)
!16607 = !{!16608, !16609}
!16608 = !DILocalVariable(name: "key", arg: 1, scope: !16606, file: !14298, line: 181, type: !32)
!16609 = !DILocalVariable(name: "ret", scope: !16606, file: !14298, line: 183, type: !105)
!16610 = !DILocation(line: 0, scope: !16606)
!16611 = !DILocation(line: 185, column: 8, scope: !16606)
!16612 = !DILocation(line: 186, column: 2, scope: !16606)
!16613 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2496, file: !2496, line: 665, type: !15776, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16614)
!16614 = !{!16615, !16616, !16618}
!16615 = !DILocalVariable(name: "thread", arg: 1, scope: !16613, file: !2496, line: 665, type: !2389)
!16616 = !DILocalVariable(name: "__i", scope: !16617, file: !2496, line: 671, type: !15810)
!16617 = distinct !DILexicalBlock(scope: !16613, file: !2496, line: 671, column: 2)
!16618 = !DILocalVariable(name: "__key", scope: !16617, file: !2496, line: 671, type: !15810)
!16619 = !DILocation(line: 0, scope: !16613)
!16620 = !DILocation(line: 669, column: 8, scope: !16613)
!16621 = !DILocation(line: 0, scope: !16617)
!16622 = !DILocation(line: 0, scope: !15818, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 671, column: 2, scope: !16617)
!16624 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16625)
!16625 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16623)
!16626 = !DILocation(line: 0, scope: !15827, inlinedAt: !16625)
!16627 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16623)
!16628 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16623)
!16629 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16623)
!16630 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16623)
!16631 = !DILocation(line: 672, column: 7, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16633, file: !2496, line: 672, column: 7)
!16633 = distinct !DILexicalBlock(scope: !16634, file: !2496, line: 671, column: 26)
!16634 = distinct !DILexicalBlock(scope: !16617, file: !2496, line: 671, column: 2)
!16635 = !DILocation(line: 672, column: 7, scope: !16633)
!16636 = !DILocation(line: 0, scope: !16010, inlinedAt: !16637)
!16637 = distinct !DILocation(line: 673, column: 4, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16632, file: !2496, line: 672, column: 35)
!16639 = !DILocation(line: 266, column: 15, scope: !16010, inlinedAt: !16637)
!16640 = !DILocation(line: 266, column: 28, scope: !16010, inlinedAt: !16637)
!16641 = !DILocation(line: 0, scope: !16018, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 268, column: 3, scope: !16022, inlinedAt: !16637)
!16643 = !DILocation(line: 234, column: 2, scope: !16018, inlinedAt: !16642)
!16644 = !DILocation(line: 674, column: 3, scope: !16638)
!16645 = !DILocation(line: 675, column: 3, scope: !16633)
!16646 = !DILocation(line: 676, column: 26, scope: !16633)
!16647 = !DILocation(line: 676, column: 23, scope: !16633)
!16648 = !DILocation(line: 676, column: 3, scope: !16633)
!16649 = !DILocation(line: 0, scope: !15852, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 671, column: 2, scope: !16634)
!16651 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16650)
!16652 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16650)
!16653 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16650)
!16654 = !DILocation(line: 0, scope: !15866, inlinedAt: !16655)
!16655 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16650)
!16656 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16655)
!16657 = !DILocation(line: 679, column: 16, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16613, file: !2496, line: 679, column: 6)
!16659 = !DILocation(line: 679, column: 13, scope: !16658)
!16660 = !DILocation(line: 679, column: 6, scope: !16613)
!16661 = !DILocation(line: 680, column: 3, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16658, file: !2496, line: 679, column: 26)
!16663 = !DILocation(line: 681, column: 2, scope: !16662)
!16664 = !DILocation(line: 684, column: 1, scope: !16613)
!16665 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14602, file: !14602, line: 52, type: !15794, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16666)
!16666 = !{!16667}
!16667 = !DILocalVariable(name: "thread", arg: 1, scope: !16665, file: !14602, line: 52, type: !2389)
!16668 = !DILocation(line: 0, scope: !16665)
!16669 = !DILocation(line: 54, column: 39, scope: !16665)
!16670 = !DILocation(line: 54, column: 9, scope: !16665)
!16671 = !DILocation(line: 54, column: 2, scope: !16665)
!16672 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14173, file: !14173, line: 141, type: !15776, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16673)
!16673 = !{!16674}
!16674 = !DILocalVariable(name: "thread", arg: 1, scope: !16672, file: !14173, line: 141, type: !2389)
!16675 = !DILocation(line: 0, scope: !16672)
!16676 = !DILocation(line: 143, column: 15, scope: !16672)
!16677 = !DILocation(line: 143, column: 28, scope: !16672)
!16678 = !DILocation(line: 146, column: 1, scope: !16672)
!16679 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14173, file: !14173, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!16680 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16681)
!16681 = distinct !DILocation(line: 75, column: 30, scope: !16679)
!16682 = !DILocation(line: 0, scope: !15827, inlinedAt: !16681)
!16683 = !DILocation(line: 75, column: 9, scope: !16679)
!16684 = !DILocation(line: 76, column: 1, scope: !16679)
!16685 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2496, file: !2496, line: 977, type: !7880, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16686)
!16686 = !{!16687}
!16687 = !DILocalVariable(name: "key", arg: 1, scope: !16685, file: !2496, line: 977, type: !113)
!16688 = !DILocation(line: 0, scope: !16685)
!16689 = !DILocation(line: 979, column: 6, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16685, file: !2496, line: 979, column: 6)
!16691 = !DILocation(line: 979, column: 6, scope: !16685)
!16692 = !DILocation(line: 980, column: 3, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16690, file: !2496, line: 979, column: 20)
!16694 = !DILocation(line: 981, column: 2, scope: !16693)
!16695 = !DILocation(line: 0, scope: !15866, inlinedAt: !16696)
!16696 = distinct !DILocation(line: 982, column: 3, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16690, file: !2496, line: 981, column: 9)
!16698 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16696)
!16699 = !DILocation(line: 985, column: 1, scope: !16685)
!16700 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2496, file: !2496, line: 695, type: !15776, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16701)
!16701 = !{!16702, !16703}
!16702 = !DILocalVariable(name: "thread", arg: 1, scope: !16700, file: !2496, line: 695, type: !2389)
!16703 = !DILocalVariable(name: "key", scope: !16700, file: !2496, line: 699, type: !15810)
!16704 = !DILocation(line: 0, scope: !16700)
!16705 = !DILocation(line: 0, scope: !15818, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 699, column: 25, scope: !16700)
!16707 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16708)
!16708 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16706)
!16709 = !DILocation(line: 0, scope: !15827, inlinedAt: !16708)
!16710 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16706)
!16711 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16706)
!16712 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16706)
!16713 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16706)
!16714 = !DILocation(line: 702, column: 7, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16700, file: !2496, line: 702, column: 6)
!16716 = !DILocation(line: 702, column: 6, scope: !16700)
!16717 = !DILocation(line: 0, scope: !15852, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 703, column: 3, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16715, file: !2496, line: 702, column: 38)
!16720 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16718)
!16721 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16718)
!16722 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16718)
!16723 = !DILocation(line: 0, scope: !15866, inlinedAt: !16724)
!16724 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16718)
!16725 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16724)
!16726 = !DILocation(line: 704, column: 3, scope: !16719)
!16727 = !DILocation(line: 707, column: 2, scope: !16700)
!16728 = !DILocation(line: 708, column: 2, scope: !16700)
!16729 = !DILocation(line: 710, column: 2, scope: !16700)
!16730 = !DILocation(line: 713, column: 1, scope: !16700)
!16731 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14173, file: !14173, line: 96, type: !15959, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16732)
!16732 = !{!16733}
!16733 = !DILocalVariable(name: "thread", arg: 1, scope: !16731, file: !14173, line: 96, type: !2389)
!16734 = !DILocation(line: 0, scope: !16731)
!16735 = !DILocation(line: 98, column: 23, scope: !16731)
!16736 = !DILocation(line: 98, column: 36, scope: !16731)
!16737 = !DILocation(line: 98, column: 57, scope: !16731)
!16738 = !DILocation(line: 98, column: 2, scope: !16731)
!16739 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14173, file: !14173, line: 148, type: !15776, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16740)
!16740 = !{!16741}
!16741 = !DILocalVariable(name: "thread", arg: 1, scope: !16739, file: !14173, line: 148, type: !2389)
!16742 = !DILocation(line: 0, scope: !16739)
!16743 = !DILocation(line: 150, column: 15, scope: !16739)
!16744 = !DILocation(line: 150, column: 28, scope: !16739)
!16745 = !DILocation(line: 153, column: 1, scope: !16739)
!16746 = distinct !DISubprogram(name: "z_pend_thread", scope: !2496, file: !2496, line: 770, type: !16747, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16753)
!16747 = !DISubroutineType(types: !16748)
!16748 = !{null, !2389, !2420, !16749}
!16749 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16750)
!16750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16751)
!16751 = !{!16752}
!16752 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16750, file: !108, line: 66, baseType: !107, size: 64)
!16753 = !{!16754, !16755, !16756, !16757, !16759}
!16754 = !DILocalVariable(name: "thread", arg: 1, scope: !16746, file: !2496, line: 770, type: !2389)
!16755 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16746, file: !2496, line: 770, type: !2420)
!16756 = !DILocalVariable(name: "timeout", arg: 3, scope: !16746, file: !2496, line: 771, type: !16749)
!16757 = !DILocalVariable(name: "__i", scope: !16758, file: !2496, line: 774, type: !15810)
!16758 = distinct !DILexicalBlock(scope: !16746, file: !2496, line: 774, column: 2)
!16759 = !DILocalVariable(name: "__key", scope: !16758, file: !2496, line: 774, type: !15810)
!16760 = !DILocation(line: 0, scope: !16746)
!16761 = !DILocation(line: 773, column: 2, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16763, file: !2496, line: 773, column: 2)
!16763 = distinct !DILexicalBlock(scope: !16746, file: !2496, line: 773, column: 2)
!16764 = !DILocation(line: 773, column: 2, scope: !16763)
!16765 = !DILocation(line: 773, column: 2, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16762, file: !2496, line: 773, column: 2)
!16767 = !DILocation(line: 0, scope: !16758)
!16768 = !DILocation(line: 0, scope: !15818, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 774, column: 2, scope: !16758)
!16770 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16771)
!16771 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16769)
!16772 = !DILocation(line: 0, scope: !15827, inlinedAt: !16771)
!16773 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16769)
!16774 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16769)
!16775 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16769)
!16776 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16769)
!16777 = !DILocation(line: 775, column: 3, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16779, file: !2496, line: 774, column: 26)
!16779 = distinct !DILexicalBlock(scope: !16758, file: !2496, line: 774, column: 2)
!16780 = !DILocation(line: 0, scope: !15852, inlinedAt: !16781)
!16781 = distinct !DILocation(line: 774, column: 2, scope: !16779)
!16782 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16781)
!16783 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16781)
!16784 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16781)
!16785 = !DILocation(line: 0, scope: !15866, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16781)
!16787 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16786)
!16788 = !DILocation(line: 777, column: 1, scope: !16746)
!16789 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2496, file: !2496, line: 79, type: !15959, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16790)
!16790 = !{!16791}
!16791 = !DILocalVariable(name: "thread", arg: 1, scope: !16789, file: !2496, line: 79, type: !2389)
!16792 = !DILocation(line: 0, scope: !16789)
!16793 = !DILocation(line: 81, column: 23, scope: !16789)
!16794 = !DILocation(line: 81, column: 36, scope: !16789)
!16795 = !DILocation(line: 81, column: 53, scope: !16789)
!16796 = !DILocation(line: 81, column: 2, scope: !16789)
!16797 = distinct !DISubprogram(name: "pend_locked", scope: !2496, file: !2496, line: 760, type: !16747, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16798)
!16798 = !{!16799, !16800, !16801}
!16799 = !DILocalVariable(name: "thread", arg: 1, scope: !16797, file: !2496, line: 760, type: !2389)
!16800 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16797, file: !2496, line: 760, type: !2420)
!16801 = !DILocalVariable(name: "timeout", arg: 3, scope: !16797, file: !2496, line: 761, type: !16749)
!16802 = !DILocation(line: 0, scope: !16797)
!16803 = !DILocation(line: 766, column: 2, scope: !16797)
!16804 = !DILocation(line: 767, column: 2, scope: !16797)
!16805 = !DILocation(line: 768, column: 1, scope: !16797)
!16806 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2496, file: !2496, line: 740, type: !16807, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16809)
!16807 = !DISubroutineType(types: !16808)
!16808 = !{null, !2389, !2420}
!16809 = !{!16810, !16811}
!16810 = !DILocalVariable(name: "thread", arg: 1, scope: !16806, file: !2496, line: 740, type: !2389)
!16811 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16806, file: !2496, line: 740, type: !2420)
!16812 = !DILocation(line: 0, scope: !16806)
!16813 = !DILocation(line: 742, column: 2, scope: !16806)
!16814 = !DILocation(line: 743, column: 2, scope: !16806)
!16815 = !DILocation(line: 747, column: 13, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16806, file: !2496, line: 747, column: 6)
!16817 = !DILocation(line: 747, column: 6, scope: !16806)
!16818 = !DILocation(line: 748, column: 16, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16816, file: !2496, line: 747, column: 22)
!16820 = !DILocation(line: 748, column: 26, scope: !16819)
!16821 = !DILocation(line: 749, column: 28, scope: !16819)
!16822 = !DILocation(line: 0, scope: !16041, inlinedAt: !16823)
!16823 = distinct !DILocation(line: 749, column: 3, scope: !16819)
!16824 = !DILocation(line: 186, column: 2, scope: !16051, inlinedAt: !16823)
!16825 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !16823)
!16826 = !DILocation(line: 186, column: 2, scope: !16055, inlinedAt: !16823)
!16827 = !DILocation(line: 188, column: 2, scope: !16057, inlinedAt: !16823)
!16828 = !DILocation(line: 188, column: 2, scope: !16059, inlinedAt: !16823)
!16829 = !DILocation(line: 0, scope: !16057, inlinedAt: !16823)
!16830 = !DILocation(line: 189, column: 7, scope: !16062, inlinedAt: !16823)
!16831 = !DILocation(line: 189, column: 35, scope: !16062, inlinedAt: !16823)
!16832 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !16823)
!16833 = !DILocation(line: 191, column: 21, scope: !16067, inlinedAt: !16823)
!16834 = !DILocation(line: 190, column: 4, scope: !16067, inlinedAt: !16823)
!16835 = !DILocation(line: 192, column: 4, scope: !16067, inlinedAt: !16823)
!16836 = distinct !{!16836, !16827, !16837}
!16837 = !DILocation(line: 194, column: 2, scope: !16057, inlinedAt: !16823)
!16838 = !DILocation(line: 196, column: 37, scope: !16041, inlinedAt: !16823)
!16839 = !DILocation(line: 196, column: 2, scope: !16041, inlinedAt: !16823)
!16840 = !DILocation(line: 197, column: 1, scope: !16041, inlinedAt: !16823)
!16841 = !DILocation(line: 751, column: 1, scope: !16806)
!16842 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2496, file: !2496, line: 753, type: !16843, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16845)
!16843 = !DISubroutineType(types: !16844)
!16844 = !{null, !2389, !16749}
!16845 = !{!16846, !16847}
!16846 = !DILocalVariable(name: "thread", arg: 1, scope: !16842, file: !2496, line: 753, type: !2389)
!16847 = !DILocalVariable(name: "timeout", arg: 2, scope: !16842, file: !2496, line: 753, type: !16749)
!16848 = !DILocation(line: 0, scope: !16842)
!16849 = !DILocation(line: 755, column: 7, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16842, file: !2496, line: 755, column: 6)
!16851 = !DILocation(line: 755, column: 6, scope: !16842)
!16852 = !DILocation(line: 756, column: 3, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16850, file: !2496, line: 755, column: 41)
!16854 = !DILocation(line: 757, column: 2, scope: !16853)
!16855 = !DILocation(line: 758, column: 1, scope: !16842)
!16856 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14602, file: !14602, line: 47, type: !16843, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16857)
!16857 = !{!16858, !16859}
!16858 = !DILocalVariable(name: "thread", arg: 1, scope: !16856, file: !14602, line: 47, type: !2389)
!16859 = !DILocalVariable(name: "ticks", arg: 2, scope: !16856, file: !14602, line: 47, type: !16749)
!16860 = !DILocation(line: 0, scope: !16856)
!16861 = !DILocation(line: 49, column: 30, scope: !16856)
!16862 = !DILocation(line: 49, column: 2, scope: !16856)
!16863 = !DILocation(line: 50, column: 1, scope: !16856)
!16864 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2496, file: !2496, line: 795, type: !2446, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16865)
!16865 = !{!16866, !16867, !16868, !16870, !16871}
!16866 = !DILocalVariable(name: "timeout", arg: 1, scope: !16864, file: !2496, line: 795, type: !2448)
!16867 = !DILocalVariable(name: "thread", scope: !16864, file: !2496, line: 797, type: !2389)
!16868 = !DILocalVariable(name: "__i", scope: !16869, file: !2496, line: 800, type: !15810)
!16869 = distinct !DILexicalBlock(scope: !16864, file: !2496, line: 800, column: 2)
!16870 = !DILocalVariable(name: "__key", scope: !16869, file: !2496, line: 800, type: !15810)
!16871 = !DILocalVariable(name: "killed", scope: !16872, file: !2496, line: 801, type: !492)
!16872 = distinct !DILexicalBlock(scope: !16873, file: !2496, line: 800, column: 26)
!16873 = distinct !DILexicalBlock(scope: !16869, file: !2496, line: 800, column: 2)
!16874 = !DILocation(line: 0, scope: !16864)
!16875 = !DILocation(line: 797, column: 28, scope: !16864)
!16876 = !DILocation(line: 0, scope: !16869)
!16877 = !DILocation(line: 0, scope: !15818, inlinedAt: !16878)
!16878 = distinct !DILocation(line: 800, column: 2, scope: !16869)
!16879 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16880)
!16880 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16878)
!16881 = !DILocation(line: 0, scope: !15827, inlinedAt: !16880)
!16882 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16878)
!16883 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16878)
!16884 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16878)
!16885 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16878)
!16886 = !DILocation(line: 801, column: 27, scope: !16872)
!16887 = !DILocation(line: 801, column: 32, scope: !16872)
!16888 = !DILocation(line: 801, column: 61, scope: !16872)
!16889 = !DILocation(line: 0, scope: !16872)
!16890 = !DILocation(line: 804, column: 7, scope: !16872)
!16891 = !DILocation(line: 805, column: 21, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16893, file: !2496, line: 805, column: 8)
!16893 = distinct !DILexicalBlock(scope: !16894, file: !2496, line: 804, column: 16)
!16894 = distinct !DILexicalBlock(scope: !16872, file: !2496, line: 804, column: 7)
!16895 = !DILocation(line: 805, column: 31, scope: !16892)
!16896 = !DILocation(line: 805, column: 8, scope: !16893)
!16897 = !DILocation(line: 806, column: 5, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16892, file: !2496, line: 805, column: 40)
!16899 = !DILocation(line: 807, column: 4, scope: !16898)
!16900 = !DILocation(line: 808, column: 4, scope: !16893)
!16901 = !DILocation(line: 809, column: 4, scope: !16893)
!16902 = !DILocation(line: 810, column: 4, scope: !16893)
!16903 = !DILocation(line: 811, column: 3, scope: !16893)
!16904 = !DILocation(line: 0, scope: !15852, inlinedAt: !16905)
!16905 = distinct !DILocation(line: 800, column: 2, scope: !16873)
!16906 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16905)
!16907 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16905)
!16908 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16905)
!16909 = !DILocation(line: 0, scope: !15866, inlinedAt: !16910)
!16910 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16905)
!16911 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16910)
!16912 = !DILocation(line: 813, column: 1, scope: !16864)
!16913 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2496, file: !2496, line: 779, type: !15776, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16914)
!16914 = !{!16915}
!16915 = !DILocalVariable(name: "thread", arg: 1, scope: !16913, file: !2496, line: 779, type: !2389)
!16916 = !DILocation(line: 0, scope: !16913)
!16917 = !DILocation(line: 781, column: 21, scope: !16913)
!16918 = !DILocation(line: 781, column: 2, scope: !16913)
!16919 = !DILocation(line: 782, column: 2, scope: !16913)
!16920 = !DILocation(line: 783, column: 15, scope: !16913)
!16921 = !DILocation(line: 783, column: 25, scope: !16913)
!16922 = !DILocation(line: 784, column: 1, scope: !16913)
!16923 = distinct !DISubprogram(name: "pended_on_thread", scope: !2496, file: !2496, line: 724, type: !16924, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16926)
!16924 = !DISubroutineType(types: !16925)
!16925 = !{!2420, !2389}
!16926 = !{!16927}
!16927 = !DILocalVariable(name: "thread", arg: 1, scope: !16923, file: !2496, line: 724, type: !2389)
!16928 = !DILocation(line: 0, scope: !16923)
!16929 = !DILocation(line: 726, column: 2, scope: !16930)
!16930 = distinct !DILexicalBlock(scope: !16931, file: !2496, line: 726, column: 2)
!16931 = distinct !DILexicalBlock(scope: !16923, file: !2496, line: 726, column: 2)
!16932 = !DILocation(line: 726, column: 2, scope: !16931)
!16933 = !DILocation(line: 726, column: 2, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16930, file: !2496, line: 726, column: 2)
!16935 = !DILocation(line: 728, column: 2, scope: !16923)
!16936 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14173, file: !14173, line: 165, type: !15776, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16937)
!16937 = !{!16938}
!16938 = !DILocalVariable(name: "thread", arg: 1, scope: !16936, file: !14173, line: 165, type: !2389)
!16939 = !DILocation(line: 0, scope: !16936)
!16940 = !DILocation(line: 167, column: 15, scope: !16936)
!16941 = !DILocation(line: 167, column: 28, scope: !16936)
!16942 = !DILocation(line: 168, column: 1, scope: !16936)
!16943 = distinct !DISubprogram(name: "unready_thread", scope: !2496, file: !2496, line: 731, type: !15776, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16944)
!16944 = !{!16945}
!16945 = !DILocalVariable(name: "thread", arg: 1, scope: !16943, file: !2496, line: 731, type: !2389)
!16946 = !DILocation(line: 0, scope: !16943)
!16947 = !DILocation(line: 733, column: 6, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16943, file: !2496, line: 733, column: 6)
!16949 = !DILocation(line: 733, column: 6, scope: !16943)
!16950 = !DILocation(line: 0, scope: !16010, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 734, column: 3, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16948, file: !2496, line: 733, column: 34)
!16953 = !DILocation(line: 266, column: 15, scope: !16010, inlinedAt: !16951)
!16954 = !DILocation(line: 266, column: 28, scope: !16010, inlinedAt: !16951)
!16955 = !DILocation(line: 0, scope: !16018, inlinedAt: !16956)
!16956 = distinct !DILocation(line: 268, column: 3, scope: !16022, inlinedAt: !16951)
!16957 = !DILocation(line: 234, column: 2, scope: !16018, inlinedAt: !16956)
!16958 = !DILocation(line: 735, column: 2, scope: !16952)
!16959 = !DILocation(line: 736, column: 25, scope: !16943)
!16960 = !DILocation(line: 736, column: 22, scope: !16943)
!16961 = !DILocation(line: 736, column: 2, scope: !16943)
!16962 = !DILocation(line: 737, column: 1, scope: !16943)
!16963 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14173, file: !14173, line: 160, type: !15776, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16964)
!16964 = !{!16965}
!16965 = !DILocalVariable(name: "thread", arg: 1, scope: !16963, file: !14173, line: 160, type: !2389)
!16966 = !DILocation(line: 0, scope: !16963)
!16967 = !DILocation(line: 162, column: 15, scope: !16963)
!16968 = !DILocation(line: 162, column: 28, scope: !16963)
!16969 = !DILocation(line: 163, column: 1, scope: !16963)
!16970 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2496, file: !2496, line: 786, type: !15776, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !16971)
!16971 = !{!16972, !16973, !16975}
!16972 = !DILocalVariable(name: "thread", arg: 1, scope: !16970, file: !2496, line: 786, type: !2389)
!16973 = !DILocalVariable(name: "__i", scope: !16974, file: !2496, line: 788, type: !15810)
!16974 = distinct !DILexicalBlock(scope: !16970, file: !2496, line: 788, column: 2)
!16975 = !DILocalVariable(name: "__key", scope: !16974, file: !2496, line: 788, type: !15810)
!16976 = !DILocation(line: 0, scope: !16970)
!16977 = !DILocation(line: 0, scope: !16974)
!16978 = !DILocation(line: 0, scope: !15818, inlinedAt: !16979)
!16979 = distinct !DILocation(line: 788, column: 2, scope: !16974)
!16980 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16981)
!16981 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16979)
!16982 = !DILocation(line: 0, scope: !15827, inlinedAt: !16981)
!16983 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16979)
!16984 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16979)
!16985 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16979)
!16986 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16979)
!16987 = !DILocation(line: 789, column: 3, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16989, file: !2496, line: 788, column: 26)
!16989 = distinct !DILexicalBlock(scope: !16974, file: !2496, line: 788, column: 2)
!16990 = !DILocation(line: 0, scope: !15852, inlinedAt: !16991)
!16991 = distinct !DILocation(line: 788, column: 2, scope: !16989)
!16992 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !16991)
!16993 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16991)
!16994 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !16991)
!16995 = !DILocation(line: 0, scope: !15866, inlinedAt: !16996)
!16996 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !16991)
!16997 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !16996)
!16998 = !DILocation(line: 791, column: 1, scope: !16970)
!16999 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2496, file: !2496, line: 816, type: !17000, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17002)
!17000 = !DISubroutineType(types: !17001)
!17001 = !{!105, !113, !2420, !16749}
!17002 = !{!17003, !17004, !17005, !17006, !17007, !17009}
!17003 = !DILocalVariable(name: "key", arg: 1, scope: !16999, file: !2496, line: 816, type: !113)
!17004 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16999, file: !2496, line: 816, type: !2420)
!17005 = !DILocalVariable(name: "timeout", arg: 3, scope: !16999, file: !2496, line: 816, type: !16749)
!17006 = !DILocalVariable(name: "ret", scope: !16999, file: !2496, line: 828, type: !105)
!17007 = !DILocalVariable(name: "__i", scope: !17008, file: !2496, line: 829, type: !15810)
!17008 = distinct !DILexicalBlock(scope: !16999, file: !2496, line: 829, column: 2)
!17009 = !DILocalVariable(name: "__key", scope: !17008, file: !2496, line: 829, type: !15810)
!17010 = !DILocation(line: 0, scope: !16999)
!17011 = !DILocation(line: 823, column: 14, scope: !16999)
!17012 = !DILocation(line: 823, column: 2, scope: !16999)
!17013 = !DILocation(line: 826, column: 20, scope: !16999)
!17014 = !DILocation(line: 826, column: 18, scope: !16999)
!17015 = !DILocation(line: 828, column: 12, scope: !16999)
!17016 = !DILocation(line: 0, scope: !17008)
!17017 = !DILocation(line: 0, scope: !15818, inlinedAt: !17018)
!17018 = distinct !DILocation(line: 829, column: 2, scope: !17008)
!17019 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17020)
!17020 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17018)
!17021 = !DILocation(line: 0, scope: !15827, inlinedAt: !17020)
!17022 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17018)
!17023 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17018)
!17024 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17018)
!17025 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17018)
!17026 = !DILocation(line: 830, column: 7, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17028, file: !2496, line: 830, column: 7)
!17028 = distinct !DILexicalBlock(scope: !17029, file: !2496, line: 829, column: 26)
!17029 = distinct !DILexicalBlock(scope: !17008, file: !2496, line: 829, column: 2)
!17030 = !DILocation(line: 830, column: 26, scope: !17027)
!17031 = !DILocation(line: 830, column: 23, scope: !17027)
!17032 = !DILocation(line: 830, column: 7, scope: !17028)
!17033 = !DILocation(line: 831, column: 20, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17027, file: !2496, line: 830, column: 36)
!17035 = !DILocation(line: 832, column: 3, scope: !17034)
!17036 = !DILocation(line: 0, scope: !15852, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 829, column: 2, scope: !17029)
!17038 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17037)
!17039 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17037)
!17040 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17037)
!17041 = !DILocation(line: 0, scope: !15866, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17037)
!17043 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17042)
!17044 = !DILocation(line: 834, column: 2, scope: !16999)
!17045 = distinct !DISubprogram(name: "z_pend_curr", scope: !2496, file: !2496, line: 840, type: !17046, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17048)
!17046 = !DISubroutineType(types: !17047)
!17047 = !{!105, !15821, !15810, !2420, !16749}
!17048 = !{!17049, !17050, !17051, !17052}
!17049 = !DILocalVariable(name: "lock", arg: 1, scope: !17045, file: !2496, line: 840, type: !15821)
!17050 = !DILocalVariable(name: "key", arg: 2, scope: !17045, file: !2496, line: 840, type: !15810)
!17051 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17045, file: !2496, line: 841, type: !2420)
!17052 = !DILocalVariable(name: "timeout", arg: 4, scope: !17045, file: !2496, line: 841, type: !16749)
!17053 = !DILocation(line: 0, scope: !17045)
!17054 = !DILocation(line: 844, column: 20, scope: !17045)
!17055 = !DILocation(line: 844, column: 18, scope: !17045)
!17056 = !DILocation(line: 846, column: 2, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17058, file: !2496, line: 846, column: 2)
!17058 = distinct !DILexicalBlock(scope: !17045, file: !2496, line: 846, column: 2)
!17059 = !DILocation(line: 846, column: 2, scope: !17058)
!17060 = !DILocation(line: 846, column: 2, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17057, file: !2496, line: 846, column: 2)
!17062 = !DILocation(line: 0, scope: !15818, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 856, column: 9, scope: !17045)
!17064 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17065)
!17065 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17063)
!17066 = !DILocation(line: 0, scope: !15827, inlinedAt: !17065)
!17067 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17063)
!17068 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17063)
!17069 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17063)
!17070 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17063)
!17071 = !DILocation(line: 857, column: 14, scope: !17045)
!17072 = !DILocation(line: 857, column: 2, scope: !17045)
!17073 = !DILocation(line: 0, scope: !16548, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 858, column: 2, scope: !17045)
!17075 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !17074)
!17076 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17074)
!17077 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !17074)
!17078 = !DILocation(line: 0, scope: !16539, inlinedAt: !17079)
!17079 = distinct !DILocation(line: 859, column: 9, scope: !17045)
!17080 = !DILocation(line: 0, scope: !16548, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 195, column: 2, scope: !16539, inlinedAt: !17079)
!17082 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !17081)
!17083 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17081)
!17084 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !17081)
!17085 = !DILocation(line: 196, column: 9, scope: !16539, inlinedAt: !17079)
!17086 = !DILocation(line: 859, column: 2, scope: !17045)
!17087 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2496, file: !2496, line: 862, type: !17088, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17090)
!17088 = !DISubroutineType(types: !17089)
!17089 = !{!2389, !2420}
!17090 = !{!17091, !17092, !17093, !17095}
!17091 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17087, file: !2496, line: 862, type: !2420)
!17092 = !DILocalVariable(name: "thread", scope: !17087, file: !2496, line: 864, type: !2389)
!17093 = !DILocalVariable(name: "__i", scope: !17094, file: !2496, line: 866, type: !15810)
!17094 = distinct !DILexicalBlock(scope: !17087, file: !2496, line: 866, column: 2)
!17095 = !DILocalVariable(name: "__key", scope: !17094, file: !2496, line: 866, type: !15810)
!17096 = !DILocation(line: 0, scope: !17087)
!17097 = !DILocation(line: 0, scope: !17094)
!17098 = !DILocation(line: 0, scope: !15818, inlinedAt: !17099)
!17099 = distinct !DILocation(line: 866, column: 2, scope: !17094)
!17100 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17099)
!17102 = !DILocation(line: 0, scope: !15827, inlinedAt: !17101)
!17103 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17099)
!17104 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17099)
!17105 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17099)
!17106 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17099)
!17107 = !DILocation(line: 867, column: 12, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17109, file: !2496, line: 866, column: 26)
!17109 = distinct !DILexicalBlock(scope: !17094, file: !2496, line: 866, column: 2)
!17110 = !DILocation(line: 869, column: 14, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17108, file: !2496, line: 869, column: 7)
!17112 = !DILocation(line: 869, column: 7, scope: !17108)
!17113 = !DILocation(line: 870, column: 4, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17111, file: !2496, line: 869, column: 23)
!17115 = !DILocation(line: 871, column: 3, scope: !17114)
!17116 = !DILocation(line: 0, scope: !15852, inlinedAt: !17117)
!17117 = distinct !DILocation(line: 866, column: 2, scope: !17109)
!17118 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17117)
!17119 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17117)
!17120 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17117)
!17121 = !DILocation(line: 0, scope: !15866, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17117)
!17123 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17122)
!17124 = !DILocation(line: 874, column: 2, scope: !17087)
!17125 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2496, file: !2496, line: 877, type: !17088, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17126)
!17126 = !{!17127, !17128, !17129, !17131}
!17127 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17125, file: !2496, line: 877, type: !2420)
!17128 = !DILocalVariable(name: "thread", scope: !17125, file: !2496, line: 879, type: !2389)
!17129 = !DILocalVariable(name: "__i", scope: !17130, file: !2496, line: 881, type: !15810)
!17130 = distinct !DILexicalBlock(scope: !17125, file: !2496, line: 881, column: 2)
!17131 = !DILocalVariable(name: "__key", scope: !17130, file: !2496, line: 881, type: !15810)
!17132 = !DILocation(line: 0, scope: !17125)
!17133 = !DILocation(line: 0, scope: !17130)
!17134 = !DILocation(line: 0, scope: !15818, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 881, column: 2, scope: !17130)
!17136 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17135)
!17138 = !DILocation(line: 0, scope: !15827, inlinedAt: !17137)
!17139 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17135)
!17140 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17135)
!17141 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17135)
!17142 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17135)
!17143 = !DILocation(line: 882, column: 12, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17145, file: !2496, line: 881, column: 26)
!17145 = distinct !DILexicalBlock(scope: !17130, file: !2496, line: 881, column: 2)
!17146 = !DILocation(line: 884, column: 14, scope: !17147)
!17147 = distinct !DILexicalBlock(scope: !17144, file: !2496, line: 884, column: 7)
!17148 = !DILocation(line: 884, column: 7, scope: !17144)
!17149 = !DILocation(line: 885, column: 4, scope: !17150)
!17150 = distinct !DILexicalBlock(scope: !17147, file: !2496, line: 884, column: 23)
!17151 = !DILocation(line: 886, column: 10, scope: !17150)
!17152 = !DILocation(line: 887, column: 3, scope: !17150)
!17153 = !DILocation(line: 0, scope: !15852, inlinedAt: !17154)
!17154 = distinct !DILocation(line: 881, column: 2, scope: !17145)
!17155 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17154)
!17156 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17154)
!17157 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17154)
!17158 = !DILocation(line: 0, scope: !15866, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17154)
!17160 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17159)
!17161 = !DILocation(line: 890, column: 2, scope: !17125)
!17162 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2496, file: !2496, line: 893, type: !15776, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17163)
!17163 = !{!17164}
!17164 = !DILocalVariable(name: "thread", arg: 1, scope: !17162, file: !2496, line: 893, type: !2389)
!17165 = !DILocation(line: 0, scope: !17162)
!17166 = !DILocation(line: 0, scope: !16970, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 895, column: 2, scope: !17162)
!17168 = !DILocation(line: 0, scope: !16974, inlinedAt: !17167)
!17169 = !DILocation(line: 0, scope: !15818, inlinedAt: !17170)
!17170 = distinct !DILocation(line: 788, column: 2, scope: !16974, inlinedAt: !17167)
!17171 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17172)
!17172 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17170)
!17173 = !DILocation(line: 0, scope: !15827, inlinedAt: !17172)
!17174 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17170)
!17175 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17170)
!17176 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17170)
!17177 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17170)
!17178 = !DILocation(line: 789, column: 3, scope: !16988, inlinedAt: !17167)
!17179 = !DILocation(line: 0, scope: !15852, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 788, column: 2, scope: !16989, inlinedAt: !17167)
!17181 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17180)
!17182 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17180)
!17183 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17180)
!17184 = !DILocation(line: 0, scope: !15866, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17180)
!17186 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17185)
!17187 = !DILocation(line: 896, column: 8, scope: !17162)
!17188 = !DILocation(line: 897, column: 1, scope: !17162)
!17189 = distinct !DISubprogram(name: "z_set_prio", scope: !2496, file: !2496, line: 902, type: !16194, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17190)
!17190 = !{!17191, !17192, !17193, !17194, !17196}
!17191 = !DILocalVariable(name: "thread", arg: 1, scope: !17189, file: !2496, line: 902, type: !2389)
!17192 = !DILocalVariable(name: "prio", arg: 2, scope: !17189, file: !2496, line: 902, type: !105)
!17193 = !DILocalVariable(name: "need_sched", scope: !17189, file: !2496, line: 904, type: !492)
!17194 = !DILocalVariable(name: "__i", scope: !17195, file: !2496, line: 906, type: !15810)
!17195 = distinct !DILexicalBlock(scope: !17189, file: !2496, line: 906, column: 2)
!17196 = !DILocalVariable(name: "__key", scope: !17195, file: !2496, line: 906, type: !15810)
!17197 = !DILocation(line: 0, scope: !17189)
!17198 = !DILocation(line: 0, scope: !17195)
!17199 = !DILocation(line: 0, scope: !15818, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 906, column: 2, scope: !17195)
!17201 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17200)
!17203 = !DILocation(line: 0, scope: !15827, inlinedAt: !17202)
!17204 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17200)
!17205 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17200)
!17206 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17200)
!17207 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17200)
!17208 = !DILocation(line: 907, column: 16, scope: !17209)
!17209 = distinct !DILexicalBlock(scope: !17210, file: !2496, line: 906, column: 26)
!17210 = distinct !DILexicalBlock(scope: !17195, file: !2496, line: 906, column: 2)
!17211 = !DILocation(line: 909, column: 7, scope: !17209)
!17212 = !DILocation(line: 0, scope: !16010, inlinedAt: !17213)
!17213 = distinct !DILocation(line: 912, column: 5, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17215, file: !2496, line: 911, column: 63)
!17215 = distinct !DILexicalBlock(scope: !17216, file: !2496, line: 911, column: 8)
!17216 = distinct !DILexicalBlock(scope: !17217, file: !2496, line: 909, column: 19)
!17217 = distinct !DILexicalBlock(scope: !17209, file: !2496, line: 909, column: 7)
!17218 = !DILocation(line: 266, column: 28, scope: !16010, inlinedAt: !17213)
!17219 = !DILocation(line: 0, scope: !16018, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 268, column: 3, scope: !16022, inlinedAt: !17213)
!17221 = !DILocation(line: 234, column: 2, scope: !16018, inlinedAt: !17220)
!17222 = !DILocation(line: 913, column: 23, scope: !17214)
!17223 = !DILocation(line: 0, scope: !16027, inlinedAt: !17224)
!17224 = distinct !DILocation(line: 914, column: 5, scope: !17214)
!17225 = !DILocation(line: 252, column: 28, scope: !16027, inlinedAt: !17224)
!17226 = !DILocation(line: 0, scope: !16034, inlinedAt: !17227)
!17227 = distinct !DILocation(line: 254, column: 3, scope: !16038, inlinedAt: !17224)
!17228 = !DILocation(line: 0, scope: !16041, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 229, column: 2, scope: !16034, inlinedAt: !17227)
!17230 = !DILocation(line: 186, column: 2, scope: !16051, inlinedAt: !17229)
!17231 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !17229)
!17232 = !DILocation(line: 186, column: 2, scope: !16055, inlinedAt: !17229)
!17233 = !DILocation(line: 188, column: 2, scope: !16057, inlinedAt: !17229)
!17234 = !DILocation(line: 188, column: 2, scope: !16059, inlinedAt: !17229)
!17235 = !DILocation(line: 0, scope: !16057, inlinedAt: !17229)
!17236 = !DILocation(line: 189, column: 7, scope: !16062, inlinedAt: !17229)
!17237 = !DILocation(line: 189, column: 35, scope: !16062, inlinedAt: !17229)
!17238 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !17229)
!17239 = !DILocation(line: 190, column: 4, scope: !16067, inlinedAt: !17229)
!17240 = !DILocation(line: 192, column: 4, scope: !16067, inlinedAt: !17229)
!17241 = distinct !{!17241, !17233, !17242}
!17242 = !DILocation(line: 194, column: 2, scope: !16057, inlinedAt: !17229)
!17243 = !DILocation(line: 196, column: 2, scope: !16041, inlinedAt: !17229)
!17244 = !DILocation(line: 197, column: 1, scope: !16041, inlinedAt: !17229)
!17245 = !DILocation(line: 918, column: 4, scope: !17216)
!17246 = !DILocation(line: 919, column: 3, scope: !17216)
!17247 = !DILocation(line: 920, column: 22, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17217, file: !2496, line: 919, column: 10)
!17249 = !DILocation(line: 0, scope: !15852, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 906, column: 2, scope: !17210)
!17251 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17250)
!17252 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17250)
!17253 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17250)
!17254 = !DILocation(line: 0, scope: !15866, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17250)
!17256 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17255)
!17257 = !DILocation(line: 926, column: 2, scope: !17189)
!17258 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2496, file: !2496, line: 929, type: !17259, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17261)
!17259 = !DISubroutineType(types: !17260)
!17260 = !{null, !2389, !105}
!17261 = !{!17262, !17263, !17264}
!17262 = !DILocalVariable(name: "thread", arg: 1, scope: !17258, file: !2496, line: 929, type: !2389)
!17263 = !DILocalVariable(name: "prio", arg: 2, scope: !17258, file: !2496, line: 929, type: !105)
!17264 = !DILocalVariable(name: "need_sched", scope: !17258, file: !2496, line: 931, type: !492)
!17265 = !DILocation(line: 0, scope: !17258)
!17266 = !DILocation(line: 931, column: 20, scope: !17258)
!17267 = !DILocation(line: 935, column: 17, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17258, file: !2496, line: 935, column: 6)
!17269 = !DILocation(line: 935, column: 20, scope: !17268)
!17270 = !DILocation(line: 935, column: 35, scope: !17268)
!17271 = !DILocation(line: 935, column: 48, scope: !17268)
!17272 = !DILocation(line: 935, column: 6, scope: !17258)
!17273 = !DILocation(line: 936, column: 3, scope: !17274)
!17274 = distinct !DILexicalBlock(scope: !17268, file: !2496, line: 935, column: 55)
!17275 = !DILocation(line: 937, column: 2, scope: !17274)
!17276 = !DILocation(line: 938, column: 1, scope: !17258)
!17277 = distinct !DISubprogram(name: "k_sched_lock", scope: !2496, file: !2496, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17278)
!17278 = !{!17279, !17281}
!17279 = !DILocalVariable(name: "__i", scope: !17280, file: !2496, line: 989, type: !15810)
!17280 = distinct !DILexicalBlock(scope: !17277, file: !2496, line: 989, column: 2)
!17281 = !DILocalVariable(name: "__key", scope: !17280, file: !2496, line: 989, type: !15810)
!17282 = !DILocation(line: 0, scope: !17280)
!17283 = !DILocation(line: 0, scope: !15818, inlinedAt: !17284)
!17284 = distinct !DILocation(line: 989, column: 2, scope: !17280)
!17285 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17284)
!17287 = !DILocation(line: 0, scope: !15827, inlinedAt: !17286)
!17288 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17284)
!17289 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17284)
!17290 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17284)
!17291 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17284)
!17292 = !DILocation(line: 992, column: 3, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17294, file: !2496, line: 989, column: 26)
!17294 = distinct !DILexicalBlock(scope: !17280, file: !2496, line: 989, column: 2)
!17295 = !DILocation(line: 0, scope: !15852, inlinedAt: !17296)
!17296 = distinct !DILocation(line: 989, column: 2, scope: !17294)
!17297 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17296)
!17298 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17296)
!17299 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17296)
!17300 = !DILocation(line: 0, scope: !15866, inlinedAt: !17301)
!17301 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17296)
!17302 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17301)
!17303 = !DILocation(line: 994, column: 1, scope: !17277)
!17304 = distinct !DISubprogram(name: "z_sched_lock", scope: !14173, file: !14173, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17305 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 253, column: 2, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !14173, line: 253, column: 2)
!17309 = distinct !DILexicalBlock(scope: !17304, file: !14173, line: 253, column: 2)
!17310 = !DILocation(line: 0, scope: !16588, inlinedAt: !17306)
!17311 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17307)
!17312 = !DILocation(line: 253, column: 2, scope: !17309)
!17313 = !DILocation(line: 253, column: 2, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17308, file: !14173, line: 253, column: 2)
!17315 = !DILocation(line: 254, column: 2, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17317, file: !14173, line: 254, column: 2)
!17317 = distinct !DILexicalBlock(scope: !17304, file: !14173, line: 254, column: 2)
!17318 = !DILocation(line: 254, column: 2, scope: !17317)
!17319 = !DILocation(line: 254, column: 2, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17316, file: !14173, line: 254, column: 2)
!17321 = !DILocation(line: 256, column: 2, scope: !17304)
!17322 = !DILocation(line: 258, column: 2, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17304, file: !14173, line: 258, column: 2)
!17324 = !{i64 2154976627}
!17325 = !DILocation(line: 259, column: 1, scope: !17304)
!17326 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2496, file: !2496, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17327)
!17327 = !{!17328, !17330}
!17328 = !DILocalVariable(name: "__i", scope: !17329, file: !2496, line: 998, type: !15810)
!17329 = distinct !DILexicalBlock(scope: !17326, file: !2496, line: 998, column: 2)
!17330 = !DILocalVariable(name: "__key", scope: !17329, file: !2496, line: 998, type: !15810)
!17331 = !DILocation(line: 0, scope: !17329)
!17332 = !DILocation(line: 0, scope: !15818, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 998, column: 2, scope: !17329)
!17334 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17335)
!17335 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17333)
!17336 = !DILocation(line: 0, scope: !15827, inlinedAt: !17335)
!17337 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17333)
!17338 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17333)
!17339 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17333)
!17340 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17333)
!17341 = !DILocation(line: 999, column: 3, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17343, file: !2496, line: 999, column: 3)
!17343 = distinct !DILexicalBlock(scope: !17344, file: !2496, line: 999, column: 3)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !2496, line: 998, column: 26)
!17345 = distinct !DILexicalBlock(scope: !17329, file: !2496, line: 998, column: 2)
!17346 = !DILocation(line: 999, column: 3, scope: !17343)
!17347 = !DILocation(line: 999, column: 3, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17342, file: !2496, line: 999, column: 3)
!17349 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17350)
!17350 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17351)
!17351 = distinct !DILocation(line: 1000, column: 3, scope: !17352)
!17352 = distinct !DILexicalBlock(scope: !17353, file: !2496, line: 1000, column: 3)
!17353 = distinct !DILexicalBlock(scope: !17344, file: !2496, line: 1000, column: 3)
!17354 = !DILocation(line: 0, scope: !16588, inlinedAt: !17350)
!17355 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17351)
!17356 = !DILocation(line: 1000, column: 3, scope: !17353)
!17357 = !DILocation(line: 1000, column: 3, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17352, file: !2496, line: 1000, column: 3)
!17359 = !DILocation(line: 1002, column: 5, scope: !17344)
!17360 = !DILocation(line: 1002, column: 20, scope: !17344)
!17361 = !DILocation(line: 1002, column: 3, scope: !17344)
!17362 = !DILocation(line: 1003, column: 3, scope: !17344)
!17363 = !DILocation(line: 0, scope: !15852, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 998, column: 2, scope: !17345)
!17365 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17364)
!17366 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17364)
!17367 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17364)
!17368 = !DILocation(line: 0, scope: !15866, inlinedAt: !17369)
!17369 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17364)
!17370 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17369)
!17371 = !DILocation(line: 1011, column: 2, scope: !17326)
!17372 = !DILocation(line: 1012, column: 1, scope: !17326)
!17373 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2496, file: !2496, line: 1014, type: !16167, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17374 = !DILocation(line: 1028, column: 25, scope: !17373)
!17375 = !DILocation(line: 1028, column: 2, scope: !17373)
!17376 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2496, file: !2496, line: 1155, type: !17377, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17379)
!17377 = !DISubroutineType(types: !17378)
!17378 = !{!492, !2418, !2418}
!17379 = !{!17380, !17381, !17382, !17383, !17384}
!17380 = !DILocalVariable(name: "a", arg: 1, scope: !17376, file: !2496, line: 1155, type: !2418)
!17381 = !DILocalVariable(name: "b", arg: 2, scope: !17376, file: !2496, line: 1155, type: !2418)
!17382 = !DILocalVariable(name: "thread_a", scope: !17376, file: !2496, line: 1157, type: !2389)
!17383 = !DILocalVariable(name: "thread_b", scope: !17376, file: !2496, line: 1157, type: !2389)
!17384 = !DILocalVariable(name: "cmp", scope: !17376, file: !2496, line: 1158, type: !116)
!17385 = !DILocation(line: 0, scope: !17376)
!17386 = !DILocation(line: 1160, column: 13, scope: !17376)
!17387 = !DILocation(line: 1161, column: 13, scope: !17376)
!17388 = !DILocation(line: 1163, column: 8, scope: !17376)
!17389 = !DILocation(line: 1165, column: 10, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !17376, file: !2496, line: 1165, column: 6)
!17391 = !DILocation(line: 1165, column: 6, scope: !17376)
!17392 = !DILocation(line: 1167, column: 17, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17390, file: !2496, line: 1167, column: 13)
!17394 = !DILocation(line: 1167, column: 13, scope: !17390)
!17395 = !DILocation(line: 1170, column: 25, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17393, file: !2496, line: 1169, column: 9)
!17397 = !DILocation(line: 1170, column: 52, scope: !17396)
!17398 = !DILocation(line: 1170, column: 35, scope: !17396)
!17399 = !DILocation(line: 1170, column: 3, scope: !17396)
!17400 = !DILocation(line: 0, scope: !17390)
!17401 = !DILocation(line: 1173, column: 1, scope: !17376)
!17402 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2496, file: !2496, line: 1175, type: !17403, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17418)
!17403 = !DISubroutineType(types: !17404)
!17404 = !{null, !17405, !2389}
!17405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17406, size: 32)
!17406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17407, line: 37, size: 128, elements: !17408)
!17407 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17408 = !{!17409, !17417}
!17409 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17406, file: !17407, line: 38, baseType: !17410, size: 96)
!17410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !17411)
!17411 = !{!17412, !17413, !17416}
!17412 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17410, file: !153, line: 84, baseType: !2418, size: 32)
!17413 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17410, file: !153, line: 85, baseType: !17414, size: 32, offset: 32)
!17414 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !17415)
!17415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17377, size: 32)
!17416 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17410, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!17417 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17406, file: !17407, line: 39, baseType: !105, size: 32, offset: 96)
!17418 = !{!17419, !17420, !17421, !17422, !17431}
!17419 = !DILocalVariable(name: "pq", arg: 1, scope: !17402, file: !2496, line: 1175, type: !17405)
!17420 = !DILocalVariable(name: "thread", arg: 2, scope: !17402, file: !2496, line: 1175, type: !2389)
!17421 = !DILocalVariable(name: "t", scope: !17402, file: !2496, line: 1177, type: !2389)
!17422 = !DILocalVariable(name: "__f", scope: !17423, file: !2496, line: 1190, type: !17426)
!17423 = distinct !DILexicalBlock(scope: !17424, file: !2496, line: 1190, column: 3)
!17424 = distinct !DILexicalBlock(scope: !17425, file: !2496, line: 1189, column: 27)
!17425 = distinct !DILexicalBlock(scope: !17402, file: !2496, line: 1189, column: 6)
!17426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !17427)
!17427 = !{!17428, !17429, !17430}
!17428 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17426, file: !153, line: 156, baseType: !2491, size: 32)
!17429 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17426, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!17430 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17426, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!17431 = !DILocalVariable(name: "n", scope: !17432, file: !2496, line: 1190, type: !2418)
!17432 = distinct !DILexicalBlock(scope: !17433, file: !2496, line: 1190, column: 3)
!17433 = distinct !DILexicalBlock(scope: !17423, file: !2496, line: 1190, column: 3)
!17434 = !DILocation(line: 0, scope: !17402)
!17435 = !DILocation(line: 1179, column: 2, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17437, file: !2496, line: 1179, column: 2)
!17437 = distinct !DILexicalBlock(scope: !17402, file: !2496, line: 1179, column: 2)
!17438 = !DILocation(line: 1179, column: 2, scope: !17437)
!17439 = !DILocation(line: 1179, column: 2, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17436, file: !2496, line: 1179, column: 2)
!17441 = !DILocation(line: 1181, column: 31, scope: !17402)
!17442 = !DILocation(line: 1181, column: 45, scope: !17402)
!17443 = !DILocation(line: 1181, column: 15, scope: !17402)
!17444 = !DILocation(line: 1181, column: 25, scope: !17402)
!17445 = !DILocation(line: 1189, column: 11, scope: !17425)
!17446 = !DILocation(line: 1189, column: 7, scope: !17425)
!17447 = !DILocation(line: 1189, column: 6, scope: !17402)
!17448 = !DILocation(line: 1190, column: 3, scope: !17423)
!17449 = !DILocation(line: 1190, column: 3, scope: !17432)
!17450 = !DILocation(line: 0, scope: !17432)
!17451 = !DILocation(line: 1190, column: 3, scope: !17433)
!17452 = !DILocation(line: 1193, column: 2, scope: !17424)
!17453 = !DILocation(line: 1191, column: 42, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17433, file: !2496, line: 1190, column: 54)
!17455 = !DILocation(line: 1191, column: 12, scope: !17454)
!17456 = !DILocation(line: 1191, column: 22, scope: !17454)
!17457 = distinct !{!17457, !17448, !17458}
!17458 = !DILocation(line: 1192, column: 3, scope: !17423)
!17459 = !DILocation(line: 1195, column: 17, scope: !17402)
!17460 = !DILocation(line: 1195, column: 37, scope: !17402)
!17461 = !DILocation(line: 1195, column: 2, scope: !17402)
!17462 = !DILocation(line: 1196, column: 1, scope: !17402)
!17463 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !17464, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17464 = !DISubroutineType(types: !17465)
!17465 = !{!2418, !17466, !17467}
!17466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17410, size: 32)
!17467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17426, size: 32)
!17468 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !17469, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17469 = !DISubroutineType(types: !17470)
!17470 = !{null, !17466, !2418}
!17471 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2496, file: !2496, line: 1198, type: !17403, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17472)
!17472 = !{!17473, !17474}
!17473 = !DILocalVariable(name: "pq", arg: 1, scope: !17471, file: !2496, line: 1198, type: !17405)
!17474 = !DILocalVariable(name: "thread", arg: 2, scope: !17471, file: !2496, line: 1198, type: !2389)
!17475 = !DILocation(line: 0, scope: !17471)
!17476 = !DILocation(line: 1200, column: 2, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17478, file: !2496, line: 1200, column: 2)
!17478 = distinct !DILexicalBlock(scope: !17471, file: !2496, line: 1200, column: 2)
!17479 = !DILocation(line: 1200, column: 2, scope: !17478)
!17480 = !DILocation(line: 1200, column: 2, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17477, file: !2496, line: 1200, column: 2)
!17482 = !DILocation(line: 1202, column: 17, scope: !17471)
!17483 = !DILocation(line: 1202, column: 37, scope: !17471)
!17484 = !DILocation(line: 1202, column: 2, scope: !17471)
!17485 = !DILocation(line: 1204, column: 16, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17471, file: !2496, line: 1204, column: 6)
!17487 = !DILocation(line: 1204, column: 7, scope: !17486)
!17488 = !DILocation(line: 1204, column: 6, scope: !17471)
!17489 = !DILocation(line: 1205, column: 7, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17486, file: !2496, line: 1204, column: 22)
!17491 = !DILocation(line: 1205, column: 22, scope: !17490)
!17492 = !DILocation(line: 1206, column: 2, scope: !17490)
!17493 = !DILocation(line: 1207, column: 1, scope: !17471)
!17494 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !17469, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17495 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2496, file: !2496, line: 1209, type: !17496, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17498)
!17496 = !DISubroutineType(types: !17497)
!17497 = !{!2389, !17405}
!17498 = !{!17499, !17500, !17501}
!17499 = !DILocalVariable(name: "pq", arg: 1, scope: !17495, file: !2496, line: 1209, type: !17405)
!17500 = !DILocalVariable(name: "thread", scope: !17495, file: !2496, line: 1211, type: !2389)
!17501 = !DILocalVariable(name: "n", scope: !17495, file: !2496, line: 1212, type: !2418)
!17502 = !DILocation(line: 0, scope: !17495)
!17503 = !DILocation(line: 1212, column: 37, scope: !17495)
!17504 = !DILocation(line: 1212, column: 21, scope: !17495)
!17505 = !DILocation(line: 1217, column: 2, scope: !17495)
!17506 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !17507, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17509)
!17507 = !DISubroutineType(types: !17508)
!17508 = !{!2418, !17466}
!17509 = !{!17510}
!17510 = !DILocalVariable(name: "tree", arg: 1, scope: !17506, file: !153, line: 115, type: !17466)
!17511 = !DILocation(line: 0, scope: !17506)
!17512 = !DILocation(line: 117, column: 9, scope: !17506)
!17513 = !DILocation(line: 117, column: 2, scope: !17506)
!17514 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !17515, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17515 = !DISubroutineType(types: !17516)
!17516 = !{!2418, !17466, !169}
!17517 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2496, file: !2496, line: 1246, type: !17518, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17528)
!17518 = !DISubroutineType(types: !17519)
!17519 = !{!2389, !17520}
!17520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17521, size: 32)
!17521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17407, line: 53, size: 2080, elements: !17522)
!17522 = !{!17523, !17527}
!17523 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17521, file: !17407, line: 54, baseType: !17524, size: 2048)
!17524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2425, size: 2048, elements: !17525)
!17525 = !{!17526}
!17526 = !DISubrange(count: 32)
!17527 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17521, file: !17407, line: 55, baseType: !32, size: 32, offset: 2048)
!17528 = !{!17529, !17530, !17531, !17532}
!17529 = !DILocalVariable(name: "pq", arg: 1, scope: !17517, file: !2496, line: 1246, type: !17520)
!17530 = !DILocalVariable(name: "thread", scope: !17517, file: !2496, line: 1252, type: !2389)
!17531 = !DILocalVariable(name: "l", scope: !17517, file: !2496, line: 1253, type: !16044)
!17532 = !DILocalVariable(name: "n", scope: !17517, file: !2496, line: 1254, type: !2492)
!17533 = !DILocation(line: 0, scope: !17517)
!17534 = !DILocation(line: 1248, column: 11, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17517, file: !2496, line: 1248, column: 6)
!17536 = !DILocation(line: 1248, column: 7, scope: !17535)
!17537 = !DILocation(line: 1248, column: 6, scope: !17517)
!17538 = !DILocation(line: 1253, column: 31, scope: !17517)
!17539 = !DILocation(line: 1253, column: 20, scope: !17517)
!17540 = !DILocation(line: 1254, column: 19, scope: !17517)
!17541 = !DILocation(line: 1260, column: 1, scope: !17517)
!17542 = distinct !DISubprogram(name: "z_unpend_all", scope: !2496, file: !2496, line: 1262, type: !17543, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17545)
!17543 = !DISubroutineType(types: !17544)
!17544 = !{!105, !2420}
!17545 = !{!17546, !17547, !17548}
!17546 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17542, file: !2496, line: 1262, type: !2420)
!17547 = !DILocalVariable(name: "need_sched", scope: !17542, file: !2496, line: 1264, type: !105)
!17548 = !DILocalVariable(name: "thread", scope: !17542, file: !2496, line: 1265, type: !2389)
!17549 = !DILocation(line: 0, scope: !17542)
!17550 = !DILocation(line: 1267, column: 19, scope: !17542)
!17551 = !DILocation(line: 1267, column: 41, scope: !17542)
!17552 = !DILocation(line: 1267, column: 2, scope: !17542)
!17553 = !DILocation(line: 1268, column: 3, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17542, file: !2496, line: 1267, column: 50)
!17555 = !DILocation(line: 1269, column: 3, scope: !17554)
!17556 = distinct !{!17556, !17552, !17557}
!17557 = !DILocation(line: 1271, column: 2, scope: !17542)
!17558 = !DILocation(line: 1273, column: 2, scope: !17542)
!17559 = distinct !DISubprogram(name: "z_waitq_head", scope: !14534, file: !14534, line: 52, type: !17088, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17560)
!17560 = !{!17561}
!17561 = !DILocalVariable(name: "w", arg: 1, scope: !17559, file: !14534, line: 52, type: !2420)
!17562 = !DILocation(line: 0, scope: !17559)
!17563 = !DILocation(line: 54, column: 52, scope: !17559)
!17564 = !DILocation(line: 54, column: 28, scope: !17559)
!17565 = !DILocation(line: 54, column: 9, scope: !17559)
!17566 = !DILocation(line: 54, column: 2, scope: !17559)
!17567 = distinct !DISubprogram(name: "init_ready_q", scope: !2496, file: !2496, line: 1276, type: !17568, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17575)
!17568 = !DISubroutineType(types: !17569)
!17569 = !{null, !17570}
!17570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17571, size: 32)
!17571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !17572)
!17572 = !{!17573, !17574}
!17573 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17571, file: !163, line: 86, baseType: !2389, size: 32)
!17574 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17571, file: !163, line: 90, baseType: !2425, size: 64, offset: 32)
!17575 = !{!17576}
!17576 = !DILocalVariable(name: "rq", arg: 1, scope: !17567, file: !2496, line: 1276, type: !17570)
!17577 = !DILocation(line: 0, scope: !17567)
!17578 = !DILocation(line: 1289, column: 22, scope: !17567)
!17579 = !DILocation(line: 1289, column: 2, scope: !17567)
!17580 = !DILocation(line: 1291, column: 1, scope: !17567)
!17581 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !17582, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17584)
!17582 = !DISubroutineType(types: !17583)
!17583 = !{null, !16044}
!17584 = !{!17585}
!17585 = !DILocalVariable(name: "list", arg: 1, scope: !17581, file: !137, line: 197, type: !16044)
!17586 = !DILocation(line: 0, scope: !17581)
!17587 = !DILocation(line: 199, column: 8, scope: !17581)
!17588 = !DILocation(line: 199, column: 13, scope: !17581)
!17589 = !DILocation(line: 200, column: 8, scope: !17581)
!17590 = !DILocation(line: 200, column: 13, scope: !17581)
!17591 = !DILocation(line: 201, column: 1, scope: !17581)
!17592 = distinct !DISubprogram(name: "z_sched_init", scope: !2496, file: !2496, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17593 = !DILocation(line: 1302, column: 2, scope: !17592)
!17594 = !DILocation(line: 1306, column: 2, scope: !17592)
!17595 = !DILocation(line: 1309, column: 1, scope: !17592)
!17596 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2496, file: !2496, line: 1311, type: !17597, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17600)
!17597 = !DISubroutineType(types: !17598)
!17598 = !{!105, !17599}
!17599 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2389)
!17600 = !{!17601}
!17601 = !DILocalVariable(name: "thread", arg: 1, scope: !17596, file: !2496, line: 1311, type: !17599)
!17602 = !DILocation(line: 0, scope: !17596)
!17603 = !DILocation(line: 1313, column: 22, scope: !17596)
!17604 = !DILocation(line: 1313, column: 9, scope: !17596)
!17605 = !DILocation(line: 1313, column: 2, scope: !17596)
!17606 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2496, file: !2496, line: 1325, type: !17607, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17609)
!17607 = !DISubroutineType(types: !17608)
!17608 = !{null, !17599, !105}
!17609 = !{!17610, !17611, !17612}
!17610 = !DILocalVariable(name: "thread", arg: 1, scope: !17606, file: !2496, line: 1325, type: !17599)
!17611 = !DILocalVariable(name: "prio", arg: 2, scope: !17606, file: !2496, line: 1325, type: !105)
!17612 = !DILocalVariable(name: "th", scope: !17606, file: !2496, line: 1334, type: !2389)
!17613 = !DILocation(line: 0, scope: !17606)
!17614 = !DILocation(line: 1331, column: 2, scope: !17615)
!17615 = distinct !DILexicalBlock(scope: !17616, file: !2496, line: 1331, column: 2)
!17616 = distinct !DILexicalBlock(scope: !17617, file: !2496, line: 1331, column: 2)
!17617 = distinct !DILexicalBlock(scope: !17606, file: !2496, line: 1331, column: 2)
!17618 = !DILocation(line: 1331, column: 2, scope: !17619)
!17619 = distinct !DILexicalBlock(scope: !17615, file: !2496, line: 1331, column: 2)
!17620 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17621)
!17621 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17622)
!17622 = distinct !DILocation(line: 1332, column: 2, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17624, file: !2496, line: 1332, column: 2)
!17624 = distinct !DILexicalBlock(scope: !17606, file: !2496, line: 1332, column: 2)
!17625 = !DILocation(line: 0, scope: !16588, inlinedAt: !17621)
!17626 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17622)
!17627 = !DILocation(line: 1332, column: 2, scope: !17624)
!17628 = !DILocation(line: 1332, column: 2, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17623, file: !2496, line: 1332, column: 2)
!17630 = !DILocation(line: 1336, column: 2, scope: !17606)
!17631 = !DILocation(line: 1337, column: 1, scope: !17606)
!17632 = distinct !DISubprogram(name: "k_can_yield", scope: !2496, file: !2496, line: 1384, type: !8833, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17633 = !DILocation(line: 1386, column: 11, scope: !17632)
!17634 = !DILocation(line: 1386, column: 29, scope: !17632)
!17635 = !DILocation(line: 1386, column: 32, scope: !17632)
!17636 = !DILocation(line: 1386, column: 46, scope: !17632)
!17637 = !DILocation(line: 1387, column: 28, scope: !17632)
!17638 = !DILocation(line: 1387, column: 4, scope: !17632)
!17639 = !DILocation(line: 1386, column: 2, scope: !17632)
!17640 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8833, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17641 = !DILocation(line: 993, column: 10, scope: !17640)
!17642 = !DILocation(line: 993, column: 2, scope: !17640)
!17643 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2496, file: !2496, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17644)
!17644 = !{!17645}
!17645 = !DILocalVariable(name: "key", scope: !17643, file: !2496, line: 1396, type: !15810)
!17646 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17647)
!17647 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17648)
!17648 = distinct !DILocation(line: 1392, column: 2, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17650, file: !2496, line: 1392, column: 2)
!17650 = distinct !DILexicalBlock(scope: !17643, file: !2496, line: 1392, column: 2)
!17651 = !DILocation(line: 0, scope: !16588, inlinedAt: !17647)
!17652 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17648)
!17653 = !DILocation(line: 1392, column: 2, scope: !17650)
!17654 = !DILocation(line: 1392, column: 2, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17649, file: !2496, line: 1392, column: 2)
!17656 = !DILocation(line: 0, scope: !15818, inlinedAt: !17657)
!17657 = distinct !DILocation(line: 1396, column: 25, scope: !17643)
!17658 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17657)
!17660 = !DILocation(line: 0, scope: !15827, inlinedAt: !17659)
!17661 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17657)
!17662 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17657)
!17663 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17657)
!17664 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17657)
!17665 = !DILocation(line: 0, scope: !17643)
!17666 = !DILocation(line: 1400, column: 18, scope: !17667)
!17667 = distinct !DILexicalBlock(scope: !17668, file: !2496, line: 1399, column: 36)
!17668 = distinct !DILexicalBlock(scope: !17643, file: !2496, line: 1398, column: 6)
!17669 = !DILocation(line: 0, scope: !16010, inlinedAt: !17670)
!17670 = distinct !DILocation(line: 1400, column: 3, scope: !17667)
!17671 = !DILocation(line: 266, column: 15, scope: !16010, inlinedAt: !17670)
!17672 = !DILocation(line: 266, column: 28, scope: !16010, inlinedAt: !17670)
!17673 = !DILocation(line: 0, scope: !16018, inlinedAt: !17674)
!17674 = distinct !DILocation(line: 268, column: 3, scope: !16022, inlinedAt: !17670)
!17675 = !DILocation(line: 234, column: 2, scope: !16018, inlinedAt: !17674)
!17676 = !DILocation(line: 1402, column: 15, scope: !17643)
!17677 = !DILocation(line: 0, scope: !16027, inlinedAt: !17678)
!17678 = distinct !DILocation(line: 1402, column: 2, scope: !17643)
!17679 = !DILocation(line: 252, column: 15, scope: !16027, inlinedAt: !17678)
!17680 = !DILocation(line: 252, column: 28, scope: !16027, inlinedAt: !17678)
!17681 = !DILocation(line: 0, scope: !16034, inlinedAt: !17682)
!17682 = distinct !DILocation(line: 254, column: 3, scope: !16038, inlinedAt: !17678)
!17683 = !DILocation(line: 0, scope: !16041, inlinedAt: !17684)
!17684 = distinct !DILocation(line: 229, column: 2, scope: !16034, inlinedAt: !17682)
!17685 = !DILocation(line: 186, column: 2, scope: !16051, inlinedAt: !17684)
!17686 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !17684)
!17687 = !DILocation(line: 186, column: 2, scope: !16055, inlinedAt: !17684)
!17688 = !DILocation(line: 188, column: 2, scope: !16057, inlinedAt: !17684)
!17689 = !DILocation(line: 188, column: 2, scope: !16059, inlinedAt: !17684)
!17690 = !DILocation(line: 0, scope: !16057, inlinedAt: !17684)
!17691 = !DILocation(line: 189, column: 7, scope: !16062, inlinedAt: !17684)
!17692 = !DILocation(line: 189, column: 35, scope: !16062, inlinedAt: !17684)
!17693 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !17684)
!17694 = !DILocation(line: 191, column: 21, scope: !16067, inlinedAt: !17684)
!17695 = !DILocation(line: 190, column: 4, scope: !16067, inlinedAt: !17684)
!17696 = !DILocation(line: 192, column: 4, scope: !16067, inlinedAt: !17684)
!17697 = distinct !{!17697, !17688, !17698}
!17698 = !DILocation(line: 194, column: 2, scope: !16057, inlinedAt: !17684)
!17699 = !DILocation(line: 196, column: 37, scope: !16041, inlinedAt: !17684)
!17700 = !DILocation(line: 196, column: 2, scope: !16041, inlinedAt: !17684)
!17701 = !DILocation(line: 197, column: 1, scope: !16041, inlinedAt: !17684)
!17702 = !DILocation(line: 1403, column: 2, scope: !17643)
!17703 = !DILocation(line: 0, scope: !16539, inlinedAt: !17704)
!17704 = distinct !DILocation(line: 1404, column: 2, scope: !17643)
!17705 = !DILocation(line: 0, scope: !16548, inlinedAt: !17706)
!17706 = distinct !DILocation(line: 195, column: 2, scope: !16539, inlinedAt: !17704)
!17707 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !17706)
!17708 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17706)
!17709 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !17706)
!17710 = !DILocation(line: 196, column: 9, scope: !16539, inlinedAt: !17704)
!17711 = !DILocation(line: 1405, column: 1, scope: !17643)
!17712 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2496, file: !2496, line: 1459, type: !17713, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17715)
!17713 = !DISubroutineType(types: !17714)
!17714 = !{!116, !16749}
!17715 = !{!17716, !17717, !17718}
!17716 = !DILocalVariable(name: "timeout", arg: 1, scope: !17712, file: !2496, line: 1459, type: !16749)
!17717 = !DILocalVariable(name: "ticks", scope: !17712, file: !2496, line: 1461, type: !107)
!17718 = !DILocalVariable(name: "ret", scope: !17712, file: !2496, line: 1480, type: !116)
!17719 = !DILocation(line: 0, scope: !17712)
!17720 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17721)
!17721 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17722)
!17722 = distinct !DILocation(line: 1463, column: 2, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17724, file: !2496, line: 1463, column: 2)
!17724 = distinct !DILexicalBlock(scope: !17712, file: !2496, line: 1463, column: 2)
!17725 = !DILocation(line: 0, scope: !16588, inlinedAt: !17721)
!17726 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17722)
!17727 = !DILocation(line: 1463, column: 2, scope: !17724)
!17728 = !DILocation(line: 1463, column: 2, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17723, file: !2496, line: 1463, column: 2)
!17730 = !DILocation(line: 1468, column: 6, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17712, file: !2496, line: 1468, column: 6)
!17732 = !DILocation(line: 1468, column: 6, scope: !17712)
!17733 = !DILocation(line: 1469, column: 20, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17731, file: !2496, line: 1468, column: 40)
!17735 = !DILocation(line: 1469, column: 3, scope: !17734)
!17736 = !DILocation(line: 1473, column: 3, scope: !17734)
!17737 = !DILocation(line: 1478, column: 10, scope: !17712)
!17738 = !DILocation(line: 1480, column: 16, scope: !17712)
!17739 = !DILocation(line: 1485, column: 1, scope: !17712)
!17740 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3438, file: !3438, line: 310, type: !17741, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17743)
!17741 = !DISubroutineType(types: !17742)
!17742 = !{null, !17599}
!17743 = !{!17744}
!17744 = !DILocalVariable(name: "thread", arg: 1, scope: !17740, file: !3438, line: 310, type: !17599)
!17745 = !DILocation(line: 0, scope: !17740)
!17746 = !DILocation(line: 319, column: 2, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17740, file: !3438, line: 319, column: 2)
!17748 = !{i64 2154892783}
!17749 = !DILocation(line: 320, column: 2, scope: !17740)
!17750 = !DILocation(line: 321, column: 1, scope: !17740)
!17751 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2496, file: !2496, line: 1415, type: !17752, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17754)
!17752 = !DISubroutineType(types: !17753)
!17753 = !{!116, !107}
!17754 = !{!17755, !17756, !17757, !17758}
!17755 = !DILocalVariable(name: "ticks", arg: 1, scope: !17751, file: !2496, line: 1415, type: !107)
!17756 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17751, file: !2496, line: 1418, type: !113)
!17757 = !DILocalVariable(name: "timeout", scope: !17751, file: !2496, line: 1430, type: !16749)
!17758 = !DILocalVariable(name: "key", scope: !17751, file: !2496, line: 1437, type: !15810)
!17759 = !DILocation(line: 0, scope: !17751)
!17760 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17761)
!17761 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17762)
!17762 = distinct !DILocation(line: 1420, column: 2, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17764, file: !2496, line: 1420, column: 2)
!17764 = distinct !DILexicalBlock(scope: !17751, file: !2496, line: 1420, column: 2)
!17765 = !DILocation(line: 0, scope: !16588, inlinedAt: !17761)
!17766 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17762)
!17767 = !DILocation(line: 1420, column: 2, scope: !17764)
!17768 = !DILocation(line: 1420, column: 2, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17763, file: !2496, line: 1420, column: 2)
!17770 = !DILocation(line: 1425, column: 12, scope: !17771)
!17771 = distinct !DILexicalBlock(scope: !17751, file: !2496, line: 1425, column: 6)
!17772 = !DILocation(line: 1425, column: 6, scope: !17751)
!17773 = !DILocation(line: 1426, column: 3, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17771, file: !2496, line: 1425, column: 18)
!17775 = !DILocation(line: 1427, column: 3, scope: !17774)
!17776 = !DILocation(line: 1431, column: 24, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17751, file: !2496, line: 1431, column: 6)
!17778 = !DILocation(line: 1431, column: 6, scope: !17751)
!17779 = !DILocation(line: 1432, column: 35, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17777, file: !2496, line: 1431, column: 30)
!17781 = !DILocation(line: 1432, column: 27, scope: !17780)
!17782 = !DILocation(line: 1433, column: 2, scope: !17780)
!17783 = !DILocation(line: 1434, column: 27, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17777, file: !2496, line: 1433, column: 9)
!17785 = !DILocation(line: 0, scope: !17777)
!17786 = !DILocation(line: 0, scope: !15818, inlinedAt: !17787)
!17787 = distinct !DILocation(line: 1437, column: 25, scope: !17751)
!17788 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17789)
!17789 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17787)
!17790 = !DILocation(line: 0, scope: !15827, inlinedAt: !17789)
!17791 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17787)
!17792 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17787)
!17793 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17787)
!17794 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17787)
!17795 = !DILocation(line: 1440, column: 20, scope: !17751)
!17796 = !DILocation(line: 1440, column: 18, scope: !17751)
!17797 = !DILocation(line: 1442, column: 2, scope: !17751)
!17798 = !DILocation(line: 1443, column: 23, scope: !17751)
!17799 = !DILocation(line: 1443, column: 2, scope: !17751)
!17800 = !DILocation(line: 1444, column: 29, scope: !17751)
!17801 = !DILocation(line: 1444, column: 2, scope: !17751)
!17802 = !DILocation(line: 0, scope: !16539, inlinedAt: !17803)
!17803 = distinct !DILocation(line: 1446, column: 8, scope: !17751)
!17804 = !DILocation(line: 0, scope: !16548, inlinedAt: !17805)
!17805 = distinct !DILocation(line: 195, column: 2, scope: !16539, inlinedAt: !17803)
!17806 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !17805)
!17807 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17805)
!17808 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !17805)
!17809 = !DILocation(line: 196, column: 9, scope: !16539, inlinedAt: !17803)
!17810 = !DILocation(line: 1448, column: 2, scope: !17811)
!17811 = distinct !DILexicalBlock(scope: !17812, file: !2496, line: 1448, column: 2)
!17812 = distinct !DILexicalBlock(scope: !17751, file: !2496, line: 1448, column: 2)
!17813 = !DILocation(line: 1448, column: 2, scope: !17812)
!17814 = !DILocation(line: 1448, column: 2, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17811, file: !2496, line: 1448, column: 2)
!17816 = !DILocation(line: 1450, column: 10, scope: !17751)
!17817 = !DILocation(line: 1450, column: 45, scope: !17751)
!17818 = !DILocation(line: 1450, column: 43, scope: !17751)
!17819 = !DILocation(line: 1451, column: 6, scope: !17751)
!17820 = !DILocation(line: 1457, column: 1, scope: !17751)
!17821 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14790, file: !14790, line: 1103, type: !14791, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17822)
!17822 = !{!17823}
!17823 = !DILocalVariable(name: "t", arg: 1, scope: !17821, file: !14790, line: 1103, type: !114)
!17824 = !DILocation(line: 0, scope: !17821)
!17825 = !DILocation(line: 0, scope: !15878, inlinedAt: !17826)
!17826 = distinct !DILocation(line: 1106, column: 9, scope: !17821)
!17827 = !DILocation(line: 139, column: 13, scope: !17828, inlinedAt: !17826)
!17828 = distinct !DILexicalBlock(scope: !17829, file: !14790, line: 138, column: 10)
!17829 = distinct !DILexicalBlock(scope: !17830, file: !14790, line: 136, column: 7)
!17830 = distinct !DILexicalBlock(scope: !15899, file: !14790, line: 134, column: 17)
!17831 = !DILocation(line: 1106, column: 2, scope: !17821)
!17832 = distinct !DISubprogram(name: "k_yield", scope: !3438, file: !3438, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17833 = !DILocation(line: 148, column: 2, scope: !17834)
!17834 = distinct !DILexicalBlock(scope: !17832, file: !3438, line: 148, column: 2)
!17835 = !{i64 2154892103}
!17836 = !DILocation(line: 149, column: 2, scope: !17832)
!17837 = !DILocation(line: 150, column: 1, scope: !17832)
!17838 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2496, file: !2496, line: 1495, type: !17839, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17841)
!17839 = !DISubroutineType(types: !17840)
!17840 = !{!116, !105}
!17841 = !{!17842, !17843}
!17842 = !DILocalVariable(name: "us", arg: 1, scope: !17838, file: !2496, line: 1495, type: !105)
!17843 = !DILocalVariable(name: "ticks", scope: !17838, file: !2496, line: 1497, type: !116)
!17844 = !DILocation(line: 0, scope: !17838)
!17845 = !DILocation(line: 1501, column: 31, scope: !17838)
!17846 = !DILocation(line: 1501, column: 10, scope: !17838)
!17847 = !DILocation(line: 1502, column: 23, scope: !17838)
!17848 = !DILocation(line: 1502, column: 10, scope: !17838)
!17849 = !DILocation(line: 1506, column: 31, scope: !17838)
!17850 = !DILocation(line: 1506, column: 9, scope: !17838)
!17851 = !DILocation(line: 1506, column: 2, scope: !17838)
!17852 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14790, file: !14790, line: 571, type: !14791, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17853)
!17853 = !{!17854}
!17854 = !DILocalVariable(name: "t", arg: 1, scope: !17852, file: !14790, line: 571, type: !114)
!17855 = !DILocation(line: 0, scope: !17852)
!17856 = !DILocation(line: 0, scope: !15878, inlinedAt: !17857)
!17857 = distinct !DILocation(line: 574, column: 9, scope: !17852)
!17858 = !DILocation(line: 135, column: 5, scope: !17830, inlinedAt: !17857)
!17859 = !DILocation(line: 139, column: 13, scope: !17828, inlinedAt: !17857)
!17860 = !DILocation(line: 574, column: 2, scope: !17852)
!17861 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14790, file: !14790, line: 1187, type: !14791, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17862)
!17862 = !{!17863}
!17863 = !DILocalVariable(name: "t", arg: 1, scope: !17861, file: !14790, line: 1187, type: !114)
!17864 = !DILocation(line: 0, scope: !17861)
!17865 = !DILocation(line: 0, scope: !15878, inlinedAt: !17866)
!17866 = distinct !DILocation(line: 1190, column: 9, scope: !17861)
!17867 = !DILocation(line: 145, column: 13, scope: !17868, inlinedAt: !17866)
!17868 = distinct !DILexicalBlock(scope: !15896, file: !14790, line: 144, column: 10)
!17869 = !DILocation(line: 1190, column: 2, scope: !17861)
!17870 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2496, file: !2496, line: 1517, type: !17741, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17871)
!17871 = !{!17872}
!17872 = !DILocalVariable(name: "thread", arg: 1, scope: !17870, file: !2496, line: 1517, type: !17599)
!17873 = !DILocation(line: 0, scope: !17870)
!17874 = !DILocation(line: 1521, column: 6, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17870, file: !2496, line: 1521, column: 6)
!17876 = !DILocation(line: 1521, column: 6, scope: !17870)
!17877 = !DILocation(line: 1525, column: 6, scope: !17878)
!17878 = distinct !DILexicalBlock(scope: !17870, file: !2496, line: 1525, column: 6)
!17879 = !DILocation(line: 1525, column: 37, scope: !17878)
!17880 = !DILocation(line: 1525, column: 6, scope: !17870)
!17881 = !DILocation(line: 1527, column: 20, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !2496, line: 1527, column: 7)
!17883 = distinct !DILexicalBlock(scope: !17878, file: !2496, line: 1525, column: 42)
!17884 = !DILocation(line: 1527, column: 33, scope: !17882)
!17885 = !DILocation(line: 1527, column: 7, scope: !17883)
!17886 = !DILocation(line: 1532, column: 2, scope: !17870)
!17887 = !DILocation(line: 1533, column: 2, scope: !17870)
!17888 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17889)
!17889 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17890)
!17890 = distinct !DILocation(line: 1537, column: 7, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17870, file: !2496, line: 1537, column: 6)
!17892 = !DILocation(line: 0, scope: !16588, inlinedAt: !17889)
!17893 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17890)
!17894 = !DILocation(line: 1537, column: 6, scope: !17870)
!17895 = !DILocation(line: 1538, column: 3, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17891, file: !2496, line: 1537, column: 25)
!17897 = !DILocation(line: 1539, column: 2, scope: !17896)
!17898 = !DILocation(line: 1540, column: 1, scope: !17870)
!17899 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14173, file: !14173, line: 101, type: !15959, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17900)
!17900 = !{!17901}
!17901 = !DILocalVariable(name: "thread", arg: 1, scope: !17899, file: !14173, line: 101, type: !2389)
!17902 = !DILocation(line: 0, scope: !17899)
!17903 = !DILocation(line: 103, column: 23, scope: !17899)
!17904 = !DILocation(line: 103, column: 36, scope: !17899)
!17905 = !DILocation(line: 103, column: 55, scope: !17899)
!17906 = !DILocation(line: 103, column: 2, scope: !17899)
!17907 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2496, file: !2496, line: 1567, type: !17908, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17910)
!17908 = !DISubroutineType(types: !17909)
!17909 = !{!17599}
!17910 = !{!17911}
!17911 = !DILocalVariable(name: "ret", scope: !17907, file: !2496, line: 1577, type: !17599)
!17912 = !DILocation(line: 1577, column: 30, scope: !17907)
!17913 = !DILocation(line: 0, scope: !17907)
!17914 = !DILocation(line: 1582, column: 2, scope: !17907)
!17915 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2496, file: !2496, line: 1593, type: !9135, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !397)
!17916 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17917)
!17917 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 1595, column: 10, scope: !17915)
!17919 = !DILocation(line: 0, scope: !16588, inlinedAt: !17917)
!17920 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17918)
!17921 = !DILocation(line: 1595, column: 27, scope: !17915)
!17922 = !DILocation(line: 1595, column: 41, scope: !17915)
!17923 = !DILocation(line: 1595, column: 30, scope: !17915)
!17924 = !DILocation(line: 1595, column: 2, scope: !17915)
!17925 = distinct !DISubprogram(name: "z_thread_abort", scope: !2496, file: !2496, line: 1725, type: !15776, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !17926)
!17926 = !{!17927, !17928}
!17927 = !DILocalVariable(name: "thread", arg: 1, scope: !17925, file: !2496, line: 1725, type: !2389)
!17928 = !DILocalVariable(name: "key", scope: !17925, file: !2496, line: 1727, type: !15810)
!17929 = !DILocation(line: 0, scope: !17925)
!17930 = !DILocation(line: 0, scope: !15818, inlinedAt: !17931)
!17931 = distinct !DILocation(line: 1727, column: 25, scope: !17925)
!17932 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !17933)
!17933 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !17931)
!17934 = !DILocation(line: 0, scope: !15827, inlinedAt: !17933)
!17935 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !17931)
!17936 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17931)
!17937 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !17931)
!17938 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !17931)
!17939 = !DILocation(line: 1729, column: 20, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17925, file: !2496, line: 1729, column: 6)
!17941 = !DILocation(line: 1729, column: 33, scope: !17940)
!17942 = !DILocation(line: 1729, column: 48, scope: !17940)
!17943 = !DILocation(line: 1729, column: 6, scope: !17925)
!17944 = !DILocation(line: 0, scope: !15852, inlinedAt: !17945)
!17945 = distinct !DILocation(line: 1730, column: 3, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17940, file: !2496, line: 1729, column: 54)
!17947 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17945)
!17948 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17945)
!17949 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17945)
!17950 = !DILocation(line: 0, scope: !15866, inlinedAt: !17951)
!17951 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17945)
!17952 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17951)
!17953 = !DILocation(line: 1731, column: 3, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17955, file: !2496, line: 1731, column: 3)
!17955 = distinct !DILexicalBlock(scope: !17956, file: !2496, line: 1731, column: 3)
!17956 = distinct !DILexicalBlock(scope: !17946, file: !2496, line: 1731, column: 3)
!17957 = !DILocation(line: 1736, column: 20, scope: !17958)
!17958 = distinct !DILexicalBlock(scope: !17925, file: !2496, line: 1736, column: 6)
!17959 = !DILocation(line: 1736, column: 33, scope: !17958)
!17960 = !DILocation(line: 1736, column: 49, scope: !17958)
!17961 = !DILocation(line: 1736, column: 6, scope: !17925)
!17962 = !DILocation(line: 0, scope: !15852, inlinedAt: !17963)
!17963 = distinct !DILocation(line: 1737, column: 3, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17958, file: !2496, line: 1736, column: 56)
!17965 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17963)
!17966 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17963)
!17967 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17963)
!17968 = !DILocation(line: 0, scope: !15866, inlinedAt: !17969)
!17969 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17963)
!17970 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !17969)
!17971 = !DILocation(line: 1738, column: 3, scope: !17964)
!17972 = !DILocation(line: 1775, column: 2, scope: !17925)
!17973 = !DILocation(line: 1776, column: 16, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17925, file: !2496, line: 1776, column: 6)
!17975 = !DILocation(line: 1776, column: 13, scope: !17974)
!17976 = !DILocation(line: 1776, column: 25, scope: !17974)
!17977 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !17978)
!17978 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !17979)
!17979 = distinct !DILocation(line: 1776, column: 29, scope: !17974)
!17980 = !DILocation(line: 0, scope: !16588, inlinedAt: !17978)
!17981 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !17979)
!17982 = !DILocation(line: 1776, column: 6, scope: !17925)
!17983 = !DILocation(line: 0, scope: !16539, inlinedAt: !17984)
!17984 = distinct !DILocation(line: 1777, column: 3, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17974, file: !2496, line: 1776, column: 47)
!17986 = !DILocation(line: 0, scope: !16548, inlinedAt: !17987)
!17987 = distinct !DILocation(line: 195, column: 2, scope: !16539, inlinedAt: !17984)
!17988 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !17987)
!17989 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17987)
!17990 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !17987)
!17991 = !DILocation(line: 196, column: 9, scope: !16539, inlinedAt: !17984)
!17992 = !DILocation(line: 1778, column: 3, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17994, file: !2496, line: 1778, column: 3)
!17994 = distinct !DILexicalBlock(scope: !17995, file: !2496, line: 1778, column: 3)
!17995 = distinct !DILexicalBlock(scope: !17985, file: !2496, line: 1778, column: 3)
!17996 = !DILocation(line: 0, scope: !15852, inlinedAt: !17997)
!17997 = distinct !DILocation(line: 1780, column: 2, scope: !17925)
!17998 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !17997)
!17999 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17997)
!18000 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !17997)
!18001 = !DILocation(line: 0, scope: !15866, inlinedAt: !18002)
!18002 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !17997)
!18003 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !18002)
!18004 = !DILocation(line: 1781, column: 1, scope: !17925)
!18005 = distinct !DISubprogram(name: "end_thread", scope: !2496, file: !2496, line: 1690, type: !15776, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18006)
!18006 = !{!18007}
!18007 = !DILocalVariable(name: "thread", arg: 1, scope: !18005, file: !2496, line: 1690, type: !2389)
!18008 = !DILocation(line: 0, scope: !18005)
!18009 = !DILocation(line: 1695, column: 20, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !18005, file: !2496, line: 1695, column: 6)
!18011 = !DILocation(line: 1695, column: 33, scope: !18010)
!18012 = !DILocation(line: 1695, column: 49, scope: !18010)
!18013 = !DILocation(line: 1695, column: 6, scope: !18005)
!18014 = !DILocation(line: 1697, column: 29, scope: !18015)
!18015 = distinct !DILexicalBlock(scope: !18010, file: !2496, line: 1695, column: 56)
!18016 = !DILocation(line: 1698, column: 7, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18015, file: !2496, line: 1698, column: 7)
!18018 = !DILocation(line: 1698, column: 7, scope: !18015)
!18019 = !DILocation(line: 0, scope: !16010, inlinedAt: !18020)
!18020 = distinct !DILocation(line: 1699, column: 4, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !18017, file: !2496, line: 1698, column: 35)
!18022 = !DILocation(line: 266, column: 28, scope: !16010, inlinedAt: !18020)
!18023 = !DILocation(line: 0, scope: !16018, inlinedAt: !18024)
!18024 = distinct !DILocation(line: 268, column: 3, scope: !16022, inlinedAt: !18020)
!18025 = !DILocation(line: 234, column: 2, scope: !16018, inlinedAt: !18024)
!18026 = !DILocation(line: 1700, column: 3, scope: !18021)
!18027 = !DILocation(line: 1701, column: 20, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !18015, file: !2496, line: 1701, column: 7)
!18029 = !DILocation(line: 1701, column: 30, scope: !18028)
!18030 = !DILocation(line: 1701, column: 7, scope: !18015)
!18031 = !DILocation(line: 1702, column: 4, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !18028, file: !2496, line: 1701, column: 39)
!18033 = !DILocation(line: 1703, column: 3, scope: !18032)
!18034 = !DILocation(line: 1704, column: 9, scope: !18015)
!18035 = !DILocation(line: 1705, column: 23, scope: !18015)
!18036 = !DILocation(line: 1705, column: 3, scope: !18015)
!18037 = !DILocation(line: 1706, column: 3, scope: !18015)
!18038 = !DILocation(line: 1722, column: 2, scope: !18015)
!18039 = !DILocation(line: 1723, column: 1, scope: !18005)
!18040 = distinct !DISubprogram(name: "unpend_all", scope: !2496, file: !2496, line: 1674, type: !18041, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18043)
!18041 = !DISubroutineType(types: !18042)
!18042 = !{null, !2420}
!18043 = !{!18044, !18045}
!18044 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18040, file: !2496, line: 1674, type: !2420)
!18045 = !DILocalVariable(name: "thread", scope: !18040, file: !2496, line: 1676, type: !2389)
!18046 = !DILocation(line: 0, scope: !18040)
!18047 = !DILocation(line: 1678, column: 19, scope: !18040)
!18048 = !DILocation(line: 1678, column: 41, scope: !18040)
!18049 = !DILocation(line: 1678, column: 2, scope: !18040)
!18050 = !DILocation(line: 1679, column: 3, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18040, file: !2496, line: 1678, column: 50)
!18052 = !DILocation(line: 1680, column: 9, scope: !18051)
!18053 = !DILocalVariable(name: "thread", arg: 1, scope: !18054, file: !14214, line: 65, type: !2389)
!18054 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14214, file: !14214, line: 65, type: !18055, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18057)
!18055 = !DISubroutineType(types: !18056)
!18056 = !{null, !2389, !32}
!18057 = !{!18053, !18058}
!18058 = !DILocalVariable(name: "value", arg: 2, scope: !18054, file: !14214, line: 65, type: !32)
!18059 = !DILocation(line: 0, scope: !18054, inlinedAt: !18060)
!18060 = distinct !DILocation(line: 1681, column: 3, scope: !18051)
!18061 = !DILocation(line: 67, column: 15, scope: !18054, inlinedAt: !18060)
!18062 = !DILocation(line: 67, column: 33, scope: !18054, inlinedAt: !18060)
!18063 = !DILocation(line: 1682, column: 3, scope: !18051)
!18064 = distinct !{!18064, !18049, !18065}
!18065 = !DILocation(line: 1683, column: 2, scope: !18040)
!18066 = !DILocation(line: 1684, column: 1, scope: !18040)
!18067 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2496, file: !2496, line: 1794, type: !18068, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18070)
!18068 = !DISubroutineType(types: !18069)
!18069 = !{!105, !2389, !16749}
!18070 = !{!18071, !18072, !18073, !18074}
!18071 = !DILocalVariable(name: "thread", arg: 1, scope: !18067, file: !2496, line: 1794, type: !2389)
!18072 = !DILocalVariable(name: "timeout", arg: 2, scope: !18067, file: !2496, line: 1794, type: !16749)
!18073 = !DILocalVariable(name: "key", scope: !18067, file: !2496, line: 1796, type: !15810)
!18074 = !DILocalVariable(name: "ret", scope: !18067, file: !2496, line: 1797, type: !105)
!18075 = !DILocation(line: 0, scope: !18067)
!18076 = !DILocation(line: 0, scope: !15818, inlinedAt: !18077)
!18077 = distinct !DILocation(line: 1796, column: 25, scope: !18067)
!18078 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !18079)
!18079 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !18077)
!18080 = !DILocation(line: 0, scope: !15827, inlinedAt: !18079)
!18081 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !18077)
!18082 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !18077)
!18083 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !18077)
!18084 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !18077)
!18085 = !DILocation(line: 1801, column: 20, scope: !18086)
!18086 = distinct !DILexicalBlock(scope: !18067, file: !2496, line: 1801, column: 6)
!18087 = !DILocation(line: 1801, column: 33, scope: !18086)
!18088 = !DILocation(line: 1801, column: 49, scope: !18086)
!18089 = !DILocation(line: 1801, column: 6, scope: !18067)
!18090 = !DILocation(line: 1803, column: 13, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18086, file: !2496, line: 1803, column: 13)
!18092 = !DILocation(line: 1803, column: 13, scope: !18086)
!18093 = !DILocation(line: 1805, column: 24, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18091, file: !2496, line: 1805, column: 13)
!18095 = !DILocation(line: 1805, column: 21, scope: !18094)
!18096 = !DILocation(line: 1805, column: 34, scope: !18094)
!18097 = !DILocation(line: 1806, column: 20, scope: !18094)
!18098 = !DILocation(line: 1806, column: 44, scope: !18094)
!18099 = !DILocation(line: 1806, column: 30, scope: !18094)
!18100 = !DILocation(line: 1805, column: 13, scope: !18091)
!18101 = !DILocation(line: 1031, column: 3, scope: !16588, inlinedAt: !18102)
!18102 = distinct !DILocation(line: 48, column: 10, scope: !16592, inlinedAt: !18103)
!18103 = distinct !DILocation(line: 1809, column: 3, scope: !18104)
!18104 = distinct !DILexicalBlock(scope: !18105, file: !2496, line: 1809, column: 3)
!18105 = distinct !DILexicalBlock(scope: !18106, file: !2496, line: 1809, column: 3)
!18106 = distinct !DILexicalBlock(scope: !18094, file: !2496, line: 1808, column: 9)
!18107 = !DILocation(line: 0, scope: !16588, inlinedAt: !18102)
!18108 = !DILocation(line: 48, column: 9, scope: !16592, inlinedAt: !18103)
!18109 = !DILocation(line: 1809, column: 3, scope: !18105)
!18110 = !DILocation(line: 1809, column: 3, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18104, file: !2496, line: 1809, column: 3)
!18112 = !DILocation(line: 1810, column: 23, scope: !18106)
!18113 = !DILocation(line: 1810, column: 42, scope: !18106)
!18114 = !DILocation(line: 1810, column: 3, scope: !18106)
!18115 = !DILocation(line: 1811, column: 22, scope: !18106)
!18116 = !DILocation(line: 1811, column: 3, scope: !18106)
!18117 = !DILocation(line: 0, scope: !16539, inlinedAt: !18118)
!18118 = distinct !DILocation(line: 1814, column: 9, scope: !18106)
!18119 = !DILocation(line: 0, scope: !16548, inlinedAt: !18120)
!18120 = distinct !DILocation(line: 195, column: 2, scope: !16539, inlinedAt: !18118)
!18121 = !DILocation(line: 225, column: 2, scope: !16555, inlinedAt: !18120)
!18122 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !18120)
!18123 = !DILocation(line: 225, column: 2, scope: !16559, inlinedAt: !18120)
!18124 = !DILocation(line: 196, column: 9, scope: !16539, inlinedAt: !18118)
!18125 = !DILocation(line: 1817, column: 3, scope: !18106)
!18126 = !DILocation(line: 0, scope: !18086)
!18127 = !DILocation(line: 0, scope: !15852, inlinedAt: !18128)
!18128 = distinct !DILocation(line: 1822, column: 2, scope: !18067)
!18129 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !18128)
!18130 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !18128)
!18131 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !18128)
!18132 = !DILocation(line: 0, scope: !15866, inlinedAt: !18133)
!18133 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !18128)
!18134 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !18133)
!18135 = !DILocation(line: 1823, column: 2, scope: !18067)
!18136 = !DILocation(line: 1824, column: 1, scope: !18067)
!18137 = distinct !DISubprogram(name: "z_sched_wake", scope: !2496, file: !2496, line: 1882, type: !18138, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18140)
!18138 = !DISubroutineType(types: !18139)
!18139 = !{!492, !2420, !105, !104}
!18140 = !{!18141, !18142, !18143, !18144, !18145, !18146, !18148}
!18141 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18137, file: !2496, line: 1882, type: !2420)
!18142 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18137, file: !2496, line: 1882, type: !105)
!18143 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18137, file: !2496, line: 1882, type: !104)
!18144 = !DILocalVariable(name: "thread", scope: !18137, file: !2496, line: 1884, type: !2389)
!18145 = !DILocalVariable(name: "ret", scope: !18137, file: !2496, line: 1885, type: !492)
!18146 = !DILocalVariable(name: "__i", scope: !18147, file: !2496, line: 1887, type: !15810)
!18147 = distinct !DILexicalBlock(scope: !18137, file: !2496, line: 1887, column: 2)
!18148 = !DILocalVariable(name: "__key", scope: !18147, file: !2496, line: 1887, type: !15810)
!18149 = !DILocation(line: 0, scope: !18137)
!18150 = !DILocation(line: 0, scope: !18147)
!18151 = !DILocation(line: 0, scope: !15818, inlinedAt: !18152)
!18152 = distinct !DILocation(line: 1887, column: 2, scope: !18147)
!18153 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !18154)
!18154 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !18152)
!18155 = !DILocation(line: 0, scope: !15827, inlinedAt: !18154)
!18156 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !18152)
!18157 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !18152)
!18158 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !18152)
!18159 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !18152)
!18160 = !DILocation(line: 1888, column: 12, scope: !18161)
!18161 = distinct !DILexicalBlock(scope: !18162, file: !2496, line: 1887, column: 26)
!18162 = distinct !DILexicalBlock(scope: !18147, file: !2496, line: 1887, column: 2)
!18163 = !DILocation(line: 1890, column: 14, scope: !18164)
!18164 = distinct !DILexicalBlock(scope: !18161, file: !2496, line: 1890, column: 7)
!18165 = !DILocation(line: 1890, column: 7, scope: !18161)
!18166 = !DILocalVariable(name: "thread", arg: 1, scope: !18167, file: !15063, line: 134, type: !2389)
!18167 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15063, file: !15063, line: 134, type: !18168, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18170)
!18168 = !DISubroutineType(types: !18169)
!18169 = !{null, !2389, !32, !104}
!18170 = !{!18166, !18171, !18172}
!18171 = !DILocalVariable(name: "value", arg: 2, scope: !18167, file: !15063, line: 135, type: !32)
!18172 = !DILocalVariable(name: "data", arg: 3, scope: !18167, file: !15063, line: 136, type: !104)
!18173 = !DILocation(line: 0, scope: !18167, inlinedAt: !18174)
!18174 = distinct !DILocation(line: 1891, column: 4, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18164, file: !2496, line: 1890, column: 23)
!18176 = !DILocation(line: 0, scope: !18054, inlinedAt: !18177)
!18177 = distinct !DILocation(line: 138, column: 2, scope: !18167, inlinedAt: !18174)
!18178 = !DILocation(line: 67, column: 15, scope: !18054, inlinedAt: !18177)
!18179 = !DILocation(line: 67, column: 33, scope: !18054, inlinedAt: !18177)
!18180 = !DILocation(line: 139, column: 15, scope: !18167, inlinedAt: !18174)
!18181 = !DILocation(line: 139, column: 25, scope: !18167, inlinedAt: !18174)
!18182 = !DILocation(line: 1894, column: 4, scope: !18175)
!18183 = !DILocation(line: 1895, column: 10, scope: !18175)
!18184 = !DILocation(line: 1896, column: 4, scope: !18175)
!18185 = !DILocation(line: 1898, column: 3, scope: !18175)
!18186 = !DILocation(line: 0, scope: !15852, inlinedAt: !18187)
!18187 = distinct !DILocation(line: 1887, column: 2, scope: !18162)
!18188 = !DILocation(line: 194, column: 2, scope: !15860, inlinedAt: !18187)
!18189 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !18187)
!18190 = !DILocation(line: 194, column: 2, scope: !15864, inlinedAt: !18187)
!18191 = !DILocation(line: 0, scope: !15866, inlinedAt: !18192)
!18192 = distinct !DILocation(line: 215, column: 2, scope: !15852, inlinedAt: !18187)
!18193 = !DILocation(line: 95, column: 2, scope: !15866, inlinedAt: !18192)
!18194 = !DILocation(line: 1901, column: 2, scope: !18137)
!18195 = distinct !DISubprogram(name: "z_sched_wait", scope: !2496, file: !2496, line: 1904, type: !18196, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !18199)
!18196 = !DISubroutineType(types: !18197)
!18197 = !{!105, !15821, !15810, !2420, !16749, !18198}
!18198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!18199 = !{!18200, !18201, !18202, !18203, !18204, !18205}
!18200 = !DILocalVariable(name: "lock", arg: 1, scope: !18195, file: !2496, line: 1904, type: !15821)
!18201 = !DILocalVariable(name: "key", arg: 2, scope: !18195, file: !2496, line: 1904, type: !15810)
!18202 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18195, file: !2496, line: 1905, type: !2420)
!18203 = !DILocalVariable(name: "timeout", arg: 4, scope: !18195, file: !2496, line: 1905, type: !16749)
!18204 = !DILocalVariable(name: "data", arg: 5, scope: !18195, file: !2496, line: 1905, type: !18198)
!18205 = !DILocalVariable(name: "ret", scope: !18195, file: !2496, line: 1907, type: !105)
!18206 = !DILocation(line: 0, scope: !18195)
!18207 = !DILocation(line: 1907, column: 12, scope: !18195)
!18208 = !DILocation(line: 1909, column: 11, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !18195, file: !2496, line: 1909, column: 6)
!18210 = !DILocation(line: 1909, column: 6, scope: !18195)
!18211 = !DILocation(line: 1910, column: 11, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18209, file: !2496, line: 1909, column: 20)
!18213 = !DILocation(line: 1910, column: 26, scope: !18212)
!18214 = !DILocation(line: 1910, column: 9, scope: !18212)
!18215 = !DILocation(line: 1911, column: 2, scope: !18212)
!18216 = !DILocation(line: 1912, column: 2, scope: !18195)
!18217 = distinct !DISubprogram(name: "z_data_copy", scope: !18218, file: !18218, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !397)
!18218 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18219 = !DILocation(line: 24, column: 2, scope: !18217)
!18220 = !DILocation(line: 27, column: 2, scope: !18217)
!18221 = !DILocation(line: 31, column: 2, scope: !18217)
!18222 = !DILocation(line: 71, column: 1, scope: !18217)
!18223 = distinct !DISubprogram(name: "z_add_timeout", scope: !2533, file: !2533, line: 88, type: !18224, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18230)
!18224 = !DISubroutineType(types: !18225)
!18225 = !{null, !2506, !2525, !18226}
!18226 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18227)
!18227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18228)
!18228 = !{!18229}
!18229 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18227, file: !108, line: 66, baseType: !107, size: 64)
!18230 = !{!18231, !18232, !18233, !18234, !18240, !18241, !18244, !18247}
!18231 = !DILocalVariable(name: "to", arg: 1, scope: !18223, file: !2533, line: 88, type: !2506)
!18232 = !DILocalVariable(name: "fn", arg: 2, scope: !18223, file: !2533, line: 88, type: !2525)
!18233 = !DILocalVariable(name: "timeout", arg: 3, scope: !18223, file: !2533, line: 89, type: !18226)
!18234 = !DILocalVariable(name: "__i", scope: !18235, file: !2533, line: 102, type: !18236)
!18235 = distinct !DILexicalBlock(scope: !18223, file: !2533, line: 102, column: 2)
!18236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18237)
!18237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18238)
!18238 = !{!18239}
!18239 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18237, file: !236, line: 33, baseType: !105, size: 32)
!18240 = !DILocalVariable(name: "__key", scope: !18235, file: !2533, line: 102, type: !18236)
!18241 = !DILocalVariable(name: "t", scope: !18242, file: !2533, line: 103, type: !2506)
!18242 = distinct !DILexicalBlock(scope: !18243, file: !2533, line: 102, column: 24)
!18243 = distinct !DILexicalBlock(scope: !18235, file: !2533, line: 102, column: 2)
!18244 = !DILocalVariable(name: "ticks", scope: !18245, file: !2533, line: 107, type: !107)
!18245 = distinct !DILexicalBlock(scope: !18246, file: !2533, line: 106, column: 39)
!18246 = distinct !DILexicalBlock(scope: !18242, file: !2533, line: 105, column: 7)
!18247 = !DILocalVariable(name: "next_time", scope: !18248, file: !2533, line: 137, type: !116)
!18248 = distinct !DILexicalBlock(scope: !18249, file: !2533, line: 127, column: 22)
!18249 = distinct !DILexicalBlock(scope: !18242, file: !2533, line: 127, column: 7)
!18250 = !DILocation(line: 0, scope: !18223)
!18251 = !DILocation(line: 91, column: 6, scope: !18252)
!18252 = distinct !DILexicalBlock(scope: !18223, file: !2533, line: 91, column: 6)
!18253 = !DILocation(line: 91, column: 6, scope: !18223)
!18254 = !DILocation(line: 99, column: 2, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18256, file: !2533, line: 99, column: 2)
!18256 = distinct !DILexicalBlock(scope: !18223, file: !2533, line: 99, column: 2)
!18257 = !DILocation(line: 99, column: 2, scope: !18256)
!18258 = !DILocation(line: 99, column: 2, scope: !18259)
!18259 = distinct !DILexicalBlock(scope: !18255, file: !2533, line: 99, column: 2)
!18260 = !DILocation(line: 100, column: 6, scope: !18223)
!18261 = !DILocation(line: 100, column: 9, scope: !18223)
!18262 = !DILocation(line: 0, scope: !18235)
!18263 = !DILocalVariable(name: "l", arg: 1, scope: !18264, file: !236, line: 136, type: !18267)
!18264 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18265, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18268)
!18265 = !DISubroutineType(types: !18266)
!18266 = !{!18236, !18267}
!18267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!18268 = !{!18263, !18269}
!18269 = !DILocalVariable(name: "k", scope: !18264, file: !236, line: 139, type: !18236)
!18270 = !DILocation(line: 0, scope: !18264, inlinedAt: !18271)
!18271 = distinct !DILocation(line: 102, column: 2, scope: !18235)
!18272 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18277)
!18273 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18274)
!18274 = !{!18275, !18276}
!18275 = !DILocalVariable(name: "key", scope: !18273, file: !7467, line: 44, type: !32)
!18276 = !DILocalVariable(name: "tmp", scope: !18273, file: !7467, line: 53, type: !32)
!18277 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18271)
!18278 = !{i64 2231497}
!18279 = !DILocation(line: 0, scope: !18273, inlinedAt: !18277)
!18280 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18271)
!18281 = distinct !DILexicalBlock(scope: !18282, file: !236, line: 148, column: 2)
!18282 = distinct !DILexicalBlock(scope: !18264, file: !236, line: 148, column: 2)
!18283 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18271)
!18284 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18271)
!18285 = distinct !DILexicalBlock(scope: !18281, file: !236, line: 148, column: 2)
!18286 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18271)
!18287 = !DILocation(line: 106, column: 33, scope: !18246)
!18288 = !DILocation(line: 105, column: 7, scope: !18242)
!18289 = !DILocation(line: 107, column: 50, scope: !18245)
!18290 = !DILocation(line: 107, column: 48, scope: !18245)
!18291 = !DILocation(line: 0, scope: !18245)
!18292 = !DILocation(line: 109, column: 17, scope: !18245)
!18293 = !DILocation(line: 110, column: 3, scope: !18245)
!18294 = !DILocation(line: 111, column: 31, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18246, file: !2533, line: 110, column: 10)
!18296 = !DILocation(line: 111, column: 37, scope: !18295)
!18297 = !DILocation(line: 111, column: 35, scope: !18295)
!18298 = !DILocation(line: 0, scope: !18246)
!18299 = !DILocation(line: 109, column: 8, scope: !18245)
!18300 = !DILocation(line: 109, column: 15, scope: !18245)
!18301 = !DILocation(line: 114, column: 12, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18242, file: !2533, line: 114, column: 3)
!18303 = !DILocation(line: 0, scope: !18242)
!18304 = !DILocation(line: 114, column: 3, scope: !18302)
!18305 = !DILocation(line: 115, column: 24, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !18307, file: !2533, line: 115, column: 8)
!18307 = distinct !DILexicalBlock(scope: !18308, file: !2533, line: 114, column: 45)
!18308 = distinct !DILexicalBlock(scope: !18302, file: !2533, line: 114, column: 3)
!18309 = !DILocation(line: 115, column: 11, scope: !18306)
!18310 = !DILocation(line: 115, column: 18, scope: !18306)
!18311 = !DILocation(line: 115, column: 8, scope: !18307)
!18312 = !DILocation(line: 116, column: 15, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18306, file: !2533, line: 115, column: 32)
!18314 = !DILocation(line: 117, column: 26, scope: !18313)
!18315 = !DILocation(line: 117, column: 5, scope: !18313)
!18316 = !DILocation(line: 123, column: 7, scope: !18242)
!18317 = !DILocation(line: 120, column: 15, scope: !18307)
!18318 = !DILocation(line: 114, column: 36, scope: !18308)
!18319 = distinct !{!18319, !18304, !18320}
!18320 = !DILocation(line: 121, column: 3, scope: !18302)
!18321 = !DILocation(line: 124, column: 4, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18323, file: !2533, line: 123, column: 18)
!18323 = distinct !DILexicalBlock(scope: !18242, file: !2533, line: 123, column: 7)
!18324 = !DILocation(line: 125, column: 3, scope: !18322)
!18325 = !DILocation(line: 127, column: 13, scope: !18249)
!18326 = !DILocation(line: 127, column: 10, scope: !18249)
!18327 = !DILocation(line: 127, column: 7, scope: !18242)
!18328 = !DILocation(line: 137, column: 24, scope: !18248)
!18329 = !DILocation(line: 0, scope: !18248)
!18330 = !DILocation(line: 139, column: 18, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18248, file: !2533, line: 139, column: 8)
!18332 = !DILocation(line: 139, column: 23, scope: !18331)
!18333 = !DILocation(line: 141, column: 5, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18331, file: !2533, line: 140, column: 48)
!18335 = !DILocation(line: 142, column: 4, scope: !18334)
!18336 = !DILocalVariable(name: "key", arg: 2, scope: !18337, file: !236, line: 190, type: !18236)
!18337 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !18338, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18340)
!18338 = !DISubroutineType(types: !18339)
!18339 = !{null, !18267, !18236}
!18340 = !{!18341, !18336}
!18341 = !DILocalVariable(name: "l", arg: 1, scope: !18337, file: !236, line: 189, type: !18267)
!18342 = !DILocation(line: 0, scope: !18337, inlinedAt: !18343)
!18343 = distinct !DILocation(line: 102, column: 2, scope: !18243)
!18344 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18343)
!18345 = distinct !DILexicalBlock(scope: !18346, file: !236, line: 194, column: 2)
!18346 = distinct !DILexicalBlock(scope: !18337, file: !236, line: 194, column: 2)
!18347 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18343)
!18348 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18343)
!18349 = distinct !DILexicalBlock(scope: !18345, file: !236, line: 194, column: 2)
!18350 = !DILocalVariable(name: "key", arg: 1, scope: !18351, file: !7467, line: 84, type: !32)
!18351 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18352)
!18352 = !{!18350}
!18353 = !DILocation(line: 0, scope: !18351, inlinedAt: !18354)
!18354 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18343)
!18355 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18354)
!18356 = !{i64 2232314}
!18357 = !DILocation(line: 148, column: 1, scope: !18223)
!18358 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !18359, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18363)
!18359 = !DISubroutineType(types: !18360)
!18360 = !{!492, !18361}
!18361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18362, size: 32)
!18362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2510)
!18363 = !{!18364}
!18364 = !DILocalVariable(name: "node", arg: 1, scope: !18358, file: !137, line: 225, type: !18361)
!18365 = !DILocation(line: 0, scope: !18358)
!18366 = !DILocation(line: 227, column: 15, scope: !18358)
!18367 = !DILocation(line: 227, column: 20, scope: !18358)
!18368 = !DILocation(line: 227, column: 2, scope: !18358)
!18369 = distinct !DISubprogram(name: "elapsed", scope: !2533, file: !2533, line: 62, type: !18370, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !397)
!18370 = !DISubroutineType(types: !18371)
!18371 = !{!116}
!18372 = !DILocation(line: 64, column: 9, scope: !18369)
!18373 = !DILocation(line: 64, column: 28, scope: !18369)
!18374 = !DILocation(line: 64, column: 35, scope: !18369)
!18375 = !DILocation(line: 64, column: 2, scope: !18369)
!18376 = distinct !DISubprogram(name: "first", scope: !2533, file: !2533, line: 39, type: !18377, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18379)
!18377 = !DISubroutineType(types: !18378)
!18378 = !{!2506}
!18379 = !{!18380}
!18380 = !DILocalVariable(name: "t", scope: !18376, file: !2533, line: 41, type: !18381)
!18381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 32)
!18382 = !DILocation(line: 41, column: 19, scope: !18376)
!18383 = !DILocation(line: 0, scope: !18376)
!18384 = !DILocation(line: 43, column: 9, scope: !18376)
!18385 = !DILocation(line: 43, column: 2, scope: !18376)
!18386 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !18387, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18389)
!18387 = !DISubroutineType(types: !18388)
!18388 = !{null, !18381, !18381}
!18389 = !{!18390, !18391, !18392}
!18390 = !DILocalVariable(name: "successor", arg: 1, scope: !18386, file: !137, line: 443, type: !18381)
!18391 = !DILocalVariable(name: "node", arg: 2, scope: !18386, file: !137, line: 443, type: !18381)
!18392 = !DILocalVariable(name: "prev", scope: !18386, file: !137, line: 445, type: !18393)
!18393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18381)
!18394 = !DILocation(line: 0, scope: !18386)
!18395 = !DILocation(line: 445, column: 39, scope: !18386)
!18396 = !DILocation(line: 447, column: 8, scope: !18386)
!18397 = !DILocation(line: 447, column: 13, scope: !18386)
!18398 = !DILocation(line: 448, column: 8, scope: !18386)
!18399 = !DILocation(line: 448, column: 13, scope: !18386)
!18400 = !DILocation(line: 449, column: 8, scope: !18386)
!18401 = !DILocation(line: 449, column: 13, scope: !18386)
!18402 = !DILocation(line: 450, column: 18, scope: !18386)
!18403 = !DILocation(line: 451, column: 1, scope: !18386)
!18404 = distinct !DISubprogram(name: "next", scope: !2533, file: !2533, line: 46, type: !18405, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18407)
!18405 = !DISubroutineType(types: !18406)
!18406 = !{!2506, !2506}
!18407 = !{!18408, !18409}
!18408 = !DILocalVariable(name: "t", arg: 1, scope: !18404, file: !2533, line: 46, type: !2506)
!18409 = !DILocalVariable(name: "n", scope: !18404, file: !2533, line: 48, type: !18381)
!18410 = !DILocation(line: 0, scope: !18404)
!18411 = !DILocation(line: 48, column: 58, scope: !18404)
!18412 = !DILocation(line: 48, column: 19, scope: !18404)
!18413 = !DILocation(line: 50, column: 9, scope: !18404)
!18414 = !DILocation(line: 50, column: 2, scope: !18404)
!18415 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !18416, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18419)
!18416 = !DISubroutineType(types: !18417)
!18417 = !{null, !18418, !18381}
!18418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!18419 = !{!18420, !18421, !18422}
!18420 = !DILocalVariable(name: "list", arg: 1, scope: !18415, file: !137, line: 404, type: !18418)
!18421 = !DILocalVariable(name: "node", arg: 2, scope: !18415, file: !137, line: 404, type: !18381)
!18422 = !DILocalVariable(name: "tail", scope: !18415, file: !137, line: 406, type: !18393)
!18423 = !DILocation(line: 0, scope: !18415)
!18424 = !DILocation(line: 406, column: 34, scope: !18415)
!18425 = !DILocation(line: 408, column: 8, scope: !18415)
!18426 = !DILocation(line: 408, column: 13, scope: !18415)
!18427 = !DILocation(line: 409, column: 8, scope: !18415)
!18428 = !DILocation(line: 409, column: 13, scope: !18415)
!18429 = !DILocation(line: 411, column: 8, scope: !18415)
!18430 = !DILocation(line: 411, column: 13, scope: !18415)
!18431 = !DILocation(line: 412, column: 13, scope: !18415)
!18432 = !DILocation(line: 413, column: 1, scope: !18415)
!18433 = distinct !DISubprogram(name: "next_timeout", scope: !2533, file: !2533, line: 67, type: !18370, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18434)
!18434 = !{!18435, !18436, !18437}
!18435 = !DILocalVariable(name: "to", scope: !18433, file: !2533, line: 69, type: !2506)
!18436 = !DILocalVariable(name: "ticks_elapsed", scope: !18433, file: !2533, line: 70, type: !116)
!18437 = !DILocalVariable(name: "ret", scope: !18433, file: !2533, line: 71, type: !116)
!18438 = !DILocation(line: 69, column: 24, scope: !18433)
!18439 = !DILocation(line: 0, scope: !18433)
!18440 = !DILocation(line: 70, column: 26, scope: !18433)
!18441 = !DILocation(line: 73, column: 10, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18433, file: !2533, line: 73, column: 6)
!18443 = !DILocation(line: 73, column: 19, scope: !18442)
!18444 = !DILocation(line: 74, column: 21, scope: !18442)
!18445 = !DILocation(line: 74, column: 30, scope: !18442)
!18446 = !DILocation(line: 74, column: 28, scope: !18442)
!18447 = !DILocation(line: 74, column: 45, scope: !18442)
!18448 = !DILocation(line: 73, column: 6, scope: !18433)
!18449 = !DILocation(line: 77, column: 9, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18442, file: !2533, line: 76, column: 9)
!18451 = !DILocation(line: 0, scope: !18442)
!18452 = !DILocation(line: 81, column: 20, scope: !18453)
!18453 = distinct !DILexicalBlock(scope: !18433, file: !2533, line: 81, column: 6)
!18454 = !DILocation(line: 81, column: 6, scope: !18453)
!18455 = !DILocation(line: 81, column: 32, scope: !18453)
!18456 = !DILocation(line: 85, column: 2, scope: !18433)
!18457 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !18458, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18460)
!18458 = !DISubroutineType(types: !18459)
!18459 = !{!18381, !18418, !18381}
!18460 = !{!18461, !18462}
!18461 = !DILocalVariable(name: "list", arg: 1, scope: !18457, file: !137, line: 341, type: !18418)
!18462 = !DILocalVariable(name: "node", arg: 2, scope: !18457, file: !137, line: 342, type: !18381)
!18463 = !DILocation(line: 0, scope: !18457)
!18464 = !DILocation(line: 344, column: 15, scope: !18457)
!18465 = !DILocation(line: 344, column: 9, scope: !18457)
!18466 = !DILocation(line: 344, column: 26, scope: !18457)
!18467 = !DILocation(line: 344, column: 2, scope: !18457)
!18468 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !18458, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18469)
!18469 = !{!18470, !18471}
!18470 = !DILocalVariable(name: "list", arg: 1, scope: !18468, file: !137, line: 325, type: !18418)
!18471 = !DILocalVariable(name: "node", arg: 2, scope: !18468, file: !137, line: 326, type: !18381)
!18472 = !DILocation(line: 0, scope: !18468)
!18473 = !DILocation(line: 328, column: 24, scope: !18468)
!18474 = !DILocation(line: 328, column: 15, scope: !18468)
!18475 = !DILocation(line: 328, column: 9, scope: !18468)
!18476 = !DILocation(line: 328, column: 45, scope: !18468)
!18477 = !DILocation(line: 328, column: 2, scope: !18468)
!18478 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !18479, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18481)
!18479 = !DISubroutineType(types: !18480)
!18480 = !{!18381, !18418}
!18481 = !{!18482}
!18482 = !DILocalVariable(name: "list", arg: 1, scope: !18478, file: !137, line: 294, type: !18418)
!18483 = !DILocation(line: 0, scope: !18478)
!18484 = !DILocation(line: 296, column: 9, scope: !18478)
!18485 = !DILocation(line: 296, column: 2, scope: !18478)
!18486 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !18487, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18489)
!18487 = !DISubroutineType(types: !18488)
!18488 = !{!492, !18418}
!18489 = !{!18490}
!18490 = !DILocalVariable(name: "list", arg: 1, scope: !18486, file: !137, line: 266, type: !18418)
!18491 = !DILocation(line: 0, scope: !18486)
!18492 = !DILocation(line: 268, column: 15, scope: !18486)
!18493 = !DILocation(line: 268, column: 20, scope: !18486)
!18494 = !DILocation(line: 268, column: 2, scope: !18486)
!18495 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2533, file: !2533, line: 150, type: !18496, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18498)
!18496 = !DISubroutineType(types: !18497)
!18497 = !{!105, !2506}
!18498 = !{!18499, !18500, !18501, !18503}
!18499 = !DILocalVariable(name: "to", arg: 1, scope: !18495, file: !2533, line: 150, type: !2506)
!18500 = !DILocalVariable(name: "ret", scope: !18495, file: !2533, line: 152, type: !105)
!18501 = !DILocalVariable(name: "__i", scope: !18502, file: !2533, line: 154, type: !18236)
!18502 = distinct !DILexicalBlock(scope: !18495, file: !2533, line: 154, column: 2)
!18503 = !DILocalVariable(name: "__key", scope: !18502, file: !2533, line: 154, type: !18236)
!18504 = !DILocation(line: 0, scope: !18495)
!18505 = !DILocation(line: 0, scope: !18502)
!18506 = !DILocation(line: 0, scope: !18264, inlinedAt: !18507)
!18507 = distinct !DILocation(line: 154, column: 2, scope: !18502)
!18508 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18509)
!18509 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18507)
!18510 = !DILocation(line: 0, scope: !18273, inlinedAt: !18509)
!18511 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18507)
!18512 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18507)
!18513 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18507)
!18514 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18507)
!18515 = !DILocation(line: 155, column: 7, scope: !18516)
!18516 = distinct !DILexicalBlock(scope: !18517, file: !2533, line: 155, column: 7)
!18517 = distinct !DILexicalBlock(scope: !18518, file: !2533, line: 154, column: 24)
!18518 = distinct !DILexicalBlock(scope: !18502, file: !2533, line: 154, column: 2)
!18519 = !DILocation(line: 155, column: 7, scope: !18517)
!18520 = !DILocation(line: 156, column: 4, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18516, file: !2533, line: 155, column: 39)
!18522 = !DILocation(line: 158, column: 3, scope: !18521)
!18523 = !DILocation(line: 0, scope: !18337, inlinedAt: !18524)
!18524 = distinct !DILocation(line: 154, column: 2, scope: !18518)
!18525 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18524)
!18526 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18524)
!18527 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18524)
!18528 = !DILocation(line: 0, scope: !18351, inlinedAt: !18529)
!18529 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18524)
!18530 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18529)
!18531 = !DILocation(line: 161, column: 2, scope: !18495)
!18532 = distinct !DISubprogram(name: "remove_timeout", scope: !2533, file: !2533, line: 53, type: !2527, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18533)
!18533 = !{!18534}
!18534 = !DILocalVariable(name: "t", arg: 1, scope: !18532, file: !2533, line: 53, type: !2506)
!18535 = !DILocation(line: 0, scope: !18532)
!18536 = !DILocation(line: 55, column: 6, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18532, file: !2533, line: 55, column: 6)
!18538 = !DILocation(line: 55, column: 14, scope: !18537)
!18539 = !DILocation(line: 55, column: 6, scope: !18532)
!18540 = !DILocation(line: 56, column: 25, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !18537, file: !2533, line: 55, column: 23)
!18542 = !DILocation(line: 56, column: 12, scope: !18541)
!18543 = !DILocation(line: 56, column: 19, scope: !18541)
!18544 = !DILocation(line: 57, column: 2, scope: !18541)
!18545 = !DILocation(line: 59, column: 23, scope: !18532)
!18546 = !DILocation(line: 59, column: 2, scope: !18532)
!18547 = !DILocation(line: 60, column: 1, scope: !18532)
!18548 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !18549, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18551)
!18549 = !DISubroutineType(types: !18550)
!18550 = !{null, !18381}
!18551 = !{!18552, !18553, !18554}
!18552 = !DILocalVariable(name: "node", arg: 1, scope: !18548, file: !137, line: 496, type: !18381)
!18553 = !DILocalVariable(name: "prev", scope: !18548, file: !137, line: 498, type: !18393)
!18554 = !DILocalVariable(name: "next", scope: !18548, file: !137, line: 499, type: !18393)
!18555 = !DILocation(line: 0, scope: !18548)
!18556 = !DILocation(line: 498, column: 34, scope: !18548)
!18557 = !DILocation(line: 499, column: 34, scope: !18548)
!18558 = !DILocation(line: 501, column: 8, scope: !18548)
!18559 = !DILocation(line: 501, column: 13, scope: !18548)
!18560 = !DILocation(line: 502, column: 8, scope: !18548)
!18561 = !DILocation(line: 502, column: 13, scope: !18548)
!18562 = !DILocation(line: 503, column: 2, scope: !18548)
!18563 = !DILocation(line: 504, column: 1, scope: !18548)
!18564 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !18549, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18565)
!18565 = !{!18566}
!18566 = !DILocalVariable(name: "node", arg: 1, scope: !18564, file: !137, line: 211, type: !18381)
!18567 = !DILocation(line: 0, scope: !18564)
!18568 = !DILocation(line: 213, column: 8, scope: !18564)
!18569 = !DILocation(line: 213, column: 13, scope: !18564)
!18570 = !DILocation(line: 214, column: 8, scope: !18564)
!18571 = !DILocation(line: 214, column: 13, scope: !18564)
!18572 = !DILocation(line: 215, column: 1, scope: !18564)
!18573 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2533, file: !2533, line: 183, type: !18574, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18578)
!18574 = !DISubroutineType(types: !18575)
!18575 = !{!107, !18576}
!18576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18577, size: 32)
!18577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!18578 = !{!18579, !18580, !18581, !18583}
!18579 = !DILocalVariable(name: "timeout", arg: 1, scope: !18573, file: !2533, line: 183, type: !18576)
!18580 = !DILocalVariable(name: "ticks", scope: !18573, file: !2533, line: 185, type: !107)
!18581 = !DILocalVariable(name: "__i", scope: !18582, file: !2533, line: 187, type: !18236)
!18582 = distinct !DILexicalBlock(scope: !18573, file: !2533, line: 187, column: 2)
!18583 = !DILocalVariable(name: "__key", scope: !18582, file: !2533, line: 187, type: !18236)
!18584 = !DILocation(line: 0, scope: !18573)
!18585 = !DILocation(line: 0, scope: !18582)
!18586 = !DILocation(line: 0, scope: !18264, inlinedAt: !18587)
!18587 = distinct !DILocation(line: 187, column: 2, scope: !18582)
!18588 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18589)
!18589 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18587)
!18590 = !DILocation(line: 0, scope: !18273, inlinedAt: !18589)
!18591 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18587)
!18592 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18587)
!18593 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18587)
!18594 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18587)
!18595 = !DILocation(line: 188, column: 11, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18597, file: !2533, line: 187, column: 24)
!18597 = distinct !DILexicalBlock(scope: !18582, file: !2533, line: 187, column: 2)
!18598 = !DILocation(line: 0, scope: !18337, inlinedAt: !18599)
!18599 = distinct !DILocation(line: 187, column: 2, scope: !18597)
!18600 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18599)
!18601 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18599)
!18602 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18599)
!18603 = !DILocation(line: 0, scope: !18351, inlinedAt: !18604)
!18604 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18599)
!18605 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18604)
!18606 = !DILocation(line: 191, column: 2, scope: !18573)
!18607 = distinct !DISubprogram(name: "timeout_rem", scope: !2533, file: !2533, line: 165, type: !18574, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18608)
!18608 = !{!18609, !18610, !18611}
!18609 = !DILocalVariable(name: "timeout", arg: 1, scope: !18607, file: !2533, line: 165, type: !18576)
!18610 = !DILocalVariable(name: "ticks", scope: !18607, file: !2533, line: 167, type: !107)
!18611 = !DILocalVariable(name: "t", scope: !18612, file: !2533, line: 173, type: !2506)
!18612 = distinct !DILexicalBlock(scope: !18607, file: !2533, line: 173, column: 2)
!18613 = !DILocation(line: 0, scope: !18607)
!18614 = !DILocation(line: 169, column: 6, scope: !18615)
!18615 = distinct !DILexicalBlock(scope: !18607, file: !2533, line: 169, column: 6)
!18616 = !DILocation(line: 169, column: 6, scope: !18607)
!18617 = !DILocation(line: 173, column: 28, scope: !18612)
!18618 = !DILocation(line: 0, scope: !18612)
!18619 = !DILocation(line: 173, column: 39, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18612, file: !2533, line: 173, column: 2)
!18621 = !DILocation(line: 173, column: 2, scope: !18612)
!18622 = !DILocation(line: 174, column: 15, scope: !18623)
!18623 = distinct !DILexicalBlock(scope: !18620, file: !2533, line: 173, column: 61)
!18624 = !DILocation(line: 174, column: 9, scope: !18623)
!18625 = !DILocation(line: 175, column: 15, scope: !18626)
!18626 = distinct !DILexicalBlock(scope: !18623, file: !2533, line: 175, column: 7)
!18627 = !DILocation(line: 175, column: 7, scope: !18623)
!18628 = !DILocation(line: 173, column: 52, scope: !18620)
!18629 = distinct !{!18629, !18621, !18630}
!18630 = !DILocation(line: 178, column: 2, scope: !18612)
!18631 = !DILocation(line: 180, column: 17, scope: !18607)
!18632 = !DILocation(line: 180, column: 15, scope: !18607)
!18633 = !DILocation(line: 180, column: 2, scope: !18607)
!18634 = !DILocation(line: 181, column: 1, scope: !18607)
!18635 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14602, file: !14602, line: 35, type: !18636, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18638)
!18636 = !DISubroutineType(types: !18637)
!18637 = !{!492, !18576}
!18638 = !{!18639}
!18639 = !DILocalVariable(name: "to", arg: 1, scope: !18635, file: !14602, line: 35, type: !18576)
!18640 = !DILocation(line: 0, scope: !18635)
!18641 = !DILocation(line: 37, column: 35, scope: !18635)
!18642 = !DILocation(line: 37, column: 10, scope: !18635)
!18643 = !DILocation(line: 37, column: 9, scope: !18635)
!18644 = !DILocation(line: 37, column: 2, scope: !18635)
!18645 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2533, file: !2533, line: 194, type: !18574, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18646)
!18646 = !{!18647, !18648, !18649, !18651}
!18647 = !DILocalVariable(name: "timeout", arg: 1, scope: !18645, file: !2533, line: 194, type: !18576)
!18648 = !DILocalVariable(name: "ticks", scope: !18645, file: !2533, line: 196, type: !107)
!18649 = !DILocalVariable(name: "__i", scope: !18650, file: !2533, line: 198, type: !18236)
!18650 = distinct !DILexicalBlock(scope: !18645, file: !2533, line: 198, column: 2)
!18651 = !DILocalVariable(name: "__key", scope: !18650, file: !2533, line: 198, type: !18236)
!18652 = !DILocation(line: 0, scope: !18645)
!18653 = !DILocation(line: 0, scope: !18650)
!18654 = !DILocation(line: 0, scope: !18264, inlinedAt: !18655)
!18655 = distinct !DILocation(line: 198, column: 2, scope: !18650)
!18656 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18657)
!18657 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18655)
!18658 = !DILocation(line: 0, scope: !18273, inlinedAt: !18657)
!18659 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18655)
!18660 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18655)
!18661 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18655)
!18662 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18655)
!18663 = !DILocation(line: 199, column: 11, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18665, file: !2533, line: 198, column: 24)
!18665 = distinct !DILexicalBlock(scope: !18650, file: !2533, line: 198, column: 2)
!18666 = !DILocation(line: 199, column: 23, scope: !18664)
!18667 = !DILocation(line: 0, scope: !18337, inlinedAt: !18668)
!18668 = distinct !DILocation(line: 198, column: 2, scope: !18665)
!18669 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18668)
!18670 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18668)
!18671 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18668)
!18672 = !DILocation(line: 0, scope: !18351, inlinedAt: !18673)
!18673 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18668)
!18674 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18673)
!18675 = !DILocation(line: 199, column: 21, scope: !18664)
!18676 = !DILocation(line: 202, column: 2, scope: !18645)
!18677 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2533, file: !2533, line: 205, type: !18370, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18678)
!18678 = !{!18679, !18680, !18682}
!18679 = !DILocalVariable(name: "ret", scope: !18677, file: !2533, line: 207, type: !116)
!18680 = !DILocalVariable(name: "__i", scope: !18681, file: !2533, line: 209, type: !18236)
!18681 = distinct !DILexicalBlock(scope: !18677, file: !2533, line: 209, column: 2)
!18682 = !DILocalVariable(name: "__key", scope: !18681, file: !2533, line: 209, type: !18236)
!18683 = !DILocation(line: 0, scope: !18677)
!18684 = !DILocation(line: 0, scope: !18681)
!18685 = !DILocation(line: 0, scope: !18264, inlinedAt: !18686)
!18686 = distinct !DILocation(line: 209, column: 2, scope: !18681)
!18687 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18688)
!18688 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18686)
!18689 = !DILocation(line: 0, scope: !18273, inlinedAt: !18688)
!18690 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18686)
!18691 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18686)
!18692 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18686)
!18693 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18686)
!18694 = !DILocation(line: 210, column: 9, scope: !18695)
!18695 = distinct !DILexicalBlock(scope: !18696, file: !2533, line: 209, column: 24)
!18696 = distinct !DILexicalBlock(scope: !18681, file: !2533, line: 209, column: 2)
!18697 = !DILocation(line: 0, scope: !18337, inlinedAt: !18698)
!18698 = distinct !DILocation(line: 209, column: 2, scope: !18696)
!18699 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18698)
!18700 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18698)
!18701 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18698)
!18702 = !DILocation(line: 0, scope: !18351, inlinedAt: !18703)
!18703 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18698)
!18704 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18703)
!18705 = !DILocation(line: 212, column: 2, scope: !18677)
!18706 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2533, file: !2533, line: 215, type: !12093, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18707)
!18707 = !{!18708, !18709, !18710, !18712, !18713, !18716, !18717}
!18708 = !DILocalVariable(name: "ticks", arg: 1, scope: !18706, file: !2533, line: 215, type: !116)
!18709 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18706, file: !2533, line: 215, type: !492)
!18710 = !DILocalVariable(name: "__i", scope: !18711, file: !2533, line: 217, type: !18236)
!18711 = distinct !DILexicalBlock(scope: !18706, file: !2533, line: 217, column: 2)
!18712 = !DILocalVariable(name: "__key", scope: !18711, file: !2533, line: 217, type: !18236)
!18713 = !DILocalVariable(name: "next_to", scope: !18714, file: !2533, line: 218, type: !105)
!18714 = distinct !DILexicalBlock(scope: !18715, file: !2533, line: 217, column: 24)
!18715 = distinct !DILexicalBlock(scope: !18711, file: !2533, line: 217, column: 2)
!18716 = !DILocalVariable(name: "sooner", scope: !18714, file: !2533, line: 219, type: !492)
!18717 = !DILocalVariable(name: "imminent", scope: !18714, file: !2533, line: 221, type: !492)
!18718 = !DILocation(line: 0, scope: !18706)
!18719 = !DILocation(line: 0, scope: !18711)
!18720 = !DILocation(line: 0, scope: !18264, inlinedAt: !18721)
!18721 = distinct !DILocation(line: 217, column: 2, scope: !18711)
!18722 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18723)
!18723 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18721)
!18724 = !DILocation(line: 0, scope: !18273, inlinedAt: !18723)
!18725 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18721)
!18726 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18721)
!18727 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18721)
!18728 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18721)
!18729 = !DILocation(line: 218, column: 17, scope: !18714)
!18730 = !DILocation(line: 0, scope: !18714)
!18731 = !DILocation(line: 221, column: 27, scope: !18714)
!18732 = !DILocation(line: 233, column: 17, scope: !18733)
!18733 = distinct !DILexicalBlock(scope: !18714, file: !2533, line: 233, column: 7)
!18734 = !DILocation(line: 234, column: 26, scope: !18735)
!18735 = distinct !DILexicalBlock(scope: !18733, file: !2533, line: 233, column: 56)
!18736 = !DILocation(line: 234, column: 4, scope: !18735)
!18737 = !DILocation(line: 235, column: 3, scope: !18735)
!18738 = !DILocation(line: 0, scope: !18337, inlinedAt: !18739)
!18739 = distinct !DILocation(line: 217, column: 2, scope: !18715)
!18740 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18739)
!18741 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18739)
!18742 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18739)
!18743 = !DILocation(line: 0, scope: !18351, inlinedAt: !18744)
!18744 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18739)
!18745 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18744)
!18746 = !DILocation(line: 237, column: 1, scope: !18706)
!18747 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2533, file: !2533, line: 239, type: !18748, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18750)
!18748 = !DISubroutineType(types: !18749)
!18749 = !{null, !116}
!18750 = !{!18751, !18752, !18753, !18755}
!18751 = !DILocalVariable(name: "ticks", arg: 1, scope: !18747, file: !2533, line: 239, type: !116)
!18752 = !DILocalVariable(name: "key", scope: !18747, file: !2533, line: 245, type: !18236)
!18753 = !DILocalVariable(name: "t", scope: !18754, file: !2533, line: 262, type: !2506)
!18754 = distinct !DILexicalBlock(scope: !18747, file: !2533, line: 261, column: 67)
!18755 = !DILocalVariable(name: "dt", scope: !18754, file: !2533, line: 263, type: !105)
!18756 = !DILocation(line: 0, scope: !18747)
!18757 = !DILocation(line: 242, column: 2, scope: !18747)
!18758 = !DILocation(line: 0, scope: !18264, inlinedAt: !18759)
!18759 = distinct !DILocation(line: 245, column: 25, scope: !18747)
!18760 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18761)
!18761 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18759)
!18762 = !DILocation(line: 0, scope: !18273, inlinedAt: !18761)
!18763 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18759)
!18764 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18759)
!18765 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18759)
!18766 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18759)
!18767 = !DILocation(line: 261, column: 9, scope: !18747)
!18768 = !DILocation(line: 261, column: 17, scope: !18747)
!18769 = !DILocation(line: 261, column: 25, scope: !18747)
!18770 = !DILocation(line: 261, column: 37, scope: !18747)
!18771 = !DILocation(line: 261, column: 47, scope: !18747)
!18772 = !DILocation(line: 261, column: 44, scope: !18747)
!18773 = !DILocation(line: 261, column: 2, scope: !18747)
!18774 = !DILocation(line: 0, scope: !18754)
!18775 = !DILocation(line: 263, column: 12, scope: !18754)
!18776 = !DILocation(line: 265, column: 16, scope: !18754)
!18777 = !DILocation(line: 265, column: 13, scope: !18754)
!18778 = !DILocation(line: 266, column: 13, scope: !18754)
!18779 = !DILocation(line: 267, column: 3, scope: !18754)
!18780 = !DILocation(line: 0, scope: !18337, inlinedAt: !18781)
!18781 = distinct !DILocation(line: 269, column: 3, scope: !18754)
!18782 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18781)
!18783 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18781)
!18784 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18781)
!18785 = !DILocation(line: 0, scope: !18351, inlinedAt: !18786)
!18786 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18781)
!18787 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18786)
!18788 = !DILocation(line: 270, column: 6, scope: !18754)
!18789 = !DILocation(line: 270, column: 3, scope: !18754)
!18790 = !DILocation(line: 0, scope: !18264, inlinedAt: !18791)
!18791 = distinct !DILocation(line: 271, column: 9, scope: !18754)
!18792 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18793)
!18793 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18791)
!18794 = !DILocation(line: 0, scope: !18273, inlinedAt: !18793)
!18795 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18791)
!18796 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18791)
!18797 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18791)
!18798 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18791)
!18799 = !DILocation(line: 272, column: 22, scope: !18754)
!18800 = distinct !{!18800, !18773, !18801}
!18801 = !DILocation(line: 273, column: 2, scope: !18747)
!18802 = !DILocation(line: 276, column: 19, scope: !18803)
!18803 = distinct !DILexicalBlock(scope: !18804, file: !2533, line: 275, column: 23)
!18804 = distinct !DILexicalBlock(scope: !18747, file: !2533, line: 275, column: 6)
!18805 = !DILocation(line: 277, column: 2, scope: !18803)
!18806 = !DILocation(line: 279, column: 15, scope: !18747)
!18807 = !DILocation(line: 279, column: 12, scope: !18747)
!18808 = !DILocation(line: 280, column: 21, scope: !18747)
!18809 = !DILocation(line: 282, column: 24, scope: !18747)
!18810 = !DILocation(line: 282, column: 2, scope: !18747)
!18811 = !DILocation(line: 0, scope: !18337, inlinedAt: !18812)
!18812 = distinct !DILocation(line: 284, column: 2, scope: !18747)
!18813 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18812)
!18814 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18812)
!18815 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18812)
!18816 = !DILocation(line: 0, scope: !18351, inlinedAt: !18817)
!18817 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18812)
!18818 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18817)
!18819 = !DILocation(line: 285, column: 1, scope: !18747)
!18820 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2533, file: !2533, line: 287, type: !18821, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18823)
!18821 = !DISubroutineType(types: !18822)
!18822 = !{!109}
!18823 = !{!18824, !18825, !18827}
!18824 = !DILocalVariable(name: "t", scope: !18820, file: !2533, line: 289, type: !114)
!18825 = !DILocalVariable(name: "__i", scope: !18826, file: !2533, line: 291, type: !18236)
!18826 = distinct !DILexicalBlock(scope: !18820, file: !2533, line: 291, column: 2)
!18827 = !DILocalVariable(name: "__key", scope: !18826, file: !2533, line: 291, type: !18236)
!18828 = !DILocation(line: 0, scope: !18820)
!18829 = !DILocation(line: 0, scope: !18826)
!18830 = !DILocation(line: 0, scope: !18264, inlinedAt: !18831)
!18831 = distinct !DILocation(line: 291, column: 2, scope: !18826)
!18832 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18833)
!18833 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18831)
!18834 = !DILocation(line: 0, scope: !18273, inlinedAt: !18833)
!18835 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18831)
!18836 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18831)
!18837 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18831)
!18838 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18831)
!18839 = !DILocation(line: 292, column: 7, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18841, file: !2533, line: 291, column: 24)
!18841 = distinct !DILexicalBlock(scope: !18826, file: !2533, line: 291, column: 2)
!18842 = !DILocation(line: 292, column: 19, scope: !18840)
!18843 = !DILocation(line: 0, scope: !18337, inlinedAt: !18844)
!18844 = distinct !DILocation(line: 291, column: 2, scope: !18841)
!18845 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18844)
!18846 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18844)
!18847 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18844)
!18848 = !DILocation(line: 0, scope: !18351, inlinedAt: !18849)
!18849 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18844)
!18850 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18849)
!18851 = !DILocation(line: 292, column: 17, scope: !18840)
!18852 = !DILocation(line: 294, column: 2, scope: !18820)
!18853 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2533, file: !2533, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !397)
!18854 = !DILocation(line: 300, column: 19, scope: !18853)
!18855 = !DILocation(line: 300, column: 9, scope: !18853)
!18856 = !DILocation(line: 300, column: 2, scope: !18853)
!18857 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2533, file: !2533, line: 306, type: !18821, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !397)
!18858 = !DILocation(line: 308, column: 9, scope: !18857)
!18859 = !DILocation(line: 308, column: 2, scope: !18857)
!18860 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2533, file: !2533, line: 319, type: !7880, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18861)
!18861 = !{!18862, !18863, !18864, !18865}
!18862 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18860, file: !2533, line: 319, type: !113)
!18863 = !DILocalVariable(name: "start_cycles", scope: !18860, file: !2533, line: 328, type: !113)
!18864 = !DILocalVariable(name: "cycles_to_wait", scope: !18860, file: !2533, line: 331, type: !113)
!18865 = !DILocalVariable(name: "current_cycles", scope: !18866, file: !2533, line: 338, type: !113)
!18866 = distinct !DILexicalBlock(scope: !18867, file: !2533, line: 337, column: 11)
!18867 = distinct !DILexicalBlock(scope: !18868, file: !2533, line: 337, column: 2)
!18868 = distinct !DILexicalBlock(scope: !18860, file: !2533, line: 337, column: 2)
!18869 = !DILocation(line: 0, scope: !18860)
!18870 = !DILocation(line: 322, column: 19, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18860, file: !2533, line: 322, column: 6)
!18872 = !DILocation(line: 322, column: 6, scope: !18860)
!18873 = !DILocation(line: 328, column: 26, scope: !18860)
!18874 = !DILocation(line: 333, column: 43, scope: !18860)
!18875 = !DILocation(line: 337, column: 2, scope: !18860)
!18876 = !DILocation(line: 338, column: 29, scope: !18866)
!18877 = !DILocation(line: 0, scope: !18866)
!18878 = !DILocation(line: 341, column: 23, scope: !18879)
!18879 = distinct !DILexicalBlock(scope: !18866, file: !2533, line: 341, column: 7)
!18880 = !DILocation(line: 341, column: 39, scope: !18879)
!18881 = !DILocation(line: 349, column: 1, scope: !18860)
!18882 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !397)
!18883 = !DILocation(line: 1677, column: 9, scope: !18882)
!18884 = !DILocation(line: 1677, column: 2, scope: !18882)
!18885 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3466, file: !3466, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !397)
!18886 = !DILocation(line: 26, column: 9, scope: !18885)
!18887 = !DILocation(line: 26, column: 2, scope: !18885)
!18888 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2533, file: !2533, line: 364, type: !18889, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !18891)
!18889 = !DISubroutineType(types: !18890)
!18890 = !{!114, !18226}
!18891 = !{!18892, !18893}
!18892 = !DILocalVariable(name: "timeout", arg: 1, scope: !18888, file: !2533, line: 364, type: !18226)
!18893 = !DILocalVariable(name: "dt", scope: !18888, file: !2533, line: 366, type: !107)
!18894 = !DILocation(line: 0, scope: !18888)
!18895 = !DILocation(line: 368, column: 6, scope: !18888)
!18896 = !DILocation(line: 371, column: 10, scope: !18897)
!18897 = distinct !DILexicalBlock(scope: !18898, file: !2533, line: 370, column: 47)
!18898 = distinct !DILexicalBlock(scope: !18899, file: !2533, line: 370, column: 13)
!18899 = distinct !DILexicalBlock(scope: !18888, file: !2533, line: 368, column: 6)
!18900 = !DILocation(line: 371, column: 3, scope: !18897)
!18901 = !DILocation(line: 376, column: 58, scope: !18902)
!18902 = distinct !DILexicalBlock(scope: !18903, file: !2533, line: 376, column: 7)
!18903 = distinct !DILexicalBlock(scope: !18898, file: !2533, line: 372, column: 9)
!18904 = !DILocation(line: 376, column: 7, scope: !18903)
!18905 = !DILocation(line: 376, column: 43, scope: !18902)
!18906 = !DILocation(line: 377, column: 4, scope: !18907)
!18907 = distinct !DILexicalBlock(scope: !18902, file: !2533, line: 376, column: 64)
!18908 = !DILocation(line: 379, column: 10, scope: !18903)
!18909 = !DILocation(line: 379, column: 33, scope: !18903)
!18910 = !DILocation(line: 379, column: 31, scope: !18903)
!18911 = !DILocation(line: 379, column: 3, scope: !18903)
!18912 = !DILocation(line: 0, scope: !18899)
!18913 = !DILocation(line: 381, column: 1, scope: !18888)
!18914 = distinct !DISubprogram(name: "boot_banner", scope: !18915, file: !18915, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !397)
!18915 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18916 = !DILocation(line: 34, column: 2, scope: !18914)
!18917 = !DILocation(line: 36, column: 1, scope: !18914)
!18918 = distinct !DISubprogram(name: "statics_init", scope: !2563, file: !2563, line: 21, type: !2569, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !18919)
!18919 = !{!18920, !18921}
!18920 = !DILocalVariable(name: "unused", arg: 1, scope: !18918, file: !2563, line: 21, type: !2571)
!18921 = !DILocalVariable(name: "h", scope: !18922, file: !2563, line: 24, type: !18923)
!18922 = distinct !DILexicalBlock(scope: !18918, file: !2563, line: 24, column: 2)
!18923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18924, size: 32)
!18924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !18925)
!18925 = !{!18926, !18932, !18938}
!18926 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18924, file: !122, line: 5074, baseType: !18927, size: 96)
!18927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !18928)
!18928 = !{!18929, !18930, !18931}
!18929 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18927, file: !226, line: 57, baseType: !229, size: 32)
!18930 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18927, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!18931 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18927, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!18932 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18924, file: !122, line: 5075, baseType: !18933, size: 64, offset: 96)
!18933 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !18934)
!18934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !18935)
!18935 = !{!18936}
!18936 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18934, file: !163, line: 232, baseType: !18937, size: 64)
!18937 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2549)
!18938 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18924, file: !122, line: 5076, baseType: !18939, size: 32, offset: 160)
!18939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !18940)
!18940 = !{!18941}
!18941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !18939, file: !236, line: 52, baseType: !22, size: 32)
!18942 = !DILocation(line: 0, scope: !18918)
!18943 = !DILocation(line: 0, scope: !18922)
!18944 = !DILocation(line: 24, column: 2, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18946, file: !2563, line: 24, column: 2)
!18946 = distinct !DILexicalBlock(scope: !18947, file: !2563, line: 24, column: 2)
!18947 = distinct !DILexicalBlock(scope: !18922, file: !2563, line: 24, column: 2)
!18948 = !DILocation(line: 24, column: 2, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18950, file: !2563, line: 24, column: 2)
!18950 = distinct !DILexicalBlock(scope: !18945, file: !2563, line: 24, column: 2)
!18951 = !DILocation(line: 24, column: 2, scope: !18946)
!18952 = !DILocation(line: 24, column: 2, scope: !18922)
!18953 = !DILocation(line: 52, column: 2, scope: !18918)
!18954 = !DILocation(line: 49, column: 27, scope: !18955)
!18955 = distinct !DILexicalBlock(scope: !18956, file: !2563, line: 48, column: 3)
!18956 = distinct !DILexicalBlock(scope: !18947, file: !2563, line: 24, column: 36)
!18957 = !DILocation(line: 49, column: 45, scope: !18955)
!18958 = !DILocation(line: 49, column: 4, scope: !18955)
!18959 = !DILocation(line: 24, column: 2, scope: !18947)
!18960 = !DILocation(line: 24, column: 2, scope: !18950)
!18961 = distinct !{!18961, !18952, !18962}
!18962 = !DILocation(line: 51, column: 2, scope: !18922)
!18963 = distinct !DISubprogram(name: "k_heap_init", scope: !2563, file: !2563, line: 13, type: !18964, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !18966)
!18964 = !DISubroutineType(types: !18965)
!18965 = !{null, !18923, !104, !111}
!18966 = !{!18967, !18968, !18969}
!18967 = !DILocalVariable(name: "h", arg: 1, scope: !18963, file: !2563, line: 13, type: !18923)
!18968 = !DILocalVariable(name: "mem", arg: 2, scope: !18963, file: !2563, line: 13, type: !104)
!18969 = !DILocalVariable(name: "bytes", arg: 3, scope: !18963, file: !2563, line: 13, type: !111)
!18970 = !DILocation(line: 0, scope: !18963)
!18971 = !DILocation(line: 15, column: 19, scope: !18963)
!18972 = !DILocation(line: 15, column: 2, scope: !18963)
!18973 = !DILocation(line: 16, column: 20, scope: !18963)
!18974 = !DILocation(line: 16, column: 2, scope: !18963)
!18975 = !DILocation(line: 19, column: 1, scope: !18963)
!18976 = distinct !DISubprogram(name: "z_waitq_init", scope: !14534, file: !14534, line: 47, type: !18977, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !18980)
!18977 = !DISubroutineType(types: !18978)
!18978 = !{null, !18979}
!18979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18933, size: 32)
!18980 = !{!18981}
!18981 = !DILocalVariable(name: "w", arg: 1, scope: !18976, file: !14534, line: 47, type: !18979)
!18982 = !DILocation(line: 0, scope: !18976)
!18983 = !DILocation(line: 49, column: 21, scope: !18976)
!18984 = !DILocation(line: 49, column: 2, scope: !18976)
!18985 = !DILocation(line: 50, column: 1, scope: !18976)
!18986 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !18987, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !18990)
!18987 = !DISubroutineType(types: !18988)
!18988 = !{null, !18989}
!18989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18937, size: 32)
!18990 = !{!18991}
!18991 = !DILocalVariable(name: "list", arg: 1, scope: !18986, file: !137, line: 197, type: !18989)
!18992 = !DILocation(line: 0, scope: !18986)
!18993 = !DILocation(line: 199, column: 8, scope: !18986)
!18994 = !DILocation(line: 199, column: 13, scope: !18986)
!18995 = !DILocation(line: 200, column: 8, scope: !18986)
!18996 = !DILocation(line: 200, column: 13, scope: !18986)
!18997 = !DILocation(line: 201, column: 1, scope: !18986)
!18998 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2563, file: !2563, line: 64, type: !18999, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19005)
!18999 = !DISubroutineType(types: !19000)
!19000 = !{!104, !18923, !111, !111, !19001}
!19001 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !19002)
!19002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !19003)
!19003 = !{!19004}
!19004 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19002, file: !108, line: 66, baseType: !107, size: 64)
!19005 = !{!19006, !19007, !19008, !19009, !19010, !19011, !19012, !19013, !19018}
!19006 = !DILocalVariable(name: "h", arg: 1, scope: !18998, file: !2563, line: 64, type: !18923)
!19007 = !DILocalVariable(name: "align", arg: 2, scope: !18998, file: !2563, line: 64, type: !111)
!19008 = !DILocalVariable(name: "bytes", arg: 3, scope: !18998, file: !2563, line: 64, type: !111)
!19009 = !DILocalVariable(name: "timeout", arg: 4, scope: !18998, file: !2563, line: 65, type: !19001)
!19010 = !DILocalVariable(name: "now", scope: !18998, file: !2563, line: 67, type: !109)
!19011 = !DILocalVariable(name: "end", scope: !18998, file: !2563, line: 67, type: !109)
!19012 = !DILocalVariable(name: "ret", scope: !18998, file: !2563, line: 68, type: !104)
!19013 = !DILocalVariable(name: "key", scope: !18998, file: !2563, line: 72, type: !19014)
!19014 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !19015)
!19015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !19016)
!19016 = !{!19017}
!19017 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19015, file: !236, line: 33, baseType: !105, size: 32)
!19018 = !DILocalVariable(name: "blocked_alloc", scope: !18998, file: !2563, line: 78, type: !492)
!19019 = !DILocation(line: 0, scope: !18998)
!19020 = !DILocation(line: 67, column: 21, scope: !18998)
!19021 = !DILocation(line: 70, column: 8, scope: !18998)
!19022 = !DILocation(line: 72, column: 41, scope: !18998)
!19023 = !DILocalVariable(name: "l", arg: 1, scope: !19024, file: !236, line: 136, type: !19027)
!19024 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !19025, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19028)
!19025 = !DISubroutineType(types: !19026)
!19026 = !{!19014, !19027}
!19027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18939, size: 32)
!19028 = !{!19023, !19029}
!19029 = !DILocalVariable(name: "k", scope: !19024, file: !236, line: 139, type: !19014)
!19030 = !DILocation(line: 0, scope: !19024, inlinedAt: !19031)
!19031 = distinct !DILocation(line: 72, column: 25, scope: !18998)
!19032 = !DILocation(line: 55, column: 2, scope: !19033, inlinedAt: !19037)
!19033 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7467, file: !7467, line: 42, type: !7468, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19034)
!19034 = !{!19035, !19036}
!19035 = !DILocalVariable(name: "key", scope: !19033, file: !7467, line: 44, type: !32)
!19036 = !DILocalVariable(name: "tmp", scope: !19033, file: !7467, line: 53, type: !32)
!19037 = distinct !DILocation(line: 145, column: 10, scope: !19024, inlinedAt: !19031)
!19038 = !{i64 2226551}
!19039 = !DILocation(line: 0, scope: !19033, inlinedAt: !19037)
!19040 = !DILocation(line: 148, column: 2, scope: !19041, inlinedAt: !19031)
!19041 = distinct !DILexicalBlock(scope: !19042, file: !236, line: 148, column: 2)
!19042 = distinct !DILexicalBlock(scope: !19024, file: !236, line: 148, column: 2)
!19043 = !DILocation(line: 148, column: 2, scope: !19042, inlinedAt: !19031)
!19044 = !DILocation(line: 148, column: 2, scope: !19045, inlinedAt: !19031)
!19045 = distinct !DILexicalBlock(scope: !19041, file: !236, line: 148, column: 2)
!19046 = !DILocation(line: 160, column: 2, scope: !19024, inlinedAt: !19031)
!19047 = !DILocation(line: 1031, column: 3, scope: !19048, inlinedAt: !19051)
!19048 = distinct !DISubprogram(name: "__get_IPSR", scope: !7785, file: !7785, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19049)
!19049 = !{!19050}
!19050 = !DILocalVariable(name: "result", scope: !19048, file: !7785, line: 1029, type: !113)
!19051 = distinct !DILocation(line: 48, column: 10, scope: !19052, inlinedAt: !19053)
!19052 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8832, file: !8832, line: 46, type: !8833, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !397)
!19053 = distinct !DILocation(line: 76, column: 2, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19055, file: !2563, line: 76, column: 2)
!19055 = distinct !DILexicalBlock(scope: !18998, file: !2563, line: 76, column: 2)
!19056 = !{i64 3544164}
!19057 = !DILocation(line: 0, scope: !19048, inlinedAt: !19051)
!19058 = !DILocation(line: 48, column: 9, scope: !19052, inlinedAt: !19053)
!19059 = !DILocation(line: 76, column: 2, scope: !19054)
!19060 = !DILocation(line: 81, column: 9, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !18998, file: !2563, line: 80, column: 22)
!19062 = !DILocation(line: 83, column: 9, scope: !19061)
!19063 = !DILocation(line: 85, column: 12, scope: !19064)
!19064 = distinct !DILexicalBlock(scope: !19061, file: !2563, line: 84, column: 7)
!19065 = !DILocation(line: 85, column: 21, scope: !19064)
!19066 = !DILocation(line: 76, column: 2, scope: !19067)
!19067 = distinct !DILexicalBlock(scope: !19054, file: !2563, line: 76, column: 2)
!19068 = !DILocation(line: 85, column: 30, scope: !19064)
!19069 = !DILocation(line: 85, column: 37, scope: !19064)
!19070 = !DILocation(line: 84, column: 7, scope: !19061)
!19071 = !DILocation(line: 99, column: 10, scope: !19061)
!19072 = !DILocation(line: 0, scope: !19024, inlinedAt: !19073)
!19073 = distinct !DILocation(line: 101, column: 9, scope: !19061)
!19074 = !DILocation(line: 55, column: 2, scope: !19033, inlinedAt: !19075)
!19075 = distinct !DILocation(line: 145, column: 10, scope: !19024, inlinedAt: !19073)
!19076 = !DILocation(line: 0, scope: !19033, inlinedAt: !19075)
!19077 = !DILocation(line: 148, column: 2, scope: !19041, inlinedAt: !19073)
!19078 = !DILocation(line: 148, column: 2, scope: !19042, inlinedAt: !19073)
!19079 = !DILocation(line: 148, column: 2, scope: !19045, inlinedAt: !19073)
!19080 = !DILocation(line: 160, column: 2, scope: !19024, inlinedAt: !19073)
!19081 = distinct !{!19081, !19082, !19083}
!19082 = !DILocation(line: 80, column: 2, scope: !18998)
!19083 = !DILocation(line: 102, column: 2, scope: !18998)
!19084 = !DILocalVariable(name: "key", arg: 2, scope: !19085, file: !236, line: 190, type: !19014)
!19085 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !19086, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19088)
!19086 = !DISubroutineType(types: !19087)
!19087 = !{null, !19027, !19014}
!19088 = !{!19089, !19084}
!19089 = !DILocalVariable(name: "l", arg: 1, scope: !19085, file: !236, line: 189, type: !19027)
!19090 = !DILocation(line: 0, scope: !19085, inlinedAt: !19091)
!19091 = distinct !DILocation(line: 106, column: 2, scope: !18998)
!19092 = !DILocation(line: 194, column: 2, scope: !19093, inlinedAt: !19091)
!19093 = distinct !DILexicalBlock(scope: !19094, file: !236, line: 194, column: 2)
!19094 = distinct !DILexicalBlock(scope: !19085, file: !236, line: 194, column: 2)
!19095 = !DILocation(line: 194, column: 2, scope: !19094, inlinedAt: !19091)
!19096 = !DILocation(line: 194, column: 2, scope: !19097, inlinedAt: !19091)
!19097 = distinct !DILexicalBlock(scope: !19093, file: !236, line: 194, column: 2)
!19098 = !DILocalVariable(name: "key", arg: 1, scope: !19099, file: !7467, line: 84, type: !32)
!19099 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7467, file: !7467, line: 84, type: !7478, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19100)
!19100 = !{!19098}
!19101 = !DILocation(line: 0, scope: !19099, inlinedAt: !19102)
!19102 = distinct !DILocation(line: 215, column: 2, scope: !19085, inlinedAt: !19091)
!19103 = !DILocation(line: 95, column: 2, scope: !19099, inlinedAt: !19102)
!19104 = !{i64 2227368}
!19105 = !DILocation(line: 107, column: 2, scope: !18998)
!19106 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2563, file: !2563, line: 110, type: !19107, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19109)
!19107 = !DISubroutineType(types: !19108)
!19108 = !{!104, !18923, !111, !19001}
!19109 = !{!19110, !19111, !19112, !19113}
!19110 = !DILocalVariable(name: "h", arg: 1, scope: !19106, file: !2563, line: 110, type: !18923)
!19111 = !DILocalVariable(name: "bytes", arg: 2, scope: !19106, file: !2563, line: 110, type: !111)
!19112 = !DILocalVariable(name: "timeout", arg: 3, scope: !19106, file: !2563, line: 110, type: !19001)
!19113 = !DILocalVariable(name: "ret", scope: !19106, file: !2563, line: 114, type: !104)
!19114 = !DILocation(line: 0, scope: !19106)
!19115 = !DILocation(line: 114, column: 14, scope: !19106)
!19116 = !DILocation(line: 118, column: 2, scope: !19106)
!19117 = distinct !DISubprogram(name: "k_heap_free", scope: !2563, file: !2563, line: 121, type: !19118, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !19120)
!19118 = !DISubroutineType(types: !19119)
!19119 = !{null, !18923, !104}
!19120 = !{!19121, !19122, !19123}
!19121 = !DILocalVariable(name: "h", arg: 1, scope: !19117, file: !2563, line: 121, type: !18923)
!19122 = !DILocalVariable(name: "mem", arg: 2, scope: !19117, file: !2563, line: 121, type: !104)
!19123 = !DILocalVariable(name: "key", scope: !19117, file: !2563, line: 123, type: !19014)
!19124 = !DILocation(line: 0, scope: !19117)
!19125 = !DILocation(line: 123, column: 41, scope: !19117)
!19126 = !DILocation(line: 0, scope: !19024, inlinedAt: !19127)
!19127 = distinct !DILocation(line: 123, column: 25, scope: !19117)
!19128 = !DILocation(line: 55, column: 2, scope: !19033, inlinedAt: !19129)
!19129 = distinct !DILocation(line: 145, column: 10, scope: !19024, inlinedAt: !19127)
!19130 = !DILocation(line: 0, scope: !19033, inlinedAt: !19129)
!19131 = !DILocation(line: 148, column: 2, scope: !19041, inlinedAt: !19127)
!19132 = !DILocation(line: 148, column: 2, scope: !19042, inlinedAt: !19127)
!19133 = !DILocation(line: 148, column: 2, scope: !19045, inlinedAt: !19127)
!19134 = !DILocation(line: 160, column: 2, scope: !19024, inlinedAt: !19127)
!19135 = !DILocation(line: 125, column: 20, scope: !19117)
!19136 = !DILocation(line: 125, column: 2, scope: !19117)
!19137 = !DILocation(line: 128, column: 60, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19117, file: !2563, line: 128, column: 6)
!19139 = !DILocation(line: 128, column: 43, scope: !19138)
!19140 = !DILocation(line: 128, column: 68, scope: !19138)
!19141 = !DILocation(line: 128, column: 6, scope: !19117)
!19142 = !DILocation(line: 129, column: 3, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19138, file: !2563, line: 128, column: 74)
!19144 = !DILocation(line: 130, column: 2, scope: !19143)
!19145 = !DILocation(line: 0, scope: !19085, inlinedAt: !19146)
!19146 = distinct !DILocation(line: 131, column: 3, scope: !19147)
!19147 = distinct !DILexicalBlock(scope: !19138, file: !2563, line: 130, column: 9)
!19148 = !DILocation(line: 194, column: 2, scope: !19093, inlinedAt: !19146)
!19149 = !DILocation(line: 194, column: 2, scope: !19094, inlinedAt: !19146)
!19150 = !DILocation(line: 194, column: 2, scope: !19097, inlinedAt: !19146)
!19151 = !DILocation(line: 0, scope: !19099, inlinedAt: !19152)
!19152 = distinct !DILocation(line: 215, column: 2, scope: !19085, inlinedAt: !19146)
!19153 = !DILocation(line: 95, column: 2, scope: !19099, inlinedAt: !19152)
!19154 = !DILocation(line: 133, column: 1, scope: !19117)
