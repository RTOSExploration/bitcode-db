; ModuleID = 'build/adafruit_feather_stm32f405/kernel/condition_variables/condvar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236485 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236465 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236455 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236555 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236545 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236535 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236525 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236515 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236505 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236495 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237836 to i8*), void (i8*)* inttoptr (i32 134236475 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.k_mutex* @count_mutex to i8*), i8* bitcast (%struct.k_condvar* @count_threshold_cv to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@count_mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.count_mutex", align 4, !dbg !25
@count_threshold_cv = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.count_threshold_cv", align 4, !dbg !114
@count = internal unnamed_addr global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [47 x i8] c"%s: thread %ld, count = %d  Threshold reached.\00", align 1
@__func__.inc_count = private unnamed_addr constant [10 x i8] c"inc_count\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Just sent signal.\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s: thread %ld, count = %d, unlocking mutex\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Starting %s: thread %ld\0A\00", align 1
@__func__.watch_count = private unnamed_addr constant [12 x i8] c"watch_count\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"%s: thread %ld Count= %d. Going into wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s: thread %ld Condition signal received. Count= %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"%s: thread %ld Updating the value of count...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"%s: thread %ld count now = %d.\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"%s: thread %ld Unlocking mutex.\0A\00", align 1
@t = internal global [3 x %struct.k_thread] zeroinitializer, align 8, !dbg !154
@tstacks = dso_local global [3 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.9 = private unnamed_addr constant [77 x i8] c"Main(): Waited and joined with %d threads. Final value of count = %d. Done.\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.12 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.14 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.15 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.20 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.26 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.35 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.37 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.36 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.40 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.44 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.45 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.47 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.48 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.49 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.53 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.54 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.55 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.66 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.59 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.60 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.61 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.62 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.64 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26.57 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35.56 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.78 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.79 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.80 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.81 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.86 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.87 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.88 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.89 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.99, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.98 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.99 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.102 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.104 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.4.100 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !754
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !737
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.100, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !710
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !770
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !772
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !788
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !825
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !919
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !908
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !960
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1026
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1312
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1203
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1314
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1280
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1220
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1327
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1286
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1284
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1226
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1329
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1288
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1232
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1331
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1294
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1292
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1238
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1333
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1298
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1296
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1244
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !808
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1335
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1302
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1250
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1337
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1306
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1304
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1256
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.8.129 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1339
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1310
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1308
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1262
@.str.9.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.121 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.117 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.120 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.116 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.118 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.119 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.133 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1341
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.1.136 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1497
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1552
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1495
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1554
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1486
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1488
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1541
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1544
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1546
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1549
@.str.2.138 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.139 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.140 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.141 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.142 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.145 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.147 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.148 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !892
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1565
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1676
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1678
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1674
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1669
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1643
@.str.152 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.153 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.154 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.155 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.156 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.157 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1680
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1201
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1218
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1224
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1230
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1236
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1242
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1248
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1254
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.129, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1260
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1770
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1810
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1813
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1820
@.str.189 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.193 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.194 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.195 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.199 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.200 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.201 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.202 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.203 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.198 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.197 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.199, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.200, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.201, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.202, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.203, i32 0, i32 0)], align 4
@.str.205 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.205, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1827
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2052
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2040
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2047
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2059
@.str.5.211 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2064
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.215 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.222, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.223, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.225, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.219, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.226, i32 0, i32 0)], align 4, !dbg !2092
@.str.220 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.221 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.222 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.223 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.224 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.225 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.219 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.226 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2207
@.str.8.218 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.229 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.230 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.231 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.232 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.236 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.237 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.240 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.241 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.250 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.251 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.252 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.258 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.259 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.260 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.261 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2220
@.str.4.269 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.262 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.263 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.264 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.265 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.266 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2331
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2442
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2445
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2447
@.str.270 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.292 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.277 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.299 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.311 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.280 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.306 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.276 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.316 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.317 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.325 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.326 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.327 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.330 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.271 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.272 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.273 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.274 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.275 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.279 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.296 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.307 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.308 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2049
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2057
@.str.23.320 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.335 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2449
@.str.336 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.337 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.338 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.339 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.340 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.341 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.351 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.352 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.353 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.354 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2474
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2504
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2509
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1914
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2507
@.str.4.355 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.356 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.357 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.361 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.362 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.380 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3092 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3150, !srcloc !3153
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3200, !srcloc !3201
  ret void, !dbg !3202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @inc_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3205 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3209, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i8* undef, metadata !3210, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i8* undef, metadata !3211, metadata !DIExpression()), !dbg !3214
  %4 = ptrtoint i8* %0 to i32, !dbg !3215
  call void @llvm.dbg.value(metadata i32 %4, metadata !3213, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i32 0, metadata !3212, metadata !DIExpression()), !dbg !3214
  br label %5, !dbg !3216

5:                                                ; preds = %3, %12
  %6 = phi i32 [ 0, %3 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3212, metadata !DIExpression()), !dbg !3214
  tail call fastcc void @k_mutex_lock() #24, !dbg !3218
  %7 = load i32, i32* @count, align 4, !dbg !3221
  %8 = add nsw i32 %7, 1, !dbg !3221
  store i32 %8, i32* @count, align 4, !dbg !3221
  %9 = icmp eq i32 %8, 12, !dbg !3222
  br i1 %9, label %10, label %12, !dbg !3224

10:                                               ; preds = %5
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef 12) #25, !dbg !3225
  tail call fastcc void @k_condvar_signal() #24, !dbg !3227
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3228
  %11 = load i32, i32* @count, align 4, !dbg !3229
  br label %12, !dbg !3230

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %11, %10 ], [ %8, %5 ], !dbg !3229
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef %13) #25, !dbg !3231
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3232
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3233
  %14 = add nuw nsw i32 %6, 1, !dbg !3234
  call void @llvm.dbg.value(metadata i32 %14, metadata !3212, metadata !DIExpression()), !dbg !3214
  %15 = icmp eq i32 %14, 10, !dbg !3235
  br i1 %15, label %16, label %5, !dbg !3216, !llvm.loop !3236

16:                                               ; preds = %12
  ret void, !dbg !3238
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3239 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3250, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3249, metadata !DIExpression()), !dbg !3251
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3252, !srcloc !3254
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3255
  ret void, !dbg !3256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3257 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3262, metadata !DIExpression()), !dbg !3263
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3264, !srcloc !3266
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @count_threshold_cv) #25, !dbg !3267
  ret void, !dbg !3268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3269 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3273, metadata !DIExpression()), !dbg !3274
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3275, !srcloc !3277
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @count_mutex) #25, !dbg !3278
  ret void, !dbg !3279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3280 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3284, metadata !DIExpression()), !dbg !3285
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3286, !srcloc !3288
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3289
  ret void, !dbg !3290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @watch_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3291 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3293, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i8* undef, metadata !3294, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i8* undef, metadata !3295, metadata !DIExpression()), !dbg !3297
  %4 = ptrtoint i8* %0 to i32, !dbg !3298
  call void @llvm.dbg.value(metadata i32 %4, metadata !3296, metadata !DIExpression()), !dbg !3297
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3299
  tail call fastcc void @k_mutex_lock() #24, !dbg !3300
  %5 = load i32, i32* @count, align 4, !dbg !3301
  %6 = icmp slt i32 %5, 12, !dbg !3302
  br i1 %6, label %7, label %12, !dbg !3303

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %8) #25, !dbg !3304
  tail call fastcc void @k_condvar_wait() #24, !dbg !3306
  %9 = load i32, i32* @count, align 4, !dbg !3307
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %9) #25, !dbg !3308
  %10 = load i32, i32* @count, align 4, !dbg !3301
  %11 = icmp slt i32 %10, 12, !dbg !3302
  br i1 %11, label %7, label %12, !dbg !3303, !llvm.loop !3309

12:                                               ; preds = %7, %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3311
  %13 = load i32, i32* @count, align 4, !dbg !3312
  %14 = add nsw i32 %13, 125, !dbg !3312
  store i32 %14, i32* @count, align 4, !dbg !3312
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %14) #25, !dbg !3313
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3314
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3315
  ret void, !dbg !3316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3317 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3321, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3322, metadata !DIExpression()), !dbg !3324
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3325, !srcloc !3327
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @count_threshold_cv, %struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3328
  ret void, !dbg !3329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3330 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3332, metadata !DIExpression()), !dbg !3336
  call void @llvm.dbg.value(metadata i32 2, metadata !3333, metadata !DIExpression()), !dbg !3336
  call void @llvm.dbg.value(metadata i32 3, metadata !3334, metadata !DIExpression()), !dbg !3336
  store i32 0, i32* @count, align 4, !dbg !3337
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 0), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @watch_count, i8* noundef nonnull inttoptr (i32 1 to i8*)) #24, !dbg !3338
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 1), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 1, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 2 to i8*)) #24, !dbg !3339
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 2), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 2, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 3 to i8*)) #24, !dbg !3340
  call void @llvm.dbg.value(metadata i32 0, metadata !3335, metadata !DIExpression()), !dbg !3336
  br label %1, !dbg !3341

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3335, metadata !DIExpression()), !dbg !3336
  %3 = getelementptr inbounds [3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 %2, !dbg !3343
  tail call fastcc void @k_thread_join(%struct.k_thread* noundef nonnull %3) #24, !dbg !3346
  %4 = add nuw nsw i32 %2, 1, !dbg !3347
  call void @llvm.dbg.value(metadata i32 %4, metadata !3335, metadata !DIExpression()), !dbg !3336
  %5 = icmp eq i32 %4, 3, !dbg !3348
  br i1 %5, label %6, label %1, !dbg !3341, !llvm.loop !3349

6:                                                ; preds = %1
  %7 = load i32, i32* @count, align 4, !dbg !3351
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i32 0, i32 0), i32 noundef 3, i32 noundef %7) #25, !dbg !3352
  ret void, !dbg !3353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3) unnamed_addr #1 !dbg !3354 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3373, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3364, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3365, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 1024, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3367, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8* %3, metadata !3368, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8* null, metadata !3369, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i8* null, metadata !3370, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 10, metadata !3371, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 0, metadata !3372, metadata !DIExpression()), !dbg !3374
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3375, !srcloc !3377
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3378
  ret void, !dbg !3379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3380 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3385, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3384, metadata !DIExpression()), !dbg !3386
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3387, !srcloc !3389
  %2 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3390
  ret void, !dbg !3391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3392 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %0, metadata !3403, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %1, metadata !3404, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %2, metadata !3405, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %3, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %0, metadata !3408, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %0, metadata !3409, metadata !DIExpression()), !dbg !3470
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3471
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3412, metadata !DIExpression()), !dbg !3472
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3473
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3473
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 0, metadata !3415, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 0, metadata !3416, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 0, metadata !3417, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 -1, metadata !3418, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 0, metadata !3421, metadata !DIExpression()), !dbg !3470
  %12 = and i32 %2, 4, !dbg !3475
  %13 = icmp eq i32 %12, 0, !dbg !3476
  call void @llvm.dbg.value(metadata i1 %13, metadata !3422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3470
  %14 = lshr i32 %2, 3, !dbg !3477
  %15 = and i32 %14, 7, !dbg !3477
  %16 = add nuw nsw i32 %15, 1, !dbg !3478
  call void @llvm.dbg.value(metadata i32 %16, metadata !3423, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 0, metadata !3424, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %0, metadata !3425, metadata !DIExpression()), !dbg !3470
  %17 = ptrtoint i8* %0 to i32, !dbg !3479
  %18 = and i32 %17, 3, !dbg !3481
  %19 = icmp eq i32 %18, 0, !dbg !3481
  br i1 %19, label %20, label %320, !dbg !3482

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3483
  call void @llvm.dbg.value(metadata i8* %21, metadata !3409, metadata !DIExpression()), !dbg !3470
  %22 = icmp eq i8* %0, null, !dbg !3484
  %23 = and i32 %1, 7, !dbg !3486
  %24 = sub nuw nsw i32 8, %23, !dbg !3486
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3486
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3486
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3486
  call void @llvm.dbg.value(metadata i32 %27, metadata !3404, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %26, metadata !3409, metadata !DIExpression()), !dbg !3470
  br i1 %22, label %33, label %28, !dbg !3487

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3489
  %30 = sub i32 4, %17, !dbg !3489
  %31 = add i32 %30, %29, !dbg !3490
  %32 = icmp ugt i32 %31, %27, !dbg !3491
  br i1 %32, label %320, label %33, !dbg !3492

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3493
  call void @llvm.dbg.value(metadata i8* %34, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %3, metadata !3420, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 4, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 4, metadata !3410, metadata !DIExpression()), !dbg !3470
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3494

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %42, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %43, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %44, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %45, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %72, metadata !3418, metadata !DIExpression()), !dbg !3470
  br i1 %46, label %73, label %47, !dbg !3495

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3496
  %49 = zext i1 %48 to i32, !dbg !3500
  %50 = add nsw i32 %72, %49, !dbg !3500
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3500
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %52, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %51, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %50, metadata !3418, metadata !DIExpression()), !dbg !3470
  br label %53, !dbg !3501

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %40, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %58, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %57, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %56, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %54, metadata !3418, metadata !DIExpression()), !dbg !3470
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %60, metadata !3406, metadata !DIExpression()), !dbg !3470
  %61 = load i8, i8* %60, align 1, !dbg !3504
  %62 = icmp eq i8 %61, 0, !dbg !3505
  br i1 %62, label %226, label %63, !dbg !3506, !llvm.loop !3507

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3495

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3510

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3421, metadata !DIExpression()), !dbg !3470
  %75 = add nsw i32 %72, -1, !dbg !3511
  call void @llvm.dbg.value(metadata i32 %75, metadata !3418, metadata !DIExpression()), !dbg !3470
  br label %53, !dbg !3512

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3513

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 4, metadata !3410, metadata !DIExpression()), !dbg !3470
  br label %53, !dbg !3514

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 4, metadata !3410, metadata !DIExpression()), !dbg !3470
  br label %53, !dbg !3515

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3516
  %81 = icmp eq i8 %80, 108, !dbg !3518
  br i1 %81, label %82, label %109, !dbg !3519

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3520
  %84 = load i8, i8* %83, align 1, !dbg !3520
  %85 = icmp eq i8 %84, 108, !dbg !3523
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3524
  %89 = add i32 %88, 7, !dbg !3524
  %90 = and i32 %89, -8, !dbg !3524
  %91 = inttoptr i32 %90 to i8*, !dbg !3524
  %92 = inttoptr i32 %90 to double*, !dbg !3524
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3524
  %94 = load double, double* %92, align 8, !dbg !3524
  call void @llvm.dbg.value(metadata i8* %93, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 8, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 8, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata double %94, metadata !3438, metadata !DIExpression()), !dbg !3526
  %95 = ptrtoint i8* %43 to i32, !dbg !3527
  %96 = add i32 %95, 7, !dbg !3527
  %97 = and i32 %96, -8, !dbg !3527
  %98 = inttoptr i32 %97 to i8*, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %98, metadata !3409, metadata !DIExpression()), !dbg !3470
  br i1 %22, label %104, label %99, !dbg !3529

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3530
  %101 = icmp ugt i32 %100, %196, !dbg !3534
  br i1 %101, label %320, label %102, !dbg !3535

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3536
  store double %94, double* %103, align 8, !dbg !3536
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3539
  call void @llvm.dbg.value(metadata i8* %105, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3421, metadata !DIExpression()), !dbg !3470
  br label %53, !dbg !3540

107:                                              ; preds = %73, %73
  br label %109, !dbg !3541

108:                                              ; preds = %73
  br label %109, !dbg !3541

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3470
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3470
  call void @llvm.dbg.value(metadata i32 %113, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %112, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3424, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  %114 = ptrtoint i8* %43 to i32, !dbg !3541
  %115 = add i32 %114, -1, !dbg !3541
  %116 = add i32 %115, %112, !dbg !3541
  %117 = sub i32 0, %112, !dbg !3541
  %118 = and i32 %116, %117, !dbg !3541
  %119 = inttoptr i32 %118 to i8*, !dbg !3542
  call void @llvm.dbg.value(metadata i8* %119, metadata !3409, metadata !DIExpression()), !dbg !3470
  br i1 %22, label %124, label %120, !dbg !3543

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3545
  %122 = add i32 %121, %118, !dbg !3546
  %123 = icmp ugt i32 %122, %196, !dbg !3547
  br i1 %123, label %320, label %124, !dbg !3548

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3549

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3542
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3550
  call void @llvm.dbg.value(metadata i8* %127, metadata !3407, metadata !DIExpression()), !dbg !3470
  %128 = bitcast i8* %41 to i8**, !dbg !3550
  %129 = load i8*, i8** %128, align 4, !dbg !3550
  call void @llvm.dbg.value(metadata i8* %129, metadata !3420, metadata !DIExpression()), !dbg !3470
  br label %130, !dbg !3551

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3470
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3552
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3470
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3553
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3470
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3470
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3470
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3470
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3470
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3470
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3554
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %142, metadata !3404, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %141, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %140, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %139, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %138, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %137, metadata !3415, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %136, metadata !3423, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %135, metadata !3416, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %133, metadata !3420, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %132, metadata !3418, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %131, metadata !3417, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.label(metadata !3469), !dbg !3556
  br i1 %22, label %146, label %144, !dbg !3557

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3558
  store i8* %133, i8** %145, align 4, !dbg !3561
  br label %146, !dbg !3562

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %147, metadata !3423, metadata !DIExpression()), !dbg !3470
  %148 = icmp sgt i32 %136, 0, !dbg !3564
  br i1 %148, label %152, label %149, !dbg !3565

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3566
  %151 = zext i1 %150 to i32, !dbg !3566
  br label %152, !dbg !3565

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3565
  %154 = icmp eq i32 %153, 0, !dbg !3565
  call void @llvm.dbg.value(metadata i1 %154, metadata !3447, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3567
  call void @llvm.dbg.value(metadata i1 %36, metadata !3450, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3567
  %155 = or i1 %36, %154, !dbg !3568
  br i1 %155, label %156, label %192, !dbg !3568

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3569
  %158 = sub i32 %157, %17, !dbg !3569
  %159 = lshr i32 %158, 2, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %159, metadata !3451, metadata !DIExpression()), !dbg !3571
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3572
  br i1 %161, label %162, label %163, !dbg !3572

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.15, i32 0, i32 0)) #25, !dbg !3574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3574
  unreachable, !dbg !3574

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3579
  br i1 %164, label %165, label %166, !dbg !3581

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0)) #25, !dbg !3582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3582
  unreachable, !dbg !3582

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3587

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3588
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3591
  store i8 %168, i8* %169, align 1, !dbg !3592
  %170 = trunc i32 %132 to i8, !dbg !3593
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3594
  store i8 %170, i8* %171, align 1, !dbg !3595
  br i1 %154, label %175, label %172, !dbg !3596

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3597
  store i8 %173, i8* %169, align 1, !dbg !3597
  %174 = add i32 %131, 1, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %174, metadata !3417, metadata !DIExpression()), !dbg !3470
  br label %187, !dbg !3601

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3602
  call void @llvm.dbg.value(metadata i32 %176, metadata !3416, metadata !DIExpression()), !dbg !3470
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3604

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %179, metadata !3404, metadata !DIExpression()), !dbg !3470
  br label %187, !dbg !3608

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3609

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3610
  call void @llvm.dbg.value(metadata i32 %182, metadata !3404, metadata !DIExpression()), !dbg !3470
  br label %187, !dbg !3613

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3614
  %185 = add i32 %142, 2, !dbg !3616
  %186 = add i32 %185, %184, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %186, metadata !3404, metadata !DIExpression()), !dbg !3470
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3470
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3470
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3470
  call void @llvm.dbg.value(metadata i32 %190, metadata !3404, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %189, metadata !3416, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %188, metadata !3417, metadata !DIExpression()), !dbg !3470
  %191 = add nuw nsw i32 %137, 1, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %191, metadata !3415, metadata !DIExpression()), !dbg !3470
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3470
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3553
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3470
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3554
  call void @llvm.dbg.value(metadata i32 %196, metadata !3404, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %195, metadata !3415, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %194, metadata !3416, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %193, metadata !3417, metadata !DIExpression()), !dbg !3470
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3619
  call void @llvm.dbg.value(metadata i8* %197, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %143, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %141, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %139, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %138, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3424, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %132, metadata !3418, metadata !DIExpression()), !dbg !3470
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %198, metadata !3406, metadata !DIExpression()), !dbg !3470
  %199 = load i8, i8* %198, align 1, !dbg !3504
  %200 = icmp eq i8 %199, 0, !dbg !3505
  br i1 %200, label %226, label %63, !dbg !3506

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3620

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3621
  call void @llvm.dbg.value(metadata i8* %203, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 undef, metadata !3454, metadata !DIExpression()), !dbg !3622
  br i1 %22, label %219, label %204, !dbg !3623

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3621
  %206 = load i32, i32* %205, align 4, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %206, metadata !3454, metadata !DIExpression()), !dbg !3622
  %207 = inttoptr i32 %118 to i32*, !dbg !3624
  store i32 %206, i32* %207, align 4, !dbg !3627
  br label %219, !dbg !3628

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3629
  %210 = add i32 %209, 7, !dbg !3629
  %211 = and i32 %210, -8, !dbg !3629
  %212 = inttoptr i32 %211 to i8*, !dbg !3629
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3629
  call void @llvm.dbg.value(metadata i8* %213, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i64 undef, metadata !3460, metadata !DIExpression()), !dbg !3630
  br i1 %22, label %219, label %214, !dbg !3631

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3629
  %216 = load i64, i64* %215, align 8, !dbg !3629
  call void @llvm.dbg.value(metadata i64 %216, metadata !3460, metadata !DIExpression()), !dbg !3630
  %217 = inttoptr i32 %118 to i64*, !dbg !3632
  store i64 %216, i64* %217, align 8, !dbg !3637
  br label %219, !dbg !3638

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.17, i32 0, i32 0), i32 noundef %113) #25, !dbg !3639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3639
  unreachable, !dbg !3639

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3644
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3644
  call void @llvm.dbg.value(metadata i8* %221, metadata !3407, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %40, metadata !3406, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %222, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %113, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %112, metadata !3411, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3424, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %72, metadata !3418, metadata !DIExpression()), !dbg !3470
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %223, metadata !3406, metadata !DIExpression()), !dbg !3470
  %224 = load i8, i8* %223, align 1, !dbg !3504
  %225 = icmp eq i8 %224, 0, !dbg !3505
  br i1 %225, label %226, label %38, !dbg !3506

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3645
  %228 = ptrtoint i8* %227 to i32, !dbg !3646
  %229 = sub i32 %228, %17, !dbg !3646
  %230 = lshr i32 %229, 2, !dbg !3648
  %231 = icmp ugt i32 %229, 1023, !dbg !3649
  br i1 %231, label %232, label %233, !dbg !3650

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.18, i32 0, i32 0)) #25, !dbg !3651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3651
  unreachable, !dbg !3651

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3656

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3657
  %236 = add i32 %235, %229, !dbg !3660
  br label %320, !dbg !3661

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3662
  store i8 %238, i8* %0, align 1, !dbg !3663
  %239 = trunc i32 %194 to i8, !dbg !3664
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3666
  store i8 %240, i8* %242, align 1, !dbg !3668
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3669
  store i8 %241, i8* %243, align 1, !dbg !3670
  %244 = trunc i32 %193 to i8, !dbg !3671
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3672
  store i8 %244, i8* %245, align 1, !dbg !3673
  %246 = icmp eq i32 %193, 0, !dbg !3674
  %247 = xor i1 %246, true, !dbg !3675
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3675
  call void @llvm.dbg.value(metadata i8* %227, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 0, metadata !3419, metadata !DIExpression()), !dbg !3470
  br i1 %249, label %250, label %269, !dbg !3675

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3676

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %254, metadata !3419, metadata !DIExpression()), !dbg !3470
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3677
  %256 = load i8, i8* %255, align 1, !dbg !3677
  %257 = icmp sgt i8 %256, -1, !dbg !3679
  br i1 %257, label %265, label %258, !dbg !3680

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3463, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3681
  %259 = ptrtoint i8* %253 to i32, !dbg !3682
  %260 = add i32 %251, %259, !dbg !3684
  %261 = icmp ugt i32 %260, %196, !dbg !3685
  br i1 %261, label %320, label %262, !dbg !3686

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3687
  call void @llvm.dbg.value(metadata i8 %263, metadata !3463, metadata !DIExpression()), !dbg !3681
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3688
  call void @llvm.dbg.value(metadata i8* %264, metadata !3409, metadata !DIExpression()), !dbg !3470
  store i8 %263, i8* %253, align 1, !dbg !3689
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3619
  call void @llvm.dbg.value(metadata i8* %266, metadata !3409, metadata !DIExpression()), !dbg !3470
  %267 = add nuw i32 %254, 1, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %267, metadata !3419, metadata !DIExpression()), !dbg !3470
  %268 = icmp eq i32 %267, %195, !dbg !3691
  br i1 %268, label %269, label %252, !dbg !3676, !llvm.loop !3692

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3619
  call void @llvm.dbg.value(metadata i8* %270, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 0, metadata !3419, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %133, metadata !3420, metadata !DIExpression()), !dbg !3470
  %271 = icmp eq i32 %195, 0, !dbg !3694
  br i1 %271, label %316, label %272, !dbg !3697

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3697

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %276, metadata !3420, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %277, metadata !3419, metadata !DIExpression()), !dbg !3470
  br i1 %246, label %282, label %278, !dbg !3698

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3701
  %280 = load i8, i8* %279, align 1, !dbg !3701
  %281 = icmp sgt i8 %280, -1, !dbg !3702
  br i1 %281, label %282, label %311, !dbg !3703

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3704

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3410, metadata !DIExpression()), !dbg !3470
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3705
  %285 = load i8, i8* %284, align 1, !dbg !3705
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3708
  call void @llvm.dbg.value(metadata i8* %286, metadata !3409, metadata !DIExpression()), !dbg !3470
  store i8 %285, i8* %275, align 1, !dbg !3709
  br label %297, !dbg !3710

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3711
  %289 = load i8, i8* %288, align 1, !dbg !3711
  %290 = zext i8 %289 to i32, !dbg !3711
  %291 = shl nuw nsw i32 %290, 2, !dbg !3713
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3714
  %293 = bitcast i8* %292 to i8**, !dbg !3715
  %294 = load i8*, i8** %293, align 4, !dbg !3715
  call void @llvm.dbg.value(metadata i8* %294, metadata !3420, metadata !DIExpression()), !dbg !3470
  store i8* null, i8** %293, align 4, !dbg !3716
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3717
  %296 = add i32 %295, 1, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %296, metadata !3410, metadata !DIExpression()), !dbg !3470
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3470
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3719
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3470
  call void @llvm.dbg.value(metadata i8* %300, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %299, metadata !3410, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %298, metadata !3420, metadata !DIExpression()), !dbg !3470
  %301 = ptrtoint i8* %300 to i32, !dbg !3720
  %302 = add i32 %273, %299, !dbg !3722
  %303 = add i32 %302, %301, !dbg !3723
  %304 = icmp ugt i32 %303, %196, !dbg !3724
  br i1 %304, label %320, label %305, !dbg !3725

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3726
  %307 = load i8, i8* %306, align 1, !dbg !3726
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3727
  call void @llvm.dbg.value(metadata i8* %308, metadata !3409, metadata !DIExpression()), !dbg !3470
  store i8 %307, i8* %300, align 1, !dbg !3728
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3729
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3730
  call void @llvm.dbg.value(metadata i8* %310, metadata !3409, metadata !DIExpression()), !dbg !3470
  br label %311, !dbg !3731

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3732
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3470
  call void @llvm.dbg.value(metadata i8* %313, metadata !3409, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %312, metadata !3420, metadata !DIExpression()), !dbg !3470
  %314 = add nuw i32 %277, 1, !dbg !3733
  call void @llvm.dbg.value(metadata i32 %314, metadata !3419, metadata !DIExpression()), !dbg !3470
  %315 = icmp eq i32 %314, %195, !dbg !3694
  br i1 %315, label %316, label %274, !dbg !3697, !llvm.loop !3734

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3619
  %318 = ptrtoint i8* %317 to i32, !dbg !3736
  %319 = sub i32 %318, %17, !dbg !3736
  br label %320, !dbg !3737

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3738
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3738
  ret i32 %321, !dbg !3738
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3743, metadata !DIExpression()), !dbg !3744
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3745
  ret i1 %2, !dbg !3746
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3747 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3752, metadata !DIExpression()), !dbg !3753
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3754
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3755
  %4 = and i1 %2, %3, !dbg !3755
  ret i1 %4, !dbg !3756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3757 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3761, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %1, metadata !3762, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %2, metadata !3763, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8* %3, metadata !3764, metadata !DIExpression()), !dbg !3767
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3768
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3765, metadata !DIExpression()), !dbg !3769
  call void @llvm.va_start(i8* nonnull %6), !dbg !3770
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3771
  %8 = load i32, i32* %7, align 4, !dbg !3771
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3771
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3771
  call void @llvm.dbg.value(metadata i32 %10, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.va_end(i8* nonnull %6), !dbg !3772
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3773
  ret i32 %10, !dbg !3774
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3775 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3787, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3788, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i8* %2, metadata !3789, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i8* %3, metadata !3790, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i8* %3, metadata !3791, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i8* %3, metadata !3792, metadata !DIExpression()), !dbg !3806
  %5 = icmp eq i8* %3, null, !dbg !3807
  br i1 %5, label %45, label %6, !dbg !3809

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3806
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3810
  %8 = load i8, i8* %7, align 1, !dbg !3810
  %9 = zext i8 %8 to i32, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %9, metadata !3802, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i8 undef, metadata !3803, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata i8 undef, metadata !3804, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata i32 0, metadata !3800, metadata !DIExpression()), !dbg !3806
  %10 = icmp eq i8 %8, 0, !dbg !3812
  br i1 %10, label %39, label %11, !dbg !3815

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3816
  call void @llvm.dbg.value(metadata i8 %12, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %13 = zext i8 %12 to i32, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %13, metadata !3801, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %14 = shl nuw nsw i32 %13, 2, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %14, metadata !3801, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3819
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3820
  %17 = load i8, i8* %16, align 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8 %17, metadata !3803, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %18 = zext i8 %17 to i32, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %18, metadata !3803, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3822
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3823
  %21 = load i8, i8* %20, align 1, !dbg !3823
  call void @llvm.dbg.value(metadata i8 %21, metadata !3804, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %22 = zext i8 %21 to i32, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %22, metadata !3804, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %23 = shl nuw nsw i32 %22, 1, !dbg !3825
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3798, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3806
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3826
  call void @llvm.dbg.value(metadata i8* %24, metadata !3798, metadata !DIExpression()), !dbg !3806
  br label %25, !dbg !3815

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3798, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i32 %27, metadata !3800, metadata !DIExpression()), !dbg !3806
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3827
  call void @llvm.dbg.value(metadata i8* %28, metadata !3798, metadata !DIExpression()), !dbg !3806
  %29 = load i8, i8* %26, align 1, !dbg !3829
  %30 = zext i8 %29 to i32, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %30, metadata !3805, metadata !DIExpression()), !dbg !3806
  %31 = shl nuw nsw i32 %30, 2, !dbg !3830
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3831
  %33 = bitcast i8* %32 to i8**, !dbg !3832
  call void @llvm.dbg.value(metadata i8** %33, metadata !3799, metadata !DIExpression()), !dbg !3806
  store i8* %28, i8** %33, align 4, !dbg !3833
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3834
  %35 = add i32 %34, 1, !dbg !3835
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3836
  call void @llvm.dbg.value(metadata i8* %36, metadata !3798, metadata !DIExpression()), !dbg !3806
  %37 = add nuw nsw i32 %27, 1, !dbg !3837
  call void @llvm.dbg.value(metadata i32 %37, metadata !3800, metadata !DIExpression()), !dbg !3806
  %38 = icmp eq i32 %37, %9, !dbg !3812
  br i1 %38, label %39, label %25, !dbg !3815, !llvm.loop !3838

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %40, metadata !3791, metadata !DIExpression()), !dbg !3806
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3841
  %42 = bitcast i8* %41 to i8**, !dbg !3841
  %43 = load i8*, i8** %42, align 1, !dbg !3841
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3842
  br label %45, !dbg !3843

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3806
  ret i32 %46, !dbg !3844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3845 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3849, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3850, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i8* %2, metadata !3851, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i8* %3, metadata !3852, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i8* %4, metadata !3853, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i8* %4, metadata !3854, metadata !DIExpression()), !dbg !3859
  %6 = ptrtoint i8* %4 to i32, !dbg !3860
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3860
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3860
  ret i32 %8, !dbg !3861
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3862 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3866, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 %1, metadata !3867, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8 0, metadata !3869, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8 poison, metadata !3869, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8* %0, metadata !3866, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3871
  %3 = load i8, i8* %0, align 1, !dbg !3872
  call void @llvm.dbg.value(metadata i8 %3, metadata !3868, metadata !DIExpression()), !dbg !3871
  %4 = icmp eq i8 %3, 0, !dbg !3873
  br i1 %4, label %29, label %5, !dbg !3874

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %8, metadata !3870, metadata !DIExpression()), !dbg !3871
  br i1 %9, label %11, label %22, !dbg !3876

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3878
  br i1 %12, label %13, label %17, !dbg !3882

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3883
  br i1 %14, label %29, label %15, !dbg !3886

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3887
  br i1 %16, label %29, label %22, !dbg !3889

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3890
  %19 = xor i1 %18, true, !dbg !3892
  %20 = zext i1 %18 to i32, !dbg !3892
  %21 = add nsw i32 %8, %20, !dbg !3892
  br label %22, !dbg !3892

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3871
  call void @llvm.dbg.value(metadata i32 %24, metadata !3870, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8 poison, metadata !3869, metadata !DIExpression()), !dbg !3871
  %25 = icmp eq i8 %6, 37, !dbg !3893
  %26 = xor i1 %25, %23, !dbg !3895
  call void @llvm.dbg.value(metadata i8* %10, metadata !3866, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8* %10, metadata !3866, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3871
  %27 = load i8, i8* %10, align 1, !dbg !3872
  call void @llvm.dbg.value(metadata i8 %27, metadata !3868, metadata !DIExpression()), !dbg !3871
  %28 = icmp eq i8 %27, 0, !dbg !3873
  br i1 %28, label %29, label %5, !dbg !3874, !llvm.loop !3896

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3871
  ret i1 %30, !dbg !3898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3899 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3903, metadata !DIExpression()), !dbg !3904
  %2 = add i8 %0, -64, !dbg !3905
  %3 = icmp ult i8 %2, 59, !dbg !3905
  ret i1 %3, !dbg !3906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3907 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3915, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %1, metadata !3916, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3917, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %3, metadata !3918, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %4, metadata !3919, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i16* %5, metadata !3920, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %6, metadata !3921, metadata !DIExpression()), !dbg !3984
  %11 = icmp eq i8* %0, null, !dbg !3985
  br i1 %11, label %12, label %13, !dbg !3988

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3989
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3989
  unreachable, !dbg !3989

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3922, metadata !DIExpression()), !dbg !3984
  %14 = bitcast i8* %0 to i32*, !dbg !3991
  call void @llvm.dbg.value(metadata i32* %14, metadata !3923, metadata !DIExpression()), !dbg !3984
  %15 = and i32 %4, 8, !dbg !3992
  %16 = icmp eq i32 %15, 0, !dbg !3993
  call void @llvm.dbg.value(metadata i1 %16, metadata !3927, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %0, metadata !3930, metadata !DIExpression()), !dbg !3984
  %17 = icmp eq i32 %1, 0, !dbg !3994
  br i1 %17, label %18, label %20, !dbg !3995

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3996
  br label %20, !dbg !3995

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3995
  call void @llvm.dbg.value(metadata i32 %21, metadata !3916, metadata !DIExpression()), !dbg !3984
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3997
  %23 = load i8, i8* %22, align 1, !dbg !3997
  %24 = zext i8 %23 to i32, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %24, metadata !3925, metadata !DIExpression()), !dbg !3984
  %25 = icmp ne i8 %23, 0, !dbg !3999
  %26 = and i32 %4, 1, !dbg !4000
  %27 = icmp ne i32 %26, 0, !dbg !4000
  %28 = and i1 %27, %25, !dbg !4000
  call void @llvm.dbg.value(metadata i1 %28, metadata !3929, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3984
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4001
  %30 = load i8, i8* %29, align 1, !dbg !4001
  %31 = zext i8 %30 to i32, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %31, metadata !3926, metadata !DIExpression()), !dbg !3984
  %32 = icmp ne i8 %30, 0, !dbg !4003
  %33 = and i32 %4, 2, !dbg !4004
  %34 = icmp ne i32 %33, 0, !dbg !4004
  %35 = and i1 %34, %32, !dbg !4004
  call void @llvm.dbg.value(metadata i1 %35, metadata !3928, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3984
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4005
  br i1 %36, label %41, label %37, !dbg !4005

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4007
  br i1 %38, label %287, label %39, !dbg !4010

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4011
  br label %287, !dbg !4013

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4014
  %43 = zext i8 %42 to i32, !dbg !4015
  %44 = shl nuw nsw i32 %43, 2, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %44, metadata !3924, metadata !DIExpression()), !dbg !3984
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4017
  %46 = bitcast i8* %45 to i8**, !dbg !4018
  %47 = load i8*, i8** %46, align 4, !dbg !4018
  call void @llvm.dbg.value(metadata i8* %47, metadata !3933, metadata !DIExpression()), !dbg !3984
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4019
  call void @llvm.dbg.value(metadata i8* %48, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 0, metadata !3935, metadata !DIExpression()), !dbg !3984
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4020
  br i1 %49, label %50, label %135, !dbg !4021

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3932, metadata !DIExpression()), !dbg !3984
  br i1 %28, label %51, label %76, !dbg !4022

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %48, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 0, metadata !3935, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 0, metadata !3936, metadata !DIExpression()), !dbg !4023
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4024

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %55, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %56, metadata !3935, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %57, metadata !3936, metadata !DIExpression()), !dbg !4023
  %58 = load i8, i8* %55, align 1, !dbg !4025
  %59 = zext i8 %58 to i32, !dbg !4026
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4026
  %61 = bitcast i32* %60 to i8**, !dbg !4027
  %62 = load i8*, i8** %61, align 4, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %62, metadata !3942, metadata !DIExpression()), !dbg !4028
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %63, metadata !3945, metadata !DIExpression()), !dbg !4028
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4030
  br i1 %65, label %66, label %70, !dbg !4030

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4032
  %68 = add nuw i32 %56, 1, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %68, metadata !3935, metadata !DIExpression()), !dbg !3984
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4035
  store i16 %67, i16* %69, align 2, !dbg !4036
  br label %70, !dbg !4037

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3984
  call void @llvm.dbg.value(metadata i32 %71, metadata !3935, metadata !DIExpression()), !dbg !3984
  %72 = add nsw i32 %63, %54, !dbg !4038
  call void @llvm.dbg.value(metadata i32 %72, metadata !3932, metadata !DIExpression()), !dbg !3984
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4039
  call void @llvm.dbg.value(metadata i8* %73, metadata !3934, metadata !DIExpression()), !dbg !3984
  %74 = add nuw nsw i32 %57, 1, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %74, metadata !3936, metadata !DIExpression()), !dbg !4023
  %75 = icmp eq i32 %74, %24, !dbg !4041
  br i1 %75, label %82, label %53, !dbg !4024, !llvm.loop !4042

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4044
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4044
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4044
  br label %82, !dbg !4044

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4047
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3984
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4048
  call void @llvm.dbg.value(metadata i1 undef, metadata !3946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4049
  call void @llvm.dbg.value(metadata i32 0, metadata !3947, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata i32 %85, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %84, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %83, metadata !3935, metadata !DIExpression()), !dbg !3984
  %86 = icmp eq i8 %30, 0, !dbg !4051
  br i1 %86, label %287, label %87, !dbg !4052

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4053
  %89 = icmp eq i32 %88, 0, !dbg !4054
  call void @llvm.dbg.value(metadata i1 %89, metadata !3946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4049
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4052

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %96, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %97, metadata !3935, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %98, metadata !3947, metadata !DIExpression()), !dbg !4050
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %99, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 undef, metadata !3949, metadata !DIExpression()), !dbg !4056
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %100, metadata !3934, metadata !DIExpression()), !dbg !3984
  %101 = load i8, i8* %99, align 1, !dbg !4058
  call void @llvm.dbg.value(metadata i8 %101, metadata !3952, metadata !DIExpression()), !dbg !4056
  %102 = zext i8 %101 to i32, !dbg !4059
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4059
  %104 = bitcast i32* %103 to i8**, !dbg !4060
  %105 = load i8*, i8** %104, align 4, !dbg !4060
  call void @llvm.dbg.value(metadata i8* %105, metadata !3953, metadata !DIExpression()), !dbg !4056
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4061
  call void @llvm.dbg.value(metadata i1 %106, metadata !3954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4056
  br i1 %16, label %113, label %107, !dbg !4062

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4064
  call void @llvm.dbg.value(metadata i8 %108, metadata !3949, metadata !DIExpression()), !dbg !4056
  %109 = zext i8 %108 to i32, !dbg !4065
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4066
  br i1 %110, label %111, label %113, !dbg !4067

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.20, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4068
  %112 = add nsw i32 %95, -2, !dbg !4074
  call void @llvm.dbg.value(metadata i32 %112, metadata !3932, metadata !DIExpression()), !dbg !3984
  br label %130, !dbg !4075

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4076

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4077

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %116, metadata !3932, metadata !DIExpression()), !dbg !3984
  br label %130, !dbg !4082

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4083

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3980), !dbg !4084
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %119, metadata !3955, metadata !DIExpression()), !dbg !4056
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4086
  br i1 %121, label %122, label %126, !dbg !4086

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4088
  %124 = add nuw i32 %97, 1, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %124, metadata !3935, metadata !DIExpression()), !dbg !3984
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4091
  store i16 %123, i16* %125, align 2, !dbg !4092
  br label %126, !dbg !4093

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3984
  call void @llvm.dbg.value(metadata i32 %127, metadata !3935, metadata !DIExpression()), !dbg !3984
  %128 = add i32 %95, -1, !dbg !4094
  %129 = add i32 %128, %119, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %129, metadata !3932, metadata !DIExpression()), !dbg !3984
  br label %130, !dbg !4096

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3984
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4056
  call void @llvm.dbg.value(metadata i32 %132, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %131, metadata !3935, metadata !DIExpression()), !dbg !3984
  %133 = add nuw nsw i32 %98, 1, !dbg !4097
  call void @llvm.dbg.value(metadata i8* %100, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %133, metadata !3947, metadata !DIExpression()), !dbg !4050
  %134 = icmp eq i32 %133, %31, !dbg !4051
  br i1 %134, label %287, label %94, !dbg !4052, !llvm.loop !4098

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3957, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3958, metadata !DIExpression()), !dbg !4101
  br i1 %28, label %136, label %138, !dbg !4102

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3959, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 0, metadata !3960, metadata !DIExpression()), !dbg !3984
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4103
  call void @llvm.dbg.value(metadata i8* %137, metadata !3961, metadata !DIExpression()), !dbg !3984
  br label %143, !dbg !4106

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4107
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4107

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3961, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 undef, metadata !3960, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 0, metadata !3959, metadata !DIExpression()), !dbg !3984
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4109
  br label %148, !dbg !4112

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4113
  call void @llvm.dbg.value(metadata i8* %151, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 0, metadata !3963, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 %149, metadata !3960, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 %150, metadata !3959, metadata !DIExpression()), !dbg !3984
  %152 = icmp eq i8 %30, 0, !dbg !4115
  br i1 %152, label %153, label %155, !dbg !4116

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4117
  br label %160, !dbg !4116

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4116

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4117
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4118
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4119
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3984
  call void @llvm.dbg.value(metadata i8 undef, metadata !3956, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3984
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4120
  %166 = load i8, i8* %165, align 1, !dbg !4120
  %167 = zext i8 %162 to i32, !dbg !4121
  %168 = add i8 %166, %162, !dbg !4122
  call void @llvm.dbg.value(metadata i8 %168, metadata !3956, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3984
  %169 = icmp eq i32 %33, 0, !dbg !4123
  %170 = lshr i8 %163, 1, !dbg !4124
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4124
  call void @llvm.dbg.value(metadata i8 %171, metadata !3956, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3984
  %172 = icmp eq i32 %26, 0, !dbg !4125
  %173 = icmp eq i32 %161, 0, !dbg !4117
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4117
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %175, metadata !3956, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3984
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3971, metadata !DIExpression()), !dbg !4126
  %176 = load i32, i32* %14, align 1, !dbg !4127
  store i8 %168, i8* %165, align 1, !dbg !4128
  store i8 %175, i8* %22, align 1, !dbg !4128
  store i8 %171, i8* %29, align 1, !dbg !4128
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %177, metadata !3962, metadata !DIExpression()), !dbg !3984
  %178 = icmp slt i32 %177, 0, !dbg !4130
  br i1 %178, label %287, label %240, !dbg !4132

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %181, metadata !3963, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 %182, metadata !3960, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 %183, metadata !3959, metadata !DIExpression()), !dbg !3984
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %184, metadata !3934, metadata !DIExpression()), !dbg !3984
  %185 = load i8, i8* %180, align 1, !dbg !4134
  call void @llvm.dbg.value(metadata i8 %185, metadata !3965, metadata !DIExpression()), !dbg !4135
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4136
  call void @llvm.dbg.value(metadata i8* %186, metadata !3934, metadata !DIExpression()), !dbg !3984
  %187 = load i8, i8* %184, align 1, !dbg !4137
  call void @llvm.dbg.value(metadata i8 %187, metadata !3968, metadata !DIExpression()), !dbg !4135
  %188 = zext i8 %187 to i32, !dbg !4138
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4138
  %190 = bitcast i32* %189 to i8**, !dbg !4139
  %191 = load i8*, i8** %190, align 4, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %191, metadata !3969, metadata !DIExpression()), !dbg !4135
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4140
  call void @llvm.dbg.value(metadata i1 %192, metadata !3970, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4135
  br i1 %16, label %196, label %193, !dbg !4141

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4143
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4144
  br i1 %195, label %235, label %196, !dbg !4145

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4146

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4147

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4150
  br i1 %199, label %201, label %200, !dbg !4155

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4156
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4156
  unreachable, !dbg !4156

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4150
  %203 = add nuw nsw i8 %183, 1, !dbg !4158
  call void @llvm.dbg.value(metadata i8 %203, metadata !3959, metadata !DIExpression()), !dbg !3984
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4159
  br label %231, !dbg !4160

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4161

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4162
  br i1 %207, label %209, label %208, !dbg !4167

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4168
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4168
  unreachable, !dbg !4168

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4162
  %211 = add nuw nsw i8 %182, 1, !dbg !4170
  call void @llvm.dbg.value(metadata i8 %211, metadata !3960, metadata !DIExpression()), !dbg !3984
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4171
  br label %231, !dbg !4172

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4173

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4175
  br i1 %215, label %217, label %216, !dbg !4180

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4181
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4181
  unreachable, !dbg !4181

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4175
  %219 = add nuw nsw i8 %183, 1, !dbg !4183
  call void @llvm.dbg.value(metadata i8 %219, metadata !3959, metadata !DIExpression()), !dbg !3984
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4184
  br label %231, !dbg !4185

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4186
  br i1 %222, label %224, label %223, !dbg !4190

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4191
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4191
  unreachable, !dbg !4191

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4186
  %226 = add nuw nsw i8 %182, 1, !dbg !4193
  call void @llvm.dbg.value(metadata i8 %226, metadata !3960, metadata !DIExpression()), !dbg !3984
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4194
  store i8 %185, i8* %227, align 1, !dbg !4195
  %228 = add nuw nsw i8 %182, 2, !dbg !4196
  call void @llvm.dbg.value(metadata i8 %228, metadata !3960, metadata !DIExpression()), !dbg !3984
  %229 = zext i8 %226 to i32, !dbg !4197
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4197
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4198
  br label %235, !dbg !4199

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3984
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4119
  call void @llvm.dbg.value(metadata i8 %237, metadata !3960, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 %236, metadata !3959, metadata !DIExpression()), !dbg !3984
  %238 = add nuw nsw i32 %181, 1, !dbg !4199
  call void @llvm.dbg.value(metadata i8* %186, metadata !3934, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %238, metadata !3963, metadata !DIExpression()), !dbg !4114
  %239 = icmp eq i32 %238, %31, !dbg !4115
  br i1 %239, label %160, label %179, !dbg !4116, !llvm.loop !4200

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %177, metadata !3932, metadata !DIExpression()), !dbg !3984
  store i32 %176, i32* %14, align 1, !dbg !4202
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4203
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %243, metadata !3962, metadata !DIExpression()), !dbg !3984
  %244 = icmp slt i32 %243, 0, !dbg !4205
  br i1 %244, label %287, label %245, !dbg !4207

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3984
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4208
  %248 = add nuw nsw i32 %44, %24, !dbg !4208
  %249 = sub i32 %247, %248, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %249, metadata !3972, metadata !DIExpression()), !dbg !3984
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %250, metadata !3962, metadata !DIExpression()), !dbg !3984
  %251 = icmp slt i32 %250, 0, !dbg !4210
  br i1 %251, label %287, label %252, !dbg !4212

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %253, metadata !3932, metadata !DIExpression()), !dbg !3984
  %254 = add nuw nsw i32 %253, %250, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %254, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 0, metadata !3973, metadata !DIExpression()), !dbg !4215
  %255 = icmp eq i8 %162, 0, !dbg !4216
  br i1 %255, label %284, label %256, !dbg !4217

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4217

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3973, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %260, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4218
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4219
  %262 = load i8, i8* %261, align 1, !dbg !4219
  call void @llvm.dbg.value(metadata i8 %262, metadata !3975, metadata !DIExpression()), !dbg !4220
  store i8 %262, i8* %10, align 1, !dbg !4221
  %263 = zext i8 %262 to i32, !dbg !4222
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4222
  %265 = bitcast i32* %264 to i8**, !dbg !4223
  %266 = load i8*, i8** %265, align 4, !dbg !4223
  call void @llvm.dbg.value(metadata i8* %266, metadata !3978, metadata !DIExpression()), !dbg !4220
  br i1 %257, label %270, label %267, !dbg !4224

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4225
  %269 = load i16, i16* %268, align 2, !dbg !4225
  br label %270, !dbg !4224

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4224
  call void @llvm.dbg.value(metadata i32 undef, metadata !3979, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4220
  call void @llvm.dbg.value(metadata i8* %10, metadata !3975, metadata !DIExpression(DW_OP_deref)), !dbg !4220
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %272, metadata !3962, metadata !DIExpression()), !dbg !3984
  %273 = icmp slt i32 %272, 0, !dbg !4227
  br i1 %273, label %277, label %274, !dbg !4229

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3979, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3984
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %275, metadata !3962, metadata !DIExpression()), !dbg !3984
  %276 = icmp slt i32 %275, 0, !dbg !4231
  br i1 %276, label %277, label %279, !dbg !4233

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4234
  call void @llvm.dbg.value(metadata i32 undef, metadata !3932, metadata !DIExpression()), !dbg !3984
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %280, metadata !3932, metadata !DIExpression()), !dbg !3984
  %281 = add nsw i32 %280, %275, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %281, metadata !3932, metadata !DIExpression()), !dbg !3984
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4234
  %282 = add nuw nsw i32 %259, 1, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %282, metadata !3973, metadata !DIExpression()), !dbg !4215
  %283 = icmp eq i32 %282, %167, !dbg !4216
  br i1 %283, label %284, label %258, !dbg !4217, !llvm.loop !4238

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4214
  call void @llvm.dbg.value(metadata i32 %285, metadata !3932, metadata !DIExpression()), !dbg !3984
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4240
  br label %287, !dbg !4241

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3984
  ret i32 %288, !dbg !4242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4243 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4247, metadata !DIExpression()), !dbg !4255
  %2 = icmp eq i8* %0, null, !dbg !4256
  br i1 %2, label %3, label %4, !dbg !4259

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4260
  unreachable, !dbg !4260

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4248, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i8* %0, metadata !4249, metadata !DIExpression()), !dbg !4255
  %5 = load i8, i8* %0, align 1, !dbg !4262
  %6 = zext i8 %5 to i32, !dbg !4262
  %7 = shl nuw nsw i32 %6, 2, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %7, metadata !4250, metadata !DIExpression()), !dbg !4255
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4264
  %9 = load i8, i8* %8, align 1, !dbg !4264
  %10 = zext i8 %9 to i32, !dbg !4264
  call void @llvm.dbg.value(metadata i32 %10, metadata !4251, metadata !DIExpression()), !dbg !4255
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4265
  %12 = load i8, i8* %11, align 1, !dbg !4265
  %13 = zext i8 %12 to i32, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %13, metadata !4252, metadata !DIExpression()), !dbg !4255
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4266
  call void @llvm.dbg.value(metadata i8* %14, metadata !4248, metadata !DIExpression()), !dbg !4255
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %15, metadata !4248, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i32 0, metadata !4253, metadata !DIExpression()), !dbg !4268
  %16 = icmp eq i8 %9, 0, !dbg !4269
  br i1 %16, label %17, label %22, !dbg !4271

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4255
  %19 = ptrtoint i8* %18 to i32, !dbg !4272
  %20 = ptrtoint i8* %0 to i32, !dbg !4272
  %21 = sub i32 %19, %20, !dbg !4272
  ret i32 %21, !dbg !4273

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4253, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8* %24, metadata !4248, metadata !DIExpression()), !dbg !4255
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4274
  call void @llvm.dbg.value(metadata i8* %25, metadata !4248, metadata !DIExpression()), !dbg !4255
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4276
  %27 = add i32 %26, 1, !dbg !4277
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4278
  call void @llvm.dbg.value(metadata i8* %28, metadata !4248, metadata !DIExpression()), !dbg !4255
  %29 = add nuw nsw i32 %23, 1, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %29, metadata !4253, metadata !DIExpression()), !dbg !4268
  %30 = icmp eq i32 %29, %10, !dbg !4269
  br i1 %30, label %17, label %22, !dbg !4271, !llvm.loop !4280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4282 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4286, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %1, metadata !4287, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %2, metadata !4288, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i16 %3, metadata !4289, metadata !DIExpression()), !dbg !4290
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4291
  br i1 %5, label %6, label %9, !dbg !4293

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4294
  %8 = add i32 %7, 1, !dbg !4296
  br label %20, !dbg !4297

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4298
  br i1 %10, label %13, label %11, !dbg !4299

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4299
  br label %16, !dbg !4299

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4300
  %15 = add i32 %14, 1, !dbg !4301
  br label %16, !dbg !4299

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4299
  %18 = and i32 %17, 65535, !dbg !4302
  call void @llvm.dbg.value(metadata i32 %17, metadata !4289, metadata !DIExpression()), !dbg !4290
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4303
  br label %20, !dbg !4304

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4290
  ret i32 %21, !dbg !4305
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4308, metadata !DIExpression()), !dbg !4309
  ret i32 0, !dbg !4310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4311 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4315, metadata !DIExpression()), !dbg !4316
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4317
  ret void, !dbg !4318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4319 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4322
  ret i8* %1, !dbg !4323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4324 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4335, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i8* %0, metadata !4334, metadata !DIExpression()), !dbg !4346
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4347
  ret void, !dbg !4349
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4354, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i8* %1, metadata !4355, metadata !DIExpression()), !dbg !4356
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4357
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4357
  ret i32 %4, !dbg !4358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4359 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4366, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4363, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i8* %1, metadata !4364, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i8* %2, metadata !4365, metadata !DIExpression()), !dbg !4367
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4368
  ret void, !dbg !4369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4374, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %1, metadata !4375, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 0, metadata !4376, metadata !DIExpression()), !dbg !4377
  %3 = icmp eq i32 %1, 0, !dbg !4378
  br i1 %3, label %13, label %4, !dbg !4381

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4376, metadata !DIExpression()), !dbg !4377
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4382
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4384
  %8 = load i8, i8* %7, align 1, !dbg !4384
  %9 = zext i8 %8 to i32, !dbg !4384
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4382
  %11 = add nuw i32 %5, 1, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %11, metadata !4376, metadata !DIExpression()), !dbg !4377
  %12 = icmp eq i32 %11, %1, !dbg !4378
  br i1 %12, label %13, label %4, !dbg !4381, !llvm.loop !4386

13:                                               ; preds = %4, %2
  ret void, !dbg !4388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4389 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4393, metadata !DIExpression()), !dbg !4395
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4396
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4394, metadata !DIExpression()), !dbg !4397
  call void @llvm.va_start(i8* nonnull %3), !dbg !4398
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4399
  %5 = load i32, i32* %4, align 4, !dbg !4399
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4399
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4399
  call void @llvm.va_end(i8* nonnull %3), !dbg !4400
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4401
  ret void, !dbg !4401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4402 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4406, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.value(metadata i32 %1, metadata !4407, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.value(metadata i8* %2, metadata !4408, metadata !DIExpression()), !dbg !4411
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4412
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4412
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4409, metadata !DIExpression()), !dbg !4413
  call void @llvm.va_start(i8* nonnull %5), !dbg !4414
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4415
  %7 = load i32, i32* %6, align 4, !dbg !4415
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4415
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %9, metadata !4410, metadata !DIExpression()), !dbg !4411
  call void @llvm.va_end(i8* nonnull %5), !dbg !4416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4417
  ret i32 %9, !dbg !4418
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4419 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4426, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %0, metadata !4423, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %1, metadata !4424, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %2, metadata !4425, metadata !DIExpression()), !dbg !4433
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4434
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4434
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4427, metadata !DIExpression()), !dbg !4435
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4436
  store i8* %0, i8** %7, align 4, !dbg !4436
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4436
  store i32 %1, i32* %8, align 4, !dbg !4436
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4436
  store i32 0, i32* %9, align 4, !dbg !4436
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4437
  %10 = load i32, i32* %9, align 4, !dbg !4438
  %11 = load i32, i32* %8, align 4, !dbg !4440
  %12 = icmp slt i32 %10, %11, !dbg !4441
  br i1 %12, label %13, label %15, !dbg !4442

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4443
  store i8 0, i8* %14, align 1, !dbg !4445
  br label %15, !dbg !4446

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4447
  ret i32 %10, !dbg !4448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4455, metadata !DIExpression()), !dbg !4456
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4457
  %4 = load i8*, i8** %3, align 4, !dbg !4457
  %5 = icmp eq i8* %4, null, !dbg !4459
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4460
  br i1 %5, label %12, label %8, !dbg !4461

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4462
  %10 = load i32, i32* %9, align 4, !dbg !4462
  %11 = icmp slt i32 %7, %10, !dbg !4463
  br i1 %11, label %15, label %12, !dbg !4464

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4465
  %14 = add nsw i32 %7, 1, !dbg !4467
  store i32 %14, i32* %13, align 4, !dbg !4467
  br label %25, !dbg !4468

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4469
  %17 = icmp eq i32 %7, %16, !dbg !4471
  br i1 %17, label %18, label %21, !dbg !4472

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4473
  store i32 %19, i32* %6, align 4, !dbg !4473
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4475
  store i8 0, i8* %20, align 1, !dbg !4476
  br label %25, !dbg !4477

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4478
  %23 = add nsw i32 %7, 1, !dbg !4480
  store i32 %23, i32* %6, align 4, !dbg !4480
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4481
  store i8 %22, i8* %24, align 1, !dbg !4482
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4483
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4484 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4489, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %1, metadata !4490, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %2, metadata !4491, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i8* %3, metadata !4492, metadata !DIExpression()), !dbg !4493
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4494
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4495
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4496
  unreachable, !dbg !4497
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4498 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4605
  ret %struct.k_thread* %1, !dbg !4606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4611, metadata !DIExpression()), !dbg !4612
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4613, !srcloc !4615
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4616
  ret void, !dbg !4617
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4618 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4619, !srcloc !4621
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4622
  ret %struct.k_thread* %1, !dbg !4623
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4624 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4637, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4634, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8* %1, metadata !4635, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8* %2, metadata !4636, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %4, metadata !4638, metadata !DIExpression()), !dbg !4763
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4764
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4764
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4639, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.value(metadata i32 0, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i1 undef, metadata !4645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4763
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4766

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4766

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4767
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4637, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8* %30, metadata !4636, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %29, metadata !4643, metadata !DIExpression()), !dbg !4763
  %31 = load i8, i8* %30, align 1, !dbg !4768
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4766

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4768
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %34, metadata !4636, metadata !DIExpression()), !dbg !4763
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %35, metadata !4647, metadata !DIExpression()), !dbg !4770
  %36 = icmp slt i32 %35, 0, !dbg !4771
  %37 = add i32 %29, 1, !dbg !4769
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %36, label %365, label %28, !llvm.loop !4773

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4775
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4652, metadata !DIExpression()), !dbg !4776
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4776
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4695, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4698, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8* %30, metadata !4701, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 -1, metadata !4702, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 -1, metadata !4703, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8* null, metadata !4704, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8* %14, metadata !4705, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8 0, metadata !4706, metadata !DIExpression()), !dbg !4777
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %39, metadata !4636, metadata !DIExpression()), !dbg !4763
  %40 = load i24, i24* %15, align 8, !dbg !4779
  %41 = and i24 %40, 256, !dbg !4779
  %42 = icmp eq i24 %41, 0, !dbg !4779
  br i1 %42, label %51, label %43, !dbg !4781

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %44, metadata !4637, metadata !DIExpression()), !dbg !4763
  %45 = bitcast i8* %27 to i32*, !dbg !4782
  %46 = load i32, i32* %45, align 4, !dbg !4782
  call void @llvm.dbg.value(metadata i32 %46, metadata !4702, metadata !DIExpression()), !dbg !4777
  %47 = icmp slt i32 %46, 0, !dbg !4784
  br i1 %47, label %48, label %56, !dbg !4786

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4787
  store i24 %49, i24* %15, align 8, !dbg !4787
  %50 = sub nsw i32 0, %46, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %50, metadata !4702, metadata !DIExpression()), !dbg !4777
  br label %56, !dbg !4790

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4791
  %53 = icmp eq i24 %52, 0, !dbg !4791
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4793
  br label %56, !dbg !4793

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4794
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4777
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4637, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %58, metadata !4702, metadata !DIExpression()), !dbg !4777
  %60 = and i24 %57, 1024, !dbg !4794
  %61 = icmp eq i24 %60, 0, !dbg !4794
  br i1 %61, label %69, label %62, !dbg !4795

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %63, metadata !4637, metadata !DIExpression()), !dbg !4763
  %64 = bitcast i8* %59 to i32*, !dbg !4796
  %65 = load i32, i32* %64, align 4, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %65, metadata !4707, metadata !DIExpression()), !dbg !4797
  %66 = icmp slt i32 %65, 0, !dbg !4798
  br i1 %66, label %67, label %74, !dbg !4800

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4801
  store i24 %68, i24* %15, align 8, !dbg !4801
  br label %74, !dbg !4803

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4804
  %71 = icmp eq i24 %70, 0, !dbg !4804
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4806
  br label %74, !dbg !4806

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4807
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4777
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4777
  call void @llvm.dbg.value(metadata i8* %77, metadata !4637, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %76, metadata !4703, metadata !DIExpression()), !dbg !4777
  store i32 0, i32* %16, align 4, !dbg !4808
  store i32 0, i32* %17, align 8, !dbg !4809
  %78 = lshr i24 %75, 16, !dbg !4807
  call void @llvm.dbg.value(metadata i24 %78, metadata !4710, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4777
  %79 = lshr i24 %75, 11, !dbg !4810
  %80 = and i24 %79, 15, !dbg !4810
  %81 = zext i24 %80 to i32, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %81, metadata !4711, metadata !DIExpression()), !dbg !4777
  %82 = trunc i24 %78 to i3, !dbg !4811
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4811

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4812

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %85, metadata !4637, metadata !DIExpression()), !dbg !4763
  %86 = bitcast i8* %77 to i32*, !dbg !4815
  %87 = load i32, i32* %86, align 4, !dbg !4815
  %88 = sext i32 %87 to i64, !dbg !4815
  store i64 %88, i64* %20, align 8, !dbg !4817
  br label %115, !dbg !4818

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4819
  call void @llvm.dbg.value(metadata i8* %90, metadata !4637, metadata !DIExpression()), !dbg !4763
  %91 = bitcast i8* %77 to i32*, !dbg !4819
  %92 = load i32, i32* %91, align 4, !dbg !4819
  %93 = sext i32 %92 to i64, !dbg !4819
  store i64 %93, i64* %20, align 8, !dbg !4822
  br label %115, !dbg !4823

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4824
  %96 = add i32 %95, 7, !dbg !4824
  %97 = and i32 %96, -8, !dbg !4824
  %98 = inttoptr i32 %97 to i8*, !dbg !4824
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %99, metadata !4637, metadata !DIExpression()), !dbg !4763
  %100 = inttoptr i32 %97 to i64*, !dbg !4824
  %101 = load i64, i64* %100, align 8, !dbg !4824
  store i64 %101, i64* %20, align 8, !dbg !4825
  br label %115, !dbg !4826

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4827
  %104 = add i32 %103, 7, !dbg !4827
  %105 = and i32 %104, -8, !dbg !4827
  %106 = inttoptr i32 %105 to i8*, !dbg !4827
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4827
  call void @llvm.dbg.value(metadata i8* %107, metadata !4637, metadata !DIExpression()), !dbg !4763
  %108 = inttoptr i32 %105 to i64*, !dbg !4827
  %109 = load i64, i64* %108, align 8, !dbg !4827
  store i64 %109, i64* %20, align 8, !dbg !4828
  br label %115, !dbg !4829

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4830
  call void @llvm.dbg.value(metadata i8* %111, metadata !4637, metadata !DIExpression()), !dbg !4763
  %112 = bitcast i8* %77 to i32*, !dbg !4830
  %113 = load i32, i32* %112, align 4, !dbg !4830
  %114 = sext i32 %113 to i64, !dbg !4831
  store i64 %114, i64* %20, align 8, !dbg !4832
  br label %115, !dbg !4833

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4834
  call void @llvm.dbg.value(metadata i8* %117, metadata !4637, metadata !DIExpression()), !dbg !4763
  %118 = trunc i24 %79 to i4, !dbg !4835
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4835

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4836
  %121 = ashr exact i64 %120, 56, !dbg !4836
  store i64 %121, i64* %20, align 8, !dbg !4839
  br label %177, !dbg !4840

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4841
  %124 = ashr exact i64 %123, 48, !dbg !4841
  store i64 %124, i64* %20, align 8, !dbg !4844
  br label %177, !dbg !4845

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4846

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %127, metadata !4637, metadata !DIExpression()), !dbg !4763
  %128 = bitcast i8* %77 to i32*, !dbg !4849
  %129 = load i32, i32* %128, align 4, !dbg !4849
  %130 = zext i32 %129 to i64, !dbg !4849
  store i64 %130, i64* %20, align 8, !dbg !4851
  br label %157, !dbg !4852

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %132, metadata !4637, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8* %132, metadata !4637, metadata !DIExpression()), !dbg !4763
  %133 = bitcast i8* %77 to i32*, !dbg !4853
  %134 = load i32, i32* %133, align 4, !dbg !4853
  %135 = zext i32 %134 to i64, !dbg !4853
  store i64 %135, i64* %20, align 8, !dbg !4853
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4855
  %138 = add i32 %137, 7, !dbg !4855
  %139 = and i32 %138, -8, !dbg !4855
  %140 = inttoptr i32 %139 to i8*, !dbg !4855
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4855
  call void @llvm.dbg.value(metadata i8* %141, metadata !4637, metadata !DIExpression()), !dbg !4763
  %142 = inttoptr i32 %139 to i64*, !dbg !4855
  %143 = load i64, i64* %142, align 8, !dbg !4855
  store i64 %143, i64* %20, align 8, !dbg !4856
  br label %157, !dbg !4857

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4858
  %146 = add i32 %145, 7, !dbg !4858
  %147 = and i32 %146, -8, !dbg !4858
  %148 = inttoptr i32 %147 to i8*, !dbg !4858
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4858
  call void @llvm.dbg.value(metadata i8* %149, metadata !4637, metadata !DIExpression()), !dbg !4763
  %150 = inttoptr i32 %147 to i64*, !dbg !4858
  %151 = load i64, i64* %150, align 8, !dbg !4858
  store i64 %151, i64* %20, align 8, !dbg !4859
  br label %157, !dbg !4860

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %153, metadata !4637, metadata !DIExpression()), !dbg !4763
  %154 = bitcast i8* %77 to i32*, !dbg !4861
  %155 = load i32, i32* %154, align 4, !dbg !4861
  %156 = zext i32 %155 to i64, !dbg !4862
  store i64 %156, i64* %20, align 8, !dbg !4863
  br label %157, !dbg !4864

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4865
  call void @llvm.dbg.value(metadata i8* %159, metadata !4637, metadata !DIExpression()), !dbg !4763
  %160 = trunc i24 %79 to i4, !dbg !4866
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4866

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4867
  store i64 %162, i64* %20, align 8, !dbg !4870
  br label %177, !dbg !4871

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4872
  store i64 %164, i64* %20, align 8, !dbg !4875
  br label %177, !dbg !4876

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4877
  %167 = add i32 %166, 7, !dbg !4877
  %168 = and i32 %167, -8, !dbg !4877
  %169 = inttoptr i32 %168 to i8*, !dbg !4877
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %170, metadata !4637, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8* %170, metadata !4637, metadata !DIExpression()), !dbg !4763
  %171 = inttoptr i32 %168 to double*, !dbg !4877
  %172 = load double, double* %171, align 8, !dbg !4877
  store double %172, double* %19, align 8, !dbg !4877
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4881
  call void @llvm.dbg.value(metadata i8* %174, metadata !4637, metadata !DIExpression()), !dbg !4763
  %175 = bitcast i8* %77 to i8**, !dbg !4881
  %176 = load i8*, i8** %175, align 4, !dbg !4881
  store i8* %176, i8** %18, align 8, !dbg !4884
  br label %177, !dbg !4885

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4777
  call void @llvm.dbg.value(metadata i8* %178, metadata !4637, metadata !DIExpression()), !dbg !4763
  %179 = and i24 %75, 3, !dbg !4886
  %180 = icmp eq i24 %179, 0, !dbg !4886
  br i1 %180, label %185, label %181, !dbg !4886

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %182, metadata !4712, metadata !DIExpression()), !dbg !4888
  %183 = icmp slt i32 %182, 0, !dbg !4889
  %184 = add i32 %182, %29, !dbg !4887
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4891
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4892

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %188, metadata !4716, metadata !DIExpression()), !dbg !4894
  %189 = icmp slt i32 %188, 0, !dbg !4895
  %190 = add i32 %29, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4897
  call void @llvm.dbg.value(metadata i8* %192, metadata !4704, metadata !DIExpression()), !dbg !4777
  %193 = icmp sgt i32 %76, -1, !dbg !4898
  br i1 %193, label %194, label %196, !dbg !4900

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %195, metadata !4719, metadata !DIExpression()), !dbg !4903
  br label %241, !dbg !4904

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %197, metadata !4719, metadata !DIExpression()), !dbg !4903
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4704, metadata !DIExpression()), !dbg !4777
  %199 = load i64, i64* %20, align 8, !dbg !4907
  %200 = trunc i64 %199 to i8, !dbg !4908
  store i8 %200, i8* %10, align 1, !dbg !4909
  call void @llvm.dbg.value(metadata i8* %23, metadata !4705, metadata !DIExpression()), !dbg !4777
  br label %245, !dbg !4910

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4911
  %203 = icmp eq i24 %202, 0, !dbg !4911
  %204 = trunc i24 %75 to i8, !dbg !4913
  %205 = shl i8 %204, 1, !dbg !4913
  %206 = and i8 %205, 32, !dbg !4913
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4913
  call void @llvm.dbg.value(metadata i8 %207, metadata !4706, metadata !DIExpression()), !dbg !4777
  %208 = load i64, i64* %20, align 8, !dbg !4914
  call void @llvm.dbg.value(metadata i64 %208, metadata !4644, metadata !DIExpression()), !dbg !4763
  %209 = icmp slt i64 %208, 0, !dbg !4915
  br i1 %209, label %210, label %212, !dbg !4917

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4706, metadata !DIExpression()), !dbg !4777
  %211 = sub nsw i64 0, %208, !dbg !4918
  store i64 %211, i64* %20, align 8, !dbg !4920
  br label %212, !dbg !4921

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4777
  call void @llvm.dbg.value(metadata i8 %213, metadata !4706, metadata !DIExpression()), !dbg !4777
  %214 = load i64, i64* %20, align 8, !dbg !4922
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %215, metadata !4704, metadata !DIExpression()), !dbg !4777
  br label %216, !dbg !4924

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4925
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4926
  call void @llvm.dbg.value(metadata i8* %218, metadata !4704, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8 %217, metadata !4706, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.label(metadata !4762), !dbg !4927
  %219 = icmp sgt i32 %76, -1, !dbg !4928
  br i1 %219, label %222, label %220, !dbg !4929

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4930
  br label %245, !dbg !4929

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4932
  %224 = sub i32 %22, %223, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %224, metadata !4721, metadata !DIExpression()), !dbg !4933
  %225 = load i24, i24* %15, align 8, !dbg !4934
  %226 = and i24 %225, -65, !dbg !4934
  store i24 %226, i24* %15, align 8, !dbg !4934
  %227 = icmp ugt i32 %76, %224, !dbg !4935
  br i1 %227, label %228, label %245, !dbg !4937

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4938
  store i32 %229, i32* %16, align 4, !dbg !4940
  br label %245, !dbg !4941

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4942
  %232 = icmp eq i8* %231, null, !dbg !4944
  br i1 %232, label %245, label %233, !dbg !4945

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4946
  %235 = zext i32 %234 to i64, !dbg !4946
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %236, metadata !4704, metadata !DIExpression()), !dbg !4777
  %237 = load i24, i24* %15, align 8, !dbg !4949
  %238 = or i24 %237, 1048576, !dbg !4949
  store i24 %238, i24* %15, align 8, !dbg !4949
  store i8 120, i8* %21, align 1, !dbg !4950
  br label %216, !dbg !4951

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4952
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4955
  br label %363, !dbg !4956

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4957
  call void @llvm.dbg.value(metadata i32 %242, metadata !4719, metadata !DIExpression()), !dbg !4903
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4958
  call void @llvm.dbg.value(metadata i32 -1, metadata !4703, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %29, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8* %192, metadata !4704, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8* %243, metadata !4705, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8 0, metadata !4706, metadata !DIExpression()), !dbg !4777
  %244 = icmp eq i8* %192, null, !dbg !4959
  br i1 %244, label %363, label %245, !dbg !4961, !llvm.loop !4773

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4930
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4777
  call void @llvm.dbg.value(metadata i32 0, metadata !4725, metadata !DIExpression()), !dbg !4777
  %250 = zext i8 %249 to i32, !dbg !4962
  %251 = icmp eq i8 %249, 0, !dbg !4964
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  call void @llvm.dbg.value(metadata i32 undef, metadata !4724, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  call void @llvm.dbg.value(metadata i32 undef, metadata !4724, metadata !DIExpression()), !dbg !4777
  %252 = icmp sgt i32 %58, 0, !dbg !4965
  br i1 %252, label %253, label %302, !dbg !4966

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4930
  %255 = icmp eq i24 %254, 0, !dbg !4930
  %256 = ptrtoint i8* %248 to i32, !dbg !4967
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  %257 = ptrtoint i8* %247 to i32, !dbg !4967
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  %258 = xor i1 %251, true, !dbg !4968
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  %259 = sext i1 %258 to i32, !dbg !4968
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  %260 = lshr i24 %246, 19, !dbg !4969
  %261 = and i24 %260, 1, !dbg !4969
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4969
  %263 = zext i24 %262 to i32, !dbg !4969
  %264 = add i32 %257, %259, !dbg !4969
  %265 = add i32 %256, %263, !dbg !4969
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  %266 = and i24 %246, 4194304, !dbg !4970
  %267 = icmp eq i24 %266, 0, !dbg !4970
  %268 = load i32, i32* %16, align 4, !dbg !4972
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4777
  call void @llvm.dbg.value(metadata i32 undef, metadata !4724, metadata !DIExpression()), !dbg !4777
  %269 = load i32, i32* %17, align 8, !dbg !4973
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4973
  call void @llvm.dbg.value(metadata i32 undef, metadata !4724, metadata !DIExpression()), !dbg !4777
  %271 = add i32 %264, %58, !dbg !4973
  %272 = add i32 %265, %268, !dbg !4973
  %273 = add i32 %272, %270, !dbg !4974
  %274 = sub i32 %271, %273, !dbg !4974
  call void @llvm.dbg.value(metadata i32 %274, metadata !4702, metadata !DIExpression()), !dbg !4777
  %275 = and i24 %246, 4, !dbg !4975
  %276 = icmp eq i24 %275, 0, !dbg !4975
  br i1 %276, label %277, label %302, !dbg !4976

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4726, metadata !DIExpression()), !dbg !4977
  %278 = and i24 %246, 64, !dbg !4978
  %279 = icmp eq i24 %278, 0, !dbg !4978
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4979
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4979
  %282 = select i1 %279, i32 32, i32 48, !dbg !4979
  br i1 %280, label %287, label %283, !dbg !4979

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %284, metadata !4731, metadata !DIExpression()), !dbg !4981
  %285 = icmp slt i32 %284, 0, !dbg !4982
  %286 = add i32 %29, 1, !dbg !4980
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4777
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %290, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8 undef, metadata !4726, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i8 %288, metadata !4706, metadata !DIExpression()), !dbg !4777
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4984
  %292 = add i32 %291, -1, !dbg !4984
  br label %293, !dbg !4984

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4985
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %295, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %294, metadata !4702, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %294, metadata !4702, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4777
  %296 = icmp sgt i32 %294, 0, !dbg !4986
  br i1 %296, label %297, label %302, !dbg !4984

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %298, metadata !4702, metadata !DIExpression()), !dbg !4777
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %299, metadata !4737, metadata !DIExpression()), !dbg !4989
  %300 = icmp slt i32 %299, 0, !dbg !4990
  %301 = add i32 %295, 1, !dbg !4988
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %300, label %361, label %293, !llvm.loop !4992

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4777
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4777
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %305, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %304, metadata !4702, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8 %303, metadata !4706, metadata !DIExpression()), !dbg !4777
  %306 = icmp eq i8 %303, 0, !dbg !4994
  br i1 %306, label %312, label %307, !dbg !4995

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4996
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4997
  call void @llvm.dbg.value(metadata i32 %309, metadata !4740, metadata !DIExpression()), !dbg !4998
  %310 = icmp slt i32 %309, 0, !dbg !4999
  %311 = add i32 %305, 1, !dbg !4997
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %313, metadata !4643, metadata !DIExpression()), !dbg !4763
  %314 = lshr i24 %246, 20, !dbg !5001
  %315 = lshr i24 %246, 19, !dbg !5002
  %316 = or i24 %314, %315, !dbg !5003
  %317 = and i24 %316, 1, !dbg !5003
  %318 = icmp eq i24 %317, 0, !dbg !5003
  br i1 %318, label %323, label %319, !dbg !5004

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %320, metadata !4744, metadata !DIExpression()), !dbg !5006
  %321 = icmp slt i32 %320, 0, !dbg !5007
  %322 = add i32 %313, 1, !dbg !5005
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %324, metadata !4643, metadata !DIExpression()), !dbg !4763
  %325 = and i24 %246, 1048576, !dbg !5009
  %326 = icmp eq i24 %325, 0, !dbg !5009
  br i1 %326, label %333, label %327, !dbg !5010

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5011
  %329 = zext i8 %328 to i32, !dbg !5011
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5011
  call void @llvm.dbg.value(metadata i32 %330, metadata !4750, metadata !DIExpression()), !dbg !5012
  %331 = icmp slt i32 %330, 0, !dbg !5013
  %332 = add i32 %324, 1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %334, metadata !4643, metadata !DIExpression()), !dbg !4763
  %335 = load i32, i32* %16, align 4, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %335, metadata !4725, metadata !DIExpression()), !dbg !4777
  br label %336, !dbg !5016

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5017
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %338, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %337, metadata !4725, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4777
  %339 = icmp sgt i32 %337, 0, !dbg !5018
  br i1 %339, label %340, label %345, !dbg !5016

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %341, metadata !4725, metadata !DIExpression()), !dbg !4777
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %342, metadata !4754, metadata !DIExpression()), !dbg !5021
  %343 = icmp slt i32 %342, 0, !dbg !5022
  %344 = add i32 %338, 1, !dbg !5020
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %343, label %361, label %336, !llvm.loop !5024

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %346, metadata !4757, metadata !DIExpression()), !dbg !5027
  %347 = icmp slt i32 %346, 0, !dbg !5028
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %349, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %304, metadata !4702, metadata !DIExpression()), !dbg !4777
  %350 = icmp sgt i32 %304, 0, !dbg !5030
  br i1 %350, label %351, label %363, !dbg !5031

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5031
  %353 = add i32 %352, %338, !dbg !5031
  br label %354, !dbg !5031

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %355, metadata !4702, metadata !DIExpression()), !dbg !4777
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %356, metadata !4759, metadata !DIExpression()), !dbg !5033
  %357 = icmp slt i32 %356, 0, !dbg !5034
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5036
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4763
  call void @llvm.dbg.value(metadata i32 %359, metadata !4702, metadata !DIExpression()), !dbg !4777
  %360 = icmp sgt i32 %355, 1, !dbg !5030
  br i1 %360, label %354, label %363, !dbg !5031, !llvm.loop !5037

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4774
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %364, metadata !4643, metadata !DIExpression()), !dbg !4763
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4774
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4763
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5039
  ret i32 %366, !dbg !5039
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5040 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5044, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.value(metadata i8* %1, metadata !5045, metadata !DIExpression()), !dbg !5046
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5047
  store i24 0, i24* %3, align 4, !dbg !5047
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5047
  store i8 0, i8* %4, align 1, !dbg !5047
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5047
  store i32 0, i32* %5, align 4, !dbg !5047
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5047
  store i32 0, i32* %6, align 4, !dbg !5047
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5048
  call void @llvm.dbg.value(metadata i8* %7, metadata !5045, metadata !DIExpression()), !dbg !5046
  %8 = load i8, i8* %7, align 1, !dbg !5049
  %9 = icmp eq i8 %8, 37, !dbg !5051
  br i1 %9, label %10, label %12, !dbg !5052

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %11, metadata !5045, metadata !DIExpression()), !dbg !5046
  store i8 37, i8* %4, align 1, !dbg !5055
  br label %18, !dbg !5056

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %13, metadata !5045, metadata !DIExpression()), !dbg !5046
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %14, metadata !5045, metadata !DIExpression()), !dbg !5046
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %15, metadata !5045, metadata !DIExpression()), !dbg !5046
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5060
  call void @llvm.dbg.value(metadata i8* %16, metadata !5045, metadata !DIExpression()), !dbg !5046
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5061
  call void @llvm.dbg.value(metadata i8* %17, metadata !5045, metadata !DIExpression()), !dbg !5046
  br label %18, !dbg !5062

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5046
  ret i8* %19, !dbg !5063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5064 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5068, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %1, metadata !5069, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %2, metadata !5070, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %3, metadata !5071, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 0, metadata !5072, metadata !DIExpression()), !dbg !5075
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5076

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5077
  call void @llvm.dbg.value(metadata i32 %9, metadata !5072, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %8, metadata !5070, metadata !DIExpression()), !dbg !5075
  %10 = icmp ult i8* %8, %3, !dbg !5078
  br i1 %10, label %11, label %13, !dbg !5079

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5080
  br label %17, !dbg !5079

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5081

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5082
  %16 = icmp eq i8 %15, 0, !dbg !5081
  br i1 %16, label %24, label %17, !dbg !5076

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5080
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %19, metadata !5070, metadata !DIExpression()), !dbg !5075
  %20 = zext i8 %18 to i32, !dbg !5084
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %21, metadata !5073, metadata !DIExpression()), !dbg !5086
  %22 = icmp slt i32 %21, 0, !dbg !5087
  %23 = add i32 %9, 1, !dbg !5089
  call void @llvm.dbg.value(metadata i32 undef, metadata !5072, metadata !DIExpression()), !dbg !5075
  br i1 %22, label %24, label %7, !llvm.loop !5090

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5075
  ret i32 %25, !dbg !5092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5093 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5097, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5098, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %2, metadata !5099, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %3, metadata !5100, metadata !DIExpression()), !dbg !5107
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5108
  %6 = load i8, i8* %5, align 1, !dbg !5108
  %7 = zext i8 %6 to i32, !dbg !5109
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5110
  %9 = icmp eq i32 %8, 0, !dbg !5110
  call void @llvm.dbg.value(metadata i1 %9, metadata !5101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5107
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5111
  call void @llvm.dbg.value(metadata i32 %10, metadata !5102, metadata !DIExpression()), !dbg !5107
  %11 = ptrtoint i8* %3 to i32, !dbg !5112
  %12 = ptrtoint i8* %2 to i32, !dbg !5112
  %13 = sub i32 %11, %12, !dbg !5112
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5113
  call void @llvm.dbg.value(metadata i8* %14, metadata !5104, metadata !DIExpression()), !dbg !5107
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5114

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5107
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5097, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %18, metadata !5104, metadata !DIExpression()), !dbg !5107
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5115
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %25, metadata !5105, metadata !DIExpression()), !dbg !5117
  %26 = icmp ult i32 %25, 10, !dbg !5118
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5119
  %28 = add i32 %27, %25, !dbg !5117
  %29 = trunc i32 %28 to i8, !dbg !5119
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %30, metadata !5104, metadata !DIExpression()), !dbg !5107
  store i8 %29, i8* %30, align 1, !dbg !5121
  call void @llvm.dbg.value(metadata i64 %22, metadata !5097, metadata !DIExpression()), !dbg !5107
  %31 = icmp uge i64 %19, %15, !dbg !5122
  %32 = icmp ugt i8* %30, %2, !dbg !5123
  %33 = and i1 %31, %32, !dbg !5123
  br i1 %33, label %17, label %34, !dbg !5124, !llvm.loop !5125

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5127
  %36 = load i24, i24* %35, align 4, !dbg !5127
  %37 = and i24 %36, 32, !dbg !5127
  %38 = icmp eq i24 %37, 0, !dbg !5127
  br i1 %38, label %44, label %39, !dbg !5129

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5130

40:                                               ; preds = %39
  br label %41, !dbg !5132

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5136
  store i24 %43, i24* %35, align 4, !dbg !5136
  br label %44, !dbg !5137

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5138 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5144, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i8* %1, metadata !5145, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i32 %2, metadata !5146, metadata !DIExpression()), !dbg !5147
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5148
  %5 = load i24, i24* %4, align 4, !dbg !5148
  %6 = lshr i24 %5, 11, !dbg !5148
  %7 = and i24 %6, 15, !dbg !5148
  %8 = zext i24 %7 to i32, !dbg !5148
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5149

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5150
  store i32 %2, i32* %10, align 4, !dbg !5152
  br label %28, !dbg !5153

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5154
  store i8 %12, i8* %1, align 1, !dbg !5155
  br label %28, !dbg !5156

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5157
  %15 = bitcast i8* %1 to i16*, !dbg !5158
  store i16 %14, i16* %15, align 2, !dbg !5159
  br label %28, !dbg !5160

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5161
  store i32 %2, i32* %17, align 4, !dbg !5162
  br label %28, !dbg !5163

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5164
  %20 = bitcast i8* %1 to i64*, !dbg !5165
  store i64 %19, i64* %20, align 8, !dbg !5166
  br label %28, !dbg !5167

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5168
  %23 = bitcast i8* %1 to i64*, !dbg !5169
  store i64 %22, i64* %23, align 8, !dbg !5170
  br label %28, !dbg !5171

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5172
  store i32 %2, i32* %25, align 4, !dbg !5173
  br label %28, !dbg !5174

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5175
  store i32 %2, i32* %27, align 4, !dbg !5176
  br label %28, !dbg !5177

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5178
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5182, metadata !DIExpression()), !dbg !5183
  %2 = add i32 %0, -65, !dbg !5184
  %3 = icmp ult i32 %2, 26, !dbg !5185
  %4 = zext i1 %3 to i32, !dbg !5185
  ret i32 %4, !dbg !5186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5187 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5191, metadata !DIExpression()), !dbg !5192
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5193

2:                                                ; preds = %1
  br label %4, !dbg !5194

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5196

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5197
  ret i32 %5, !dbg !5198
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5199 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5201, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8* %1, metadata !5202, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8 1, metadata !5203, metadata !DIExpression()), !dbg !5204
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5205

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8* %5, metadata !5202, metadata !DIExpression()), !dbg !5204
  %6 = load i8, i8* %5, align 1, !dbg !5206
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5208

7:                                                ; preds = %4
  br label %11, !dbg !5209

8:                                                ; preds = %4
  br label %11, !dbg !5211

9:                                                ; preds = %4
  br label %11, !dbg !5212

10:                                               ; preds = %4
  br label %11, !dbg !5213

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5214
  %14 = or i24 %13, %12, !dbg !5214
  store i24 %14, i24* %3, align 4, !dbg !5214
  call void @llvm.dbg.value(metadata i8 poison, metadata !5203, metadata !DIExpression()), !dbg !5204
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5202, metadata !DIExpression()), !dbg !5204
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8* %15, metadata !5202, metadata !DIExpression()), !dbg !5204
  %17 = load i24, i24* %3, align 4, !dbg !5215
  %18 = and i24 %17, 68, !dbg !5217
  %19 = icmp eq i24 %18, 68, !dbg !5217
  br i1 %19, label %20, label %22, !dbg !5217

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5218
  store i24 %21, i24* %3, align 4, !dbg !5218
  br label %22, !dbg !5220

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5221
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5222 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5224, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression()), !dbg !5228
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5229
  %5 = load i24, i24* %4, align 4, !dbg !5230
  %6 = or i24 %5, 128, !dbg !5230
  store i24 %6, i24* %4, align 4, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression()), !dbg !5228
  %7 = load i8, i8* %1, align 1, !dbg !5231
  %8 = icmp eq i8 %7, 42, !dbg !5233
  br i1 %8, label %9, label %12, !dbg !5234

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5235
  store i24 %10, i24* %4, align 4, !dbg !5235
  call void @llvm.dbg.value(metadata i8* %1, metadata !5225, metadata !DIExpression()), !dbg !5228
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5237
  call void @llvm.dbg.value(metadata i8* %11, metadata !5225, metadata !DIExpression()), !dbg !5228
  store i8* %11, i8** %3, align 4, !dbg !5237
  br label %29, !dbg !5238

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5226, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8** %3, metadata !5225, metadata !DIExpression(DW_OP_deref)), !dbg !5228
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %13, metadata !5227, metadata !DIExpression()), !dbg !5228
  %14 = load i8*, i8** %3, align 4, !dbg !5240
  call void @llvm.dbg.value(metadata i8* %14, metadata !5225, metadata !DIExpression()), !dbg !5228
  %15 = icmp eq i8* %14, %1, !dbg !5242
  br i1 %15, label %29, label %16, !dbg !5243

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5244
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5246
  store i32 %13, i32* %18, align 4, !dbg !5247
  %19 = lshr i32 %13, 31, !dbg !5248
  %20 = lshr i24 %17, 1, !dbg !5249
  %21 = and i24 %20, 1, !dbg !5249
  %22 = zext i24 %21 to i32, !dbg !5249
  %23 = or i32 %19, %22, !dbg !5249
  %24 = trunc i32 %23 to i24, !dbg !5249
  %25 = shl nuw nsw i24 %24, 1, !dbg !5249
  %26 = and i24 %17, -131, !dbg !5249
  %27 = or i24 %26, 128, !dbg !5249
  %28 = or i24 %25, %27, !dbg !5249
  store i24 %28, i24* %4, align 4, !dbg !5249
  br label %29, !dbg !5250

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5228
  ret i8* %30, !dbg !5251
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5252 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5254, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %1, metadata !5255, metadata !DIExpression()), !dbg !5257
  %4 = load i8, i8* %1, align 1, !dbg !5258
  %5 = icmp eq i8 %4, 46, !dbg !5259
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5260
  %7 = load i24, i24* %6, align 4, !dbg !5261
  %8 = select i1 %5, i24 512, i24 0, !dbg !5261
  %9 = and i24 %7, -513, !dbg !5261
  %10 = or i24 %9, %8, !dbg !5261
  store i24 %10, i24* %6, align 4, !dbg !5261
  br i1 %5, label %11, label %32, !dbg !5262

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5255, metadata !DIExpression()), !dbg !5257
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %12, metadata !5255, metadata !DIExpression()), !dbg !5257
  store i8* %12, i8** %3, align 4, !dbg !5263
  %13 = load i8, i8* %12, align 1, !dbg !5264
  %14 = icmp eq i8 %13, 42, !dbg !5266
  br i1 %14, label %15, label %18, !dbg !5267

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5268
  store i24 %16, i24* %6, align 4, !dbg !5268
  call void @llvm.dbg.value(metadata i8* %12, metadata !5255, metadata !DIExpression()), !dbg !5257
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %17, metadata !5255, metadata !DIExpression()), !dbg !5257
  store i8* %17, i8** %3, align 4, !dbg !5270
  br label %32, !dbg !5271

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5255, metadata !DIExpression(DW_OP_deref)), !dbg !5257
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5272
  call void @llvm.dbg.value(metadata i32 %19, metadata !5256, metadata !DIExpression()), !dbg !5257
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5273
  store i32 %19, i32* %20, align 4, !dbg !5274
  %21 = lshr i32 %19, 31, !dbg !5275
  %22 = load i24, i24* %6, align 4, !dbg !5276
  %23 = lshr i24 %22, 1, !dbg !5276
  %24 = and i24 %23, 1, !dbg !5276
  %25 = zext i24 %24 to i32, !dbg !5276
  %26 = or i32 %21, %25, !dbg !5276
  %27 = trunc i32 %26 to i24, !dbg !5276
  %28 = shl nuw nsw i24 %27, 1, !dbg !5276
  %29 = and i24 %22, -3, !dbg !5276
  %30 = or i24 %28, %29, !dbg !5276
  store i24 %30, i24* %6, align 4, !dbg !5276
  %31 = load i8*, i8** %3, align 4, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %31, metadata !5255, metadata !DIExpression()), !dbg !5257
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5257
  ret i8* %33, !dbg !5278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5279 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i8* %1, metadata !5282, metadata !DIExpression()), !dbg !5283
  %3 = load i8, i8* %1, align 1, !dbg !5284
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5285

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5286
  call void @llvm.dbg.value(metadata i8* %5, metadata !5282, metadata !DIExpression()), !dbg !5283
  %6 = load i8, i8* %5, align 1, !dbg !5289
  %7 = icmp eq i8 %6, 104, !dbg !5290
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %9 = load i24, i24* %8, align 4, !dbg !5291
  %10 = and i24 %9, -30721, !dbg !5291
  br i1 %7, label %11, label %14, !dbg !5292

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5293
  store i24 %12, i24* %8, align 4, !dbg !5293
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5295
  call void @llvm.dbg.value(metadata i8* %13, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %56, !dbg !5296

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5297
  store i24 %15, i24* %8, align 4, !dbg !5297
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %17, metadata !5282, metadata !DIExpression()), !dbg !5283
  %18 = load i8, i8* %17, align 1, !dbg !5301
  %19 = icmp eq i8 %18, 108, !dbg !5302
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5303
  %21 = load i24, i24* %20, align 4, !dbg !5303
  %22 = and i24 %21, -30721, !dbg !5303
  br i1 %19, label %23, label %26, !dbg !5304

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5305
  store i24 %24, i24* %20, align 4, !dbg !5305
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5307
  call void @llvm.dbg.value(metadata i8* %25, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %56, !dbg !5308

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5309
  store i24 %27, i24* %20, align 4, !dbg !5309
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5311
  %30 = load i24, i24* %29, align 4, !dbg !5312
  %31 = and i24 %30, -30721, !dbg !5312
  %32 = or i24 %31, 10240, !dbg !5312
  store i24 %32, i24* %29, align 4, !dbg !5312
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5313
  call void @llvm.dbg.value(metadata i8* %33, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %56, !dbg !5314

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5315
  %36 = load i24, i24* %35, align 4, !dbg !5316
  %37 = and i24 %36, -30721, !dbg !5316
  %38 = or i24 %37, 12288, !dbg !5316
  store i24 %38, i24* %35, align 4, !dbg !5316
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5317
  call void @llvm.dbg.value(metadata i8* %39, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %56, !dbg !5318

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5319
  %42 = load i24, i24* %41, align 4, !dbg !5320
  %43 = and i24 %42, -30721, !dbg !5320
  %44 = or i24 %43, 14336, !dbg !5320
  store i24 %44, i24* %41, align 4, !dbg !5320
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5321
  call void @llvm.dbg.value(metadata i8* %45, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %56, !dbg !5322

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5323
  %48 = load i24, i24* %47, align 4, !dbg !5324
  %49 = and i24 %48, -30723, !dbg !5324
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5325
  call void @llvm.dbg.value(metadata i8* %50, metadata !5282, metadata !DIExpression()), !dbg !5283
  %51 = or i24 %49, 16386, !dbg !5326
  store i24 %51, i24* %47, align 4, !dbg !5326
  br label %56, !dbg !5327

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5328
  %54 = load i24, i24* %53, align 4, !dbg !5329
  %55 = and i24 %54, -30721, !dbg !5329
  store i24 %55, i24* %53, align 4, !dbg !5329
  br label %56, !dbg !5330

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5282, metadata !DIExpression()), !dbg !5283
  ret i8* %57, !dbg !5331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5332 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5334, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i8* %1, metadata !5335, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i8 0, metadata !5336, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i8* %1, metadata !5335, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5339
  %3 = load i8, i8* %1, align 1, !dbg !5340
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5341
  store i8 %3, i8* %4, align 1, !dbg !5342
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5343

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5344

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5345
  %9 = load i24, i24* %8, align 4, !dbg !5345
  %10 = and i24 %9, -458753, !dbg !5345
  %11 = or i24 %10, %7, !dbg !5345
  call void @llvm.dbg.label(metadata !5337), !dbg !5346
  %12 = and i24 %9, 30720, !dbg !5347
  %13 = icmp eq i24 %12, 16384, !dbg !5347
  %14 = zext i1 %13 to i24, !dbg !5349
  %15 = or i24 %11, %14, !dbg !5349
  %16 = icmp eq i8 %3, 99, !dbg !5350
  br i1 %16, label %17, label %43, !dbg !5352

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5353
  %19 = icmp ne i24 %18, 0, !dbg !5353
  call void @llvm.dbg.value(metadata i1 %19, metadata !5336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5339
  br label %43, !dbg !5355

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5356
  %22 = load i24, i24* %21, align 4, !dbg !5357
  %23 = and i24 %22, -458753, !dbg !5357
  %24 = or i24 %23, 262144, !dbg !5357
  call void @llvm.dbg.value(metadata i8 1, metadata !5336, metadata !DIExpression()), !dbg !5339
  br label %43, !dbg !5358

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5361
  %27 = load i24, i24* %26, align 4, !dbg !5362
  %28 = and i24 %27, -458753, !dbg !5362
  %29 = or i24 %28, 196608, !dbg !5362
  %30 = and i24 %27, 30720, !dbg !5363
  %31 = icmp eq i24 %30, 16384, !dbg !5363
  br label %43, !dbg !5365

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5366
  %34 = load i24, i24* %33, align 4, !dbg !5367
  %35 = and i24 %34, -458753, !dbg !5367
  %36 = or i24 %35, 196608, !dbg !5367
  %37 = and i24 %34, 30720, !dbg !5368
  %38 = icmp ne i24 %37, 0, !dbg !5368
  br label %43, !dbg !5370

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5371
  %41 = load i24, i24* %40, align 4, !dbg !5372
  %42 = or i24 %41, 1, !dbg !5372
  br label %43, !dbg !5373

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5374
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5375
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5376
  call void @llvm.dbg.value(metadata i8* %48, metadata !5335, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i8 poison, metadata !5336, metadata !DIExpression()), !dbg !5339
  %49 = lshr i24 %44, 1, !dbg !5374
  %50 = and i24 %49, 1, !dbg !5374
  %51 = zext i24 %50 to i32, !dbg !5374
  %52 = or i32 %51, %47, !dbg !5374
  %53 = trunc i32 %52 to i24, !dbg !5374
  %54 = shl nuw nsw i24 %53, 1, !dbg !5374
  %55 = and i24 %44, -3, !dbg !5374
  %56 = or i24 %54, %55, !dbg !5374
  store i24 %56, i24* %46, align 4, !dbg !5374
  ret i8* %48, !dbg !5377
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5378 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5382, metadata !DIExpression()), !dbg !5385
  %2 = load i8*, i8** %0, align 4, !dbg !5386
  call void @llvm.dbg.value(metadata i8* %2, metadata !5383, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.value(metadata i32 0, metadata !5384, metadata !DIExpression()), !dbg !5385
  %3 = load i8, i8* %2, align 1, !dbg !5387
  %4 = zext i8 %3 to i32, !dbg !5388
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5389
  %6 = icmp eq i32 %5, 0, !dbg !5390
  br i1 %6, label %19, label %7, !dbg !5390

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5384, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.value(metadata i8* %10, metadata !5383, metadata !DIExpression()), !dbg !5385
  %11 = mul i32 %9, 10, !dbg !5391
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5393
  call void @llvm.dbg.value(metadata i8* %12, metadata !5383, metadata !DIExpression()), !dbg !5385
  %13 = add i32 %11, -48, !dbg !5394
  %14 = add i32 %13, %8, !dbg !5395
  call void @llvm.dbg.value(metadata i32 %14, metadata !5384, metadata !DIExpression()), !dbg !5385
  %15 = load i8, i8* %12, align 1, !dbg !5387
  %16 = zext i8 %15 to i32, !dbg !5388
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5389
  %18 = icmp eq i32 %17, 0, !dbg !5390
  br i1 %18, label %19, label %7, !dbg !5390, !llvm.loop !5396

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5385
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5385
  store i8* %20, i8** %0, align 4, !dbg !5398
  ret i32 %21, !dbg !5399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5402, metadata !DIExpression()), !dbg !5403
  %2 = add i32 %0, -48, !dbg !5404
  %3 = icmp ult i32 %2, 10, !dbg !5405
  %4 = zext i1 %3 to i32, !dbg !5405
  ret i32 %4, !dbg !5406
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5412, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata i32 %1, metadata !5413, metadata !DIExpression()), !dbg !5414
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5415, !srcloc !5417
  ret void, !dbg !5418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5419 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5421, metadata !DIExpression()), !dbg !5429
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5430
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5430
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5422, metadata !DIExpression()), !dbg !5431
  call void @llvm.va_start(i8* nonnull %3), !dbg !5432
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5433
  %5 = load i32, i32* %4, align 4, !dbg !5433
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5433
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5433
  call void @llvm.va_end(i8* nonnull %3), !dbg !5434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5435
  ret void, !dbg !5435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5436 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6084, !srcloc !6085
  ret void, !dbg !6086
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6089, metadata !DIExpression()), !dbg !6091
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6092
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6094, !srcloc !6103
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6094
  call void @llvm.dbg.value(metadata i32 %3, metadata !6100, metadata !DIExpression()) #23, !dbg !6104
  call void @llvm.dbg.value(metadata i32 undef, metadata !6101, metadata !DIExpression()) #23, !dbg !6104
  call void @llvm.dbg.value(metadata i32 %3, metadata !6090, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i32 %3, metadata !6105, metadata !DIExpression()) #23, !dbg !6110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6112, !srcloc !6113
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6114
  ret i32 0, !dbg !6115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6116 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6118
  %2 = or i32 %1, 512, !dbg !6118
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6118
  ret void, !dbg !6119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6120 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6121
  %2 = or i32 %1, 1024, !dbg !6121
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6121
  ret void, !dbg !6122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6123 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6125, metadata !DIExpression()), !dbg !6126
  ret i32 0, !dbg !6127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6128 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6131, metadata !DIExpression()), !dbg !6139
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6140
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6132, metadata !DIExpression()), !dbg !6141
  call void @llvm.va_start(i8* nonnull %3), !dbg !6142
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6143
  %5 = load i32, i32* %4, align 4, !dbg !6143
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6143
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6143
  call void @llvm.va_end(i8* nonnull %3), !dbg !6144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6145
  ret void, !dbg !6145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6146 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i8* %0, metadata !6150, metadata !DIExpression()), !dbg !6152
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6153
  ret void, !dbg !6154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6159, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %1, metadata !6160, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %2, metadata !6161, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %1, metadata !6162, metadata !DIExpression()), !dbg !6163
  %4 = icmp eq i32 %2, 0, !dbg !6164
  br i1 %4, label %14, label %5, !dbg !6165

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6163
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6165

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6162, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %10, metadata !6161, metadata !DIExpression()), !dbg !6163
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 noundef %7) #25, !dbg !6166
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6168
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %11, metadata !6161, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %12, metadata !6162, metadata !DIExpression()), !dbg !6163
  br i1 %13, label %14, label %8, !dbg !6169, !llvm.loop !6170

14:                                               ; preds = %8, %3
  ret void, !dbg !6172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6178, metadata !DIExpression()), !dbg !6179
  %2 = add i32 %0, -1, !dbg !6180
  %3 = icmp ult i32 %2, 4, !dbg !6180
  %4 = shl i32 %2, 3, !dbg !6180
  %5 = lshr i32 1145657157, %4, !dbg !6180
  %6 = trunc i32 %5 to i8, !dbg !6180
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6180
  ret i8 %7, !dbg !6181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6186, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.value(metadata i32 %1, metadata !6187, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.value(metadata i32 0, metadata !6188, metadata !DIExpression()), !dbg !6198
  br label %4, !dbg !6199

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.36, i32 0, i32 0)) #25, !dbg !6200
  call void @llvm.dbg.value(metadata i32 0, metadata !6190, metadata !DIExpression()), !dbg !6201
  br label %16, !dbg !6202

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6188, metadata !DIExpression()), !dbg !6198
  %6 = icmp ult i32 %5, %1, !dbg !6203
  br i1 %6, label %7, label %11, !dbg !6207

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6208
  %9 = load i8, i8* %8, align 1, !dbg !6208
  %10 = zext i8 %9 to i32, !dbg !6210
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.37, i32 0, i32 0), i32 noundef %10) #25, !dbg !6211
  br label %12, !dbg !6212

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !6213
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6215
  call void @llvm.dbg.value(metadata i32 %13, metadata !6188, metadata !DIExpression()), !dbg !6198
  %14 = icmp eq i32 %13, 8, !dbg !6216
  br i1 %14, label %3, label %4, !dbg !6199, !llvm.loop !6217

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.39, i32 0, i32 0)) #25, !dbg !6219
  ret void, !dbg !6220

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6190, metadata !DIExpression()), !dbg !6201
  %18 = icmp ult i32 %17, %1, !dbg !6221
  br i1 %18, label %19, label %26, !dbg !6222

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6223
  %21 = load i8, i8* %20, align 1, !dbg !6223
  call void @llvm.dbg.value(metadata i8 %21, metadata !6192, metadata !DIExpression()), !dbg !6224
  %22 = zext i8 %21 to i32, !dbg !6225
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6226
  %24 = icmp eq i32 %23, 0, !dbg !6227
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6226
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.40, i32 0, i32 0), i32 noundef %25) #25, !dbg !6228
  br label %27, !dbg !6229

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.41, i32 0, i32 0)) #25, !dbg !6230
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %28, metadata !6190, metadata !DIExpression()), !dbg !6201
  %29 = icmp eq i32 %28, 8, !dbg !6233
  br i1 %29, label %15, label %16, !dbg !6202, !llvm.loop !6234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6238, metadata !DIExpression()), !dbg !6239
  %2 = add i32 %0, -32, !dbg !6240
  %3 = icmp ult i32 %2, 95, !dbg !6240
  %4 = zext i1 %3 to i32, !dbg !6240
  ret i32 %4, !dbg !6241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6291, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6292, metadata !DIExpression()), !dbg !6293
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6294
  br i1 %3, label %5, label %4, !dbg !6296

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6297
  br label %5, !dbg !6299

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6300
  ret void, !dbg !6301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6302 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6306, metadata !DIExpression()), !dbg !6307
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6308
  %3 = load i32, i32* %2, align 4, !dbg !6308
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6308
  %5 = load i32, i32* %4, align 4, !dbg !6308
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6308
  %7 = load i32, i32* %6, align 4, !dbg !6308
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6308
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6313
  %9 = load i32, i32* %8, align 4, !dbg !6313
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6313
  %11 = load i32, i32* %10, align 4, !dbg !6313
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6313
  %13 = load i32, i32* %12, align 4, !dbg !6313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.43, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6313
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6318
  %15 = load i32, i32* %14, align 4, !dbg !6318
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6318
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6323
  %17 = load i32, i32* %16, align 4, !dbg !6323
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.45, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6323
  ret void, !dbg !6328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6329 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6346, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6347, metadata !DIExpression()), !dbg !6349
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6350
  %4 = load i32, i32* %3, align 4, !dbg !6350
  call void @llvm.dbg.value(metadata i32 %4, metadata !6348, metadata !DIExpression()), !dbg !6349
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6353 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6357, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i8* %0, metadata !6358, metadata !DIExpression()), !dbg !6360
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6361
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6361
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6359, metadata !DIExpression()), !dbg !6362
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6362
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6363
  %5 = bitcast i8* %4 to i32*, !dbg !6363
  %6 = load i32, i32* %5, align 4, !dbg !6363
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6364
  store i32 %6, i32* %7, align 4, !dbg !6365
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6366
  unreachable, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6371, metadata !DIExpression()), !dbg !6372
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6373
  ret void, !dbg !6374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6379, metadata !DIExpression()), !dbg !6380
  %2 = icmp sgt i32 %0, -1, !dbg !6381
  br i1 %2, label %3, label %8, !dbg !6383

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6384, !srcloc !6386
  %4 = and i32 %0, 31, !dbg !6387
  %5 = shl nuw i32 1, %4, !dbg !6388
  %6 = lshr i32 %0, 5, !dbg !6389
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6390
  store volatile i32 %5, i32* %7, align 4, !dbg !6391
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6392, !srcloc !6393
  br label %8, !dbg !6394

8:                                                ; preds = %3, %1
  ret void, !dbg !6395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6398, metadata !DIExpression()), !dbg !6399
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6400
  ret void, !dbg !6401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6404, metadata !DIExpression()), !dbg !6405
  %2 = icmp sgt i32 %0, -1, !dbg !6406
  br i1 %2, label %3, label %8, !dbg !6408

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6409
  %5 = shl nuw i32 1, %4, !dbg !6411
  %6 = lshr i32 %0, 5, !dbg !6412
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6413
  store volatile i32 %5, i32* %7, align 4, !dbg !6414
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6415, !srcloc !6419
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6420, !srcloc !6423
  br label %8, !dbg !6424

8:                                                ; preds = %3, %1
  ret void, !dbg !6425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6430, metadata !DIExpression()), !dbg !6431
  %2 = lshr i32 %0, 5, !dbg !6432
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6433
  %4 = load volatile i32, i32* %3, align 4, !dbg !6433
  %5 = and i32 %0, 31, !dbg !6434
  %6 = shl nuw i32 1, %5, !dbg !6434
  %7 = and i32 %4, %6, !dbg !6435
  ret i32 %7, !dbg !6436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6441, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 %1, metadata !6442, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 %2, metadata !6443, metadata !DIExpression()), !dbg !6444
  %4 = add i32 %1, 1, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %4, metadata !6442, metadata !DIExpression()), !dbg !6444
  %5 = icmp ult i32 %4, 16, !dbg !6448
  br i1 %5, label %7, label %6, !dbg !6451

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6452
  unreachable, !dbg !6452

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6454
  ret void, !dbg !6455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6460, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i32 %1, metadata !6461, metadata !DIExpression()), !dbg !6462
  %3 = trunc i32 %1 to i8, !dbg !6463
  %4 = shl i8 %3, 4, !dbg !6463
  %5 = and i32 %0, 15, !dbg !6465
  %6 = add nsw i32 %5, -4, !dbg !6465
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6465
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6465
  %9 = icmp slt i32 %0, 0, !dbg !6465
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6465
  store volatile i8 %4, i8* %10, align 1, !dbg !6463
  ret void, !dbg !6466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6467 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6469, metadata !DIExpression()), !dbg !6470
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6471
  ret void, !dbg !6472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6473 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6475
  tail call void @z_arm_int_exit() #25, !dbg !6476
  ret void, !dbg !6477
}

; Function Attrs: optsize
declare !dbg !6478 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6479 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6481 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6483
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6484
  tail call void @z_bss_zero() #25, !dbg !6485
  tail call void @z_data_copy() #25, !dbg !6486
  tail call void @z_arm_interrupt_init() #25, !dbg !6487
  tail call void @z_cstart() #27, !dbg !6488
  unreachable, !dbg !6488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6489 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6490
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6491, !srcloc !6494
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6495, !srcloc !6498
  ret void, !dbg !6499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6500 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6501
  %2 = and i32 %1, -15728641, !dbg !6501
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6501
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6502, !srcloc !6509
  call void @llvm.dbg.value(metadata i32 %3, metadata !6507, metadata !DIExpression()) #23, !dbg !6510
  %4 = and i32 %3, -5, !dbg !6511
  call void @llvm.dbg.value(metadata i32 %4, metadata !6512, metadata !DIExpression()) #23, !dbg !6517
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6521, !srcloc !6498
  ret void, !dbg !6523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6527, metadata !DIExpression()), !dbg !6528
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6529
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6530
  store i32 %0, i32* %3, align 4, !dbg !6531
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6532
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6533
  store i32 %4, i32* %5, align 4, !dbg !6534
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6535
  %7 = or i32 %6, 268435456, !dbg !6535
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6535
  call void @llvm.dbg.value(metadata i32 0, metadata !6536, metadata !DIExpression()) #23, !dbg !6539
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6541, !srcloc !6542
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6543
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6544
  %10 = load i32, i32* %9, align 4, !dbg !6544
  ret i32 %10, !dbg !6545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6659, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6660, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %2, metadata !6661, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6662, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %4, metadata !6663, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %5, metadata !6664, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %6, metadata !6665, metadata !DIExpression()), !dbg !6667
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6668
  call void @llvm.dbg.value(metadata i8* %8, metadata !6666, metadata !DIExpression()), !dbg !6667
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6669
  %10 = bitcast i8* %9 to i32*, !dbg !6669
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6670
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6671
  %12 = bitcast i8* %8 to i32*, !dbg !6672
  store i32 %11, i32* %12, align 4, !dbg !6673
  %13 = ptrtoint i8* %4 to i32, !dbg !6674
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6675
  %15 = bitcast i8* %14 to i32*, !dbg !6675
  store i32 %13, i32* %15, align 4, !dbg !6676
  %16 = ptrtoint i8* %5 to i32, !dbg !6677
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6678
  %18 = bitcast i8* %17 to i32*, !dbg !6678
  store i32 %16, i32* %18, align 4, !dbg !6679
  %19 = ptrtoint i8* %6 to i32, !dbg !6680
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6681
  %21 = bitcast i8* %20 to i32*, !dbg !6681
  store i32 %19, i32* %21, align 4, !dbg !6682
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6683
  %23 = bitcast i8* %22 to i32*, !dbg !6683
  store i32 16777216, i32* %23, align 4, !dbg !6684
  %24 = ptrtoint i8* %8 to i32, !dbg !6685
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6686
  store i32 %24, i32* %25, align 8, !dbg !6687
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6688
  store i32 0, i32* %26, align 4, !dbg !6689
  ret void, !dbg !6690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6696, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i32 %1, metadata !6697, metadata !DIExpression()), !dbg !6702
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6703
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6698, metadata !DIExpression()), !dbg !6702
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6704
  br i1 %4, label %19, label %5, !dbg !6706

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6701, metadata !DIExpression()), !dbg !6702
  %6 = icmp eq i32 %0, -22, !dbg !6707
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6707
  %8 = load i32, i32* %7, align 4, !dbg !6707
  br i1 %6, label %16, label %9, !dbg !6709

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6707
  %11 = icmp ule i32 %10, %0, !dbg !6707
  %12 = icmp ugt i32 %8, %0, !dbg !6707
  %13 = and i1 %12, %11, !dbg !6707
  %14 = icmp ugt i32 %8, %1, !dbg !6707
  %15 = and i1 %14, %13, !dbg !6707
  br i1 %15, label %18, label %19, !dbg !6707

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6707
  br i1 %17, label %18, label %19, !dbg !6709

18:                                               ; preds = %9, %16
  br label %19, !dbg !6710

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6702
  ret i32 %20, !dbg !6712
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6717, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %1, metadata !6718, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6719, metadata !DIExpression()), !dbg !6720
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6721
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6722
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6723, !srcloc !6724
  unreachable, !dbg !6725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6726 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6744, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 %1, metadata !6745, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 %2, metadata !6746, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6747, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 0, metadata !6748, metadata !DIExpression()), !dbg !6754
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6755
  call void @llvm.dbg.value(metadata i32 %8, metadata !6749, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6754
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6756
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6756
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6757
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6757
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6753, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 0, metadata !6759, metadata !DIExpression()) #23, !dbg !6762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6764, !srcloc !6765
  call void @llvm.dbg.value(metadata i8* %6, metadata !6751, metadata !DIExpression(DW_OP_deref)), !dbg !6754
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6766
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6752, metadata !DIExpression()), !dbg !6754
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6767
  br i1 %11, label %12, label %13, !dbg !6770

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6771
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.55, i32 0, i32 0)) #25, !dbg !6771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6771
  unreachable, !dbg !6771

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6773
  call void @llvm.dbg.value(metadata i32 %14, metadata !6749, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i8* %5, metadata !6750, metadata !DIExpression(DW_OP_deref)), !dbg !6754
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6774
  call void @llvm.dbg.value(metadata i32 %15, metadata !6748, metadata !DIExpression()), !dbg !6754
  %16 = load i8, i8* %5, align 1, !dbg !6775, !range !6777
  call void @llvm.dbg.value(metadata i8 %16, metadata !6750, metadata !DIExpression()), !dbg !6754
  %17 = icmp eq i8 %16, 0, !dbg !6775
  br i1 %17, label %18, label %35, !dbg !6778

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6779
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6780
  %21 = load i8, i8* %6, align 1, !dbg !6781, !range !6777
  call void @llvm.dbg.value(metadata i8 %21, metadata !6751, metadata !DIExpression()), !dbg !6754
  %22 = icmp eq i8 %21, 0, !dbg !6781
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6783
  %24 = load i32, i32* %23, align 4, !dbg !6783
  br i1 %22, label %30, label %25, !dbg !6784

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6785
  %27 = icmp eq i32 %26, 0, !dbg !6788
  br i1 %27, label %28, label %34, !dbg !6789

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6790
  br label %32, !dbg !6792

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6793
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6783
  br label %34, !dbg !6795

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6795
  br label %35, !dbg !6796

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6796
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6796
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6796
  ret void, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6802, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i32 %1, metadata !6803, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i32 %2, metadata !6804, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8* %3, metadata !6805, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8 0, metadata !6806, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6807, metadata !DIExpression()), !dbg !6808
  store i8 0, i8* %3, align 1, !dbg !6809
  %5 = icmp ugt i32 %2, -16777217, !dbg !6810
  br i1 %5, label %6, label %17, !dbg !6812

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6813
  %8 = icmp eq i32 %7, 8, !dbg !6813
  br i1 %8, label %9, label %10, !dbg !6813

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.66, i32 0, i32 0), i32 noundef 69) #25, !dbg !6815
  br label %17, !dbg !6821

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6822
  %12 = icmp eq i32 %11, 0, !dbg !6822
  br i1 %12, label %13, label %14, !dbg !6823

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6807, metadata !DIExpression()), !dbg !6808
  store i8 1, i8* %3, align 1, !dbg !6826
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6808
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6807, metadata !DIExpression()), !dbg !6808
  br label %17, !dbg !6829

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6808
  ret %struct.__esf* %18, !dbg !6830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6831 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6835, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 %1, metadata !6836, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i8* %2, metadata !6837, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata i32 0, metadata !6838, metadata !DIExpression()), !dbg !6839
  store i8 0, i8* %2, align 1, !dbg !6840
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6841

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %5, metadata !6838, metadata !DIExpression()), !dbg !6839
  br label %12, !dbg !6844

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6845
  call void @llvm.dbg.value(metadata i32 %7, metadata !6838, metadata !DIExpression()), !dbg !6839
  br label %12, !dbg !6846

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6847
  call void @llvm.dbg.value(metadata i32 0, metadata !6838, metadata !DIExpression()), !dbg !6839
  br label %12, !dbg !6848

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6849
  call void @llvm.dbg.value(metadata i32 0, metadata !6838, metadata !DIExpression()), !dbg !6839
  br label %12, !dbg !6850

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6851
  br label %12, !dbg !6852

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6853
  br label %12, !dbg !6854

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6839
  call void @llvm.dbg.value(metadata i32 %13, metadata !6838, metadata !DIExpression()), !dbg !6839
  ret i32 %13, !dbg !6855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6856 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6860, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i8* %1, metadata !6861, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 0, metadata !6862, metadata !DIExpression()), !dbg !6863
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6864
  store i8 0, i8* %1, align 1, !dbg !6869
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6870
  %4 = and i32 %3, 2, !dbg !6872
  %5 = icmp eq i32 %4, 0, !dbg !6873
  br i1 %5, label %7, label %6, !dbg !6874

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.59, i32 0, i32 0), i32 noundef 69) #25, !dbg !6875
  br label %38, !dbg !6881

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6882
  %9 = icmp sgt i32 %8, -1, !dbg !6884
  br i1 %9, label %11, label %10, !dbg !6885

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !6886
  br label %38, !dbg !6892

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6893
  %13 = and i32 %12, 1073741824, !dbg !6895
  %14 = icmp eq i32 %13, 0, !dbg !6896
  br i1 %14, label %37, label %15, !dbg !6897

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.61, i32 0, i32 0), i32 noundef 69) #25, !dbg !6898
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6904
  br i1 %16, label %17, label %21, !dbg !6906

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6907
  %19 = load i32, i32* %18, align 4, !dbg !6907
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.62, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6907
  %20 = load i32, i32* %18, align 4, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %20, metadata !6862, metadata !DIExpression()), !dbg !6863
  br label %38, !dbg !6914

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6915
  %23 = and i32 %22, 255, !dbg !6917
  %24 = icmp eq i32 %23, 0, !dbg !6918
  br i1 %24, label %27, label %25, !dbg !6919

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6920
  call void @llvm.dbg.value(metadata i32 %26, metadata !6862, metadata !DIExpression()), !dbg !6863
  br label %38, !dbg !6922

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6923
  %29 = and i32 %28, 65280, !dbg !6925
  %30 = icmp eq i32 %29, 0, !dbg !6926
  br i1 %30, label %32, label %31, !dbg !6927

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6928
  call void @llvm.dbg.value(metadata i32 0, metadata !6862, metadata !DIExpression()), !dbg !6863
  br label %38, !dbg !6930

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6931
  %34 = icmp ult i32 %33, 65536, !dbg !6933
  br i1 %34, label %36, label %35, !dbg !6934

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6935
  call void @llvm.dbg.value(metadata i32 0, metadata !6862, metadata !DIExpression()), !dbg !6863
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.64, i32 0, i32 0)) #25, !dbg !6937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6937
  unreachable, !dbg !6937

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.65, i32 0, i32 0)) #25, !dbg !6942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6942
  unreachable, !dbg !6942

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6863
  call void @llvm.dbg.value(metadata i32 %39, metadata !6862, metadata !DIExpression()), !dbg !6863
  ret i32 %39, !dbg !6947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6948 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6950, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i32 %1, metadata !6951, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i8* %2, metadata !6952, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i32 -22, metadata !6954, metadata !DIExpression()), !dbg !6963
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6964
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6969
  %5 = and i32 %4, 16, !dbg !6971
  %6 = icmp eq i32 %5, 0, !dbg !6972
  br i1 %6, label %8, label %7, !dbg !6973

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6974
  br label %8, !dbg !6980

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6981
  %10 = and i32 %9, 8, !dbg !6983
  %11 = icmp eq i32 %10, 0, !dbg !6984
  br i1 %11, label %13, label %12, !dbg !6985

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6986
  br label %13, !dbg !6992

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6993
  %15 = and i32 %14, 2, !dbg !6994
  %16 = icmp eq i32 %15, 0, !dbg !6995
  br i1 %16, label %27, label %17, !dbg !6996

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6997
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7002
  call void @llvm.dbg.value(metadata i32 %18, metadata !6955, metadata !DIExpression()), !dbg !7003
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7004
  %20 = and i32 %19, 128, !dbg !7006
  %21 = icmp eq i32 %20, 0, !dbg !7007
  br i1 %21, label %27, label %22, !dbg !7008

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6954, metadata !DIExpression()), !dbg !6963
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7009
  %23 = icmp eq i32 %1, 0, !dbg !7015
  br i1 %23, label %27, label %24, !dbg !7017

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7018
  %26 = and i32 %25, -129, !dbg !7018
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7018
  br label %27, !dbg !7020

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6963
  call void @llvm.dbg.value(metadata i32 %28, metadata !6954, metadata !DIExpression()), !dbg !6963
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7021
  %30 = and i32 %29, 1, !dbg !7023
  %31 = icmp eq i32 %30, 0, !dbg !7024
  br i1 %31, label %33, label %32, !dbg !7025

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7026
  br label %33, !dbg !7032

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7033
  %35 = and i32 %34, 32, !dbg !7035
  %36 = icmp eq i32 %35, 0, !dbg !7036
  br i1 %36, label %38, label %37, !dbg !7037

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7038
  br label %38, !dbg !7044

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7045
  %40 = and i32 %39, 16, !dbg !7046
  %41 = icmp eq i32 %40, 0, !dbg !7046
  br i1 %41, label %42, label %46, !dbg !7047

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7048
  %44 = and i32 %43, 2, !dbg !7049
  %45 = icmp eq i32 %44, 0, !dbg !7049
  br i1 %45, label %60, label %46, !dbg !7050

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7051
  %48 = and i32 %47, 2048, !dbg !7052
  %49 = icmp eq i32 %48, 0, !dbg !7052
  br i1 %49, label %60, label %50, !dbg !7053

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7054
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7055
  call void @llvm.dbg.value(metadata i32 %52, metadata !6958, metadata !DIExpression()), !dbg !7056
  %53 = icmp eq i32 %52, 0, !dbg !7057
  br i1 %53, label %55, label %54, !dbg !7059

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7060, metadata !DIExpression()) #23, !dbg !7063
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7066, !srcloc !7067
  call void @llvm.dbg.value(metadata i32 2, metadata !6953, metadata !DIExpression()), !dbg !6963
  br label %60, !dbg !7068

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7069
  %57 = and i32 %56, 16, !dbg !7069
  %58 = icmp eq i32 %57, 0, !dbg !7069
  br i1 %58, label %60, label %59, !dbg !7073

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7074
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7074
  unreachable, !dbg !7074

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6963
  call void @llvm.dbg.value(metadata i32 %61, metadata !6953, metadata !DIExpression()), !dbg !6963
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7076
  %63 = and i32 %62, 32, !dbg !7078
  %64 = icmp eq i32 %63, 0, !dbg !7079
  br i1 %64, label %68, label %65, !dbg !7080

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7081
  %67 = and i32 %66, -8193, !dbg !7081
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7081
  br label %68, !dbg !7083

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7084
  %70 = or i32 %69, 255, !dbg !7084
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7084
  store i8 0, i8* %2, align 1, !dbg !7085
  ret i32 %61, !dbg !7086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7087 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7091, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i32 %0, metadata !7092, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i8* %1, metadata !7093, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i32 0, metadata !7094, metadata !DIExpression()), !dbg !7098
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7099
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7104
  %4 = and i32 %3, 4096, !dbg !7106
  %5 = icmp eq i32 %4, 0, !dbg !7106
  br i1 %5, label %7, label %6, !dbg !7107

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7108
  br label %7, !dbg !7114

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7115
  %9 = and i32 %8, 2048, !dbg !7117
  %10 = icmp eq i32 %9, 0, !dbg !7117
  br i1 %10, label %12, label %11, !dbg !7118

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7119
  br label %12, !dbg !7125

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7126
  %14 = and i32 %13, 512, !dbg !7127
  %15 = icmp eq i32 %14, 0, !dbg !7127
  br i1 %15, label %26, label %16, !dbg !7128

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7129
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %17, metadata !7095, metadata !DIExpression()), !dbg !7135
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7136
  %19 = and i32 %18, 32768, !dbg !7138
  %20 = icmp eq i32 %19, 0, !dbg !7139
  br i1 %20, label %26, label %21, !dbg !7140

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7141
  %22 = icmp eq i32 %0, 0, !dbg !7147
  br i1 %22, label %26, label %23, !dbg !7149

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7150
  %25 = and i32 %24, -32769, !dbg !7150
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7150
  br label %26, !dbg !7152

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7153
  %28 = and i32 %27, 1024, !dbg !7155
  %29 = icmp eq i32 %28, 0, !dbg !7155
  br i1 %29, label %31, label %30, !dbg !7156

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7157
  br label %31, !dbg !7163

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7164
  %33 = and i32 %32, 256, !dbg !7166
  %34 = icmp eq i32 %33, 0, !dbg !7167
  br i1 %34, label %35, label %39, !dbg !7168

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7169
  %37 = and i32 %36, 8192, !dbg !7171
  %38 = icmp eq i32 %37, 0, !dbg !7171
  br i1 %38, label %41, label %39, !dbg !7172

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7173
  br label %41, !dbg !7174

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7174
  %43 = or i32 %42, 65280, !dbg !7174
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7174
  store i8 0, i8* %1, align 1, !dbg !7175
  ret void, !dbg !7176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7177 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7183, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i32 0, metadata !7184, metadata !DIExpression()), !dbg !7185
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7186
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7191
  %2 = and i32 %1, 33554432, !dbg !7193
  %3 = icmp eq i32 %2, 0, !dbg !7194
  br i1 %3, label %5, label %4, !dbg !7195

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7196
  br label %5, !dbg !7202

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7203
  %7 = and i32 %6, 16777216, !dbg !7205
  %8 = icmp eq i32 %7, 0, !dbg !7206
  br i1 %8, label %10, label %9, !dbg !7207

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7208
  br label %10, !dbg !7214

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7215
  %12 = and i32 %11, 524288, !dbg !7217
  %13 = icmp eq i32 %12, 0, !dbg !7218
  br i1 %13, label %15, label %14, !dbg !7219

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7220
  br label %15, !dbg !7226

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7227
  %17 = and i32 %16, 262144, !dbg !7229
  %18 = icmp eq i32 %17, 0, !dbg !7230
  br i1 %18, label %20, label %19, !dbg !7231

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7232
  br label %20, !dbg !7238

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7239
  %22 = and i32 %21, 131072, !dbg !7241
  %23 = icmp eq i32 %22, 0, !dbg !7242
  br i1 %23, label %25, label %24, !dbg !7243

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7244
  br label %25, !dbg !7250

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7251
  %27 = and i32 %26, 65536, !dbg !7253
  %28 = icmp eq i32 %27, 0, !dbg !7254
  br i1 %28, label %30, label %29, !dbg !7255

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7256
  br label %30, !dbg !7262

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7263
  %32 = or i32 %31, -65536, !dbg !7263
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7263
  ret void, !dbg !7264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7265 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7269, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i8* %0, metadata !7270, metadata !DIExpression()), !dbg !7271
  store i8 0, i8* %0, align 1, !dbg !7272
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7273
  ret void, !dbg !7278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7279 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7283, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata i32 %0, metadata !7284, metadata !DIExpression()), !dbg !7285
  %2 = icmp slt i32 %0, 16, !dbg !7286
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7286
  %4 = add nsw i32 %0, -16, !dbg !7286
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7286
  ret void, !dbg !7291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7292 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7296, metadata !DIExpression()), !dbg !7299
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7300
  %3 = load i32, i32* %2, align 4, !dbg !7300
  %4 = inttoptr i32 %3 to i16*, !dbg !7301
  call void @llvm.dbg.value(metadata i16* %4, metadata !7297, metadata !DIExpression()), !dbg !7299
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7302
  %6 = or i32 %5, 256, !dbg !7302
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7302
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7303, !srcloc !7306
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7307, !srcloc !7310
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7311
  %8 = load i16, i16* %7, align 2, !dbg !7312
  call void @llvm.dbg.value(metadata i16 %8, metadata !7298, metadata !DIExpression()), !dbg !7299
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7313
  %10 = and i32 %9, -257, !dbg !7313
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7313
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7314, !srcloc !7306
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7316, !srcloc !7310
  %11 = icmp eq i16 %8, -8446, !dbg !7318
  ret i1 %11, !dbg !7320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7321 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7322
  %2 = or i32 %1, 16, !dbg !7322
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7322
  ret void, !dbg !7323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7324 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7327, metadata !DIExpression()), !dbg !7328
  br label %1, !dbg !7329

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7327, metadata !DIExpression()), !dbg !7328
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef %2) #24, !dbg !7331
  %3 = add nuw nsw i32 %2, 1, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %3, metadata !7327, metadata !DIExpression()), !dbg !7328
  %4 = icmp eq i32 %3, 82, !dbg !7335
  br i1 %4, label %5, label %1, !dbg !7329, !llvm.loop !7336

5:                                                ; preds = %1
  ret void, !dbg !7338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0) unnamed_addr #14 !dbg !7339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7341, metadata !DIExpression()), !dbg !7343
  call void @llvm.dbg.value(metadata i32 1, metadata !7342, metadata !DIExpression()), !dbg !7343
  %2 = and i32 %0, 15, !dbg !7344
  %3 = add nsw i32 %2, -4, !dbg !7344
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7344
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7344
  %6 = icmp slt i32 %0, 0, !dbg !7344
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7344
  store volatile i8 16, i8* %7, align 1, !dbg !7345
  ret void, !dbg !7347
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7457, metadata !DIExpression()), !dbg !7458
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7459
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7461
  br i1 %3, label %4, label %12, !dbg !7462

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7463, !srcloc !7475
  call void @llvm.dbg.value(metadata i32 %5, metadata !7466, metadata !DIExpression()) #23, !dbg !7476
  %6 = icmp eq i32 %5, 0, !dbg !7477
  br i1 %6, label %12, label %7, !dbg !7478

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7479
  %9 = or i32 %8, 268435456, !dbg !7479
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7479
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7481
  %11 = and i32 %10, -32769, !dbg !7481
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7481
  br label %12, !dbg !7482

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7483
  ret void, !dbg !7484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7485 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7486
  ret void, !dbg !7487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7488
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7489
  %3 = load i32, i32* %2, align 4, !dbg !7489
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7488
  %4 = add i32 %3, -64, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7488
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7492
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7493
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7494
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7488
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7495
  ret void, !dbg !7496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7497 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7498
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7499, !srcloc !7502
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7503, !srcloc !7506
  ret void, !dbg !7507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7508 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7509, !srcloc !7512
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7513
  ret void, !dbg !7514
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7515 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7530, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i8 %1, metadata !7531, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %2, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %3, metadata !7533, metadata !DIExpression()), !dbg !7534
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7535
  %6 = icmp eq i32 %5, -22, !dbg !7537
  br i1 %6, label %7, label %9, !dbg !7538

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7539
  %8 = zext i8 %1 to i32, !dbg !7539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.81, i32 0, i32 0), i32 noundef %8) #25, !dbg !7539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7539
  unreachable, !dbg !7539

9:                                                ; preds = %4
  ret void, !dbg !7544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7545 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7550, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8 %1, metadata !7551, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 undef, metadata !7552, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 undef, metadata !7553, metadata !DIExpression()), !dbg !7555
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7556
  call void @llvm.dbg.value(metadata i8 %3, metadata !7554, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7555
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7557
  call void @llvm.dbg.value(metadata i32 %4, metadata !7554, metadata !DIExpression()), !dbg !7555
  %5 = trunc i32 %4 to i8, !dbg !7558
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7559
  ret i32 %4, !dbg !7560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7561 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7565, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8 %1, metadata !7566, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8 %2, metadata !7567, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i1 %3, metadata !7568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7571
  %5 = zext i8 %2 to i32, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %5, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 0, metadata !7569, metadata !DIExpression()), !dbg !7571
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 0, metadata !7569, metadata !DIExpression()), !dbg !7571
  %7 = icmp eq i8 %1, 0, !dbg !7573
  br i1 %7, label %30, label %8, !dbg !7576

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %10, metadata !7569, metadata !DIExpression()), !dbg !7571
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7577
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7580
  %13 = load i32, i32* %12, align 4, !dbg !7580
  %14 = icmp eq i32 %13, 0, !dbg !7581
  br i1 %14, label %26, label %15, !dbg !7582

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7583

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7585
  %18 = icmp eq i32 %17, 0, !dbg !7585
  br i1 %18, label %19, label %20, !dbg !7586

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7587
  br label %30, !dbg !7593

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7594
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7595
  call void @llvm.dbg.value(metadata i32 %22, metadata !7570, metadata !DIExpression()), !dbg !7571
  %23 = icmp eq i32 %22, -22, !dbg !7596
  br i1 %23, label %30, label %24, !dbg !7598

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %25, metadata !7570, metadata !DIExpression()), !dbg !7571
  br label %26, !dbg !7600

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7571
  call void @llvm.dbg.value(metadata i32 %27, metadata !7570, metadata !DIExpression()), !dbg !7571
  %28 = add nuw nsw i32 %10, 1, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %28, metadata !7569, metadata !DIExpression()), !dbg !7571
  %29 = icmp eq i32 %28, %6, !dbg !7573
  br i1 %29, label %30, label %8, !dbg !7576, !llvm.loop !7602

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7571
  ret i32 %31, !dbg !7604
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7605 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7609, metadata !DIExpression()), !dbg !7611
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7612
  %3 = load i32, i32* %2, align 4, !dbg !7612
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7613, !range !7614
  %5 = icmp ult i32 %4, 2, !dbg !7613
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7615
  br i1 %7, label %8, label %15, !dbg !7615

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7616
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7617
  %11 = load i32, i32* %10, align 4, !dbg !7617
  %12 = and i32 %11, %9, !dbg !7618
  %13 = icmp eq i32 %12, 0, !dbg !7619
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7610, metadata !DIExpression()), !dbg !7611
  ret i32 %16, !dbg !7620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7621 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7625, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7626, metadata !DIExpression()), !dbg !7628
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7629
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7629
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7627, metadata !DIExpression()), !dbg !7630
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7631
  %6 = load i32, i32* %5, align 4, !dbg !7631
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7632
  store i32 %6, i32* %7, align 4, !dbg !7633
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7634
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7635
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7636
  %11 = load i32, i32* %10, align 4, !dbg !7636
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7637
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7638
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7639
  ret i32 %12, !dbg !7640
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7641 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7648, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7649, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 undef, metadata !7650, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 %2, metadata !7651, metadata !DIExpression()), !dbg !7652
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7653
  %5 = load i32, i32* %4, align 4, !dbg !7653
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7654
  %7 = or i32 %6, %5, !dbg !7655
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7656
  store i32 %7, i32* %8, align 4, !dbg !7657
  ret void, !dbg !7658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7659 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7663, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7664, metadata !DIExpression()), !dbg !7665
  %3 = zext i8 %0 to i32, !dbg !7666
  %4 = icmp ugt i8 %0, 7, !dbg !7668
  br i1 %4, label %5, label %6, !dbg !7669

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7670
  br label %7, !dbg !7676

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7677
  br label %7, !dbg !7678

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7665
  ret i32 %8, !dbg !7679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7684, metadata !DIExpression()), !dbg !7686
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7685, metadata !DIExpression()), !dbg !7686
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7687
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7688
  %4 = load i32, i32* %3, align 4, !dbg !7688
  %5 = and i32 %4, -32, !dbg !7689
  %6 = or i32 %5, %0, !dbg !7690
  %7 = or i32 %6, 16, !dbg !7690
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7691
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7692
  %9 = load i32, i32* %8, align 4, !dbg !7692
  %10 = or i32 %9, 1, !dbg !7693
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7694
  ret void, !dbg !7695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7699, metadata !DIExpression()), !dbg !7700
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7701
  ret void, !dbg !7702
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7707, metadata !DIExpression()), !dbg !7708
  %2 = icmp ult i32 %0, 33, !dbg !7709
  br i1 %2, label %11, label %3, !dbg !7711

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7712
  br i1 %4, label %11, label %5, !dbg !7714

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7715
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7716, !range !7614
  %8 = mul nsw i32 %7, -2, !dbg !7717
  %9 = add nsw i32 %8, 62, !dbg !7717
  %10 = and i32 %9, 62, !dbg !7718
  br label %11, !dbg !7719

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7708
  ret i32 %12, !dbg !7720
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7721 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7725, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i8 %1, metadata !7726, metadata !DIExpression()), !dbg !7727
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7728
  %4 = icmp eq i32 %3, -22, !dbg !7730
  br i1 %4, label %5, label %7, !dbg !7731

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7732
  %6 = zext i8 %1 to i32, !dbg !7732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %6) #25, !dbg !7732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7732
  unreachable, !dbg !7732

7:                                                ; preds = %2
  ret void, !dbg !7737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7738 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7742, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i8 %1, metadata !7743, metadata !DIExpression()), !dbg !7749
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7750
  call void @llvm.dbg.value(metadata i8 %3, metadata !7744, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7749
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7751
  call void @llvm.dbg.value(metadata i32 %4, metadata !7744, metadata !DIExpression()), !dbg !7749
  %5 = icmp ne i32 %4, -22, !dbg !7752
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %4, metadata !7745, metadata !DIExpression()), !dbg !7754
  br i1 %7, label %8, label %12, !dbg !7753

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7745, metadata !DIExpression()), !dbg !7754
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7755
  %10 = add i32 %9, 1, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %10, metadata !7745, metadata !DIExpression()), !dbg !7754
  %11 = icmp eq i32 %10, 8, !dbg !7759
  br i1 %11, label %12, label %8, !dbg !7760, !llvm.loop !7761

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7767, metadata !DIExpression()), !dbg !7768
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7769
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7770
  ret void, !dbg !7771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7772 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7777
  %2 = icmp ugt i32 %1, 8, !dbg !7779
  br i1 %2, label %3, label %4, !dbg !7780

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.87, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7781
  unreachable, !dbg !7781

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7786
  call void @llvm.dbg.value(metadata i32 0, metadata !7776, metadata !DIExpression()), !dbg !7787
  %5 = icmp eq i32 %1, 0, !dbg !7788
  br i1 %5, label %13, label %6, !dbg !7791

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7791

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7776, metadata !DIExpression()), !dbg !7787
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7792
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7794
  %11 = add nuw i32 %9, 1, !dbg !7795
  call void @llvm.dbg.value(metadata i32 %11, metadata !7776, metadata !DIExpression()), !dbg !7787
  %12 = icmp eq i32 %11, %1, !dbg !7788
  br i1 %12, label %13, label %8, !dbg !7791, !llvm.loop !7796

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7798
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7799
  tail call void @arm_core_mpu_enable() #24, !dbg !7800
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7801
  %16 = and i32 %15, 65280, !dbg !7801
  %17 = icmp eq i32 %16, 2048, !dbg !7801
  br i1 %17, label %19, label %18, !dbg !7804

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.89, i32 0, i32 0)) #25, !dbg !7805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7805
  unreachable, !dbg !7805

19:                                               ; preds = %13
  ret i32 0, !dbg !7807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7815, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %1, metadata !7816, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  %3 = load i8, i8* %1, align 1, !dbg !7819
  %4 = icmp eq i8 %3, 0, !dbg !7820
  br i1 %4, label %13, label %5, !dbg !7821

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7815, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %8, metadata !7816, metadata !DIExpression()), !dbg !7818
  store i8 %6, i8* %7, align 1, !dbg !7822
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7824
  call void @llvm.dbg.value(metadata i8* %9, metadata !7815, metadata !DIExpression()), !dbg !7818
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7825
  call void @llvm.dbg.value(metadata i8* %10, metadata !7816, metadata !DIExpression()), !dbg !7818
  %11 = load i8, i8* %10, align 1, !dbg !7819
  %12 = icmp eq i8 %11, 0, !dbg !7820
  br i1 %12, label %13, label %5, !dbg !7821, !llvm.loop !7826

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7828
  ret i8* %0, !dbg !7829
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7834, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i8* %1, metadata !7835, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i32 %2, metadata !7836, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i8* %0, metadata !7837, metadata !DIExpression()), !dbg !7838
  %4 = icmp eq i32 %2, 0, !dbg !7839
  br i1 %4, label %22, label %5, !dbg !7840

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7834, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i32 %7, metadata !7836, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i8* %8, metadata !7835, metadata !DIExpression()), !dbg !7838
  %9 = load i8, i8* %8, align 1, !dbg !7841
  %10 = icmp eq i8 %9, 0, !dbg !7842
  br i1 %10, label %16, label %11, !dbg !7843

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7844
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7846
  call void @llvm.dbg.value(metadata i8* %12, metadata !7835, metadata !DIExpression()), !dbg !7838
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7847
  call void @llvm.dbg.value(metadata i8* %13, metadata !7834, metadata !DIExpression()), !dbg !7838
  %14 = add i32 %7, -1, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %14, metadata !7836, metadata !DIExpression()), !dbg !7838
  %15 = icmp eq i32 %14, 0, !dbg !7839
  br i1 %15, label %22, label %5, !dbg !7840, !llvm.loop !7849

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7834, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i32 %18, metadata !7836, metadata !DIExpression()), !dbg !7838
  store i8 0, i8* %17, align 1, !dbg !7851
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7853
  call void @llvm.dbg.value(metadata i8* %19, metadata !7834, metadata !DIExpression()), !dbg !7838
  %20 = add i32 %18, -1, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %20, metadata !7836, metadata !DIExpression()), !dbg !7838
  %21 = icmp eq i32 %20, 0, !dbg !7855
  br i1 %21, label %22, label %16, !dbg !7856, !llvm.loop !7857

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7859
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7864, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 %1, metadata !7865, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 %1, metadata !7866, metadata !DIExpression()), !dbg !7867
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7868

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7864, metadata !DIExpression()), !dbg !7867
  %6 = load i8, i8* %5, align 1, !dbg !7869
  %7 = icmp eq i8 %6, %3, !dbg !7870
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7871
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7872
  call void @llvm.dbg.value(metadata i8* %10, metadata !7864, metadata !DIExpression()), !dbg !7867
  br i1 %9, label %11, label %4, !dbg !7871, !llvm.loop !7874

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7876
  ret i8* %12, !dbg !7877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i32 %1, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* null, metadata !7882, metadata !DIExpression()), !dbg !7883
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7884

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7883
  call void @llvm.dbg.value(metadata i8* %6, metadata !7882, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %5, metadata !7880, metadata !DIExpression()), !dbg !7883
  %7 = load i8, i8* %5, align 1, !dbg !7885
  %8 = icmp eq i8 %7, %3, !dbg !7888
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7889
  call void @llvm.dbg.value(metadata i8* %9, metadata !7882, metadata !DIExpression()), !dbg !7883
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7890
  call void @llvm.dbg.value(metadata i8* %10, metadata !7880, metadata !DIExpression()), !dbg !7883
  %11 = icmp eq i8 %7, 0, !dbg !7891
  br i1 %11, label %12, label %4, !dbg !7891, !llvm.loop !7892

12:                                               ; preds = %4
  ret i8* %9, !dbg !7894
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32 0, metadata !7900, metadata !DIExpression()), !dbg !7901
  %2 = load i8, i8* %0, align 1, !dbg !7902
  %3 = icmp eq i8 %2, 0, !dbg !7903
  br i1 %3, label %11, label %4, !dbg !7904

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7900, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %6, metadata !7899, metadata !DIExpression()), !dbg !7901
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7905
  call void @llvm.dbg.value(metadata i8* %7, metadata !7899, metadata !DIExpression()), !dbg !7901
  %8 = add i32 %5, 1, !dbg !7907
  call void @llvm.dbg.value(metadata i32 %8, metadata !7900, metadata !DIExpression()), !dbg !7901
  %9 = load i8, i8* %7, align 1, !dbg !7902
  %10 = icmp eq i8 %9, 0, !dbg !7903
  br i1 %10, label %11, label %4, !dbg !7904, !llvm.loop !7908

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7901
  ret i32 %12, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7915, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %1, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 0, metadata !7917, metadata !DIExpression()), !dbg !7918
  %3 = load i8, i8* %0, align 1, !dbg !7919
  %4 = icmp ne i8 %3, 0, !dbg !7920
  %5 = icmp ne i32 %1, 0, !dbg !7921
  %6 = and i1 %4, %5, !dbg !7921
  br i1 %6, label %7, label %16, !dbg !7922

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %9, metadata !7915, metadata !DIExpression()), !dbg !7918
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7923
  call void @llvm.dbg.value(metadata i8* %10, metadata !7915, metadata !DIExpression()), !dbg !7918
  %11 = add nuw i32 %8, 1, !dbg !7925
  call void @llvm.dbg.value(metadata i32 %11, metadata !7917, metadata !DIExpression()), !dbg !7918
  %12 = load i8, i8* %10, align 1, !dbg !7919
  %13 = icmp ne i8 %12, 0, !dbg !7920
  %14 = icmp ult i32 %11, %1, !dbg !7921
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7921
  br i1 %15, label %7, label %16, !dbg !7922, !llvm.loop !7926

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7918
  ret i32 %17, !dbg !7928
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7933, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.value(metadata i8* %1, metadata !7934, metadata !DIExpression()), !dbg !7935
  %3 = load i8, i8* %0, align 1, !dbg !7936
  %4 = load i8, i8* %1, align 1, !dbg !7937
  %5 = icmp ne i8 %3, %4, !dbg !7938
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7939
  br i1 %7, label %18, label %8, !dbg !7939

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.value(metadata i8* %10, metadata !7933, metadata !DIExpression()), !dbg !7935
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %11, metadata !7933, metadata !DIExpression()), !dbg !7935
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7942
  call void @llvm.dbg.value(metadata i8* %12, metadata !7934, metadata !DIExpression()), !dbg !7935
  %13 = load i8, i8* %11, align 1, !dbg !7936
  %14 = load i8, i8* %12, align 1, !dbg !7937
  %15 = icmp ne i8 %13, %14, !dbg !7938
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7939
  br i1 %17, label %18, label %8, !dbg !7939, !llvm.loop !7943

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7936
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7937
  %21 = zext i8 %19 to i32, !dbg !7946
  %22 = zext i8 %20 to i32, !dbg !7947
  %23 = sub nsw i32 %21, %22, !dbg !7948
  ret i32 %23, !dbg !7949
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7950 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %1, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()), !dbg !7957
  %4 = icmp eq i32 %2, 0, !dbg !7958
  br i1 %4, label %23, label %5, !dbg !7958

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %7, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %8, metadata !7954, metadata !DIExpression()), !dbg !7957
  %9 = load i8, i8* %8, align 1, !dbg !7959
  %10 = load i8, i8* %7, align 1, !dbg !7960
  %11 = icmp ne i8 %9, %10, !dbg !7961
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7962
  br i1 %13, label %19, label %14, !dbg !7962

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %15, metadata !7954, metadata !DIExpression()), !dbg !7957
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %16, metadata !7955, metadata !DIExpression()), !dbg !7957
  %17 = add i32 %6, -1, !dbg !7966
  call void @llvm.dbg.value(metadata i32 %17, metadata !7956, metadata !DIExpression()), !dbg !7957
  %18 = icmp eq i32 %17, 0, !dbg !7958
  br i1 %18, label %23, label %5, !dbg !7958, !llvm.loop !7967

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7970
  %21 = zext i8 %10 to i32, !dbg !7971
  %22 = sub nsw i32 %20, %21, !dbg !7972
  br label %23, !dbg !7973

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7973
  ret i32 %24, !dbg !7974
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7979, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8* %1, metadata !7980, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8** %2, metadata !7981, metadata !DIExpression()), !dbg !7984
  %4 = icmp eq i8* %0, null, !dbg !7985
  br i1 %4, label %5, label %7, !dbg !7985

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7986
  br label %7, !dbg !7985

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7985
  call void @llvm.dbg.value(metadata i8* %8, metadata !7982, metadata !DIExpression()), !dbg !7984
  %9 = load i8, i8* %8, align 1, !dbg !7987
  %10 = icmp eq i8 %9, 0, !dbg !7987
  br i1 %10, label %33, label %11, !dbg !7988

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7982, metadata !DIExpression()), !dbg !7984
  %14 = zext i8 %12 to i32, !dbg !7987
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7989
  %16 = icmp eq i8* %15, null, !dbg !7988
  br i1 %16, label %21, label %17, !dbg !7990

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7991
  call void @llvm.dbg.value(metadata i8* %18, metadata !7982, metadata !DIExpression()), !dbg !7984
  %19 = load i8, i8* %18, align 1, !dbg !7987
  %20 = icmp eq i8 %19, 0, !dbg !7987
  br i1 %20, label %33, label %11, !dbg !7988, !llvm.loop !7993

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7983, metadata !DIExpression()), !dbg !7984
  %24 = zext i8 %22 to i32, !dbg !7995
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7996
  %26 = icmp eq i8* %25, null, !dbg !7997
  br i1 %26, label %27, label %31, !dbg !7998

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %28, metadata !7983, metadata !DIExpression()), !dbg !7984
  %29 = load i8, i8* %28, align 1, !dbg !7995
  %30 = icmp eq i8 %29, 0, !dbg !7995
  br i1 %30, label %33, label %21, !dbg !8001, !llvm.loop !8002

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8004
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8007
  br label %33, !dbg !8008

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7984
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7984
  store i8* %34, i8** %2, align 4, !dbg !7984
  ret i8* %35, !dbg !8009
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8010 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8012, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i8* %1, metadata !8013, metadata !DIExpression()), !dbg !8014
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8015
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8016
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8017
  ret i8* %0, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8021, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %1, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %0, metadata !8024, metadata !DIExpression()), !dbg !8026
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8027
  call void @llvm.dbg.value(metadata i32 %4, metadata !8025, metadata !DIExpression()), !dbg !8026
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8028
  call void @llvm.dbg.value(metadata i8* %5, metadata !8021, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %1, metadata !8022, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8023, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8026
  %6 = icmp eq i32 %2, 0, !dbg !8029
  br i1 %6, label %18, label %7, !dbg !8030

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8031
  call void @llvm.dbg.value(metadata i8* %9, metadata !8021, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %10, metadata !8022, metadata !DIExpression()), !dbg !8026
  %12 = load i8, i8* %10, align 1, !dbg !8032
  %13 = icmp eq i8 %12, 0, !dbg !8033
  br i1 %13, label %18, label %14, !dbg !8034

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8035
  call void @llvm.dbg.value(metadata i8* %15, metadata !8022, metadata !DIExpression()), !dbg !8026
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8037
  call void @llvm.dbg.value(metadata i8* %16, metadata !8021, metadata !DIExpression()), !dbg !8026
  store i8 %12, i8* %9, align 1, !dbg !8038
  call void @llvm.dbg.value(metadata i32 %11, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %11, metadata !8023, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8026
  %17 = icmp eq i32 %11, 0, !dbg !8029
  br i1 %17, label %18, label %7, !dbg !8030, !llvm.loop !8039

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8026
  store i8 0, i8* %19, align 1, !dbg !8041
  ret i8* %0, !dbg !8042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8047, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %1, metadata !8048, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %2, metadata !8049, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %0, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  %4 = icmp eq i32 %2, 0, !dbg !8053
  br i1 %4, label %31, label %5, !dbg !8055

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %0, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %2, metadata !8049, metadata !DIExpression()), !dbg !8052
  %6 = add i32 %2, -1, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %6, metadata !8049, metadata !DIExpression()), !dbg !8052
  %7 = icmp eq i32 %6, 0, !dbg !8057
  br i1 %7, label %23, label %8, !dbg !8058

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8059
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8059
  br label %11, !dbg !8059

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %14, metadata !8050, metadata !DIExpression()), !dbg !8052
  %15 = load i8, i8* %14, align 1, !dbg !8060
  %16 = load i8, i8* %13, align 1, !dbg !8061
  %17 = icmp eq i8 %15, %16, !dbg !8062
  br i1 %17, label %18, label %23, !dbg !8059

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8063
  call void @llvm.dbg.value(metadata i8* %19, metadata !8050, metadata !DIExpression()), !dbg !8052
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8065
  call void @llvm.dbg.value(metadata i8* %20, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %12, metadata !8049, metadata !DIExpression()), !dbg !8052
  %21 = add i32 %12, -1, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %21, metadata !8049, metadata !DIExpression()), !dbg !8052
  %22 = icmp eq i32 %21, 0, !dbg !8057
  br i1 %22, label %23, label %11, !dbg !8058, !llvm.loop !8066

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8052
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8052
  %26 = load i8, i8* %24, align 1, !dbg !8068
  %27 = zext i8 %26 to i32, !dbg !8068
  %28 = load i8, i8* %25, align 1, !dbg !8069
  %29 = zext i8 %28 to i32, !dbg !8069
  %30 = sub nsw i32 %27, %29, !dbg !8070
  br label %31, !dbg !8071

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8052
  ret i32 %32, !dbg !8072
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8073 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8077, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %1, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %2, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %0, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %1, metadata !8081, metadata !DIExpression()), !dbg !8082
  %4 = ptrtoint i8* %0 to i32, !dbg !8083
  %5 = ptrtoint i8* %1 to i32, !dbg !8083
  %6 = sub i32 %4, %5, !dbg !8083
  %7 = icmp ult i32 %6, %2, !dbg !8085
  br i1 %7, label %10, label %8, !dbg !8086

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8081, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %0, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %2, metadata !8079, metadata !DIExpression()), !dbg !8082
  %9 = icmp eq i32 %2, 0, !dbg !8087
  br i1 %9, label %26, label %17, !dbg !8089

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8079, metadata !DIExpression()), !dbg !8082
  %12 = add i32 %11, -1, !dbg !8090
  call void @llvm.dbg.value(metadata i32 %12, metadata !8079, metadata !DIExpression()), !dbg !8082
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8093
  %14 = load i8, i8* %13, align 1, !dbg !8093
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8094
  store i8 %14, i8* %15, align 1, !dbg !8095
  %16 = icmp eq i32 %12, 0, !dbg !8096
  br i1 %16, label %26, label %10, !dbg !8097, !llvm.loop !8098

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8081, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %19, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %20, metadata !8079, metadata !DIExpression()), !dbg !8082
  %21 = load i8, i8* %18, align 1, !dbg !8100
  store i8 %21, i8* %19, align 1, !dbg !8102
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8103
  call void @llvm.dbg.value(metadata i8* %22, metadata !8080, metadata !DIExpression()), !dbg !8082
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8104
  call void @llvm.dbg.value(metadata i8* %23, metadata !8081, metadata !DIExpression()), !dbg !8082
  %24 = add i32 %20, -1, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %24, metadata !8079, metadata !DIExpression()), !dbg !8082
  %25 = icmp eq i32 %24, 0, !dbg !8087
  br i1 %25, label %26, label %17, !dbg !8089, !llvm.loop !8106

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8108
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8109 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8115, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %1, metadata !8116, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %2, metadata !8117, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %0, metadata !8118, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %1, metadata !8119, metadata !DIExpression()), !dbg !8120
  %4 = icmp eq i32 %2, 0, !dbg !8121
  br i1 %4, label %14, label %5, !dbg !8122

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %7, metadata !8118, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %8, metadata !8117, metadata !DIExpression()), !dbg !8120
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8123
  call void @llvm.dbg.value(metadata i8* %9, metadata !8119, metadata !DIExpression()), !dbg !8120
  %10 = load i8, i8* %6, align 1, !dbg !8125
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8126
  call void @llvm.dbg.value(metadata i8* %11, metadata !8118, metadata !DIExpression()), !dbg !8120
  store i8 %10, i8* %7, align 1, !dbg !8127
  %12 = add i32 %8, -1, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %12, metadata !8117, metadata !DIExpression()), !dbg !8120
  %13 = icmp eq i32 %12, 0, !dbg !8121
  br i1 %13, label %14, label %5, !dbg !8122, !llvm.loop !8129

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8131
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8136, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 %1, metadata !8137, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 %2, metadata !8138, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i8* %0, metadata !8139, metadata !DIExpression()), !dbg !8141
  %4 = trunc i32 %1 to i8, !dbg !8142
  call void @llvm.dbg.value(metadata i8 %4, metadata !8140, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 %2, metadata !8138, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i8* %0, metadata !8139, metadata !DIExpression()), !dbg !8141
  %5 = icmp eq i32 %2, 0, !dbg !8143
  br i1 %5, label %12, label %6, !dbg !8144

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8138, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i8* %8, metadata !8139, metadata !DIExpression()), !dbg !8141
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8145
  call void @llvm.dbg.value(metadata i8* %9, metadata !8139, metadata !DIExpression()), !dbg !8141
  store i8 %4, i8* %8, align 1, !dbg !8147
  %10 = add i32 %7, -1, !dbg !8148
  call void @llvm.dbg.value(metadata i32 %10, metadata !8138, metadata !DIExpression()), !dbg !8141
  %11 = icmp eq i32 %10, 0, !dbg !8143
  br i1 %11, label %12, label %6, !dbg !8144, !llvm.loop !8149

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8151
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8156, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %1, metadata !8157, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %2, metadata !8158, metadata !DIExpression()), !dbg !8162
  %4 = icmp eq i32 %2, 0, !dbg !8163
  br i1 %4, label %17, label %5, !dbg !8164

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8165

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8166
  call void @llvm.dbg.value(metadata i8* %9, metadata !8159, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %8, metadata !8158, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %9, metadata !8159, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8166
  %10 = load i8, i8* %9, align 1, !dbg !8167
  %11 = icmp eq i8 %10, %6, !dbg !8170
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8171
  call void @llvm.dbg.value(metadata i8* %12, metadata !8159, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %13, metadata !8158, metadata !DIExpression()), !dbg !8162
  br i1 %15, label %16, label %7, !dbg !8171, !llvm.loop !8172

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8174

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8162
  ret i8* %19, !dbg !8175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8176 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8178, metadata !DIExpression()), !dbg !8179
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8180
  ret void, !dbg !8181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8184, metadata !DIExpression()), !dbg !8185
  ret i32 -1, !dbg !8186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8191, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.value(metadata i32* %1, metadata !8192, metadata !DIExpression()), !dbg !8193
  %3 = ptrtoint i32* %1 to i32, !dbg !8194
  %4 = and i32 %3, -2, !dbg !8194
  %5 = icmp eq i32 %4, 2, !dbg !8194
  br i1 %5, label %6, label %9, !dbg !8194

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8195
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8195
  br label %9, !dbg !8196

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8196
  ret i32 %10, !dbg !8197
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8200, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i32* %1, metadata !8201, metadata !DIExpression()), !dbg !8202
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8203
  ret i32 %3, !dbg !8204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32* %1, metadata !8209, metadata !DIExpression()), !dbg !8210
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8211, !srcloc !8213
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8214
  ret i32 %3, !dbg !8215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8221, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32* %1, metadata !8222, metadata !DIExpression()), !dbg !8225
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %3, metadata !8223, metadata !DIExpression()), !dbg !8225
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %4, metadata !8224, metadata !DIExpression()), !dbg !8225
  %5 = icmp ne i32 %3, %4, !dbg !8228
  %6 = sext i1 %5 to i32, !dbg !8229
  ret i32 %6, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8235, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i32 %1, metadata !8236, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i32 %2, metadata !8237, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i32* %3, metadata !8238, metadata !DIExpression()), !dbg !8239
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8240
  ret i32 %5, !dbg !8241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8244, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %1, metadata !8245, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %2, metadata !8246, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32* %3, metadata !8247, metadata !DIExpression()), !dbg !8248
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8249, !srcloc !8251
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8252
  ret i32 %5, !dbg !8253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8254 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8256, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %1, metadata !8257, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %2, metadata !8258, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32* %3, metadata !8259, metadata !DIExpression()), !dbg !8264
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8265
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8267
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8267
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8267
  br i1 %11, label %33, label %12, !dbg !8267

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8264
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8264
  call void @llvm.dbg.value(metadata i8* %14, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %13, metadata !8260, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %1, metadata !8261, metadata !DIExpression()), !dbg !8264
  br label %15, !dbg !8268

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8270
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8264
  call void @llvm.dbg.value(metadata i8* %17, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %16, metadata !8261, metadata !DIExpression()), !dbg !8264
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8271
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8274
  call void @llvm.dbg.value(metadata i8* %19, metadata !8262, metadata !DIExpression()), !dbg !8264
  %20 = load i8, i8* %17, align 1, !dbg !8275
  %21 = zext i8 %20 to i32, !dbg !8276
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8271
  %23 = icmp eq i32 %22, -1, !dbg !8277
  br i1 %23, label %30, label %24, !dbg !8278

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %25, metadata !8261, metadata !DIExpression()), !dbg !8264
  %26 = icmp eq i32 %25, 0, !dbg !8280
  br i1 %26, label %27, label %15, !dbg !8281, !llvm.loop !8282

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %28, metadata !8260, metadata !DIExpression()), !dbg !8264
  %29 = icmp eq i32 %28, 0, !dbg !8285
  br i1 %29, label %30, label %12, !dbg !8286, !llvm.loop !8287

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8264
  call void @llvm.dbg.value(metadata i32 %31, metadata !8260, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.label(metadata !8263), !dbg !8290
  %32 = sub i32 %2, %31, !dbg !8291
  br label %33, !dbg !8292

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8264
  ret i32 %34, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8298, metadata !DIExpression()), !dbg !8299
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8300
  %3 = icmp eq i32 %2, -1, !dbg !8302
  br i1 %3, label %8, label %4, !dbg !8303

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8304
  %6 = icmp eq i32 %5, -1, !dbg !8305
  %7 = sext i1 %6 to i32, !dbg !8304
  br label %8, !dbg !8306

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8299
  ret i32 %9, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8310, metadata !DIExpression()), !dbg !8311
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8312
  ret void, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8318, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.value(metadata i32 %1, metadata !8319, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8320, metadata !DIExpression()), !dbg !8324
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8325
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8325
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8325
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8321, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.value(metadata i32 %0, metadata !8323, metadata !DIExpression()), !dbg !8324
  %7 = icmp slt i32 %0, %1, !dbg !8326
  br i1 %7, label %8, label %22, !dbg !8329

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8323, metadata !DIExpression()), !dbg !8324
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8330
  %11 = icmp eq i32 %10, 0, !dbg !8330
  br i1 %11, label %19, label %12, !dbg !8333

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8334
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8336
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8336
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8338
  br i1 %15, label %19, label %16, !dbg !8339

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8340
  %18 = load i8*, i8** %17, align 4, !dbg !8340
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8341
  br label %19, !dbg !8342

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %20, metadata !8323, metadata !DIExpression()), !dbg !8324
  %21 = icmp eq i32 %20, %1, !dbg !8326
  br i1 %21, label %22, label %8, !dbg !8329, !llvm.loop !8344

22:                                               ; preds = %19, %3
  ret void, !dbg !8346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8349, metadata !DIExpression()), !dbg !8350
  %2 = shl nuw i32 1, %0, !dbg !8351
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8354
  ret i32 %3, !dbg !8355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8360, metadata !DIExpression()), !dbg !8361
  %2 = shl nuw i32 1, %0, !dbg !8362
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8365
  ret void, !dbg !8366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8370, metadata !DIExpression()), !dbg !8371
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8372
  ret void, !dbg !8373
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8376, metadata !DIExpression()), !dbg !8377
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8378
  %3 = and i32 %2, %0, !dbg !8378
  %4 = icmp eq i32 %3, %0, !dbg !8379
  %5 = zext i1 %4 to i32, !dbg !8379
  ret i32 %5, !dbg !8380
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8383, metadata !DIExpression()), !dbg !8384
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8385
  ret void, !dbg !8386
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8389, metadata !DIExpression()), !dbg !8390
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8391
  ret void, !dbg !8392
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8395, metadata !DIExpression()), !dbg !8396
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8397
  ret void, !dbg !8398
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8399 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8401, metadata !DIExpression()), !dbg !8402
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8403
  ret void, !dbg !8404
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8407, metadata !DIExpression()), !dbg !8408
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8409
  ret void, !dbg !8410
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8413, metadata !DIExpression()), !dbg !8414
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8415
  ret void, !dbg !8416
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8419, metadata !DIExpression()), !dbg !8420
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8421
  ret void, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8425, metadata !DIExpression()), !dbg !8426
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8427
  ret void, !dbg !8428
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8429 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8431, metadata !DIExpression()), !dbg !8432
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8433
  ret void, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8437, metadata !DIExpression()), !dbg !8438
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8443, metadata !DIExpression()), !dbg !8444
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8445
  ret i32 0, !dbg !8446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !758 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !762, metadata !DIExpression()), !dbg !8447
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8448
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8450
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8452
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8454
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8456
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8458
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8460
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8462
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8464
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8466
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8468
  ret void, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8473, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 0, metadata !8474, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 undef, metadata !8474, metadata !DIExpression()), !dbg !8475
  %2 = lshr i32 6684671, %0, !dbg !8476
  %3 = and i32 %2, 1, !dbg !8476
  %4 = or i32 %3, %0, !dbg !8478
  %5 = icmp eq i32 %4, 0, !dbg !8478
  br i1 %5, label %6, label %7, !dbg !8478

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8479
  unreachable, !dbg !8479

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8484
  %9 = load i32, i32* %8, align 4, !dbg !8484
  call void @llvm.dbg.value(metadata i32 %9, metadata !8474, metadata !DIExpression()), !dbg !8475
  %10 = shl nuw i32 1, %0, !dbg !8485
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8486
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8487
  ret void, !dbg !8488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8491, metadata !DIExpression()), !dbg !8492
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8493
  %3 = or i32 %2, %0, !dbg !8493
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8493
  ret void, !dbg !8494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8497, metadata !DIExpression()), !dbg !8498
  %2 = icmp slt i32 %0, 32, !dbg !8499
  br i1 %2, label %3, label %5, !dbg !8501

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8502
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8504
  br label %5, !dbg !8505

5:                                                ; preds = %1, %3
  ret void, !dbg !8506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8509, metadata !DIExpression()), !dbg !8510
  %2 = xor i32 %0, -1, !dbg !8511
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8511
  %4 = and i32 %3, %2, !dbg !8511
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8511
  ret void, !dbg !8512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8517, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %1, metadata !8518, metadata !DIExpression()), !dbg !8519
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8520

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8521
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8523
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8524
  br label %11, !dbg !8525

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8526
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8527
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8528
  br label %11, !dbg !8529

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8530
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8531
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8532
  br label %11, !dbg !8533

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8534
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8535
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8536
  br label %11, !dbg !8537

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8541, metadata !DIExpression()), !dbg !8542
  %2 = xor i32 %0, -1, !dbg !8543
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8543
  %4 = and i32 %3, %2, !dbg !8543
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8543
  ret void, !dbg !8544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8547, metadata !DIExpression()), !dbg !8548
  %2 = xor i32 %0, -1, !dbg !8549
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8549
  %4 = and i32 %3, %2, !dbg !8549
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8549
  ret void, !dbg !8550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8553, metadata !DIExpression()), !dbg !8554
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8555
  %3 = or i32 %2, %0, !dbg !8555
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8559, metadata !DIExpression()), !dbg !8560
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8561
  %3 = or i32 %2, %0, !dbg !8561
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8561
  ret void, !dbg !8562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8567, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8568, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8* %2, metadata !8569, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8570, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8572, metadata !DIExpression()), !dbg !8573
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8574
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8574
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8576
  br i1 %6, label %7, label %9, !dbg !8577

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8578
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8579
  store i8* %2, i8** %8, align 4, !dbg !8580
  br label %9, !dbg !8581

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8573
  ret i32 %10, !dbg !8582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8585, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8586, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8587, metadata !DIExpression()), !dbg !8588
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8589
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8590
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8591
  store i8* null, i8** %3, align 4, !dbg !8592
  ret void, !dbg !8593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8596, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8* %1, metadata !8598, metadata !DIExpression()), !dbg !8601
  %3 = bitcast i8* %1 to i32*, !dbg !8602
  %4 = load i32, i32* %3, align 4, !dbg !8602
  %5 = add i32 %4, -169, !dbg !8602
  %6 = icmp ult i32 %5, -121, !dbg !8602
  br i1 %6, label %15, label %7, !dbg !8604

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8605
  %9 = inttoptr i32 %8 to i32*, !dbg !8606
  call void @llvm.dbg.value(metadata i32* %9, metadata !8599, metadata !DIExpression()), !dbg !8601
  %10 = load volatile i32, i32* %9, align 4, !dbg !8607
  call void @llvm.dbg.value(metadata i32 %10, metadata !8600, metadata !DIExpression()), !dbg !8601
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8608
  %12 = bitcast i8* %11 to i32*, !dbg !8608
  %13 = load i32, i32* %12, align 4, !dbg !8608
  %14 = or i32 %13, %10, !dbg !8609
  call void @llvm.dbg.value(metadata i32 %14, metadata !8600, metadata !DIExpression()), !dbg !8601
  store volatile i32 %14, i32* %9, align 4, !dbg !8610
  br label %15, !dbg !8611

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8601
  ret i32 %16, !dbg !8612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8615, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i8* %1, metadata !8616, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i8* %1, metadata !8617, metadata !DIExpression()), !dbg !8620
  %3 = bitcast i8* %1 to i32*, !dbg !8621
  %4 = load i32, i32* %3, align 4, !dbg !8621
  %5 = add i32 %4, -169, !dbg !8621
  %6 = icmp ult i32 %5, -121, !dbg !8621
  br i1 %6, label %16, label %7, !dbg !8623

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8624
  %9 = inttoptr i32 %8 to i32*, !dbg !8625
  call void @llvm.dbg.value(metadata i32* %9, metadata !8618, metadata !DIExpression()), !dbg !8620
  %10 = load volatile i32, i32* %9, align 4, !dbg !8626
  call void @llvm.dbg.value(metadata i32 %10, metadata !8619, metadata !DIExpression()), !dbg !8620
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8627
  %12 = bitcast i8* %11 to i32*, !dbg !8627
  %13 = load i32, i32* %12, align 4, !dbg !8627
  %14 = xor i32 %13, -1, !dbg !8628
  %15 = and i32 %10, %14, !dbg !8629
  call void @llvm.dbg.value(metadata i32 %15, metadata !8619, metadata !DIExpression()), !dbg !8620
  store volatile i32 %15, i32* %9, align 4, !dbg !8630
  br label %16, !dbg !8631

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8620
  ret i32 %17, !dbg !8632
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8635, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8636, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32* %2, metadata !8637, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8638, metadata !DIExpression()), !dbg !8643
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %4, metadata !8639, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 undef, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 undef, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %4, metadata !8642, metadata !DIExpression()), !dbg !8643
  %5 = bitcast i8* %1 to i32*, !dbg !8645
  %6 = load i32, i32* %5, align 4, !dbg !8645
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8646

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %8, metadata !8640, metadata !DIExpression()), !dbg !8643
  br label %19, !dbg !8648

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %10, metadata !8641, metadata !DIExpression()), !dbg !8643
  br label %19, !dbg !8651

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8652
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !8653
  br label %19, !dbg !8654

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8655
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !8656
  br label %19, !dbg !8657

17:                                               ; preds = %3
  br label %19, !dbg !8658

18:                                               ; preds = %3
  br label %19, !dbg !8659

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8660
  br label %21, !dbg !8661

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8643
  ret i32 %22, !dbg !8661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8664, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %1, metadata !8665, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %2, metadata !8666, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8672
  %4 = bitcast i8* %1 to i32*, !dbg !8673
  %5 = load i32, i32* %4, align 4, !dbg !8673
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %6, metadata !8671, metadata !DIExpression()), !dbg !8672
  %7 = icmp slt i32 %6, 0, !dbg !8675
  br i1 %7, label %22, label %8, !dbg !8677

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8672
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8678
  %10 = bitcast i8* %9 to i32*, !dbg !8678
  %11 = load i32, i32* %10, align 4, !dbg !8678
  %12 = lshr i32 %11, 16, !dbg !8678
  %13 = and i32 %12, 7, !dbg !8678
  %14 = lshr i32 %11, 8, !dbg !8679
  %15 = and i32 %14, 31, !dbg !8679
  %16 = shl i32 %13, %15, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %16, metadata !8670, metadata !DIExpression()), !dbg !8672
  %17 = and i32 %11, 255, !dbg !8681
  %18 = or i32 %17, 1073887232, !dbg !8682
  %19 = inttoptr i32 %18 to i32*, !dbg !8683
  call void @llvm.dbg.value(metadata i32* %19, metadata !8668, metadata !DIExpression()), !dbg !8672
  %20 = load volatile i32, i32* %19, align 4, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %20, metadata !8669, metadata !DIExpression()), !dbg !8672
  %21 = or i32 %16, %20, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %21, metadata !8669, metadata !DIExpression()), !dbg !8672
  store volatile i32 %21, i32* %19, align 4, !dbg !8686
  br label %22, !dbg !8687

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8672
  ret i32 %23, !dbg !8688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8693, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 0, metadata !8694, metadata !DIExpression()), !dbg !8695
  %2 = add i32 %0, -1, !dbg !8696
  %3 = icmp ult i32 %2, 6, !dbg !8696
  br i1 %3, label %4, label %7, !dbg !8696

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8696
  %6 = load i32, i32* %5, align 4, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %6, metadata !8694, metadata !DIExpression()), !dbg !8695
  br label %7, !dbg !8697

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8695
  ret i32 %8, !dbg !8698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %1, metadata !8704, metadata !DIExpression()), !dbg !8705
  %3 = udiv i32 %0, %1, !dbg !8706
  ret i32 %3, !dbg !8707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8712, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 12, metadata !8713, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 336, metadata !8714, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 %1, metadata !8715, metadata !DIExpression()), !dbg !8716
  %3 = mul i32 %0, 336, !dbg !8717
  %4 = mul nsw i32 %1, 12, !dbg !8718
  %5 = udiv i32 %3, %4, !dbg !8719
  ret i32 %5, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8723, metadata !DIExpression()), !dbg !8726
  tail call void @config_enable_default_clocks() #25, !dbg !8727
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8728
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8728
  %4 = lshr i32 %3, 4, !dbg !8728
  %5 = and i32 %4, 15, !dbg !8728
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8728
  %7 = load i8, i8* %6, align 1, !dbg !8728
  %8 = zext i8 %7 to i32, !dbg !8728
  %9 = lshr i32 %2, %8, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %9, metadata !8724, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8725, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8726
  %10 = icmp ult i32 %9, 168000000, !dbg !8729
  br i1 %10, label %11, label %13, !dbg !8731

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8732
  br label %13, !dbg !8734

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8735
  tail call fastcc void @set_up_plls() #24, !dbg !8736
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8737
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8740
  br label %14, !dbg !8741

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8742
  %16 = icmp eq i32 %15, 8, !dbg !8743
  br i1 %16, label %17, label %14, !dbg !8741, !llvm.loop !8744

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8746
  br i1 %18, label %19, label %21, !dbg !8748

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8749
  br label %21, !dbg !8751

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8752
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8753
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8754
  ret i32 0, !dbg !8755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8758
  %2 = and i32 %1, 240, !dbg !8758
  ret i32 %2, !dbg !8759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8760 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8761
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8766
  br label %1, !dbg !8767

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8768
  %3 = icmp eq i32 %2, 1, !dbg !8769
  br i1 %3, label %4, label %1, !dbg !8767, !llvm.loop !8770

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8772
  br label %5, !dbg !8775

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8776
  %7 = icmp eq i32 %6, 1, !dbg !8777
  br i1 %7, label %8, label %5, !dbg !8775, !llvm.loop !8778

8:                                                ; preds = %5
  ret void, !dbg !8780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8781 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8782
  %2 = icmp eq i32 %1, 8, !dbg !8784
  br i1 %2, label %3, label %4, !dbg !8785

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8786
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8788
  br label %4, !dbg !8789

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8790
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8791
  %6 = and i32 %5, -196609, !dbg !8791
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8791
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8792
  %8 = and i32 %7, -251658241, !dbg !8792
  %9 = or i32 %8, 117440512, !dbg !8792
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8792
  tail call void @config_pll_sysclock() #25, !dbg !8793
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8794
  br label %10, !dbg !8795

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8796
  %12 = icmp eq i32 %11, 1, !dbg !8797
  br i1 %12, label %13, label %10, !dbg !8795, !llvm.loop !8798

13:                                               ; preds = %10
  ret void, !dbg !8800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8801 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8803, metadata !DIExpression()), !dbg !8804
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8805
  %2 = and i32 %1, -241, !dbg !8805
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8805
  ret void, !dbg !8806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8809, metadata !DIExpression()), !dbg !8810
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8811
  %3 = and i32 %2, -4, !dbg !8811
  %4 = or i32 %3, %0, !dbg !8811
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8811
  ret void, !dbg !8812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8814
  %2 = and i32 %1, 12, !dbg !8814
  ret i32 %2, !dbg !8815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8816 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8818, metadata !DIExpression()), !dbg !8819
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8820
  %2 = and i32 %1, -7169, !dbg !8820
  %3 = or i32 %2, 5120, !dbg !8820
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8820
  ret void, !dbg !8821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8822 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8824, metadata !DIExpression()), !dbg !8825
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8826
  %2 = and i32 %1, -57345, !dbg !8826
  %3 = or i32 %2, 32768, !dbg !8826
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8828 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8829
  %2 = icmp eq i32 %1, 1, !dbg !8831
  br i1 %2, label %7, label %3, !dbg !8832

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8833
  br label %4, !dbg !8835

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8836
  %6 = icmp eq i32 %5, 1, !dbg !8837
  br i1 %6, label %7, label %4, !dbg !8835, !llvm.loop !8838

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8840
  br label %8, !dbg !8841

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8842
  %10 = icmp eq i32 %9, 0, !dbg !8843
  br i1 %10, label %11, label %8, !dbg !8841, !llvm.loop !8844

11:                                               ; preds = %8
  ret void, !dbg !8846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8847 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8848
  %2 = and i32 %1, -16777217, !dbg !8848
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8848
  ret void, !dbg !8849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8850 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8851
  %2 = or i32 %1, 16777216, !dbg !8851
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8853 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8854
  %2 = lshr i32 %1, 25, !dbg !8855
  %3 = and i32 %2, 1, !dbg !8855
  ret i32 %3, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8858
  %2 = lshr i32 %1, 1, !dbg !8859
  %3 = and i32 %2, 1, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  %2 = or i32 %1, 1, !dbg !8862
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  ret void, !dbg !8863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8864 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8865
  %2 = and i32 %1, -262145, !dbg !8865
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  %2 = or i32 %1, 65536, !dbg !8868
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  ret void, !dbg !8869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8870 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8871
  %2 = lshr i32 %1, 17, !dbg !8872
  %3 = and i32 %2, 1, !dbg !8872
  ret i32 %3, !dbg !8873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8875
  %2 = or i32 %1, 1, !dbg !8875
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8875
  ret void, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8878
  %2 = lshr i32 %1, 1, !dbg !8879
  %3 = and i32 %2, 1, !dbg !8879
  ret i32 %3, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8881 {
  ret i32 12000000, !dbg !8883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8887 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8890 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8894, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 12, metadata !8895, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 336, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8898
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8899
  %2 = and i32 %1, -4227072, !dbg !8899
  %3 = or i32 %2, 4215820, !dbg !8899
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8899
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8900
  %5 = and i32 %4, -196609, !dbg !8900
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8900
  ret void, !dbg !8901
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8902 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8905 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8908, metadata !DIExpression()), !dbg !8910
  %2 = bitcast i32* %1 to i8*, !dbg !8911
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8911
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8909, metadata !DIExpression()), !dbg !8912
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8913
  %4 = or i32 %3, 268435456, !dbg !8913
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8913
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8914
  %6 = and i32 %5, 268435456, !dbg !8914
  store volatile i32 %6, i32* %1, align 4, !dbg !8915
  %7 = load volatile i32, i32* %1, align 4, !dbg !8916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8917
  ret void, !dbg !8917
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8920, metadata !DIExpression()), !dbg !8921
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8922
  br i1 %2, label %3, label %4, !dbg !8924

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8925
  br label %4, !dbg !8926

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8921
  ret i32 %5, !dbg !8927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8928 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8933, metadata !DIExpression()), !dbg !8934
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8935, !srcloc !8937
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8938
  ret i1 %1, !dbg !8939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8940 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8941
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8946, metadata !DIExpression()), !dbg !8947
  %2 = icmp eq i32 %0, 10, !dbg !8948
  br i1 %2, label %3, label %4, !dbg !8950

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8951
  br label %4, !dbg !8953

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8954
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8955
  ret i32 %0, !dbg !8956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8957 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8960, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.value(metadata i8 %0, metadata !8961, metadata !DIExpression()), !dbg !8962
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8963, !srcloc !8965
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8966
  ret void, !dbg !8967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8968 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8970, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i8 %0, metadata !8971, metadata !DIExpression()), !dbg !8973
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8974
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8972, metadata !DIExpression()), !dbg !8973
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8975
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8975
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !8976
  ret void, !dbg !8977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8978 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8980, metadata !DIExpression()), !dbg !8981
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !8982
  ret i1 %1, !dbg !8983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9033, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9034, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9035, metadata !DIExpression()), !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9038 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9040, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8 %1, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9042, metadata !DIExpression()), !dbg !9045
  %5 = bitcast i32* %4 to i8*, !dbg !9046
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9046
  call void @llvm.dbg.value(metadata i32* %4, metadata !9044, metadata !DIExpression(DW_OP_deref)), !dbg !9045
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %6, metadata !9043, metadata !DIExpression()), !dbg !9045
  %7 = icmp eq i32 %6, 0, !dbg !9048
  br i1 %7, label %8, label %31, !dbg !9050

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9043, metadata !DIExpression()), !dbg !9045
  %9 = and i32 %2, 131072, !dbg !9051
  %10 = icmp eq i32 %9, 0, !dbg !9053
  br i1 %10, label %28, label %11, !dbg !9054

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9055
  %13 = icmp eq i32 %12, 0, !dbg !9058
  br i1 %13, label %18, label %14, !dbg !9059

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9060
  %16 = shl nuw i32 1, %15, !dbg !9060
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9062
  br label %25, !dbg !9063

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9064
  %20 = icmp eq i32 %19, 0, !dbg !9066
  %21 = zext i8 %1 to i32, !dbg !9045
  br i1 %20, label %25, label %22, !dbg !9067

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9068
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9070
  br label %25, !dbg !9071

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9072
  %27 = load i32, i32* %4, align 4, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %30, metadata !9044, metadata !DIExpression()), !dbg !9045
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9074
  br label %31, !dbg !9075

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9072
  %30 = load i32, i32* %4, align 4, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %30, metadata !9044, metadata !DIExpression()), !dbg !9045
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9074
  call void @llvm.dbg.value(metadata i32 0, metadata !9043, metadata !DIExpression()), !dbg !9045
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9076
  ret i32 %6, !dbg !9076
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9081, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32* %1, metadata !9082, metadata !DIExpression()), !dbg !9086
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9087
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9087
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9087
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9083, metadata !DIExpression()), !dbg !9086
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9088
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9088
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9088
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9085, metadata !DIExpression()), !dbg !9086
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9089
  store i32 %9, i32* %1, align 4, !dbg !9090
  ret i32 0, !dbg !9091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9094, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %1, metadata !9095, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %2, metadata !9096, metadata !DIExpression()), !dbg !9100
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9101
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9101
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9101
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9097, metadata !DIExpression()), !dbg !9100
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9102
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9102
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9102
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9098, metadata !DIExpression()), !dbg !9100
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %10, metadata !9099, metadata !DIExpression()), !dbg !9100
  %11 = xor i32 %1, -1, !dbg !9104
  %12 = and i32 %10, %11, !dbg !9105
  %13 = and i32 %2, %1, !dbg !9106
  %14 = or i32 %12, %13, !dbg !9107
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9108
  ret i32 0, !dbg !9109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9110 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9112, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %1, metadata !9113, metadata !DIExpression()), !dbg !9116
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9117
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9117
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9117
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9114, metadata !DIExpression()), !dbg !9116
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9118
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9118
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9118
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9115, metadata !DIExpression()), !dbg !9116
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9119
  store volatile i32 %1, i32* %9, align 4, !dbg !9119
  ret i32 0, !dbg !9120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9123, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32 %1, metadata !9124, metadata !DIExpression()), !dbg !9127
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9128
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9128
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9128
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9125, metadata !DIExpression()), !dbg !9127
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9129
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9129
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9129
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9126, metadata !DIExpression()), !dbg !9127
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9130
  ret i32 0, !dbg !9131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9134, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9138
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9139
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9139
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9139
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9136, metadata !DIExpression()), !dbg !9138
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9140
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9140
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9140
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9137, metadata !DIExpression()), !dbg !9138
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9141
  %10 = load volatile i32, i32* %9, align 4, !dbg !9141
  %11 = xor i32 %10, %1, !dbg !9141
  store volatile i32 %11, i32* %9, align 4, !dbg !9141
  ret i32 0, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9145, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i8 %1, metadata !9146, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 %2, metadata !9147, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 %3, metadata !9148, metadata !DIExpression()), !dbg !9155
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9156
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9156
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9156
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9149, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i8* undef, metadata !9150, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 0, metadata !9152, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 0, metadata !9153, metadata !DIExpression()), !dbg !9155
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9157

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9158
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9162
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9163
  %12 = load i32, i32* %11, align 4, !dbg !9163
  %13 = icmp eq i32 %10, %12, !dbg !9164
  br i1 %13, label %14, label %29, !dbg !9165

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9166
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9168
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9169
  br label %29, !dbg !9170

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9171
  %17 = load i8*, i8** %16, align 4, !dbg !9171
  call void @llvm.dbg.value(metadata i8* %17, metadata !9150, metadata !DIExpression()), !dbg !9155
  %18 = zext i8 %1 to i32, !dbg !9172
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9174
  %20 = icmp eq i32 %19, 0, !dbg !9175
  br i1 %20, label %21, label %29, !dbg !9176

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9177
  %23 = load i32, i32* %22, align 4, !dbg !9177
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9178
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9179

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9152, metadata !DIExpression()), !dbg !9155
  br label %27, !dbg !9180

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9152, metadata !DIExpression()), !dbg !9155
  br label %27, !dbg !9182

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9152, metadata !DIExpression()), !dbg !9155
  br label %27, !dbg !9183

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9155
  call void @llvm.dbg.value(metadata i32 %28, metadata !9152, metadata !DIExpression()), !dbg !9155
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9184
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9185
  br label %29, !dbg !9185

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9155
  call void @llvm.dbg.value(metadata i32 %30, metadata !9153, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.label(metadata !9154), !dbg !9186
  ret i32 %30, !dbg !9187
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9190, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9191, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i1 %2, metadata !9192, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9194
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9195
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9195
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9193, metadata !DIExpression()), !dbg !9194
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9196
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9197
  ret i32 %8, !dbg !9198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9206, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i1 %2, metadata !9207, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9208
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9209
  br i1 %4, label %5, label %6, !dbg !9212

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.118, i32 0, i32 0)) #25, !dbg !9213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9213
  unreachable, !dbg !9213

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9215
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9215
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9215
  br i1 %9, label %10, label %11, !dbg !9218

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.120, i32 0, i32 0)) #25, !dbg !9219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9219
  unreachable, !dbg !9219

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9221
  br i1 %12, label %18, label %13, !dbg !9223

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9224
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9227
  %16 = or i1 %15, %2, !dbg !9228
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9228
  br i1 %2, label %19, label %21, !dbg !9228

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9229

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9230
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9233
  br label %21, !dbg !9234

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9208
  ret i32 %22, !dbg !9235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9240, metadata !DIExpression()), !dbg !9241
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9242
  %3 = icmp eq %struct._snode* %2, null, !dbg !9242
  ret i1 %3, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9247, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9248, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9249, metadata !DIExpression()), !dbg !9251
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9252
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9249, metadata !DIExpression()), !dbg !9251
  %4 = icmp eq %struct._snode* %3, null, !dbg !9254
  br i1 %4, label %15, label %5, !dbg !9252

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9249, metadata !DIExpression()), !dbg !9251
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9256
  br i1 %6, label %9, label %11, !dbg !9259

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9249, metadata !DIExpression()), !dbg !9251
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9256
  br i1 %8, label %9, label %11, !dbg !9259, !llvm.loop !9260

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9261
  br label %15, !dbg !9261

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9249, metadata !DIExpression()), !dbg !9251
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9254
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9250, metadata !DIExpression()), !dbg !9251
  %14 = icmp eq %struct._snode* %13, null, !dbg !9254
  br i1 %14, label %15, label %7, !dbg !9252, !llvm.loop !9260

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9264 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9268, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9269, metadata !DIExpression()), !dbg !9270
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9271
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9271
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9271
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9272
  %5 = icmp eq %struct._snode* %4, null, !dbg !9272
  br i1 %5, label %6, label %8, !dbg !9271

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9274
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9274
  br label %8, !dbg !9274

8:                                                ; preds = %6, %2
  ret void, !dbg !9271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9276 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9280, metadata !DIExpression()), !dbg !9281
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9282
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9282
  ret %struct._snode* %3, !dbg !9283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9288, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9289, metadata !DIExpression()), !dbg !9290
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9291
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9292
  ret void, !dbg !9293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9294 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9296, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9297, metadata !DIExpression()), !dbg !9298
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9299
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9304, metadata !DIExpression()), !dbg !9305
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9306
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9306
  ret %struct._snode* %3, !dbg !9307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9308 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9310, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9311, metadata !DIExpression()), !dbg !9312
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9313
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9314
  ret void, !dbg !9315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9320, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9321, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9322, metadata !DIExpression()), !dbg !9323
  %4 = icmp eq %struct._snode* %1, null, !dbg !9324
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9326
  br i1 %4, label %6, label %11, !dbg !9327

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9328
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9330
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9330
  br i1 %8, label %9, label %15, !dbg !9328

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9332
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9332
  br label %15, !dbg !9332

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9334
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9336
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9336
  br i1 %13, label %14, label %15, !dbg !9334

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9338
  br label %15, !dbg !9338

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9327
  ret void, !dbg !9327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9344, metadata !DIExpression()), !dbg !9345
  %2 = icmp eq %struct._snode* %0, null, !dbg !9346
  br i1 %2, label %5, label %3, !dbg !9346

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9346
  br label %5, !dbg !9346

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9346
  ret %struct._snode* %6, !dbg !9346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9347 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9349, metadata !DIExpression()), !dbg !9350
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9351
  ret %struct._snode* %2, !dbg !9351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9352 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9354, metadata !DIExpression()), !dbg !9355
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9356
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9356
  ret %struct._snode* %3, !dbg !9357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9360, metadata !DIExpression()), !dbg !9363
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9364, !range !9365
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9363
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %3, metadata !9362, metadata !DIExpression()), !dbg !9363
  ret i32 %3, !dbg !9367
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9370, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i8* %1, metadata !9371, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i8* %1, metadata !9372, metadata !DIExpression()), !dbg !9373
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9374
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9374
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9375
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9375
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9375
  %8 = shl nuw i32 1, %0, !dbg !9376
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9377
  ret void, !dbg !9378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9379 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9383, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %1, metadata !9384, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9385, metadata !DIExpression()), !dbg !9389
  %4 = bitcast i64* %3 to i8*, !dbg !9390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9390
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9387, metadata !DIExpression()), !dbg !9389
  store i64 70368744177732, i64* %3, align 8, !dbg !9391
  call void @llvm.dbg.value(metadata i64* %3, metadata !9387, metadata !DIExpression(DW_OP_deref)), !dbg !9389
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %5, metadata !9388, metadata !DIExpression()), !dbg !9389
  %6 = icmp eq i32 %5, 0, !dbg !9393
  br i1 %6, label %7, label %8, !dbg !9395

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9396
  br label %8, !dbg !9397

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9398
  ret void, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9401, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i8* %0, metadata !9402, metadata !DIExpression()), !dbg !9404
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9405
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9403, metadata !DIExpression()), !dbg !9404
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9406
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9406
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !9407
  ret i32 %5, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %3, metadata !9413, metadata !DIExpression()), !dbg !9414
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9416
  ret void, !dbg !9417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9422, metadata !DIExpression()), !dbg !9423
  %2 = sdiv i32 %0, 4, !dbg !9424
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9425
  %6 = add nsw i32 %5, 16, !dbg !9426
  %7 = shl i32 15, %6, !dbg !9427
  %8 = or i32 %7, %2, !dbg !9428
  ret i32 %8, !dbg !9429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9434, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i32 %1, metadata !9435, metadata !DIExpression()), !dbg !9436
  %3 = and i32 %1, 255, !dbg !9437
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9437
  %5 = load volatile i32, i32* %4, align 4, !dbg !9437
  %6 = lshr i32 %1, 16, !dbg !9437
  %7 = xor i32 %6, -1, !dbg !9437
  %8 = and i32 %5, %7, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %6, metadata !9438, metadata !DIExpression()) #23, !dbg !9442
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9444, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %9, metadata !9441, metadata !DIExpression()) #23, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %9, metadata !9446, metadata !DIExpression()) #23, !dbg !9451
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9453, !range !7614
  %11 = shl i32 %0, %10, !dbg !9437
  %12 = or i32 %11, %8, !dbg !9437
  store volatile i32 %12, i32* %4, align 4, !dbg !9437
  ret void, !dbg !9454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9455 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9459, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9460, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9464
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9465
  %5 = icmp eq %struct._snode* %4, null, !dbg !9465
  br i1 %5, label %24, label %6, !dbg !9465

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9467
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9463, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9462, metadata !DIExpression()), !dbg !9464
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9468
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9468
  %12 = load i32, i32* %11, align 4, !dbg !9468
  %13 = and i32 %12, %2, !dbg !9472
  %14 = icmp eq i32 %13, 0, !dbg !9472
  br i1 %14, label %22, label %15, !dbg !9473

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9474
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9474
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9474
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9474
  br i1 %19, label %20, label %21, !dbg !9478

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.120, i32 0, i32 0)) #25, !dbg !9479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9479
  unreachable, !dbg !9479

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9481
  br label %22, !dbg !9482

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9462, metadata !DIExpression()), !dbg !9464
  %23 = icmp eq %struct._snode* %8, null, !dbg !9483
  br i1 %23, label %24, label %6, !dbg !9483

24:                                               ; preds = %22, %3
  ret void, !dbg !9484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9487, metadata !DIExpression()), !dbg !9488
  %2 = and i32 %0, 255, !dbg !9489
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9489
  %4 = load volatile i32, i32* %3, align 4, !dbg !9489
  %5 = lshr i32 %0, 16, !dbg !9489
  %6 = and i32 %4, %5, !dbg !9489
  call void @llvm.dbg.value(metadata i32 %5, metadata !9438, metadata !DIExpression()) #23, !dbg !9490
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9492, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %7, metadata !9446, metadata !DIExpression()) #23, !dbg !9493
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9495, !range !7614
  %9 = lshr i32 %6, %8, !dbg !9496
  ret i32 %9, !dbg !9497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9498 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9503, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()), !dbg !9505
  %3 = shl i32 %1, 16, !dbg !9506
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9506
  store volatile i32 %3, i32* %4, align 4, !dbg !9506
  ret void, !dbg !9507
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9508 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9512, metadata !DIExpression()), !dbg !9513
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9514
  %3 = load volatile i32, i32* %2, align 4, !dbg !9514
  ret i32 %3, !dbg !9515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9518, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.value(metadata i32 %1, metadata !9519, metadata !DIExpression()), !dbg !9520
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9521
  store volatile i32 %1, i32* %3, align 4, !dbg !9521
  ret void, !dbg !9522
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9523 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9525, metadata !DIExpression()), !dbg !9526
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9527
  %3 = load volatile i32, i32* %2, align 4, !dbg !9527
  ret i32 %3, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9533, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i32* %1, metadata !9534, metadata !DIExpression()), !dbg !9535
  %3 = and i32 %0, 131072, !dbg !9536
  %4 = icmp eq i32 %3, 0, !dbg !9538
  br i1 %4, label %22, label %5, !dbg !9539

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9540
  %6 = and i32 %0, 2, !dbg !9542
  %7 = icmp eq i32 %6, 0, !dbg !9544
  br i1 %7, label %11, label %8, !dbg !9545

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9546
  %10 = icmp eq i32 %9, 0, !dbg !9546
  br i1 %10, label %33, label %11, !dbg !9549

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9550
  store i32 %12, i32* %1, align 4, !dbg !9550
  %13 = and i32 %0, 16, !dbg !9551
  %14 = icmp eq i32 %13, 0, !dbg !9553
  br i1 %14, label %17, label %15, !dbg !9554

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9555
  br label %31, !dbg !9557

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9558
  %19 = icmp eq i32 %18, 0, !dbg !9560
  br i1 %19, label %33, label %20, !dbg !9561

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9562
  br label %31, !dbg !9564

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9565
  %24 = icmp eq i32 %23, 0, !dbg !9567
  br i1 %24, label %31, label %25, !dbg !9568

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9569
  %27 = icmp eq i32 %26, 0, !dbg !9572
  br i1 %27, label %28, label %31, !dbg !9573

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9574
  br label %33, !dbg !9575

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9535
  ret i32 %34, !dbg !9575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9580, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %1, metadata !9581, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9582, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %3, metadata !9583, metadata !DIExpression()), !dbg !9591
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9592
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9592
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9592
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9584, metadata !DIExpression()), !dbg !9591
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9593
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9593
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9585, metadata !DIExpression()), !dbg !9591
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %11, metadata !9586, metadata !DIExpression()), !dbg !9591
  %12 = and i32 %2, 48, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %12, metadata !9587, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9588, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9589, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9590, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9591
  %13 = lshr i32 %2, 6, !dbg !9596
  %14 = and i32 %13, 1, !dbg !9596
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9597
  %15 = lshr i32 %2, 7, !dbg !9598
  %16 = and i32 %15, 3, !dbg !9598
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9599
  %17 = lshr i32 %2, 9, !dbg !9600
  %18 = and i32 %17, 3, !dbg !9600
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9601
  %19 = icmp eq i32 %12, 32, !dbg !9602
  br i1 %19, label %20, label %24, !dbg !9604

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9605
  br i1 %21, label %22, label %23, !dbg !9608

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9609
  br label %24, !dbg !9611

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9612
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9614
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9619, metadata !DIExpression()), !dbg !9621
  %2 = shl nuw i32 1, %0, !dbg !9622
  call void @llvm.dbg.value(metadata i32 %2, metadata !9620, metadata !DIExpression()), !dbg !9621
  ret i32 %2, !dbg !9623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9628, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9629, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression()), !dbg !9631
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9632
  %5 = load volatile i32, i32* %4, align 4, !dbg !9632
  %6 = xor i32 %1, -1, !dbg !9632
  %7 = and i32 %5, %6, !dbg !9632
  %8 = mul i32 %2, %1, !dbg !9632
  %9 = or i32 %7, %8, !dbg !9632
  store volatile i32 %9, i32* %4, align 4, !dbg !9632
  ret void, !dbg !9633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9634 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9636, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 %1, metadata !9637, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 %2, metadata !9638, metadata !DIExpression()), !dbg !9639
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9640
  %5 = load volatile i32, i32* %4, align 4, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9641
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9643, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9644
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9646, !range !7614
  %8 = shl nuw nsw i32 %7, 1, !dbg !9640
  %9 = shl i32 3, %8, !dbg !9640
  %10 = xor i32 %9, -1, !dbg !9640
  %11 = and i32 %5, %10, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9649
  %12 = shl i32 %2, %8, !dbg !9640
  %13 = or i32 %11, %12, !dbg !9640
  store volatile i32 %13, i32* %4, align 4, !dbg !9640
  ret void, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9654, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9656, metadata !DIExpression()), !dbg !9657
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9658
  %5 = load volatile i32, i32* %4, align 4, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9659
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9661, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9659
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9662
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9664, !range !7614
  %8 = shl nuw nsw i32 %7, 1, !dbg !9658
  %9 = shl i32 3, %8, !dbg !9658
  %10 = xor i32 %9, -1, !dbg !9658
  %11 = and i32 %5, %10, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9667
  %12 = shl i32 %2, %8, !dbg !9658
  %13 = or i32 %11, %12, !dbg !9658
  store volatile i32 %13, i32* %4, align 4, !dbg !9658
  ret void, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9673, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %2, metadata !9674, metadata !DIExpression()), !dbg !9675
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9676
  %5 = load volatile i32, i32* %4, align 4, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9677
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9679, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9677
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9680
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9682, !range !7614
  %8 = shl nuw nsw i32 %7, 2, !dbg !9676
  %9 = shl i32 15, %8, !dbg !9676
  %10 = xor i32 %9, -1, !dbg !9676
  %11 = and i32 %5, %10, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9685
  %12 = shl i32 %2, %8, !dbg !9676
  %13 = or i32 %11, %12, !dbg !9676
  store volatile i32 %13, i32* %4, align 4, !dbg !9676
  ret void, !dbg !9687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9688 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9690, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %1, metadata !9691, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %2, metadata !9692, metadata !DIExpression()), !dbg !9693
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9694
  %5 = load volatile i32, i32* %4, align 4, !dbg !9694
  %6 = lshr i32 %1, 8, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %6, metadata !9438, metadata !DIExpression()) #23, !dbg !9695
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9697, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9695
  call void @llvm.dbg.value(metadata i32 %7, metadata !9446, metadata !DIExpression()) #23, !dbg !9698
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9700, !range !7614
  %9 = shl nuw nsw i32 %8, 2, !dbg !9694
  %10 = shl i32 15, %9, !dbg !9694
  %11 = xor i32 %10, -1, !dbg !9694
  %12 = and i32 %5, %11, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %6, metadata !9438, metadata !DIExpression()) #23, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %7, metadata !9446, metadata !DIExpression()) #23, !dbg !9703
  %13 = shl i32 %2, %9, !dbg !9694
  %14 = or i32 %12, %13, !dbg !9694
  store volatile i32 %14, i32* %4, align 4, !dbg !9694
  ret void, !dbg !9705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9706 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9708, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %1, metadata !9709, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %2, metadata !9710, metadata !DIExpression()), !dbg !9711
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9712
  %5 = load volatile i32, i32* %4, align 4, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9713
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9715, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9716
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9718, !range !7614
  %8 = shl nuw nsw i32 %7, 1, !dbg !9712
  %9 = shl i32 3, %8, !dbg !9712
  %10 = xor i32 %9, -1, !dbg !9712
  %11 = and i32 %5, %10, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9721
  %12 = shl i32 %2, %8, !dbg !9712
  %13 = or i32 %11, %12, !dbg !9712
  store volatile i32 %13, i32* %4, align 4, !dbg !9712
  ret void, !dbg !9723
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9724 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9726, metadata !DIExpression()), !dbg !9729
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9730
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9730
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9730
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9727, metadata !DIExpression()), !dbg !9729
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9731
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9732
  %6 = tail call fastcc zeroext i1 @device_is_ready.131() #24, !dbg !9733
  br i1 %6, label %7, label %11, !dbg !9735

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %8, metadata !9728, metadata !DIExpression()), !dbg !9729
  %9 = icmp slt i32 %8, 0, !dbg !9737
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9739
  br label %11, !dbg !9739

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9729
  ret i32 %12, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.131() unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9745, metadata !DIExpression()), !dbg !9746
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9747, !srcloc !9749
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.132() #24, !dbg !9750
  ret i1 %1, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9756, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata i8 1, metadata !9757, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9762
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9762
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9758, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata i32 0, metadata !9759, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9760, metadata !DIExpression()), !dbg !9761
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9763
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9766
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %7, metadata !9759, metadata !DIExpression()), !dbg !9761
  ret i32 %7, !dbg !9768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.132() unnamed_addr #1 !dbg !9769 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9771, metadata !DIExpression()), !dbg !9772
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9773
  ret i1 %1, !dbg !9774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9779, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %1, metadata !9780, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %2, metadata !9781, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %3, metadata !9782, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 0, metadata !9783, metadata !DIExpression()), !dbg !9787
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9788
  %5 = icmp eq i32 %3, 17, !dbg !9789
  br i1 %5, label %6, label %14, !dbg !9790

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %7, metadata !9784, metadata !DIExpression()), !dbg !9792
  %8 = icmp eq i32 %7, 0, !dbg !9793
  %9 = shl nuw i32 1, %1, !dbg !9795
  br i1 %8, label %12, label %10, !dbg !9796

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9797
  br label %14, !dbg !9799

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9800
  br label %14, !dbg !9803

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9804
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9807, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i8* %1, metadata !9808, metadata !DIExpression()), !dbg !9811
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9812
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9812
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9812
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9809, metadata !DIExpression()), !dbg !9811
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9813
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9813
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9815
  %9 = icmp eq i32 %8, 0, !dbg !9815
  br i1 %9, label %12, label %10, !dbg !9816

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9817
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9819
  br label %12, !dbg !9820

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9821
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9823
  %15 = icmp eq i32 %14, 0, !dbg !9823
  br i1 %15, label %19, label %16, !dbg !9824

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9825
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9826
  store i8 %18, i8* %1, align 1, !dbg !9827
  br label %19, !dbg !9828

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9811
  ret i32 %20, !dbg !9829
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9830 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9832, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata i8 %1, metadata !9833, metadata !DIExpression()), !dbg !9836
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9837
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9837
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9834, metadata !DIExpression()), !dbg !9836
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9838

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9839
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9842
  %10 = icmp eq i32 %9, 0, !dbg !9842
  br i1 %10, label %18, label %11, !dbg !9843

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9844, !srcloc !9851
  call void @llvm.dbg.value(metadata i32 undef, metadata !9847, metadata !DIExpression()) #23, !dbg !9852
  call void @llvm.dbg.value(metadata i32 undef, metadata !9848, metadata !DIExpression()) #23, !dbg !9852
  call void @llvm.dbg.value(metadata i32 undef, metadata !9835, metadata !DIExpression()), !dbg !9836
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9853
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9855
  %15 = icmp eq i32 %14, 0, !dbg !9855
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9844
  br i1 %15, label %17, label %19, !dbg !9856

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9847, metadata !DIExpression()) #23, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %16, metadata !9835, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata i32 undef, metadata !9857, metadata !DIExpression()) #23, !dbg !9860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9862, !srcloc !9863
  br label %18, !dbg !9864

18:                                               ; preds = %17, %7
  br label %7, !dbg !9839, !llvm.loop !9865

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9844
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9867
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9868
  call void @llvm.dbg.value(metadata i32 %20, metadata !9857, metadata !DIExpression()) #23, !dbg !9869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9871, !srcloc !9863
  ret void, !dbg !9872
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9875, metadata !DIExpression()), !dbg !9878
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9879
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9879
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9876, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9877, metadata !DIExpression()), !dbg !9878
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9880
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9880
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9882
  %8 = icmp ne i32 %7, 0, !dbg !9882
  %9 = zext i1 %8 to i32, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %9, metadata !9877, metadata !DIExpression()), !dbg !9878
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9884
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9886
  %12 = icmp eq i32 %11, 0, !dbg !9886
  %13 = or i32 %9, 2, !dbg !9887
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %14, metadata !9877, metadata !DIExpression()), !dbg !9878
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9888
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9890
  %17 = icmp eq i32 %16, 0, !dbg !9890
  %18 = or i32 %14, 4, !dbg !9891
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %19, metadata !9877, metadata !DIExpression()), !dbg !9878
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9892
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9894
  %22 = icmp eq i32 %21, 0, !dbg !9894
  %23 = or i32 %19, 8, !dbg !9895
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %24, metadata !9877, metadata !DIExpression()), !dbg !9878
  %25 = and i32 %24, 8, !dbg !9896
  %26 = icmp eq i32 %25, 0, !dbg !9896
  br i1 %26, label %29, label %27, !dbg !9898

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9899
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9901
  br label %29, !dbg !9902

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9903
  %31 = icmp eq i32 %30, 0, !dbg !9903
  br i1 %31, label %34, label %32, !dbg !9905

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9906
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9908
  br label %34, !dbg !9909

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9910
  %36 = icmp eq i32 %35, 0, !dbg !9910
  br i1 %36, label %39, label %37, !dbg !9912

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9913
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9915
  br label %39, !dbg !9916

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9917
  %41 = icmp eq i32 %40, 0, !dbg !9917
  br i1 %41, label %44, label %42, !dbg !9919

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9920
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9922
  br label %44, !dbg !9923

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9924
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9925
  ret i32 %24, !dbg !9926
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9929, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9930, metadata !DIExpression()), !dbg !9938
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9939
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9939
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9939
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9931, metadata !DIExpression()), !dbg !9938
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9940
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9940
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9940
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9932, metadata !DIExpression()), !dbg !9938
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9941
  %10 = load i8, i8* %9, align 4, !dbg !9941
  %11 = zext i8 %10 to i32, !dbg !9942
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %12, metadata !9934, metadata !DIExpression()), !dbg !9938
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9944
  %14 = load i8, i8* %13, align 1, !dbg !9944
  %15 = zext i8 %14 to i32, !dbg !9945
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9946
  call void @llvm.dbg.value(metadata i32 %16, metadata !9935, metadata !DIExpression()), !dbg !9938
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9947
  %18 = load i8, i8* %17, align 2, !dbg !9947
  %19 = zext i8 %18 to i32, !dbg !9948
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %20, metadata !9936, metadata !DIExpression()), !dbg !9938
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9950
  %22 = load i8, i8* %21, align 1, !dbg !9950
  %23 = zext i8 %22 to i32, !dbg !9951
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %24, metadata !9937, metadata !DIExpression()), !dbg !9938
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9953

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9955
  br i1 %26, label %69, label %27, !dbg !9957

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9958

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9959
  br i1 %29, label %65, label %30, !dbg !9959

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9961
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9938
  br i1 %31, label %38, label %34, !dbg !9963

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9964
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9964

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9967
  br i1 %37, label %38, label %69, !dbg !9968

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9969
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9970
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9971
  %41 = icmp eq i32 %12, %40, !dbg !9973
  br i1 %41, label %43, label %42, !dbg !9974

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9975
  br label %43, !dbg !9977

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9978
  %45 = icmp eq i32 %16, %44, !dbg !9980
  br i1 %45, label %47, label %46, !dbg !9981

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9982
  br label %47, !dbg !9984

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9985
  %49 = icmp eq i32 %20, %48, !dbg !9987
  br i1 %49, label %51, label %50, !dbg !9988

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9989
  br label %51, !dbg !9991

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9992
  %53 = icmp eq i32 %24, %52, !dbg !9994
  br i1 %53, label %55, label %54, !dbg !9995

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9996
  br label %55, !dbg !9998

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9999
  %57 = load i32, i32* %56, align 4, !dbg !9999
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10001
  %59 = load i32, i32* %58, align 4, !dbg !10001
  %60 = icmp eq i32 %57, %59, !dbg !10002
  br i1 %60, label %63, label %61, !dbg !10003

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10004
  %62 = load i32, i32* %56, align 4, !dbg !10006
  store i32 %62, i32* %58, align 4, !dbg !10007
  br label %63, !dbg !10008

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10009
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10010
  br label %69, !dbg !10011

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9959
  %67 = and i8 %66, 1, !dbg !9959
  %68 = icmp eq i8 %67, 0, !dbg !9959
  br i1 %68, label %30, label %69, !dbg !9959

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9938
  ret i32 %70, !dbg !10012
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10015, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10016, metadata !DIExpression()), !dbg !10018
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10019
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10019
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10019
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10017, metadata !DIExpression()), !dbg !10018
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10020
  %7 = load i32, i32* %6, align 4, !dbg !10020
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10021
  store i32 %7, i32* %8, align 4, !dbg !10022
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10023, !range !10024
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10025
  %11 = trunc i32 %10 to i8, !dbg !10025
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10026
  store i8 %11, i8* %12, align 4, !dbg !10027
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10028, !range !10029
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10030
  %15 = trunc i32 %14 to i8, !dbg !10030
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10031
  store i8 %15, i8* %16, align 1, !dbg !10032
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10033
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10034, !range !10024
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10035
  %20 = trunc i32 %19 to i8, !dbg !10035
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10036
  store i8 %20, i8* %21, align 2, !dbg !10037
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10038, !range !10039
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10040
  %24 = trunc i32 %23 to i8, !dbg !10040
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10041
  store i8 %24, i8* %25, align 1, !dbg !10042
  ret i32 0, !dbg !10043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10048, metadata !DIExpression()), !dbg !10050
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10051
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10051
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10051
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10049, metadata !DIExpression()), !dbg !10050
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10052
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10052
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10053
  ret i32 %7, !dbg !10054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10059, metadata !DIExpression()), !dbg !10060
  %2 = icmp eq i32 %0, 1024, !dbg !10061
  %3 = select i1 %2, i32 2, i32 0, !dbg !10061
  %4 = icmp eq i32 %0, 1536, !dbg !10061
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10061
  ret i32 %5, !dbg !10062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10065, metadata !DIExpression()), !dbg !10067
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10068
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10068
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10068
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10066, metadata !DIExpression()), !dbg !10067
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10069
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10069
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10070
  ret i32 %7, !dbg !10071
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10076, metadata !DIExpression()), !dbg !10077
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10078
  %3 = icmp ult i32 %2, 4, !dbg !10078
  br i1 %3, label %4, label %7, !dbg !10078

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10078
  %6 = load i32, i32* %5, align 4, !dbg !10078
  br label %7, !dbg !10078

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10079
  ret i32 %8, !dbg !10081
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10084, metadata !DIExpression()), !dbg !10086
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10087
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10087
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10087
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10085, metadata !DIExpression()), !dbg !10086
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10088
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10088
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10089
  ret i32 %7, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10095, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.value(metadata i32 %1, metadata !10096, metadata !DIExpression()), !dbg !10097
  %3 = icmp eq i32 %0, 4096, !dbg !10098
  %4 = icmp eq i32 %1, 0, !dbg !10098
  %5 = select i1 %4, i32 4, i32 3, !dbg !10098
  %6 = select i1 %4, i32 3, i32 2, !dbg !10098
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10098
  ret i32 %7, !dbg !10099
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10102, metadata !DIExpression()), !dbg !10104
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10105
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10105
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10105
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10103, metadata !DIExpression()), !dbg !10104
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10106
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10106
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10107
  ret i32 %7, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10113, metadata !DIExpression()), !dbg !10114
  %2 = icmp eq i32 %0, 768, !dbg !10115
  %3 = zext i1 %2 to i32, !dbg !10114
  ret i32 %3, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10118 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10123, metadata !DIExpression()), !dbg !10124
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10125
  %3 = load volatile i32, i32* %2, align 4, !dbg !10125
  %4 = and i32 %3, 768, !dbg !10125
  ret i32 %4, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10129, metadata !DIExpression()), !dbg !10130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10131
  %3 = load volatile i32, i32* %2, align 4, !dbg !10131
  %4 = and i32 %3, 4096, !dbg !10131
  ret i32 %4, !dbg !10132
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10133 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10135, metadata !DIExpression()), !dbg !10136
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10137
  %3 = load volatile i32, i32* %2, align 4, !dbg !10137
  %4 = and i32 %3, 12288, !dbg !10137
  ret i32 %4, !dbg !10138
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10141, metadata !DIExpression()), !dbg !10142
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10143
  %3 = load volatile i32, i32* %2, align 4, !dbg !10143
  %4 = and i32 %3, 1536, !dbg !10143
  ret i32 %4, !dbg !10144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10149, metadata !DIExpression()), !dbg !10150
  %2 = icmp eq i32 %0, 2, !dbg !10151
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10151
  %4 = icmp eq i32 %0, 1, !dbg !10151
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10151
  ret i32 %5, !dbg !10152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10157, metadata !DIExpression()), !dbg !10158
  %2 = icmp ult i32 %0, 3, !dbg !10159
  br i1 %2, label %3, label %6, !dbg !10159

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10159
  %5 = load i32, i32* %4, align 4, !dbg !10159
  br label %6, !dbg !10159

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10160
  ret i32 %7, !dbg !10162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 %1, metadata !10168, metadata !DIExpression()), !dbg !10169
  %3 = icmp eq i32 %0, 4, !dbg !10170
  %4 = icmp eq i32 %1, 0, !dbg !10170
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10170
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10170
  ret i32 %6, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = icmp eq i32 %0, 1, !dbg !10178
  %3 = select i1 %2, i32 768, i32 0, !dbg !10177
  ret i32 %3, !dbg !10180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10185, metadata !DIExpression()), !dbg !10186
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10187
  %3 = load volatile i32, i32* %2, align 4, !dbg !10187
  %4 = and i32 %3, -8193, !dbg !10187
  store volatile i32 %4, i32* %2, align 4, !dbg !10187
  ret void, !dbg !10188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10193, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 %1, metadata !10194, metadata !DIExpression()), !dbg !10196
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10197
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10197
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10197
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10195, metadata !DIExpression()), !dbg !10196
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10198
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10198
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10199
  ret void, !dbg !10200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10203, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i32 %1, metadata !10204, metadata !DIExpression()), !dbg !10206
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10207
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10207
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10207
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10205, metadata !DIExpression()), !dbg !10206
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10208
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10208
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10213, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.value(metadata i32 %1, metadata !10214, metadata !DIExpression()), !dbg !10216
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10217
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10217
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10217
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10215, metadata !DIExpression()), !dbg !10216
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10218
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10218
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10223, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata i32 %1, metadata !10224, metadata !DIExpression()), !dbg !10226
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10227
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10227
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10227
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10225, metadata !DIExpression()), !dbg !10226
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10228
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10228
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10231 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10233, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata i32 %1, metadata !10234, metadata !DIExpression()), !dbg !10238
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10239
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10239
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10239
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10235, metadata !DIExpression()), !dbg !10238
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10240
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10240
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10240
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10236, metadata !DIExpression()), !dbg !10238
  %10 = bitcast i32* %3 to i8*, !dbg !10241
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10241
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10242
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10242
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10246
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10246
  %15 = load i8*, i8** %14, align 4, !dbg !10246
  call void @llvm.dbg.value(metadata i32* %3, metadata !10237, metadata !DIExpression(DW_OP_deref)), !dbg !10238
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10247
  %17 = icmp slt i32 %16, 0, !dbg !10248
  br i1 %17, label %18, label %21, !dbg !10249

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !10250
  %20 = zext i8 %19 to i32, !dbg !10250
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.138, i32 0, i32 0), i32 noundef %20) #25, !dbg !10250
  br label %31, !dbg !10256

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10257
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10257
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10258
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10259
  %25 = load i32, i32* %3, align 4, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %25, metadata !10237, metadata !DIExpression()), !dbg !10238
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10261
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10262
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10262
  %28 = load volatile i32, i32* %27, align 4, !dbg !10262
  %29 = icmp ugt i32 %28, 16, !dbg !10262
  br i1 %29, label %31, label %30, !dbg !10265

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.141, i32 0, i32 0), i32 noundef 190) #25, !dbg !10266
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.142, i32 0, i32 0)) #25, !dbg !10266
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.141, i32 0, i32 0), i32 noundef 190) #25, !dbg !10266
  unreachable, !dbg !10266

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10268
  ret void, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10271, metadata !DIExpression()), !dbg !10272
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10273
  %3 = load volatile i32, i32* %2, align 4, !dbg !10273
  %4 = or i32 %3, 8192, !dbg !10273
  store volatile i32 %4, i32* %2, align 4, !dbg !10273
  ret void, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10277, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i8* %1, metadata !10278, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32* %2, metadata !10279, metadata !DIExpression()), !dbg !10281
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10282
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10282
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10282
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10280, metadata !DIExpression()), !dbg !10281
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10283
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10283
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10285
  br i1 %9, label %12, label %10, !dbg !10286

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10287
  br label %12, !dbg !10288

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10281
  ret i32 %13, !dbg !10289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef %0) unnamed_addr #4 !dbg !10290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10292, metadata !DIExpression()), !dbg !10293
  %2 = icmp eq i32 %0, 2, !dbg !10294
  %3 = select i1 %2, i8 87, i8 63, !dbg !10294
  %4 = icmp eq i32 %0, 1, !dbg !10294
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10294
  ret i8 %5, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i32 0, metadata !10301, metadata !DIExpression()), !dbg !10302
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10303
  %3 = load volatile i32, i32* %2, align 4, !dbg !10303
  %4 = and i32 %3, -32769, !dbg !10303
  store volatile i32 %4, i32* %2, align 4, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10309, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %1, metadata !10310, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 0, metadata !10311, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %2, metadata !10312, metadata !DIExpression()), !dbg !10313
  %4 = zext i32 %1 to i64, !dbg !10314
  %5 = mul nuw nsw i64 %4, 25, !dbg !10314
  %6 = zext i32 %2 to i64, !dbg !10314
  %7 = shl nuw nsw i64 %6, 2, !dbg !10314
  %8 = udiv i64 %5, %7, !dbg !10314
  %9 = trunc i64 %8 to i32, !dbg !10314
  %10 = udiv i32 %9, 100, !dbg !10314
  %11 = shl nuw nsw i32 %10, 4, !dbg !10314
  %12 = mul i32 %10, -100, !dbg !10314
  %13 = add i32 %12, %9, !dbg !10314
  %14 = shl i32 %13, 4, !dbg !10314
  %15 = add i32 %14, 50, !dbg !10314
  %16 = udiv i32 %15, 100, !dbg !10314
  %17 = and i32 %16, 240, !dbg !10314
  %18 = add nuw nsw i32 %17, %11, !dbg !10314
  %19 = and i32 %16, 15, !dbg !10314
  %20 = and i32 %18, 65520, !dbg !10317
  %21 = or i32 %20, %19, !dbg !10317
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10318
  store volatile i32 %21, i32* %22, align 4, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %1, metadata !10324, metadata !DIExpression()), !dbg !10325
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10326
  %4 = load volatile i32, i32* %3, align 4, !dbg !10326
  %5 = and i32 %4, -769, !dbg !10326
  %6 = or i32 %5, %1, !dbg !10326
  store volatile i32 %6, i32* %3, align 4, !dbg !10326
  ret void, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10330, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %1, metadata !10331, metadata !DIExpression()), !dbg !10332
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10333
  %4 = load volatile i32, i32* %3, align 4, !dbg !10333
  %5 = and i32 %4, -4097, !dbg !10333
  %6 = or i32 %5, %1, !dbg !10333
  store volatile i32 %6, i32* %3, align 4, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10335 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10337, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.value(metadata i32 %1, metadata !10338, metadata !DIExpression()), !dbg !10339
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10340
  %4 = load volatile i32, i32* %3, align 4, !dbg !10340
  %5 = and i32 %4, -12289, !dbg !10340
  %6 = or i32 %5, %1, !dbg !10340
  store volatile i32 %6, i32* %3, align 4, !dbg !10340
  ret void, !dbg !10341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10345, metadata !DIExpression()), !dbg !10346
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10347
  %4 = load volatile i32, i32* %3, align 4, !dbg !10347
  %5 = and i32 %4, -1537, !dbg !10347
  %6 = or i32 %5, %1, !dbg !10347
  store volatile i32 %6, i32* %3, align 4, !dbg !10347
  ret void, !dbg !10348
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10351, metadata !DIExpression()), !dbg !10352
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10353
  %3 = load volatile i32, i32* %2, align 4, !dbg !10353
  %4 = lshr i32 %3, 3, !dbg !10354
  %5 = and i32 %4, 1, !dbg !10354
  ret i32 %5, !dbg !10355
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10360
  %3 = load volatile i32, i32* %2, align 4, !dbg !10360
  %4 = and i32 %3, 1, !dbg !10360
  ret i32 %4, !dbg !10361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10365
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10366
  %3 = load volatile i32, i32* %2, align 4, !dbg !10366
  %4 = lshr i32 %3, 1, !dbg !10367
  %5 = and i32 %4, 1, !dbg !10367
  ret i32 %5, !dbg !10368
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10373
  %3 = load volatile i32, i32* %2, align 4, !dbg !10373
  %4 = lshr i32 %3, 8, !dbg !10374
  %5 = and i32 %4, 1, !dbg !10374
  ret i32 %5, !dbg !10375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10380
  store volatile i32 -257, i32* %2, align 4, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10382 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10384, metadata !DIExpression()), !dbg !10386
  %3 = bitcast i32* %2 to i8*, !dbg !10387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10385, metadata !DIExpression()), !dbg !10388
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10389
  %5 = load volatile i32, i32* %4, align 4, !dbg !10389
  store volatile i32 %5, i32* %2, align 4, !dbg !10390
  %6 = load volatile i32, i32* %2, align 4, !dbg !10391
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10392
  %8 = load volatile i32, i32* %7, align 4, !dbg !10392
  store volatile i32 %8, i32* %2, align 4, !dbg !10393
  %9 = load volatile i32, i32* %2, align 4, !dbg !10394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10395
  ret void, !dbg !10395
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10396 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10398, metadata !DIExpression()), !dbg !10400
  %3 = bitcast i32* %2 to i8*, !dbg !10401
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10401
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10399, metadata !DIExpression()), !dbg !10402
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10403
  %5 = load volatile i32, i32* %4, align 4, !dbg !10403
  store volatile i32 %5, i32* %2, align 4, !dbg !10404
  %6 = load volatile i32, i32* %2, align 4, !dbg !10405
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10406
  %8 = load volatile i32, i32* %7, align 4, !dbg !10406
  store volatile i32 %8, i32* %2, align 4, !dbg !10407
  %9 = load volatile i32, i32* %2, align 4, !dbg !10408
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10409
  ret void, !dbg !10409
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10410 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10412, metadata !DIExpression()), !dbg !10414
  %3 = bitcast i32* %2 to i8*, !dbg !10415
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10415
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10413, metadata !DIExpression()), !dbg !10416
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10417
  %5 = load volatile i32, i32* %4, align 4, !dbg !10417
  store volatile i32 %5, i32* %2, align 4, !dbg !10418
  %6 = load volatile i32, i32* %2, align 4, !dbg !10419
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10420
  %8 = load volatile i32, i32* %7, align 4, !dbg !10420
  store volatile i32 %8, i32* %2, align 4, !dbg !10421
  %9 = load volatile i32, i32* %2, align 4, !dbg !10422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10423
  ret void, !dbg !10423
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10424 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10426, metadata !DIExpression()), !dbg !10428
  %3 = bitcast i32* %2 to i8*, !dbg !10429
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10429
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10427, metadata !DIExpression()), !dbg !10430
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10431
  %5 = load volatile i32, i32* %4, align 4, !dbg !10431
  store volatile i32 %5, i32* %2, align 4, !dbg !10432
  %6 = load volatile i32, i32* %2, align 4, !dbg !10433
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10434
  %8 = load volatile i32, i32* %7, align 4, !dbg !10434
  store volatile i32 %8, i32* %2, align 4, !dbg !10435
  %9 = load volatile i32, i32* %2, align 4, !dbg !10436
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10437
  ret void, !dbg !10437
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10438 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10440, metadata !DIExpression()), !dbg !10441
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10442
  %3 = load volatile i32, i32* %2, align 4, !dbg !10442
  %4 = lshr i32 %3, 7, !dbg !10443
  %5 = and i32 %4, 1, !dbg !10443
  ret i32 %5, !dbg !10444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10445 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10449, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i8 %1, metadata !10450, metadata !DIExpression()), !dbg !10451
  %3 = zext i8 %1 to i32, !dbg !10452
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10453
  store volatile i32 %3, i32* %4, align 4, !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10458, metadata !DIExpression()), !dbg !10459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10460
  %3 = load volatile i32, i32* %2, align 4, !dbg !10460
  %4 = lshr i32 %3, 5, !dbg !10461
  %5 = and i32 %4, 1, !dbg !10461
  ret i32 %5, !dbg !10462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10467, metadata !DIExpression()), !dbg !10468
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10469
  %3 = load volatile i32, i32* %2, align 4, !dbg !10469
  %4 = trunc i32 %3 to i8, !dbg !10470
  ret i8 %4, !dbg !10471
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10474, metadata !DIExpression()), !dbg !10480
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10481
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10481
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10481
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10475, metadata !DIExpression()), !dbg !10480
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10482
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10482
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10476, metadata !DIExpression()), !dbg !10480
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10483
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10484
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10484
  %10 = tail call fastcc zeroext i1 @device_is_ready.144(%struct.device* noundef %9) #24, !dbg !10486
  br i1 %10, label %14, label %11, !dbg !10487

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !10488
  %13 = zext i8 %12 to i32, !dbg !10488
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.145, i32 0, i32 0), i32 noundef %13) #25, !dbg !10488
  br label %62, !dbg !10494

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10495
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10496
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10496
  %18 = load i8*, i8** %17, align 4, !dbg !10496
  %19 = tail call fastcc i32 @clock_control_on.146(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10497
  call void @llvm.dbg.value(metadata i32 %19, metadata !10479, metadata !DIExpression()), !dbg !10480
  %20 = icmp eq i32 %19, 0, !dbg !10498
  br i1 %20, label %24, label %21, !dbg !10500

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 1) #24, !dbg !10501
  %23 = zext i8 %22 to i32, !dbg !10501
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.147, i32 0, i32 0), i32 noundef %23) #25, !dbg !10501
  br label %62, !dbg !10507

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10508
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10508
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %27, metadata !10479, metadata !DIExpression()), !dbg !10480
  %28 = icmp slt i32 %27, 0, !dbg !10510
  br i1 %28, label %62, label %29, !dbg !10512

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10513
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10513
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10514
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10515
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10516
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10517
  %34 = load i32, i32* %33, align 4, !dbg !10517
  %35 = icmp ult i32 %34, 3, !dbg !10519
  br i1 %35, label %39, label %36, !dbg !10519

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.137(i32 noundef 2) #24, !dbg !10520
  %38 = zext i8 %37 to i32, !dbg !10520
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.148, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10520
  call void @llvm.dbg.value(metadata i32 0, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10478, metadata !DIExpression()), !dbg !10480
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10519
  %41 = load i32, i32* %40, align 4, !dbg !10519
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10519
  %43 = load i32, i32* %42, align 4, !dbg !10519
  br label %44, !dbg !10519

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10529
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10529
  call void @llvm.dbg.value(metadata i32 %46, metadata !10478, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %45, metadata !10477, metadata !DIExpression()), !dbg !10480
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10530
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10531
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10532
  %49 = load i8, i8* %48, align 4, !dbg !10532, !range !6777
  %50 = icmp eq i8 %49, 0, !dbg !10532
  br i1 %50, label %52, label %51, !dbg !10534

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10535
  br label %52, !dbg !10537

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10538
  %54 = load i32, i32* %53, align 4, !dbg !10538
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10539
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10540
  %56 = load i8, i8* %55, align 4, !dbg !10540, !range !6777
  %57 = icmp eq i8 %56, 0, !dbg !10540
  br i1 %57, label %60, label %58, !dbg !10542

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10543
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10545
  br label %60, !dbg !10546

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10547
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10548
  br label %62, !dbg !10549

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10480
  ret i32 %63, !dbg !10550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10555, metadata !DIExpression()), !dbg !10559
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10560
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10560
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10560
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10556, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10557, metadata !DIExpression()), !dbg !10559
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10561
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10562
  ret void, !dbg !10563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.144(%struct.device* noundef %0) unnamed_addr #1 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10570, !srcloc !10572
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.149(%struct.device* noundef %0) #24, !dbg !10573
  ret i1 %2, !dbg !10574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.146(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10577, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8* %1, metadata !10578, metadata !DIExpression()), !dbg !10580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10581
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10581
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10581
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10579, metadata !DIExpression()), !dbg !10580
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10582
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10582
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10583
  ret i32 %8, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10585 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10589, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i8 0, metadata !10590, metadata !DIExpression()), !dbg !10593
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10594
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10594
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10592, metadata !DIExpression(DW_OP_deref)), !dbg !10593
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %4, metadata !10591, metadata !DIExpression()), !dbg !10593
  %5 = icmp slt i32 %4, 0, !dbg !10596
  br i1 %5, label %9, label %6, !dbg !10598

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10592, metadata !DIExpression()), !dbg !10593
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10600
  br label %9, !dbg !10601

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10593
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10602
  ret i32 %10, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10603 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10605, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 12, metadata !10606, metadata !DIExpression()), !dbg !10609
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10610

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10611, metadata !DIExpression()) #23, !dbg !10617
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10620, !srcloc !10621
  call void @llvm.dbg.value(metadata i32 %4, metadata !10616, metadata !DIExpression()) #23, !dbg !10617
  %5 = or i32 %4, 12, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %5, metadata !10607, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i32 %5, metadata !10624, metadata !DIExpression()) #23, !dbg !10631
  call void @llvm.dbg.value(metadata i32* %2, metadata !10629, metadata !DIExpression()) #23, !dbg !10631
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10633, !srcloc !10634
  call void @llvm.dbg.value(metadata i32 %6, metadata !10630, metadata !DIExpression()) #23, !dbg !10631
  %7 = icmp eq i32 %6, 0, !dbg !10610
  br i1 %7, label %8, label %3, !dbg !10622, !llvm.loop !10635

8:                                                ; preds = %3
  ret void, !dbg !10636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10637 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10639, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 %1, metadata !10640, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 %2, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10644
  %5 = load volatile i32, i32* %4, align 4, !dbg !10644
  %6 = and i32 %5, -5633, !dbg !10644
  %7 = or i32 %2, %1, !dbg !10644
  %8 = or i32 %7, %6, !dbg !10644
  store volatile i32 %8, i32* %4, align 4, !dbg !10644
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10645
  %10 = load volatile i32, i32* %9, align 4, !dbg !10645
  %11 = and i32 %10, -12289, !dbg !10645
  store volatile i32 %11, i32* %9, align 4, !dbg !10645
  ret void, !dbg !10646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10647 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10649, metadata !DIExpression()), !dbg !10650
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10651
  %3 = load volatile i32, i32* %2, align 4, !dbg !10651
  %4 = or i32 %3, 8, !dbg !10651
  store volatile i32 %4, i32* %2, align 4, !dbg !10651
  ret void, !dbg !10652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10653 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10657, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10658, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata i32 0, metadata !10659, metadata !DIExpression()), !dbg !10660
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10661
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10661
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10662
  %5 = load i8, i8* %4, align 4, !dbg !10662
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10663
  ret i32 %6, !dbg !10664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.149(%struct.device* noundef %0) unnamed_addr #1 !dbg !10665 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10667, metadata !DIExpression()), !dbg !10668
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10669
  ret i1 %2, !dbg !10670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10673, metadata !DIExpression()), !dbg !10674
  tail call fastcc void @__NVIC_SetPriority.151() #24, !dbg !10675
  store i32 16799, i32* @last_load, align 4, !dbg !10676
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10677
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10678
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10679
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10680
  %3 = or i32 %2, 7, !dbg !10680
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10680
  ret i32 0, !dbg !10681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.151() unnamed_addr #14 !dbg !10682 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10684, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 1, metadata !10685, metadata !DIExpression()), !dbg !10686
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10687
  ret void, !dbg !10690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10693, metadata !DIExpression()), !dbg !10695
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10696
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10697
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10698
  %5 = add i32 %4, %3, !dbg !10698
  store i32 %5, i32* @cycle_count, align 4, !dbg !10698
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10699
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10700
  %7 = sub i32 %5, %6, !dbg !10703
  %8 = udiv i32 %7, 16800, !dbg !10704
  call void @llvm.dbg.value(metadata i32 %8, metadata !10694, metadata !DIExpression()), !dbg !10695
  %9 = mul nuw i32 %8, 16800, !dbg !10705
  %10 = add i32 %9, %6, !dbg !10706
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10706
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10707
  tail call void @z_arm_int_exit() #25, !dbg !10708
  ret void, !dbg !10709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10710 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10715
  call void @llvm.dbg.value(metadata i32 %1, metadata !10712, metadata !DIExpression()), !dbg !10716
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %2, metadata !10713, metadata !DIExpression()), !dbg !10716
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %3, metadata !10714, metadata !DIExpression()), !dbg !10716
  %4 = and i32 %2, 65536, !dbg !10719
  %5 = icmp ne i32 %4, 0, !dbg !10719
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10721
  %8 = load i32, i32* @last_load, align 4, !dbg !10716
  br i1 %7, label %9, label %13, !dbg !10721

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10722
  %11 = add i32 %10, %8, !dbg !10722
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10722
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10724
  br label %13, !dbg !10725

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10726
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10727
  %16 = add i32 %14, %15, !dbg !10728
  ret i32 %16, !dbg !10729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10734, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i1 %1, metadata !10735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10747
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10748
  br i1 %4, label %5, label %8, !dbg !10748

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  %7 = and i32 %6, -2, !dbg !10750
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  store i32 -16777216, i32* @last_load, align 4, !dbg !10752
  br label %60, !dbg !10753

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %9, metadata !10739, metadata !DIExpression()), !dbg !10747
  br i1 %3, label %18, label %10, !dbg !10755

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10755
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()), !dbg !10747
  %12 = icmp slt i32 %11, 1, !dbg !10756
  br i1 %12, label %18, label %13, !dbg !10756

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10756
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10756
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10756
  %17 = add nuw nsw i32 %16, 16799, !dbg !10756
  br label %18, !dbg !10756

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10757, metadata !DIExpression()) #23, !dbg !10764
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10766, !srcloc !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 undef, metadata !10770, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10764
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10774
  br i1 %21, label %23, label %22, !dbg !10777

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 148) #25, !dbg !10778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.155, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 148) #25, !dbg !10778
  unreachable, !dbg !10778

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %24, metadata !10769, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %24, metadata !10763, metadata !DIExpression()) #23, !dbg !10764
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10780
  call void @llvm.dbg.value(metadata i32 %24, metadata !10740, metadata !DIExpression()), !dbg !10747
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %25, metadata !10745, metadata !DIExpression()), !dbg !10747
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %26, metadata !10737, metadata !DIExpression()), !dbg !10747
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10783
  %28 = add i32 %27, %25, !dbg !10783
  store i32 %28, i32* @cycle_count, align 4, !dbg !10783
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10784
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10785
  %30 = sub i32 %28, %29, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %30, metadata !10746, metadata !DIExpression()), !dbg !10747
  %31 = icmp slt i32 %30, 0, !dbg !10787
  br i1 %31, label %41, label %32, !dbg !10789

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()), !dbg !10747
  %33 = add nuw i32 %19, %30, !dbg !10790
  %34 = urem i32 %33, 16800, !dbg !10792
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10736, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10747
  %35 = sub nuw nsw i32 %19, %34, !dbg !10793
  call void @llvm.dbg.value(metadata i32 %35, metadata !10736, metadata !DIExpression()), !dbg !10747
  %36 = icmp ugt i32 %35, 1050, !dbg !10794
  br i1 %36, label %37, label %39, !dbg !10794

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10736, metadata !DIExpression()), !dbg !10747
  %38 = icmp ugt i32 %35, 16749600, !dbg !10795
  br i1 %38, label %41, label %39, !dbg !10797

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10798
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %43, metadata !10738, metadata !DIExpression()), !dbg !10747
  %44 = add nsw i32 %42, -1, !dbg !10800
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10801
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10802
  %45 = icmp ult i32 %26, %43, !dbg !10803
  br i1 %45, label %46, label %51, !dbg !10805

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10806
  %48 = add i32 %26, %9, !dbg !10808
  %49 = sub i32 %48, %43, !dbg !10809
  %50 = add i32 %49, %47, !dbg !10806
  br label %55, !dbg !10810

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10811
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10813
  %54 = add i32 %52, %53, !dbg !10813
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10814
  store i32 %56, i32* @cycle_count, align 4, !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10820, metadata !DIExpression()) #23, !dbg !10821
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10823
  br i1 %57, label %59, label %58, !dbg !10826

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 194) #25, !dbg !10827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.157, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 194) #25, !dbg !10827
  unreachable, !dbg !10827

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10815, metadata !DIExpression()) #23, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %24, metadata !10829, metadata !DIExpression()) #23, !dbg !10832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10834, !srcloc !10835
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10837 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10757, metadata !DIExpression()) #23, !dbg !10841
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10843, !srcloc !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 undef, metadata !10770, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10841
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10846
  br i1 %2, label %4, label %3, !dbg !10847

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 148) #25, !dbg !10848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.155, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 148) #25, !dbg !10848
  unreachable, !dbg !10848

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10841
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()), !dbg !10850
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10851
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10852
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10853
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10840, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10820, metadata !DIExpression()) #23, !dbg !10854
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10856
  br i1 %8, label %10, label %9, !dbg !10857

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 194) #25, !dbg !10858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.157, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 194) #25, !dbg !10858
  unreachable, !dbg !10858

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10859
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10840, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10850
  %12 = sub i32 %11, %7, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %12, metadata !10840, metadata !DIExpression()), !dbg !10850
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %13, metadata !10769, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %13, metadata !10763, metadata !DIExpression()) #23, !dbg !10841
  call void @llvm.dbg.value(metadata i32 %13, metadata !10839, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10861
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10863, !srcloc !10835
  %14 = udiv i32 %12, 16800, !dbg !10864
  ret i32 %14, !dbg !10865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10866 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10757, metadata !DIExpression()) #23, !dbg !10870
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10872, !srcloc !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10770, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10870
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10875
  br i1 %2, label %4, label %3, !dbg !10876

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 148) #25, !dbg !10877
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.155, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10877
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 148) #25, !dbg !10877
  unreachable, !dbg !10877

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10870
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10868, metadata !DIExpression()), !dbg !10879
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10880
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10869, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10820, metadata !DIExpression()) #23, !dbg !10882
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10884
  br i1 %7, label %9, label %8, !dbg !10885

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 194) #25, !dbg !10886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.157, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 194) #25, !dbg !10886
  unreachable, !dbg !10886

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %10, metadata !10869, metadata !DIExpression()), !dbg !10879
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %11, metadata !10769, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %11, metadata !10763, metadata !DIExpression()) #23, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %11, metadata !10868, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10888
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10890, !srcloc !10835
  ret i32 %10, !dbg !10891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10892 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10893
  %2 = icmp eq i32 %1, -16777216, !dbg !10895
  br i1 %2, label %3, label %6, !dbg !10896

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10897
  %5 = or i32 %4, 1, !dbg !10897
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10897
  br label %6, !dbg !10899

6:                                                ; preds = %3, %0
  ret void, !dbg !10900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10901 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10902
  %2 = and i32 %1, -2, !dbg !10902
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10902
  ret void, !dbg !10903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10930, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8 %1, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10932, metadata !DIExpression()), !dbg !10933
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10934
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10934
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10933
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10935
  %8 = load i8, i8* %6, align 4, !dbg !10936
  %9 = zext i8 %8 to i32, !dbg !10937
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10937
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10938
  br i1 %11, label %18, label %24, !dbg !10939

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10933
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10935
  %14 = load i8, i8* %6, align 4, !dbg !10936
  %15 = zext i8 %14 to i32, !dbg !10937
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10937
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10938
  br i1 %17, label %18, label %24, !dbg !10939, !llvm.loop !10940

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10942
  %21 = load i8, i8* %20, align 1, !dbg !10942
  %22 = icmp eq i8 %21, %1, !dbg !10945
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10946
  br i1 %22, label %24, label %12, !dbg !10947

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10933
  ret i32 %25, !dbg !10948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10960, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 %1, metadata !10961, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %2, metadata !10962, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10965, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10966, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 0, metadata !10967, metadata !DIExpression()), !dbg !10977
  %4 = icmp eq i8 %1, 0, !dbg !10978
  br i1 %4, label %35, label %5, !dbg !10979

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10978
  br label %9, !dbg !10979

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10967, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.value(metadata i32 %29, metadata !10965, metadata !DIExpression()), !dbg !10976
  %8 = icmp eq i32 %34, %6, !dbg !10978
  br i1 %8, label %35, label %9, !dbg !10979, !llvm.loop !10980

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10967, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.value(metadata i32 %11, metadata !10965, metadata !DIExpression()), !dbg !10976
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10982
  %13 = load i32, i32* %12, align 4, !dbg !10982
  call void @llvm.dbg.value(metadata i32 %13, metadata !10964, metadata !DIExpression()), !dbg !10976
  %14 = and i32 %13, 31, !dbg !10983
  %15 = icmp ult i32 %14, 16, !dbg !10984
  br i1 %15, label %16, label %20, !dbg !10985

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10986
  %18 = load i32, i32* %17, align 4, !dbg !10986
  %19 = or i32 %18, 32, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %19, metadata !10965, metadata !DIExpression()), !dbg !10976
  br label %28, !dbg !10989

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10990

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10991
  %23 = load i32, i32* %22, align 4, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %23, metadata !10969, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10992
  %24 = lshr i32 %23, 7, !dbg !10993
  %25 = and i32 %24, 16, !dbg !10993
  %26 = or i32 %25, %23, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %26, metadata !10965, metadata !DIExpression()), !dbg !10976
  br label %28, !dbg !10994

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10976
  call void @llvm.dbg.value(metadata i32 %29, metadata !10965, metadata !DIExpression()), !dbg !10976
  %30 = lshr i32 %13, 5, !dbg !10995
  %31 = and i32 %30, 255, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %31, metadata !10963, metadata !DIExpression()), !dbg !10976
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %32, metadata !10966, metadata !DIExpression()), !dbg !10976
  %33 = icmp slt i32 %32, 0, !dbg !10997
  %34 = add nuw nsw i32 %10, 1, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %34, metadata !10967, metadata !DIExpression()), !dbg !10977
  br i1 %33, label %35, label %7, !dbg !11000

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11006, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %1, metadata !11007, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %2, metadata !11008, metadata !DIExpression()), !dbg !11010
  %4 = icmp ugt i32 %0, 175, !dbg !11011
  br i1 %4, label %16, label %5, !dbg !11013

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11014
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11015
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11015
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11009, metadata !DIExpression()), !dbg !11010
  %9 = add nsw i32 %6, -9, !dbg !11016
  %10 = icmp ult i32 %9, 2, !dbg !11016
  br i1 %10, label %16, label %11, !dbg !11018

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.162(%struct.device* noundef %8) #24, !dbg !11019
  br i1 %12, label %13, label %16, !dbg !11020

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11021
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11022
  br label %16, !dbg !11023

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11010
  ret i32 %17, !dbg !11024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.162(%struct.device* noundef %0) unnamed_addr #1 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11029, metadata !DIExpression()), !dbg !11030
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11031, !srcloc !11033
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.163(%struct.device* noundef %0) #24, !dbg !11034
  ret i1 %2, !dbg !11035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.163(%struct.device* noundef %0) unnamed_addr #1 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11038, metadata !DIExpression()), !dbg !11039
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11040
  ret i1 %2, !dbg !11041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11042 {
  ret void, !dbg !11043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11044 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11046, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 0, metadata !11047, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 2, metadata !11048, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 0, metadata !11049, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 2, metadata !11050, metadata !DIExpression()), !dbg !11051
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11052
  %2 = and i32 %1, 12, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %2, metadata !11046, metadata !DIExpression()), !dbg !11051
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11054

3:                                                ; preds = %0
  br label %21, !dbg !11055

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %5, metadata !11049, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11051
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11058
  %7 = and i32 %6, 63, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %7, metadata !11050, metadata !DIExpression()), !dbg !11051
  %8 = and i32 %5, 4194304, !dbg !11060
  %9 = icmp eq i32 %8, 0, !dbg !11060
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !11062
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11062
  %13 = lshr i32 %12, 6, !dbg !11062
  %14 = and i32 %13, 511, !dbg !11062
  %15 = mul i32 %14, %11, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %15, metadata !11047, metadata !DIExpression()), !dbg !11051
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11063
  %17 = lshr i32 %16, 15, !dbg !11064
  %18 = and i32 %17, 6, !dbg !11064
  %19 = add nuw nsw i32 %18, 2, !dbg !11064
  call void @llvm.dbg.value(metadata i32 %19, metadata !11048, metadata !DIExpression()), !dbg !11051
  %20 = udiv i32 %15, %19, !dbg !11065
  br label %21, !dbg !11066

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11067
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11068
  %24 = lshr i32 %23, 4, !dbg !11069
  %25 = and i32 %24, 15, !dbg !11069
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11070
  %27 = load i8, i8* %26, align 1, !dbg !11070
  %28 = zext i8 %27 to i32, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %28, metadata !11046, metadata !DIExpression()), !dbg !11051
  %29 = lshr i32 %22, %28, !dbg !11071
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11071
  ret void, !dbg !11072
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11073 {
  ret i32 0, !dbg !11078
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11079 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11105, metadata !DIExpression()), !dbg !11116
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11117
  br i1 %3, label %311, label %4, !dbg !11119

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11120
  %6 = load i32, i32* %5, align 4, !dbg !11120
  %7 = and i32 %6, 1, !dbg !11122
  %8 = icmp eq i32 %7, 0, !dbg !11123
  br i1 %8, label %66, label %9, !dbg !11124

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11125
  %11 = and i32 %10, 12, !dbg !11125
  %12 = icmp eq i32 %11, 4, !dbg !11128
  br i1 %12, label %21, label %13, !dbg !11129

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11130
  %15 = and i32 %14, 12, !dbg !11130
  %16 = icmp eq i32 %15, 8, !dbg !11131
  br i1 %16, label %17, label %29, !dbg !11132

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11133
  %19 = and i32 %18, 4194304, !dbg !11134
  %20 = icmp eq i32 %19, 0, !dbg !11135
  br i1 %20, label %29, label %21, !dbg !11136

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11137
  %23 = and i32 %22, 131072, !dbg !11137
  %24 = icmp eq i32 %23, 0, !dbg !11137
  br i1 %24, label %66, label %25, !dbg !11140

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11141
  %27 = load i32, i32* %26, align 4, !dbg !11141
  %28 = icmp eq i32 %27, 0, !dbg !11142
  br i1 %28, label %311, label %66, !dbg !11143

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11144
  %31 = load i32, i32* %30, align 4, !dbg !11144
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11148

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11149
  %34 = or i32 %33, 65536, !dbg !11149
  br label %45, !dbg !11149

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11151
  %37 = or i32 %36, 262144, !dbg !11151
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11151
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11151
  %39 = or i32 %38, 65536, !dbg !11151
  br label %45, !dbg !11151

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %42 = and i32 %41, -65537, !dbg !11154
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %44 = and i32 %43, -262145, !dbg !11154
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11156
  %47 = load i32, i32* %30, align 4, !dbg !11157
  %48 = icmp eq i32 %47, 0, !dbg !11159
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11160
  call void @llvm.dbg.value(metadata i32 %49, metadata !11106, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i32 %49, metadata !11106, metadata !DIExpression()), !dbg !11116
  br i1 %48, label %58, label %50, !dbg !11161

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11162
  %52 = and i32 %51, 131072, !dbg !11164
  %53 = icmp eq i32 %52, 0, !dbg !11164
  br i1 %53, label %54, label %66, !dbg !11165

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11166
  %56 = sub i32 %55, %49, !dbg !11169
  %57 = icmp ugt i32 %56, 100, !dbg !11170
  br i1 %57, label %311, label %50, !dbg !11171, !llvm.loop !11172

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11174
  %60 = and i32 %59, 131072, !dbg !11174
  %61 = icmp eq i32 %60, 0, !dbg !11174
  br i1 %61, label %66, label %62, !dbg !11176

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11177
  %64 = sub i32 %63, %49, !dbg !11180
  %65 = icmp ugt i32 %64, 100, !dbg !11181
  br i1 %65, label %311, label %58, !dbg !11182, !llvm.loop !11183

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11185
  %68 = and i32 %67, 2, !dbg !11187
  %69 = icmp eq i32 %68, 0, !dbg !11188
  br i1 %69, label %121, label %70, !dbg !11189

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11190
  %72 = and i32 %71, 12, !dbg !11190
  %73 = icmp eq i32 %72, 0, !dbg !11193
  br i1 %73, label %82, label %74, !dbg !11194

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11195
  %76 = and i32 %75, 12, !dbg !11195
  %77 = icmp eq i32 %76, 8, !dbg !11196
  br i1 %77, label %78, label %90, !dbg !11197

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11198
  %80 = and i32 %79, 4194304, !dbg !11199
  %81 = icmp eq i32 %80, 0, !dbg !11200
  br i1 %81, label %82, label %90, !dbg !11201

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11202
  %84 = and i32 %83, 2, !dbg !11202
  %85 = icmp eq i32 %84, 0, !dbg !11202
  br i1 %85, label %114, label %86, !dbg !11205

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11206
  %88 = load i32, i32* %87, align 4, !dbg !11206
  %89 = icmp eq i32 %88, 1, !dbg !11207
  br i1 %89, label %114, label %311, !dbg !11208

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11209
  %92 = load i32, i32* %91, align 4, !dbg !11209
  %93 = icmp eq i32 %92, 0, !dbg !11212
  br i1 %93, label %104, label %94, !dbg !11213

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11214
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11216
  call void @llvm.dbg.value(metadata i32 %95, metadata !11106, metadata !DIExpression()), !dbg !11116
  br label %96, !dbg !11217

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11218
  %98 = and i32 %97, 2, !dbg !11219
  %99 = icmp eq i32 %98, 0, !dbg !11219
  br i1 %99, label %100, label %114, !dbg !11217

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11220
  %102 = sub i32 %101, %95, !dbg !11223
  %103 = icmp ugt i32 %102, 2, !dbg !11224
  br i1 %103, label %311, label %96, !dbg !11225, !llvm.loop !11226

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11228
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %105, metadata !11106, metadata !DIExpression()), !dbg !11116
  br label %106, !dbg !11231

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11232
  %108 = and i32 %107, 2, !dbg !11232
  %109 = icmp eq i32 %108, 0, !dbg !11232
  br i1 %109, label %121, label %110, !dbg !11231

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11233
  %112 = sub i32 %111, %105, !dbg !11236
  %113 = icmp ugt i32 %112, 2, !dbg !11237
  br i1 %113, label %311, label %106, !dbg !11238, !llvm.loop !11239

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11241
  %116 = and i32 %115, -249, !dbg !11241
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11241
  %118 = load i32, i32* %117, align 4, !dbg !11241
  %119 = shl i32 %118, 3, !dbg !11241
  %120 = or i32 %119, %116, !dbg !11241
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11241
  br label %121, !dbg !11242

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11242
  %123 = and i32 %122, 8, !dbg !11244
  %124 = icmp eq i32 %123, 0, !dbg !11245
  br i1 %124, label %149, label %125, !dbg !11246

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11247
  %127 = load i32, i32* %126, align 4, !dbg !11247
  %128 = icmp eq i32 %127, 0, !dbg !11250
  br i1 %128, label %139, label %129, !dbg !11251

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11252
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11254
  call void @llvm.dbg.value(metadata i32 %130, metadata !11106, metadata !DIExpression()), !dbg !11116
  br label %131, !dbg !11255

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11256
  %133 = and i32 %132, 2, !dbg !11257
  %134 = icmp eq i32 %133, 0, !dbg !11257
  br i1 %134, label %135, label %149, !dbg !11255

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11258
  %137 = sub i32 %136, %130, !dbg !11261
  %138 = icmp ugt i32 %137, 2, !dbg !11262
  br i1 %138, label %311, label %131, !dbg !11263, !llvm.loop !11264

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11266
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11268
  call void @llvm.dbg.value(metadata i32 %140, metadata !11106, metadata !DIExpression()), !dbg !11116
  br label %141, !dbg !11269

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11270
  %143 = and i32 %142, 2, !dbg !11270
  %144 = icmp eq i32 %143, 0, !dbg !11270
  br i1 %144, label %149, label %145, !dbg !11269

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11271
  %147 = sub i32 %146, %140, !dbg !11274
  %148 = icmp ugt i32 %147, 2, !dbg !11275
  br i1 %148, label %311, label %141, !dbg !11276, !llvm.loop !11277

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11279
  %151 = and i32 %150, 4, !dbg !11280
  %152 = icmp eq i32 %151, 0, !dbg !11281
  br i1 %152, label %221, label %153, !dbg !11282

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11108, metadata !DIExpression()), !dbg !11283
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11284
  %155 = and i32 %154, 268435456, !dbg !11284
  %156 = icmp eq i32 %155, 0, !dbg !11284
  br i1 %156, label %157, label %164, !dbg !11285

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11286
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11112, metadata !DIExpression()), !dbg !11286
  store volatile i32 0, i32* %2, align 4, !dbg !11286
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11286
  %160 = or i32 %159, 268435456, !dbg !11286
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11286
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11286
  %162 = and i32 %161, 268435456, !dbg !11286
  store volatile i32 %162, i32* %2, align 4, !dbg !11286
  %163 = load volatile i32, i32* %2, align 4, !dbg !11286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11287
  call void @llvm.dbg.value(metadata i32 1, metadata !11108, metadata !DIExpression()), !dbg !11283
  br label %164, !dbg !11288

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11108, metadata !DIExpression()), !dbg !11283
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11289
  %166 = and i32 %165, 256, !dbg !11289
  %167 = icmp eq i32 %166, 0, !dbg !11289
  br i1 %167, label %168, label %180, !dbg !11291

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11292
  %170 = or i32 %169, 256, !dbg !11292
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11292
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11294
  call void @llvm.dbg.value(metadata i32 %171, metadata !11106, metadata !DIExpression()), !dbg !11116
  br label %172, !dbg !11295

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11296
  %174 = and i32 %173, 256, !dbg !11296
  %175 = icmp eq i32 %174, 0, !dbg !11296
  br i1 %175, label %176, label %180, !dbg !11295

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11297
  %178 = sub i32 %177, %171, !dbg !11300
  %179 = icmp ugt i32 %178, 2, !dbg !11301
  br i1 %179, label %311, label %172, !dbg !11302, !llvm.loop !11303

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11305
  %182 = load i32, i32* %181, align 4, !dbg !11305
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11308

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11309
  %185 = or i32 %184, 1, !dbg !11309
  br label %196, !dbg !11309

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11311
  %188 = or i32 %187, 4, !dbg !11311
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11311
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11311
  %190 = or i32 %189, 1, !dbg !11311
  br label %196, !dbg !11311

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %193 = and i32 %192, -2, !dbg !11314
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %195 = and i32 %194, -5, !dbg !11314
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11316
  %198 = load i32, i32* %181, align 4, !dbg !11317
  %199 = icmp eq i32 %198, 0, !dbg !11319
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11320
  call void @llvm.dbg.value(metadata i32 %200, metadata !11106, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i32 %200, metadata !11106, metadata !DIExpression()), !dbg !11116
  br i1 %199, label %209, label %201, !dbg !11321

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11322
  %203 = and i32 %202, 2, !dbg !11324
  %204 = icmp eq i32 %203, 0, !dbg !11324
  br i1 %204, label %205, label %217, !dbg !11325

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11326
  %207 = sub i32 %206, %200, !dbg !11329
  %208 = icmp ugt i32 %207, 5000, !dbg !11330
  br i1 %208, label %311, label %201, !dbg !11331, !llvm.loop !11332

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11334
  %211 = and i32 %210, 2, !dbg !11334
  %212 = icmp eq i32 %211, 0, !dbg !11334
  br i1 %212, label %217, label %213, !dbg !11336

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11337
  %215 = sub i32 %214, %200, !dbg !11340
  %216 = icmp ugt i32 %215, 5000, !dbg !11341
  br i1 %216, label %311, label %209, !dbg !11342, !llvm.loop !11343

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11345

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11346
  %220 = and i32 %219, -268435457, !dbg !11346
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11346
  br label %221, !dbg !11349

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11350
  %223 = load i32, i32* %222, align 4, !dbg !11350
  %224 = icmp eq i32 %223, 0, !dbg !11352
  br i1 %224, label %310, label %225, !dbg !11353

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11354
  %227 = and i32 %226, 12, !dbg !11354
  %228 = icmp eq i32 %227, 8, !dbg !11357
  br i1 %228, label %277, label %229, !dbg !11358

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11359
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11362
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11362
  call void @llvm.dbg.value(metadata i32 %231, metadata !11106, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i32 %231, metadata !11106, metadata !DIExpression()), !dbg !11116
  br i1 %230, label %232, label %269, !dbg !11363

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11364
  %234 = and i32 %233, 33554432, !dbg !11364
  %235 = icmp eq i32 %234, 0, !dbg !11364
  br i1 %235, label %240, label %236, !dbg !11366

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11367
  %238 = sub i32 %237, %231, !dbg !11370
  %239 = icmp ugt i32 %238, 2, !dbg !11371
  br i1 %239, label %311, label %232, !dbg !11372, !llvm.loop !11373

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11375
  %242 = load i32, i32* %241, align 4, !dbg !11375
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11375
  %244 = load i32, i32* %243, align 4, !dbg !11375
  %245 = or i32 %244, %242, !dbg !11375
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11375
  %247 = load i32, i32* %246, align 4, !dbg !11375
  %248 = shl i32 %247, 6, !dbg !11375
  %249 = or i32 %245, %248, !dbg !11375
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11375
  %251 = load i32, i32* %250, align 4, !dbg !11375
  %252 = shl i32 %251, 15, !dbg !11375
  %253 = add i32 %252, -65536, !dbg !11375
  %254 = and i32 %253, -65536, !dbg !11375
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11375
  %256 = load i32, i32* %255, align 4, !dbg !11375
  %257 = shl i32 %256, 24, !dbg !11375
  %258 = or i32 %249, %257, !dbg !11375
  %259 = or i32 %258, %254, !dbg !11375
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11375
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11376
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11377
  call void @llvm.dbg.value(metadata i32 %260, metadata !11106, metadata !DIExpression()), !dbg !11116
  br label %261, !dbg !11378

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11379
  %263 = and i32 %262, 33554432, !dbg !11380
  %264 = icmp eq i32 %263, 0, !dbg !11380
  br i1 %264, label %265, label %310, !dbg !11378

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11381
  %267 = sub i32 %266, %260, !dbg !11384
  %268 = icmp ugt i32 %267, 2, !dbg !11385
  br i1 %268, label %311, label %261, !dbg !11386, !llvm.loop !11387

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11389
  %271 = and i32 %270, 33554432, !dbg !11389
  %272 = icmp eq i32 %271, 0, !dbg !11389
  br i1 %272, label %310, label %273, !dbg !11391

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11392
  %275 = sub i32 %274, %231, !dbg !11395
  %276 = icmp ugt i32 %275, 2, !dbg !11396
  br i1 %276, label %311, label %269, !dbg !11397, !llvm.loop !11398

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11400
  br i1 %278, label %311, label %279, !dbg !11403

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %280, metadata !11107, metadata !DIExpression()), !dbg !11116
  %281 = and i32 %280, 4194304, !dbg !11406
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11408
  %283 = load i32, i32* %282, align 4, !dbg !11408
  %284 = icmp eq i32 %281, %283, !dbg !11409
  br i1 %284, label %285, label %311, !dbg !11410

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11411
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11412
  %288 = load i32, i32* %287, align 4, !dbg !11412
  %289 = icmp eq i32 %286, %288, !dbg !11413
  br i1 %289, label %290, label %311, !dbg !11414

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11415
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11416
  %293 = load i32, i32* %292, align 4, !dbg !11416
  %294 = shl i32 %293, 6, !dbg !11417
  %295 = icmp eq i32 %291, %294, !dbg !11418
  br i1 %295, label %296, label %311, !dbg !11419

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11420
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11421
  %299 = load i32, i32* %298, align 4, !dbg !11421
  %300 = shl i32 %299, 15, !dbg !11422
  %301 = add i32 %300, -65536, !dbg !11422
  %302 = and i32 %301, -65536, !dbg !11422
  %303 = icmp eq i32 %297, %302, !dbg !11423
  br i1 %303, label %304, label %311, !dbg !11424

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11425
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11426
  %307 = load i32, i32* %306, align 4, !dbg !11426
  %308 = shl i32 %307, 24, !dbg !11427
  %309 = icmp eq i32 %305, %308, !dbg !11428
  br i1 %309, label %310, label %311, !dbg !11429

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11430

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11116
  ret i32 %312, !dbg !11431
}

; Function Attrs: optsize
declare !dbg !11432 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11434 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11447, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 %1, metadata !11448, metadata !DIExpression()), !dbg !11450
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11451
  br i1 %3, label %115, label %4, !dbg !11453

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11454
  %6 = and i32 %5, 7, !dbg !11454
  %7 = icmp ult i32 %6, %1, !dbg !11456
  br i1 %7, label %8, label %13, !dbg !11457

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11458
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11458
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11460
  %11 = and i32 %10, 7, !dbg !11460
  %12 = icmp eq i32 %11, %1, !dbg !11462
  br i1 %12, label %13, label %115, !dbg !11463

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11464
  %15 = load i32, i32* %14, align 4, !dbg !11464
  %16 = and i32 %15, 2, !dbg !11466
  %17 = icmp eq i32 %16, 0, !dbg !11467
  br i1 %17, label %39, label %18, !dbg !11468

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11469
  %20 = icmp eq i32 %19, 0, !dbg !11472
  br i1 %20, label %25, label %21, !dbg !11473

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11474
  %23 = or i32 %22, 7168, !dbg !11474
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11474
  %24 = load i32, i32* %14, align 4, !dbg !11476
  br label %25, !dbg !11478

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11476
  %27 = and i32 %26, 8, !dbg !11479
  %28 = icmp eq i32 %27, 0, !dbg !11480
  br i1 %28, label %32, label %29, !dbg !11481

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11482
  %31 = or i32 %30, 57344, !dbg !11482
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11482
  br label %32, !dbg !11484

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11485
  %34 = and i32 %33, -241, !dbg !11485
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11485
  %36 = load i32, i32* %35, align 4, !dbg !11485
  %37 = or i32 %34, %36, !dbg !11485
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11485
  %38 = load i32, i32* %14, align 4, !dbg !11486
  br label %39, !dbg !11488

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11486
  %41 = and i32 %40, 1, !dbg !11489
  %42 = icmp eq i32 %41, 0, !dbg !11490
  br i1 %42, label %73, label %43, !dbg !11491

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11492
  %45 = load i32, i32* %44, align 4, !dbg !11492
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11495

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11496
  %48 = and i32 %47, 131072, !dbg !11499
  %49 = icmp eq i32 %48, 0, !dbg !11499
  br i1 %49, label %115, label %58, !dbg !11500

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11501
  %52 = and i32 %51, 33554432, !dbg !11505
  %53 = icmp eq i32 %52, 0, !dbg !11505
  br i1 %53, label %115, label %58, !dbg !11506

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11507
  %56 = and i32 %55, 2, !dbg !11510
  %57 = icmp eq i32 %56, 0, !dbg !11510
  br i1 %57, label %115, label %58, !dbg !11511

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11512
  %60 = and i32 %59, -4, !dbg !11512
  %61 = or i32 %60, %45, !dbg !11512
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11512
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %62, metadata !11449, metadata !DIExpression()), !dbg !11450
  br label %63, !dbg !11514

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11515
  %65 = and i32 %64, 12, !dbg !11515
  %66 = load i32, i32* %44, align 4, !dbg !11516
  %67 = shl i32 %66, 2, !dbg !11517
  %68 = icmp eq i32 %65, %67, !dbg !11518
  br i1 %68, label %73, label %69, !dbg !11514

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11519
  %71 = sub i32 %70, %62, !dbg !11522
  %72 = icmp ugt i32 %71, 5000, !dbg !11523
  br i1 %72, label %115, label %63, !dbg !11524, !llvm.loop !11525

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11527
  %75 = and i32 %74, 7, !dbg !11527
  %76 = icmp ugt i32 %75, %1, !dbg !11529
  br i1 %76, label %77, label %82, !dbg !11530

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11531
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11531
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11533
  %80 = and i32 %79, 7, !dbg !11533
  %81 = icmp eq i32 %80, %1, !dbg !11535
  br i1 %81, label %82, label %115, !dbg !11536

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11537
  %84 = and i32 %83, 4, !dbg !11539
  %85 = icmp eq i32 %84, 0, !dbg !11540
  br i1 %85, label %93, label %86, !dbg !11541

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11542
  %88 = and i32 %87, -7169, !dbg !11542
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11542
  %90 = load i32, i32* %89, align 4, !dbg !11542
  %91 = or i32 %88, %90, !dbg !11542
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11542
  %92 = load i32, i32* %14, align 4, !dbg !11544
  br label %93, !dbg !11546

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11544
  %95 = and i32 %94, 8, !dbg !11547
  %96 = icmp eq i32 %95, 0, !dbg !11548
  br i1 %96, label %104, label %97, !dbg !11549

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11550
  %99 = and i32 %98, -57345, !dbg !11550
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11550
  %101 = load i32, i32* %100, align 4, !dbg !11550
  %102 = shl i32 %101, 3, !dbg !11550
  %103 = or i32 %102, %99, !dbg !11550
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11550
  br label %104, !dbg !11552

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11553
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11554
  %107 = lshr i32 %106, 4, !dbg !11555
  %108 = and i32 %107, 15, !dbg !11555
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11556
  %110 = load i8, i8* %109, align 1, !dbg !11556
  %111 = zext i8 %110 to i32, !dbg !11556
  %112 = lshr i32 %105, %111, !dbg !11557
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11558
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11559
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11560
  br label %115, !dbg !11561

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11450
  ret i32 %116, !dbg !11562
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11563 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11565, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i32 0, metadata !11566, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i32 0, metadata !11567, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i32 0, metadata !11568, metadata !DIExpression()), !dbg !11569
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11570
  %2 = and i32 %1, 12, !dbg !11571
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11572

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !11568, metadata !DIExpression()), !dbg !11569
  br label %24, !dbg !11573

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11576
  %6 = and i32 %5, 63, !dbg !11578
  call void @llvm.dbg.value(metadata i32 %6, metadata !11565, metadata !DIExpression()), !dbg !11569
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11579
  %8 = and i32 %7, 4194304, !dbg !11579
  %9 = icmp eq i32 %8, 0, !dbg !11581
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11582
  %11 = lshr i32 %10, 6, !dbg !11582
  %12 = and i32 %11, 511, !dbg !11582
  %13 = zext i32 %12 to i64, !dbg !11582
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11582
  %16 = zext i32 %6 to i64, !dbg !11582
  %17 = udiv i64 %15, %16, !dbg !11582
  %18 = trunc i64 %17 to i32, !dbg !11582
  call void @llvm.dbg.value(metadata i32 %18, metadata !11566, metadata !DIExpression()), !dbg !11569
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11583
  %20 = lshr i32 %19, 15, !dbg !11584
  %21 = and i32 %20, 6, !dbg !11584
  %22 = add nuw nsw i32 %21, 2, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %22, metadata !11567, metadata !DIExpression()), !dbg !11569
  %23 = udiv i32 %18, %22, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %23, metadata !11568, metadata !DIExpression()), !dbg !11569
  br label %24, !dbg !11586

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !11587
  call void @llvm.dbg.value(metadata i32 %25, metadata !11568, metadata !DIExpression()), !dbg !11569
  ret i32 %25, !dbg !11588
}

; Function Attrs: optsize
declare !dbg !11589 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11592 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11596, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 %1, metadata !11597, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 %2, metadata !11598, metadata !DIExpression()), !dbg !11616
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11617
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11617
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11599, metadata !DIExpression()), !dbg !11618
  %8 = icmp eq i32 %0, 0, !dbg !11619
  br i1 %8, label %9, label %23, !dbg !11620

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11621
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11621
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11609, metadata !DIExpression()), !dbg !11621
  store volatile i32 0, i32* %5, align 4, !dbg !11621
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11621
  %12 = or i32 %11, 1, !dbg !11621
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11621
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11621
  %14 = and i32 %13, 1, !dbg !11621
  store volatile i32 %14, i32* %5, align 4, !dbg !11621
  %15 = load volatile i32, i32* %5, align 4, !dbg !11621
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11622
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11623
  store i32 256, i32* %16, align 4, !dbg !11624
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11625
  store i32 2, i32* %17, align 4, !dbg !11626
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11627
  store i32 3, i32* %18, align 4, !dbg !11628
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11629
  store i32 0, i32* %19, align 4, !dbg !11630
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11631
  store i32 0, i32* %20, align 4, !dbg !11632
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11633
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11634
  %22 = and i32 %21, -123731969, !dbg !11634
  br label %38, !dbg !11635

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11636
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11636
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11613, metadata !DIExpression()), !dbg !11636
  store volatile i32 0, i32* %6, align 4, !dbg !11636
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11636
  %26 = or i32 %25, 4, !dbg !11636
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11636
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11636
  %28 = and i32 %27, 4, !dbg !11636
  store volatile i32 %28, i32* %6, align 4, !dbg !11636
  %29 = load volatile i32, i32* %6, align 4, !dbg !11636
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11637
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11638
  store i32 512, i32* %30, align 4, !dbg !11639
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11640
  store i32 2, i32* %31, align 4, !dbg !11641
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11642
  store i32 3, i32* %32, align 4, !dbg !11643
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11644
  store i32 0, i32* %33, align 4, !dbg !11645
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11646
  store i32 0, i32* %34, align 4, !dbg !11647
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11648
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11649
  %36 = and i32 %35, 134217727, !dbg !11649
  %37 = shl i32 %2, 3, !dbg !11649
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11650
  %42 = or i32 %41, %40, !dbg !11650
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11650
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11651
  ret void, !dbg !11651
}

; Function Attrs: optsize
declare !dbg !11652 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11656 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11657
  ret void, !dbg !11658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11659 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11660
  ret void, !dbg !11661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11662 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11663
  ret i32 %1, !dbg !11664
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11665 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11666
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11667
  %3 = lshr i32 %2, 10, !dbg !11668
  %4 = and i32 %3, 7, !dbg !11668
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11669
  %6 = load i8, i8* %5, align 1, !dbg !11669
  %7 = zext i8 %6 to i32, !dbg !11669
  %8 = lshr i32 %1, %7, !dbg !11670
  ret i32 %8, !dbg !11671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11672 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11673
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11674
  %3 = lshr i32 %2, 13, !dbg !11675
  %4 = and i32 %3, 7, !dbg !11675
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11676
  %6 = load i8, i8* %5, align 1, !dbg !11676
  %7 = zext i8 %6 to i32, !dbg !11676
  %8 = lshr i32 %1, %7, !dbg !11677
  ret i32 %8, !dbg !11678
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11679 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11683, metadata !DIExpression()), !dbg !11684
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11685
  store i32 15, i32* %2, align 4, !dbg !11686
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11687
  %4 = and i32 %3, 262144, !dbg !11689
  %5 = icmp eq i32 %4, 0, !dbg !11690
  br i1 %5, label %8, label %6, !dbg !11691

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11692
  store i32 327680, i32* %7, align 4, !dbg !11694
  br label %15, !dbg !11695

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11696
  %10 = and i32 %9, 65536, !dbg !11698
  %11 = icmp eq i32 %10, 0, !dbg !11699
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11700
  br i1 %11, label %14, label %13, !dbg !11701

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11702
  br label %15, !dbg !11704

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11705
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11707
  %17 = and i32 %16, 1, !dbg !11709
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11710
  store i32 %17, i32* %18, align 4, !dbg !11712
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11713
  %20 = lshr i32 %19, 3, !dbg !11714
  %21 = and i32 %20, 31, !dbg !11714
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11715
  store i32 %21, i32* %22, align 4, !dbg !11716
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11717
  %24 = and i32 %23, 4, !dbg !11719
  %25 = icmp eq i32 %24, 0, !dbg !11720
  br i1 %25, label %28, label %26, !dbg !11721

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11722
  store i32 5, i32* %27, align 4, !dbg !11724
  br label %35, !dbg !11725

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11726
  %30 = and i32 %29, 1, !dbg !11728
  %31 = icmp eq i32 %30, 0, !dbg !11729
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11730
  br i1 %31, label %34, label %33, !dbg !11731

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11732
  br label %35, !dbg !11734

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11735
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11737
  %37 = and i32 %36, 1, !dbg !11739
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11740
  store i32 %37, i32* %38, align 4, !dbg !11742
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11743
  %40 = and i32 %39, 16777216, !dbg !11745
  %41 = icmp eq i32 %40, 0, !dbg !11746
  %42 = select i1 %41, i32 1, i32 2, !dbg !11747
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11748
  store i32 %42, i32* %43, align 4, !dbg !11750
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11751
  %45 = and i32 %44, 4194304, !dbg !11752
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11753
  store i32 %45, i32* %46, align 4, !dbg !11754
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11755
  %48 = and i32 %47, 63, !dbg !11756
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11757
  store i32 %48, i32* %49, align 4, !dbg !11758
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11759
  %51 = lshr i32 %50, 6, !dbg !11760
  %52 = and i32 %51, 511, !dbg !11760
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11761
  store i32 %52, i32* %53, align 4, !dbg !11762
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11763
  %55 = shl i32 %54, 1, !dbg !11764
  %56 = and i32 %55, 393216, !dbg !11764
  %57 = add nuw nsw i32 %56, 131072, !dbg !11764
  %58 = lshr exact i32 %57, 16, !dbg !11765
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11766
  store i32 %58, i32* %59, align 4, !dbg !11767
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11768
  %61 = lshr i32 %60, 24, !dbg !11769
  %62 = and i32 %61, 15, !dbg !11769
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11770
  store i32 %62, i32* %63, align 4, !dbg !11771
  ret void, !dbg !11772
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11773 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11777, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32* %1, metadata !11778, metadata !DIExpression()), !dbg !11779
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11780
  store i32 15, i32* %3, align 4, !dbg !11781
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11782
  %5 = and i32 %4, 3, !dbg !11783
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11784
  store i32 %5, i32* %6, align 4, !dbg !11785
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11786
  %8 = and i32 %7, 240, !dbg !11787
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11788
  store i32 %8, i32* %9, align 4, !dbg !11789
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11790
  %11 = and i32 %10, 7168, !dbg !11791
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11792
  store i32 %11, i32* %12, align 4, !dbg !11793
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11794
  %14 = lshr i32 %13, 3, !dbg !11795
  %15 = and i32 %14, 7168, !dbg !11795
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11796
  store i32 %15, i32* %16, align 4, !dbg !11797
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11798
  %18 = and i32 %17, 7, !dbg !11799
  store i32 %18, i32* %1, align 4, !dbg !11800
  ret void, !dbg !11801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11802 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11803
  %2 = and i32 %1, 128, !dbg !11803
  %3 = icmp eq i32 %2, 0, !dbg !11803
  br i1 %3, label %5, label %4, !dbg !11805

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11806
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11808
  br label %5, !dbg !11809

5:                                                ; preds = %4, %0
  ret void, !dbg !11810
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11811 {
  ret void, !dbg !11812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11816, metadata !DIExpression()), !dbg !11817
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11818
  ret void, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11823, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 1000, metadata !11824, metadata !DIExpression()), !dbg !11825
  %2 = udiv i32 %0, 1000, !dbg !11826
  %3 = add nsw i32 %2, -1, !dbg !11827
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11828
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11829
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11830
  ret void, !dbg !11831
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11832 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11834, metadata !DIExpression()), !dbg !11836
  %3 = bitcast i32* %2 to i8*, !dbg !11837
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11837
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11835, metadata !DIExpression()), !dbg !11838
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11839
  store volatile i32 %4, i32* %2, align 4, !dbg !11838
  %5 = load volatile i32, i32* %2, align 4, !dbg !11840
  %6 = icmp eq i32 %0, -1, !dbg !11841
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11834, metadata !DIExpression()), !dbg !11836
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %8, metadata !11834, metadata !DIExpression()), !dbg !11836
  br label %9, !dbg !11843

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11834, metadata !DIExpression()), !dbg !11836
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11844
  call void @llvm.dbg.value(metadata i32 undef, metadata !11834, metadata !DIExpression()), !dbg !11836
  %12 = shl i32 %11, 15, !dbg !11836
  %13 = ashr i32 %12, 31, !dbg !11836
  %14 = add i32 %13, %10, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %14, metadata !11834, metadata !DIExpression()), !dbg !11836
  %15 = icmp eq i32 %14, 0, !dbg !11843
  br i1 %15, label %16, label %9, !dbg !11843

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11847
  ret void, !dbg !11847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11850, metadata !DIExpression()), !dbg !11851
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11852
  ret void, !dbg !11853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11859, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11862, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11863, metadata !DIExpression()), !dbg !11864
  %2 = icmp eq i32 %0, 0, !dbg !11865
  br i1 %2, label %52, label %3, !dbg !11867

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11868
  %5 = icmp eq i32 %4, 16384, !dbg !11871
  br i1 %5, label %6, label %21, !dbg !11872

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11873
  %8 = select i1 %7, i32 0, i32 5, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %8, metadata !11862, metadata !DIExpression()), !dbg !11864
  %9 = add i32 %0, -120000001, !dbg !11877
  %10 = icmp ult i32 %9, 30000000, !dbg !11877
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %11, metadata !11862, metadata !DIExpression()), !dbg !11864
  %12 = icmp ult i32 %9, -30000000, !dbg !11879
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %13, metadata !11862, metadata !DIExpression()), !dbg !11864
  %14 = icmp ugt i32 %0, 60000000, !dbg !11881
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11883
  br i1 %16, label %21, label %17, !dbg !11883

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11884
  %19 = and i1 %18, %15, !dbg !11887
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11887
  br label %21, !dbg !11887

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11864
  call void @llvm.dbg.value(metadata i32 %22, metadata !11862, metadata !DIExpression()), !dbg !11864
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11888
  %24 = icmp eq i32 %23, 0, !dbg !11890
  br i1 %24, label %25, label %41, !dbg !11891

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !11892
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11895
  %29 = select i1 %28, i32 4, i32 %22, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %29, metadata !11862, metadata !DIExpression()), !dbg !11864
  %30 = icmp ugt i32 %0, 90000000, !dbg !11896
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11898
  %33 = select i1 %32, i32 3, i32 %29, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %33, metadata !11862, metadata !DIExpression()), !dbg !11864
  %34 = icmp ugt i32 %0, 60000000, !dbg !11899
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11901
  br i1 %36, label %41, label %37, !dbg !11901

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !11902
  %39 = and i1 %38, %35, !dbg !11905
  %40 = select i1 %39, i32 1, i32 %33, !dbg !11905
  br label %41, !dbg !11905

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !11906
  call void @llvm.dbg.value(metadata i32 %42, metadata !11862, metadata !DIExpression()), !dbg !11864
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #24, !dbg !11907
  call void @llvm.dbg.value(metadata i32 2, metadata !11860, metadata !DIExpression()), !dbg !11864
  br label %43, !dbg !11908

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !11906
  call void @llvm.dbg.value(metadata i32 %44, metadata !11860, metadata !DIExpression()), !dbg !11864
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %45, metadata !11861, metadata !DIExpression()), !dbg !11864
  %46 = add nsw i32 %44, -1, !dbg !11911
  call void @llvm.dbg.value(metadata i32 %46, metadata !11860, metadata !DIExpression()), !dbg !11864
  %47 = icmp ne i32 %45, %42, !dbg !11912
  %48 = icmp ne i32 %46, 0, !dbg !11913
  %49 = select i1 %47, i1 %48, i1 false, !dbg !11913
  br i1 %49, label %43, label %50, !dbg !11914, !llvm.loop !11915

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !11917
  call void @llvm.dbg.value(metadata i32 %53, metadata !11863, metadata !DIExpression()), !dbg !11864
  ret i32 %53, !dbg !11918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11919 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11921
  %2 = and i32 %1, 16384, !dbg !11921
  ret i32 %2, !dbg !11922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11925, metadata !DIExpression()), !dbg !11926
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11927
  %3 = and i32 %2, -8, !dbg !11927
  %4 = or i32 %3, %0, !dbg !11927
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11927
  ret void, !dbg !11928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11930
  %2 = and i32 %1, 7, !dbg !11930
  ret i32 %2, !dbg !11931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11932 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11950, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11951, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 0, metadata !11952, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 0, metadata !11953, metadata !DIExpression()), !dbg !11954
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11955
  %4 = icmp eq i32 %3, 0, !dbg !11957
  br i1 %4, label %5, label %21, !dbg !11958

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %6, metadata !11953, metadata !DIExpression()), !dbg !11954
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.172() #24, !dbg !11961
  %8 = icmp eq i32 %7, 1, !dbg !11963
  br i1 %8, label %13, label %9, !dbg !11964

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.173() #24, !dbg !11965
  br label %10, !dbg !11967

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.172() #24, !dbg !11968
  %12 = icmp eq i32 %11, 1, !dbg !11969
  br i1 %12, label %13, label %10, !dbg !11967, !llvm.loop !11970

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11972
  %15 = load i32, i32* %14, align 4, !dbg !11972
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11973
  %17 = load i32, i32* %16, align 4, !dbg !11973
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11974
  %19 = load i32, i32* %18, align 4, !dbg !11974
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.174(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11975
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %20, metadata !11952, metadata !DIExpression()), !dbg !11954
  br label %21, !dbg !11977

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11978
  call void @llvm.dbg.value(metadata i32 %22, metadata !11952, metadata !DIExpression()), !dbg !11954
  ret i32 %22, !dbg !11979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11980 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11984, metadata !DIExpression()), !dbg !11985
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.176() #24, !dbg !11986
  %2 = icmp ne i32 %1, 0, !dbg !11988
  call void @llvm.dbg.value(metadata i1 %2, metadata !11984, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11985
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11989
  %4 = icmp ne i32 %3, 0, !dbg !11991
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11992
  %6 = zext i1 %5 to i32, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %6, metadata !11984, metadata !DIExpression()), !dbg !11985
  ret i32 %6, !dbg !11993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11998, metadata !DIExpression()), !dbg !12001
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11999, metadata !DIExpression()), !dbg !12001
  call void @llvm.dbg.value(metadata i32 0, metadata !12000, metadata !DIExpression()), !dbg !12001
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12002
  %4 = load i32, i32* %3, align 4, !dbg !12002
  %5 = and i32 %4, 63, !dbg !12003
  %6 = udiv i32 %0, %5, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %6, metadata !12000, metadata !DIExpression()), !dbg !12001
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12005
  %8 = load i32, i32* %7, align 4, !dbg !12005
  %9 = and i32 %8, 511, !dbg !12006
  %10 = mul i32 %9, %6, !dbg !12007
  call void @llvm.dbg.value(metadata i32 %10, metadata !12000, metadata !DIExpression()), !dbg !12001
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12008
  %12 = load i32, i32* %11, align 4, !dbg !12008
  %13 = lshr i32 %12, 15, !dbg !12009
  %14 = and i32 %13, 131070, !dbg !12009
  %15 = add nuw nsw i32 %14, 2, !dbg !12009
  %16 = udiv i32 %10, %15, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %16, metadata !12000, metadata !DIExpression()), !dbg !12001
  ret i32 %16, !dbg !12011
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.172() unnamed_addr #15 !dbg !12012 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12013
  %2 = lshr i32 %1, 1, !dbg !12014
  %3 = and i32 %2, 1, !dbg !12014
  ret i32 %3, !dbg !12015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.173() unnamed_addr #14 !dbg !12016 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12017
  %2 = or i32 %1, 1, !dbg !12017
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12017
  ret void, !dbg !12018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.174(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12021, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 %1, metadata !12022, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 %2, metadata !12023, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 %3, metadata !12024, metadata !DIExpression()), !dbg !12025
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12026
  %6 = and i32 %5, -4227072, !dbg !12026
  %7 = or i32 %1, %0, !dbg !12026
  %8 = shl i32 %2, 6, !dbg !12026
  %9 = or i32 %7, %8, !dbg !12026
  %10 = or i32 %9, %6, !dbg !12026
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12026
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12027
  %12 = and i32 %11, -196609, !dbg !12027
  %13 = or i32 %12, %3, !dbg !12027
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12027
  ret void, !dbg !12028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12033, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12034, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 0, metadata !12035, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 0, metadata !12036, metadata !DIExpression()), !dbg !12037
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12038
  %4 = load i32, i32* %3, align 4, !dbg !12038
  %5 = lshr i32 %4, 4, !dbg !12038
  %6 = and i32 %5, 15, !dbg !12038
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12038
  %8 = load i8, i8* %7, align 1, !dbg !12038
  %9 = zext i8 %8 to i32, !dbg !12038
  %10 = lshr i32 %0, %9, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %10, metadata !12036, metadata !DIExpression()), !dbg !12037
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12039
  %12 = icmp ult i32 %11, %10, !dbg !12041
  br i1 %12, label %13, label %16, !dbg !12042

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12043
  call void @llvm.dbg.value(metadata i32 %14, metadata !12035, metadata !DIExpression()), !dbg !12037
  %15 = icmp eq i32 %14, 0, !dbg !12045
  br i1 %15, label %16, label %30, !dbg !12047

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.175() #24, !dbg !12048
  br label %17, !dbg !12050

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.176() #24, !dbg !12051
  %19 = icmp eq i32 %18, 1, !dbg !12052
  br i1 %19, label %20, label %17, !dbg !12050, !llvm.loop !12053

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12055
  tail call fastcc void @LL_RCC_SetAHBPrescaler.177(i32 noundef %21) #24, !dbg !12056
  tail call fastcc void @LL_RCC_SetSysClkSource.178() #24, !dbg !12057
  br label %22, !dbg !12058

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.179() #24, !dbg !12059
  %24 = icmp eq i32 %23, 8, !dbg !12060
  br i1 %24, label %25, label %22, !dbg !12058, !llvm.loop !12061

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12063
  %27 = load i32, i32* %26, align 4, !dbg !12063
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.180(i32 noundef %27) #24, !dbg !12064
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12065
  %29 = load i32, i32* %28, align 4, !dbg !12065
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.181(i32 noundef %29) #24, !dbg !12066
  br label %30, !dbg !12067

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12068
  %33 = icmp ugt i32 %32, %10, !dbg !12070
  br i1 %33, label %34, label %36, !dbg !12071

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12072
  call void @llvm.dbg.value(metadata i32 %35, metadata !12035, metadata !DIExpression()), !dbg !12037
  br label %36, !dbg !12074

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12037
  call void @llvm.dbg.value(metadata i32 %37, metadata !12035, metadata !DIExpression()), !dbg !12037
  %38 = icmp eq i32 %37, 0, !dbg !12075
  br i1 %38, label %39, label %40, !dbg !12077

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12078
  br label %40, !dbg !12080

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.175() unnamed_addr #14 !dbg !12082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12083
  %2 = or i32 %1, 16777216, !dbg !12083
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12083
  ret void, !dbg !12084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.176() unnamed_addr #15 !dbg !12085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12086
  %2 = lshr i32 %1, 25, !dbg !12087
  %3 = and i32 %2, 1, !dbg !12087
  ret i32 %3, !dbg !12088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.177(i32 noundef %0) unnamed_addr #14 !dbg !12089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12091, metadata !DIExpression()), !dbg !12092
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12093
  %3 = and i32 %2, -241, !dbg !12093
  %4 = or i32 %3, %0, !dbg !12093
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12093
  ret void, !dbg !12094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.178() unnamed_addr #14 !dbg !12095 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12097, metadata !DIExpression()), !dbg !12098
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12099
  %2 = and i32 %1, -4, !dbg !12099
  %3 = or i32 %2, 2, !dbg !12099
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12099
  ret void, !dbg !12100
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.179() unnamed_addr #15 !dbg !12101 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12102
  %2 = and i32 %1, 12, !dbg !12102
  ret i32 %2, !dbg !12103
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.180(i32 noundef %0) unnamed_addr #14 !dbg !12104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12106, metadata !DIExpression()), !dbg !12107
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12108
  %3 = and i32 %2, -7169, !dbg !12108
  %4 = or i32 %3, %0, !dbg !12108
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12108
  ret void, !dbg !12109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.181(i32 noundef %0) unnamed_addr #14 !dbg !12110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12112, metadata !DIExpression()), !dbg !12113
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12114
  %3 = and i32 %2, -57345, !dbg !12114
  %4 = or i32 %3, %0, !dbg !12114
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12114
  ret void, !dbg !12115
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12116 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12117
  %2 = lshr i32 %1, 27, !dbg !12118
  %3 = and i32 %2, 1, !dbg !12118
  ret i32 %3, !dbg !12119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12124, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 %1, metadata !12125, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12126, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12127, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 0, metadata !12128, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata i32 0, metadata !12129, metadata !DIExpression()), !dbg !12130
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12131
  %6 = icmp eq i32 %5, 0, !dbg !12133
  br i1 %6, label %7, label %27, !dbg !12134

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %8, metadata !12129, metadata !DIExpression()), !dbg !12130
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.182() #24, !dbg !12137
  %10 = icmp eq i32 %9, 1, !dbg !12139
  br i1 %10, label %19, label %11, !dbg !12140

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12141
  br i1 %12, label %13, label %14, !dbg !12144

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12145
  br label %15, !dbg !12147

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.183() #24, !dbg !12148
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.184() #24, !dbg !12150
  br label %16, !dbg !12151

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.182() #24, !dbg !12152
  %18 = icmp eq i32 %17, 1, !dbg !12153
  br i1 %18, label %19, label %16, !dbg !12151, !llvm.loop !12154

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12156
  %21 = load i32, i32* %20, align 4, !dbg !12156
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12157
  %23 = load i32, i32* %22, align 4, !dbg !12157
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12158
  %25 = load i32, i32* %24, align 4, !dbg !12158
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.174(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12159
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %26, metadata !12128, metadata !DIExpression()), !dbg !12130
  br label %27, !dbg !12161

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12162
  call void @llvm.dbg.value(metadata i32 %28, metadata !12128, metadata !DIExpression()), !dbg !12130
  ret i32 %28, !dbg !12163
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.182() unnamed_addr #15 !dbg !12164 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12165
  %2 = lshr i32 %1, 17, !dbg !12166
  %3 = and i32 %2, 1, !dbg !12166
  ret i32 %3, !dbg !12167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12169
  %2 = or i32 %1, 262144, !dbg !12169
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12169
  ret void, !dbg !12170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.183() unnamed_addr #14 !dbg !12171 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12172
  %2 = and i32 %1, -262145, !dbg !12172
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12172
  ret void, !dbg !12173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.184() unnamed_addr #14 !dbg !12174 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %2 = or i32 %1, 65536, !dbg !12175
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  ret void, !dbg !12176
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12177 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12180, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12180, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12196
  ret void, !dbg !12197
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12202, metadata !DIExpression()), !dbg !12204
  %2 = icmp eq i8* %0, null, !dbg !12205
  br i1 %2, label %29, label %3, !dbg !12207

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12208
  %5 = icmp eq i8 %4, 0, !dbg !12209
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12210
  br i1 %6, label %29, label %8, !dbg !12210

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12203, metadata !DIExpression()), !dbg !12204
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12211

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12203, metadata !DIExpression()), !dbg !12204
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12213
  br i1 %10, label %11, label %15, !dbg !12218

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12219
  %13 = load i8*, i8** %12, align 4, !dbg !12219
  %14 = icmp eq i8* %13, %0, !dbg !12220
  br i1 %14, label %29, label %15, !dbg !12221

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12222
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12203, metadata !DIExpression()), !dbg !12204
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12223
  br i1 %17, label %7, label %8, !dbg !12224, !llvm.loop !12225

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12203, metadata !DIExpression()), !dbg !12204
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12227
  br i1 %20, label %21, label %26, !dbg !12231

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12232
  %23 = load i8*, i8** %22, align 4, !dbg !12232
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12233
  %25 = icmp eq i32 %24, 0, !dbg !12234
  br i1 %25, label %29, label %26, !dbg !12235

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12236
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12203, metadata !DIExpression()), !dbg !12204
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12237
  br i1 %28, label %29, label %18, !dbg !12211, !llvm.loop !12238

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12204
  ret %struct.device* %30, !dbg !12240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12245, metadata !DIExpression()), !dbg !12246
  %2 = icmp eq %struct.device* %0, null, !dbg !12247
  br i1 %2, label %14, label %3, !dbg !12249

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12250
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12250
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12251
  %7 = load i8, i8* %6, align 1, !dbg !12251
  %8 = and i8 %7, 1, !dbg !12251
  %9 = icmp eq i8 %8, 0, !dbg !12251
  br i1 %9, label %14, label %10, !dbg !12252

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12253
  %12 = load i8, i8* %11, align 1, !dbg !12253
  %13 = icmp eq i8 %12, 0, !dbg !12254
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12246
  ret i1 %15, !dbg !12255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12261, metadata !DIExpression()), !dbg !12262
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12263
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12265 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12273, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12274, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i8* %2, metadata !12275, metadata !DIExpression()), !dbg !12278
  %5 = bitcast i32* %4 to i8*, !dbg !12279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12279
  call void @llvm.dbg.value(metadata i32 0, metadata !12276, metadata !DIExpression()), !dbg !12278
  store i32 0, i32* %4, align 4, !dbg !12280
  call void @llvm.dbg.value(metadata i32* %4, metadata !12276, metadata !DIExpression(DW_OP_deref)), !dbg !12278
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12281
  call void @llvm.dbg.value(metadata i16* %6, metadata !12277, metadata !DIExpression()), !dbg !12278
  %7 = load i32, i32* %4, align 4, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %7, metadata !12276, metadata !DIExpression()), !dbg !12278
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12283
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12284
  ret i32 %8, !dbg !12285
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12290, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32* %1, metadata !12291, metadata !DIExpression()), !dbg !12296
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12297
  %4 = load i16*, i16** %3, align 4, !dbg !12297
  call void @llvm.dbg.value(metadata i16* %4, metadata !12292, metadata !DIExpression()), !dbg !12296
  %5 = icmp eq i16* %4, null, !dbg !12298
  br i1 %5, label %14, label %6, !dbg !12299

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12300
  call void @llvm.dbg.value(metadata i32 %7, metadata !12293, metadata !DIExpression()), !dbg !12300
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12301
  %9 = load i16, i16* %8, align 2, !dbg !12301
  %10 = add i16 %9, -32767, !dbg !12302
  %11 = icmp ult i16 %10, 2, !dbg !12302
  %12 = add i32 %7, 1, !dbg !12303
  call void @llvm.dbg.value(metadata i32 %12, metadata !12293, metadata !DIExpression()), !dbg !12300
  br i1 %11, label %13, label %6, !dbg !12302, !llvm.loop !12305

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12308
  br label %14, !dbg !12309

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12311 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12315, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i32 %1, metadata !12316, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12317, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i8* %3, metadata !12318, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i32 0, metadata !12319, metadata !DIExpression()), !dbg !12327
  %5 = icmp eq i32 %1, 0, !dbg !12328
  br i1 %5, label %16, label %8, !dbg !12329

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12319, metadata !DIExpression()), !dbg !12327
  %7 = icmp eq i32 %15, %1, !dbg !12328
  br i1 %7, label %16, label %8, !dbg !12329, !llvm.loop !12330

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12319, metadata !DIExpression()), !dbg !12327
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12332
  %11 = load i16, i16* %10, align 2, !dbg !12332
  call void @llvm.dbg.value(metadata i16 %11, metadata !12321, metadata !DIExpression()), !dbg !12333
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12334
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12324, metadata !DIExpression()), !dbg !12333
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12335
  call void @llvm.dbg.value(metadata i32 %13, metadata !12325, metadata !DIExpression()), !dbg !12333
  %14 = icmp slt i32 %13, 0, !dbg !12336
  %15 = add nuw i32 %9, 1, !dbg !12338
  call void @llvm.dbg.value(metadata i32 %15, metadata !12319, metadata !DIExpression()), !dbg !12327
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12340 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12344, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12345, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12346, metadata !DIExpression()), !dbg !12347
  %2 = sext i16 %0 to i32, !dbg !12348
  %3 = icmp slt i16 %0, 1, !dbg !12350
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12351
  %6 = add nsw i32 %2, -1, !dbg !12351
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12351
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12351
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12345, metadata !DIExpression()), !dbg !12347
  ret %struct.device* %8, !dbg !12352
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12353 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12355, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12356, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i8* %2, metadata !12357, metadata !DIExpression()), !dbg !12360
  %5 = bitcast i32* %4 to i8*, !dbg !12361
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12361
  call void @llvm.dbg.value(metadata i32 0, metadata !12358, metadata !DIExpression()), !dbg !12360
  store i32 0, i32* %4, align 4, !dbg !12362
  call void @llvm.dbg.value(metadata i32* %4, metadata !12358, metadata !DIExpression(DW_OP_deref)), !dbg !12360
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12363
  call void @llvm.dbg.value(metadata i16* %6, metadata !12359, metadata !DIExpression()), !dbg !12360
  %7 = load i32, i32* %4, align 4, !dbg !12364
  call void @llvm.dbg.value(metadata i32 %7, metadata !12358, metadata !DIExpression()), !dbg !12360
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12366
  ret i32 %8, !dbg !12367
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12370, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata i32* %1, metadata !12371, metadata !DIExpression()), !dbg !12375
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12376
  %4 = load i16*, i16** %3, align 4, !dbg !12376
  call void @llvm.dbg.value(metadata i16* %4, metadata !12372, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata i32 0, metadata !12373, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata i32 0, metadata !12374, metadata !DIExpression()), !dbg !12375
  %5 = icmp eq i16* %4, null, !dbg !12377
  br i1 %5, label %22, label %6, !dbg !12379

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12373, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata i16* %8, metadata !12372, metadata !DIExpression()), !dbg !12375
  %9 = load i16, i16* %8, align 2, !dbg !12380
  %10 = icmp eq i16 %9, -32768, !dbg !12384
  call void @llvm.dbg.value(metadata i32 undef, metadata !12373, metadata !DIExpression()), !dbg !12375
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12385
  call void @llvm.dbg.value(metadata i16* %11, metadata !12372, metadata !DIExpression()), !dbg !12375
  %12 = zext i1 %10 to i32, !dbg !12386
  %13 = add i32 %7, %12, !dbg !12386
  call void @llvm.dbg.value(metadata i32 %13, metadata !12373, metadata !DIExpression()), !dbg !12375
  %14 = icmp eq i32 %13, 2, !dbg !12387
  br i1 %14, label %15, label %6, !dbg !12388

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12375
  call void @llvm.dbg.value(metadata i32 %16, metadata !12374, metadata !DIExpression()), !dbg !12375
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12389
  %18 = load i16, i16* %17, align 2, !dbg !12389
  %19 = icmp eq i16 %18, 32767, !dbg !12390
  %20 = add i32 %16, 1, !dbg !12391
  call void @llvm.dbg.value(metadata i32 %20, metadata !12374, metadata !DIExpression()), !dbg !12375
  br i1 %19, label %21, label %15, !dbg !12393, !llvm.loop !12394

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12396
  br label %22, !dbg !12397

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12398
  call void @llvm.dbg.value(metadata i16* %23, metadata !12372, metadata !DIExpression()), !dbg !12375
  ret i16* %23, !dbg !12399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12400 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12403
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12404
  ret i32* %2, !dbg !12405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12406 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12557, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12558, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12559, metadata !DIExpression()), !dbg !12560
  ret void, !dbg !12561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12566, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.value(metadata i32 %1, metadata !12567, metadata !DIExpression()), !dbg !12568
  ret void, !dbg !12569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12574, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %1, metadata !12575, metadata !DIExpression()), !dbg !12576
  ret void, !dbg !12577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12582, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata i8* %1, metadata !12583, metadata !DIExpression()), !dbg !12584
  ret i32 -134, !dbg !12585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12590, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i8* %1, metadata !12591, metadata !DIExpression()), !dbg !12592
  ret i32 -134, !dbg !12593
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12597, metadata !DIExpression()), !dbg !12598
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12599, !srcloc !12605
  call void @llvm.dbg.value(metadata i32 undef, metadata !12602, metadata !DIExpression()) #23, !dbg !12606
  call void @llvm.dbg.value(metadata i32 undef, metadata !12603, metadata !DIExpression()) #23, !dbg !12606
  br label %3, !dbg !12607

3:                                                ; preds = %3, %1
  br label %3, !dbg !12608, !llvm.loop !12611
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12618, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12619, metadata !DIExpression()), !dbg !12620
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.189, i32 0, i32 0), i32 noundef 69) #25, !dbg !12621
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12626
  unreachable, !dbg !12626
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12629, metadata !DIExpression()), !dbg !12630
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12631
  unreachable, !dbg !12631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12634, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12635, metadata !DIExpression()), !dbg !12638
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12639, !srcloc !12605
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12639
  call void @llvm.dbg.value(metadata i32 %4, metadata !12602, metadata !DIExpression()) #23, !dbg !12641
  call void @llvm.dbg.value(metadata i32 undef, metadata !12603, metadata !DIExpression()) #23, !dbg !12641
  call void @llvm.dbg.value(metadata i32 %4, metadata !12636, metadata !DIExpression()), !dbg !12638
  %5 = tail call fastcc %struct.k_thread* @k_current_get.192() #26, !dbg !12642
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12637, metadata !DIExpression()), !dbg !12638
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12643
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.193, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12643
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12648
  br i1 %7, label %20, label %8, !dbg !12650

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12651, metadata !DIExpression()), !dbg !12656
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12658
  %10 = load i32, i32* %9, align 4, !dbg !12658
  %11 = and i32 %10, 511, !dbg !12659
  %12 = icmp eq i32 %11, 0, !dbg !12660
  br i1 %12, label %14, label %13, !dbg !12661

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 69) #25, !dbg !12662
  br label %14, !dbg !12668

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12669
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.195, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12669
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12674
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12651, metadata !DIExpression()), !dbg !12675
  %16 = load i32, i32* %9, align 4, !dbg !12680
  %17 = and i32 %16, 511, !dbg !12681
  %18 = icmp eq i32 %17, 0, !dbg !12682
  br i1 %18, label %22, label %19, !dbg !12683

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12684, metadata !DIExpression()) #23, !dbg !12687
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12690, !srcloc !12691
  br label %25, !dbg !12692

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12669
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.195, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12669
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12674
  br label %22, !dbg !12693

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %4, metadata !12684, metadata !DIExpression()) #23, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %4, metadata !12684, metadata !DIExpression()) #23, !dbg !12700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12638
  br i1 %23, label %25, label %24, !dbg !12702

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.196(%struct.k_thread* noundef %5) #24, !dbg !12703
  br label %25, !dbg !12706

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12706
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.192() unnamed_addr #11 !dbg !12707 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.204() #26, !dbg !12711
  ret %struct.k_thread* %1, !dbg !12712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !12713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12717, metadata !DIExpression()), !dbg !12718
  %2 = icmp ult i32 %0, 5, !dbg !12719
  br i1 %2, label %3, label %6, !dbg !12719

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12719
  %5 = load i8*, i8** %4, align 4, !dbg !12719
  br label %6, !dbg !12719

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.198, i32 0, i32 0), %1 ], !dbg !12720
  ret i8* %7, !dbg !12722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12723 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12727, metadata !DIExpression()), !dbg !12729
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12730
  br i1 %2, label %9, label %3, !dbg !12731

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12732
  call void @llvm.dbg.value(metadata i8* %4, metadata !12728, metadata !DIExpression()), !dbg !12729
  %5 = icmp eq i8* %4, null, !dbg !12733
  br i1 %5, label %9, label %6, !dbg !12735

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12736
  %8 = icmp eq i8 %7, 0, !dbg !12737
  br i1 %8, label %9, label %10, !dbg !12738

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.197, i32 0, i32 0), metadata !12728, metadata !DIExpression()), !dbg !12729
  br label %10, !dbg !12739

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.197, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12729
  call void @llvm.dbg.value(metadata i8* %11, metadata !12728, metadata !DIExpression()), !dbg !12729
  ret i8* %11, !dbg !12741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.196(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12746, metadata !DIExpression()), !dbg !12747
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12748, !srcloc !12750
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12751
  ret void, !dbg !12752
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.204() unnamed_addr #11 !dbg !12753 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12754, !srcloc !12756
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12757
  ret %struct.k_thread* %1, !dbg !12758
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12763, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.value(metadata i32 %1, metadata !12764, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.value(metadata i32 %2, metadata !12765, metadata !DIExpression()), !dbg !12766
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12767
  ret void, !dbg !12768
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12773, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.value(metadata i8* %1, metadata !12774, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.value(metadata i32 %2, metadata !12775, metadata !DIExpression()), !dbg !12776
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12777
  ret void, !dbg !12778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12779 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12780
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12785, metadata !DIExpression()), !dbg !12786
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12787
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12788
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12789
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12790
  %4 = trunc i32 %0 to i8, !dbg !12791
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12792
  store i8 %4, i8* %5, align 4, !dbg !12793
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12794
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12795
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12796
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12797
  store i8* %8, i8** %9, align 4, !dbg !12798
  ret void, !dbg !12799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12802, metadata !DIExpression()), !dbg !12808
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12809
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12803, metadata !DIExpression()), !dbg !12808
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12810
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12804, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.211, i32 0, i32 0), metadata !12807, metadata !DIExpression()), !dbg !12808
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12811
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12812
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.211, i32 0, i32 0)) #25, !dbg !12813
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12814
  ret void, !dbg !12815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12816 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12820, metadata !DIExpression()), !dbg !12821
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12822
  ret i8* %2, !dbg !12823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12829, metadata !DIExpression()), !dbg !12830
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12831
  %3 = load i8, i8* %2, align 1, !dbg !12832
  %4 = and i8 %3, -5, !dbg !12832
  store i8 %4, i8* %2, align 1, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12834 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12837
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12838
  %3 = ptrtoint i8* %2 to i32, !dbg !12847
  %4 = add i32 %3, 2048, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %4, metadata !12842, metadata !DIExpression()) #23, !dbg !12849
  call void @llvm.dbg.value(metadata i32 %4, metadata !12850, metadata !DIExpression()) #23, !dbg !12853
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12855, !srcloc !12856
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12857
  %6 = or i32 %5, 512, !dbg !12857
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12857
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -2, i32 noundef 255) #25, !dbg !12858
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -5, i32 noundef 0) #25, !dbg !12861
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -12, i32 noundef 0) #25, !dbg !12862
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -11, i32 noundef 0) #25, !dbg !12863
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -10, i32 noundef 0) #25, !dbg !12864
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -4, i32 noundef 0) #25, !dbg !12865
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12866
  %8 = or i32 %7, 458752, !dbg !12866
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12866
  tail call void @z_arm_fault_init() #25, !dbg !12867
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12868
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12869
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12872
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12873
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12874
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12875
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12875
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12836, metadata !DIExpression()), !dbg !12876
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12877
  call void @z_device_state_init() #25, !dbg !12878
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12879
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12880
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12881
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12882
  unreachable, !dbg !12882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2070, metadata !DIExpression()), !dbg !12883
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12884
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12884
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2071, metadata !DIExpression()), !dbg !12883
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2071, metadata !DIExpression()), !dbg !12883
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12885
  br i1 %7, label %8, label %35, !dbg !12886

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2071, metadata !DIExpression()), !dbg !12883
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12887
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12887
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2081, metadata !DIExpression()), !dbg !12888
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12889
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12889
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12890
  call void @llvm.dbg.value(metadata i32 %14, metadata !2085, metadata !DIExpression()), !dbg !12888
  %15 = icmp eq %struct.device* %11, null, !dbg !12891
  br i1 %15, label %32, label %16, !dbg !12893

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12894
  br i1 %17, label %26, label %18, !dbg !12897

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12898
  call void @llvm.dbg.value(metadata i32 %19, metadata !2085, metadata !DIExpression()), !dbg !12888
  %20 = icmp ult i32 %19, 255, !dbg !12900
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12900
  call void @llvm.dbg.value(metadata i32 %21, metadata !2085, metadata !DIExpression()), !dbg !12888
  %22 = trunc i32 %21 to i8, !dbg !12901
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12902
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12902
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12903
  store i8 %22, i8* %25, align 1, !dbg !12904
  br label %26, !dbg !12905

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12906
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12906
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12907
  %30 = load i8, i8* %29, align 1, !dbg !12908
  %31 = or i8 %30, 1, !dbg !12908
  store i8 %31, i8* %29, align 1, !dbg !12908
  br label %32, !dbg !12909

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12910
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2071, metadata !DIExpression()), !dbg !12883
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12885
  br i1 %34, label %8, label %35, !dbg !12886, !llvm.loop !12911

35:                                               ; preds = %32, %1
  ret void, !dbg !12913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.214(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12916, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %1, metadata !12917, metadata !DIExpression()), !dbg !12918
  %3 = trunc i32 %1 to i8, !dbg !12919
  %4 = shl i8 %3, 4, !dbg !12919
  %5 = and i32 %0, 15, !dbg !12922
  %6 = add nsw i32 %5, -4, !dbg !12923
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12924
  store volatile i8 %4, i8* %7, align 1, !dbg !12925
  ret void, !dbg !12926
}

; Function Attrs: optsize
declare !dbg !12927 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12931, metadata !DIExpression()), !dbg !12932
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12933
  store i8 1, i8* %2, align 1, !dbg !12934
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12935
  store i8 1, i8* %3, align 4, !dbg !12936
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12937
  store i32 0, i32* %4, align 4, !dbg !12938
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12939
  store i32 0, i32* %5, align 4, !dbg !12940
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12941
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12942
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12943
  ret void, !dbg !12944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12945 {
  tail call void @z_sched_init() #25, !dbg !12950
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12951
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.215, i32 0, i32 0)) #25, !dbg !12952
  call void @llvm.dbg.value(metadata i8* %1, metadata !12949, metadata !DIExpression()), !dbg !12953
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12954
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12955
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12956
  ret i8* %1, !dbg !12957
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12962, metadata !DIExpression()), !dbg !12963
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12964
  unreachable, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12966 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12968, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata i8* %1, metadata !12969, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.value(metadata i8* %2, metadata !12970, metadata !DIExpression()), !dbg !12971
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12972
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12973
  tail call void @boot_banner() #25, !dbg !12974
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12975
  tail call void @z_init_static_threads() #25, !dbg !12976
  tail call void @main() #25, !dbg !12977
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12978
  %5 = and i8 %4, -2, !dbg !12978
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12978
  ret void, !dbg !12979
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12980 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12990, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i8* %1, metadata !12991, metadata !DIExpression()), !dbg !12992
  ret void, !dbg !12993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12994 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12996, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i8* %1, metadata !12997, metadata !DIExpression()), !dbg !12998
  ret void, !dbg !12999
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13000 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13001, !srcloc !13008
  call void @llvm.dbg.value(metadata i32 %1, metadata !13004, metadata !DIExpression()) #23, !dbg !13009
  %2 = icmp ne i32 %1, 0, !dbg !13010
  ret i1 %2, !dbg !13011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13012 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13013
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13014
  %3 = load i8, i8* %2, align 4, !dbg !13015
  %4 = or i8 %3, 1, !dbg !13015
  store i8 %4, i8* %2, align 4, !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13017 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13018
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13019
  %3 = load i8, i8* %2, align 4, !dbg !13020
  %4 = and i8 %3, -2, !dbg !13020
  store i8 %4, i8* %2, align 4, !dbg !13020
  ret void, !dbg !13021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13022 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13023
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13024
  %3 = load i8, i8* %2, align 4, !dbg !13024
  %4 = and i8 %3, 1, !dbg !13025
  %5 = icmp ne i8 %4, 0, !dbg !13026
  ret i1 %5, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13032, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i8* %1, metadata !13033, metadata !DIExpression()), !dbg !13034
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13035
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13037
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13032, metadata !DIExpression()), !dbg !13034
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13038
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13039
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13040
  store i8 0, i8* %8, align 1, !dbg !13041
  ret i32 0, !dbg !13042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13043 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13047, metadata !DIExpression()), !dbg !13048
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13049
  ret i8* %2, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13055, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.value(metadata i8* %1, metadata !13056, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.value(metadata i32 %2, metadata !13057, metadata !DIExpression()), !dbg !13058
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13059
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13060
  ret i32 0, !dbg !13061
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2211, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i8* %1, metadata !2212, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 %2, metadata !2213, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 0, metadata !2214, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i8 undef, metadata !2216, metadata !DIExpression()), !dbg !13062
  %4 = icmp eq i8* %1, null, !dbg !13063
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13065
  br i1 %6, label %46, label %7, !dbg !13065

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13066
  %9 = load i8, i8* %8, align 1, !dbg !13066
  call void @llvm.dbg.value(metadata i8 %9, metadata !2216, metadata !DIExpression()), !dbg !13062
  %10 = add i32 %2, -1, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %10, metadata !2213, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i8 0, metadata !2217, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.value(metadata i8 %9, metadata !2216, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 0, metadata !2214, metadata !DIExpression()), !dbg !13062
  %11 = icmp eq i8 %9, 0, !dbg !13069
  br i1 %11, label %12, label %15, !dbg !13071

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13072
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13073
  store i8 0, i8* %14, align 1, !dbg !13074
  br label %46, !dbg !13075

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2217, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.value(metadata i8 %17, metadata !2216, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 %18, metadata !2214, metadata !DIExpression()), !dbg !13062
  %19 = zext i8 %17 to i32, !dbg !13076
  %20 = zext i8 %16 to i32, !dbg !13077
  %21 = shl nuw i32 1, %20, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %21, metadata !2215, metadata !DIExpression()), !dbg !13062
  %22 = and i32 %21, %19, !dbg !13079
  %23 = icmp eq i32 %22, 0, !dbg !13081
  br i1 %23, label %42, label %24, !dbg !13082

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13083
  %26 = sub i32 %10, %18, !dbg !13084
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13085
  %28 = load i8*, i8** %27, align 4, !dbg !13085
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13086
  %30 = load i32, i32* %29, align 4, !dbg !13086
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13087
  %32 = add i32 %31, %18, !dbg !13088
  call void @llvm.dbg.value(metadata i32 %32, metadata !2214, metadata !DIExpression()), !dbg !13062
  %33 = trunc i32 %21 to i8, !dbg !13089
  %34 = xor i8 %33, -1, !dbg !13089
  %35 = and i8 %17, %34, !dbg !13089
  call void @llvm.dbg.value(metadata i8 %35, metadata !2216, metadata !DIExpression()), !dbg !13062
  %36 = icmp eq i8 %35, 0, !dbg !13090
  br i1 %36, label %12, label %37, !dbg !13092

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13093
  %39 = sub i32 %10, %32, !dbg !13095
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.218, i32 0, i32 0), i32 noundef 1) #24, !dbg !13096
  %41 = add i32 %40, %32, !dbg !13097
  call void @llvm.dbg.value(metadata i32 %41, metadata !2214, metadata !DIExpression()), !dbg !13062
  br label %42, !dbg !13098

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13062
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13062
  call void @llvm.dbg.value(metadata i8 %44, metadata !2216, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 %43, metadata !2214, metadata !DIExpression()), !dbg !13062
  %45 = add i8 %16, 1, !dbg !13099
  call void @llvm.dbg.value(metadata i8 %45, metadata !2217, metadata !DIExpression()), !dbg !13068
  br label %15, !dbg !13071

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.219, i32 0, i32 0), %3 ], !dbg !13062
  ret i8* %47, !dbg !13100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13105, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 %1, metadata !13106, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i8* %2, metadata !13107, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 %3, metadata !13108, metadata !DIExpression()), !dbg !13110
  %5 = icmp ult i32 %1, %3, !dbg !13111
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %6, metadata !13109, metadata !DIExpression()), !dbg !13110
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13112
  ret i32 %6, !dbg !13113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13118, metadata !DIExpression()), !dbg !13119
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13120
  ret void, !dbg !13121
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13131, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13132, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i32 %2, metadata !13133, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13134, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i8* %4, metadata !13135, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i8* %5, metadata !13136, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i8* %6, metadata !13137, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i32 %7, metadata !13138, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i32 %8, metadata !13139, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i8* %9, metadata !13140, metadata !DIExpression()), !dbg !13142
  %11 = icmp eq i32 %7, 15, !dbg !13143
  br i1 %11, label %12, label %15, !dbg !13143

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13143
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13143
  br i1 %14, label %19, label %18, !dbg !13143

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13143
  %17 = icmp ult i32 %16, 31, !dbg !13143
  br i1 %17, label %19, label %18, !dbg !13143

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 536) #25, !dbg !13147
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.232, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13147
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 536) #25, !dbg !13147
  unreachable, !dbg !13147

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13149
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13150
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13151
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13152
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13153
  call void @llvm.dbg.value(metadata i8* %22, metadata !13141, metadata !DIExpression()), !dbg !13142
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13154
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13155
  store i8* null, i8** %23, align 4, !dbg !13156
  %24 = icmp eq i8* %9, null, !dbg !13157
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13159
  br i1 %24, label %29, label %26, !dbg !13160

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13161
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13163
  store i8 0, i8* %28, align 1, !dbg !13164
  br label %30, !dbg !13165

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13166
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13168
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13168
  br i1 %32, label %36, label %33, !dbg !13170

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13171
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13171
  br label %36, !dbg !13172

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13142
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13173
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13175
  ret i8* %22, !dbg !13176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13177 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13181, metadata !DIExpression()), !dbg !13182
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13183
  ret i1 %2, !dbg !13184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13185 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13190, metadata !DIExpression()), !dbg !13191
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13192
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13193
  ret void, !dbg !13194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13195 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13200, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i32 %1, metadata !13201, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i32 %2, metadata !13202, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i32 %3, metadata !13203, metadata !DIExpression()), !dbg !13204
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13205
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13206
  %6 = trunc i32 %3 to i8, !dbg !13207
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13208
  store i8 %6, i8* %7, align 4, !dbg !13209
  %8 = trunc i32 %2 to i8, !dbg !13210
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13211
  store i8 %8, i8* %9, align 1, !dbg !13212
  %10 = trunc i32 %1 to i8, !dbg !13213
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13214
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13214
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13214
  store i8 %10, i8* %13, align 2, !dbg !13215
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13216
  store i8 0, i8* %14, align 1, !dbg !13217
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13218
  ret void, !dbg !13219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13224, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13225, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 %2, metadata !13226, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %4 = add i32 %2, 7, !dbg !13233
  %5 = and i32 %4, -8, !dbg !13233
  %6 = add i32 %5, 64, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %6, metadata !13227, metadata !DIExpression()), !dbg !13232
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.233(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13235
  call void @llvm.dbg.value(metadata i8* %7, metadata !13230, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 %5, metadata !13228, metadata !DIExpression()), !dbg !13232
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13236
  call void @llvm.dbg.value(metadata i8* %8, metadata !13229, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %9 = ptrtoint i8* %7 to i32, !dbg !13237
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13238
  store i32 %9, i32* %10, align 4, !dbg !13239
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13240
  store i32 %5, i32* %11, align 4, !dbg !13241
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13242
  store i32 0, i32* %12, align 4, !dbg !13243
  call void @llvm.dbg.value(metadata i8* %8, metadata !13229, metadata !DIExpression()), !dbg !13232
  ret i8* %8, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.233(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13249, metadata !DIExpression()), !dbg !13250
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13251
  ret i8* %2, !dbg !13252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13253 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13258, metadata !DIExpression()), !dbg !13259
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13260
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13261
  ret void, !dbg !13262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13263 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13265, metadata !DIExpression()), !dbg !13266
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13267
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13268
  ret void, !dbg !13269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13270 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13274, metadata !DIExpression()), !dbg !13275
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13276
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13277
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13278
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13279
  ret void, !dbg !13280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13281 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13286, metadata !DIExpression()), !dbg !13287
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13288
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13289
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13290
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13291
  ret void, !dbg !13292
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13293 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13310, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13301, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13302, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 %2, metadata !13303, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13304, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i8* %4, metadata !13305, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i8* %5, metadata !13306, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i8* %6, metadata !13307, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 %7, metadata !13308, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 %8, metadata !13309, metadata !DIExpression()), !dbg !13311
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13312, !srcloc !13008
  call void @llvm.dbg.value(metadata i32 %11, metadata !13004, metadata !DIExpression()) #23, !dbg !13317
  %12 = icmp eq i32 %11, 0, !dbg !13318
  br i1 %12, label %14, label %13, !dbg !13319

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 647) #25, !dbg !13320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.237, i32 0, i32 0)) #25, !dbg !13320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 647) #25, !dbg !13320
  unreachable, !dbg !13320

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13310, metadata !DIExpression()), !dbg !13311
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13322
  %17 = icmp eq i64 %15, -1, !dbg !13323
  br i1 %17, label %19, label %18, !dbg !13325

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13326
  br label %19, !dbg !13328

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13330 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13335, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13334, metadata !DIExpression()), !dbg !13336
  %4 = icmp eq i64 %3, 0, !dbg !13337
  br i1 %4, label %5, label %6, !dbg !13339

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13340
  br label %7, !dbg !13342

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13343
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13350, metadata !DIExpression()), !dbg !13351
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13352, !srcloc !13354
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13355
  ret void, !dbg !13356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13357 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13360, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13359, metadata !DIExpression()), !dbg !13361
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13362
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13363
  ret void, !dbg !13364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13365 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13367, metadata !DIExpression()), !dbg !13387
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13388

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 750) #25, !dbg !13392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.241, i32 0, i32 0)) #25, !dbg !13392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 750) #25, !dbg !13392
  unreachable, !dbg !13392

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13367, metadata !DIExpression()), !dbg !13387
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13395
  br i1 %4, label %6, label %5, !dbg !13396

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13397
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13385, metadata !DIExpression()), !dbg !13398
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13399

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13403
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13403
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13405
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13405
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13406
  %12 = load i32, i32* %11, align 4, !dbg !13406
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13407
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13407
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13408
  %16 = load i8*, i8** %15, align 4, !dbg !13408
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13409
  %18 = load i8*, i8** %17, align 4, !dbg !13409
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13410
  %20 = load i8*, i8** %19, align 4, !dbg !13410
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13411
  %22 = load i32, i32* %21, align 4, !dbg !13411
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13412
  %24 = load i32, i32* %23, align 4, !dbg !13412
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13413
  %26 = load i8*, i8** %25, align 4, !dbg !13413
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13414
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13415
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13416
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13417
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13417
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13418
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13367, metadata !DIExpression()), !dbg !13387
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13419
  br i1 %32, label %1, label %2, !dbg !13388, !llvm.loop !13420

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 781) #25, !dbg !13422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.241, i32 0, i32 0)) #25, !dbg !13422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 781) #25, !dbg !13422
  unreachable, !dbg !13422

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13385, metadata !DIExpression()), !dbg !13398
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13425
  br i1 %36, label %38, label %37, !dbg !13426

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13427
  ret void, !dbg !13428

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13429
  %40 = load i32, i32* %39, align 4, !dbg !13429
  %41 = icmp eq i32 %40, -1, !dbg !13432
  br i1 %41, label %50, label %42, !dbg !13433

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13434
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13434
  %45 = icmp sgt i32 %40, 0, !dbg !13436
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13436
  %47 = zext i32 %46 to i64, !dbg !13436
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !13436
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13437
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13437
  br label %50, !dbg !13438

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13439
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13385, metadata !DIExpression()), !dbg !13398
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13440
  br i1 %52, label %33, label %34, !dbg !13399, !llvm.loop !13441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !13443 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13448, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i64 %0, metadata !13450, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i32 1000, metadata !13455, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i32 10000, metadata !13456, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8 1, metadata !13457, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8 0, metadata !13458, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8 1, metadata !13459, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8 0, metadata !13460, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8 1, metadata !13461, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8 0, metadata !13462, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i64 0, metadata !13463, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i64 0, metadata !13463, metadata !DIExpression()), !dbg !13467
  %2 = mul i64 %0, 10, !dbg !13469
  ret i64 %2, !dbg !13475
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13476 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13478, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i8* %1, metadata !13479, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i8* %2, metadata !13480, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i8* %3, metadata !13481, metadata !DIExpression()), !dbg !13482
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13483
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13484
  %7 = load i8, i8* %6, align 4, !dbg !13485
  %8 = or i8 %7, 4, !dbg !13485
  store i8 %8, i8* %6, align 4, !dbg !13485
  tail call void @z_thread_essential_clear() #24, !dbg !13486
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13487
  unreachable, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13493, metadata !DIExpression()), !dbg !13495
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13496
  %3 = load i32, i32* %2, align 4, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %3, metadata !13494, metadata !DIExpression()), !dbg !13495
  %4 = icmp eq i32 %3, 0, !dbg !13497
  br i1 %4, label %10, label %5, !dbg !13499

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13500
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13503
  %8 = zext i8 %7 to i32, !dbg !13504
  %9 = icmp eq i32 %6, %8, !dbg !13505
  br i1 %9, label %11, label %10, !dbg !13506

10:                                               ; preds = %5, %1
  br label %11, !dbg !13507

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13495
  ret i1 %12, !dbg !13508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13509 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13511, metadata !DIExpression()), !dbg !13512
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13513
  %3 = load i32, i32* %2, align 4, !dbg !13513
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13515
  %5 = zext i8 %4 to i32, !dbg !13516
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13517
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13518
  %8 = or i32 %7, %5, !dbg !13519
  %9 = icmp eq i32 %3, %8, !dbg !13520
  br i1 %9, label %10, label %11, !dbg !13521

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13522
  br label %11, !dbg !13523

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13525 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13529, metadata !DIExpression()), !dbg !13530
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13531
  %3 = zext i8 %2 to i32, !dbg !13532
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13533
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13534
  %6 = or i32 %5, %3, !dbg !13535
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13536
  store i32 %6, i32* %7, align 4, !dbg !13537
  ret void, !dbg !13538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13543, metadata !DIExpression()), !dbg !13544
  ret i32 -134, !dbg !13545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13550, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i32 %1, metadata !13551, metadata !DIExpression()), !dbg !13552
  ret i32 -134, !dbg !13553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13561, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13562, metadata !DIExpression()), !dbg !13563
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13564
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13566
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13563
  ret i32 %6, !dbg !13567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13568 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13572, metadata !DIExpression()), !dbg !13573
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13574
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13573
  ret i32 %3, !dbg !13576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13577 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13579
  ret void, !dbg !13580
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13583, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i8* %1, metadata !13584, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i8* %2, metadata !13585, metadata !DIExpression()), !dbg !13586
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13587
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13587
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13587
  %7 = load i8, i8* %6, align 2, !dbg !13587
  %8 = icmp sgt i8 %7, -1, !dbg !13587
  br i1 %8, label %10, label %9, !dbg !13590

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 39) #25, !dbg !13591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 39) #25, !dbg !13591
  unreachable, !dbg !13591

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13593, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13597, metadata !DIExpression()) #23, !dbg !13601
  tail call fastcc void @k_cpu_idle() #24, !dbg !13602
  br label %10, !dbg !13603, !llvm.loop !13604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13606 {
  tail call void @arch_cpu_idle() #25, !dbg !13607
  ret void, !dbg !13608
}

; Function Attrs: optsize
declare !dbg !13609 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13610 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13621, metadata !DIExpression()), !dbg !13622
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13623
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13624
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13625
  store i32 0, i32* %3, align 4, !dbg !13626
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13627
  tail call fastcc void @z_waitq_init.253(%struct._wait_q_t* noundef %4) #24, !dbg !13628
  ret i32 0, !dbg !13629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.253(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13630 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13634, metadata !DIExpression()), !dbg !13635
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13636
  tail call fastcc void @sys_dlist_init.254(%struct._dnode* noundef %2) #24, !dbg !13637
  ret void, !dbg !13638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.254(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13639 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13644, metadata !DIExpression()), !dbg !13645
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13646
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13647
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13648
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13649
  ret void, !dbg !13650
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13651 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13660, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13659, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata i8 0, metadata !13667, metadata !DIExpression()), !dbg !13672
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13673, !srcloc !13682
  call void @llvm.dbg.value(metadata i32 %4, metadata !13676, metadata !DIExpression()) #23, !dbg !13683
  %5 = icmp eq i32 %4, 0, !dbg !13684
  br i1 %5, label %7, label %6, !dbg !13685

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 101) #25, !dbg !13686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.260, i32 0, i32 0)) #25, !dbg !13686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 101) #25, !dbg !13686
  unreachable, !dbg !13686

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13688, metadata !DIExpression()) #23, !dbg !13695
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13697, !srcloc !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()) #23, !dbg !13704
  call void @llvm.dbg.value(metadata i32 undef, metadata !13701, metadata !DIExpression()) #23, !dbg !13704
  call void @llvm.dbg.value(metadata i32 undef, metadata !13694, metadata !DIExpression()) #23, !dbg !13695
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13705
  br i1 %9, label %11, label %10, !dbg !13708

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 148) #25, !dbg !13709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 148) #25, !dbg !13709
  unreachable, !dbg !13709

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13697
  call void @llvm.dbg.value(metadata i32 %12, metadata !13700, metadata !DIExpression()) #23, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %12, metadata !13694, metadata !DIExpression()) #23, !dbg !13695
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13711
  call void @llvm.dbg.value(metadata i32 %12, metadata !13662, metadata !DIExpression()), !dbg !13672
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13712
  %14 = load i32, i32* %13, align 4, !dbg !13712
  %15 = icmp eq i32 %14, 0, !dbg !13712
  br i1 %15, label %21, label %16, !dbg !13712

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13712
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13712
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13712
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13712
  br i1 %20, label %27, label %39, !dbg !13714, !prof !13715

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13716
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13718
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13718
  %25 = load i8, i8* %24, align 2, !dbg !13718
  %26 = sext i8 %25 to i32, !dbg !13716
  br label %30, !dbg !13719

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13720
  %29 = load i32, i32* %28, align 4, !dbg !13720
  br label %30, !dbg !13719

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13721
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13719
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13722
  store i32 %32, i32* %33, align 4, !dbg !13723
  %34 = add i32 %14, 1, !dbg !13724
  store i32 %34, i32* %13, align 4, !dbg !13724
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13725
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13726
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()) #23, !dbg !13733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13732, metadata !DIExpression()) #23, !dbg !13733
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13735
  br i1 %36, label %38, label %37, !dbg !13738

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13739
  unreachable, !dbg !13739

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13727, metadata !DIExpression()) #23, !dbg !13733
  call void @llvm.dbg.value(metadata i32 %12, metadata !13741, metadata !DIExpression()) #23, !dbg !13744
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13746, !srcloc !13747
  br label %97, !dbg !13748

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13749
  br i1 %40, label %41, label %45, !dbg !13751, !prof !13752

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()) #23, !dbg !13753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13732, metadata !DIExpression()) #23, !dbg !13753
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13756
  br i1 %42, label %44, label %43, !dbg !13757

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13758
  unreachable, !dbg !13758

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13727, metadata !DIExpression()) #23, !dbg !13753
  call void @llvm.dbg.value(metadata i32 %12, metadata !13741, metadata !DIExpression()) #23, !dbg !13759
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13761, !srcloc !13747
  br label %97, !dbg !13762

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13763
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13763
  %48 = load i8, i8* %47, align 2, !dbg !13763
  %49 = sext i8 %48 to i32, !dbg !13764
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13765
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13765
  %52 = load i8, i8* %51, align 2, !dbg !13765
  %53 = sext i8 %52 to i32, !dbg !13766
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13767
  call void @llvm.dbg.value(metadata i32 %54, metadata !13661, metadata !DIExpression()), !dbg !13672
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13768
  br i1 %55, label %56, label %58, !dbg !13770

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13771
  call void @llvm.dbg.value(metadata i1 %57, metadata !13667, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13672
  br label %58, !dbg !13773

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13667, metadata !DIExpression()), !dbg !13672
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13774
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13775
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.261, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13775
  call void @llvm.dbg.value(metadata i32 %62, metadata !13668, metadata !DIExpression()), !dbg !13672
  %63 = icmp eq i32 %62, 0, !dbg !13776
  br i1 %63, label %97, label %64, !dbg !13778

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13688, metadata !DIExpression()) #23, !dbg !13779
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13781, !srcloc !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !13701, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !13694, metadata !DIExpression()) #23, !dbg !13779
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13784
  br i1 %66, label %68, label %67, !dbg !13785

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 148) #25, !dbg !13786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 148) #25, !dbg !13786
  unreachable, !dbg !13786

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %69, metadata !13700, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %69, metadata !13694, metadata !DIExpression()) #23, !dbg !13779
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %69, metadata !13662, metadata !DIExpression()), !dbg !13672
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13788
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13788
  br i1 %71, label %90, label %72, !dbg !13789, !prof !13752

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13790
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13669, metadata !DIExpression()), !dbg !13791
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13792
  br i1 %74, label %83, label %75, !dbg !13793

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13794
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13794
  %78 = load i8, i8* %77, align 2, !dbg !13794
  %79 = sext i8 %78 to i32, !dbg !13795
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13796
  %81 = load i32, i32* %80, align 4, !dbg !13796
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13797
  br label %86, !dbg !13793

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13798
  %85 = load i32, i32* %84, align 4, !dbg !13798
  br label %86, !dbg !13793

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13793
  call void @llvm.dbg.value(metadata i32 %87, metadata !13661, metadata !DIExpression()), !dbg !13672
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13799
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13800
  call void @llvm.dbg.value(metadata i1 %89, metadata !13667, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13672
  call void @llvm.dbg.value(metadata i8 poison, metadata !13667, metadata !DIExpression()), !dbg !13672
  br i1 %89, label %91, label %93, !dbg !13801

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13667, metadata !DIExpression()), !dbg !13672
  br i1 %59, label %91, label %93, !dbg !13801

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13802
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.261, [1 x i32] %92) #25, !dbg !13802
  br label %97, !dbg !13805

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()) #23, !dbg !13806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13732, metadata !DIExpression()) #23, !dbg !13806
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13809
  br i1 %94, label %96, label %95, !dbg !13810

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13811
  unreachable, !dbg !13811

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13727, metadata !DIExpression()) #23, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %69, metadata !13741, metadata !DIExpression()) #23, !dbg !13812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13814, !srcloc !13747
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13672
  ret i32 %98, !dbg !13815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13820, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.value(metadata i32 %1, metadata !13821, metadata !DIExpression()), !dbg !13823
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13824
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13824
  call void @llvm.dbg.value(metadata i32 %4, metadata !13822, metadata !DIExpression()), !dbg !13823
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13825
  call void @llvm.dbg.value(metadata i32 %5, metadata !13822, metadata !DIExpression()), !dbg !13823
  ret i32 %5, !dbg !13826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13831, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 %1, metadata !13832, metadata !DIExpression()), !dbg !13833
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13834
  ret i1 %3, !dbg !13835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13836 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13840, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i32 %1, metadata !13841, metadata !DIExpression()), !dbg !13842
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13843
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13843
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13845
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13845
  %7 = load i8, i8* %6, align 2, !dbg !13845
  %8 = sext i8 %7 to i32, !dbg !13846
  %9 = icmp eq i32 %8, %1, !dbg !13847
  br i1 %9, label %12, label %10, !dbg !13848

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13849
  br label %12, !dbg !13851

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13842
  ret i1 %13, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13857, metadata !DIExpression()), !dbg !13858
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13859
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13860
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13861
  ret %struct.k_thread* %4, !dbg !13862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13863 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13867, metadata !DIExpression()), !dbg !13868
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13869
  br i1 %2, label %6, label %3, !dbg !13869

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13870
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13870
  br label %6, !dbg !13869

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13869
  ret %struct._dnode* %7, !dbg !13871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13872 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13876, metadata !DIExpression()), !dbg !13877
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13878
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13878
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13879
  ret i1 %4, !dbg !13880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13883, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i32 %1, metadata !13884, metadata !DIExpression()), !dbg !13885
  %3 = icmp slt i32 %0, %1, !dbg !13886
  ret i1 %3, !dbg !13887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13890, metadata !DIExpression()), !dbg !13891
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13892
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13892
  ret i32 %3, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %2 = icmp sgt i32 %0, -128, !dbg !13900
  ret i1 %2, !dbg !13901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13902 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13904, metadata !DIExpression()), !dbg !13908
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13909, !srcloc !13682
  call void @llvm.dbg.value(metadata i32 %2, metadata !13676, metadata !DIExpression()) #23, !dbg !13914
  %3 = icmp eq i32 %2, 0, !dbg !13915
  br i1 %3, label %5, label %4, !dbg !13916

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 205) #25, !dbg !13917
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.260, i32 0, i32 0)) #25, !dbg !13917
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 205) #25, !dbg !13917
  unreachable, !dbg !13917

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13919
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13919
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13919
  br i1 %8, label %41, label %9, !dbg !13921

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13922
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13922
  br i1 %11, label %12, label %41, !dbg !13924

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13925
  %14 = load i32, i32* %13, align 4, !dbg !13925
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13928

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 229) #25, !dbg !13929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.259, i32 0, i32 0), i32 noundef 229) #25, !dbg !13929
  unreachable, !dbg !13929

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13931
  store i32 %17, i32* %13, align 4, !dbg !13931
  br label %41, !dbg !13934

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13688, metadata !DIExpression()) #23, !dbg !13935
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13937, !srcloc !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()) #23, !dbg !13939
  call void @llvm.dbg.value(metadata i32 undef, metadata !13701, metadata !DIExpression()) #23, !dbg !13939
  call void @llvm.dbg.value(metadata i32 undef, metadata !13694, metadata !DIExpression()) #23, !dbg !13935
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13940
  br i1 %20, label %22, label %21, !dbg !13941

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 148) #25, !dbg !13942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 148) #25, !dbg !13942
  unreachable, !dbg !13942

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13937
  call void @llvm.dbg.value(metadata i32 %23, metadata !13700, metadata !DIExpression()) #23, !dbg !13939
  call void @llvm.dbg.value(metadata i32 %23, metadata !13694, metadata !DIExpression()) #23, !dbg !13935
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13943
  call void @llvm.dbg.value(metadata i32 %23, metadata !13906, metadata !DIExpression()), !dbg !13908
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13944
  %25 = load i32, i32* %24, align 4, !dbg !13944
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13945
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13946
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13947
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13905, metadata !DIExpression()), !dbg !13908
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13948
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13949
  br i1 %29, label %37, label %30, !dbg !13951

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13952
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13952
  %33 = load i8, i8* %32, align 2, !dbg !13952
  %34 = sext i8 %33 to i32, !dbg !13954
  store i32 %34, i32* %24, align 4, !dbg !13955
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13956, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i32 0, metadata !13961, metadata !DIExpression()), !dbg !13962
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13964
  store i32 0, i32* %35, align 4, !dbg !13965
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13966
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13967
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.261, [1 x i32] %36) #25, !dbg !13967
  br label %41, !dbg !13968

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13969
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()) #23, !dbg !13971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.261, metadata !13732, metadata !DIExpression()) #23, !dbg !13971
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13973
  br i1 %38, label %40, label %39, !dbg !13974

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.261) #25, !dbg !13975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.263, i32 0, i32 0), i32 noundef 194) #25, !dbg !13975
  unreachable, !dbg !13975

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13727, metadata !DIExpression()) #23, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %23, metadata !13741, metadata !DIExpression()) #23, !dbg !13976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13978, !srcloc !13747
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13908
  ret i32 %42, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13984, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13985, metadata !DIExpression()), !dbg !13988
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13989
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13989
  %5 = load i8, i8* %4, align 2, !dbg !13989
  call void @llvm.dbg.value(metadata i8 %5, metadata !13986, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13988
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13990
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13990
  %8 = load i8, i8* %7, align 2, !dbg !13990
  call void @llvm.dbg.value(metadata i8 %8, metadata !13987, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13988
  %9 = icmp eq i8 %8, %5, !dbg !13991
  %10 = sext i8 %5 to i32, !dbg !13993
  %11 = sext i8 %8 to i32, !dbg !13993
  %12 = sub nsw i32 %11, %10, !dbg !13993
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13993
  ret i32 %13, !dbg !13994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13999, metadata !DIExpression()), !dbg !14000
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14001
  %3 = icmp eq i32 %2, 0, !dbg !14003
  br i1 %3, label %8, label %4, !dbg !14004

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14005
  %6 = add i32 %5, %2, !dbg !14007
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14008
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14009
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14010
  br label %8, !dbg !14011

8:                                                ; preds = %4, %1
  ret void, !dbg !14012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14017, metadata !DIExpression()), !dbg !14019
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %1, metadata !14018, metadata !DIExpression()), !dbg !14019
  ret i32 %1, !dbg !14021
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14026, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 %1, metadata !14027, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 0, metadata !14028, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14044
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14046, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14044
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14054
  br i1 %4, label %6, label %5, !dbg !14057

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14058
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14058
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14058
  unreachable, !dbg !14058

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14044
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14060
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()), !dbg !14036
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14061
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14064
  %8 = icmp sgt i32 %0, 0, !dbg !14065
  %9 = icmp sgt i32 %7, 2, !dbg !14067
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14067
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14067
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14068
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14069
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14077
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14079
  br i1 %12, label %14, label %13, !dbg !14082

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14083
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14083
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14083
  unreachable, !dbg !14083

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14046
  call void @llvm.dbg.value(metadata i32 %15, metadata !14049, metadata !DIExpression()) #23, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %15, metadata !14043, metadata !DIExpression()) #23, !dbg !14044
  call void @llvm.dbg.value(metadata i32 %15, metadata !14034, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14077
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !14088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14090, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !14028, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()), !dbg !14036
  ret void, !dbg !14092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14095, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata i32 %0, metadata !14097, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14112
  call void @llvm.dbg.value(metadata i32 1000, metadata !14100, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 10000, metadata !14101, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8 1, metadata !14102, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i1 true, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14112
  call void @llvm.dbg.value(metadata i1 true, metadata !14104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14112
  call void @llvm.dbg.value(metadata i8 0, metadata !14105, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i1 true, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14112
  call void @llvm.dbg.value(metadata i1 false, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14112
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !14112
  %2 = mul i32 %0, 10, !dbg !14114
  ret i32 %2, !dbg !14120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14123, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14126
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14128, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14126
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14131
  br i1 %3, label %5, label %4, !dbg !14132

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14133
  unreachable, !dbg !14133

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #23, !dbg !14130
  call void @llvm.dbg.value(metadata i32 %6, metadata !14043, metadata !DIExpression()) #23, !dbg !14126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14134
  call void @llvm.dbg.value(metadata i32 %6, metadata !14124, metadata !DIExpression()), !dbg !14125
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14135
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14137
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14138
  br i1 %9, label %10, label %14, !dbg !14139

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14140
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14142
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14144
  br i1 %11, label %13, label %12, !dbg !14145

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14146
  unreachable, !dbg !14146

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()) #23, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()) #23, !dbg !14147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14149, !srcloc !14091
  br label %33, !dbg !14150

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14151
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14152
  %16 = icmp eq i32 %15, 0, !dbg !14152
  br i1 %16, label %27, label %17, !dbg !14154

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14155
  br i1 %18, label %19, label %27, !dbg !14156

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14157
  %21 = icmp sgt i32 %20, %0, !dbg !14160
  br i1 %21, label %25, label %22, !dbg !14161

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14162
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14162
  call void @llvm.dbg.value(metadata i32 %24, metadata !14124, metadata !DIExpression()), !dbg !14125
  br label %28, !dbg !14164

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14165
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14165
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14167
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14125
  call void @llvm.dbg.value(metadata i32 %29, metadata !14124, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14169
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14171
  br i1 %30, label %32, label %31, !dbg !14172

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14173
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14173
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14173
  unreachable, !dbg !14173

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14071, metadata !DIExpression()) #23, !dbg !14169
  call void @llvm.dbg.value(metadata i32 %29, metadata !14085, metadata !DIExpression()) #23, !dbg !14174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14176, !srcloc !14091
  br label %33, !dbg !14177

33:                                               ; preds = %32, %13
  ret void, !dbg !14177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14182, metadata !DIExpression()), !dbg !14184
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14185
  %3 = icmp eq i32 %2, 0, !dbg !14185
  br i1 %3, label %16, label %4, !dbg !14186

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14187
  br i1 %5, label %16, label %6, !dbg !14188

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14189
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14189
  %9 = load i8, i8* %8, align 2, !dbg !14189
  %10 = sext i8 %9 to i32, !dbg !14190
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14191
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.283(i32 noundef %10, i32 noundef %11) #24, !dbg !14192
  br i1 %12, label %16, label %13, !dbg !14193

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14194
  %15 = xor i1 %14, true, !dbg !14195
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14184
  call void @llvm.dbg.value(metadata i1 %17, metadata !14183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14184
  ret i1 %17, !dbg !14196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14197 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14201, metadata !DIExpression()), !dbg !14203
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14204
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14202, metadata !DIExpression()), !dbg !14203
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14205
  br i1 %3, label %5, label %4, !dbg !14207

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14208
  br label %5, !dbg !14210

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14201, metadata !DIExpression()), !dbg !14203
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14211
  ret i32 %6, !dbg !14212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()), !dbg !14217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14218
  %3 = load i8, i8* %2, align 1, !dbg !14218
  call void @llvm.dbg.value(metadata i8 %3, metadata !14216, metadata !DIExpression()), !dbg !14217
  %4 = and i8 %3, 31, !dbg !14219
  %5 = icmp ne i8 %4, 0, !dbg !14220
  ret i1 %5, !dbg !14221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14224, metadata !DIExpression()), !dbg !14225
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14226
  br i1 %2, label %3, label %7, !dbg !14228

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()) #23, !dbg !14232
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14235
  %5 = load i8, i8* %4, align 1, !dbg !14236
  %6 = and i8 %5, 127, !dbg !14236
  store i8 %6, i8* %4, align 1, !dbg !14236
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14237, metadata !DIExpression()) #23, !dbg !14240
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14244
  br label %7, !dbg !14245

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14246, metadata !DIExpression()) #23, !dbg !14249
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14251
  %9 = load i8, i8* %8, align 1, !dbg !14252
  %10 = or i8 %9, -128, !dbg !14252
  store i8 %10, i8* %8, align 1, !dbg !14252
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14253, metadata !DIExpression()) #23, !dbg !14256
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14260, metadata !DIExpression()) #23, !dbg !14268
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14266, metadata !DIExpression()) #23, !dbg !14268
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14270
  br i1 %11, label %12, label %13, !dbg !14273

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !14274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !14274
  unreachable, !dbg !14274

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14276
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14267, metadata !DIExpression()) #23, !dbg !14268
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14278
  br i1 %15, label %26, label %16, !dbg !14276

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14267, metadata !DIExpression()) #23, !dbg !14268
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14280
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14267, metadata !DIExpression()) #23, !dbg !14268
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14281
  %20 = icmp sgt i32 %19, 0, !dbg !14284
  br i1 %20, label %21, label %23, !dbg !14285

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14286
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14288
  br label %28, !dbg !14289

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14278
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14267, metadata !DIExpression()) #23, !dbg !14268
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14278
  br i1 %25, label %26, label %16, !dbg !14276, !llvm.loop !14290

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14292
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14293
  br label %28, !dbg !14294

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14295
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14296
  %31 = zext i1 %30 to i32, !dbg !14296
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14297
  ret void, !dbg !14298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14301, metadata !DIExpression()), !dbg !14302
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14303
  ret i1 %2, !dbg !14304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14307, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14308, metadata !DIExpression()), !dbg !14309
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14310
  br i1 %3, label %4, label %5, !dbg !14313

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14314
  unreachable, !dbg !14314

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14316
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14317
  ret void, !dbg !14318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14321, metadata !DIExpression()), !dbg !14322
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14323
  ret i1 %2, !dbg !14324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14325 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14329, metadata !DIExpression()), !dbg !14330
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.281(%struct._dnode* noundef %0) #24, !dbg !14331
  br i1 %2, label %6, label %3, !dbg !14331

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14332
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14332
  br label %6, !dbg !14331

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14331
  ret %struct._dnode* %7, !dbg !14333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14334 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14338, metadata !DIExpression()), !dbg !14342
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14339, metadata !DIExpression()), !dbg !14342
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14343
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14343
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14340, metadata !DIExpression()), !dbg !14342
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14344
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14345
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14346
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14347
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14348
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14349
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14350
  ret void, !dbg !14351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14352 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14356, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14357, metadata !DIExpression()), !dbg !14358
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14359
  br i1 %3, label %6, label %4, !dbg !14360

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14361
  br label %6, !dbg !14360

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14360
  ret %struct._dnode* %7, !dbg !14362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14363 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14367, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14368, metadata !DIExpression()), !dbg !14370
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14371
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14371
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14369, metadata !DIExpression()), !dbg !14370
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14372
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14373
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14374
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14375
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14376
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14377
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14378
  ret void, !dbg !14379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14382, metadata !DIExpression()), !dbg !14384
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14385
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14392, metadata !DIExpression()) #23, !dbg !14394
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14395
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14396
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14396
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14383, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14397, metadata !DIExpression()) #23, !dbg !14403
  call void @llvm.dbg.value(metadata i32 %0, metadata !14402, metadata !DIExpression()) #23, !dbg !14403
  %6 = icmp eq i32 %0, 0, !dbg !14406
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14408
  br i1 %6, label %8, label %18, !dbg !14409

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14410
  br i1 %9, label %10, label %11, !dbg !14413

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 137) #25, !dbg !14414
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !14414
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 137) #25, !dbg !14414
  unreachable, !dbg !14414

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14416
  br i1 %12, label %18, label %13, !dbg !14418

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14419
  br i1 %14, label %18, label %15, !dbg !14421

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14422
  %17 = icmp eq i32 %16, 0, !dbg !14422
  br i1 %17, label %21, label %18, !dbg !14424

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14425
  br i1 %19, label %21, label %20, !dbg !14428

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14429
  br label %21, !dbg !14431

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14408
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14408
  ret void, !dbg !14432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14433 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14437, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14438, metadata !DIExpression()), !dbg !14440
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef %0) #24, !dbg !14441
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14439, metadata !DIExpression()), !dbg !14440
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14438, metadata !DIExpression()), !dbg !14440
  ret %struct.k_thread* %3, !dbg !14442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14445, metadata !DIExpression()), !dbg !14446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14447
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14448
  %4 = xor i1 %3, true, !dbg !14449
  ret i1 %4, !dbg !14450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14453, metadata !DIExpression()), !dbg !14454
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14455
  %3 = load i16, i16* %2, align 2, !dbg !14455
  %4 = icmp ult i16 %3, 128, !dbg !14456
  %5 = zext i1 %4 to i32, !dbg !14456
  ret i32 %5, !dbg !14457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14458 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14464, metadata !DIExpression()), !dbg !14465
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14466
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14467
  %4 = xor i1 %3, true, !dbg !14468
  ret i1 %4, !dbg !14469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14470 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14476, metadata !DIExpression()), !dbg !14477
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14478
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14478
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14479
  ret i1 %4, !dbg !14480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14481 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14483, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14484, metadata !DIExpression()), !dbg !14485
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14486
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14486
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14487
  br i1 %5, label %9, label %6, !dbg !14488

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14489
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14489
  br label %9, !dbg !14488

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14488
  ret %struct._dnode* %10, !dbg !14490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.281(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14491 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14495, metadata !DIExpression()), !dbg !14496
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14497
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14497
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14498
  ret i1 %4, !dbg !14499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14500 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14504, metadata !DIExpression()), !dbg !14507
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14508
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14508
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14505, metadata !DIExpression()), !dbg !14507
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14509
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14509
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14506, metadata !DIExpression()), !dbg !14507
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14510
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14511
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14512
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14513
  tail call fastcc void @sys_dnode_init.282(%struct._dnode* noundef %0) #24, !dbg !14514
  ret void, !dbg !14515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.282(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14516 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14518, metadata !DIExpression()), !dbg !14519
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14520
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14521
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14522
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14529, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i32 %1, metadata !14530, metadata !DIExpression()), !dbg !14531
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14532
  %4 = load i8, i8* %3, align 1, !dbg !14532
  %5 = zext i8 %4 to i32, !dbg !14533
  %6 = and i32 %5, %1, !dbg !14534
  %7 = icmp ne i32 %6, 0, !dbg !14535
  ret i1 %7, !dbg !14536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.283(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14539, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 %1, metadata !14540, metadata !DIExpression()), !dbg !14541
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.284(i32 noundef %0, i32 noundef %1) #24, !dbg !14542
  ret i1 %3, !dbg !14543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.284(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14546, metadata !DIExpression()), !dbg !14548
  call void @llvm.dbg.value(metadata i32 %1, metadata !14547, metadata !DIExpression()), !dbg !14548
  %3 = icmp slt i32 %0, %1, !dbg !14549
  ret i1 %3, !dbg !14550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32 0, metadata !14554, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14559
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14561, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14563
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14563
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14559
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14564
  br i1 %3, label %5, label %4, !dbg !14565

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14566
  unreachable, !dbg !14566

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14563
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14559
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14556, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14554, metadata !DIExpression()), !dbg !14558
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14573
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14575
  br i1 %6, label %8, label %7, !dbg !14576

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14577
  unreachable, !dbg !14577

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14561
  call void @llvm.dbg.value(metadata i32 %9, metadata !14049, metadata !DIExpression()) #23, !dbg !14563
  call void @llvm.dbg.value(metadata i32 %9, metadata !14043, metadata !DIExpression()) #23, !dbg !14559
  call void @llvm.dbg.value(metadata i32 %9, metadata !14556, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !14578
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14580, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !14554, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14554, metadata !DIExpression()), !dbg !14558
  ret void, !dbg !14581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14586
  br i1 %2, label %27, label %3, !dbg !14588

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14589
  br i1 %4, label %5, label %27, !dbg !14590

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14246, metadata !DIExpression()) #23, !dbg !14591
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14594
  %7 = load i8, i8* %6, align 1, !dbg !14595
  %8 = or i8 %7, -128, !dbg !14595
  store i8 %8, i8* %6, align 1, !dbg !14595
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14253, metadata !DIExpression()) #23, !dbg !14596
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14260, metadata !DIExpression()) #23, !dbg !14598
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14266, metadata !DIExpression()) #23, !dbg !14598
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14600
  br i1 %9, label %10, label %11, !dbg !14601

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !14602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !14602
  unreachable, !dbg !14602

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14603
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14267, metadata !DIExpression()) #23, !dbg !14598
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14604
  br i1 %13, label %24, label %14, !dbg !14603

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14267, metadata !DIExpression()) #23, !dbg !14598
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14267, metadata !DIExpression()) #23, !dbg !14598
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14606
  %18 = icmp sgt i32 %17, 0, !dbg !14607
  br i1 %18, label %19, label %21, !dbg !14608

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14609
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14610
  br label %26, !dbg !14611

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14604
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14267, metadata !DIExpression()) #23, !dbg !14598
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14604
  br i1 %23, label %24, label %14, !dbg !14603, !llvm.loop !14612

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14614
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14615
  br label %26, !dbg !14616

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14617
  br label %27, !dbg !14618

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14622, metadata !DIExpression()), !dbg !14623
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14624
  br i1 %2, label %6, label %3, !dbg !14625

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14626
  %5 = xor i1 %4, true, !dbg !14625
  br label %6, !dbg !14625

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 0, metadata !14631, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14636
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14638, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14636
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14641
  br i1 %3, label %5, label %4, !dbg !14642

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14643
  unreachable, !dbg !14643

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14636
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14644
  call void @llvm.dbg.value(metadata i32 undef, metadata !14633, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14631, metadata !DIExpression()), !dbg !14635
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14645
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14648
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14650
  br i1 %6, label %8, label %7, !dbg !14651

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14652
  unreachable, !dbg !14652

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14638
  call void @llvm.dbg.value(metadata i32 %9, metadata !14049, metadata !DIExpression()) #23, !dbg !14640
  call void @llvm.dbg.value(metadata i32 %9, metadata !14043, metadata !DIExpression()) #23, !dbg !14636
  call void @llvm.dbg.value(metadata i32 %9, metadata !14633, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !14653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14655, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !14631, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14631, metadata !DIExpression()), !dbg !14635
  ret void, !dbg !14656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()), !dbg !14661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14662
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14664, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14666
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14666
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14662
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14667
  br i1 %3, label %5, label %4, !dbg !14668

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14669
  unreachable, !dbg !14669

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14664
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #23, !dbg !14666
  call void @llvm.dbg.value(metadata i32 %6, metadata !14043, metadata !DIExpression()) #23, !dbg !14662
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14670
  call void @llvm.dbg.value(metadata i32 %6, metadata !14660, metadata !DIExpression()), !dbg !14661
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14671
  br i1 %7, label %8, label %12, !dbg !14673

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14674
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14677
  br i1 %9, label %11, label %10, !dbg !14678

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14679
  unreachable, !dbg !14679

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()) #23, !dbg !14680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14682, !srcloc !14091
  br label %14, !dbg !14683

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.289(%struct.k_thread* noundef %0) #24, !dbg !14684
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14685
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14686
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14686
  br label %14, !dbg !14687

14:                                               ; preds = %12, %11
  ret void, !dbg !14687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14690, metadata !DIExpression()), !dbg !14691
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14692
  %3 = load i8, i8* %2, align 1, !dbg !14692
  %4 = and i8 %3, 4, !dbg !14693
  %5 = icmp eq i8 %4, 0, !dbg !14694
  ret i1 %5, !dbg !14695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.289(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14696 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14698, metadata !DIExpression()), !dbg !14699
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14700
  %3 = load i8, i8* %2, align 1, !dbg !14701
  %4 = and i8 %3, -5, !dbg !14701
  store i8 %4, i8* %2, align 1, !dbg !14701
  ret void, !dbg !14702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14703 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14706, metadata !DIExpression()), !dbg !14707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14705, metadata !DIExpression()), !dbg !14707
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14708
  br i1 %4, label %5, label %12, !dbg !14710

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14711
  br i1 %6, label %7, label %12, !dbg !14712

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14718, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14722, metadata !DIExpression()) #23, !dbg !14727
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14729
  br i1 %8, label %10, label %9, !dbg !14732

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !14733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !14733
  unreachable, !dbg !14733

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14713, metadata !DIExpression()) #23, !dbg !14719
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14735
  br label %16, !dbg !14736

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14076, metadata !DIExpression()) #23, !dbg !14737
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14740
  br i1 %13, label %15, label %14, !dbg !14741

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14742
  unreachable, !dbg !14742

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14071, metadata !DIExpression()) #23, !dbg !14737
  call void @llvm.dbg.value(metadata i32 %3, metadata !14085, metadata !DIExpression()) #23, !dbg !14743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14745, !srcloc !14091
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14751, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 %0, metadata !14753, metadata !DIExpression()), !dbg !14758
  %2 = icmp eq i32 %0, 0, !dbg !14760
  br i1 %2, label %3, label %6, !dbg !14761

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14762, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !14770
  %5 = icmp eq i32 %4, 0, !dbg !14771
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14752
  ret i1 %7, !dbg !14772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14773 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14776
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14775, metadata !DIExpression()), !dbg !14777
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14778
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14779
  ret i1 %3, !dbg !14780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14783, metadata !DIExpression()), !dbg !14785
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %2, metadata !14784, metadata !DIExpression()), !dbg !14785
  ret i32 %2, !dbg !14787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14790, metadata !DIExpression()), !dbg !14794
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14795
  call void @llvm.dbg.value(metadata i32 0, metadata !14791, metadata !DIExpression()), !dbg !14796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14797
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14799, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14797
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14802
  br i1 %4, label %6, label %5, !dbg !14803

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14804
  unreachable, !dbg !14804

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14799
  call void @llvm.dbg.value(metadata i32 %7, metadata !14049, metadata !DIExpression()) #23, !dbg !14801
  call void @llvm.dbg.value(metadata i32 %7, metadata !14043, metadata !DIExpression()) #23, !dbg !14797
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %7, metadata !14793, metadata !DIExpression()), !dbg !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()), !dbg !14796
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14806
  br i1 %8, label %9, label %13, !dbg !14810

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()) #23, !dbg !14811
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14814
  %11 = load i8, i8* %10, align 1, !dbg !14815
  %12 = and i8 %11, 127, !dbg !14815
  store i8 %12, i8* %10, align 1, !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14237, metadata !DIExpression()) #23, !dbg !14816
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14818
  br label %13, !dbg !14819

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14820
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14821
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14822
  %16 = zext i1 %15 to i32, !dbg !14822
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14824
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14826
  br i1 %17, label %19, label %18, !dbg !14827

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14828
  unreachable, !dbg !14828

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14071, metadata !DIExpression()) #23, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %7, metadata !14085, metadata !DIExpression()) #23, !dbg !14829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14831, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !14791, metadata !DIExpression()), !dbg !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()), !dbg !14796
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14832
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14834
  br i1 %21, label %22, label %23, !dbg !14835

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14836
  br label %23, !dbg !14838

23:                                               ; preds = %22, %19
  ret void, !dbg !14839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14842, metadata !DIExpression()), !dbg !14843
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14844
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14845
  ret i32 %3, !dbg !14846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14849, metadata !DIExpression()), !dbg !14850
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14851
  %3 = load i8, i8* %2, align 1, !dbg !14852
  %4 = or i8 %3, 16, !dbg !14852
  store i8 %4, i8* %2, align 1, !dbg !14852
  ret void, !dbg !14853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14854 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14855, !srcloc !14052
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %2, metadata !14049, metadata !DIExpression()) #23, !dbg !14857
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14857
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14858
  ret void, !dbg !14859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14862, metadata !DIExpression()), !dbg !14863
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14864
  br i1 %2, label %3, label %5, !dbg !14866

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14867
  br label %6, !dbg !14869

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14085, metadata !DIExpression()) #23, !dbg !14870
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14873, !srcloc !14091
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()), !dbg !14879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14880
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14882, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14880
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14885
  br i1 %3, label %5, label %4, !dbg !14886

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14887
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14887
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14887
  unreachable, !dbg !14887

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14882
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #23, !dbg !14884
  call void @llvm.dbg.value(metadata i32 %6, metadata !14043, metadata !DIExpression()) #23, !dbg !14880
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14888
  call void @llvm.dbg.value(metadata i32 %6, metadata !14878, metadata !DIExpression()), !dbg !14879
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14889
  br i1 %7, label %12, label %8, !dbg !14891

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14892
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14892
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14895
  br i1 %9, label %11, label %10, !dbg !14896

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14897
  unreachable, !dbg !14897

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()) #23, !dbg !14892
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()) #23, !dbg !14898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14900, !srcloc !14091
  br label %14, !dbg !14901

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14902
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14903
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14904
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14904
  br label %14, !dbg !14905

14:                                               ; preds = %12, %11
  ret void, !dbg !14905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14908, metadata !DIExpression()), !dbg !14909
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14910
  %3 = load i8, i8* %2, align 1, !dbg !14910
  %4 = and i8 %3, 16, !dbg !14911
  %5 = icmp ne i8 %4, 0, !dbg !14912
  ret i1 %5, !dbg !14913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14916, metadata !DIExpression()), !dbg !14917
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14918
  %3 = load i8, i8* %2, align 1, !dbg !14919
  %4 = and i8 %3, -17, !dbg !14919
  store i8 %4, i8* %2, align 1, !dbg !14919
  ret void, !dbg !14920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14921 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14931, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14930, metadata !DIExpression()), !dbg !14935
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14936
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14936
  br i1 %5, label %9, label %6, !dbg !14936

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14936
  br i1 %7, label %9, label %8, !dbg !14939

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 773) #25, !dbg !14940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 773) #25, !dbg !14940
  unreachable, !dbg !14940

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14932, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14943
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14945, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !14947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14943
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14948
  br i1 %11, label %13, label %12, !dbg !14949

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14950
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14950
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !14950
  unreachable, !dbg !14950

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !14943
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14951
  call void @llvm.dbg.value(metadata i32 undef, metadata !14934, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14932, metadata !DIExpression()), !dbg !14942
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !14955
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14957
  br i1 %14, label %16, label %15, !dbg !14958

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14959
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !14959
  unreachable, !dbg !14959

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14945
  call void @llvm.dbg.value(metadata i32 %17, metadata !14049, metadata !DIExpression()) #23, !dbg !14947
  call void @llvm.dbg.value(metadata i32 %17, metadata !14043, metadata !DIExpression()) #23, !dbg !14943
  call void @llvm.dbg.value(metadata i32 %17, metadata !14934, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14955
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !14960
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14962, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !14932, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14932, metadata !DIExpression()), !dbg !14942
  ret void, !dbg !14963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()), !dbg !14967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14968
  %3 = load i8, i8* %2, align 1, !dbg !14968
  %4 = and i8 %3, 1, !dbg !14969
  %5 = icmp ne i8 %4, 0, !dbg !14970
  ret i1 %5, !dbg !14971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14972 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14976, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14974, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14975, metadata !DIExpression()), !dbg !14977
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14978
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14979
  ret void, !dbg !14980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14981 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()), !dbg !14987
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14986, metadata !DIExpression()), !dbg !14987
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14988
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14989
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14990
  br i1 %3, label %24, label %4, !dbg !14992

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14993
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14995
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14996
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14260, metadata !DIExpression()) #23, !dbg !14997
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14266, metadata !DIExpression()) #23, !dbg !14997
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14999
  br i1 %7, label %8, label %9, !dbg !15000

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !15001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !15001
  unreachable, !dbg !15001

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef nonnull %6) #25, !dbg !15002
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14267, metadata !DIExpression()) #23, !dbg !14997
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15003
  br i1 %11, label %22, label %12, !dbg !15002

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14267, metadata !DIExpression()) #23, !dbg !14997
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15004
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14267, metadata !DIExpression()) #23, !dbg !14997
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15005
  %16 = icmp sgt i32 %15, 0, !dbg !15006
  br i1 %16, label %17, label %19, !dbg !15007

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15008
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15009
  br label %24, !dbg !15010

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15003
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14267, metadata !DIExpression()) #23, !dbg !14997
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15003
  br i1 %21, label %22, label %12, !dbg !15002, !llvm.loop !15011

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15013
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15014
  br label %24, !dbg !15015

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15017 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15022, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15021, metadata !DIExpression()), !dbg !15023
  %4 = icmp eq i64 %3, -1, !dbg !15024
  br i1 %4, label %6, label %5, !dbg !15026

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.293(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15027
  br label %6, !dbg !15029

6:                                                ; preds = %5, %2
  ret void, !dbg !15030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.293(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15031 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15034, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()), !dbg !15035
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15036
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15037
  ret void, !dbg !15038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15039 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15041, metadata !DIExpression()), !dbg !15049
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15050
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15042, metadata !DIExpression()), !dbg !15049
  call void @llvm.dbg.value(metadata i32 0, metadata !15043, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15052
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15054, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15052
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15057
  br i1 %5, label %7, label %6, !dbg !15058

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15059
  unreachable, !dbg !15059

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15052
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15045, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i32 undef, metadata !15043, metadata !DIExpression()), !dbg !15051
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15061
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15062
  %10 = load i8, i8* %9, align 1, !dbg !15062
  %11 = and i8 %10, 40, !dbg !15063
  %12 = icmp eq i8 %11, 0, !dbg !15063
  call void @llvm.dbg.value(metadata i1 %12, metadata !15046, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15064
  br i1 %12, label %13, label %20, !dbg !15065

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15066
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15066
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15066
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15070
  br i1 %17, label %19, label %18, !dbg !15071

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15072
  br label %19, !dbg !15074

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.289(%struct.k_thread* noundef nonnull %3) #24, !dbg !15075
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15076
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15077
  br label %20, !dbg !15078

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15079
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15081
  br i1 %21, label %23, label %22, !dbg !15082

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15083
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15083
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15083
  unreachable, !dbg !15083

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15054
  call void @llvm.dbg.value(metadata i32 %24, metadata !14049, metadata !DIExpression()) #23, !dbg !15056
  call void @llvm.dbg.value(metadata i32 %24, metadata !14043, metadata !DIExpression()) #23, !dbg !15052
  call void @llvm.dbg.value(metadata i32 %24, metadata !15045, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15086, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !15043, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i32 undef, metadata !15043, metadata !DIExpression()), !dbg !15051
  ret void, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15090, metadata !DIExpression()), !dbg !15091
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15092
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15093
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15094
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15095
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15096
  ret void, !dbg !15097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15098 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15104
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15104
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15104
  br i1 %4, label %5, label %6, !dbg !15107

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 726) #25, !dbg !15108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 726) #25, !dbg !15108
  unreachable, !dbg !15108

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15113, metadata !DIExpression()), !dbg !15114
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15115
  %3 = load i8, i8* %2, align 1, !dbg !15116
  %4 = and i8 %3, -3, !dbg !15116
  store i8 %4, i8* %2, align 1, !dbg !15116
  ret void, !dbg !15117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15120, metadata !DIExpression()), !dbg !15121
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15122
  br i1 %2, label %3, label %7, !dbg !15124

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()) #23, !dbg !15125
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15128
  %5 = load i8, i8* %4, align 1, !dbg !15129
  %6 = and i8 %5, 127, !dbg !15129
  store i8 %6, i8* %4, align 1, !dbg !15129
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14237, metadata !DIExpression()) #23, !dbg !15130
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15132
  br label %7, !dbg !15133

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15134
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15135
  %10 = zext i1 %9 to i32, !dbg !15135
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15136
  ret void, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15140, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15142
  %3 = load i8, i8* %2, align 1, !dbg !15143
  %4 = or i8 %3, 2, !dbg !15143
  store i8 %4, i8* %2, align 1, !dbg !15143
  ret void, !dbg !15144
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15145 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15147, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i32 0, metadata !15148, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15153
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15155, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15153
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15158
  br i1 %3, label %5, label %4, !dbg !15159

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15160
  unreachable, !dbg !15160

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15153
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !15150, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()), !dbg !15152
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15165
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15167
  br i1 %6, label %8, label %7, !dbg !15168

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15169
  unreachable, !dbg !15169

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15155
  call void @llvm.dbg.value(metadata i32 %9, metadata !14049, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 %9, metadata !14043, metadata !DIExpression()) #23, !dbg !15153
  call void @llvm.dbg.value(metadata i32 %9, metadata !15150, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15165
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15170
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15172, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !15148, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()), !dbg !15152
  ret void, !dbg !15173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15174 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15180, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.value(metadata i32 %0, metadata !15178, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15179, metadata !DIExpression()), !dbg !15185
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15186
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15187
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15188
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15189
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %6, metadata !15181, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.value(metadata i32 0, metadata !15182, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15192
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15194, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15192
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15197
  br i1 %8, label %10, label %9, !dbg !15198

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15199
  unreachable, !dbg !15199

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15192
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !15184, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.value(metadata i32 undef, metadata !15182, metadata !DIExpression()), !dbg !15191
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15201
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15205
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15206
  br i1 %13, label %14, label %15, !dbg !15207

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15208
  br label %15, !dbg !15210

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15211
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15213
  br i1 %16, label %18, label %17, !dbg !15214

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15215
  unreachable, !dbg !15215

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15194
  call void @llvm.dbg.value(metadata i32 %19, metadata !14049, metadata !DIExpression()) #23, !dbg !15196
  call void @llvm.dbg.value(metadata i32 %19, metadata !14043, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 %19, metadata !15184, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15211
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15218, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !15182, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.value(metadata i32 undef, metadata !15182, metadata !DIExpression()), !dbg !15191
  ret i32 %6, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15220 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15225, metadata !DIExpression()), !dbg !15228
  call void @llvm.dbg.value(metadata i64 undef, metadata !15227, metadata !DIExpression()), !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15224, metadata !DIExpression()), !dbg !15228
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15226, metadata !DIExpression()), !dbg !15228
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15229
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15230
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15231
  br i1 %6, label %7, label %8, !dbg !15234

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 846) #25, !dbg !15235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 846) #25, !dbg !15235
  unreachable, !dbg !15235

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15237
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15239, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15237
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15242
  br i1 %10, label %12, label %11, !dbg !15243

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15244
  unreachable, !dbg !15244

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15241
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15237
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15245
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15246
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14722, metadata !DIExpression()) #23, !dbg !15248
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15250
  br i1 %14, label %16, label %15, !dbg !15251

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15252
  unreachable, !dbg !15252

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14718, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14722, metadata !DIExpression()) #23, !dbg !15255
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15257
  br i1 %17, label %19, label %18, !dbg !15258

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15259
  unreachable, !dbg !15259

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14713, metadata !DIExpression()) #23, !dbg !15253
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15260
  ret i32 %21, !dbg !15261
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15262 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15266, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15267, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 0, metadata !15268, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15273
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15275, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15273
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15278
  br i1 %3, label %5, label %4, !dbg !15279

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15280
  unreachable, !dbg !15280

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15273
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !15270, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15267, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 undef, metadata !15268, metadata !DIExpression()), !dbg !15272
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15282
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15267, metadata !DIExpression()), !dbg !15271
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15285
  br i1 %8, label %10, label %9, !dbg !15287

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15288
  br label %10, !dbg !15290

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15291
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15293
  br i1 %11, label %13, label %12, !dbg !15294

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15295
  unreachable, !dbg !15295

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %14, metadata !14049, metadata !DIExpression()) #23, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %14, metadata !14043, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %14, metadata !15270, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15298, !srcloc !14091
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15267, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 undef, metadata !15268, metadata !DIExpression()), !dbg !15272
  ret %struct.k_thread* %7, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15302, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 0, metadata !15304, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15309
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15311, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15309
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15314
  br i1 %3, label %5, label %4, !dbg !15315

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15316
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15316
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15316
  unreachable, !dbg !15316

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15309
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15317
  call void @llvm.dbg.value(metadata i32 undef, metadata !15306, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15304, metadata !DIExpression()), !dbg !15308
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15318
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15303, metadata !DIExpression()), !dbg !15307
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15321
  br i1 %8, label %11, label %9, !dbg !15323

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15324
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15326
  br label %11, !dbg !15327

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15328
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15330
  br i1 %12, label %14, label %13, !dbg !15331

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15332
  unreachable, !dbg !15332

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %15, metadata !14049, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 %15, metadata !14043, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %15, metadata !15306, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15335, !srcloc !14091
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15304, metadata !DIExpression()), !dbg !15308
  ret %struct.k_thread* %7, !dbg !15336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15339, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15147, metadata !DIExpression()) #23, !dbg !15341
  call void @llvm.dbg.value(metadata i32 0, metadata !15148, metadata !DIExpression()) #23, !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15344
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15346, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15344
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15349
  br i1 %3, label %5, label %4, !dbg !15350

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15351
  unreachable, !dbg !15351

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15344
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15352
  call void @llvm.dbg.value(metadata i32 undef, metadata !15150, metadata !DIExpression()) #23, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15343
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15354
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15356
  br i1 %6, label %8, label %7, !dbg !15357

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15358
  unreachable, !dbg !15358

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %9, metadata !14049, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %9, metadata !14043, metadata !DIExpression()) #23, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %9, metadata !15150, metadata !DIExpression()) #23, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15361, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !15148, metadata !DIExpression()) #23, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15343
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15362
  ret void, !dbg !15363
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15366, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 %1, metadata !15367, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i8 0, metadata !15368, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 0, metadata !15369, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15374
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15376, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15374
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15379
  br i1 %4, label %6, label %5, !dbg !15380

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15381
  unreachable, !dbg !15381

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15374
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata i8 poison, metadata !15368, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !15369, metadata !DIExpression()), !dbg !15373
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15383
  call void @llvm.dbg.value(metadata i1 %9, metadata !15368, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15372
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15386

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()) #23, !dbg !15387
  %14 = load i8, i8* %7, align 1, !dbg !15393
  %15 = and i8 %14, 127, !dbg !15393
  store i8 %15, i8* %7, align 1, !dbg !15393
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14237, metadata !DIExpression()) #23, !dbg !15394
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15396
  store i8 %12, i8* %11, align 2, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14246, metadata !DIExpression()) #23, !dbg !15398
  %16 = load i8, i8* %7, align 1, !dbg !15400
  %17 = or i8 %16, -128, !dbg !15400
  store i8 %17, i8* %7, align 1, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14253, metadata !DIExpression()) #23, !dbg !15401
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14260, metadata !DIExpression()) #23, !dbg !15403
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14266, metadata !DIExpression()) #23, !dbg !15403
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15405
  br i1 %18, label %19, label %20, !dbg !15406

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !15407
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !15407
  unreachable, !dbg !15407

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15408
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14267, metadata !DIExpression()) #23, !dbg !15403
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15409
  br i1 %22, label %32, label %23, !dbg !15408

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14267, metadata !DIExpression()) #23, !dbg !15403
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14267, metadata !DIExpression()) #23, !dbg !15403
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15411
  %27 = icmp sgt i32 %26, 0, !dbg !15412
  br i1 %27, label %28, label %29, !dbg !15413

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15414
  br label %33, !dbg !15415

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15409
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14267, metadata !DIExpression()) #23, !dbg !15403
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15409
  br i1 %31, label %32, label %23, !dbg !15408, !llvm.loop !15416

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15418
  br label %33, !dbg !15419

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15420
  br label %35, !dbg !15421

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15422
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15424
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15426
  br i1 %36, label %38, label %37, !dbg !15427

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15428
  unreachable, !dbg !15428

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15376
  call void @llvm.dbg.value(metadata i32 %39, metadata !14049, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 %39, metadata !14043, metadata !DIExpression()) #23, !dbg !15374
  call void @llvm.dbg.value(metadata i32 %39, metadata !15371, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15431, !srcloc !14091
  call void @llvm.dbg.value(metadata i8 poison, metadata !15368, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !15369, metadata !DIExpression()), !dbg !15373
  ret i1 %9, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15437, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i32 %1, metadata !15438, metadata !DIExpression()), !dbg !15440
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15441
  call void @llvm.dbg.value(metadata i1 %3, metadata !15439, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15440
  br i1 %3, label %4, label %12, !dbg !15442

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15444
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15445
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15445
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15445
  %9 = load i8, i8* %8, align 1, !dbg !15445
  %10 = icmp eq i8 %9, 0, !dbg !15446
  br i1 %10, label %11, label %12, !dbg !15447

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15448
  br label %12, !dbg !15450

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15452 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15454, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15458
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15460, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15458
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15463
  br i1 %2, label %4, label %3, !dbg !15464

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15465
  unreachable, !dbg !15465

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15458
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 undef, metadata !15456, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()), !dbg !15457
  tail call fastcc void @z_sched_lock() #24, !dbg !15467
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15470
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15472
  br i1 %5, label %7, label %6, !dbg !15473

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15474
  unreachable, !dbg !15474

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15460
  call void @llvm.dbg.value(metadata i32 %8, metadata !14049, metadata !DIExpression()) #23, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %8, metadata !14043, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %8, metadata !15456, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15470
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15477, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !15454, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()), !dbg !15457
  ret void, !dbg !15478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15479 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15480, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %1, metadata !14765, metadata !DIExpression()) #23, !dbg !15485
  %2 = icmp eq i32 %1, 0, !dbg !15486
  br i1 %2, label %4, label %3, !dbg !15487

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.307, i32 0, i32 0), i32 noundef 253) #25, !dbg !15488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.307, i32 0, i32 0), i32 noundef 253) #25, !dbg !15488
  unreachable, !dbg !15488

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15490
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15490
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15490
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15490
  %9 = load i8, i8* %8, align 1, !dbg !15490
  %10 = icmp eq i8 %9, 1, !dbg !15490
  br i1 %10, label %11, label %12, !dbg !15493

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.307, i32 0, i32 0), i32 noundef 254) #25, !dbg !15494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.307, i32 0, i32 0), i32 noundef 254) #25, !dbg !15494
  unreachable, !dbg !15494

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15496
  store i8 %13, i8* %8, align 1, !dbg !15496
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15497, !srcloc !15499
  ret void, !dbg !15500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15501 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15503, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15507
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15509, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15507
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15512
  br i1 %2, label %4, label %3, !dbg !15513

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15514
  unreachable, !dbg !15514

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15507
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !15505, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 undef, metadata !15503, metadata !DIExpression()), !dbg !15506
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15516
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15516
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15516
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15516
  %9 = load i8, i8* %8, align 1, !dbg !15516
  %10 = icmp eq i8 %9, 0, !dbg !15516
  br i1 %10, label %11, label %12, !dbg !15521

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 999) #25, !dbg !15522
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15522
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 999) #25, !dbg !15522
  unreachable, !dbg !15522

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15524, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %13, metadata !14765, metadata !DIExpression()) #23, !dbg !15529
  %14 = icmp eq i32 %13, 0, !dbg !15530
  br i1 %14, label %16, label %15, !dbg !15531

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15532
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15532
  unreachable, !dbg !15532

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15534
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15535
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15535
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15535
  %21 = load i8, i8* %20, align 1, !dbg !15536
  %22 = add i8 %21, 1, !dbg !15536
  store i8 %22, i8* %20, align 1, !dbg !15536
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15537
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !15538
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15540
  br i1 %23, label %25, label %24, !dbg !15541

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15542
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15542
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !15542
  unreachable, !dbg !15542

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15509
  call void @llvm.dbg.value(metadata i32 %26, metadata !14049, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %26, metadata !14043, metadata !DIExpression()) #23, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %26, metadata !15505, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !15543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15545, !srcloc !14091
  call void @llvm.dbg.value(metadata i32 1, metadata !15503, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata i32 undef, metadata !15503, metadata !DIExpression()), !dbg !15506
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15546
  ret void, !dbg !15547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15548 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15549
  ret %struct.k_thread* %1, !dbg !15550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15551 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15555, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15556, metadata !DIExpression()), !dbg !15560
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15561
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15557, metadata !DIExpression()), !dbg !15560
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15558, metadata !DIExpression()), !dbg !15560
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15563
  call void @llvm.dbg.value(metadata i32 %5, metadata !15559, metadata !DIExpression()), !dbg !15560
  %6 = icmp sgt i32 %5, 0, !dbg !15564
  br i1 %6, label %17, label %7, !dbg !15566

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15567
  br i1 %8, label %17, label %9, !dbg !15569

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15570
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15570
  %12 = load i32, i32* %11, align 8, !dbg !15570
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15572
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15572
  %15 = load i32, i32* %14, align 8, !dbg !15572
  %16 = icmp ult i32 %12, %15, !dbg !15573
  br label %17, !dbg !15574

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15575
  ret i1 %18, !dbg !15576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15577 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15594, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15595, metadata !DIExpression()), !dbg !15609
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15610
  br i1 %4, label %5, label %6, !dbg !15613

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15614
  unreachable, !dbg !15614

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15616
  %8 = load i32, i32* %7, align 4, !dbg !15617
  %9 = add nsw i32 %8, 1, !dbg !15617
  store i32 %9, i32* %7, align 4, !dbg !15617
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15618
  store i32 %8, i32* %10, align 8, !dbg !15619
  %11 = load i32, i32* %7, align 4, !dbg !15620
  %12 = icmp eq i32 %11, 0, !dbg !15621
  br i1 %12, label %13, label %35, !dbg !15622

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15623
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15623
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15597, metadata !DIExpression()), !dbg !15623
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15623
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15623
  %17 = load i32, i32* %16, align 4, !dbg !15623
  %18 = shl i32 %17, 2, !dbg !15623
  %19 = alloca i8, i32 %18, align 8, !dbg !15623
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15623
  store i8* %19, i8** %20, align 4, !dbg !15623
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15623
  %22 = alloca i8, i32 %17, align 8, !dbg !15623
  store i8* %22, i8** %21, align 4, !dbg !15623
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15623
  store i32 -1, i32* %23, align 4, !dbg !15623
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15624
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15606, metadata !DIExpression()), !dbg !15625
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15596, metadata !DIExpression()), !dbg !15609
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15626
  br i1 %25, label %26, label %27, !dbg !15623

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15626
  br label %35, !dbg !15627

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15596, metadata !DIExpression()), !dbg !15609
  %29 = load i32, i32* %7, align 4, !dbg !15628
  %30 = add nsw i32 %29, 1, !dbg !15628
  store i32 %30, i32* %7, align 4, !dbg !15628
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15630
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15630
  store i32 %29, i32* %32, align 8, !dbg !15631
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15624
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15606, metadata !DIExpression()), !dbg !15625
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15596, metadata !DIExpression()), !dbg !15609
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15626
  br i1 %34, label %26, label %27, !dbg !15623, !llvm.loop !15632

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15634
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15635
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15636
  ret void, !dbg !15637
}

; Function Attrs: optsize
declare !dbg !15638 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15643 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15646 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15648, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15649, metadata !DIExpression()), !dbg !15650
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15651
  br i1 %3, label %4, label %5, !dbg !15654

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15655
  unreachable, !dbg !15655

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15657
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15658
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15659
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15660
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15660
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15662
  br i1 %10, label %11, label %13, !dbg !15663

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15664
  store i32 0, i32* %12, align 4, !dbg !15666
  br label %13, !dbg !15667

13:                                               ; preds = %11, %5
  ret void, !dbg !15668
}

; Function Attrs: optsize
declare !dbg !15669 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15670 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15674, metadata !DIExpression()), !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15675, metadata !DIExpression()), !dbg !15677
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15678
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15679
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15676, metadata !DIExpression()), !dbg !15677
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15675, metadata !DIExpression()), !dbg !15677
  ret %struct.k_thread* %4, !dbg !15680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15681 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15685, metadata !DIExpression()), !dbg !15686
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15687
  ret %struct.rbnode* %2, !dbg !15688
}

; Function Attrs: optsize
declare !dbg !15689 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15702, metadata !DIExpression()), !dbg !15706
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15707
  %3 = load i32, i32* %2, align 4, !dbg !15707
  %4 = icmp eq i32 %3, 0, !dbg !15709
  br i1 %4, label %10, label %5, !dbg !15710

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15703, metadata !DIExpression()), !dbg !15706
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15711, !range !7614
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15712
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15704, metadata !DIExpression()), !dbg !15706
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef %7) #24, !dbg !15713
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15705, metadata !DIExpression()), !dbg !15706
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15703, metadata !DIExpression()), !dbg !15706
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15706
  ret %struct.k_thread* %11, !dbg !15714
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15715 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15719, metadata !DIExpression()), !dbg !15722
  call void @llvm.dbg.value(metadata i32 0, metadata !15720, metadata !DIExpression()), !dbg !15722
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.312(%struct._wait_q_t* noundef %0) #24, !dbg !15723
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15721, metadata !DIExpression()), !dbg !15722
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15724
  br i1 %3, label %8, label %4, !dbg !15725

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15726
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15728
  call void @llvm.dbg.value(metadata i32 1, metadata !15720, metadata !DIExpression()), !dbg !15722
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.312(%struct._wait_q_t* noundef %0) #24, !dbg !15723
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15721, metadata !DIExpression()), !dbg !15722
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15724
  br i1 %7, label %8, label %4, !dbg !15725, !llvm.loop !15729

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15722
  ret i32 %9, !dbg !15731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.312(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15732 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15734, metadata !DIExpression()), !dbg !15735
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15736
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef %2) #24, !dbg !15737
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15738
  ret %struct.k_thread* %4, !dbg !15739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15749, metadata !DIExpression()), !dbg !15750
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15751
  tail call fastcc void @sys_dlist_init.313(%struct._dnode* noundef nonnull %2) #24, !dbg !15752
  ret void, !dbg !15753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.313(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15754 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15758, metadata !DIExpression()), !dbg !15759
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15760
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15761
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15762
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15763
  ret void, !dbg !15764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15765 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15766
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15767
  ret void, !dbg !15768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15774, metadata !DIExpression()), !dbg !15775
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15776
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15776
  %4 = load i8, i8* %3, align 2, !dbg !15776
  %5 = sext i8 %4 to i32, !dbg !15777
  ret i32 %5, !dbg !15778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15783, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata i32 %1, metadata !15784, metadata !DIExpression()), !dbg !15786
  %3 = add i32 %1, 16, !dbg !15787
  %4 = icmp ult i32 %3, 31, !dbg !15787
  br i1 %4, label %6, label %5, !dbg !15787

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.317, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15791
  unreachable, !dbg !15791

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15793, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %7, metadata !14765, metadata !DIExpression()) #23, !dbg !15798
  %8 = icmp eq i32 %7, 0, !dbg !15799
  br i1 %8, label %10, label %9, !dbg !15800

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15801
  unreachable, !dbg !15801

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15785, metadata !DIExpression()), !dbg !15786
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15803
  ret void, !dbg !15804
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15805 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15806
  br i1 %1, label %8, label %2, !dbg !15807

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15808
  br i1 %3, label %8, label %4, !dbg !15809

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15810
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15811
  %7 = xor i1 %6, true, !dbg !15809
  br label %8, !dbg !15809

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15813 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15814, !range !6777
  %2 = icmp eq i8 %1, 0, !dbg !15814
  ret i1 %2, !dbg !15815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15816 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15819, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %1, metadata !14765, metadata !DIExpression()) #23, !dbg !15824
  %2 = icmp eq i32 %1, 0, !dbg !15825
  br i1 %2, label %4, label %3, !dbg !15826

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15827
  unreachable, !dbg !15827

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15829
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15831, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15829
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15834
  br i1 %6, label %8, label %7, !dbg !15835

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15836
  unreachable, !dbg !15836

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15829
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !15818, metadata !DIExpression()), !dbg !15838
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14229, metadata !DIExpression()) #23, !dbg !15842
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15844
  %11 = load i8, i8* %10, align 1, !dbg !15845
  %12 = and i8 %11, 127, !dbg !15845
  store i8 %12, i8* %10, align 1, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14237, metadata !DIExpression()) #23, !dbg !15846
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15848
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14246, metadata !DIExpression()) #23, !dbg !15850
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15852
  %15 = load i8, i8* %14, align 1, !dbg !15853
  %16 = or i8 %15, -128, !dbg !15853
  store i8 %16, i8* %14, align 1, !dbg !15853
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14253, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14260, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14266, metadata !DIExpression()) #23, !dbg !15856
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15858
  br i1 %17, label %18, label %19, !dbg !15859

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !15860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 186) #25, !dbg !15860
  unreachable, !dbg !15860

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15861
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14267, metadata !DIExpression()) #23, !dbg !15856
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15862
  br i1 %21, label %32, label %22, !dbg !15861

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14267, metadata !DIExpression()) #23, !dbg !15856
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15863
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14267, metadata !DIExpression()) #23, !dbg !15856
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15864
  %26 = icmp sgt i32 %25, 0, !dbg !15865
  br i1 %26, label %27, label %29, !dbg !15866

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15867
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15868
  br label %34, !dbg !15869

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15862
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14267, metadata !DIExpression()) #23, !dbg !15856
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15862
  br i1 %31, label %32, label %22, !dbg !15861, !llvm.loop !15870

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15872
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15873
  br label %34, !dbg !15874

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15875
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !15876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14718, metadata !DIExpression()) #23, !dbg !15876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14722, metadata !DIExpression()) #23, !dbg !15878
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15880
  br i1 %35, label %37, label %36, !dbg !15881

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15882
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15882
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15882
  unreachable, !dbg !15882

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15831
  call void @llvm.dbg.value(metadata i32 %38, metadata !14049, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 %38, metadata !14043, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata i32 %38, metadata !15818, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !15876
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15883
  ret void, !dbg !15884
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15885 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15889, metadata !DIExpression()), !dbg !15892
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15893, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15898
  %4 = icmp eq i32 %3, 0, !dbg !15899
  br i1 %4, label %6, label %5, !dbg !15900

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15901
  unreachable, !dbg !15901

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15903
  br i1 %7, label %8, label %10, !dbg !15905

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15906
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15908
  br label %15, !dbg !15909

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15890, metadata !DIExpression()), !dbg !15892
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15910
  %12 = sext i32 %11 to i64, !dbg !15910
  call void @llvm.dbg.value(metadata i64 %12, metadata !15890, metadata !DIExpression()), !dbg !15892
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15911
  %14 = trunc i64 %13 to i32, !dbg !15911
  call void @llvm.dbg.value(metadata i32 %14, metadata !15891, metadata !DIExpression()), !dbg !15892
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15892
  ret i32 %16, !dbg !15912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15917, metadata !DIExpression()), !dbg !15918
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15919, !srcloc !15921
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15922
  ret void, !dbg !15923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15924 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15928, metadata !DIExpression()), !dbg !15932
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15933, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %2, metadata !14765, metadata !DIExpression()) #23, !dbg !15938
  %3 = icmp eq i32 %2, 0, !dbg !15939
  br i1 %3, label %5, label %4, !dbg !15940

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15941
  unreachable, !dbg !15941

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15943
  br i1 %6, label %7, label %8, !dbg !15945

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15946
  br label %43, !dbg !15948

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15930, metadata !DIExpression()), !dbg !15932
  %9 = icmp sgt i64 %0, -3, !dbg !15949
  br i1 %9, label %10, label %14, !dbg !15951

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15952
  %12 = trunc i64 %0 to i32, !dbg !15954
  %13 = add i32 %11, %12, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %13, metadata !15929, metadata !DIExpression()), !dbg !15932
  br label %17, !dbg !15955

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15956
  %16 = sub i32 -2, %15, !dbg !15956
  call void @llvm.dbg.value(metadata i32 %16, metadata !15929, metadata !DIExpression()), !dbg !15932
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15958
  call void @llvm.dbg.value(metadata i32 %18, metadata !15929, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15959
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15961, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !15963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15959
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15964
  br i1 %20, label %22, label %21, !dbg !15965

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !15966
  unreachable, !dbg !15966

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !15959
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15967
  call void @llvm.dbg.value(metadata i32 undef, metadata !15931, metadata !DIExpression()), !dbg !15932
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15968
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15969
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15970
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15971
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15972
  tail call fastcc void @z_add_thread_timeout.293(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15972
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15973
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !15975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14718, metadata !DIExpression()) #23, !dbg !15975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14722, metadata !DIExpression()) #23, !dbg !15977
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15979
  br i1 %27, label %29, label %28, !dbg !15980

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !15981
  unreachable, !dbg !15981

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15961
  call void @llvm.dbg.value(metadata i32 %30, metadata !14049, metadata !DIExpression()) #23, !dbg !15963
  call void @llvm.dbg.value(metadata i32 %30, metadata !14043, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 %30, metadata !15931, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !15975
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15982
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15983
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15983
  br i1 %33, label %34, label %35, !dbg !15986

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.280, i32 0, i32 0)) #25, !dbg !15987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15987
  unreachable, !dbg !15987

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15989
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15990
  %38 = zext i32 %37 to i64, !dbg !15990
  %39 = sub nsw i64 %36, %38, !dbg !15991
  call void @llvm.dbg.value(metadata i64 %39, metadata !15928, metadata !DIExpression()), !dbg !15932
  %40 = icmp sgt i64 %39, 0, !dbg !15992
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15992
  %42 = trunc i64 %41 to i32, !dbg !15992
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15932
  ret i32 %44, !dbg !15993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15994 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15996, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i64 %0, metadata !14097, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 10000, metadata !14100, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 1000, metadata !14101, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i8 1, metadata !14102, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i1 false, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i1 false, metadata !14104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i8 0, metadata !14105, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i1 true, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i64 %0, metadata !14097, metadata !DIExpression()), !dbg !15998
  %2 = udiv i64 %0, 10, !dbg !16000
  ret i64 %2, !dbg !16004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16005 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16006, !srcloc !16008
  tail call void @z_impl_k_yield() #24, !dbg !16009
  ret void, !dbg !16010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16015, metadata !DIExpression()), !dbg !16017
  %2 = sext i32 %0 to i64, !dbg !16018
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16019
  call void @llvm.dbg.value(metadata i64 %3, metadata !16016, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16017
  %4 = shl i64 %3, 32, !dbg !16020
  %5 = ashr exact i64 %4, 32, !dbg !16020
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16021
  call void @llvm.dbg.value(metadata i32 %6, metadata !16016, metadata !DIExpression()), !dbg !16017
  %7 = sext i32 %6 to i64, !dbg !16022
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16023
  %9 = trunc i64 %8 to i32, !dbg !16023
  ret i32 %9, !dbg !16024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16025 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16027, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i64 %0, metadata !14097, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14100, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 10000, metadata !14101, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i8 1, metadata !14102, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i1 false, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i1 true, metadata !14104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i8 0, metadata !14105, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i1 true, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !16029
  %2 = add i64 %0, 99, !dbg !16031
  call void @llvm.dbg.value(metadata i64 %2, metadata !14097, metadata !DIExpression()), !dbg !16029
  %3 = udiv i64 %2, 100, !dbg !16032
  ret i64 %3, !dbg !16033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16034 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16036, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i64 %0, metadata !14097, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i32 10000, metadata !14100, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14101, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i8 1, metadata !14102, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i1 false, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  call void @llvm.dbg.value(metadata i1 false, metadata !14104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  call void @llvm.dbg.value(metadata i8 0, metadata !14105, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i1 true, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  call void @llvm.dbg.value(metadata i1 false, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i64 0, metadata !14108, metadata !DIExpression()), !dbg !16038
  %2 = mul i64 %0, 100, !dbg !16040
  ret i64 %2, !dbg !16042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16043 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16045, metadata !DIExpression()), !dbg !16046
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16047
  br i1 %2, label %14, label %3, !dbg !16049

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16050
  %5 = icmp slt i32 %4, 0, !dbg !16052
  br i1 %5, label %6, label %10, !dbg !16053

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16054
  %8 = load i8, i8* %7, align 1, !dbg !16054
  %9 = icmp eq i8 %8, 16, !dbg !16057
  br i1 %9, label %10, label %14, !dbg !16058

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16059
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16060
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16061, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %11, metadata !14765, metadata !DIExpression()) #23, !dbg !16065
  %12 = icmp eq i32 %11, 0, !dbg !16066
  br i1 %12, label %13, label %14, !dbg !16067

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16068
  br label %14, !dbg !16070

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16074, metadata !DIExpression()), !dbg !16075
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16076
  %3 = load i8, i8* %2, align 1, !dbg !16076
  %4 = and i8 %3, 2, !dbg !16077
  %5 = icmp ne i8 %4, 0, !dbg !16078
  ret i1 %5, !dbg !16079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16080 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16085
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16084, metadata !DIExpression()), !dbg !16086
  ret %struct.k_thread* %1, !dbg !16087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16088 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16089, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %1, metadata !14765, metadata !DIExpression()) #23, !dbg !16092
  %2 = icmp eq i32 %1, 0, !dbg !16093
  br i1 %2, label %3, label %8, !dbg !16094

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16095
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16096
  %6 = icmp ne i32 %5, 0, !dbg !16094
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16098 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16100, metadata !DIExpression()), !dbg !16102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16103
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16105, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16107
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !16107
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !16103
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16108
  br i1 %3, label %5, label %4, !dbg !16109

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !16110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !16110
  unreachable, !dbg !16110

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16105
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #23, !dbg !16107
  call void @llvm.dbg.value(metadata i32 %6, metadata !14043, metadata !DIExpression()) #23, !dbg !16103
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16111
  call void @llvm.dbg.value(metadata i32 %6, metadata !16101, metadata !DIExpression()), !dbg !16102
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16112
  %8 = load i8, i8* %7, align 4, !dbg !16112
  %9 = and i8 %8, 1, !dbg !16114
  %10 = icmp eq i8 %9, 0, !dbg !16115
  br i1 %10, label %15, label %11, !dbg !16116

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !16117
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16120
  br i1 %12, label %14, label %13, !dbg !16121

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16122
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16122
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16122
  unreachable, !dbg !16122

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()) #23, !dbg !16123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16125, !srcloc !14091
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.326, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16126
  unreachable, !dbg !16126

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16130
  %17 = load i8, i8* %16, align 1, !dbg !16130
  %18 = and i8 %17, 8, !dbg !16132
  %19 = icmp eq i8 %18, 0, !dbg !16133
  br i1 %19, label %24, label %20, !dbg !16134

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !16135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !16135
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16138
  br i1 %21, label %23, label %22, !dbg !16139

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16140
  unreachable, !dbg !16140

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()) #23, !dbg !16135
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()) #23, !dbg !16141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16143, !srcloc !14091
  br label %39, !dbg !16144

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16145
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16146
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16148
  br i1 %26, label %27, label %35, !dbg !16149

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16150, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %28, metadata !14765, metadata !DIExpression()) #23, !dbg !16153
  %29 = icmp eq i32 %28, 0, !dbg !16154
  br i1 %29, label %30, label %35, !dbg !16155

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14718, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14722, metadata !DIExpression()) #23, !dbg !16159
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16161
  br i1 %31, label %33, label %32, !dbg !16162

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !16163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !16163
  unreachable, !dbg !16163

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14713, metadata !DIExpression()) #23, !dbg !16156
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.327, i32 0, i32 0)) #25, !dbg !16165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16165
  unreachable, !dbg !16165

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !16169
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16171
  br i1 %36, label %38, label %37, !dbg !16172

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16173
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16173
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16173
  unreachable, !dbg !16173

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()) #23, !dbg !16174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16176, !srcloc !14091
  br label %39, !dbg !16177

39:                                               ; preds = %38, %23
  ret void, !dbg !16177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16180, metadata !DIExpression()), !dbg !16181
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16182
  %3 = load i8, i8* %2, align 1, !dbg !16182
  %4 = and i8 %3, 8, !dbg !16184
  %5 = icmp eq i8 %4, 0, !dbg !16185
  br i1 %5, label %6, label %20, !dbg !16186

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16187
  %8 = or i8 %7, 8, !dbg !16187
  store i8 %8, i8* %2, align 1, !dbg !16187
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16189
  br i1 %9, label %10, label %12, !dbg !16191

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()) #23, !dbg !16192
  %11 = and i8 %8, 95, !dbg !16195
  store i8 %11, i8* %2, align 1, !dbg !16195
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14237, metadata !DIExpression()) #23, !dbg !16196
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16198
  br label %12, !dbg !16199

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16200
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16200
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16202
  br i1 %15, label %17, label %16, !dbg !16203

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16204
  br label %17, !dbg !16206

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16207
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16208
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16209
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16210
  br label %20, !dbg !16211

20:                                               ; preds = %17, %1
  ret void, !dbg !16212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16213 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16217, metadata !DIExpression()), !dbg !16219
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.312(%struct._wait_q_t* noundef %0) #24, !dbg !16220
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16218, metadata !DIExpression()), !dbg !16219
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16221
  br i1 %3, label %10, label %4, !dbg !16222

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16223
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16226, metadata !DIExpression()), !dbg !16232
  call void @llvm.dbg.value(metadata i32 0, metadata !16231, metadata !DIExpression()), !dbg !16232
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16234
  store i32 0, i32* %7, align 4, !dbg !16235
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16236
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.312(%struct._wait_q_t* noundef %0) #24, !dbg !16220
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16218, metadata !DIExpression()), !dbg !16219
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16221
  br i1 %9, label %10, label %4, !dbg !16222, !llvm.loop !16237

10:                                               ; preds = %4, %1
  ret void, !dbg !16239
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16240 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16245, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16244, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16249
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16251, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !16249
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16254
  br i1 %4, label %6, label %5, !dbg !16255

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !16256
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16256
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !16256
  unreachable, !dbg !16256

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16251
  call void @llvm.dbg.value(metadata i32 %7, metadata !14049, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %7, metadata !14043, metadata !DIExpression()) #23, !dbg !16249
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16257
  call void @llvm.dbg.value(metadata i32 %7, metadata !16246, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata i32 0, metadata !16247, metadata !DIExpression()), !dbg !16248
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16258
  %9 = load i8, i8* %8, align 1, !dbg !16258
  %10 = and i8 %9, 8, !dbg !16260
  %11 = icmp eq i8 %10, 0, !dbg !16261
  br i1 %11, label %12, label %35, !dbg !16262

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16245, metadata !DIExpression()), !dbg !16248
  %14 = icmp eq i64 %13, 0, !dbg !16263
  br i1 %14, label %35, label %15, !dbg !16265

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16266
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16268
  br i1 %17, label %35, label %18, !dbg !16269

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16270
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16270
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16271
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16272
  br i1 %22, label %35, label %23, !dbg !16273

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16274, !srcloc !14769
  call void @llvm.dbg.value(metadata i32 %24, metadata !14765, metadata !DIExpression()) #23, !dbg !16280
  %25 = icmp eq i32 %24, 0, !dbg !16281
  br i1 %25, label %27, label %26, !dbg !16282

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.330, i32 0, i32 0)) #25, !dbg !16283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.277, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16283
  unreachable, !dbg !16283

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16285
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16286
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16287
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16288
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()) #23, !dbg !16290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14718, metadata !DIExpression()) #23, !dbg !16290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14722, metadata !DIExpression()) #23, !dbg !16292
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16294
  br i1 %31, label %33, label %32, !dbg !16295

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !16296
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 225) #25, !dbg !16296
  unreachable, !dbg !16296

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14713, metadata !DIExpression()) #23, !dbg !16290
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16297
  call void @llvm.dbg.value(metadata i32 %34, metadata !16247, metadata !DIExpression()), !dbg !16248
  br label %40, !dbg !16298

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16299
  call void @llvm.dbg.value(metadata i32 %36, metadata !16247, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !16300
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16302
  br i1 %37, label %39, label %38, !dbg !16303

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16304
  unreachable, !dbg !16304

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14071, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %7, metadata !14085, metadata !DIExpression()) #23, !dbg !16305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16307, !srcloc !14091
  br label %40, !dbg !16308

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16248
  ret i32 %41, !dbg !16309
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16310 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16314, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 %1, metadata !16315, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i8* %2, metadata !16316, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i8 0, metadata !16318, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 0, metadata !16319, metadata !DIExpression()), !dbg !16323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16324
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16326, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14050, metadata !DIExpression()) #23, !dbg !16328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !16324
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16329
  br i1 %5, label %7, label %6, !dbg !16330

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !16331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.273, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 148) #25, !dbg !16331
  unreachable, !dbg !16331

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()) #23, !dbg !16324
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16332
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()), !dbg !16323
  call void @llvm.dbg.value(metadata i8 poison, metadata !16318, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !16319, metadata !DIExpression()), !dbg !16323
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16333
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16317, metadata !DIExpression()), !dbg !16322
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16336
  br i1 %10, label %15, label %11, !dbg !16338

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16339, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 %1, metadata !16345, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i8* %2, metadata !16346, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16226, metadata !DIExpression()), !dbg !16350
  call void @llvm.dbg.value(metadata i32 %1, metadata !16231, metadata !DIExpression()), !dbg !16350
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16352
  store i32 %1, i32* %12, align 4, !dbg !16353
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16354
  store i8* %2, i8** %13, align 4, !dbg !16355
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16356
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16357
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16358
  call void @llvm.dbg.value(metadata i8 1, metadata !16318, metadata !DIExpression()), !dbg !16322
  br label %15, !dbg !16359

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16318, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !16360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14076, metadata !DIExpression()) #23, !dbg !16360
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16362
  br i1 %16, label %18, label %17, !dbg !16363

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16364
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.272, i32 0, i32 0), i32 noundef 194) #25, !dbg !16364
  unreachable, !dbg !16364

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16322
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16326
  call void @llvm.dbg.value(metadata i32 %20, metadata !14049, metadata !DIExpression()) #23, !dbg !16328
  call void @llvm.dbg.value(metadata i32 %20, metadata !14043, metadata !DIExpression()) #23, !dbg !16324
  call void @llvm.dbg.value(metadata i32 %20, metadata !16321, metadata !DIExpression()), !dbg !16323
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14085, metadata !DIExpression()) #23, !dbg !16365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16367, !srcloc !14091
  call void @llvm.dbg.value(metadata i8 poison, metadata !16318, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !16319, metadata !DIExpression()), !dbg !16323
  ret i1 %19, !dbg !16368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16369 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16375, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.value(metadata i64 undef, metadata !16377, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16374, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16376, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.value(metadata i8** %4, metadata !16378, metadata !DIExpression()), !dbg !16380
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16381
  call void @llvm.dbg.value(metadata i32 %6, metadata !16379, metadata !DIExpression()), !dbg !16380
  %7 = icmp eq i8** %4, null, !dbg !16382
  br i1 %7, label %12, label %8, !dbg !16384

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16385
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16387
  %11 = load i8*, i8** %10, align 4, !dbg !16387
  store i8* %11, i8** %4, align 4, !dbg !16388
  br label %12, !dbg !16389

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16391 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16404, metadata !DIExpression()), !dbg !16405
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16406
  tail call fastcc void @z_waitq_init.331(%struct._wait_q_t* noundef %2) #24, !dbg !16407
  ret i32 0, !dbg !16408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.331(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16409 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16414, metadata !DIExpression()), !dbg !16415
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16416
  tail call fastcc void @sys_dlist_init.332(%struct._dnode* noundef %2) #24, !dbg !16417
  ret void, !dbg !16418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.332(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16419 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16424, metadata !DIExpression()), !dbg !16425
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16426
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16427
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16428
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16429
  ret void, !dbg !16430
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16431 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16433, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.335, metadata !16521, metadata !DIExpression()) #23, !dbg !16528
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16530, !srcloc !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16537
  call void @llvm.dbg.value(metadata i32 undef, metadata !16534, metadata !DIExpression()) #23, !dbg !16537
  call void @llvm.dbg.value(metadata i32 undef, metadata !16527, metadata !DIExpression()) #23, !dbg !16528
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16538
  br i1 %3, label %5, label %4, !dbg !16541

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 148) #25, !dbg !16542
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16542
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 148) #25, !dbg !16542
  unreachable, !dbg !16542

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16530
  call void @llvm.dbg.value(metadata i32 %6, metadata !16533, metadata !DIExpression()) #23, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %6, metadata !16527, metadata !DIExpression()) #23, !dbg !16528
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16544
  call void @llvm.dbg.value(metadata i32 %6, metadata !16434, metadata !DIExpression()), !dbg !16520
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16545
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16439, metadata !DIExpression()), !dbg !16520
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16547
  br i1 %9, label %13, label %10, !dbg !16549

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16550, metadata !DIExpression()), !dbg !16556
  call void @llvm.dbg.value(metadata i32 0, metadata !16555, metadata !DIExpression()), !dbg !16556
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16559
  store i32 0, i32* %11, align 4, !dbg !16560
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16561
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16562
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.335, [1 x i32] %12) #25, !dbg !16562
  br label %17, !dbg !16563

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16564, metadata !DIExpression()) #23, !dbg !16570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.335, metadata !16569, metadata !DIExpression()) #23, !dbg !16570
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16573
  br i1 %14, label %16, label %15, !dbg !16576

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 194) #25, !dbg !16577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 194) #25, !dbg !16577
  unreachable, !dbg !16577

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16564, metadata !DIExpression()) #23, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %6, metadata !16579, metadata !DIExpression()) #23, !dbg !16582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16584, !srcloc !16585
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16587 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16589, metadata !DIExpression()), !dbg !16593
  call void @llvm.dbg.value(metadata i32 0, metadata !16592, metadata !DIExpression()), !dbg !16593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.335, metadata !16521, metadata !DIExpression()) #23, !dbg !16594
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16596, !srcloc !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16534, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16527, metadata !DIExpression()) #23, !dbg !16594
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16599
  br i1 %3, label %5, label %4, !dbg !16600

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 148) #25, !dbg !16601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 148) #25, !dbg !16601
  unreachable, !dbg !16601

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16527, metadata !DIExpression()) #23, !dbg !16594
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16591, metadata !DIExpression()), !dbg !16593
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16592, metadata !DIExpression()), !dbg !16593
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16590, metadata !DIExpression()), !dbg !16593
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16604
  br i1 %8, label %16, label %9, !dbg !16605

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16592, metadata !DIExpression()), !dbg !16593
  %12 = add nuw nsw i32 %11, 1, !dbg !16606
  call void @llvm.dbg.value(metadata i32 %12, metadata !16592, metadata !DIExpression()), !dbg !16593
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16550, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i32 0, metadata !16555, metadata !DIExpression()), !dbg !16608
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16610
  store i32 0, i32* %13, align 4, !dbg !16611
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16612
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16590, metadata !DIExpression()), !dbg !16593
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16604
  br i1 %15, label %16, label %9, !dbg !16605, !llvm.loop !16613

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16593
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16596
  call void @llvm.dbg.value(metadata i32 %18, metadata !16533, metadata !DIExpression()) #23, !dbg !16598
  call void @llvm.dbg.value(metadata i32 %18, metadata !16527, metadata !DIExpression()) #23, !dbg !16594
  call void @llvm.dbg.value(metadata i32 %18, metadata !16591, metadata !DIExpression()), !dbg !16593
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16615
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.335, [1 x i32] %19) #25, !dbg !16615
  ret i32 %17, !dbg !16616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16617 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16634, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16632, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16633, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.335, metadata !16521, metadata !DIExpression()) #23, !dbg !16638
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16640, !srcloc !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16534, metadata !DIExpression()) #23, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16527, metadata !DIExpression()) #23, !dbg !16638
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16643
  br i1 %5, label %7, label %6, !dbg !16644

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 148) #25, !dbg !16645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 148) #25, !dbg !16645
  unreachable, !dbg !16645

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16640
  call void @llvm.dbg.value(metadata i32 %8, metadata !16533, metadata !DIExpression()) #23, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %8, metadata !16527, metadata !DIExpression()) #23, !dbg !16638
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.335) #25, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %8, metadata !16635, metadata !DIExpression()), !dbg !16637
  tail call fastcc void @k_mutex_unlock.344(%struct.k_mutex* noundef %1) #24, !dbg !16647
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16648
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16649
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.335, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %11, metadata !16636, metadata !DIExpression()), !dbg !16637
  tail call fastcc void @k_mutex_lock.345(%struct.k_mutex* noundef %1) #24, !dbg !16650
  ret i32 %11, !dbg !16651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.344(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16652 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16656, metadata !DIExpression()), !dbg !16657
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16658, !srcloc !16660
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16661
  ret void, !dbg !16662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.345(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16663 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16668, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16667, metadata !DIExpression()), !dbg !16669
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16670, !srcloc !16672
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16673
  ret void, !dbg !16674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16675 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16677
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16678
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16679
  ret void, !dbg !16680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16681 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16691, metadata !DIExpression()), !dbg !16708
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16689, metadata !DIExpression()), !dbg !16708
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16690, metadata !DIExpression()), !dbg !16708
  %5 = icmp eq i64 %4, -1, !dbg !16709
  br i1 %5, label %63, label %6, !dbg !16711

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16712
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.350(%struct._dnode* noundef %7) #24, !dbg !16712
  br i1 %8, label %9, label %10, !dbg !16715

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.353, i32 0, i32 0), i32 noundef 99) #25, !dbg !16716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.354, i32 0, i32 0)) #25, !dbg !16716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.353, i32 0, i32 0), i32 noundef 99) #25, !dbg !16716
  unreachable, !dbg !16716

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16718
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16719
  call void @llvm.dbg.value(metadata i32 0, metadata !16692, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !16728
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16730, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !16737
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !16737
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !16728
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16738
  br i1 %13, label %15, label %14, !dbg !16741

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !16742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !16742
  unreachable, !dbg !16742

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16730
  call void @llvm.dbg.value(metadata i32 %16, metadata !16733, metadata !DIExpression()) #23, !dbg !16737
  call void @llvm.dbg.value(metadata i32 %16, metadata !16727, metadata !DIExpression()) #23, !dbg !16728
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16744
  call void @llvm.dbg.value(metadata i32 %16, metadata !16698, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata i32 undef, metadata !16692, metadata !DIExpression()), !dbg !16720
  %17 = icmp slt i64 %4, -1, !dbg !16745
  br i1 %17, label %18, label %24, !dbg !16746

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16747
  %20 = add i64 %4, %19, !dbg !16748
  %21 = sub i64 -2, %20, !dbg !16748
  call void @llvm.dbg.value(metadata i64 %21, metadata !16702, metadata !DIExpression()), !dbg !16749
  %22 = icmp sgt i64 %21, 1, !dbg !16750
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16750
  br label %29, !dbg !16751

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16752
  %26 = tail call fastcc i32 @elapsed.358() #24, !dbg !16754
  %27 = sext i32 %26 to i64, !dbg !16754
  %28 = add nsw i64 %25, %27, !dbg !16755
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16756
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16757
  store i64 %30, i64* %31, align 8, !dbg !16758
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16759
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16699, metadata !DIExpression()), !dbg !16761
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16762
  br i1 %33, label %48, label %34, !dbg !16762

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16763
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16699, metadata !DIExpression()), !dbg !16761
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16767
  %38 = load i64, i64* %37, align 8, !dbg !16767
  %39 = icmp slt i64 %35, %38, !dbg !16768
  br i1 %39, label %40, label %44, !dbg !16769

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16767
  %42 = sub nsw i64 %38, %35, !dbg !16770
  store i64 %42, i64* %41, align 8, !dbg !16770
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16772
  tail call fastcc void @sys_dlist_insert.359(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16773
  br label %49, !dbg !16774

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16775
  store i64 %45, i64* %31, align 8, !dbg !16775
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16776
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16699, metadata !DIExpression()), !dbg !16761
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16762
  br i1 %47, label %48, label %34, !dbg !16762, !llvm.loop !16777

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.360(%struct._dnode* noundef nonnull %7) #24, !dbg !16779
  br label %49, !dbg !16782

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16783
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16784
  br i1 %51, label %52, label %59, !dbg !16785

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16786
  call void @llvm.dbg.value(metadata i32 %53, metadata !16705, metadata !DIExpression()), !dbg !16787
  %54 = icmp ne i32 %53, 0, !dbg !16788
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16790
  br i1 %57, label %59, label %58, !dbg !16790

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16791
  br label %59, !dbg !16793

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !16800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !16800
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16802
  br i1 %60, label %62, label %61, !dbg !16805

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !16806
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16806
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !16806
  unreachable, !dbg !16806

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16794, metadata !DIExpression()) #23, !dbg !16800
  call void @llvm.dbg.value(metadata i32 %16, metadata !16808, metadata !DIExpression()) #23, !dbg !16811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16813, !srcloc !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !16692, metadata !DIExpression()), !dbg !16720
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.350(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16816 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16822, metadata !DIExpression()), !dbg !16823
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16824
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16824
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16825
  ret i1 %4, !dbg !16826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.358() unnamed_addr #1 !dbg !16827 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16830
  %2 = icmp eq i32 %1, 0, !dbg !16831
  br i1 %2, label %3, label %5, !dbg !16830

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16832
  br label %5, !dbg !16830

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16830
  ret i32 %6, !dbg !16833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16834 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.365() #24, !dbg !16840
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16838, metadata !DIExpression()), !dbg !16841
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16842
  ret %struct._timeout* %2, !dbg !16843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.359(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16844 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16848, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16849, metadata !DIExpression()), !dbg !16852
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16853
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16853
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16850, metadata !DIExpression()), !dbg !16852
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16854
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16855
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16856
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16857
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16858
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16859
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16860
  ret void, !dbg !16861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16862 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16866, metadata !DIExpression()), !dbg !16868
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16869
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.363(%struct._dnode* noundef %2) #24, !dbg !16870
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16867, metadata !DIExpression()), !dbg !16868
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16871
  ret %struct._timeout* %4, !dbg !16872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.360(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16873 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16878, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16879, metadata !DIExpression()), !dbg !16881
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16882
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16880, metadata !DIExpression()), !dbg !16881
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16883
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16884
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16885
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16886
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16887
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16888
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16889
  ret void, !dbg !16890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16891 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16896
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16893, metadata !DIExpression()), !dbg !16897
  %2 = tail call fastcc i32 @elapsed.358() #24, !dbg !16898
  call void @llvm.dbg.value(metadata i32 %2, metadata !16894, metadata !DIExpression()), !dbg !16897
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16899
  br i1 %3, label %14, label %4, !dbg !16901

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16902
  %6 = load i64, i64* %5, align 8, !dbg !16902
  %7 = sext i32 %2 to i64, !dbg !16903
  %8 = sub nsw i64 %6, %7, !dbg !16904
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16905
  br i1 %9, label %14, label %10, !dbg !16906

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16907
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16907
  %13 = trunc i64 %12 to i32, !dbg !16907
  call void @llvm.dbg.value(metadata i32 %13, metadata !16895, metadata !DIExpression()), !dbg !16897
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16909
  call void @llvm.dbg.value(metadata i32 %15, metadata !16895, metadata !DIExpression()), !dbg !16897
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16910
  %17 = icmp ne i32 %16, 0, !dbg !16912
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16913
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16913
  call void @llvm.dbg.value(metadata i32 %20, metadata !16895, metadata !DIExpression()), !dbg !16897
  ret i32 %20, !dbg !16914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.363(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16915 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16919, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16920, metadata !DIExpression()), !dbg !16921
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16922
  br i1 %2, label %5, label %3, !dbg !16923

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.364(%struct._dnode* noundef nonnull %0) #24, !dbg !16924
  br label %5, !dbg !16923

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16923
  ret %struct._dnode* %6, !dbg !16925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.364(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16926 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16928, metadata !DIExpression()), !dbg !16930
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16929, metadata !DIExpression()), !dbg !16930
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16931
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16932
  br i1 %3, label %7, label %4, !dbg !16933

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16934
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16934
  br label %7, !dbg !16933

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16933
  ret %struct._dnode* %8, !dbg !16935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.365() unnamed_addr #8 !dbg !16936 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16940, metadata !DIExpression()), !dbg !16941
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.366() #24, !dbg !16942
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16942
  ret %struct._dnode* %3, !dbg !16943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.366() unnamed_addr #8 !dbg !16944 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16948, metadata !DIExpression()), !dbg !16949
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16950
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16951
  ret i1 %2, !dbg !16952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16953 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16957, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 -22, metadata !16958, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 0, metadata !16959, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !16964
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16966, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !16964
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16969
  br i1 %3, label %5, label %4, !dbg !16970

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !16971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !16971
  unreachable, !dbg !16971

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !16964
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16961, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.value(metadata i32 -22, metadata !16958, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16959, metadata !DIExpression()), !dbg !16963
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16958, metadata !DIExpression()), !dbg !16962
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.350(%struct._dnode* noundef %6) #24, !dbg !16973
  br i1 %7, label %8, label %9, !dbg !16977

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16978
  call void @llvm.dbg.value(metadata i32 0, metadata !16958, metadata !DIExpression()), !dbg !16962
  br label %9, !dbg !16980

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16962
  call void @llvm.dbg.value(metadata i32 %10, metadata !16958, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !16981
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16983
  br i1 %11, label %13, label %12, !dbg !16984

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !16985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !16985
  unreachable, !dbg !16985

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16966
  call void @llvm.dbg.value(metadata i32 %14, metadata !16733, metadata !DIExpression()) #23, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %14, metadata !16727, metadata !DIExpression()) #23, !dbg !16964
  call void @llvm.dbg.value(metadata i32 %14, metadata !16961, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !16981
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()) #23, !dbg !16986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16988, !srcloc !16814
  call void @llvm.dbg.value(metadata i32 %10, metadata !16958, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16959, metadata !DIExpression()), !dbg !16963
  ret i32 %10, !dbg !16989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16990 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16992, metadata !DIExpression()), !dbg !16993
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16994
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16996
  br i1 %3, label %10, label %4, !dbg !16997

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16998
  %6 = load i64, i64* %5, align 8, !dbg !16998
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17000
  %8 = load i64, i64* %7, align 8, !dbg !17001
  %9 = add nsw i64 %8, %6, !dbg !17001
  store i64 %9, i64* %7, align 8, !dbg !17001
  br label %10, !dbg !17002

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17003
  tail call fastcc void @sys_dlist_remove.369(%struct._dnode* noundef %11) #24, !dbg !17004
  ret void, !dbg !17005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.369(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17006 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17010, metadata !DIExpression()), !dbg !17013
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17014
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17014
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17011, metadata !DIExpression()), !dbg !17013
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17015
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17015
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17012, metadata !DIExpression()), !dbg !17013
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17016
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17017
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17018
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17019
  tail call fastcc void @sys_dnode_init.370(%struct._dnode* noundef %0) #24, !dbg !17020
  ret void, !dbg !17021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.370(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17022 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17024, metadata !DIExpression()), !dbg !17025
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17026
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17027
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17028
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17029
  ret void, !dbg !17030
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17031 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17037, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i64 0, metadata !17038, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 0, metadata !17039, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17044
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17046, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17048
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17048
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17044
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17049
  br i1 %3, label %5, label %4, !dbg !17050

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17051
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17051
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17051
  unreachable, !dbg !17051

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17048
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17044
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17052
  call void @llvm.dbg.value(metadata i32 undef, metadata !17041, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i64 0, metadata !17038, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 undef, metadata !17039, metadata !DIExpression()), !dbg !17043
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17053
  call void @llvm.dbg.value(metadata i64 %6, metadata !17038, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17056
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17058
  br i1 %7, label %9, label %8, !dbg !17059

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17060
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17060
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17060
  unreachable, !dbg !17060

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17046
  call void @llvm.dbg.value(metadata i32 %10, metadata !16733, metadata !DIExpression()) #23, !dbg !17048
  call void @llvm.dbg.value(metadata i32 %10, metadata !16727, metadata !DIExpression()) #23, !dbg !17044
  call void @llvm.dbg.value(metadata i32 %10, metadata !17041, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17056
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()) #23, !dbg !17061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17063, !srcloc !16814
  call void @llvm.dbg.value(metadata i64 %6, metadata !17038, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 undef, metadata !17039, metadata !DIExpression()), !dbg !17043
  ret i64 %6, !dbg !17064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17065 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i64 0, metadata !17068, metadata !DIExpression()), !dbg !17071
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.371(%struct._timeout* noundef %0) #24, !dbg !17072
  br i1 %2, label %21, label %3, !dbg !17074

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17075
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17069, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.value(metadata i64 0, metadata !17068, metadata !DIExpression()), !dbg !17071
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17077
  br i1 %5, label %16, label %6, !dbg !17079

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17069, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.value(metadata i64 %8, metadata !17068, metadata !DIExpression()), !dbg !17071
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17080
  %10 = load i64, i64* %9, align 8, !dbg !17080
  %11 = add nsw i64 %10, %8, !dbg !17082
  call void @llvm.dbg.value(metadata i64 %11, metadata !17068, metadata !DIExpression()), !dbg !17071
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17083
  br i1 %12, label %16, label %13, !dbg !17085

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17086
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17069, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.value(metadata i64 %11, metadata !17068, metadata !DIExpression()), !dbg !17071
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17077
  br i1 %15, label %16, label %6, !dbg !17079, !llvm.loop !17087

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17071
  call void @llvm.dbg.value(metadata i64 %17, metadata !17068, metadata !DIExpression()), !dbg !17071
  %18 = tail call fastcc i32 @elapsed.358() #24, !dbg !17089
  %19 = sext i32 %18 to i64, !dbg !17089
  %20 = sub nsw i64 %17, %19, !dbg !17090
  br label %21, !dbg !17091

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17071
  ret i64 %22, !dbg !17092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.371(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17093 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17097, metadata !DIExpression()), !dbg !17098
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17099
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.350(%struct._dnode* noundef %2) #24, !dbg !17100
  %4 = xor i1 %3, true, !dbg !17101
  ret i1 %4, !dbg !17102
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17103 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17105, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.value(metadata i64 0, metadata !17106, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.value(metadata i32 0, metadata !17107, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17112
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17114, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17112
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17117
  br i1 %3, label %5, label %4, !dbg !17118

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17119
  unreachable, !dbg !17119

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17112
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i64 0, metadata !17106, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()), !dbg !17111
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17121
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17124
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17106, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17110
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17125
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17127
  br i1 %8, label %10, label %9, !dbg !17128

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17129
  unreachable, !dbg !17129

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %11, metadata !16733, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata i32 %11, metadata !16727, metadata !DIExpression()) #23, !dbg !17112
  call void @llvm.dbg.value(metadata i32 %11, metadata !17109, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17106, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17110
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()) #23, !dbg !17130
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17132, !srcloc !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()), !dbg !17111
  %12 = add i64 %7, %6, !dbg !17133
  ret i64 %12, !dbg !17134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17135 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17137, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata i32 0, metadata !17138, metadata !DIExpression()), !dbg !17142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17143
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17145, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17143
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17148
  br i1 %2, label %4, label %3, !dbg !17149

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17150
  unreachable, !dbg !17150

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17143
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !17140, metadata !DIExpression()), !dbg !17142
  call void @llvm.dbg.value(metadata i32 -1, metadata !17137, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !17138, metadata !DIExpression()), !dbg !17142
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17152
  call void @llvm.dbg.value(metadata i32 %5, metadata !17137, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17155
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17157
  br i1 %6, label %8, label %7, !dbg !17158

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17159
  unreachable, !dbg !17159

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17145
  call void @llvm.dbg.value(metadata i32 %9, metadata !16733, metadata !DIExpression()) #23, !dbg !17147
  call void @llvm.dbg.value(metadata i32 %9, metadata !16727, metadata !DIExpression()) #23, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %9, metadata !17140, metadata !DIExpression()), !dbg !17142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()) #23, !dbg !17160
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17162, !srcloc !16814
  call void @llvm.dbg.value(metadata i32 %5, metadata !17137, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !17138, metadata !DIExpression()), !dbg !17142
  ret i32 %5, !dbg !17163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17166, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i1 %1, metadata !17167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17176
  call void @llvm.dbg.value(metadata i32 0, metadata !17168, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17178
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17180, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17178
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17183
  br i1 %4, label %6, label %5, !dbg !17184

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17185
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17185
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17185
  unreachable, !dbg !17185

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17178
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !17168, metadata !DIExpression()), !dbg !17177
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %7, metadata !17171, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.value(metadata i1 undef, metadata !17174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17188
  %8 = icmp slt i32 %7, 2, !dbg !17189
  call void @llvm.dbg.value(metadata i1 %8, metadata !17175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17188
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17190
  call void @llvm.dbg.value(metadata i1 %9, metadata !17174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17188
  br i1 %10, label %14, label %11, !dbg !17190

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17192
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17192
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17194
  br label %14, !dbg !17195

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17196
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17198
  br i1 %15, label %17, label %16, !dbg !17199

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17200
  unreachable, !dbg !17200

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17180
  call void @llvm.dbg.value(metadata i32 %18, metadata !16733, metadata !DIExpression()) #23, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %18, metadata !16727, metadata !DIExpression()) #23, !dbg !17178
  call void @llvm.dbg.value(metadata i32 %18, metadata !17170, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()) #23, !dbg !17201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17203, !srcloc !16814
  call void @llvm.dbg.value(metadata i32 1, metadata !17168, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !17168, metadata !DIExpression()), !dbg !17177
  ret void, !dbg !17204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17209, metadata !DIExpression()), !dbg !17214
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17216
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17218, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17216
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17221
  br i1 %3, label %5, label %4, !dbg !17222

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17223
  unreachable, !dbg !17223

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17216
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17224
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17214
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17225
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17226
  br i1 %7, label %37, label %8, !dbg !17227

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17214
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17228
  %14 = load i64, i64* %13, align 8, !dbg !17228
  %15 = sext i32 %11 to i64, !dbg !17229
  %16 = icmp sgt i64 %14, %15, !dbg !17230
  br i1 %16, label %35, label %17, !dbg !17231

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17211, metadata !DIExpression()), !dbg !17232
  %18 = trunc i64 %14 to i32, !dbg !17233
  call void @llvm.dbg.value(metadata i32 %18, metadata !17213, metadata !DIExpression()), !dbg !17232
  %19 = sext i32 %18 to i64, !dbg !17234
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17235
  %21 = add i64 %20, %19, !dbg !17235
  store i64 %21, i64* @curr_tick, align 8, !dbg !17235
  store i64 0, i64* %13, align 8, !dbg !17236
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17237
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17238
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17240
  br i1 %22, label %24, label %23, !dbg !17241

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17242
  unreachable, !dbg !17242

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16794, metadata !DIExpression()) #23, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %12, metadata !16808, metadata !DIExpression()) #23, !dbg !17243
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17245, !srcloc !16814
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17246
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17246
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17248
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17250, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17248
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17253
  br i1 %28, label %30, label %29, !dbg !17254

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  unreachable, !dbg !17255

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17248
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17257
  %32 = sub nsw i32 %31, %18, !dbg !17257
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17214
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17225
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17226
  br i1 %34, label %37, label %8, !dbg !17227, !llvm.loop !17258

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17260
  store i64 %36, i64* %13, align 8, !dbg !17260
  br label %41, !dbg !17263

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17214
  %40 = sext i32 %39 to i64, !dbg !17264
  br label %41, !dbg !17264

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17264
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17265
  %45 = add i64 %44, %42, !dbg !17265
  store i64 %45, i64* @curr_tick, align 8, !dbg !17265
  store i32 0, i32* @announce_remaining, align 4, !dbg !17266
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17267
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17269
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17271
  br i1 %47, label %49, label %48, !dbg !17272

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17273
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17273
  unreachable, !dbg !17273

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %50, metadata !16794, metadata !DIExpression()) #23, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %50, metadata !16808, metadata !DIExpression()) #23, !dbg !17274
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17276, !srcloc !16814
  ret void, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17282, metadata !DIExpression()), !dbg !17286
  call void @llvm.dbg.value(metadata i32 0, metadata !17283, metadata !DIExpression()), !dbg !17287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16721, metadata !DIExpression()) #23, !dbg !17288
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17290, !srcloc !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #23, !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17288
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17293
  br i1 %2, label %4, label %3, !dbg !17294

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.357, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 148) #25, !dbg !17295
  unreachable, !dbg !17295

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()) #23, !dbg !17288
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17285, metadata !DIExpression()), !dbg !17287
  call void @llvm.dbg.value(metadata i64 0, metadata !17282, metadata !DIExpression()), !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !17283, metadata !DIExpression()), !dbg !17287
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17297
  %6 = tail call fastcc i32 @elapsed.358() #24, !dbg !17300
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17282, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16799, metadata !DIExpression()) #23, !dbg !17301
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17303
  br i1 %7, label %9, label %8, !dbg !17304

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.362, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.356, i32 0, i32 0), i32 noundef 194) #25, !dbg !17305
  unreachable, !dbg !17305

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %10, metadata !16733, metadata !DIExpression()) #23, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %10, metadata !16727, metadata !DIExpression()) #23, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %10, metadata !17285, metadata !DIExpression()), !dbg !17287
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17282, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17286
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17282, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16794, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()) #23, !dbg !17306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17308, !srcloc !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !17283, metadata !DIExpression()), !dbg !17287
  %11 = sext i32 %6 to i64, !dbg !17300
  %12 = add i64 %5, %11, !dbg !17309
  ret i64 %12, !dbg !17310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17311 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17312
  %2 = trunc i64 %1 to i32, !dbg !17313
  ret i32 %2, !dbg !17314
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17315 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17316
  ret i64 %1, !dbg !17317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17320, metadata !DIExpression()), !dbg !17327
  %2 = icmp eq i32 %0, 0, !dbg !17328
  br i1 %2, label %10, label %3, !dbg !17330

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %4, metadata !17321, metadata !DIExpression()), !dbg !17327
  %5 = mul i32 %0, 168, !dbg !17332
  call void @llvm.dbg.value(metadata i32 %5, metadata !17322, metadata !DIExpression()), !dbg !17327
  br label %6, !dbg !17333

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %7, metadata !17323, metadata !DIExpression()), !dbg !17335
  %8 = sub i32 %7, %4, !dbg !17336
  %9 = icmp ult i32 %8, %5, !dbg !17338
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17340 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17341
  ret i32 %1, !dbg !17342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17343 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17345
  ret i32 %1, !dbg !17346
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17347 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17351, metadata !DIExpression()), !dbg !17353
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17354

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17355
  br label %14, !dbg !17359

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17352, metadata !DIExpression()), !dbg !17353
  %6 = icmp slt i64 %2, -1, !dbg !17360
  br i1 %6, label %7, label %9, !dbg !17363

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17364
  br label %14, !dbg !17365

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17367
  %11 = icmp ugt i64 %2, 1, !dbg !17368
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17368
  %13 = add nsw i64 %10, %12, !dbg !17369
  br label %14, !dbg !17370

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17371
  ret i64 %15, !dbg !17372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17373 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.380, i32 0, i32 0)) #25, !dbg !17375
  ret void, !dbg !17376
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!795, !2, !2515, !27, !271, !297, !2517, !2519, !2553, !2555, !307, !358, !2557, !2560, !2571, !2617, !2619, !2647, !2675, !2718, !2790, !2835, !387, !530, !2863, !566, !576, !601, !827, !2868, !962, !1028, !1343, !1567, !2905, !1682, !1772, !2907, !2991, !3054, !1822, !3057, !1829, !2202, !3075, !2222, !2333, !2451, !3077, !2476, !3080}
!llvm.ident = !{!3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082, !3082}
!llvm.module.flags = !{!3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "count_mutex", scope: !27, file: !116, line: 16, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !143, !154}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "count_threshold_cv", scope: !27, file: !116, line: 17, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !116, line: 14, type: !109, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 21, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 26112, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152, !153}
!152 = !DISubrange(count: 3)
!153 = !DISubrange(count: 1088)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 23, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 3840, elements: !261)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !159)
!158 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!159 = !{!160, !209, !222, !223, !224, !228, !229, !237, !256}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !157, file: !158, line: 247, baseType: !161, size: 384)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !162)
!162 = !{!163, !177, !179, !182, !183, !196, !197, !198}
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 60, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 60, size: 64, elements: !165)
!165 = !{!166, !168}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !164, file: !158, line: 61, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !164, file: !158, line: 62, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !171)
!170 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !169, file: !170, line: 50, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !175)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!175 = !{!176}
!176 = !DISubrange(count: 2)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !161, file: !158, line: 68, baseType: !178, size: 32, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !161, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !181)
!181 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !161, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 90, baseType: !184, size: 16, offset: 112)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 90, size: 16, elements: !185)
!185 = !{!186, !193}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !158, line: 91, baseType: !187, size: 16)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !158, line: 91, size: 16, elements: !188)
!188 = !{!189, !192}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !187, file: !158, line: 96, baseType: !190, size: 8)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !191)
!191 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !187, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !184, file: !158, line: 100, baseType: !194, size: 16)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !195)
!195 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !161, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !161, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !161, file: !158, line: 131, baseType: !199, size: 192, offset: 192)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !200)
!200 = !{!201, !202, !208}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !199, file: !122, line: 245, baseType: !167, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !199, file: !122, line: 246, baseType: !203, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !207}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !199, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !157, file: !158, line: 250, baseType: !210, size: 288, offset: 384)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !210, file: !211, line: 26, baseType: !110, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !210, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !210, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !210, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !210, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !210, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !210, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !210, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !210, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !157, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !157, file: !158, line: 256, baseType: !121, size: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !157, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !157, file: !158, line: 300, baseType: !230, size: 96, offset: 1056)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !231)
!231 = !{!232, !233, !236}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !230, file: !158, line: 153, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !235, line: 214, baseType: !32)
!235 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !230, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !157, file: !158, line: 325, baseType: !238, size: 32, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !240)
!240 = !{!241, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !118, line: 5074, baseType: !242, size: 96)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245, !248, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !242, file: !243, line: 57, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !243, line: 57, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !242, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !242, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !239, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !239, file: !118, line: 5076, baseType: !252, size: 32, offset: 160)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !254)
!253 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !252, file: !253, line: 52, baseType: !22, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !157, file: !158, line: 343, baseType: !257, size: 64, offset: 1184)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !258)
!258 = !{!259, !260}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !257, file: !211, line: 63, baseType: !110, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !257, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!261 = !{!152}
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!273 = !{!22, !107, !24, !274, !276, !278, !234, !109, !281, !282, !283, !284, !285, !286, !194, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 369, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 362, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 364, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 365, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 366, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 367, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 368, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !180, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !180, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!389 = !{!234, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !158, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !158, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !158, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !170, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !175)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !158, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !158, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !158, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !158, line: 96, baseType: !190, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !158, line: 100, baseType: !194, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !158, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !158, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !211, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !158, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !158, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !158, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !158, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !243, line: 57, baseType: !246, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !253, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !158, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !211, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !180)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !234)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !180, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!532 = !{!533, !107, !109, !550, !180}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !175)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !706, line: 72, type: !790, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !692, globals: !703, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!634 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!635 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!636 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!637 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!638 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!639 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!640 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!641 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!642 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!643 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!644 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!645 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!646 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!647 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!648 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!649 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!650 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!651 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!652 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!653 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!654 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!655 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!656 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!657 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!658 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!659 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!660 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!661 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!662 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!663 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!664 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!665 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!666 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!667 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!668 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!669 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!670 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!671 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!672 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!673 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!674 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!675 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!676 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!677 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!678 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!679 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!680 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!681 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!682 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!683 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!684 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!685 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!686 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!687 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!688 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!689 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!690 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!691 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!692 = !{!234, !109, !107, !693}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 354, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 346, size: 192, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !695, file: !312, line: 348, baseType: !316, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !695, file: !312, line: 349, baseType: !316, size: 32, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !695, file: !312, line: 350, baseType: !316, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !695, file: !312, line: 351, baseType: !316, size: 32, offset: 96)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !695, file: !312, line: 352, baseType: !316, size: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !695, file: !312, line: 353, baseType: !316, size: 32, offset: 160)
!703 = !{!704, !710, !726, !737, !754, !599, !756, !770, !772, !774, !776, !778, !780, !782, !784, !786, !788}
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !601, file: !706, line: 424, type: !707, isLocal: false, isDefinition: true, align: 16)
!706 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !708)
!708 = !{!709}
!709 = !DISubrange(count: 4)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !601, file: !706, line: 424, type: !712, isLocal: false, isDefinition: true, align: 32)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !714)
!714 = !{!715, !716, !717, !718, !724, !725}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !713, file: !336, line: 380, baseType: !279, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !713, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !713, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !713, file: !336, line: 386, baseType: !719, size: 32, offset: 96)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !721)
!721 = !{!722, !723}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !720, file: !336, line: 359, baseType: !180, size: 8)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !720, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !713, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !713, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !601, file: !706, line: 424, type: !728, isLocal: true, isDefinition: true, align: 32)
!728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !730)
!730 = !{!731, !736}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !729, file: !327, line: 60, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DISubroutineType(types: !734)
!734 = !{!109, !735}
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !729, file: !327, line: 65, baseType: !735, size: 32, offset: 32)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !706, line: 423, type: !739, isLocal: true, isDefinition: true)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !706, line: 107, size: 1472, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !739, file: !706, line: 109, baseType: !742, size: 1472)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 1472, elements: !752)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !706, line: 101, size: 64, elements: !744)
!744 = !{!745, !751}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !743, file: !706, line: 102, baseType: !746, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !747, line: 63, baseType: !748)
!747 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 32)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !109, !107}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !743, file: !706, line: 103, baseType: !107, size: 32, offset: 32)
!752 = !{!753}
!753 = !DISubrange(count: 23)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !601, file: !706, line: 424, type: !720, isLocal: true, isDefinition: true, align: 8)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !758, file: !706, line: 493, type: !763, isLocal: true, isDefinition: true, align: 32)
!758 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !706, file: !706, line: 460, type: !759, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !761)
!759 = !DISubroutineType(types: !760)
!760 = !{null, !735}
!761 = !{!762}
!762 = !DILocalVariable(name: "dev", arg: 1, scope: !758, file: !706, line: 460, type: !735)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !764)
!764 = !{!765, !767, !768, !769}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !763, file: !10, line: 55, baseType: !766, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !763, file: !10, line: 57, baseType: !766, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !763, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !763, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !758, file: !706, line: 497, type: !763, isLocal: true, isDefinition: true, align: 32)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !758, file: !706, line: 507, type: !763, isLocal: true, isDefinition: true, align: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !758, file: !706, line: 512, type: !763, isLocal: true, isDefinition: true, align: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !758, file: !706, line: 516, type: !763, isLocal: true, isDefinition: true, align: 32)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !758, file: !706, line: 523, type: !763, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !758, file: !706, line: 527, type: !763, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !758, file: !706, line: 581, type: !763, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !758, file: !706, line: 586, type: !763, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !758, file: !706, line: 591, type: !763, isLocal: true, isDefinition: true, align: 32)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !758, file: !706, line: 595, type: !763, isLocal: true, isDefinition: true, align: 32)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !791, size: 736, elements: !752)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 155, baseType: !604)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !795, file: !800, line: 23, type: !824, isLocal: false, isDefinition: true, align: 16)
!795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !797, splitDebugInlining: false, nameTableKind: None)
!796 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!797 = !{!798, !793, !804, !806, !808, !810, !812, !814, !816, !818, !820, !822}
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !795, file: !800, line: 18, type: !801, isLocal: false, isDefinition: true, align: 16)
!800 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 208, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 13)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !795, file: !800, line: 30, type: !707, isLocal: false, isDefinition: true, align: 16)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !795, file: !800, line: 37, type: !707, isLocal: false, isDefinition: true, align: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !795, file: !800, line: 44, type: !707, isLocal: false, isDefinition: true, align: 16)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !795, file: !800, line: 51, type: !707, isLocal: false, isDefinition: true, align: 16)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !795, file: !800, line: 58, type: !707, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !795, file: !800, line: 65, type: !707, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !795, file: !800, line: 72, type: !707, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !795, file: !800, line: 79, type: !707, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !795, file: !800, line: 86, type: !707, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !795, file: !800, line: 93, type: !707, isLocal: false, isDefinition: true, align: 16)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !261)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !827, file: !888, line: 398, type: !921, isLocal: true, isDefinition: true)
!827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !829, retainedTypes: !842, globals: !885, splitDebugInlining: false, nameTableKind: None)
!828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!829 = !{!830, !30, !835}
!830 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !831, line: 197, baseType: !32, size: 32, elements: !832)
!831 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!832 = !{!833, !834}
!833 = !DIEnumerator(name: "SUCCESS", value: 0)
!834 = !DIEnumerator(name: "ERROR", value: 1)
!835 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !836, line: 44, baseType: !32, size: 32, elements: !837)
!836 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !{!838, !839, !840, !841}
!838 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!839 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!840 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!841 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!842 = !{!107, !109, !110, !843, !878, !884}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !846)
!846 = !{!847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !845, file: !312, line: 502, baseType: !316, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !845, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !845, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !845, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !845, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !845, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !845, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !845, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !845, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !845, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !845, file: !312, line: 512, baseType: !858, size: 64, offset: 320)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !175)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !845, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !845, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !845, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !845, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !845, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !845, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !845, file: !312, line: 519, baseType: !858, size: 64, offset: 576)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !845, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !845, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !845, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !845, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !845, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !845, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !845, file: !312, line: 526, baseType: !858, size: 64, offset: 832)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !845, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !845, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !845, file: !312, line: 529, baseType: !858, size: 64, offset: 960)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !845, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !845, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !881)
!880 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !879, file: !880, line: 344, baseType: !110, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !879, file: !880, line: 345, baseType: !110, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!885 = !{!886, !892, !908, !919, !825}
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !827, file: !888, line: 752, type: !889, isLocal: false, isDefinition: true, align: 16)
!888 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 928, elements: !890)
!890 = !{!891}
!891 = !DISubrange(count: 58)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !827, file: !888, line: 752, type: !894, isLocal: false, isDefinition: true, align: 32)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !896)
!896 = !{!897, !898, !899, !900, !906, !907}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !895, file: !336, line: 380, baseType: !279, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !895, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !895, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !895, file: !336, line: 386, baseType: !901, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !903)
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !902, file: !336, line: 359, baseType: !180, size: 8)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !902, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !895, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !895, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !827, file: !888, line: 752, type: !910, isLocal: true, isDefinition: true, align: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !912)
!912 = !{!913, !918}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !911, file: !327, line: 60, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!109, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !911, file: !327, line: 65, baseType: !917, size: 32, offset: 32)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !827, file: !888, line: 752, type: !902, isLocal: true, isDefinition: true, align: 8)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !836, line: 100, size: 224, elements: !922)
!922 = !{!923, !929, !930, !939, !944, !949, !955}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !921, file: !836, line: 101, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !836, line: 76, baseType: !925)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!109, !917, !928}
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !836, line: 56, baseType: !107)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !921, file: !836, line: 102, baseType: !924, size: 32, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !921, file: !836, line: 103, baseType: !931, size: 32, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !836, line: 83, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!109, !917, !928, !935, !107}
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !836, line: 72, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !917, !928, !107}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !921, file: !836, line: 104, baseType: !940, size: 32, offset: 96)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !836, line: 79, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!109, !917, !928, !884}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !921, file: !836, line: 105, baseType: !945, size: 32, offset: 128)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !836, line: 88, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!835, !917, !928}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !921, file: !836, line: 106, baseType: !950, size: 32, offset: 160)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !836, line: 92, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{!109, !917, !928, !954}
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !836, line: 64, baseType: !107)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !921, file: !836, line: 107, baseType: !956, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !836, line: 96, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!109, !917, !928, !107}
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !962, file: !1019, line: 603, type: !1021, isLocal: true, isDefinition: true, align: 32)
!962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !964, globals: !1016, splitDebugInlining: false, nameTableKind: None)
!963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!964 = !{!107, !109, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !968, line: 336, size: 160, elements: !969)
!968 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !990, !994, !998, !1011}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !967, file: !968, line: 365, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!109, !974, !989}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !977)
!977 = !{!978, !979, !980, !981, !987, !988}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !976, file: !336, line: 380, baseType: !279, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !976, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !976, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !976, file: !336, line: 386, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !984)
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !983, file: !336, line: 359, baseType: !180, size: 8)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !983, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !976, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !976, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !967, file: !968, line: 366, baseType: !991, size: 32, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !974, !181}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !967, file: !968, line: 374, baseType: !995, size: 32, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!109, !974}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !967, file: !968, line: 377, baseType: !999, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!109, !974, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !968, line: 122, size: 64, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1004, file: !968, line: 123, baseType: !110, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1004, file: !968, line: 124, baseType: !180, size: 8, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1004, file: !968, line: 125, baseType: !180, size: 8, offset: 40)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1004, file: !968, line: 126, baseType: !180, size: 8, offset: 48)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1004, file: !968, line: 127, baseType: !180, size: 8, offset: 56)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !967, file: !968, line: 379, baseType: !1012, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!109, !974, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1016 = !{!960, !1017}
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !962, file: !1019, line: 38, type: !1020, isLocal: true, isDefinition: true)
!1019 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1022, file: !327, line: 60, baseType: !995, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1022, file: !327, line: 65, baseType: !974, size: 32, offset: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1028, file: !1197, line: 762, type: !1316, isLocal: true, isDefinition: true)
!1028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1030, retainedTypes: !1048, globals: !1194, splitDebugInlining: false, nameTableKind: None)
!1029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1030 = !{!30, !1031, !1037, !1042, !835}
!1031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1032, line: 506, baseType: !32, size: 32, elements: !1033)
!1032 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1033 = !{!1034, !1035, !1036}
!1034 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1035 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1036 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1037 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1032, line: 512, baseType: !32, size: 32, elements: !1038)
!1038 = !{!1039, !1040, !1041}
!1039 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1040 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1041 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !747, line: 43, baseType: !32, size: 32, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047}
!1044 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1045 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1046 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1047 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1048 = !{!107, !109, !1049, !1119, !1124, !1084, !1037, !1031, !1129, !1130, !110, !1144, !1099, !285, !1154, !1155}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1032, line: 523, size: 288, elements: !1052)
!1052 = !{!1053, !1074, !1080, !1085, !1089, !1090, !1091, !1095, !1115}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1051, file: !1032, line: 524, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!109, !1057, !1072, !1073}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1060)
!1060 = !{!1061, !1062, !1063, !1064, !1070, !1071}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1059, file: !336, line: 380, baseType: !279, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1059, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1059, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1059, file: !336, line: 386, baseType: !1065, size: 32, offset: 96)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1066, file: !336, line: 359, baseType: !180, size: 8)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1066, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1059, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1059, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1032, line: 237, baseType: !180)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1032, line: 257, baseType: !110)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1051, file: !1032, line: 530, baseType: !1075, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!109, !1057, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1032, line: 229, baseType: !110)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1051, file: !1032, line: 532, baseType: !1081, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!109, !1057, !1084, !1079}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1032, line: 216, baseType: !110)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1051, file: !1032, line: 535, baseType: !1086, size: 32, offset: 96)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!109, !1057, !1084}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1051, file: !1032, line: 537, baseType: !1086, size: 32, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1051, file: !1032, line: 539, baseType: !1086, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1051, file: !1032, line: 541, baseType: !1092, size: 32, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!109, !1057, !1072, !1031, !1037}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1051, file: !1032, line: 544, baseType: !1096, size: 32, offset: 224)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!109, !1057, !1099, !347}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1032, line: 478, size: 96, elements: !1101)
!1101 = !{!1102, !1109, !1114}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1100, file: !1032, line: 482, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1104, line: 33, baseType: !1105)
!1104 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1104, line: 29, size: 32, elements: !1106)
!1106 = !{!1107}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1105, file: !1104, line: 30, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1100, file: !1032, line: 485, baseType: !1110, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1032, line: 464, baseType: !1111)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1057, !1099, !1084}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1100, file: !1032, line: 493, baseType: !1084, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1051, file: !1032, line: 547, baseType: !1116, size: 32, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!110, !1057}
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1032, line: 428, size: 32, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1121, file: !1032, line: 434, baseType: !1084, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1032, line: 441, size: 32, elements: !1127)
!1127 = !{!1128}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1126, file: !1032, line: 447, baseType: !1084, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 441, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 430, size: 320, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1132, file: !312, line: 432, baseType: !316, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1132, file: !312, line: 433, baseType: !316, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1132, file: !312, line: 434, baseType: !316, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1132, file: !312, line: 435, baseType: !316, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1132, file: !312, line: 436, baseType: !316, size: 32, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1132, file: !312, line: 437, baseType: !316, size: 32, offset: 160)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1132, file: !312, line: 438, baseType: !316, size: 32, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1132, file: !312, line: 439, baseType: !316, size: 32, offset: 224)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1132, file: !312, line: 440, baseType: !1143, size: 64, offset: 256)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !175)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 454, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 447, size: 288, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1152, !1153}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1146, file: !312, line: 449, baseType: !316, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1146, file: !312, line: 450, baseType: !316, size: 32, offset: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1146, file: !312, line: 451, baseType: !1151, size: 128, offset: 64)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !708)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1146, file: !312, line: 452, baseType: !858, size: 64, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1146, file: !312, line: 453, baseType: !316, size: 32, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !836, line: 100, size: 224, elements: !1158)
!1158 = !{!1159, !1164, !1165, !1174, !1179, !1184, !1189}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1157, file: !836, line: 101, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !836, line: 76, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!109, !1057, !928}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1157, file: !836, line: 102, baseType: !1160, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1157, file: !836, line: 103, baseType: !1166, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !836, line: 83, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!109, !1057, !928, !1170, !107}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !836, line: 72, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !1057, !928, !107}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1157, file: !836, line: 104, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !836, line: 79, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!109, !1057, !928, !884}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1157, file: !836, line: 105, baseType: !1180, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !836, line: 88, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!835, !1057, !928}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1157, file: !836, line: 106, baseType: !1185, size: 32, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !836, line: 92, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!109, !1057, !928, !954}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1157, file: !836, line: 107, baseType: !1190, size: 32, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !836, line: 96, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!109, !1057, !928, !107}
!1194 = !{!1195, !1201, !1203, !1213, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1278, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1026, !1312, !1314, !1327, !1329, !1331, !1333, !1335, !1337, !1339}
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1197 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 96, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 6)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1207)
!1207 = !{!1208, !1212}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1206, file: !327, line: 60, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!109, !1057}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1206, file: !327, line: 65, baseType: !1057, size: 32, offset: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1216)
!1216 = !{!1217}
!1217 = !DISubrange(count: 5)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1215, isLocal: false, isDefinition: true, align: 16)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1028, file: !1197, line: 762, type: !1266, isLocal: true, isDefinition: true)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1267, line: 237, size: 128, elements: !1268)
!1267 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1266, file: !1267, line: 239, baseType: !1126, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1266, file: !1267, line: 241, baseType: !1057, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1266, file: !1267, line: 243, baseType: !1272, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1104, line: 40, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1104, line: 35, size: 64, elements: !1274)
!1274 = !{!1275, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1273, file: !1104, line: 36, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1273, file: !1104, line: 37, baseType: !1276, size: 32, offset: 32)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1028, file: !1197, line: 762, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1028, file: !1197, line: 766, type: !1266, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1028, file: !1197, line: 766, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1028, file: !1197, line: 770, type: !1266, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1028, file: !1197, line: 770, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1028, file: !1197, line: 774, type: !1266, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1028, file: !1197, line: 774, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1028, file: !1197, line: 778, type: !1266, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1028, file: !1197, line: 778, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1028, file: !1197, line: 782, type: !1266, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1028, file: !1197, line: 782, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1028, file: !1197, line: 786, type: !1266, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1028, file: !1197, line: 786, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1028, file: !1197, line: 790, type: !1266, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1028, file: !1197, line: 790, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1028, file: !1197, line: 794, type: !1266, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1028, file: !1197, line: 794, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1028, file: !1197, line: 656, type: !1050, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1028, file: !1197, line: 766, type: !1316, isLocal: true, isDefinition: true)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1267, line: 224, size: 160, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1317, file: !1267, line: 226, baseType: !1121, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1317, file: !1267, line: 228, baseType: !884, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1317, file: !1267, line: 230, baseType: !109, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1317, file: !1267, line: 231, baseType: !1323, size: 64, offset: 96)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1323, file: !880, line: 344, baseType: !110, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1323, file: !880, line: 345, baseType: !110, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1028, file: !1197, line: 770, type: !1316, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1028, file: !1197, line: 774, type: !1316, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1028, file: !1197, line: 778, type: !1316, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1028, file: !1197, line: 782, type: !1316, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1028, file: !1197, line: 786, type: !1316, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1028, file: !1197, line: 790, type: !1316, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1028, file: !1197, line: 794, type: !1316, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1343, file: !1482, line: 44, type: !1560, isLocal: false, isDefinition: true)
!1343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1345, retainedTypes: !1378, globals: !1479, splitDebugInlining: false, nameTableKind: None)
!1344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1345 = !{!30, !1346, !1353, !1360, !1367, !1373, !835}
!1346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !968, line: 47, baseType: !32, size: 32, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352}
!1348 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1349 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1350 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1351 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1352 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !968, line: 75, baseType: !32, size: 32, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1356 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1357 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1358 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1359 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !968, line: 92, baseType: !32, size: 32, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366}
!1362 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1363 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1364 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1365 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1366 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !968, line: 84, baseType: !32, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372}
!1369 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1370 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1371 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1372 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !968, line: 107, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377}
!1375 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1376 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1377 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1378 = !{!107, !109, !1379, !181, !180, !1428, !110, !928, !1439, !194, !111, !1478}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !968, line: 336, size: 160, elements: !1382)
!1382 = !{!1383, !1402, !1406, !1410, !1423}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1381, file: !968, line: 365, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!109, !1387, !989}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1400, !1401}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !336, line: 380, baseType: !279, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1389, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1389, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1389, file: !336, line: 386, baseType: !1395, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1396, file: !336, line: 359, baseType: !180, size: 8)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1396, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1389, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1389, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1381, file: !968, line: 366, baseType: !1403, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{null, !1387, !181}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1381, file: !968, line: 374, baseType: !1407, size: 32, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!109, !1387}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1381, file: !968, line: 377, baseType: !1411, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!109, !1387, !1414}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !968, line: 122, size: 64, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1416, file: !968, line: 123, baseType: !110, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1416, file: !968, line: 124, baseType: !180, size: 8, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1416, file: !968, line: 125, baseType: !180, size: 8, offset: 40)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1416, file: !968, line: 126, baseType: !180, size: 8, offset: 48)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1416, file: !968, line: 127, baseType: !180, size: 8, offset: 56)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1381, file: !968, line: 379, baseType: !1424, size: 32, offset: 128)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!109, !1387, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 670, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 661, size: 224, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1430, file: !312, line: 663, baseType: !316, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1430, file: !312, line: 664, baseType: !316, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1430, file: !312, line: 665, baseType: !316, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1430, file: !312, line: 666, baseType: !316, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1430, file: !312, line: 667, baseType: !316, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1430, file: !312, line: 668, baseType: !316, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1430, file: !312, line: 669, baseType: !316, size: 32, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !836, line: 100, size: 224, elements: !1442)
!1442 = !{!1443, !1448, !1449, !1458, !1463, !1468, !1473}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1441, file: !836, line: 101, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !836, line: 76, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!109, !1387, !928}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1441, file: !836, line: 102, baseType: !1444, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1441, file: !836, line: 103, baseType: !1450, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !836, line: 83, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!109, !1387, !928, !1454, !107}
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !836, line: 72, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1387, !928, !107}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1441, file: !836, line: 104, baseType: !1459, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !836, line: 79, baseType: !1460)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!109, !1387, !928, !884}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1441, file: !836, line: 105, baseType: !1464, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !836, line: 88, baseType: !1465)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!835, !1387, !928}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1441, file: !836, line: 106, baseType: !1469, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !836, line: 92, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!109, !1387, !928, !954}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1441, file: !836, line: 107, baseType: !1474, size: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !836, line: 96, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!109, !1387, !928, !107}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1479 = !{!1341, !1480, !1486, !1488, !1495, !1497, !1541, !1544, !1546, !1549, !1552, !1554}
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1483, isLocal: false, isDefinition: true, align: 16)
!1482 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1484)
!1484 = !{!1485}
!1485 = !DISubrange(count: 8)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1490, isLocal: true, isDefinition: true, align: 32)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1492)
!1492 = !{!1493, !1494}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1491, file: !327, line: 60, baseType: !1407, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1491, file: !327, line: 65, baseType: !1387, size: 32, offset: 32)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1343, file: !1482, line: 1914, type: !1499, isLocal: true, isDefinition: true)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1501, line: 22, size: 224, elements: !1502)
!1501 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1502 = !{!1503, !1504, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1500, file: !1501, line: 24, baseType: !1428, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1500, file: !1501, line: 26, baseType: !1505, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1507, file: !880, line: 344, baseType: !110, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1507, file: !880, line: 345, baseType: !110, size: 32, offset: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1500, file: !1501, line: 28, baseType: !234, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1500, file: !1501, line: 30, baseType: !347, size: 8, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1500, file: !1501, line: 32, baseType: !109, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1500, file: !1501, line: 34, baseType: !347, size: 8, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1500, file: !1501, line: 36, baseType: !347, size: 8, offset: 168)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1500, file: !1501, line: 38, baseType: !347, size: 8, offset: 176)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1500, file: !1501, line: 40, baseType: !347, size: 8, offset: 184)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1500, file: !1501, line: 41, baseType: !1519, size: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1522, line: 60, size: 64, elements: !1523)
!1522 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1523 = !{!1524, !1540}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1521, file: !1522, line: 69, baseType: !1525, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1522, line: 50, size: 64, elements: !1528)
!1528 = !{!1529, !1538, !1539}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1527, file: !1522, line: 52, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1533, line: 37, baseType: !1534)
!1533 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1533, line: 32, size: 64, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1534, file: !1533, line: 34, baseType: !110, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1534, file: !1533, line: 36, baseType: !110, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1527, file: !1522, line: 54, baseType: !180, size: 8, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1527, file: !1522, line: 56, baseType: !180, size: 8, offset: 40)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1521, file: !1522, line: 71, baseType: !180, size: 8, offset: 32)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1343, file: !1482, line: 1914, type: !1543, isLocal: true, isDefinition: true)
!1543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 64, elements: !517)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1520, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1548, isLocal: true, isDefinition: true)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 64, elements: !517)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1551, isLocal: true, isDefinition: true)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 128, elements: !175)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1343, file: !1482, line: 1539, type: !1380, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1343, file: !1482, line: 1914, type: !1556, isLocal: true, isDefinition: true)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1501, line: 74, size: 64, elements: !1557)
!1557 = !{!1558, !1559}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1556, file: !1501, line: 76, baseType: !110, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1556, file: !1501, line: 78, baseType: !1387, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1561, file: !291, line: 17, baseType: !279, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1561, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1567, file: !1645, line: 65, type: !316, isLocal: true, isDefinition: true)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !1570, globals: !1642, splitDebugInlining: false, nameTableKind: None)
!1568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1569 = !{!604}
!1570 = !{!103, !1571, !766, !180, !110, !1579, !1610}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1573, file: !535, line: 766, baseType: !316, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1573, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1573, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1573, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1582)
!1582 = !{!1583, !1585, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1600, !1605, !1609}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1581, file: !535, line: 413, baseType: !1584, size: 256)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1484)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1581, file: !535, line: 414, baseType: !1586, size: 768, offset: 256)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1587)
!1587 = !{!1588}
!1588 = !DISubrange(count: 24)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1581, file: !535, line: 415, baseType: !1584, size: 256, offset: 1024)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1581, file: !535, line: 416, baseType: !1586, size: 768, offset: 1280)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1581, file: !535, line: 417, baseType: !1584, size: 256, offset: 2048)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1581, file: !535, line: 418, baseType: !1586, size: 768, offset: 2304)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1581, file: !535, line: 419, baseType: !1584, size: 256, offset: 3072)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1581, file: !535, line: 420, baseType: !1586, size: 768, offset: 3328)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1581, file: !535, line: 421, baseType: !1584, size: 256, offset: 4096)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1581, file: !535, line: 422, baseType: !1597, size: 1792, offset: 4352)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1598)
!1598 = !{!1599}
!1599 = !DISubrange(count: 56)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1581, file: !535, line: 423, baseType: !1601, size: 1920, offset: 6144)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 1920, elements: !1603)
!1602 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!1603 = !{!1604}
!1604 = !DISubrange(count: 240)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1581, file: !535, line: 424, baseType: !1606, size: 20608, offset: 8064)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 644)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1581, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1633, !1634, !1635, !1637, !1639, !1641}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1612, file: !535, line: 447, baseType: !539, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1612, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1612, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1612, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1612, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1612, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1612, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 96, elements: !1622)
!1622 = !{!1623}
!1623 = !DISubrange(count: 12)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1612, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1612, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1612, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1612, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1612, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1612, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1612, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1612, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !175)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1612, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1612, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1612, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !708)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1612, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1612, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1216)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1612, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1642 = !{!1643, !1669, !1674, !1676, !1678, !1565}
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1567, file: !1645, line: 285, type: !1646, isLocal: true, isDefinition: true, align: 32)
!1645 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1648)
!1648 = !{!1649, !1668}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1647, file: !327, line: 60, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!109, !1653}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1656)
!1656 = !{!1657, !1658, !1659, !1660, !1666, !1667}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1655, file: !336, line: 380, baseType: !279, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1655, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1655, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1655, file: !336, line: 386, baseType: !1661, size: 32, offset: 96)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1663)
!1663 = !{!1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1662, file: !336, line: 359, baseType: !180, size: 8)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1662, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1655, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1655, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1647, file: !327, line: 65, baseType: !1653, size: 32, offset: 32)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "lock", scope: !1567, file: !1645, line: 34, type: !1671, isLocal: true, isDefinition: true)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1672)
!1672 = !{!1673}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1671, file: !253, line: 52, baseType: !22, size: 32)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "last_load", scope: !1567, file: !1645, line: 36, type: !110, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1567, file: !1645, line: 48, type: !110, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1567, file: !1645, line: 54, type: !110, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1682, file: !1764, line: 22, type: !1766, isLocal: true, isDefinition: true)
!1682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1684, retainedTypes: !1685, globals: !1761, splitDebugInlining: false, nameTableKind: None)
!1683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1684 = !{!1031, !1037}
!1685 = !{!1686, !1750, !1755, !1084, !1037, !1031, !1760, !107}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1032, line: 523, size: 288, elements: !1689)
!1689 = !{!1690, !1709, !1713, !1717, !1721, !1722, !1723, !1727, !1746}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1688, file: !1032, line: 524, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!109, !1694, !1072, !1073}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1707, !1708}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1696, file: !336, line: 380, baseType: !279, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1696, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1696, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1696, file: !336, line: 386, baseType: !1702, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1703, file: !336, line: 359, baseType: !180, size: 8)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1703, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1696, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1696, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1688, file: !1032, line: 530, baseType: !1710, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!109, !1694, !1078}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1688, file: !1032, line: 532, baseType: !1714, size: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!109, !1694, !1084, !1079}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1688, file: !1032, line: 535, baseType: !1718, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!109, !1694, !1084}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1688, file: !1032, line: 537, baseType: !1718, size: 32, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1688, file: !1032, line: 539, baseType: !1718, size: 32, offset: 160)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1688, file: !1032, line: 541, baseType: !1724, size: 32, offset: 192)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!109, !1694, !1072, !1031, !1037}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1688, file: !1032, line: 544, baseType: !1728, size: 32, offset: 224)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!109, !1694, !1731, !347}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1032, line: 478, size: 96, elements: !1733)
!1733 = !{!1734, !1740, !1745}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1732, file: !1032, line: 482, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1104, line: 33, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1104, line: 29, size: 32, elements: !1737)
!1737 = !{!1738}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1736, file: !1104, line: 30, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1732, file: !1032, line: 485, baseType: !1741, size: 32, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1032, line: 464, baseType: !1742)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !1694, !1731, !1084}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1732, file: !1032, line: 493, baseType: !1084, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1688, file: !1032, line: 547, baseType: !1747, size: 32, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!110, !1694}
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1032, line: 428, size: 32, elements: !1753)
!1753 = !{!1754}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1752, file: !1032, line: 434, baseType: !1084, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1032, line: 441, size: 32, elements: !1758)
!1758 = !{!1759}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1757, file: !1032, line: 447, baseType: !1084, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1761 = !{!1762, !1680}
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1763 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1682, file: !1764, line: 37, type: !1765, isLocal: true, isDefinition: true)
!1764 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 352, elements: !1768)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1768 = !{!1769}
!1769 = !DISubrange(count: 11)
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1772, file: !1812, line: 139, type: !1819, isLocal: false, isDefinition: true)
!1772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1774, globals: !1809, splitDebugInlining: false, nameTableKind: None)
!1773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1777, file: !312, line: 502, baseType: !316, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1777, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1777, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1777, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1777, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1777, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1777, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1777, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1777, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1777, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1777, file: !312, line: 512, baseType: !858, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1777, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1777, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1777, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1777, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1777, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1777, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1777, file: !312, line: 519, baseType: !858, size: 64, offset: 576)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1777, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1777, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1777, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1777, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1777, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1777, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1777, file: !312, line: 526, baseType: !858, size: 64, offset: 832)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1777, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1777, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1777, file: !312, line: 529, baseType: !858, size: 64, offset: 960)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1777, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1777, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!1809 = !{!1810, !1813, !1770}
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1772, file: !1812, line: 137, type: !110, isLocal: false, isDefinition: true)
!1812 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1772, file: !1812, line: 138, type: !1815, isLocal: false, isDefinition: true)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 128, elements: !1817)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1817 = !{!1818}
!1818 = !DISubrange(count: 16)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 64, elements: !1484)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1822, file: !1825, line: 23, type: !1826, isLocal: false, isDefinition: true)
!1822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1823, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1824, splitDebugInlining: false, nameTableKind: None)
!1823 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1824 = !{!1820}
!1825 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1829, file: !1833, line: 37, type: !2087, isLocal: false, isDefinition: true)
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1831, retainedTypes: !1840, globals: !1913, splitDebugInlining: false, nameTableKind: None)
!1830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!1831 = !{!1832, !30, !604}
!1832 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1833, line: 63, baseType: !32, size: 32, elements: !1834)
!1833 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1834 = !{!1835, !1836, !1837, !1838, !1839}
!1835 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1836 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1837 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1838 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1839 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1840 = !{!22, !234, !107, !109, !1841, !285, !110, !1871, !766, !180, !1896}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1844, line: 51, size: 64, elements: !1845)
!1844 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1845 = !{!1846, !1866}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1843, file: !1844, line: 52, baseType: !1847, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1844, line: 38, baseType: !1848)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!109, !1851, !286, !194}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858, !1864, !1865}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1853, file: !336, line: 380, baseType: !279, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1853, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1853, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1853, file: !336, line: 386, baseType: !1859, size: 32, offset: 96)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1860, file: !336, line: 359, baseType: !180, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1860, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1853, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1853, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1843, file: !1844, line: 53, baseType: !1867, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1844, line: 47, baseType: !1868)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!109, !1851, !286, !194, !110}
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1873, file: !535, line: 447, baseType: !539, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1873, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1873, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1873, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1873, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1873, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1873, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1873, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1873, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1873, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1873, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1873, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1873, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1873, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1873, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1873, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1873, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1873, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1873, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1873, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1873, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1898, file: !535, line: 413, baseType: !1584, size: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1898, file: !535, line: 414, baseType: !1586, size: 768, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1898, file: !535, line: 415, baseType: !1584, size: 256, offset: 1024)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1898, file: !535, line: 416, baseType: !1586, size: 768, offset: 1280)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1898, file: !535, line: 417, baseType: !1584, size: 256, offset: 2048)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1898, file: !535, line: 418, baseType: !1586, size: 768, offset: 2304)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1898, file: !535, line: 419, baseType: !1584, size: 256, offset: 3072)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1898, file: !535, line: 420, baseType: !1586, size: 768, offset: 3328)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1898, file: !535, line: 421, baseType: !1584, size: 256, offset: 4096)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1898, file: !535, line: 422, baseType: !1597, size: 1792, offset: 4352)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1898, file: !535, line: 423, baseType: !1601, size: 1920, offset: 6144)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1898, file: !535, line: 424, baseType: !1606, size: 20608, offset: 8064)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1898, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1913 = !{!1827, !1914, !2040, !2047, !2049, !2052, !2057, !2059, !2064}
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "_kernel", scope: !1829, file: !1833, line: 40, type: !1916, isLocal: false, isDefinition: true)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1917)
!1917 = !{!1918, !2035}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1916, file: !122, line: 159, baseType: !1919, size: 192)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1920, size: 192, elements: !517)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1921)
!1921 = !{!1922, !1923, !1924, !2028, !2029, !2030, !2031}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1920, file: !122, line: 102, baseType: !110, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1920, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1920, file: !122, line: 108, baseType: !1925, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !1927)
!1927 = !{!1928, !1986, !1998, !1999, !2000, !2001, !2002, !2008, !2023}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1926, file: !158, line: 247, baseType: !1929, size: 384)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !1930)
!1930 = !{!1931, !1955, !1962, !1963, !1964, !1973, !1974, !1975}
!1931 = !DIDerivedType(tag: DW_TAG_member, scope: !1929, file: !158, line: 60, baseType: !1932, size: 64)
!1932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1929, file: !158, line: 60, size: 64, elements: !1933)
!1933 = !{!1934, !1949}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1932, file: !158, line: 61, baseType: !1935, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1937)
!1937 = !{!1938, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, scope: !1936, file: !127, line: 38, baseType: !1939, size: 32)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !127, line: 38, size: 32, elements: !1940)
!1940 = !{!1941, !1943}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1939, file: !127, line: 39, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1939, file: !127, line: 40, baseType: !1942, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, scope: !1936, file: !127, line: 42, baseType: !1945, size: 32, offset: 32)
!1945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !127, line: 42, size: 32, elements: !1946)
!1946 = !{!1947, !1948}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1945, file: !127, line: 43, baseType: !1942, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1945, file: !127, line: 44, baseType: !1942, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1932, file: !158, line: 62, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1950, file: !170, line: 50, baseType: !1953, size: 64)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1954, size: 64, elements: !175)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1929, file: !158, line: 68, baseType: !1956, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1959)
!1959 = !{!1960}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1958, file: !122, line: 232, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1936)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1929, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1929, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1929, file: !158, line: 90, baseType: !1965, size: 16, offset: 112)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1929, file: !158, line: 90, size: 16, elements: !1966)
!1966 = !{!1967, !1972}
!1967 = !DIDerivedType(tag: DW_TAG_member, scope: !1965, file: !158, line: 91, baseType: !1968, size: 16)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1965, file: !158, line: 91, size: 16, elements: !1969)
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1968, file: !158, line: 96, baseType: !190, size: 8)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1968, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1965, file: !158, line: 100, baseType: !194, size: 16)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1929, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1929, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1929, file: !158, line: 131, baseType: !1976, size: 192, offset: 192)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1977)
!1977 = !{!1978, !1979, !1985}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1976, file: !122, line: 245, baseType: !1935, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1976, file: !122, line: 246, baseType: !1980, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !1984}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1976, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1926, file: !158, line: 250, baseType: !1987, size: 288, offset: 384)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1987, file: !211, line: 26, baseType: !110, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1987, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1987, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1987, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1987, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1987, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1987, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1987, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1987, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1926, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1926, file: !158, line: 256, baseType: !1957, size: 64, offset: 704)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1926, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1926, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1926, file: !158, line: 300, baseType: !2003, size: 96, offset: 1056)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2003, file: !158, line: 153, baseType: !22, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2003, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2003, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1926, file: !158, line: 325, baseType: !2009, size: 32, offset: 1152)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2011)
!2011 = !{!2012, !2018, !2019}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2010, file: !118, line: 5074, baseType: !2013, size: 96)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2014)
!2014 = !{!2015, !2016, !2017}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2013, file: !243, line: 57, baseType: !246, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2013, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2013, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2010, file: !118, line: 5075, baseType: !1957, size: 64, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2010, file: !118, line: 5076, baseType: !2020, size: 32, offset: 160)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2021)
!2021 = !{!2022}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2020, file: !253, line: 52, baseType: !22, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1926, file: !158, line: 343, baseType: !2024, size: 64, offset: 1184)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2024, file: !211, line: 63, baseType: !110, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2024, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1920, file: !122, line: 111, baseType: !1925, size: 32, offset: 96)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1920, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1920, file: !122, line: 127, baseType: !180, size: 8, offset: 160)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1920, file: !122, line: 153, baseType: !2032, offset: 168)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2033, line: 33, elements: !2034)
!2033 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2034 = !{}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1916, file: !122, line: 170, baseType: !2036, size: 96, offset: 192)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2037)
!2037 = !{!2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2036, file: !122, line: 86, baseType: !1925, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2036, file: !122, line: 90, baseType: !1961, size: 64, offset: 32)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1829, file: !1833, line: 43, type: !2042, isLocal: false, isDefinition: true, align: 512)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2043, size: 8704, elements: !2046)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2044)
!2044 = !{!2045}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2043, file: !147, line: 48, baseType: !150, size: 8)
!2046 = !{!153}
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1829, file: !1833, line: 44, type: !1926, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1829, file: !1833, line: 48, type: !2051, isLocal: false, isDefinition: true)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1926, size: 1280, elements: !517)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1829, file: !1833, line: 86, type: !2054, isLocal: false, isDefinition: true, align: 512)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2043, size: 16896, elements: !2055)
!2055 = !{!518, !2056}
!2056 = !DISubrange(count: 2112)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1829, file: !1833, line: 217, type: !347, isLocal: false, isDefinition: true)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1829, file: !1833, line: 50, type: !2061, isLocal: true, isDefinition: true, align: 512)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2043, size: 3072, elements: !2062)
!2062 = !{!518, !2063}
!2063 = !DISubrange(count: 384)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "levels", scope: !2066, file: !1833, line: 232, type: !2086, isLocal: true, isDefinition: true)
!2066 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1833, file: !1833, line: 230, type: !2067, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2069)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{null, !1832}
!2069 = !{!2070, !2071, !2081, !2085}
!2070 = !DILocalVariable(name: "level", arg: 1, scope: !2066, file: !1833, line: 230, type: !1832)
!2071 = !DILocalVariable(name: "entry", scope: !2066, file: !1833, line: 244, type: !2072)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2075)
!2075 = !{!2076, !2080}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2074, file: !327, line: 60, baseType: !2077, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!109, !1851}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2074, file: !327, line: 65, baseType: !1851, size: 32, offset: 32)
!2081 = !DILocalVariable(name: "dev", scope: !2082, file: !1833, line: 247, type: !1851)
!2082 = distinct !DILexicalBlock(scope: !2083, file: !1833, line: 246, column: 64)
!2083 = distinct !DILexicalBlock(scope: !2084, file: !1833, line: 246, column: 2)
!2084 = distinct !DILexicalBlock(scope: !2066, file: !1833, line: 246, column: 2)
!2085 = !DILocalVariable(name: "rc", scope: !2082, file: !1833, line: 248, type: !109)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 192, elements: !1199)
!2087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2088, file: !291, line: 17, baseType: !279, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2088, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "states_str", scope: !2094, file: !2095, line: 276, type: !2219, isLocal: true, isDefinition: true)
!2094 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2095, file: !2095, line: 271, type: !2096, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !2210)
!2095 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!279, !2098, !285, !234}
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2099)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2101)
!2101 = !{!2102, !2160, !2172, !2173, !2174, !2175, !2176, !2182, !2197}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2100, file: !158, line: 247, baseType: !2103, size: 384)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2104)
!2104 = !{!2105, !2129, !2136, !2137, !2138, !2147, !2148, !2149}
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2103, file: !158, line: 60, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2103, file: !158, line: 60, size: 64, elements: !2107)
!2107 = !{!2108, !2123}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2106, file: !158, line: 61, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2111)
!2111 = !{!2112, !2118}
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !2110, file: !127, line: 38, baseType: !2113, size: 32)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2110, file: !127, line: 38, size: 32, elements: !2114)
!2114 = !{!2115, !2117}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2113, file: !127, line: 39, baseType: !2116, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2113, file: !127, line: 40, baseType: !2116, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2110, file: !127, line: 42, baseType: !2119, size: 32, offset: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2110, file: !127, line: 42, size: 32, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2119, file: !127, line: 43, baseType: !2116, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2119, file: !127, line: 44, baseType: !2116, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2106, file: !158, line: 62, baseType: !2124, size: 64)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2125)
!2125 = !{!2126}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2124, file: !170, line: 50, baseType: !2127, size: 64)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 64, elements: !175)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2103, file: !158, line: 68, baseType: !2130, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2132)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2133)
!2133 = !{!2134}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2132, file: !122, line: 232, baseType: !2135, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2110)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2103, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2103, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2138 = !DIDerivedType(tag: DW_TAG_member, scope: !2103, file: !158, line: 90, baseType: !2139, size: 16, offset: 112)
!2139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2103, file: !158, line: 90, size: 16, elements: !2140)
!2140 = !{!2141, !2146}
!2141 = !DIDerivedType(tag: DW_TAG_member, scope: !2139, file: !158, line: 91, baseType: !2142, size: 16)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2139, file: !158, line: 91, size: 16, elements: !2143)
!2143 = !{!2144, !2145}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2142, file: !158, line: 96, baseType: !190, size: 8)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2142, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2139, file: !158, line: 100, baseType: !194, size: 16)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2103, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2103, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2103, file: !158, line: 131, baseType: !2150, size: 192, offset: 192)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2151)
!2151 = !{!2152, !2153, !2159}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2150, file: !122, line: 245, baseType: !2109, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2150, file: !122, line: 246, baseType: !2154, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2155)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{null, !2158}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2150, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2100, file: !158, line: 250, baseType: !2161, size: 288, offset: 384)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2162)
!2162 = !{!2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2161, file: !211, line: 26, baseType: !110, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2161, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2161, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2161, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2161, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2161, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2161, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2161, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2161, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2100, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2100, file: !158, line: 256, baseType: !2131, size: 64, offset: 704)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2100, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2100, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2100, file: !158, line: 300, baseType: !2177, size: 96, offset: 1056)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2178)
!2178 = !{!2179, !2180, !2181}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2177, file: !158, line: 153, baseType: !22, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2177, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2177, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2100, file: !158, line: 325, baseType: !2183, size: 32, offset: 1152)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2185)
!2185 = !{!2186, !2192, !2193}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2184, file: !118, line: 5074, baseType: !2187, size: 96)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2188)
!2188 = !{!2189, !2190, !2191}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2187, file: !243, line: 57, baseType: !246, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2187, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2187, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2184, file: !118, line: 5075, baseType: !2131, size: 64, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2184, file: !118, line: 5076, baseType: !2194, size: 32, offset: 160)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2195)
!2195 = !{!2196}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2194, file: !253, line: 52, baseType: !22, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2100, file: !158, line: 343, baseType: !2198, size: 64, offset: 1184)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2198, file: !211, line: 63, baseType: !110, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2198, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2203, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2204, globals: !2206, splitDebugInlining: false, nameTableKind: None)
!2203 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2204 = !{!107, !279, !103, !180, !22, !109, !2205, !24, !234, !285, !110, !111}
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2206 = !{!2092, !2207}
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "states_sz", scope: !2094, file: !2095, line: 279, type: !2209, isLocal: true, isDefinition: true)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1765, size: 256, elements: !1484)
!2210 = !{!2211, !2212, !2213, !2214, !2215, !2216, !2217}
!2211 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2094, file: !2095, line: 271, type: !2098)
!2212 = !DILocalVariable(name: "buf", arg: 2, scope: !2094, file: !2095, line: 271, type: !285)
!2213 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2094, file: !2095, line: 271, type: !234)
!2214 = !DILocalVariable(name: "off", scope: !2094, file: !2095, line: 273, type: !234)
!2215 = !DILocalVariable(name: "bit", scope: !2094, file: !2095, line: 274, type: !180)
!2216 = !DILocalVariable(name: "thread_state", scope: !2094, file: !2095, line: 275, type: !180)
!2217 = !DILocalVariable(name: "index", scope: !2218, file: !2095, line: 293, type: !180)
!2218 = distinct !DILexicalBlock(scope: !2094, file: !2095, line: 293, column: 2)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1484)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "lock", scope: !2222, file: !2330, line: 47, type: !2321, isLocal: true, isDefinition: true)
!2222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2224, globals: !2329, splitDebugInlining: false, nameTableKind: None)
!2223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2224 = !{!347, !107, !109, !2225, !2240}
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2228)
!2228 = !{!2229, !2235}
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !127, line: 38, baseType: !2230, size: 32)
!2230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2227, file: !127, line: 38, size: 32, elements: !2231)
!2231 = !{!2232, !2234}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2230, file: !127, line: 39, baseType: !2233, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2230, file: !127, line: 40, baseType: !2233, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !127, line: 42, baseType: !2236, size: 32, offset: 32)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2227, file: !127, line: 42, size: 32, elements: !2237)
!2237 = !{!2238, !2239}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2236, file: !127, line: 43, baseType: !2233, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2236, file: !127, line: 44, baseType: !2233, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2242)
!2242 = !{!2243, !2287, !2299, !2300, !2301, !2302, !2303, !2309, !2324}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2241, file: !158, line: 247, baseType: !2244, size: 384)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2245)
!2245 = !{!2246, !2256, !2263, !2264, !2265, !2274, !2275, !2276}
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2244, file: !158, line: 60, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2244, file: !158, line: 60, size: 64, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2247, file: !158, line: 61, baseType: !2226, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2247, file: !158, line: 62, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2252)
!2252 = !{!2253}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2251, file: !170, line: 50, baseType: !2254, size: 64)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2255, size: 64, elements: !175)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2244, file: !158, line: 68, baseType: !2257, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2260)
!2260 = !{!2261}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2259, file: !122, line: 232, baseType: !2262, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2227)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2244, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2244, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2265 = !DIDerivedType(tag: DW_TAG_member, scope: !2244, file: !158, line: 90, baseType: !2266, size: 16, offset: 112)
!2266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2244, file: !158, line: 90, size: 16, elements: !2267)
!2267 = !{!2268, !2273}
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2266, file: !158, line: 91, baseType: !2269, size: 16)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2266, file: !158, line: 91, size: 16, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2269, file: !158, line: 96, baseType: !190, size: 8)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2269, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2266, file: !158, line: 100, baseType: !194, size: 16)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2244, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2244, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2244, file: !158, line: 131, baseType: !2277, size: 192, offset: 192)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2278)
!2278 = !{!2279, !2280, !2286}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2277, file: !122, line: 245, baseType: !2226, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2277, file: !122, line: 246, baseType: !2281, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2282)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{null, !2285}
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2277, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2241, file: !158, line: 250, baseType: !2288, size: 288, offset: 384)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2288, file: !211, line: 26, baseType: !110, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2288, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2288, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2288, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2288, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2288, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2288, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2288, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2288, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2241, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2241, file: !158, line: 256, baseType: !2258, size: 64, offset: 704)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2241, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2241, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2241, file: !158, line: 300, baseType: !2304, size: 96, offset: 1056)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2305)
!2305 = !{!2306, !2307, !2308}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2304, file: !158, line: 153, baseType: !22, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2304, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2304, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2241, file: !158, line: 325, baseType: !2310, size: 32, offset: 1152)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2312)
!2312 = !{!2313, !2319, !2320}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2311, file: !118, line: 5074, baseType: !2314, size: 96)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2314, file: !243, line: 57, baseType: !246, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2314, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2314, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2311, file: !118, line: 5075, baseType: !2258, size: 64, offset: 96)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2311, file: !118, line: 5076, baseType: !2321, size: 32, offset: 160)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2322)
!2322 = !{!2323}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2321, file: !253, line: 52, baseType: !22, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2241, file: !158, line: 343, baseType: !2325, size: 64, offset: 1184)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2326)
!2326 = !{!2327, !2328}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2325, file: !211, line: 63, baseType: !110, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2325, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2329 = !{!2220}
!2330 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2333, file: !2444, line: 56, type: !2431, isLocal: false, isDefinition: true)
!2333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2335, globals: !2441, splitDebugInlining: false, nameTableKind: None)
!2334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2335 = !{!2336, !285, !107, !2439, !286, !103, !766, !109, !110, !111, !2440}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2338)
!2338 = !{!2339, !2397, !2409, !2410, !2411, !2412, !2413, !2419, !2434}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2337, file: !158, line: 247, baseType: !2340, size: 384)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2341)
!2341 = !{!2342, !2366, !2373, !2374, !2375, !2384, !2385, !2386}
!2342 = !DIDerivedType(tag: DW_TAG_member, scope: !2340, file: !158, line: 60, baseType: !2343, size: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2340, file: !158, line: 60, size: 64, elements: !2344)
!2344 = !{!2345, !2360}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2343, file: !158, line: 61, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2348)
!2348 = !{!2349, !2355}
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2347, file: !127, line: 38, baseType: !2350, size: 32)
!2350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2347, file: !127, line: 38, size: 32, elements: !2351)
!2351 = !{!2352, !2354}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2350, file: !127, line: 39, baseType: !2353, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2350, file: !127, line: 40, baseType: !2353, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, scope: !2347, file: !127, line: 42, baseType: !2356, size: 32, offset: 32)
!2356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2347, file: !127, line: 42, size: 32, elements: !2357)
!2357 = !{!2358, !2359}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2356, file: !127, line: 43, baseType: !2353, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2356, file: !127, line: 44, baseType: !2353, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2343, file: !158, line: 62, baseType: !2361, size: 64)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2361, file: !170, line: 50, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 64, elements: !175)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2340, file: !158, line: 68, baseType: !2367, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2369)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2370)
!2370 = !{!2371}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2369, file: !122, line: 232, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2347)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2340, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2340, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2340, file: !158, line: 90, baseType: !2376, size: 16, offset: 112)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2340, file: !158, line: 90, size: 16, elements: !2377)
!2377 = !{!2378, !2383}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !158, line: 91, baseType: !2379, size: 16)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2376, file: !158, line: 91, size: 16, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2379, file: !158, line: 96, baseType: !190, size: 8)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2379, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2376, file: !158, line: 100, baseType: !194, size: 16)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2340, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2340, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2340, file: !158, line: 131, baseType: !2387, size: 192, offset: 192)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2388)
!2388 = !{!2389, !2390, !2396}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2387, file: !122, line: 245, baseType: !2346, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2387, file: !122, line: 246, baseType: !2391, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{null, !2395}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2387, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2337, file: !158, line: 250, baseType: !2398, size: 288, offset: 384)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2398, file: !211, line: 26, baseType: !110, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2398, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2398, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2398, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2398, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2398, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2398, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2398, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2398, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2337, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2337, file: !158, line: 256, baseType: !2368, size: 64, offset: 704)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2337, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2337, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2337, file: !158, line: 300, baseType: !2414, size: 96, offset: 1056)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2414, file: !158, line: 153, baseType: !22, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2414, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2414, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2337, file: !158, line: 325, baseType: !2420, size: 32, offset: 1152)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2422)
!2422 = !{!2423, !2429, !2430}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2421, file: !118, line: 5074, baseType: !2424, size: 96)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2425)
!2425 = !{!2426, !2427, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2424, file: !243, line: 57, baseType: !246, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2424, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2424, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2421, file: !118, line: 5075, baseType: !2368, size: 64, offset: 96)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2421, file: !118, line: 5076, baseType: !2431, size: 32, offset: 160)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2432)
!2432 = !{!2433}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2431, file: !253, line: 52, baseType: !22, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2337, file: !158, line: 343, baseType: !2435, size: 64, offset: 1184)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2435, file: !211, line: 63, baseType: !110, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2435, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2441 = !{!2331, !2442, !2445, !2447}
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2333, file: !2444, line: 404, type: !109, isLocal: true, isDefinition: true)
!2444 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2333, file: !2444, line: 405, type: !109, isLocal: true, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "pending_current", scope: !2333, file: !2444, line: 425, type: !2336, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "lock", scope: !2451, file: !2470, line: 14, type: !2471, isLocal: true, isDefinition: true)
!2451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2453, globals: !2469, splitDebugInlining: false, nameTableKind: None)
!2452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2453 = !{!107, !103, !109, !2454}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2457)
!2457 = !{!2458, !2464}
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2456, file: !127, line: 38, baseType: !2459, size: 32)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2456, file: !127, line: 38, size: 32, elements: !2460)
!2460 = !{!2461, !2463}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2459, file: !127, line: 39, baseType: !2462, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2459, file: !127, line: 40, baseType: !2462, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, scope: !2456, file: !127, line: 42, baseType: !2465, size: 32, offset: 32)
!2465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2456, file: !127, line: 42, size: 32, elements: !2466)
!2466 = !{!2467, !2468}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2465, file: !127, line: 43, baseType: !2462, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2465, file: !127, line: 44, baseType: !2462, size: 32)
!2469 = !{!2449}
!2470 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2472)
!2472 = !{!2473}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2471, file: !253, line: 52, baseType: !22, size: 32)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2476, file: !2506, line: 19, type: !2512, isLocal: true, isDefinition: true)
!2476 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2477, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2478, globals: !2503, splitDebugInlining: false, nameTableKind: None)
!2477 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2478 = !{!103, !107, !766, !110, !111, !109, !2479, !285, !105}
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2481)
!2481 = !{!2482, !2497, !2502}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2480, file: !122, line: 245, baseType: !2483, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2485)
!2485 = !{!2486, !2492}
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !127, line: 38, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !127, line: 38, size: 32, elements: !2488)
!2488 = !{!2489, !2491}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2487, file: !127, line: 39, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2487, file: !127, line: 40, baseType: !2490, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !127, line: 42, baseType: !2493, size: 32, offset: 32)
!2493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !127, line: 42, size: 32, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2493, file: !127, line: 43, baseType: !2490, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2493, file: !127, line: 44, baseType: !2490, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2480, file: !122, line: 246, baseType: !2498, size: 32, offset: 64)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2499)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !2479}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2480, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2503 = !{!2504, !2474, !2507, !2509}
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2476, file: !2506, line: 15, type: !111, isLocal: true, isDefinition: true)
!2506 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2476, file: !2506, line: 25, type: !109, isLocal: true, isDefinition: true)
!2509 = !DIGlobalVariableExpression(var: !2510, expr: !DIExpression())
!2510 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2476, file: !2506, line: 17, type: !2511, isLocal: true, isDefinition: true)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2484)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2513)
!2513 = !{!2514}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2512, file: !253, line: 52, baseType: !22, size: 32)
!2515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2516 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2521, retainedTypes: !2541, splitDebugInlining: false, nameTableKind: None)
!2520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2521 = !{!2522, !2530}
!2522 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2523, line: 69, baseType: !32, size: 32, elements: !2524)
!2523 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2524 = !{!2525, !2526, !2527, !2528, !2529}
!2525 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2526 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2527 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2528 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2529 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2530 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2523, line: 56, baseType: !32, size: 32, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540}
!2532 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2533 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2534 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2535 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2536 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2537 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2538 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2539 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2540 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2541 = !{!109, !2522, !2530, !2542, !191, !354, !2544, !2545, !181, !195, !279, !234, !107, !22, !32, !281, !2547, !2548, !102, !282, !106, !283, !2543, !2549, !2550, !2551, !2552}
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2523, line: 31, baseType: !2543)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !235, line: 329, baseType: !32)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2523, line: 32, baseType: !2546)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !235, line: 145, baseType: !109)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2554, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2559 = !{!279, !181, !109, !32}
!2560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2561, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2562, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2562 = !{!2563, !30}
!2563 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2564, line: 27, baseType: !32, size: 32, elements: !2565)
!2564 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2565 = !{!2566, !2567, !2568, !2569, !2570}
!2566 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2567 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2568 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2569 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2570 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !2574, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2573 = !{!604, !2563, !30}
!2574 = !{!792, !2575, !107, !109, !766, !110, !180, !2592}
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2577)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2577, file: !535, line: 413, baseType: !1584, size: 256)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2577, file: !535, line: 414, baseType: !1586, size: 768, offset: 256)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2577, file: !535, line: 415, baseType: !1584, size: 256, offset: 1024)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2577, file: !535, line: 416, baseType: !1586, size: 768, offset: 1280)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2577, file: !535, line: 417, baseType: !1584, size: 256, offset: 2048)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2577, file: !535, line: 418, baseType: !1586, size: 768, offset: 2304)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2577, file: !535, line: 419, baseType: !1584, size: 256, offset: 3072)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2577, file: !535, line: 420, baseType: !1586, size: 768, offset: 3328)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2577, file: !535, line: 421, baseType: !1584, size: 256, offset: 4096)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2577, file: !535, line: 422, baseType: !1597, size: 1792, offset: 4352)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2577, file: !535, line: 423, baseType: !1601, size: 1920, offset: 6144)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2577, file: !535, line: 424, baseType: !1606, size: 20608, offset: 8064)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2577, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2594)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2595)
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2594, file: !535, line: 447, baseType: !539, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2594, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2594, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2594, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2594, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2594, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2594, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2594, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2594, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2594, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2594, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2594, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2594, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2594, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2594, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2594, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2594, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2594, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2594, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2594, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2594, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2621, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2621 = !{!107, !109, !22, !2622}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2624, file: !535, line: 447, baseType: !539, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2624, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2624, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2624, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2624, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2624, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2624, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2624, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2624, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2624, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2624, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2624, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2624, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2624, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2624, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2624, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2624, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2624, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2624, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2624, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2624, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2649, splitDebugInlining: false, nameTableKind: None)
!2648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2649 = !{!2650, !107, !109}
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2653)
!2653 = !{!2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2652, file: !535, line: 447, baseType: !539, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2652, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2652, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2652, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2652, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2652, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2652, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2652, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2652, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2652, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2652, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2652, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2652, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2652, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2652, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2652, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2652, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2652, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2652, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2652, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2652, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2677, splitDebugInlining: false, nameTableKind: None)
!2676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2677 = !{!2678, !110, !107, !109}
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2680, line: 98, size: 256, elements: !2681)
!2680 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2681 = !{!2682, !2687, !2692, !2697, !2702, !2707, !2712, !2717}
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 99, baseType: !2683, size: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 99, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2683, file: !2680, line: 99, baseType: !110, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2683, file: !2680, line: 99, baseType: !110, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 100, baseType: !2688, size: 32, offset: 32)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 100, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2688, file: !2680, line: 100, baseType: !110, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2688, file: !2680, line: 100, baseType: !110, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 101, baseType: !2693, size: 32, offset: 64)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 101, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2693, file: !2680, line: 101, baseType: !110, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2693, file: !2680, line: 101, baseType: !110, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 102, baseType: !2698, size: 32, offset: 96)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 102, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2698, file: !2680, line: 102, baseType: !110, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2698, file: !2680, line: 102, baseType: !110, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 103, baseType: !2703, size: 32, offset: 128)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 103, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2703, file: !2680, line: 103, baseType: !110, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2703, file: !2680, line: 103, baseType: !110, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 104, baseType: !2708, size: 32, offset: 160)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 104, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2708, file: !2680, line: 104, baseType: !110, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2708, file: !2680, line: 104, baseType: !110, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, scope: !2679, file: !2680, line: 105, baseType: !2713, size: 32, offset: 192)
!2713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2679, file: !2680, line: 105, size: 32, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2713, file: !2680, line: 105, baseType: !110, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2713, file: !2680, line: 105, baseType: !110, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2679, file: !2680, line: 106, baseType: !110, size: 32, offset: 224)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2562, retainedTypes: !2720, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2720 = !{!2721, !107, !109, !2746, !2789, !110}
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2723)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2724)
!2724 = !{!2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2723, file: !535, line: 447, baseType: !539, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2723, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2723, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2723, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2723, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2723, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2723, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2723, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2723, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2723, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2723, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2723, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2723, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2723, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2723, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2723, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2723, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2723, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2723, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2723, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2723, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2680, line: 141, baseType: !2748)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2680, line: 97, size: 256, elements: !2749)
!2749 = !{!2750}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2748, file: !2680, line: 107, baseType: !2751, size: 256)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2680, line: 98, size: 256, elements: !2752)
!2752 = !{!2753, !2758, !2763, !2768, !2773, !2778, !2783, !2788}
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 99, baseType: !2754, size: 32)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 99, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2754, file: !2680, line: 99, baseType: !110, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2754, file: !2680, line: 99, baseType: !110, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 100, baseType: !2759, size: 32, offset: 32)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 100, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2759, file: !2680, line: 100, baseType: !110, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2759, file: !2680, line: 100, baseType: !110, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 101, baseType: !2764, size: 32, offset: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 101, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2764, file: !2680, line: 101, baseType: !110, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2764, file: !2680, line: 101, baseType: !110, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 102, baseType: !2769, size: 32, offset: 96)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 102, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2769, file: !2680, line: 102, baseType: !110, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2769, file: !2680, line: 102, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 103, baseType: !2774, size: 32, offset: 128)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 103, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2774, file: !2680, line: 103, baseType: !110, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2774, file: !2680, line: 103, baseType: !110, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 104, baseType: !2779, size: 32, offset: 160)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 104, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2779, file: !2680, line: 104, baseType: !110, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2779, file: !2680, line: 104, baseType: !110, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2680, line: 105, baseType: !2784, size: 32, offset: 192)
!2784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2680, line: 105, size: 32, elements: !2785)
!2785 = !{!2786, !2787}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2784, file: !2680, line: 105, baseType: !110, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2784, file: !2680, line: 105, baseType: !110, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2751, file: !2680, line: 106, baseType: !110, size: 32, offset: 224)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!2790 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2791, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !2792, splitDebugInlining: false, nameTableKind: None)
!2791 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2792 = !{!792, !766, !180, !110, !2793, !2810}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2795)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2796)
!2796 = !{!2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2795, file: !535, line: 413, baseType: !1584, size: 256)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2795, file: !535, line: 414, baseType: !1586, size: 768, offset: 256)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2795, file: !535, line: 415, baseType: !1584, size: 256, offset: 1024)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2795, file: !535, line: 416, baseType: !1586, size: 768, offset: 1280)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2795, file: !535, line: 417, baseType: !1584, size: 256, offset: 2048)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2795, file: !535, line: 418, baseType: !1586, size: 768, offset: 2304)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2795, file: !535, line: 419, baseType: !1584, size: 256, offset: 3072)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2795, file: !535, line: 420, baseType: !1586, size: 768, offset: 3328)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2795, file: !535, line: 421, baseType: !1584, size: 256, offset: 4096)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2795, file: !535, line: 422, baseType: !1597, size: 1792, offset: 4352)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2795, file: !535, line: 423, baseType: !1601, size: 1920, offset: 6144)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2795, file: !535, line: 424, baseType: !1606, size: 20608, offset: 8064)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2795, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2813)
!2813 = !{!2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2812, file: !535, line: 447, baseType: !539, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2812, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2812, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2812, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2812, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2812, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2812, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2812, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2812, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2812, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2812, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2812, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2812, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2812, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2812, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2812, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2812, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2812, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2812, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2812, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2812, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2837, splitDebugInlining: false, nameTableKind: None)
!2836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2837 = !{!2838, !107, !109}
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2840)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2841)
!2841 = !{!2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2840, file: !535, line: 447, baseType: !539, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2840, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2840, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2840, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2840, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2840, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2840, file: !535, line: 453, baseType: !1621, size: 96, offset: 192)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2840, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2840, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2840, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2840, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2840, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2840, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2840, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2840, file: !535, line: 461, baseType: !1632, size: 64, offset: 512)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2840, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2840, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2840, file: !535, line: 464, baseType: !1636, size: 128, offset: 640)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2840, file: !535, line: 465, baseType: !1638, size: 160, offset: 768)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2840, file: !535, line: 466, baseType: !1640, size: 160, offset: 928)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2840, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2865, splitDebugInlining: false, nameTableKind: None)
!2864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2865 = !{!150, !285, !234, !989, !2866, !181, !107}
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2870, splitDebugInlining: false, nameTableKind: None)
!2869 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2870 = !{!2871}
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !2873)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !2874)
!2874 = !{!2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2873, file: !312, line: 502, baseType: !316, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2873, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2873, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2873, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2873, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2873, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2873, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2873, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2873, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2873, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2873, file: !312, line: 512, baseType: !858, size: 64, offset: 320)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2873, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2873, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2873, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2873, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2873, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2873, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2873, file: !312, line: 519, baseType: !858, size: 64, offset: 576)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2873, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2873, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2873, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2873, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2873, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2873, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2873, file: !312, line: 526, baseType: !858, size: 64, offset: 832)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2873, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2873, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2873, file: !312, line: 529, baseType: !858, size: 64, offset: 960)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2873, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2873, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!2905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2908, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2909, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2908 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2909 = !{!2910, !2917, !2921}
!2910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2911, line: 38, baseType: !32, size: 32, elements: !2912)
!2911 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2912 = !{!2913, !2914, !2915, !2916}
!2913 = !DIEnumerator(name: "HAL_OK", value: 0)
!2914 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2915 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2916 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !831, line: 184, baseType: !32, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIEnumerator(name: "RESET", value: 0)
!2920 = !DIEnumerator(name: "SET", value: 1)
!2921 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !831, line: 190, baseType: !32, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIEnumerator(name: "DISABLE", value: 0)
!2924 = !DIEnumerator(name: "ENABLE", value: 1)
!2925 = !{!107, !2926, !180, !110, !1478, !2960, !2966, !2977, !194, !2978, !111}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !2929)
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2928, file: !312, line: 502, baseType: !316, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2928, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2928, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2928, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2928, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2928, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2928, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2928, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2928, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2928, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2928, file: !312, line: 512, baseType: !858, size: 64, offset: 320)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2928, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2928, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2928, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2928, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2928, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2928, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2928, file: !312, line: 519, baseType: !858, size: 64, offset: 576)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2928, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2928, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2928, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2928, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2928, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2928, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2928, file: !312, line: 526, baseType: !858, size: 64, offset: 832)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2928, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2928, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2928, file: !312, line: 529, baseType: !858, size: 64, offset: 960)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2928, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2928, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 494, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 490, size: 64, elements: !2963)
!2963 = !{!2964, !2965}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2962, file: !312, line: 492, baseType: !316, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2962, file: !312, line: 493, baseType: !316, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 369, baseType: !2968)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 224, elements: !2969)
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2968, file: !312, line: 362, baseType: !316, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2968, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2968, file: !312, line: 364, baseType: !316, size: 32, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2968, file: !312, line: 365, baseType: !316, size: 32, offset: 96)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2968, file: !312, line: 366, baseType: !316, size: 32, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2968, file: !312, line: 367, baseType: !316, size: 32, offset: 160)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2968, file: !312, line: 368, baseType: !316, size: 32, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 441, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 430, size: 320, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2980, file: !312, line: 432, baseType: !316, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2980, file: !312, line: 433, baseType: !316, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2980, file: !312, line: 434, baseType: !316, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2980, file: !312, line: 435, baseType: !316, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2980, file: !312, line: 436, baseType: !316, size: 32, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2980, file: !312, line: 437, baseType: !316, size: 32, offset: 160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2980, file: !312, line: 438, baseType: !316, size: 32, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2980, file: !312, line: 439, baseType: !316, size: 32, offset: 224)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2980, file: !312, line: 440, baseType: !1143, size: 64, offset: 256)
!2991 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2992, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2993, retainedTypes: !2994, splitDebugInlining: false, nameTableKind: None)
!2992 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!2993 = !{!830}
!2994 = !{!2995, !110, !3003, !3009, !3020}
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2997, file: !535, line: 766, baseType: !316, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2997, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2997, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2997, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 494, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 490, size: 64, elements: !3006)
!3006 = !{!3007, !3008}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3005, file: !312, line: 492, baseType: !316, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3005, file: !312, line: 493, baseType: !316, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 369, baseType: !3011)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 224, elements: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3017, !3018, !3019}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3011, file: !312, line: 362, baseType: !316, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3011, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3011, file: !312, line: 364, baseType: !316, size: 32, offset: 64)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3011, file: !312, line: 365, baseType: !316, size: 32, offset: 96)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3011, file: !312, line: 366, baseType: !316, size: 32, offset: 128)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3011, file: !312, line: 367, baseType: !316, size: 32, offset: 160)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3011, file: !312, line: 368, baseType: !316, size: 32, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !3022)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !3023)
!3023 = !{!3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3022, file: !312, line: 502, baseType: !316, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3022, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3022, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3022, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3022, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3022, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3022, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3022, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3022, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3022, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3022, file: !312, line: 512, baseType: !858, size: 64, offset: 320)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3022, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3022, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3022, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3022, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3022, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3022, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3022, file: !312, line: 519, baseType: !858, size: 64, offset: 576)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3022, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3022, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3022, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3022, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3022, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3022, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3022, file: !312, line: 526, baseType: !858, size: 64, offset: 832)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3022, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3022, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3022, file: !312, line: 529, baseType: !858, size: 64, offset: 960)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3022, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3022, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!3054 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3055, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3056, splitDebugInlining: false, nameTableKind: None)
!3055 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!3056 = !{!107, !234}
!3057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3059, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!3059 = !{!3060, !3067, !2563, !30}
!3060 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3061, line: 14, baseType: !32, size: 32, elements: !3062)
!3061 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3064 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3065 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3066 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3067 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3061, line: 42, baseType: !32, size: 32, elements: !3068)
!3068 = !{!3069, !3070, !3071, !3072, !3073, !3074}
!3069 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3070 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3071 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3072 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3073 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3074 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!3077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3079, splitDebugInlining: false, nameTableKind: None)
!3078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!3079 = !{!22, !107, !109}
!3080 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3081, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3081 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!3082 = !{!"Ubuntu clang version 14.0.6"}
!3083 = !{i32 7, !"Dwarf Version", i32 4}
!3084 = !{i32 2, !"Debug Info Version", i32 3}
!3085 = !{i32 1, !"wchar_size", i32 4}
!3086 = !{i32 1, !"min_enum_size", i32 4}
!3087 = !{i32 1, !"branch-target-enforcement", i32 0}
!3088 = !{i32 1, !"sign-return-address", i32 0}
!3089 = !{i32 1, !"sign-return-address-all", i32 0}
!3090 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3091 = !{i32 7, !"frame-pointer", i32 2}
!3092 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3093, file: !3093, line: 26, type: !3094, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !2034)
!3093 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3094 = !DISubroutineType(types: !3095)
!3095 = !{null}
!3096 = !DILocation(line: 28, column: 1, scope: !3092)
!3097 = !{i64 2155129038, i64 2155129058, i64 2155129121}
!3098 = !DILocation(line: 29, column: 1, scope: !3092)
!3099 = !{i64 2155129453, i64 2155129473, i64 2155129536}
!3100 = !DILocation(line: 30, column: 1, scope: !3092)
!3101 = !{i64 2155129872, i64 2155129892, i64 2155129955}
!3102 = !DILocation(line: 31, column: 1, scope: !3092)
!3103 = !{i64 2155130291, i64 2155130311, i64 2155130374}
!3104 = !DILocation(line: 33, column: 1, scope: !3092)
!3105 = !{i64 2155130583, i64 2155130603, i64 2155130666}
!3106 = !DILocation(line: 35, column: 1, scope: !3092)
!3107 = !{i64 2155130908, i64 2155130928, i64 2155130991}
!3108 = !DILocation(line: 50, column: 1, scope: !3092)
!3109 = !{i64 2155131335, i64 2155131355, i64 2155131418}
!3110 = !DILocation(line: 54, column: 1, scope: !3092)
!3111 = !{i64 2155131774, i64 2155131794, i64 2155131857}
!3112 = !DILocation(line: 61, column: 1, scope: !3092)
!3113 = !{i64 2155132091, i64 2155132111, i64 2155132174}
!3114 = !DILocation(line: 63, column: 1, scope: !3092)
!3115 = !{i64 2155132471, i64 2155132491, i64 2155132554}
!3116 = !DILocation(line: 64, column: 1, scope: !3092)
!3117 = !{i64 2155132993, i64 2155133013, i64 2155133076}
!3118 = !DILocation(line: 65, column: 1, scope: !3092)
!3119 = !{i64 2155133491, i64 2155133511, i64 2155133574}
!3120 = !DILocation(line: 66, column: 1, scope: !3092)
!3121 = !{i64 2155133973, i64 2155133993, i64 2155134056}
!3122 = !DILocation(line: 67, column: 1, scope: !3092)
!3123 = !{i64 2155134480, i64 2155134500, i64 2155134563}
!3124 = !DILocation(line: 68, column: 1, scope: !3092)
!3125 = !{i64 2155134968, i64 2155134988, i64 2155135051}
!3126 = !DILocation(line: 70, column: 1, scope: !3092)
!3127 = !{i64 2155139497, i64 2155139517, i64 2155139580}
!3128 = !DILocation(line: 71, column: 1, scope: !3092)
!3129 = !{i64 2155139939, i64 2155139959, i64 2155140022}
!3130 = !DILocation(line: 72, column: 1, scope: !3092)
!3131 = !{i64 2155140397, i64 2155140417, i64 2155140480}
!3132 = !DILocation(line: 79, column: 1, scope: !3092)
!3133 = !{i64 2155140851, i64 2155140871, i64 2155140934}
!3134 = !DILocation(line: 80, column: 1, scope: !3092)
!3135 = !{i64 2155141362, i64 2155141382, i64 2155141445}
!3136 = !DILocation(line: 82, column: 1, scope: !3092)
!3137 = !{i64 2155141853, i64 2155141873, i64 2155141936}
!3138 = !DILocation(line: 97, column: 1, scope: !3092)
!3139 = !{i64 2155142190, i64 2155142210, i64 2155142273}
!3140 = !DILocation(line: 99, column: 1, scope: !3092)
!3141 = !{i64 2155142408, i64 2155142428, i64 2155142491}
!3142 = !DILocation(line: 102, column: 1, scope: !3092)
!3143 = !{i64 2155142665, i64 2155142685, i64 2155142748}
!3144 = !DILocation(line: 105, column: 1, scope: !3092)
!3145 = !{i64 2155142905, i64 2155142925, i64 2155142988}
!3146 = !DILocation(line: 115, column: 1, scope: !3092)
!3147 = !{i64 2155143244, i64 2155143264, i64 2155143327}
!3148 = !DILocation(line: 118, column: 1, scope: !3092)
!3149 = !{i64 2155143588, i64 2155143608, i64 2155143671}
!3150 = !DILocation(line: 32, column: 1, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3092, file: !3152, discriminator: 0)
!3152 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3153 = !{i64 2155143944, i64 2155143964, i64 2155144027}
!3154 = !DILocation(line: 33, column: 1, scope: !3151)
!3155 = !{i64 2155144456, i64 2155144476, i64 2155144539}
!3156 = !DILocation(line: 53, column: 1, scope: !3151)
!3157 = !{i64 2155144964, i64 2155144984, i64 2155145047}
!3158 = !DILocation(line: 54, column: 1, scope: !3151)
!3159 = !{i64 2155145382, i64 2155145402, i64 2155145465}
!3160 = !DILocation(line: 55, column: 1, scope: !3151)
!3161 = !{i64 2155145800, i64 2155145820, i64 2155145883}
!3162 = !DILocation(line: 56, column: 1, scope: !3151)
!3163 = !{i64 2155146218, i64 2155146238, i64 2155146301}
!3164 = !DILocation(line: 57, column: 1, scope: !3151)
!3165 = !{i64 2155146636, i64 2155146656, i64 2155146719}
!3166 = !DILocation(line: 58, column: 1, scope: !3151)
!3167 = !{i64 2155147054, i64 2155147074, i64 2155147137}
!3168 = !DILocation(line: 59, column: 1, scope: !3151)
!3169 = !{i64 2155147472, i64 2155147492, i64 2155147555}
!3170 = !DILocation(line: 60, column: 1, scope: !3151)
!3171 = !{i64 2155147896, i64 2155147916, i64 2155147979}
!3172 = !DILocation(line: 61, column: 1, scope: !3151)
!3173 = !{i64 2155148213, i64 2155148233, i64 2155148296}
!3174 = !DILocation(line: 70, column: 1, scope: !3151)
!3175 = !{i64 2155148442, i64 2155148462, i64 2155148525}
!3176 = !DILocation(line: 72, column: 1, scope: !3151)
!3177 = !{i64 2155148774, i64 2155148794, i64 2155148857}
!3178 = !DILocation(line: 73, column: 1, scope: !3151)
!3179 = !{i64 2155153285, i64 2155153305, i64 2155153368}
!3180 = !DILocation(line: 74, column: 1, scope: !3151)
!3181 = !{i64 2155153735, i64 2155153755, i64 2155153818}
!3182 = !DILocation(line: 75, column: 1, scope: !3151)
!3183 = !{i64 2155154185, i64 2155154205, i64 2155154268}
!3184 = !DILocation(line: 76, column: 1, scope: !3151)
!3185 = !{i64 2155154635, i64 2155154655, i64 2155154718}
!3186 = !DILocation(line: 77, column: 1, scope: !3151)
!3187 = !{i64 2155155085, i64 2155155105, i64 2155155168}
!3188 = !DILocation(line: 78, column: 1, scope: !3151)
!3189 = !{i64 2155155535, i64 2155155555, i64 2155155618}
!3190 = !DILocation(line: 79, column: 1, scope: !3151)
!3191 = !{i64 2155155985, i64 2155156005, i64 2155156068}
!3192 = !DILocation(line: 80, column: 1, scope: !3151)
!3193 = !{i64 2155156438, i64 2155156458, i64 2155156521}
!3194 = !DILocation(line: 84, column: 1, scope: !3151)
!3195 = !{i64 2155156770, i64 2155156790, i64 2155156853}
!3196 = !DILocation(line: 91, column: 1, scope: !3151)
!3197 = !{i64 2155157167, i64 2155157187, i64 2155157250}
!3198 = !DILocation(line: 93, column: 1, scope: !3151)
!3199 = !{i64 2155157534, i64 2155157554, i64 2155157617}
!3200 = !DILocation(line: 106, column: 1, scope: !3151)
!3201 = !{i64 2155157804, i64 2155157824, i64 2155157887}
!3202 = !DILocation(line: 11, column: 1, scope: !3203)
!3203 = !DILexicalBlockFile(scope: !3092, file: !3204, discriminator: 0)
!3204 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3205 = distinct !DISubprogram(name: "inc_count", scope: !116, file: !116, line: 25, type: !3206, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3208)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{null, !107, !107, !107}
!3208 = !{!3209, !3210, !3211, !3212, !3213}
!3209 = !DILocalVariable(name: "p1", arg: 1, scope: !3205, file: !116, line: 25, type: !107)
!3210 = !DILocalVariable(name: "p2", arg: 2, scope: !3205, file: !116, line: 25, type: !107)
!3211 = !DILocalVariable(name: "p3", arg: 3, scope: !3205, file: !116, line: 25, type: !107)
!3212 = !DILocalVariable(name: "i", scope: !3205, file: !116, line: 27, type: !109)
!3213 = !DILocalVariable(name: "my_id", scope: !3205, file: !116, line: 28, type: !102)
!3214 = !DILocation(line: 0, scope: !3205)
!3215 = !DILocation(line: 28, column: 15, scope: !3205)
!3216 = !DILocation(line: 30, column: 2, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3205, file: !116, line: 30, column: 2)
!3218 = !DILocation(line: 31, column: 3, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !116, line: 30, column: 31)
!3220 = distinct !DILexicalBlock(scope: !3217, file: !116, line: 30, column: 2)
!3221 = !DILocation(line: 32, column: 8, scope: !3219)
!3222 = !DILocation(line: 40, column: 13, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3219, file: !116, line: 40, column: 7)
!3224 = !DILocation(line: 40, column: 7, scope: !3219)
!3225 = !DILocation(line: 41, column: 4, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3223, file: !116, line: 40, column: 29)
!3227 = !DILocation(line: 43, column: 4, scope: !3226)
!3228 = !DILocation(line: 44, column: 4, scope: !3226)
!3229 = !DILocation(line: 47, column: 27, scope: !3219)
!3230 = !DILocation(line: 45, column: 3, scope: !3226)
!3231 = !DILocation(line: 46, column: 3, scope: !3219)
!3232 = !DILocation(line: 48, column: 3, scope: !3219)
!3233 = !DILocation(line: 51, column: 3, scope: !3219)
!3234 = !DILocation(line: 30, column: 27, scope: !3220)
!3235 = !DILocation(line: 30, column: 16, scope: !3220)
!3236 = distinct !{!3236, !3216, !3237}
!3237 = !DILocation(line: 52, column: 2, scope: !3217)
!3238 = !DILocation(line: 53, column: 1, scope: !3205)
!3239 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3240, file: !3240, line: 927, type: !3241, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3248)
!3240 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!109, !3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3245)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3246)
!3246 = !{!3247}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3245, file: !104, line: 66, baseType: !103, size: 64)
!3248 = !{!3249, !3250}
!3249 = !DILocalVariable(name: "mutex", arg: 1, scope: !3239, file: !3240, line: 927, type: !3243)
!3250 = !DILocalVariable(name: "timeout", arg: 2, scope: !3239, file: !3240, line: 927, type: !3244)
!3251 = !DILocation(line: 0, scope: !3239)
!3252 = !DILocation(line: 936, column: 2, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3239, file: !3240, line: 936, column: 2)
!3254 = !{i64 2154850971}
!3255 = !DILocation(line: 937, column: 9, scope: !3239)
!3256 = !DILocation(line: 937, column: 2, scope: !3239)
!3257 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3240, file: !3240, line: 976, type: !3258, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3261)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!109, !3260}
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3261 = !{!3262}
!3262 = !DILocalVariable(name: "condvar", arg: 1, scope: !3257, file: !3240, line: 976, type: !3260)
!3263 = !DILocation(line: 0, scope: !3257)
!3264 = !DILocation(line: 984, column: 2, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3257, file: !3240, line: 984, column: 2)
!3266 = !{i64 2154851175}
!3267 = !DILocation(line: 985, column: 9, scope: !3257)
!3268 = !DILocation(line: 985, column: 2, scope: !3257)
!3269 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3240, file: !3240, line: 944, type: !3270, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3272)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!109, !3243}
!3272 = !{!3273}
!3273 = !DILocalVariable(name: "mutex", arg: 1, scope: !3269, file: !3240, line: 944, type: !3243)
!3274 = !DILocation(line: 0, scope: !3269)
!3275 = !DILocation(line: 952, column: 2, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3269, file: !3240, line: 952, column: 2)
!3277 = !{i64 2154851039}
!3278 = !DILocation(line: 953, column: 9, scope: !3269)
!3279 = !DILocation(line: 953, column: 2, scope: !3269)
!3280 = distinct !DISubprogram(name: "k_sleep", scope: !3240, file: !3240, line: 91, type: !3281, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3283)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!766, !3244}
!3283 = !{!3284}
!3284 = !DILocalVariable(name: "timeout", arg: 1, scope: !3280, file: !3240, line: 91, type: !3244)
!3285 = !DILocation(line: 0, scope: !3280)
!3286 = !DILocation(line: 99, column: 2, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3280, file: !3240, line: 99, column: 2)
!3288 = !{i64 2154847603}
!3289 = !DILocation(line: 100, column: 9, scope: !3280)
!3290 = !DILocation(line: 100, column: 2, scope: !3280)
!3291 = distinct !DISubprogram(name: "watch_count", scope: !116, file: !116, line: 55, type: !3206, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3292)
!3292 = !{!3293, !3294, !3295, !3296}
!3293 = !DILocalVariable(name: "p1", arg: 1, scope: !3291, file: !116, line: 55, type: !107)
!3294 = !DILocalVariable(name: "p2", arg: 2, scope: !3291, file: !116, line: 55, type: !107)
!3295 = !DILocalVariable(name: "p3", arg: 3, scope: !3291, file: !116, line: 55, type: !107)
!3296 = !DILocalVariable(name: "my_id", scope: !3291, file: !116, line: 57, type: !102)
!3297 = !DILocation(line: 0, scope: !3291)
!3298 = !DILocation(line: 57, column: 15, scope: !3291)
!3299 = !DILocation(line: 59, column: 2, scope: !3291)
!3300 = !DILocation(line: 61, column: 2, scope: !3291)
!3301 = !DILocation(line: 62, column: 9, scope: !3291)
!3302 = !DILocation(line: 62, column: 15, scope: !3291)
!3303 = !DILocation(line: 62, column: 2, scope: !3291)
!3304 = !DILocation(line: 63, column: 3, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3291, file: !116, line: 62, column: 30)
!3306 = !DILocation(line: 65, column: 3, scope: !3305)
!3307 = !DILocation(line: 68, column: 27, scope: !3305)
!3308 = !DILocation(line: 67, column: 3, scope: !3305)
!3309 = distinct !{!3309, !3303, !3310}
!3310 = !DILocation(line: 69, column: 2, scope: !3291)
!3311 = !DILocation(line: 70, column: 2, scope: !3291)
!3312 = !DILocation(line: 72, column: 8, scope: !3291)
!3313 = !DILocation(line: 73, column: 2, scope: !3291)
!3314 = !DILocation(line: 74, column: 2, scope: !3291)
!3315 = !DILocation(line: 75, column: 2, scope: !3291)
!3316 = !DILocation(line: 76, column: 1, scope: !3291)
!3317 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3240, file: !3240, line: 1008, type: !3318, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3320)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!109, !3260, !3243, !3244}
!3320 = !{!3321, !3322, !3323}
!3321 = !DILocalVariable(name: "condvar", arg: 1, scope: !3317, file: !3240, line: 1008, type: !3260)
!3322 = !DILocalVariable(name: "mutex", arg: 2, scope: !3317, file: !3240, line: 1008, type: !3243)
!3323 = !DILocalVariable(name: "timeout", arg: 3, scope: !3317, file: !3240, line: 1008, type: !3244)
!3324 = !DILocation(line: 0, scope: !3317)
!3325 = !DILocation(line: 1018, column: 2, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3317, file: !3240, line: 1018, column: 2)
!3327 = !{i64 2154851311}
!3328 = !DILocation(line: 1019, column: 9, scope: !3317)
!3329 = !DILocation(line: 1019, column: 2, scope: !3317)
!3330 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 78, type: !3094, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3331)
!3331 = !{!3332, !3333, !3334, !3335}
!3332 = !DILocalVariable(name: "t1", scope: !3330, file: !116, line: 80, type: !102)
!3333 = !DILocalVariable(name: "t2", scope: !3330, file: !116, line: 80, type: !102)
!3334 = !DILocalVariable(name: "t3", scope: !3330, file: !116, line: 80, type: !102)
!3335 = !DILocalVariable(name: "i", scope: !3330, file: !116, line: 81, type: !109)
!3336 = !DILocation(line: 0, scope: !3330)
!3337 = !DILocation(line: 83, column: 8, scope: !3330)
!3338 = !DILocation(line: 85, column: 2, scope: !3330)
!3339 = !DILocation(line: 89, column: 2, scope: !3330)
!3340 = !DILocation(line: 93, column: 2, scope: !3330)
!3341 = !DILocation(line: 98, column: 2, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3330, file: !116, line: 98, column: 2)
!3343 = !DILocation(line: 99, column: 18, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !116, line: 98, column: 36)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !116, line: 98, column: 2)
!3346 = !DILocation(line: 99, column: 3, scope: !3344)
!3347 = !DILocation(line: 98, column: 32, scope: !3345)
!3348 = !DILocation(line: 98, column: 16, scope: !3345)
!3349 = distinct !{!3349, !3341, !3350}
!3350 = !DILocation(line: 100, column: 2, scope: !3342)
!3351 = !DILocation(line: 103, column: 22, scope: !3330)
!3352 = !DILocation(line: 102, column: 2, scope: !3330)
!3353 = !DILocation(line: 104, column: 1, scope: !3330)
!3354 = distinct !DISubprogram(name: "k_thread_create", scope: !3240, file: !3240, line: 24, type: !3355, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3363)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!3357, !266, !3358, !234, !3361, !107, !107, !107, !109, !110, !3244}
!3357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !266)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 32)
!3359 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3360, line: 44, baseType: !146)
!3360 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3360, line: 46, baseType: !3362)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373}
!3364 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3354, file: !3240, line: 24, type: !266)
!3365 = !DILocalVariable(name: "stack", arg: 2, scope: !3354, file: !3240, line: 24, type: !3358)
!3366 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3354, file: !3240, line: 24, type: !234)
!3367 = !DILocalVariable(name: "entry", arg: 4, scope: !3354, file: !3240, line: 24, type: !3361)
!3368 = !DILocalVariable(name: "p1", arg: 5, scope: !3354, file: !3240, line: 24, type: !107)
!3369 = !DILocalVariable(name: "p2", arg: 6, scope: !3354, file: !3240, line: 24, type: !107)
!3370 = !DILocalVariable(name: "p3", arg: 7, scope: !3354, file: !3240, line: 24, type: !107)
!3371 = !DILocalVariable(name: "prio", arg: 8, scope: !3354, file: !3240, line: 24, type: !109)
!3372 = !DILocalVariable(name: "options", arg: 9, scope: !3354, file: !3240, line: 24, type: !110)
!3373 = !DILocalVariable(name: "delay", arg: 10, scope: !3354, file: !3240, line: 24, type: !3244)
!3374 = !DILocation(line: 0, scope: !3354)
!3375 = !DILocation(line: 49, column: 2, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3354, file: !3240, line: 49, column: 2)
!3377 = !{i64 2154847399}
!3378 = !DILocation(line: 50, column: 9, scope: !3354)
!3379 = !DILocation(line: 50, column: 2, scope: !3354)
!3380 = distinct !DISubprogram(name: "k_thread_join", scope: !3240, file: !3240, line: 74, type: !3381, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3383)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!109, !266, !3244}
!3383 = !{!3384, !3385}
!3384 = !DILocalVariable(name: "thread", arg: 1, scope: !3380, file: !3240, line: 74, type: !266)
!3385 = !DILocalVariable(name: "timeout", arg: 2, scope: !3380, file: !3240, line: 74, type: !3244)
!3386 = !DILocation(line: 0, scope: !3380)
!3387 = !DILocation(line: 83, column: 2, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3380, file: !3240, line: 83, column: 2)
!3389 = !{i64 2154847535}
!3390 = !DILocation(line: 84, column: 9, scope: !3380)
!3391 = !DILocation(line: 84, column: 2, scope: !3380)
!3392 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3393, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3402)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!109, !107, !234, !110, !279, !3395}
!3395 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3396, line: 99, baseType: !3397)
!3396 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3396, line: 40, baseType: !3398)
!3398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3399)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3400)
!3400 = !{!3401}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3399, file: !288, line: 18, baseType: !107, size: 32)
!3402 = !{!3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3438, !3447, !3450, !3451, !3454, !3457, !3460, !3463, !3469}
!3403 = !DILocalVariable(name: "packaged", arg: 1, scope: !3392, file: !288, line: 233, type: !107)
!3404 = !DILocalVariable(name: "len", arg: 2, scope: !3392, file: !288, line: 233, type: !234)
!3405 = !DILocalVariable(name: "flags", arg: 3, scope: !3392, file: !288, line: 233, type: !110)
!3406 = !DILocalVariable(name: "fmt", arg: 4, scope: !3392, file: !288, line: 234, type: !279)
!3407 = !DILocalVariable(name: "ap", arg: 5, scope: !3392, file: !288, line: 234, type: !3395)
!3408 = !DILocalVariable(name: "buf0", scope: !3392, file: !288, line: 247, type: !286)
!3409 = !DILocalVariable(name: "buf", scope: !3392, file: !288, line: 248, type: !286)
!3410 = !DILocalVariable(name: "size", scope: !3392, file: !288, line: 249, type: !32)
!3411 = !DILocalVariable(name: "align", scope: !3392, file: !288, line: 250, type: !32)
!3412 = !DILocalVariable(name: "str_ptr_pos", scope: !3392, file: !288, line: 251, type: !3413)
!3413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 128, elements: !1817)
!3414 = !DILocalVariable(name: "str_ptr_arg", scope: !3392, file: !288, line: 252, type: !3413)
!3415 = !DILocalVariable(name: "s_idx", scope: !3392, file: !288, line: 253, type: !32)
!3416 = !DILocalVariable(name: "s_rw_cnt", scope: !3392, file: !288, line: 254, type: !32)
!3417 = !DILocalVariable(name: "s_ro_cnt", scope: !3392, file: !288, line: 255, type: !32)
!3418 = !DILocalVariable(name: "arg_idx", scope: !3392, file: !288, line: 256, type: !109)
!3419 = !DILocalVariable(name: "i", scope: !3392, file: !288, line: 257, type: !32)
!3420 = !DILocalVariable(name: "s", scope: !3392, file: !288, line: 258, type: !279)
!3421 = !DILocalVariable(name: "parsing", scope: !3392, file: !288, line: 259, type: !347)
!3422 = !DILocalVariable(name: "rws_pos_en", scope: !3392, file: !288, line: 263, type: !347)
!3423 = !DILocalVariable(name: "fros_cnt", scope: !3392, file: !288, line: 268, type: !109)
!3424 = !DILocalVariable(name: "is_str_arg", scope: !3392, file: !288, line: 269, type: !347)
!3425 = !DILocalVariable(name: "pkg_hdr", scope: !3392, file: !288, line: 270, type: !3426)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 32)
!3427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3428, line: 78, size: 32, elements: !3429)
!3428 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3429 = !{!3430, !3437}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3427, file: !3428, line: 80, baseType: !3431, size: 32)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3428, line: 45, size: 32, elements: !3432)
!3432 = !{!3433, !3434, !3435, !3436}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3431, file: !3428, line: 47, baseType: !180, size: 8)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3431, file: !3428, line: 50, baseType: !180, size: 8, offset: 8)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3431, file: !3428, line: 53, baseType: !180, size: 8, offset: 16)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3431, file: !3428, line: 56, baseType: !180, size: 8, offset: 24)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3427, file: !3428, line: 82, baseType: !107, size: 32)
!3438 = !DILocalVariable(name: "v", scope: !3439, file: !288, line: 567, type: !3443)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !288, line: 562, column: 14)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 481, column: 18)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 466, column: 3)
!3442 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 343, column: 15)
!3443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3392, file: !288, line: 567, size: 64, elements: !3444)
!3444 = !{!3445, !3446}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3443, file: !288, line: 567, baseType: !277, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3443, file: !288, line: 567, baseType: !275, size: 64)
!3447 = !DILocalVariable(name: "is_ro", scope: !3448, file: !288, line: 620, type: !347)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 613, column: 19)
!3449 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 613, column: 7)
!3450 = !DILocalVariable(name: "do_ro", scope: !3448, file: !288, line: 621, type: !347)
!3451 = !DILocalVariable(name: "s_ptr_idx", scope: !3452, file: !288, line: 626, type: !110)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !288, line: 625, column: 11)
!3453 = distinct !DILexicalBlock(scope: !3448, file: !288, line: 623, column: 8)
!3454 = !DILocalVariable(name: "v", scope: !3455, file: !288, line: 684, type: !109)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 683, column: 35)
!3456 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 683, column: 14)
!3457 = !DILocalVariable(name: "v", scope: !3458, file: !288, line: 691, type: !102)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !288, line: 690, column: 36)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 690, column: 14)
!3460 = !DILocalVariable(name: "v", scope: !3461, file: !288, line: 698, type: !106)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !288, line: 697, column: 41)
!3462 = distinct !DILexicalBlock(scope: !3459, file: !288, line: 697, column: 14)
!3463 = !DILocalVariable(name: "pos", scope: !3464, file: !288, line: 762, type: !180)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !288, line: 757, column: 31)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !288, line: 757, column: 3)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !288, line: 757, column: 3)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !288, line: 756, column: 16)
!3468 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 756, column: 6)
!3469 = !DILabel(scope: !3448, name: "process_string", file: !288, line: 615)
!3470 = !DILocation(line: 0, scope: !3392)
!3471 = !DILocation(line: 251, column: 2, scope: !3392)
!3472 = !DILocation(line: 251, column: 10, scope: !3392)
!3473 = !DILocation(line: 252, column: 2, scope: !3392)
!3474 = !DILocation(line: 252, column: 10, scope: !3392)
!3475 = !DILocation(line: 263, column: 29, scope: !3392)
!3476 = !DILocation(line: 263, column: 21, scope: !3392)
!3477 = !DILocation(line: 268, column: 21, scope: !3392)
!3478 = !DILocation(line: 268, column: 19, scope: !3392)
!3479 = !DILocation(line: 273, column: 6, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 273, column: 6)
!3481 = !DILocation(line: 273, column: 26, scope: !3480)
!3482 = !DILocation(line: 273, column: 6, scope: !3392)
!3483 = !DILocation(line: 297, column: 6, scope: !3392)
!3484 = !DILocation(line: 305, column: 11, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 305, column: 6)
!3486 = !DILocation(line: 305, column: 6, scope: !3392)
!3487 = !DILocation(line: 327, column: 19, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 327, column: 6)
!3489 = !DILocation(line: 327, column: 22, scope: !3488)
!3490 = !DILocation(line: 327, column: 33, scope: !3488)
!3491 = !DILocation(line: 327, column: 50, scope: !3488)
!3492 = !DILocation(line: 327, column: 6, scope: !3392)
!3493 = !DILocation(line: 338, column: 9, scope: !3392)
!3494 = !DILocation(line: 341, column: 2, scope: !3392)
!3495 = !DILocation(line: 472, column: 8, scope: !3441)
!3496 = !DILocation(line: 473, column: 14, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !288, line: 473, column: 9)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !288, line: 472, column: 18)
!3499 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 472, column: 8)
!3500 = !DILocation(line: 473, column: 9, scope: !3498)
!3501 = !DILocation(line: 479, column: 5, scope: !3498)
!3502 = !DILocation(line: 468, column: 9, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 468, column: 8)
!3504 = !DILocation(line: 468, column: 8, scope: !3503)
!3505 = !DILocation(line: 468, column: 15, scope: !3503)
!3506 = !DILocation(line: 468, column: 8, scope: !3441)
!3507 = distinct !{!3507, !3508, !3509}
!3508 = !DILocation(line: 343, column: 2, scope: !3392)
!3509 = !DILocation(line: 712, column: 2, scope: !3392)
!3510 = !DILocation(line: 481, column: 4, scope: !3441)
!3511 = !DILocation(line: 484, column: 12, scope: !3440)
!3512 = !DILocation(line: 485, column: 5, scope: !3440)
!3513 = !DILocation(line: 505, column: 5, scope: !3440)
!3514 = !DILocation(line: 518, column: 5, scope: !3440)
!3515 = !DILocation(line: 523, column: 5, scope: !3440)
!3516 = !DILocation(line: 532, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3440, file: !288, line: 532, column: 9)
!3518 = !DILocation(line: 532, column: 17, scope: !3517)
!3519 = !DILocation(line: 532, column: 9, scope: !3440)
!3520 = !DILocation(line: 533, column: 10, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !288, line: 533, column: 10)
!3522 = distinct !DILexicalBlock(scope: !3517, file: !288, line: 532, column: 25)
!3523 = !DILocation(line: 533, column: 18, scope: !3521)
!3524 = !DILocation(line: 0, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 569, column: 9)
!3526 = !DILocation(line: 0, scope: !3439)
!3527 = !DILocation(line: 579, column: 20, scope: !3439)
!3528 = !DILocation(line: 579, column: 11, scope: !3439)
!3529 = !DILocation(line: 580, column: 9, scope: !3439)
!3530 = !DILocation(line: 582, column: 21, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !288, line: 582, column: 10)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !288, line: 580, column: 23)
!3533 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 580, column: 9)
!3534 = !DILocation(line: 582, column: 28, scope: !3531)
!3535 = !DILocation(line: 582, column: 10, scope: !3532)
!3536 = !DILocation(line: 0, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !288, line: 587, column: 17)
!3538 = distinct !DILexicalBlock(scope: !3532, file: !288, line: 585, column: 10)
!3539 = !DILocation(line: 593, column: 9, scope: !3439)
!3540 = !DILocation(line: 600, column: 5, scope: !3440)
!3541 = !DILocation(line: 605, column: 18, scope: !3442)
!3542 = !DILocation(line: 605, column: 9, scope: !3442)
!3543 = !DILocation(line: 608, column: 20, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 608, column: 7)
!3545 = !DILocation(line: 608, column: 23, scope: !3544)
!3546 = !DILocation(line: 608, column: 34, scope: !3544)
!3547 = !DILocation(line: 608, column: 41, scope: !3544)
!3548 = !DILocation(line: 608, column: 7, scope: !3442)
!3549 = !DILocation(line: 613, column: 7, scope: !3442)
!3550 = !DILocation(line: 614, column: 8, scope: !3448)
!3551 = !DILocation(line: 614, column: 4, scope: !3448)
!3552 = !DILocation(line: 256, column: 6, scope: !3392)
!3553 = !DILocation(line: 254, column: 15, scope: !3392)
!3554 = !DILocation(line: 320, column: 7, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3485, file: !288, line: 305, column: 20)
!3556 = !DILocation(line: 615, column: 1, scope: !3448)
!3557 = !DILocation(line: 616, column: 8, scope: !3448)
!3558 = !DILocation(line: 617, column: 5, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !288, line: 616, column: 22)
!3560 = distinct !DILexicalBlock(scope: !3448, file: !288, line: 616, column: 8)
!3561 = !DILocation(line: 617, column: 25, scope: !3559)
!3562 = !DILocation(line: 618, column: 4, scope: !3559)
!3563 = !DILocation(line: 620, column: 26, scope: !3448)
!3564 = !DILocation(line: 620, column: 29, scope: !3448)
!3565 = !DILocation(line: 620, column: 17, scope: !3448)
!3566 = !DILocation(line: 620, column: 43, scope: !3448)
!3567 = !DILocation(line: 0, scope: !3448)
!3568 = !DILocation(line: 623, column: 14, scope: !3453)
!3569 = !DILocation(line: 626, column: 26, scope: !3452)
!3570 = !DILocation(line: 626, column: 37, scope: !3452)
!3571 = !DILocation(line: 0, scope: !3452)
!3572 = !DILocation(line: 634, column: 15, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 634, column: 9)
!3574 = !DILocation(line: 635, column: 6, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !288, line: 635, column: 6)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !288, line: 635, column: 6)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !288, line: 635, column: 6)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !288, line: 634, column: 44)
!3579 = !DILocation(line: 639, column: 15, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 639, column: 9)
!3581 = !DILocation(line: 639, column: 9, scope: !3452)
!3582 = !DILocation(line: 640, column: 6, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !288, line: 640, column: 6)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !288, line: 640, column: 6)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !288, line: 640, column: 6)
!3586 = distinct !DILexicalBlock(scope: !3580, file: !288, line: 639, column: 43)
!3587 = !DILocation(line: 644, column: 9, scope: !3452)
!3588 = !DILocation(line: 649, column: 27, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !288, line: 644, column: 23)
!3590 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 644, column: 9)
!3591 = !DILocation(line: 649, column: 6, scope: !3589)
!3592 = !DILocation(line: 649, column: 25, scope: !3589)
!3593 = !DILocation(line: 650, column: 27, scope: !3589)
!3594 = !DILocation(line: 650, column: 6, scope: !3589)
!3595 = !DILocation(line: 650, column: 25, scope: !3589)
!3596 = !DILocation(line: 651, column: 10, scope: !3589)
!3597 = !DILocation(line: 653, column: 26, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !288, line: 651, column: 17)
!3599 = distinct !DILexicalBlock(scope: !3589, file: !288, line: 651, column: 10)
!3600 = !DILocation(line: 654, column: 15, scope: !3598)
!3601 = !DILocation(line: 655, column: 6, scope: !3598)
!3602 = !DILocation(line: 656, column: 15, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3599, file: !288, line: 655, column: 13)
!3604 = !DILocation(line: 658, column: 16, scope: !3590)
!3605 = !DILocation(line: 663, column: 10, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !288, line: 658, column: 23)
!3607 = distinct !DILexicalBlock(scope: !3590, file: !288, line: 658, column: 16)
!3608 = !DILocation(line: 664, column: 5, scope: !3606)
!3609 = !DILocation(line: 664, column: 16, scope: !3607)
!3610 = !DILocation(line: 669, column: 10, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !288, line: 664, column: 28)
!3612 = distinct !DILexicalBlock(scope: !3607, file: !288, line: 664, column: 16)
!3613 = !DILocation(line: 670, column: 5, scope: !3611)
!3614 = !DILocation(line: 675, column: 13, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !288, line: 670, column: 12)
!3616 = !DILocation(line: 675, column: 27, scope: !3615)
!3617 = !DILocation(line: 675, column: 10, scope: !3615)
!3618 = !DILocation(line: 678, column: 10, scope: !3452)
!3619 = !DILocation(line: 680, column: 8, scope: !3448)
!3620 = !DILocation(line: 683, column: 14, scope: !3449)
!3621 = !DILocation(line: 684, column: 12, scope: !3455)
!3622 = !DILocation(line: 0, scope: !3455)
!3623 = !DILocation(line: 686, column: 8, scope: !3455)
!3624 = !DILocation(line: 687, column: 5, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !288, line: 686, column: 22)
!3626 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 686, column: 8)
!3627 = !DILocation(line: 687, column: 17, scope: !3625)
!3628 = !DILocation(line: 688, column: 4, scope: !3625)
!3629 = !DILocation(line: 698, column: 18, scope: !3461)
!3630 = !DILocation(line: 0, scope: !3461)
!3631 = !DILocation(line: 700, column: 8, scope: !3461)
!3632 = !DILocation(line: 704, column: 6, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !288, line: 703, column: 12)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !288, line: 701, column: 9)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !288, line: 700, column: 22)
!3636 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 700, column: 8)
!3637 = !DILocation(line: 704, column: 24, scope: !3633)
!3638 = !DILocation(line: 706, column: 4, scope: !3635)
!3639 = !DILocation(line: 709, column: 4, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !288, line: 709, column: 4)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !288, line: 709, column: 4)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !288, line: 709, column: 4)
!3643 = distinct !DILexicalBlock(scope: !3462, file: !288, line: 708, column: 10)
!3644 = !DILocation(line: 0, scope: !3456)
!3645 = !DILocation(line: 0, scope: !3442)
!3646 = !DILocation(line: 720, column: 6, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 720, column: 6)
!3648 = !DILocation(line: 720, column: 17, scope: !3647)
!3649 = !DILocation(line: 720, column: 31, scope: !3647)
!3650 = !DILocation(line: 720, column: 6, scope: !3392)
!3651 = !DILocation(line: 721, column: 3, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !288, line: 721, column: 3)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !288, line: 721, column: 3)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !288, line: 721, column: 3)
!3655 = distinct !DILexicalBlock(scope: !3647, file: !288, line: 720, column: 38)
!3656 = !DILocation(line: 729, column: 6, scope: !3392)
!3657 = !DILocation(line: 730, column: 21, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !288, line: 729, column: 20)
!3659 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 729, column: 6)
!3660 = !DILocation(line: 730, column: 27, scope: !3658)
!3661 = !DILocation(line: 730, column: 3, scope: !3658)
!3662 = !DILocation(line: 737, column: 22, scope: !3392)
!3663 = !DILocation(line: 737, column: 20, scope: !3392)
!3664 = !DILocation(line: 0, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 739, column: 6)
!3666 = !DILocation(line: 745, column: 17, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3665, file: !288, line: 743, column: 9)
!3668 = !DILocation(line: 745, column: 25, scope: !3667)
!3669 = !DILocation(line: 746, column: 17, scope: !3667)
!3670 = !DILocation(line: 746, column: 28, scope: !3667)
!3671 = !DILocation(line: 749, column: 29, scope: !3392)
!3672 = !DILocation(line: 749, column: 16, scope: !3392)
!3673 = !DILocation(line: 749, column: 27, scope: !3392)
!3674 = !DILocation(line: 756, column: 6, scope: !3468)
!3675 = !DILocation(line: 756, column: 6, scope: !3392)
!3676 = !DILocation(line: 757, column: 3, scope: !3466)
!3677 = !DILocation(line: 758, column: 10, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 758, column: 8)
!3679 = !DILocation(line: 758, column: 25, scope: !3678)
!3680 = !DILocation(line: 758, column: 8, scope: !3464)
!3681 = !DILocation(line: 0, scope: !3464)
!3682 = !DILocation(line: 765, column: 8, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 765, column: 8)
!3684 = !DILocation(line: 765, column: 19, scope: !3683)
!3685 = !DILocation(line: 765, column: 23, scope: !3683)
!3686 = !DILocation(line: 765, column: 8, scope: !3464)
!3687 = !DILocation(line: 762, column: 33, scope: !3464)
!3688 = !DILocation(line: 769, column: 8, scope: !3464)
!3689 = !DILocation(line: 769, column: 11, scope: !3464)
!3690 = !DILocation(line: 757, column: 27, scope: !3465)
!3691 = !DILocation(line: 757, column: 17, scope: !3465)
!3692 = distinct !{!3692, !3676, !3693}
!3693 = !DILocation(line: 770, column: 3, scope: !3466)
!3694 = !DILocation(line: 774, column: 16, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !288, line: 774, column: 2)
!3696 = distinct !DILexicalBlock(scope: !3392, file: !288, line: 774, column: 2)
!3697 = !DILocation(line: 774, column: 2, scope: !3696)
!3698 = !DILocation(line: 776, column: 16, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 776, column: 7)
!3700 = distinct !DILexicalBlock(scope: !3695, file: !288, line: 774, column: 30)
!3701 = !DILocation(line: 776, column: 19, scope: !3699)
!3702 = !DILocation(line: 776, column: 34, scope: !3699)
!3703 = !DILocation(line: 776, column: 7, scope: !3700)
!3704 = !DILocation(line: 780, column: 7, scope: !3700)
!3705 = !DILocation(line: 782, column: 13, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !288, line: 780, column: 19)
!3707 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 780, column: 7)
!3708 = !DILocation(line: 782, column: 8, scope: !3706)
!3709 = !DILocation(line: 782, column: 11, scope: !3706)
!3710 = !DILocation(line: 783, column: 3, scope: !3706)
!3711 = !DILocation(line: 785, column: 26, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3707, file: !288, line: 783, column: 10)
!3713 = !DILocation(line: 785, column: 41, scope: !3712)
!3714 = !DILocation(line: 785, column: 24, scope: !3712)
!3715 = !DILocation(line: 785, column: 8, scope: !3712)
!3716 = !DILocation(line: 787, column: 52, scope: !3712)
!3717 = !DILocation(line: 789, column: 11, scope: !3712)
!3718 = !DILocation(line: 789, column: 21, scope: !3712)
!3719 = !DILocation(line: 0, scope: !3707)
!3720 = !DILocation(line: 793, column: 7, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 793, column: 7)
!3722 = !DILocation(line: 793, column: 18, scope: !3721)
!3723 = !DILocation(line: 793, column: 22, scope: !3721)
!3724 = !DILocation(line: 793, column: 29, scope: !3721)
!3725 = !DILocation(line: 793, column: 7, scope: !3700)
!3726 = !DILocation(line: 797, column: 12, scope: !3700)
!3727 = !DILocation(line: 797, column: 7, scope: !3700)
!3728 = !DILocation(line: 797, column: 10, scope: !3700)
!3729 = !DILocation(line: 799, column: 3, scope: !3700)
!3730 = !DILocation(line: 800, column: 7, scope: !3700)
!3731 = !DILocation(line: 801, column: 2, scope: !3700)
!3732 = !DILocation(line: 338, column: 4, scope: !3392)
!3733 = !DILocation(line: 774, column: 26, scope: !3695)
!3734 = distinct !{!3734, !3697, !3735}
!3735 = !DILocation(line: 801, column: 2, scope: !3696)
!3736 = !DILocation(line: 808, column: 9, scope: !3392)
!3737 = !DILocation(line: 808, column: 2, scope: !3392)
!3738 = !DILocation(line: 813, column: 1, scope: !3392)
!3739 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3740, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3742)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!347, !279}
!3742 = !{!3743}
!3743 = !DILocalVariable(name: "addr", arg: 1, scope: !3739, file: !288, line: 33, type: !279)
!3744 = !DILocation(line: 0, scope: !3739)
!3745 = !DILocation(line: 41, column: 9, scope: !3739)
!3746 = !DILocation(line: 41, column: 2, scope: !3739)
!3747 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3748, file: !3748, line: 24, type: !3749, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3751)
!3748 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!347, !13}
!3751 = !{!3752}
!3752 = !DILocalVariable(name: "addr", arg: 1, scope: !3747, file: !3748, line: 24, type: !13)
!3753 = !DILocation(line: 0, scope: !3747)
!3754 = !DILocation(line: 49, column: 30, scope: !3747)
!3755 = !DILocation(line: 49, column: 57, scope: !3747)
!3756 = !DILocation(line: 49, column: 2, scope: !3747)
!3757 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3758, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3760)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!109, !107, !234, !110, !279, null}
!3760 = !{!3761, !3762, !3763, !3764, !3765, !3766}
!3761 = !DILocalVariable(name: "packaged", arg: 1, scope: !3757, file: !288, line: 815, type: !107)
!3762 = !DILocalVariable(name: "len", arg: 2, scope: !3757, file: !288, line: 815, type: !234)
!3763 = !DILocalVariable(name: "flags", arg: 3, scope: !3757, file: !288, line: 815, type: !110)
!3764 = !DILocalVariable(name: "format", arg: 4, scope: !3757, file: !288, line: 816, type: !279)
!3765 = !DILocalVariable(name: "ap", scope: !3757, file: !288, line: 818, type: !3395)
!3766 = !DILocalVariable(name: "ret", scope: !3757, file: !288, line: 819, type: !109)
!3767 = !DILocation(line: 0, scope: !3757)
!3768 = !DILocation(line: 818, column: 2, scope: !3757)
!3769 = !DILocation(line: 818, column: 10, scope: !3757)
!3770 = !DILocation(line: 821, column: 2, scope: !3757)
!3771 = !DILocation(line: 822, column: 8, scope: !3757)
!3772 = !DILocation(line: 823, column: 2, scope: !3757)
!3773 = !DILocation(line: 825, column: 1, scope: !3757)
!3774 = !DILocation(line: 824, column: 2, scope: !3757)
!3775 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3776, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3786)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!109, !3778, !3782, !107, !107}
!3778 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3428, line: 297, baseType: !3779)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 32)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!109, null}
!3782 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3428, line: 328, baseType: !3783)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 32)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!109, !3778, !107, !279, !3395}
!3786 = !{!3787, !3788, !3789, !3790, !3791, !3792, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805}
!3787 = !DILocalVariable(name: "out", arg: 1, scope: !3775, file: !288, line: 827, type: !3778)
!3788 = !DILocalVariable(name: "formatter", arg: 2, scope: !3775, file: !288, line: 828, type: !3782)
!3789 = !DILocalVariable(name: "ctx", arg: 3, scope: !3775, file: !288, line: 829, type: !107)
!3790 = !DILocalVariable(name: "packaged", arg: 4, scope: !3775, file: !288, line: 829, type: !107)
!3791 = !DILocalVariable(name: "buf", scope: !3775, file: !288, line: 831, type: !286)
!3792 = !DILocalVariable(name: "hdr", scope: !3775, file: !288, line: 832, type: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 32)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3428, line: 96, size: 64, elements: !3795)
!3795 = !{!3796, !3797}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3794, file: !3428, line: 98, baseType: !3427, size: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3794, file: !3428, line: 101, baseType: !285, size: 32, offset: 32)
!3798 = !DILocalVariable(name: "s", scope: !3775, file: !288, line: 833, type: !285)
!3799 = !DILocalVariable(name: "ps", scope: !3775, file: !288, line: 833, type: !284)
!3800 = !DILocalVariable(name: "i", scope: !3775, file: !288, line: 834, type: !32)
!3801 = !DILocalVariable(name: "args_size", scope: !3775, file: !288, line: 834, type: !32)
!3802 = !DILocalVariable(name: "s_nbr", scope: !3775, file: !288, line: 834, type: !32)
!3803 = !DILocalVariable(name: "ros_nbr", scope: !3775, file: !288, line: 834, type: !32)
!3804 = !DILocalVariable(name: "rws_nbr", scope: !3775, file: !288, line: 834, type: !32)
!3805 = !DILocalVariable(name: "s_idx", scope: !3775, file: !288, line: 834, type: !32)
!3806 = !DILocation(line: 0, scope: !3775)
!3807 = !DILocation(line: 836, column: 10, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3775, file: !288, line: 836, column: 6)
!3809 = !DILocation(line: 836, column: 6, scope: !3775)
!3810 = !DILocation(line: 842, column: 28, scope: !3775)
!3811 = !DILocation(line: 842, column: 14, scope: !3775)
!3812 = !DILocation(line: 852, column: 16, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !288, line: 852, column: 2)
!3814 = distinct !DILexicalBlock(scope: !3775, file: !288, line: 852, column: 2)
!3815 = !DILocation(line: 852, column: 2, scope: !3814)
!3816 = !DILocation(line: 841, column: 28, scope: !3775)
!3817 = !DILocation(line: 841, column: 14, scope: !3775)
!3818 = !DILocation(line: 841, column: 32, scope: !3775)
!3819 = !DILocation(line: 847, column: 19, scope: !3775)
!3820 = !DILocation(line: 843, column: 28, scope: !3775)
!3821 = !DILocation(line: 843, column: 14, scope: !3775)
!3822 = !DILocation(line: 847, column: 31, scope: !3775)
!3823 = !DILocation(line: 844, column: 28, scope: !3775)
!3824 = !DILocation(line: 844, column: 14, scope: !3775)
!3825 = !DILocation(line: 847, column: 45, scope: !3775)
!3826 = !DILocation(line: 847, column: 41, scope: !3775)
!3827 = !DILocation(line: 854, column: 24, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3813, file: !288, line: 852, column: 30)
!3829 = !DILocation(line: 854, column: 11, scope: !3828)
!3830 = !DILocation(line: 855, column: 30, scope: !3828)
!3831 = !DILocation(line: 855, column: 22, scope: !3828)
!3832 = !DILocation(line: 855, column: 8, scope: !3828)
!3833 = !DILocation(line: 857, column: 7, scope: !3828)
!3834 = !DILocation(line: 859, column: 8, scope: !3828)
!3835 = !DILocation(line: 859, column: 18, scope: !3828)
!3836 = !DILocation(line: 859, column: 5, scope: !3828)
!3837 = !DILocation(line: 852, column: 26, scope: !3813)
!3838 = distinct !{!3838, !3815, !3839}
!3839 = !DILocation(line: 860, column: 2, scope: !3814)
!3840 = !DILocation(line: 863, column: 6, scope: !3775)
!3841 = !DILocation(line: 866, column: 56, scope: !3775)
!3842 = !DILocation(line: 866, column: 9, scope: !3775)
!3843 = !DILocation(line: 866, column: 2, scope: !3775)
!3844 = !DILocation(line: 867, column: 1, scope: !3775)
!3845 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3846, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3848)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!109, !3778, !3782, !107, !279, !107}
!3848 = !{!3849, !3850, !3851, !3852, !3853, !3854}
!3849 = !DILocalVariable(name: "out", arg: 1, scope: !3845, file: !288, line: 179, type: !3778)
!3850 = !DILocalVariable(name: "formatter", arg: 2, scope: !3845, file: !288, line: 180, type: !3782)
!3851 = !DILocalVariable(name: "ctx", arg: 3, scope: !3845, file: !288, line: 181, type: !107)
!3852 = !DILocalVariable(name: "fmt", arg: 4, scope: !3845, file: !288, line: 182, type: !279)
!3853 = !DILocalVariable(name: "buf", arg: 5, scope: !3845, file: !288, line: 182, type: !107)
!3854 = !DILocalVariable(name: "u", scope: !3845, file: !288, line: 187, type: !3855)
!3855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3845, file: !288, line: 184, size: 32, elements: !3856)
!3856 = !{!3857, !3858}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3855, file: !288, line: 185, baseType: !3395, size: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3855, file: !288, line: 186, baseType: !107, size: 32)
!3859 = !DILocation(line: 0, scope: !3845)
!3860 = !DILocation(line: 191, column: 9, scope: !3845)
!3861 = !DILocation(line: 191, column: 2, scope: !3845)
!3862 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3863, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3865)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!347, !279, !109}
!3865 = !{!3866, !3867, !3868, !3869, !3870}
!3866 = !DILocalVariable(name: "fmt", arg: 1, scope: !3862, file: !288, line: 881, type: !279)
!3867 = !DILocalVariable(name: "n", arg: 2, scope: !3862, file: !288, line: 881, type: !109)
!3868 = !DILocalVariable(name: "c", scope: !3862, file: !288, line: 883, type: !150)
!3869 = !DILocalVariable(name: "mod", scope: !3862, file: !288, line: 884, type: !347)
!3870 = !DILocalVariable(name: "cnt", scope: !3862, file: !288, line: 885, type: !109)
!3871 = !DILocation(line: 0, scope: !3862)
!3872 = !DILocation(line: 887, column: 14, scope: !3862)
!3873 = !DILocation(line: 887, column: 22, scope: !3862)
!3874 = !DILocation(line: 887, column: 2, scope: !3862)
!3875 = !DILocation(line: 887, column: 18, scope: !3862)
!3876 = !DILocation(line: 888, column: 7, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3862, file: !288, line: 887, column: 31)
!3878 = !DILocation(line: 889, column: 12, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !288, line: 889, column: 8)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !288, line: 888, column: 12)
!3881 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 888, column: 7)
!3882 = !DILocation(line: 889, column: 8, scope: !3880)
!3883 = !DILocation(line: 890, column: 11, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !288, line: 890, column: 9)
!3885 = distinct !DILexicalBlock(scope: !3879, file: !288, line: 889, column: 18)
!3886 = !DILocation(line: 890, column: 9, scope: !3885)
!3887 = !DILocation(line: 892, column: 16, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3884, file: !288, line: 892, column: 16)
!3889 = !DILocation(line: 892, column: 16, scope: !3884)
!3890 = !DILocation(line: 895, column: 15, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3879, file: !288, line: 895, column: 15)
!3892 = !DILocation(line: 895, column: 15, scope: !3879)
!3893 = !DILocation(line: 900, column: 9, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 900, column: 7)
!3895 = !DILocation(line: 900, column: 7, scope: !3877)
!3896 = distinct !{!3896, !3874, !3897}
!3897 = !DILocation(line: 903, column: 2, scope: !3862)
!3898 = !DILocation(line: 906, column: 1, scope: !3862)
!3899 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3900, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3902)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{!347, !150}
!3902 = !{!3903}
!3903 = !DILocalVariable(name: "c", arg: 1, scope: !3899, file: !288, line: 873, type: !150)
!3904 = !DILocation(line: 0, scope: !3899)
!3905 = !DILocation(line: 875, column: 19, scope: !3899)
!3906 = !DILocation(line: 875, column: 2, scope: !3899)
!3907 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3908, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3914)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!109, !107, !234, !3910, !107, !110, !2789, !234}
!3910 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3428, line: 308, baseType: !3911)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 32)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!109, !13, !234, !107}
!3914 = !{!3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3932, !3933, !3934, !3935, !3936, !3942, !3945, !3946, !3947, !3949, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3965, !3968, !3969, !3970, !3971, !3972, !3973, !3975, !3978, !3979, !3980}
!3915 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3907, file: !288, line: 908, type: !107)
!3916 = !DILocalVariable(name: "in_len", arg: 2, scope: !3907, file: !288, line: 909, type: !234)
!3917 = !DILocalVariable(name: "cb", arg: 3, scope: !3907, file: !288, line: 910, type: !3910)
!3918 = !DILocalVariable(name: "ctx", arg: 4, scope: !3907, file: !288, line: 911, type: !107)
!3919 = !DILocalVariable(name: "flags", arg: 5, scope: !3907, file: !288, line: 912, type: !110)
!3920 = !DILocalVariable(name: "strl", arg: 6, scope: !3907, file: !288, line: 913, type: !2789)
!3921 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3907, file: !288, line: 914, type: !234)
!3922 = !DILocalVariable(name: "buf", scope: !3907, file: !288, line: 918, type: !286)
!3923 = !DILocalVariable(name: "buf32", scope: !3907, file: !288, line: 919, type: !884)
!3924 = !DILocalVariable(name: "args_size", scope: !3907, file: !288, line: 920, type: !32)
!3925 = !DILocalVariable(name: "ros_nbr", scope: !3907, file: !288, line: 920, type: !32)
!3926 = !DILocalVariable(name: "rws_nbr", scope: !3907, file: !288, line: 920, type: !32)
!3927 = !DILocalVariable(name: "fmt_present", scope: !3907, file: !288, line: 921, type: !347)
!3928 = !DILocalVariable(name: "rw_cpy", scope: !3907, file: !288, line: 922, type: !347)
!3929 = !DILocalVariable(name: "ro_cpy", scope: !3907, file: !288, line: 923, type: !347)
!3930 = !DILocalVariable(name: "in_desc", scope: !3907, file: !288, line: 924, type: !3931)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 32)
!3932 = !DILocalVariable(name: "out_len", scope: !3907, file: !288, line: 960, type: !109)
!3933 = !DILocalVariable(name: "fmt", scope: !3907, file: !288, line: 965, type: !279)
!3934 = !DILocalVariable(name: "str_pos", scope: !3907, file: !288, line: 966, type: !286)
!3935 = !DILocalVariable(name: "strl_cnt", scope: !3907, file: !288, line: 967, type: !234)
!3936 = !DILocalVariable(name: "i", scope: !3937, file: !288, line: 973, type: !109)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !288, line: 973, column: 4)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !288, line: 972, column: 15)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 972, column: 7)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !288, line: 970, column: 18)
!3941 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 970, column: 6)
!3942 = !DILocalVariable(name: "str", scope: !3943, file: !288, line: 974, type: !279)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 973, column: 38)
!3944 = distinct !DILexicalBlock(scope: !3937, file: !288, line: 973, column: 4)
!3945 = !DILocalVariable(name: "len", scope: !3943, file: !288, line: 975, type: !109)
!3946 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3940, file: !288, line: 990, type: !347)
!3947 = !DILocalVariable(name: "i", scope: !3948, file: !288, line: 995, type: !109)
!3948 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 995, column: 3)
!3949 = !DILocalVariable(name: "arg_idx", scope: !3950, file: !288, line: 996, type: !180)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !288, line: 995, column: 37)
!3951 = distinct !DILexicalBlock(scope: !3948, file: !288, line: 995, column: 3)
!3952 = !DILocalVariable(name: "arg_pos", scope: !3950, file: !288, line: 997, type: !180)
!3953 = !DILocalVariable(name: "str", scope: !3950, file: !288, line: 998, type: !279)
!3954 = !DILocalVariable(name: "is_ro", scope: !3950, file: !288, line: 999, type: !347)
!3955 = !DILocalVariable(name: "len", scope: !3950, file: !288, line: 1000, type: !109)
!3956 = !DILocalVariable(name: "out_desc", scope: !3907, file: !288, line: 1038, type: !3431)
!3957 = !DILocalVariable(name: "cpy_str_pos", scope: !3907, file: !288, line: 1040, type: !3413)
!3958 = !DILocalVariable(name: "keep_str_pos", scope: !3907, file: !288, line: 1042, type: !3413)
!3959 = !DILocalVariable(name: "scpy_cnt", scope: !3907, file: !288, line: 1043, type: !180)
!3960 = !DILocalVariable(name: "keep_cnt", scope: !3907, file: !288, line: 1044, type: !180)
!3961 = !DILocalVariable(name: "dst", scope: !3907, file: !288, line: 1045, type: !286)
!3962 = !DILocalVariable(name: "rv", scope: !3907, file: !288, line: 1046, type: !109)
!3963 = !DILocalVariable(name: "i", scope: !3964, file: !288, line: 1074, type: !109)
!3964 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1074, column: 2)
!3965 = !DILocalVariable(name: "arg_idx", scope: !3966, file: !288, line: 1075, type: !180)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !288, line: 1074, column: 36)
!3967 = distinct !DILexicalBlock(scope: !3964, file: !288, line: 1074, column: 2)
!3968 = !DILocalVariable(name: "arg_pos", scope: !3966, file: !288, line: 1076, type: !180)
!3969 = !DILocalVariable(name: "str", scope: !3966, file: !288, line: 1077, type: !279)
!3970 = !DILocalVariable(name: "is_ro", scope: !3966, file: !288, line: 1078, type: !347)
!3971 = !DILocalVariable(name: "in_desc_backup", scope: !3907, file: !288, line: 1114, type: !3431)
!3972 = !DILocalVariable(name: "strs_len", scope: !3907, file: !288, line: 1134, type: !234)
!3973 = !DILocalVariable(name: "i", scope: !3974, file: !288, line: 1143, type: !109)
!3974 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1143, column: 2)
!3975 = !DILocalVariable(name: "loc", scope: !3976, file: !288, line: 1144, type: !180)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !288, line: 1143, column: 37)
!3977 = distinct !DILexicalBlock(scope: !3974, file: !288, line: 1143, column: 2)
!3978 = !DILocalVariable(name: "str", scope: !3976, file: !288, line: 1145, type: !279)
!3979 = !DILocalVariable(name: "str_len", scope: !3976, file: !288, line: 1146, type: !194)
!3980 = !DILabel(scope: !3981, name: "calculate_string_length", file: !288, line: 1021)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !288, line: 1020, column: 56)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !288, line: 1020, column: 15)
!3983 = distinct !DILexicalBlock(scope: !3950, file: !288, line: 1014, column: 8)
!3984 = !DILocation(line: 0, scope: !3907)
!3985 = !DILocation(line: 916, column: 2, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !288, line: 916, column: 2)
!3987 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 916, column: 2)
!3988 = !DILocation(line: 916, column: 2, scope: !3987)
!3989 = !DILocation(line: 916, column: 2, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3986, file: !288, line: 916, column: 2)
!3991 = !DILocation(line: 919, column: 20, scope: !3907)
!3992 = !DILocation(line: 921, column: 27, scope: !3907)
!3993 = !DILocation(line: 921, column: 21, scope: !3907)
!3994 = !DILocation(line: 926, column: 18, scope: !3907)
!3995 = !DILocation(line: 926, column: 11, scope: !3907)
!3996 = !DILocation(line: 926, column: 34, scope: !3907)
!3997 = !DILocation(line: 931, column: 21, scope: !3907)
!3998 = !DILocation(line: 931, column: 12, scope: !3907)
!3999 = !DILocation(line: 932, column: 11, scope: !3907)
!4000 = !DILocation(line: 932, column: 19, scope: !3907)
!4001 = !DILocation(line: 938, column: 21, scope: !3907)
!4002 = !DILocation(line: 938, column: 12, scope: !3907)
!4003 = !DILocation(line: 939, column: 19, scope: !3907)
!4004 = !DILocation(line: 939, column: 23, scope: !3907)
!4005 = !DILocation(line: 946, column: 14, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 946, column: 6)
!4007 = !DILocation(line: 947, column: 7, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !288, line: 947, column: 7)
!4009 = distinct !DILexicalBlock(scope: !4006, file: !288, line: 946, column: 26)
!4010 = !DILocation(line: 947, column: 7, scope: !4009)
!4011 = !DILocation(line: 948, column: 4, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !288, line: 947, column: 11)
!4013 = !DILocation(line: 949, column: 3, scope: !4012)
!4014 = !DILocation(line: 958, column: 23, scope: !3907)
!4015 = !DILocation(line: 958, column: 14, scope: !3907)
!4016 = !DILocation(line: 958, column: 27, scope: !3907)
!4017 = !DILocation(line: 965, column: 41, scope: !3907)
!4018 = !DILocation(line: 965, column: 20, scope: !3907)
!4019 = !DILocation(line: 966, column: 22, scope: !3907)
!4020 = !DILocation(line: 970, column: 9, scope: !3941)
!4021 = !DILocation(line: 970, column: 6, scope: !3907)
!4022 = !DILocation(line: 972, column: 7, scope: !3940)
!4023 = !DILocation(line: 0, scope: !3937)
!4024 = !DILocation(line: 973, column: 4, scope: !3937)
!4025 = !DILocation(line: 974, column: 46, scope: !3943)
!4026 = !DILocation(line: 974, column: 40, scope: !3943)
!4027 = !DILocation(line: 974, column: 23, scope: !3943)
!4028 = !DILocation(line: 0, scope: !3943)
!4029 = !DILocation(line: 975, column: 15, scope: !3943)
!4030 = !DILocation(line: 978, column: 14, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 978, column: 9)
!4032 = !DILocation(line: 979, column: 25, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4031, file: !288, line: 978, column: 38)
!4034 = !DILocation(line: 979, column: 19, scope: !4033)
!4035 = !DILocation(line: 979, column: 6, scope: !4033)
!4036 = !DILocation(line: 979, column: 23, scope: !4033)
!4037 = !DILocation(line: 980, column: 5, scope: !4033)
!4038 = !DILocation(line: 981, column: 13, scope: !3943)
!4039 = !DILocation(line: 982, column: 12, scope: !3943)
!4040 = !DILocation(line: 973, column: 34, scope: !3944)
!4041 = !DILocation(line: 973, column: 22, scope: !3944)
!4042 = distinct !{!4042, !4024, !4043}
!4043 = !DILocation(line: 983, column: 4, scope: !3937)
!4044 = !DILocation(line: 985, column: 16, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !288, line: 985, column: 8)
!4046 = distinct !DILexicalBlock(scope: !3939, file: !288, line: 984, column: 10)
!4047 = !DILocation(line: 967, column: 9, scope: !3907)
!4048 = !DILocation(line: 971, column: 11, scope: !3940)
!4049 = !DILocation(line: 0, scope: !3940)
!4050 = !DILocation(line: 0, scope: !3948)
!4051 = !DILocation(line: 995, column: 21, scope: !3951)
!4052 = !DILocation(line: 995, column: 3, scope: !3948)
!4053 = !DILocation(line: 990, column: 34, scope: !3940)
!4054 = !DILocation(line: 990, column: 26, scope: !3940)
!4055 = !DILocation(line: 996, column: 30, scope: !3950)
!4056 = !DILocation(line: 0, scope: !3950)
!4057 = !DILocation(line: 997, column: 30, scope: !3950)
!4058 = !DILocation(line: 997, column: 22, scope: !3950)
!4059 = !DILocation(line: 998, column: 39, scope: !3950)
!4060 = !DILocation(line: 998, column: 22, scope: !3950)
!4061 = !DILocation(line: 999, column: 17, scope: !3950)
!4062 = !DILocation(line: 1002, column: 20, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !3950, file: !288, line: 1002, column: 8)
!4064 = !DILocation(line: 996, column: 22, scope: !3950)
!4065 = !DILocation(line: 1002, column: 35, scope: !4063)
!4066 = !DILocation(line: 1002, column: 23, scope: !4063)
!4067 = !DILocation(line: 1002, column: 8, scope: !3950)
!4068 = !DILocation(line: 1003, column: 5, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !288, line: 1003, column: 5)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !288, line: 1003, column: 5)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !288, line: 1003, column: 5)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !288, line: 1003, column: 5)
!4073 = distinct !DILexicalBlock(scope: !4063, file: !288, line: 1002, column: 45)
!4074 = !DILocation(line: 1010, column: 13, scope: !4073)
!4075 = !DILocation(line: 1011, column: 5, scope: !4073)
!4076 = !DILocation(line: 1014, column: 8, scope: !3950)
!4077 = !DILocation(line: 1015, column: 9, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !3983, file: !288, line: 1014, column: 15)
!4079 = !DILocation(line: 1018, column: 14, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !288, line: 1017, column: 12)
!4081 = distinct !DILexicalBlock(scope: !4078, file: !288, line: 1015, column: 9)
!4082 = !DILocation(line: 1020, column: 4, scope: !4078)
!4083 = !DILocation(line: 1020, column: 15, scope: !3983)
!4084 = !DILocation(line: 1021, column: 1, scope: !3981)
!4085 = !DILocation(line: 1022, column: 11, scope: !3981)
!4086 = !DILocation(line: 1025, column: 14, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3981, file: !288, line: 1025, column: 9)
!4088 = !DILocation(line: 1026, column: 25, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4087, file: !288, line: 1025, column: 38)
!4090 = !DILocation(line: 1026, column: 19, scope: !4089)
!4091 = !DILocation(line: 1026, column: 6, scope: !4089)
!4092 = !DILocation(line: 1026, column: 23, scope: !4089)
!4093 = !DILocation(line: 1027, column: 5, scope: !4089)
!4094 = !DILocation(line: 1031, column: 21, scope: !3981)
!4095 = !DILocation(line: 1031, column: 13, scope: !3981)
!4096 = !DILocation(line: 1032, column: 4, scope: !3981)
!4097 = !DILocation(line: 995, column: 33, scope: !3951)
!4098 = distinct !{!4098, !4052, !4099}
!4099 = !DILocation(line: 1033, column: 3, scope: !3948)
!4100 = !DILocation(line: 1040, column: 10, scope: !3907)
!4101 = !DILocation(line: 1042, column: 10, scope: !3907)
!4102 = !DILocation(line: 1052, column: 6, scope: !3907)
!4103 = !DILocation(line: 1055, column: 9, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !288, line: 1052, column: 14)
!4105 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1052, column: 6)
!4106 = !DILocation(line: 1056, column: 2, scope: !4104)
!4107 = !DILocation(line: 1056, column: 21, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4105, file: !288, line: 1056, column: 13)
!4109 = !DILocation(line: 1066, column: 3, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !288, line: 1065, column: 11)
!4111 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1065, column: 6)
!4112 = !DILocation(line: 1067, column: 2, scope: !4110)
!4113 = !DILocation(line: 1068, column: 10, scope: !3907)
!4114 = !DILocation(line: 0, scope: !3964)
!4115 = !DILocation(line: 1074, column: 20, scope: !3967)
!4116 = !DILocation(line: 1074, column: 2, scope: !3964)
!4117 = !DILocation(line: 1110, column: 24, scope: !3907)
!4118 = !DILocation(line: 1053, column: 12, scope: !4104)
!4119 = !DILocation(line: 1054, column: 12, scope: !4104)
!4120 = !DILocation(line: 1108, column: 30, scope: !3907)
!4121 = !DILocation(line: 1108, column: 40, scope: !3907)
!4122 = !DILocation(line: 1108, column: 38, scope: !3907)
!4123 = !DILocation(line: 1109, column: 31, scope: !3907)
!4124 = !DILocation(line: 1109, column: 24, scope: !3907)
!4125 = !DILocation(line: 1110, column: 31, scope: !3907)
!4126 = !DILocation(line: 1114, column: 31, scope: !3907)
!4127 = !DILocation(line: 1114, column: 48, scope: !3907)
!4128 = !DILocation(line: 1115, column: 13, scope: !3907)
!4129 = !DILocation(line: 1118, column: 7, scope: !3907)
!4130 = !DILocation(line: 1119, column: 9, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1119, column: 6)
!4132 = !DILocation(line: 1119, column: 6, scope: !3907)
!4133 = !DILocation(line: 1075, column: 29, scope: !3966)
!4134 = !DILocation(line: 1075, column: 21, scope: !3966)
!4135 = !DILocation(line: 0, scope: !3966)
!4136 = !DILocation(line: 1076, column: 29, scope: !3966)
!4137 = !DILocation(line: 1076, column: 21, scope: !3966)
!4138 = !DILocation(line: 1077, column: 38, scope: !3966)
!4139 = !DILocation(line: 1077, column: 21, scope: !3966)
!4140 = !DILocation(line: 1078, column: 16, scope: !3966)
!4141 = !DILocation(line: 1080, column: 19, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1080, column: 7)
!4143 = !DILocation(line: 1080, column: 34, scope: !4142)
!4144 = !DILocation(line: 1080, column: 22, scope: !4142)
!4145 = !DILocation(line: 1080, column: 7, scope: !3966)
!4146 = !DILocation(line: 1084, column: 7, scope: !3966)
!4147 = !DILocation(line: 1085, column: 8, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !288, line: 1084, column: 14)
!4149 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1084, column: 7)
!4150 = !DILocation(line: 1086, column: 5, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !288, line: 1086, column: 5)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !288, line: 1086, column: 5)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !288, line: 1085, column: 49)
!4154 = distinct !DILexicalBlock(scope: !4148, file: !288, line: 1085, column: 8)
!4155 = !DILocation(line: 1086, column: 5, scope: !4152)
!4156 = !DILocation(line: 1086, column: 5, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4151, file: !288, line: 1086, column: 5)
!4158 = !DILocation(line: 1087, column: 25, scope: !4153)
!4159 = !DILocation(line: 1087, column: 5, scope: !4153)
!4160 = !DILocation(line: 1088, column: 4, scope: !4153)
!4161 = !DILocation(line: 1088, column: 15, scope: !4154)
!4162 = !DILocation(line: 1089, column: 5, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !288, line: 1089, column: 5)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !288, line: 1089, column: 5)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !288, line: 1088, column: 61)
!4166 = distinct !DILexicalBlock(scope: !4154, file: !288, line: 1088, column: 15)
!4167 = !DILocation(line: 1089, column: 5, scope: !4164)
!4168 = !DILocation(line: 1089, column: 5, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4163, file: !288, line: 1089, column: 5)
!4170 = !DILocation(line: 1090, column: 26, scope: !4165)
!4171 = !DILocation(line: 1090, column: 5, scope: !4165)
!4172 = !DILocation(line: 1091, column: 4, scope: !4165)
!4173 = !DILocation(line: 1095, column: 8, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4149, file: !288, line: 1094, column: 10)
!4175 = !DILocation(line: 1096, column: 5, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !288, line: 1096, column: 5)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !288, line: 1096, column: 5)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !288, line: 1095, column: 49)
!4179 = distinct !DILexicalBlock(scope: !4174, file: !288, line: 1095, column: 8)
!4180 = !DILocation(line: 1096, column: 5, scope: !4177)
!4181 = !DILocation(line: 1096, column: 5, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !288, line: 1096, column: 5)
!4183 = !DILocation(line: 1097, column: 25, scope: !4178)
!4184 = !DILocation(line: 1097, column: 5, scope: !4178)
!4185 = !DILocation(line: 1098, column: 4, scope: !4178)
!4186 = !DILocation(line: 1099, column: 5, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !288, line: 1099, column: 5)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !288, line: 1099, column: 5)
!4189 = distinct !DILexicalBlock(scope: !4179, file: !288, line: 1098, column: 11)
!4190 = !DILocation(line: 1099, column: 5, scope: !4188)
!4191 = !DILocation(line: 1099, column: 5, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !288, line: 1099, column: 5)
!4193 = !DILocation(line: 1100, column: 26, scope: !4189)
!4194 = !DILocation(line: 1100, column: 5, scope: !4189)
!4195 = !DILocation(line: 1100, column: 30, scope: !4189)
!4196 = !DILocation(line: 1101, column: 26, scope: !4189)
!4197 = !DILocation(line: 1101, column: 5, scope: !4189)
!4198 = !DILocation(line: 0, scope: !4149)
!4199 = !DILocation(line: 1074, column: 32, scope: !3967)
!4200 = distinct !{!4200, !4116, !4201}
!4201 = !DILocation(line: 1104, column: 2, scope: !3964)
!4202 = !DILocation(line: 1124, column: 13, scope: !3907)
!4203 = !DILocation(line: 1127, column: 10, scope: !3907)
!4204 = !DILocation(line: 1127, column: 7, scope: !3907)
!4205 = !DILocation(line: 1128, column: 9, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1128, column: 6)
!4207 = !DILocation(line: 1128, column: 6, scope: !3907)
!4208 = !DILocation(line: 1134, column: 27, scope: !3907)
!4209 = !DILocation(line: 1136, column: 7, scope: !3907)
!4210 = !DILocation(line: 1137, column: 9, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 1137, column: 6)
!4212 = !DILocation(line: 1137, column: 6, scope: !3907)
!4213 = !DILocation(line: 1131, column: 10, scope: !3907)
!4214 = !DILocation(line: 1140, column: 10, scope: !3907)
!4215 = !DILocation(line: 0, scope: !3974)
!4216 = !DILocation(line: 1143, column: 20, scope: !3977)
!4217 = !DILocation(line: 1143, column: 2, scope: !3974)
!4218 = !DILocation(line: 1144, column: 3, scope: !3976)
!4219 = !DILocation(line: 1144, column: 17, scope: !3976)
!4220 = !DILocation(line: 0, scope: !3976)
!4221 = !DILocation(line: 1144, column: 11, scope: !3976)
!4222 = !DILocation(line: 1145, column: 38, scope: !3976)
!4223 = !DILocation(line: 1145, column: 21, scope: !3976)
!4224 = !DILocation(line: 1146, column: 22, scope: !3976)
!4225 = !DILocation(line: 1146, column: 29, scope: !3976)
!4226 = !DILocation(line: 1148, column: 8, scope: !3976)
!4227 = !DILocation(line: 1149, column: 10, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !3976, file: !288, line: 1149, column: 7)
!4229 = !DILocation(line: 1149, column: 7, scope: !3976)
!4230 = !DILocation(line: 1154, column: 8, scope: !3976)
!4231 = !DILocation(line: 1155, column: 10, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !3976, file: !288, line: 1155, column: 7)
!4233 = !DILocation(line: 1155, column: 7, scope: !3976)
!4234 = !DILocation(line: 1159, column: 2, scope: !3977)
!4235 = !DILocation(line: 1152, column: 11, scope: !3976)
!4236 = !DILocation(line: 1158, column: 11, scope: !3976)
!4237 = !DILocation(line: 1143, column: 33, scope: !3977)
!4238 = distinct !{!4238, !4217, !4239}
!4239 = !DILocation(line: 1159, column: 2, scope: !3974)
!4240 = !DILocation(line: 1162, column: 8, scope: !3907)
!4241 = !DILocation(line: 1164, column: 2, scope: !3907)
!4242 = !DILocation(line: 1165, column: 1, scope: !3907)
!4243 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4244, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4246)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!234, !107}
!4246 = !{!4247, !4248, !4249, !4250, !4251, !4252, !4253}
!4247 = !DILocalVariable(name: "packaged", arg: 1, scope: !4243, file: !288, line: 196, type: !107)
!4248 = !DILocalVariable(name: "buf", scope: !4243, file: !288, line: 200, type: !286)
!4249 = !DILocalVariable(name: "start", scope: !4243, file: !288, line: 201, type: !286)
!4250 = !DILocalVariable(name: "args_size", scope: !4243, file: !288, line: 202, type: !32)
!4251 = !DILocalVariable(name: "s_nbr", scope: !4243, file: !288, line: 202, type: !32)
!4252 = !DILocalVariable(name: "ros_nbr", scope: !4243, file: !288, line: 202, type: !32)
!4253 = !DILocalVariable(name: "i", scope: !4254, file: !288, line: 215, type: !109)
!4254 = distinct !DILexicalBlock(scope: !4243, file: !288, line: 215, column: 2)
!4255 = !DILocation(line: 0, scope: !4243)
!4256 = !DILocation(line: 198, column: 2, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !288, line: 198, column: 2)
!4258 = distinct !DILexicalBlock(scope: !4243, file: !288, line: 198, column: 2)
!4259 = !DILocation(line: 198, column: 2, scope: !4258)
!4260 = !DILocation(line: 198, column: 2, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !288, line: 198, column: 2)
!4262 = !DILocation(line: 204, column: 14, scope: !4243)
!4263 = !DILocation(line: 204, column: 21, scope: !4243)
!4264 = !DILocation(line: 205, column: 14, scope: !4243)
!4265 = !DILocation(line: 206, column: 14, scope: !4243)
!4266 = !DILocation(line: 209, column: 6, scope: !4243)
!4267 = !DILocation(line: 212, column: 6, scope: !4243)
!4268 = !DILocation(line: 0, scope: !4254)
!4269 = !DILocation(line: 215, column: 20, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4254, file: !288, line: 215, column: 2)
!4271 = !DILocation(line: 215, column: 2, scope: !4254)
!4272 = !DILocation(line: 220, column: 33, scope: !4243)
!4273 = !DILocation(line: 220, column: 2, scope: !4243)
!4274 = !DILocation(line: 216, column: 6, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !288, line: 215, column: 34)
!4276 = !DILocation(line: 217, column: 10, scope: !4275)
!4277 = !DILocation(line: 217, column: 36, scope: !4275)
!4278 = !DILocation(line: 217, column: 7, scope: !4275)
!4279 = !DILocation(line: 215, column: 30, scope: !4270)
!4280 = distinct !{!4280, !4271, !4281}
!4281 = !DILocation(line: 218, column: 2, scope: !4254)
!4282 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4283, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!109, !3910, !107, !279, !194}
!4285 = !{!4286, !4287, !4288, !4289}
!4286 = !DILocalVariable(name: "cb", arg: 1, scope: !4282, file: !288, line: 223, type: !3910)
!4287 = !DILocalVariable(name: "ctx", arg: 2, scope: !4282, file: !288, line: 223, type: !107)
!4288 = !DILocalVariable(name: "str", arg: 3, scope: !4282, file: !288, line: 223, type: !279)
!4289 = !DILocalVariable(name: "strl", arg: 4, scope: !4282, file: !288, line: 223, type: !194)
!4290 = !DILocation(line: 0, scope: !4282)
!4291 = !DILocation(line: 225, column: 9, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4282, file: !288, line: 225, column: 6)
!4293 = !DILocation(line: 225, column: 6, scope: !4282)
!4294 = !DILocation(line: 226, column: 14, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4292, file: !288, line: 225, column: 18)
!4296 = !DILocation(line: 226, column: 12, scope: !4295)
!4297 = !DILocation(line: 226, column: 3, scope: !4295)
!4298 = !DILocation(line: 229, column: 14, scope: !4282)
!4299 = !DILocation(line: 229, column: 9, scope: !4282)
!4300 = !DILocation(line: 229, column: 27, scope: !4282)
!4301 = !DILocation(line: 229, column: 39, scope: !4282)
!4302 = !DILocation(line: 230, column: 17, scope: !4282)
!4303 = !DILocation(line: 230, column: 9, scope: !4282)
!4304 = !DILocation(line: 230, column: 2, scope: !4282)
!4305 = !DILocation(line: 231, column: 1, scope: !4282)
!4306 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4307)
!4307 = !{!4308}
!4308 = !DILocalVariable(name: "c", arg: 1, scope: !4306, file: !301, line: 45, type: !109)
!4309 = !DILocation(line: 0, scope: !4306)
!4310 = !DILocation(line: 50, column: 2, scope: !4306)
!4311 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4312, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4314)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{null, !302}
!4314 = !{!4315}
!4315 = !DILocalVariable(name: "fn", arg: 1, scope: !4311, file: !301, line: 63, type: !302)
!4316 = !DILocation(line: 0, scope: !4311)
!4317 = !DILocation(line: 65, column: 12, scope: !4311)
!4318 = !DILocation(line: 66, column: 1, scope: !4311)
!4319 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4320, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2034)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!107}
!4322 = !DILocation(line: 78, column: 9, scope: !4319)
!4323 = !DILocation(line: 78, column: 2, scope: !4319)
!4324 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4325, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4333)
!4325 = !DISubroutineType(types: !4326)
!4326 = !{null, !279, !4327}
!4327 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3396, line: 99, baseType: !4328)
!4328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3396, line: 40, baseType: !4329)
!4329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4330)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4331)
!4331 = !{!4332}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4330, file: !301, line: 79, baseType: !107, size: 32)
!4333 = !{!4334, !4335, !4336}
!4334 = !DILocalVariable(name: "fmt", arg: 1, scope: !4324, file: !301, line: 113, type: !279)
!4335 = !DILocalVariable(name: "ap", arg: 2, scope: !4324, file: !301, line: 113, type: !4327)
!4336 = !DILocalVariable(name: "ctx", scope: !4337, file: !301, line: 121, type: !4339)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !301, line: 120, column: 27)
!4338 = distinct !DILexicalBlock(scope: !4324, file: !301, line: 120, column: 6)
!4339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4340)
!4340 = !{!4341, !4342}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4339, file: !301, line: 85, baseType: !32, size: 32)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4339, file: !301, line: 86, baseType: !4343, offset: 32)
!4343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !4344)
!4344 = !{!4345}
!4345 = !DISubrange(count: 0)
!4346 = !DILocation(line: 0, scope: !4324)
!4347 = !DILocation(line: 148, column: 3, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4338, file: !301, line: 138, column: 9)
!4349 = !DILocation(line: 155, column: 1, scope: !4324)
!4350 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4351, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4353)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!109, !109, !107}
!4353 = !{!4354, !4355}
!4354 = !DILocalVariable(name: "c", arg: 1, scope: !4350, file: !301, line: 107, type: !109)
!4355 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4350, file: !301, line: 107, type: !107)
!4356 = !DILocation(line: 0, scope: !4350)
!4357 = !DILocation(line: 110, column: 9, scope: !4350)
!4358 = !DILocation(line: 110, column: 2, scope: !4350)
!4359 = distinct !DISubprogram(name: "cbvprintf", scope: !3428, file: !3428, line: 739, type: !4360, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!109, !3778, !107, !279, !4327}
!4362 = !{!4363, !4364, !4365, !4366}
!4363 = !DILocalVariable(name: "out", arg: 1, scope: !4359, file: !3428, line: 739, type: !3778)
!4364 = !DILocalVariable(name: "ctx", arg: 2, scope: !4359, file: !3428, line: 739, type: !107)
!4365 = !DILocalVariable(name: "format", arg: 3, scope: !4359, file: !3428, line: 739, type: !279)
!4366 = !DILocalVariable(name: "ap", arg: 4, scope: !4359, file: !3428, line: 739, type: !4327)
!4367 = !DILocation(line: 0, scope: !4359)
!4368 = !DILocation(line: 741, column: 9, scope: !4359)
!4369 = !DILocation(line: 741, column: 2, scope: !4359)
!4370 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4371, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{null, !285, !234}
!4373 = !{!4374, !4375, !4376}
!4374 = !DILocalVariable(name: "c", arg: 1, scope: !4370, file: !301, line: 157, type: !285)
!4375 = !DILocalVariable(name: "n", arg: 2, scope: !4370, file: !301, line: 157, type: !234)
!4376 = !DILocalVariable(name: "i", scope: !4370, file: !301, line: 159, type: !234)
!4377 = !DILocation(line: 0, scope: !4370)
!4378 = !DILocation(line: 164, column: 16, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !301, line: 164, column: 2)
!4380 = distinct !DILexicalBlock(scope: !4370, file: !301, line: 164, column: 2)
!4381 = !DILocation(line: 164, column: 2, scope: !4380)
!4382 = !DILocation(line: 165, column: 3, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4379, file: !301, line: 164, column: 26)
!4384 = !DILocation(line: 165, column: 13, scope: !4383)
!4385 = !DILocation(line: 164, column: 22, scope: !4379)
!4386 = distinct !{!4386, !4381, !4387}
!4387 = !DILocation(line: 166, column: 2, scope: !4380)
!4388 = !DILocation(line: 171, column: 1, scope: !4370)
!4389 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4390, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4392)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{null, !279, null}
!4392 = !{!4393, !4394}
!4393 = !DILocalVariable(name: "fmt", arg: 1, scope: !4389, file: !301, line: 203, type: !279)
!4394 = !DILocalVariable(name: "ap", scope: !4389, file: !301, line: 205, type: !4327)
!4395 = !DILocation(line: 0, scope: !4389)
!4396 = !DILocation(line: 205, column: 2, scope: !4389)
!4397 = !DILocation(line: 205, column: 10, scope: !4389)
!4398 = !DILocation(line: 207, column: 2, scope: !4389)
!4399 = !DILocation(line: 209, column: 2, scope: !4389)
!4400 = !DILocation(line: 211, column: 2, scope: !4389)
!4401 = !DILocation(line: 212, column: 1, scope: !4389)
!4402 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4403, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4405)
!4403 = !DISubroutineType(types: !4404)
!4404 = !{!109, !285, !234, !279, null}
!4405 = !{!4406, !4407, !4408, !4409, !4410}
!4406 = !DILocalVariable(name: "str", arg: 1, scope: !4402, file: !301, line: 239, type: !285)
!4407 = !DILocalVariable(name: "size", arg: 2, scope: !4402, file: !301, line: 239, type: !234)
!4408 = !DILocalVariable(name: "fmt", arg: 3, scope: !4402, file: !301, line: 239, type: !279)
!4409 = !DILocalVariable(name: "ap", scope: !4402, file: !301, line: 241, type: !4327)
!4410 = !DILocalVariable(name: "ret", scope: !4402, file: !301, line: 242, type: !109)
!4411 = !DILocation(line: 0, scope: !4402)
!4412 = !DILocation(line: 241, column: 2, scope: !4402)
!4413 = !DILocation(line: 241, column: 10, scope: !4402)
!4414 = !DILocation(line: 244, column: 2, scope: !4402)
!4415 = !DILocation(line: 245, column: 8, scope: !4402)
!4416 = !DILocation(line: 246, column: 2, scope: !4402)
!4417 = !DILocation(line: 249, column: 1, scope: !4402)
!4418 = !DILocation(line: 248, column: 2, scope: !4402)
!4419 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4420, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4422)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!109, !285, !234, !279, !4327}
!4422 = !{!4423, !4424, !4425, !4426, !4427}
!4423 = !DILocalVariable(name: "str", arg: 1, scope: !4419, file: !301, line: 251, type: !285)
!4424 = !DILocalVariable(name: "size", arg: 2, scope: !4419, file: !301, line: 251, type: !234)
!4425 = !DILocalVariable(name: "fmt", arg: 3, scope: !4419, file: !301, line: 251, type: !279)
!4426 = !DILocalVariable(name: "ap", arg: 4, scope: !4419, file: !301, line: 251, type: !4327)
!4427 = !DILocalVariable(name: "ctx", scope: !4419, file: !301, line: 253, type: !4428)
!4428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4429)
!4429 = !{!4430, !4431, !4432}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4428, file: !301, line: 218, baseType: !285, size: 32)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4428, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4428, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4433 = !DILocation(line: 0, scope: !4419)
!4434 = !DILocation(line: 253, column: 2, scope: !4419)
!4435 = !DILocation(line: 253, column: 21, scope: !4419)
!4436 = !DILocation(line: 253, column: 27, scope: !4419)
!4437 = !DILocation(line: 255, column: 2, scope: !4419)
!4438 = !DILocation(line: 257, column: 10, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4419, file: !301, line: 257, column: 6)
!4440 = !DILocation(line: 257, column: 22, scope: !4439)
!4441 = !DILocation(line: 257, column: 16, scope: !4439)
!4442 = !DILocation(line: 257, column: 6, scope: !4419)
!4443 = !DILocation(line: 258, column: 3, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !301, line: 257, column: 27)
!4445 = !DILocation(line: 258, column: 18, scope: !4444)
!4446 = !DILocation(line: 259, column: 2, scope: !4444)
!4447 = !DILocation(line: 262, column: 1, scope: !4419)
!4448 = !DILocation(line: 261, column: 2, scope: !4419)
!4449 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4450, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4453)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!109, !109, !4452}
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 32)
!4453 = !{!4454, !4455}
!4454 = !DILocalVariable(name: "c", arg: 1, scope: !4449, file: !301, line: 223, type: !109)
!4455 = !DILocalVariable(name: "ctx", arg: 2, scope: !4449, file: !301, line: 223, type: !4452)
!4456 = !DILocation(line: 0, scope: !4449)
!4457 = !DILocation(line: 225, column: 11, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4449, file: !301, line: 225, column: 6)
!4459 = !DILocation(line: 225, column: 15, scope: !4458)
!4460 = !DILocation(line: 0, scope: !4458)
!4461 = !DILocation(line: 225, column: 23, scope: !4458)
!4462 = !DILocation(line: 225, column: 45, scope: !4458)
!4463 = !DILocation(line: 225, column: 37, scope: !4458)
!4464 = !DILocation(line: 225, column: 6, scope: !4449)
!4465 = !DILocation(line: 226, column: 8, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4458, file: !301, line: 225, column: 50)
!4467 = !DILocation(line: 226, column: 13, scope: !4466)
!4468 = !DILocation(line: 227, column: 3, scope: !4466)
!4469 = !DILocation(line: 230, column: 29, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4449, file: !301, line: 230, column: 6)
!4471 = !DILocation(line: 230, column: 17, scope: !4470)
!4472 = !DILocation(line: 230, column: 6, scope: !4449)
!4473 = !DILocation(line: 231, column: 22, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4470, file: !301, line: 230, column: 34)
!4475 = !DILocation(line: 231, column: 3, scope: !4474)
!4476 = !DILocation(line: 231, column: 26, scope: !4474)
!4477 = !DILocation(line: 232, column: 2, scope: !4474)
!4478 = !DILocation(line: 233, column: 28, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4470, file: !301, line: 232, column: 9)
!4480 = !DILocation(line: 233, column: 22, scope: !4479)
!4481 = !DILocation(line: 233, column: 3, scope: !4479)
!4482 = !DILocation(line: 233, column: 26, scope: !4479)
!4483 = !DILocation(line: 237, column: 1, scope: !4449)
!4484 = distinct !DISubprogram(name: "z_thread_entry", scope: !4485, file: !4485, line: 30, type: !4486, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !4488)
!4485 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4486 = !DISubroutineType(types: !4487)
!4487 = !{null, !3361, !107, !107, !107}
!4488 = !{!4489, !4490, !4491, !4492}
!4489 = !DILocalVariable(name: "entry", arg: 1, scope: !4484, file: !4485, line: 30, type: !3361)
!4490 = !DILocalVariable(name: "p1", arg: 2, scope: !4484, file: !4485, line: 31, type: !107)
!4491 = !DILocalVariable(name: "p2", arg: 3, scope: !4484, file: !4485, line: 31, type: !107)
!4492 = !DILocalVariable(name: "p3", arg: 4, scope: !4484, file: !4485, line: 31, type: !107)
!4493 = !DILocation(line: 0, scope: !4484)
!4494 = !DILocation(line: 36, column: 2, scope: !4484)
!4495 = !DILocation(line: 38, column: 17, scope: !4484)
!4496 = !DILocation(line: 38, column: 2, scope: !4484)
!4497 = !DILocation(line: 45, column: 2, scope: !4484)
!4498 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4499, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !2034)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!4501}
!4501 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !4502)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 32)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !4504)
!4504 = !{!4505, !4563, !4575, !4576, !4577, !4578, !4579, !4585, !4600}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4503, file: !158, line: 247, baseType: !4506, size: 384)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !4507)
!4507 = !{!4508, !4532, !4539, !4540, !4541, !4550, !4551, !4552}
!4508 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !158, line: 60, baseType: !4509, size: 64)
!4509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !158, line: 60, size: 64, elements: !4510)
!4510 = !{!4511, !4526}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4509, file: !158, line: 61, baseType: !4512, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4513)
!4513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4514)
!4514 = !{!4515, !4521}
!4515 = !DIDerivedType(tag: DW_TAG_member, scope: !4513, file: !127, line: 38, baseType: !4516, size: 32)
!4516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4513, file: !127, line: 38, size: 32, elements: !4517)
!4517 = !{!4518, !4520}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4516, file: !127, line: 39, baseType: !4519, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 32)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4516, file: !127, line: 40, baseType: !4519, size: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, scope: !4513, file: !127, line: 42, baseType: !4522, size: 32, offset: 32)
!4522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4513, file: !127, line: 42, size: 32, elements: !4523)
!4523 = !{!4524, !4525}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4522, file: !127, line: 43, baseType: !4519, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4522, file: !127, line: 44, baseType: !4519, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4509, file: !158, line: 62, baseType: !4527, size: 64)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !4528)
!4528 = !{!4529}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4527, file: !170, line: 50, baseType: !4530, size: 64)
!4530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4531, size: 64, elements: !175)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4506, file: !158, line: 68, baseType: !4533, size: 32, offset: 64)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 32)
!4534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4535)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4535, file: !122, line: 232, baseType: !4538, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4513)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4506, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4506, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!4541 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !158, line: 90, baseType: !4542, size: 16, offset: 112)
!4542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !158, line: 90, size: 16, elements: !4543)
!4543 = !{!4544, !4549}
!4544 = !DIDerivedType(tag: DW_TAG_member, scope: !4542, file: !158, line: 91, baseType: !4545, size: 16)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4542, file: !158, line: 91, size: 16, elements: !4546)
!4546 = !{!4547, !4548}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4545, file: !158, line: 96, baseType: !190, size: 8)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4545, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4542, file: !158, line: 100, baseType: !194, size: 16)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4506, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4506, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4506, file: !158, line: 131, baseType: !4553, size: 192, offset: 192)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4554)
!4554 = !{!4555, !4556, !4562}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4553, file: !122, line: 245, baseType: !4512, size: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4553, file: !122, line: 246, baseType: !4557, size: 32, offset: 64)
!4557 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4558)
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 32)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{null, !4561}
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4553, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4503, file: !158, line: 250, baseType: !4564, size: 288, offset: 384)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !4565)
!4565 = !{!4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4564, file: !211, line: 26, baseType: !110, size: 32)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4564, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4564, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4564, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4564, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4564, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4564, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4564, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4564, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4503, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4503, file: !158, line: 256, baseType: !4534, size: 64, offset: 704)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4503, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4503, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4503, file: !158, line: 300, baseType: !4580, size: 96, offset: 1056)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !4581)
!4581 = !{!4582, !4583, !4584}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4580, file: !158, line: 153, baseType: !22, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4580, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4580, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4503, file: !158, line: 325, baseType: !4586, size: 32, offset: 1152)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 32)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4588)
!4588 = !{!4589, !4595, !4596}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4587, file: !118, line: 5074, baseType: !4590, size: 96)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !4591)
!4591 = !{!4592, !4593, !4594}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4590, file: !243, line: 57, baseType: !246, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4590, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4590, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4587, file: !118, line: 5075, baseType: !4534, size: 64, offset: 96)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4587, file: !118, line: 5076, baseType: !4597, size: 32, offset: 160)
!4597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !4598)
!4598 = !{!4599}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4597, file: !253, line: 52, baseType: !22, size: 32)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4503, file: !158, line: 343, baseType: !4601, size: 64, offset: 1184)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !4602)
!4602 = !{!4603, !4604}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4601, file: !211, line: 63, baseType: !110, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4601, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!4605 = !DILocation(line: 535, column: 9, scope: !4498)
!4606 = !DILocation(line: 535, column: 2, scope: !4498)
!4607 = distinct !DISubprogram(name: "k_thread_abort", scope: !3240, file: !3240, line: 188, type: !4608, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !4610)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{null, !4501}
!4610 = !{!4611}
!4611 = !DILocalVariable(name: "thread", arg: 1, scope: !4607, file: !3240, line: 188, type: !4501)
!4612 = !DILocation(line: 0, scope: !4607)
!4613 = !DILocation(line: 197, column: 2, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4607, file: !3240, line: 197, column: 2)
!4615 = !{i64 2154846478}
!4616 = !DILocation(line: 198, column: 2, scope: !4607)
!4617 = !DILocation(line: 199, column: 1, scope: !4607)
!4618 = distinct !DISubprogram(name: "z_current_get", scope: !3240, file: !3240, line: 173, type: !4499, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !2034)
!4619 = !DILocation(line: 180, column: 2, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4618, file: !3240, line: 180, column: 2)
!4621 = !{i64 2154846410}
!4622 = !DILocation(line: 181, column: 9, scope: !4618)
!4623 = !DILocation(line: 181, column: 2, scope: !4618)
!4624 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2523, file: !2523, line: 1338, type: !4625, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !4633)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{!109, !3778, !107, !279, !4627, !110}
!4627 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3396, line: 99, baseType: !4628)
!4628 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3396, line: 40, baseType: !4629)
!4629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2523, baseType: !4630)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4631)
!4631 = !{!4632}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4630, file: !2523, baseType: !107, size: 32)
!4633 = !{!4634, !4635, !4636, !4637, !4638, !4639, !4643, !4644, !4645, !4647, !4652, !4695, !4698, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4710, !4711, !4712, !4716, !4719, !4721, !4724, !4725, !4726, !4731, !4737, !4740, !4744, !4750, !4754, !4757, !4759, !4762}
!4634 = !DILocalVariable(name: "out", arg: 1, scope: !4624, file: !2523, line: 1338, type: !3778)
!4635 = !DILocalVariable(name: "ctx", arg: 2, scope: !4624, file: !2523, line: 1338, type: !107)
!4636 = !DILocalVariable(name: "fp", arg: 3, scope: !4624, file: !2523, line: 1338, type: !279)
!4637 = !DILocalVariable(name: "ap", arg: 4, scope: !4624, file: !2523, line: 1339, type: !4627)
!4638 = !DILocalVariable(name: "flags", arg: 5, scope: !4624, file: !2523, line: 1339, type: !110)
!4639 = !DILocalVariable(name: "buf", scope: !4624, file: !2523, line: 1341, type: !4640)
!4640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !4641)
!4641 = !{!4642}
!4642 = !DISubrange(count: 22)
!4643 = !DILocalVariable(name: "count", scope: !4624, file: !2523, line: 1342, type: !234)
!4644 = !DILocalVariable(name: "sint", scope: !4624, file: !2523, line: 1343, type: !2542)
!4645 = !DILocalVariable(name: "tagged_ap", scope: !4624, file: !2523, line: 1345, type: !4646)
!4646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4647 = !DILocalVariable(name: "rc", scope: !4648, file: !2523, line: 1377, type: !109)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2523, line: 1377, column: 4)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !2523, line: 1376, column: 19)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1376, column: 7)
!4651 = distinct !DILexicalBlock(scope: !4624, file: !2523, line: 1375, column: 19)
!4652 = !DILocalVariable(name: "state", scope: !4651, file: !2523, line: 1395, type: !4653)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4624, file: !2523, line: 1392, size: 192, elements: !4654)
!4654 = !{!4655, !4663}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4653, file: !2523, line: 1393, baseType: !4656, size: 64)
!4656 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2523, line: 166, size: 64, elements: !4657)
!4657 = !{!4658, !4659, !4660, !4661, !4662}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4656, file: !2523, line: 168, baseType: !2542, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4656, file: !2523, line: 171, baseType: !2545, size: 64)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4656, file: !2523, line: 174, baseType: !277, size: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4656, file: !2523, line: 177, baseType: !275, size: 64)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4656, file: !2523, line: 180, baseType: !107, size: 32)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4653, file: !2523, line: 1394, baseType: !4664, size: 96, offset: 64)
!4664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2523, line: 189, size: 96, elements: !4665)
!4665 = !{!4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4690}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4664, file: !2523, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4664, file: !2523, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4664, file: !2523, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4664, file: !2523, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4664, file: !2523, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4664, file: !2523, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4664, file: !2523, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4664, file: !2523, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4664, file: !2523, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4664, file: !2523, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4664, file: !2523, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4664, file: !2523, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4664, file: !2523, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4664, file: !2523, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4664, file: !2523, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4664, file: !2523, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4664, file: !2523, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4664, file: !2523, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4664, file: !2523, line: 260, baseType: !181, size: 8, offset: 24)
!4685 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2523, line: 262, baseType: !4686, size: 32, offset: 32)
!4686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2523, line: 262, size: 32, elements: !4687)
!4687 = !{!4688, !4689}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4686, file: !2523, line: 267, baseType: !109, size: 32)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4686, file: !2523, line: 289, baseType: !109, size: 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, scope: !4664, file: !2523, line: 292, baseType: !4691, size: 32, offset: 64)
!4691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4664, file: !2523, line: 292, size: 32, elements: !4692)
!4692 = !{!4693, !4694}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4691, file: !2523, line: 297, baseType: !109, size: 32)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4691, file: !2523, line: 306, baseType: !109, size: 32)
!4695 = !DILocalVariable(name: "conv", scope: !4651, file: !2523, line: 1400, type: !4696)
!4696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4697)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 32)
!4698 = !DILocalVariable(name: "value", scope: !4651, file: !2523, line: 1401, type: !4699)
!4699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4700)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 32)
!4701 = !DILocalVariable(name: "sp", scope: !4651, file: !2523, line: 1402, type: !279)
!4702 = !DILocalVariable(name: "width", scope: !4651, file: !2523, line: 1403, type: !109)
!4703 = !DILocalVariable(name: "precision", scope: !4651, file: !2523, line: 1404, type: !109)
!4704 = !DILocalVariable(name: "bps", scope: !4651, file: !2523, line: 1405, type: !279)
!4705 = !DILocalVariable(name: "bpe", scope: !4651, file: !2523, line: 1406, type: !279)
!4706 = !DILocalVariable(name: "sign", scope: !4651, file: !2523, line: 1407, type: !150)
!4707 = !DILocalVariable(name: "arg", scope: !4708, file: !2523, line: 1432, type: !109)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2523, line: 1431, column: 24)
!4709 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1431, column: 7)
!4710 = !DILocalVariable(name: "specifier_cat", scope: !4651, file: !2523, line: 1468, type: !2522)
!4711 = !DILocalVariable(name: "length_mod", scope: !4651, file: !2523, line: 1470, type: !2530)
!4712 = !DILocalVariable(name: "rc", scope: !4713, file: !2523, line: 1575, type: !109)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2523, line: 1575, column: 4)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2523, line: 1574, column: 43)
!4715 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1574, column: 7)
!4716 = !DILocalVariable(name: "rc", scope: !4717, file: !2523, line: 1584, type: !109)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1584, column: 4)
!4718 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1582, column: 28)
!4719 = !DILocalVariable(name: "len", scope: !4720, file: !2523, line: 1589, type: !234)
!4720 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1586, column: 13)
!4721 = !DILocalVariable(name: "len", scope: !4722, file: !2523, line: 1641, type: !234)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2523, line: 1640, column: 24)
!4723 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1640, column: 8)
!4724 = !DILocalVariable(name: "nj_len", scope: !4651, file: !2523, line: 1722, type: !234)
!4725 = !DILocalVariable(name: "pad_len", scope: !4651, file: !2523, line: 1723, type: !109)
!4726 = !DILocalVariable(name: "pad", scope: !4727, file: !2523, line: 1751, type: !150)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2523, line: 1750, column: 26)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !2523, line: 1750, column: 8)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !2523, line: 1747, column: 18)
!4730 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1747, column: 7)
!4731 = !DILocalVariable(name: "rc", scope: !4732, file: !2523, line: 1758, type: !109)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2523, line: 1758, column: 7)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !2523, line: 1757, column: 21)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !2523, line: 1757, column: 10)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2523, line: 1756, column: 26)
!4736 = distinct !DILexicalBlock(scope: !4727, file: !2523, line: 1756, column: 9)
!4737 = !DILocalVariable(name: "rc", scope: !4738, file: !2523, line: 1765, type: !109)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !2523, line: 1765, column: 6)
!4739 = distinct !DILexicalBlock(scope: !4727, file: !2523, line: 1764, column: 25)
!4740 = !DILocalVariable(name: "rc", scope: !4741, file: !2523, line: 1774, type: !109)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !2523, line: 1774, column: 4)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2523, line: 1773, column: 18)
!4743 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1773, column: 7)
!4744 = !DILocalVariable(name: "rc", scope: !4745, file: !2523, line: 1819, type: !109)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !2523, line: 1819, column: 5)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !2523, line: 1818, column: 44)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !2523, line: 1818, column: 8)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2523, line: 1817, column: 10)
!4749 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1777, column: 7)
!4750 = !DILocalVariable(name: "rc", scope: !4751, file: !2523, line: 1823, type: !109)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2523, line: 1823, column: 5)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2523, line: 1822, column: 26)
!4753 = distinct !DILexicalBlock(scope: !4748, file: !2523, line: 1822, column: 8)
!4754 = !DILocalVariable(name: "rc", scope: !4755, file: !2523, line: 1828, type: !109)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !2523, line: 1828, column: 5)
!4756 = distinct !DILexicalBlock(scope: !4748, file: !2523, line: 1827, column: 26)
!4757 = !DILocalVariable(name: "rc", scope: !4758, file: !2523, line: 1831, type: !109)
!4758 = distinct !DILexicalBlock(scope: !4748, file: !2523, line: 1831, column: 4)
!4759 = !DILocalVariable(name: "rc", scope: !4760, file: !2523, line: 1836, type: !109)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !2523, line: 1836, column: 4)
!4761 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1835, column: 21)
!4762 = !DILabel(scope: !4718, name: "prec_int_pad0", file: !2523, line: 1634)
!4763 = !DILocation(line: 0, scope: !4624)
!4764 = !DILocation(line: 1341, column: 2, scope: !4624)
!4765 = !DILocation(line: 1341, column: 7, scope: !4624)
!4766 = !DILocation(line: 1375, column: 2, scope: !4624)
!4767 = !DILocation(line: 1342, column: 9, scope: !4624)
!4768 = !DILocation(line: 1375, column: 9, scope: !4624)
!4769 = !DILocation(line: 1377, column: 4, scope: !4648)
!4770 = !DILocation(line: 0, scope: !4648)
!4771 = !DILocation(line: 1377, column: 4, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4648, file: !2523, line: 1377, column: 4)
!4773 = distinct !{!4773, !4766, !4774}
!4774 = !DILocation(line: 1839, column: 2, scope: !4624)
!4775 = !DILocation(line: 1392, column: 3, scope: !4651)
!4776 = !DILocation(line: 1395, column: 5, scope: !4651)
!4777 = !DILocation(line: 0, scope: !4651)
!4778 = !DILocation(line: 1409, column: 8, scope: !4651)
!4779 = !DILocation(line: 1414, column: 13, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1414, column: 7)
!4781 = !DILocation(line: 1414, column: 7, scope: !4651)
!4782 = !DILocation(line: 1415, column: 12, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !2523, line: 1414, column: 25)
!4784 = !DILocation(line: 1417, column: 14, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4783, file: !2523, line: 1417, column: 8)
!4786 = !DILocation(line: 1417, column: 8, scope: !4783)
!4787 = !DILocation(line: 1418, column: 21, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4785, file: !2523, line: 1417, column: 19)
!4789 = !DILocation(line: 1419, column: 13, scope: !4788)
!4790 = !DILocation(line: 1420, column: 4, scope: !4788)
!4791 = !DILocation(line: 1421, column: 20, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4780, file: !2523, line: 1421, column: 14)
!4793 = !DILocation(line: 1421, column: 14, scope: !4780)
!4794 = !DILocation(line: 1431, column: 13, scope: !4709)
!4795 = !DILocation(line: 1431, column: 7, scope: !4651)
!4796 = !DILocation(line: 1432, column: 14, scope: !4708)
!4797 = !DILocation(line: 0, scope: !4708)
!4798 = !DILocation(line: 1434, column: 12, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4708, file: !2523, line: 1434, column: 8)
!4800 = !DILocation(line: 1434, column: 8, scope: !4708)
!4801 = !DILocation(line: 1435, column: 24, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !2523, line: 1434, column: 17)
!4803 = !DILocation(line: 1436, column: 4, scope: !4802)
!4804 = !DILocation(line: 1439, column: 20, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4709, file: !2523, line: 1439, column: 14)
!4806 = !DILocation(line: 1439, column: 14, scope: !4709)
!4807 = !DILocation(line: 1469, column: 37, scope: !4651)
!4808 = !DILocation(line: 1448, column: 20, scope: !4651)
!4809 = !DILocation(line: 1449, column: 22, scope: !4651)
!4810 = !DILocation(line: 1471, column: 34, scope: !4651)
!4811 = !DILocation(line: 1478, column: 7, scope: !4651)
!4812 = !DILocation(line: 1479, column: 4, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !2523, line: 1478, column: 40)
!4814 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1478, column: 7)
!4815 = !DILocation(line: 1484, column: 19, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4813, file: !2523, line: 1479, column: 24)
!4817 = !DILocation(line: 1484, column: 17, scope: !4816)
!4818 = !DILocation(line: 1485, column: 5, scope: !4816)
!4819 = !DILocation(line: 1492, column: 20, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !2523, line: 1491, column: 12)
!4821 = distinct !DILexicalBlock(scope: !4816, file: !2523, line: 1487, column: 9)
!4822 = !DILocation(line: 1492, column: 18, scope: !4820)
!4823 = !DILocation(line: 1494, column: 5, scope: !4816)
!4824 = !DILocation(line: 1497, column: 23, scope: !4816)
!4825 = !DILocation(line: 1496, column: 17, scope: !4816)
!4826 = !DILocation(line: 1498, column: 5, scope: !4816)
!4827 = !DILocation(line: 1501, column: 23, scope: !4816)
!4828 = !DILocation(line: 1500, column: 17, scope: !4816)
!4829 = !DILocation(line: 1502, column: 5, scope: !4816)
!4830 = !DILocation(line: 1513, column: 23, scope: !4816)
!4831 = !DILocation(line: 1513, column: 6, scope: !4816)
!4832 = !DILocation(line: 1512, column: 17, scope: !4816)
!4833 = !DILocation(line: 1514, column: 5, scope: !4816)
!4834 = !DILocation(line: 0, scope: !4816)
!4835 = !DILocation(line: 1516, column: 8, scope: !4813)
!4836 = !DILocation(line: 1517, column: 19, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !2523, line: 1516, column: 33)
!4838 = distinct !DILexicalBlock(scope: !4813, file: !2523, line: 1516, column: 8)
!4839 = !DILocation(line: 1517, column: 17, scope: !4837)
!4840 = !DILocation(line: 1518, column: 4, scope: !4837)
!4841 = !DILocation(line: 1519, column: 19, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !2523, line: 1518, column: 39)
!4843 = distinct !DILexicalBlock(scope: !4838, file: !2523, line: 1518, column: 15)
!4844 = !DILocation(line: 1519, column: 17, scope: !4842)
!4845 = !DILocation(line: 1520, column: 4, scope: !4842)
!4846 = !DILocation(line: 1522, column: 4, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !2523, line: 1521, column: 47)
!4848 = distinct !DILexicalBlock(scope: !4814, file: !2523, line: 1521, column: 14)
!4849 = !DILocation(line: 1527, column: 19, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !2523, line: 1522, column: 24)
!4851 = !DILocation(line: 1527, column: 17, scope: !4850)
!4852 = !DILocation(line: 1528, column: 5, scope: !4850)
!4853 = !DILocation(line: 0, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4850, file: !2523, line: 1530, column: 9)
!4855 = !DILocation(line: 1540, column: 23, scope: !4850)
!4856 = !DILocation(line: 1539, column: 17, scope: !4850)
!4857 = !DILocation(line: 1542, column: 5, scope: !4850)
!4858 = !DILocation(line: 1545, column: 23, scope: !4850)
!4859 = !DILocation(line: 1544, column: 17, scope: !4850)
!4860 = !DILocation(line: 1547, column: 5, scope: !4850)
!4861 = !DILocation(line: 1551, column: 23, scope: !4850)
!4862 = !DILocation(line: 1551, column: 6, scope: !4850)
!4863 = !DILocation(line: 1550, column: 17, scope: !4850)
!4864 = !DILocation(line: 1552, column: 5, scope: !4850)
!4865 = !DILocation(line: 0, scope: !4850)
!4866 = !DILocation(line: 1554, column: 8, scope: !4847)
!4867 = !DILocation(line: 1555, column: 19, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !2523, line: 1554, column: 33)
!4869 = distinct !DILexicalBlock(scope: !4847, file: !2523, line: 1554, column: 8)
!4870 = !DILocation(line: 1555, column: 17, scope: !4868)
!4871 = !DILocation(line: 1556, column: 4, scope: !4868)
!4872 = !DILocation(line: 1557, column: 19, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !2523, line: 1556, column: 39)
!4874 = distinct !DILexicalBlock(scope: !4869, file: !2523, line: 1556, column: 15)
!4875 = !DILocation(line: 1557, column: 17, scope: !4873)
!4876 = !DILocation(line: 1558, column: 4, scope: !4873)
!4877 = !DILocation(line: 0, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !2523, line: 1560, column: 8)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !2523, line: 1559, column: 45)
!4880 = distinct !DILexicalBlock(scope: !4848, file: !2523, line: 1559, column: 14)
!4881 = !DILocation(line: 1566, column: 17, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2523, line: 1565, column: 46)
!4883 = distinct !DILexicalBlock(scope: !4880, file: !2523, line: 1565, column: 14)
!4884 = !DILocation(line: 1566, column: 15, scope: !4882)
!4885 = !DILocation(line: 1567, column: 3, scope: !4882)
!4886 = !DILocation(line: 1574, column: 21, scope: !4715)
!4887 = !DILocation(line: 1575, column: 4, scope: !4713)
!4888 = !DILocation(line: 0, scope: !4713)
!4889 = !DILocation(line: 1575, column: 4, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4713, file: !2523, line: 1575, column: 4)
!4891 = !DILocation(line: 1582, column: 17, scope: !4651)
!4892 = !DILocation(line: 1582, column: 3, scope: !4651)
!4893 = !DILocation(line: 1584, column: 4, scope: !4717)
!4894 = !DILocation(line: 0, scope: !4717)
!4895 = !DILocation(line: 1584, column: 4, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4717, file: !2523, line: 1584, column: 4)
!4897 = !DILocation(line: 1587, column: 31, scope: !4720)
!4898 = !DILocation(line: 1591, column: 18, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4720, file: !2523, line: 1591, column: 8)
!4900 = !DILocation(line: 1591, column: 8, scope: !4720)
!4901 = !DILocation(line: 1592, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4899, file: !2523, line: 1591, column: 24)
!4903 = !DILocation(line: 0, scope: !4720)
!4904 = !DILocation(line: 1593, column: 4, scope: !4902)
!4905 = !DILocation(line: 1594, column: 11, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4899, file: !2523, line: 1593, column: 11)
!4907 = !DILocation(line: 1604, column: 51, scope: !4718)
!4908 = !DILocation(line: 1604, column: 13, scope: !4718)
!4909 = !DILocation(line: 1604, column: 11, scope: !4718)
!4910 = !DILocation(line: 1606, column: 4, scope: !4718)
!4911 = !DILocation(line: 1609, column: 14, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1609, column: 8)
!4913 = !DILocation(line: 1609, column: 8, scope: !4718)
!4914 = !DILocation(line: 1619, column: 18, scope: !4718)
!4915 = !DILocation(line: 1620, column: 13, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1620, column: 8)
!4917 = !DILocation(line: 1620, column: 8, scope: !4718)
!4918 = !DILocation(line: 1622, column: 36, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !2523, line: 1620, column: 18)
!4920 = !DILocation(line: 1622, column: 17, scope: !4919)
!4921 = !DILocation(line: 1623, column: 4, scope: !4919)
!4922 = !DILocation(line: 1632, column: 29, scope: !4718)
!4923 = !DILocation(line: 1632, column: 10, scope: !4718)
!4924 = !DILocation(line: 1632, column: 4, scope: !4718)
!4925 = !DILocation(line: 1407, column: 8, scope: !4651)
!4926 = !DILocation(line: 0, scope: !4718)
!4927 = !DILocation(line: 1634, column: 3, scope: !4718)
!4928 = !DILocation(line: 1640, column: 18, scope: !4723)
!4929 = !DILocation(line: 1640, column: 8, scope: !4718)
!4930 = !DILocation(line: 1729, column: 13, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1729, column: 7)
!4932 = !DILocation(line: 1641, column: 22, scope: !4722)
!4933 = !DILocation(line: 0, scope: !4722)
!4934 = !DILocation(line: 1646, column: 21, scope: !4722)
!4935 = !DILocation(line: 1649, column: 13, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4722, file: !2523, line: 1649, column: 9)
!4937 = !DILocation(line: 1649, column: 9, scope: !4722)
!4938 = !DILocation(line: 1650, column: 35, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !2523, line: 1649, column: 34)
!4940 = !DILocation(line: 1650, column: 23, scope: !4939)
!4941 = !DILocation(line: 1651, column: 5, scope: !4939)
!4942 = !DILocation(line: 1660, column: 15, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1660, column: 8)
!4944 = !DILocation(line: 1660, column: 19, scope: !4943)
!4945 = !DILocation(line: 1660, column: 8, scope: !4718)
!4946 = !DILocation(line: 1661, column: 23, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4943, file: !2523, line: 1660, column: 28)
!4948 = !DILocation(line: 1661, column: 11, scope: !4947)
!4949 = !DILocation(line: 1665, column: 22, scope: !4947)
!4950 = !DILocation(line: 1666, column: 21, scope: !4947)
!4951 = !DILocation(line: 1668, column: 5, scope: !4947)
!4952 = !DILocation(line: 1677, column: 30, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !2523, line: 1676, column: 49)
!4954 = distinct !DILexicalBlock(scope: !4718, file: !2523, line: 1676, column: 8)
!4955 = !DILocation(line: 1677, column: 5, scope: !4953)
!4956 = !DILocation(line: 1680, column: 4, scope: !4718)
!4957 = !DILocation(line: 0, scope: !4899)
!4958 = !DILocation(line: 1597, column: 14, scope: !4720)
!4959 = !DILocation(line: 1699, column: 11, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1699, column: 7)
!4961 = !DILocation(line: 1699, column: 7, scope: !4651)
!4962 = !DILocation(line: 1725, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1725, column: 7)
!4964 = !DILocation(line: 1725, column: 12, scope: !4963)
!4965 = !DILocation(line: 1747, column: 13, scope: !4730)
!4966 = !DILocation(line: 1747, column: 7, scope: !4651)
!4967 = !DILocation(line: 1722, column: 24, scope: !4651)
!4968 = !DILocation(line: 1725, column: 7, scope: !4651)
!4969 = !DILocation(line: 1729, column: 7, scope: !4651)
!4970 = !DILocation(line: 1736, column: 13, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4651, file: !2523, line: 1736, column: 7)
!4972 = !DILocation(line: 1735, column: 19, scope: !4651)
!4973 = !DILocation(line: 1736, column: 7, scope: !4651)
!4974 = !DILocation(line: 1748, column: 10, scope: !4729)
!4975 = !DILocation(line: 1750, column: 15, scope: !4728)
!4976 = !DILocation(line: 1750, column: 8, scope: !4729)
!4977 = !DILocation(line: 0, scope: !4727)
!4978 = !DILocation(line: 1756, column: 15, scope: !4736)
!4979 = !DILocation(line: 1756, column: 9, scope: !4727)
!4980 = !DILocation(line: 1758, column: 7, scope: !4732)
!4981 = !DILocation(line: 0, scope: !4732)
!4982 = !DILocation(line: 1758, column: 7, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4732, file: !2523, line: 1758, column: 7)
!4984 = !DILocation(line: 1764, column: 5, scope: !4727)
!4985 = !DILocation(line: 0, scope: !4729)
!4986 = !DILocation(line: 1764, column: 20, scope: !4727)
!4987 = !DILocation(line: 1764, column: 17, scope: !4727)
!4988 = !DILocation(line: 1765, column: 6, scope: !4738)
!4989 = !DILocation(line: 0, scope: !4738)
!4990 = !DILocation(line: 1765, column: 6, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4738, file: !2523, line: 1765, column: 6)
!4992 = distinct !{!4992, !4984, !4993}
!4993 = !DILocation(line: 1766, column: 5, scope: !4727)
!4994 = !DILocation(line: 1773, column: 12, scope: !4743)
!4995 = !DILocation(line: 1773, column: 7, scope: !4651)
!4996 = !DILocation(line: 1773, column: 7, scope: !4743)
!4997 = !DILocation(line: 1774, column: 4, scope: !4741)
!4998 = !DILocation(line: 0, scope: !4741)
!4999 = !DILocation(line: 1774, column: 4, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4741, file: !2523, line: 1774, column: 4)
!5001 = !DILocation(line: 1818, column: 8, scope: !4747)
!5002 = !DILocation(line: 1818, column: 27, scope: !4747)
!5003 = !DILocation(line: 1818, column: 25, scope: !4747)
!5004 = !DILocation(line: 1818, column: 8, scope: !4748)
!5005 = !DILocation(line: 1819, column: 5, scope: !4745)
!5006 = !DILocation(line: 0, scope: !4745)
!5007 = !DILocation(line: 1819, column: 5, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4745, file: !2523, line: 1819, column: 5)
!5009 = !DILocation(line: 1822, column: 14, scope: !4753)
!5010 = !DILocation(line: 1822, column: 8, scope: !4748)
!5011 = !DILocation(line: 1823, column: 5, scope: !4751)
!5012 = !DILocation(line: 0, scope: !4751)
!5013 = !DILocation(line: 1823, column: 5, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4751, file: !2523, line: 1823, column: 5)
!5015 = !DILocation(line: 1826, column: 20, scope: !4748)
!5016 = !DILocation(line: 1827, column: 4, scope: !4748)
!5017 = !DILocation(line: 0, scope: !4748)
!5018 = !DILocation(line: 1827, column: 21, scope: !4748)
!5019 = !DILocation(line: 1827, column: 18, scope: !4748)
!5020 = !DILocation(line: 1828, column: 5, scope: !4755)
!5021 = !DILocation(line: 0, scope: !4755)
!5022 = !DILocation(line: 1828, column: 5, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4755, file: !2523, line: 1828, column: 5)
!5024 = distinct !{!5024, !5016, !5025}
!5025 = !DILocation(line: 1829, column: 4, scope: !4748)
!5026 = !DILocation(line: 1831, column: 4, scope: !4758)
!5027 = !DILocation(line: 0, scope: !4758)
!5028 = !DILocation(line: 1831, column: 4, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4758, file: !2523, line: 1831, column: 4)
!5030 = !DILocation(line: 1835, column: 16, scope: !4651)
!5031 = !DILocation(line: 1835, column: 3, scope: !4651)
!5032 = !DILocation(line: 1836, column: 4, scope: !4760)
!5033 = !DILocation(line: 0, scope: !4760)
!5034 = !DILocation(line: 1836, column: 4, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4760, file: !2523, line: 1836, column: 4)
!5036 = !DILocation(line: 1837, column: 4, scope: !4761)
!5037 = distinct !{!5037, !5031, !5038}
!5038 = !DILocation(line: 1838, column: 3, scope: !4651)
!5039 = !DILocation(line: 1844, column: 1, scope: !4624)
!5040 = distinct !DISubprogram(name: "extract_conversion", scope: !2523, file: !2523, line: 642, type: !5041, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!279, !4697, !279}
!5043 = !{!5044, !5045}
!5044 = !DILocalVariable(name: "conv", arg: 1, scope: !5040, file: !2523, line: 642, type: !4697)
!5045 = !DILocalVariable(name: "sp", arg: 2, scope: !5040, file: !2523, line: 643, type: !279)
!5046 = !DILocation(line: 0, scope: !5040)
!5047 = !DILocation(line: 645, column: 10, scope: !5040)
!5048 = !DILocation(line: 653, column: 2, scope: !5040)
!5049 = !DILocation(line: 654, column: 6, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5040, file: !2523, line: 654, column: 6)
!5051 = !DILocation(line: 654, column: 10, scope: !5050)
!5052 = !DILocation(line: 654, column: 6, scope: !5040)
!5053 = !DILocation(line: 655, column: 24, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5050, file: !2523, line: 654, column: 18)
!5055 = !DILocation(line: 655, column: 19, scope: !5054)
!5056 = !DILocation(line: 656, column: 3, scope: !5054)
!5057 = !DILocation(line: 659, column: 7, scope: !5040)
!5058 = !DILocation(line: 660, column: 7, scope: !5040)
!5059 = !DILocation(line: 661, column: 7, scope: !5040)
!5060 = !DILocation(line: 662, column: 7, scope: !5040)
!5061 = !DILocation(line: 663, column: 7, scope: !5040)
!5062 = !DILocation(line: 665, column: 2, scope: !5040)
!5063 = !DILocation(line: 666, column: 1, scope: !5040)
!5064 = distinct !DISubprogram(name: "outs", scope: !2523, file: !2523, line: 1319, type: !5065, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5067)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{!109, !3778, !107, !279, !279}
!5067 = !{!5068, !5069, !5070, !5071, !5072, !5073}
!5068 = !DILocalVariable(name: "out", arg: 1, scope: !5064, file: !2523, line: 1319, type: !3778)
!5069 = !DILocalVariable(name: "ctx", arg: 2, scope: !5064, file: !2523, line: 1320, type: !107)
!5070 = !DILocalVariable(name: "sp", arg: 3, scope: !5064, file: !2523, line: 1321, type: !279)
!5071 = !DILocalVariable(name: "ep", arg: 4, scope: !5064, file: !2523, line: 1322, type: !279)
!5072 = !DILocalVariable(name: "count", scope: !5064, file: !2523, line: 1324, type: !234)
!5073 = !DILocalVariable(name: "rc", scope: !5074, file: !2523, line: 1327, type: !109)
!5074 = distinct !DILexicalBlock(scope: !5064, file: !2523, line: 1326, column: 45)
!5075 = !DILocation(line: 0, scope: !5064)
!5076 = !DILocation(line: 1326, column: 2, scope: !5064)
!5077 = !DILocation(line: 1324, column: 9, scope: !5064)
!5078 = !DILocation(line: 1326, column: 13, scope: !5064)
!5079 = !DILocation(line: 1326, column: 19, scope: !5064)
!5080 = !DILocation(line: 1327, column: 21, scope: !5074)
!5081 = !DILocation(line: 1326, column: 36, scope: !5064)
!5082 = !DILocation(line: 1326, column: 39, scope: !5064)
!5083 = !DILocation(line: 1327, column: 24, scope: !5074)
!5084 = !DILocation(line: 1327, column: 16, scope: !5074)
!5085 = !DILocation(line: 1327, column: 12, scope: !5074)
!5086 = !DILocation(line: 0, scope: !5074)
!5087 = !DILocation(line: 1329, column: 10, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5074, file: !2523, line: 1329, column: 7)
!5089 = !DILocation(line: 1329, column: 7, scope: !5074)
!5090 = distinct !{!5090, !5076, !5091}
!5091 = !DILocation(line: 1333, column: 2, scope: !5064)
!5092 = !DILocation(line: 1336, column: 1, scope: !5064)
!5093 = distinct !DISubprogram(name: "encode_uint", scope: !2523, file: !2523, line: 788, type: !5094, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5096)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!285, !2545, !4697, !285, !279}
!5096 = !{!5097, !5098, !5099, !5100, !5101, !5102, !5104, !5105}
!5097 = !DILocalVariable(name: "value", arg: 1, scope: !5093, file: !2523, line: 788, type: !2545)
!5098 = !DILocalVariable(name: "conv", arg: 2, scope: !5093, file: !2523, line: 789, type: !4697)
!5099 = !DILocalVariable(name: "bps", arg: 3, scope: !5093, file: !2523, line: 790, type: !285)
!5100 = !DILocalVariable(name: "bpe", arg: 4, scope: !5093, file: !2523, line: 791, type: !279)
!5101 = !DILocalVariable(name: "upcase", scope: !5093, file: !2523, line: 793, type: !347)
!5102 = !DILocalVariable(name: "radix", scope: !5093, file: !2523, line: 794, type: !5103)
!5103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5104 = !DILocalVariable(name: "bp", scope: !5093, file: !2523, line: 795, type: !285)
!5105 = !DILocalVariable(name: "lsv", scope: !5106, file: !2523, line: 798, type: !32)
!5106 = distinct !DILexicalBlock(scope: !5093, file: !2523, line: 797, column: 5)
!5107 = !DILocation(line: 0, scope: !5093)
!5108 = !DILocation(line: 793, column: 35, scope: !5093)
!5109 = !DILocation(line: 793, column: 24, scope: !5093)
!5110 = !DILocation(line: 793, column: 16, scope: !5093)
!5111 = !DILocation(line: 794, column: 29, scope: !5093)
!5112 = !DILocation(line: 795, column: 24, scope: !5093)
!5113 = !DILocation(line: 795, column: 17, scope: !5093)
!5114 = !DILocation(line: 797, column: 2, scope: !5093)
!5115 = !DILocation(line: 802, column: 9, scope: !5106)
!5116 = !DILocation(line: 798, column: 22, scope: !5106)
!5117 = !DILocation(line: 0, scope: !5106)
!5118 = !DILocation(line: 800, column: 16, scope: !5106)
!5119 = !DILocation(line: 800, column: 11, scope: !5106)
!5120 = !DILocation(line: 800, column: 4, scope: !5106)
!5121 = !DILocation(line: 800, column: 9, scope: !5106)
!5122 = !DILocation(line: 803, column: 18, scope: !5093)
!5123 = !DILocation(line: 803, column: 24, scope: !5093)
!5124 = !DILocation(line: 803, column: 2, scope: !5106)
!5125 = distinct !{!5125, !5114, !5126}
!5126 = !DILocation(line: 803, column: 37, scope: !5093)
!5127 = !DILocation(line: 808, column: 12, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5093, file: !2523, line: 808, column: 6)
!5129 = !DILocation(line: 808, column: 6, scope: !5093)
!5130 = !DILocation(line: 809, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !2523, line: 808, column: 23)
!5132 = !DILocation(line: 813, column: 3, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !2523, line: 811, column: 27)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !2523, line: 811, column: 14)
!5135 = distinct !DILexicalBlock(scope: !5131, file: !2523, line: 809, column: 7)
!5136 = !DILocation(line: 0, scope: !5135)
!5137 = !DILocation(line: 818, column: 2, scope: !5093)
!5138 = distinct !DISubprogram(name: "store_count", scope: !2523, file: !2523, line: 1280, type: !5139, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5143)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !5141, !107, !109}
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 32)
!5142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4664)
!5143 = !{!5144, !5145, !5146}
!5144 = !DILocalVariable(name: "conv", arg: 1, scope: !5138, file: !2523, line: 1280, type: !5141)
!5145 = !DILocalVariable(name: "dp", arg: 2, scope: !5138, file: !2523, line: 1281, type: !107)
!5146 = !DILocalVariable(name: "count", arg: 3, scope: !5138, file: !2523, line: 1282, type: !109)
!5147 = !DILocation(line: 0, scope: !5138)
!5148 = !DILocation(line: 1284, column: 38, scope: !5138)
!5149 = !DILocation(line: 1284, column: 2, scope: !5138)
!5150 = !DILocation(line: 1286, column: 4, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5138, file: !2523, line: 1284, column: 50)
!5152 = !DILocation(line: 1286, column: 14, scope: !5151)
!5153 = !DILocation(line: 1287, column: 3, scope: !5151)
!5154 = !DILocation(line: 1289, column: 24, scope: !5151)
!5155 = !DILocation(line: 1289, column: 22, scope: !5151)
!5156 = !DILocation(line: 1290, column: 3, scope: !5151)
!5157 = !DILocation(line: 1292, column: 18, scope: !5151)
!5158 = !DILocation(line: 1292, column: 4, scope: !5151)
!5159 = !DILocation(line: 1292, column: 16, scope: !5151)
!5160 = !DILocation(line: 1293, column: 3, scope: !5151)
!5161 = !DILocation(line: 1295, column: 4, scope: !5151)
!5162 = !DILocation(line: 1295, column: 15, scope: !5151)
!5163 = !DILocation(line: 1296, column: 3, scope: !5151)
!5164 = !DILocation(line: 1298, column: 22, scope: !5151)
!5165 = !DILocation(line: 1298, column: 4, scope: !5151)
!5166 = !DILocation(line: 1298, column: 20, scope: !5151)
!5167 = !DILocation(line: 1299, column: 3, scope: !5151)
!5168 = !DILocation(line: 1301, column: 21, scope: !5151)
!5169 = !DILocation(line: 1301, column: 4, scope: !5151)
!5170 = !DILocation(line: 1301, column: 19, scope: !5151)
!5171 = !DILocation(line: 1302, column: 3, scope: !5151)
!5172 = !DILocation(line: 1304, column: 4, scope: !5151)
!5173 = !DILocation(line: 1304, column: 17, scope: !5151)
!5174 = !DILocation(line: 1305, column: 3, scope: !5151)
!5175 = !DILocation(line: 1307, column: 4, scope: !5151)
!5176 = !DILocation(line: 1307, column: 20, scope: !5151)
!5177 = !DILocation(line: 1308, column: 3, scope: !5151)
!5178 = !DILocation(line: 1316, column: 1, scope: !5138)
!5179 = distinct !DISubprogram(name: "isupper", scope: !5180, file: !5180, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5181)
!5180 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5181 = !{!5182}
!5182 = !DILocalVariable(name: "a", arg: 1, scope: !5179, file: !5180, line: 16, type: !109)
!5183 = !DILocation(line: 0, scope: !5179)
!5184 = !DILocation(line: 18, column: 29, scope: !5179)
!5185 = !DILocation(line: 18, column: 45, scope: !5179)
!5186 = !DILocation(line: 18, column: 2, scope: !5179)
!5187 = distinct !DISubprogram(name: "conversion_radix", scope: !2523, file: !2523, line: 761, type: !5188, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5190)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!234, !150}
!5190 = !{!5191}
!5191 = !DILocalVariable(name: "specifier", arg: 1, scope: !5187, file: !2523, line: 761, type: !150)
!5192 = !DILocation(line: 0, scope: !5187)
!5193 = !DILocation(line: 763, column: 2, scope: !5187)
!5194 = !DILocation(line: 770, column: 3, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5187, file: !2523, line: 763, column: 21)
!5196 = !DILocation(line: 774, column: 3, scope: !5195)
!5197 = !DILocation(line: 0, scope: !5195)
!5198 = !DILocation(line: 776, column: 1, scope: !5187)
!5199 = distinct !DISubprogram(name: "extract_flags", scope: !2523, file: !2523, line: 339, type: !5041, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5200)
!5200 = !{!5201, !5202, !5203}
!5201 = !DILocalVariable(name: "conv", arg: 1, scope: !5199, file: !2523, line: 339, type: !4697)
!5202 = !DILocalVariable(name: "sp", arg: 2, scope: !5199, file: !2523, line: 340, type: !279)
!5203 = !DILocalVariable(name: "loop", scope: !5199, file: !2523, line: 342, type: !347)
!5204 = !DILocation(line: 0, scope: !5199)
!5205 = !DILocation(line: 344, column: 2, scope: !5199)
!5206 = !DILocation(line: 345, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5199, file: !2523, line: 344, column: 5)
!5208 = !DILocation(line: 345, column: 3, scope: !5207)
!5209 = !DILocation(line: 351, column: 4, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5207, file: !2523, line: 345, column: 16)
!5211 = !DILocation(line: 354, column: 4, scope: !5210)
!5212 = !DILocation(line: 357, column: 4, scope: !5210)
!5213 = !DILocation(line: 360, column: 4, scope: !5210)
!5214 = !DILocation(line: 0, scope: !5210)
!5215 = !DILocation(line: 370, column: 12, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5199, file: !2523, line: 370, column: 6)
!5217 = !DILocation(line: 370, column: 22, scope: !5216)
!5218 = !DILocation(line: 371, column: 19, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5216, file: !2523, line: 370, column: 42)
!5220 = !DILocation(line: 372, column: 2, scope: !5219)
!5221 = !DILocation(line: 376, column: 2, scope: !5199)
!5222 = distinct !DISubprogram(name: "extract_width", scope: !2523, file: !2523, line: 388, type: !5041, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5223)
!5223 = !{!5224, !5225, !5226, !5227}
!5224 = !DILocalVariable(name: "conv", arg: 1, scope: !5222, file: !2523, line: 388, type: !4697)
!5225 = !DILocalVariable(name: "sp", arg: 2, scope: !5222, file: !2523, line: 389, type: !279)
!5226 = !DILocalVariable(name: "wp", scope: !5222, file: !2523, line: 398, type: !279)
!5227 = !DILocalVariable(name: "width", scope: !5222, file: !2523, line: 399, type: !234)
!5228 = !DILocation(line: 0, scope: !5222)
!5229 = !DILocation(line: 391, column: 8, scope: !5222)
!5230 = !DILocation(line: 391, column: 22, scope: !5222)
!5231 = !DILocation(line: 393, column: 6, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5222, file: !2523, line: 393, column: 6)
!5233 = !DILocation(line: 393, column: 10, scope: !5232)
!5234 = !DILocation(line: 393, column: 6, scope: !5222)
!5235 = !DILocation(line: 394, column: 20, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !2523, line: 393, column: 18)
!5237 = !DILocation(line: 395, column: 10, scope: !5236)
!5238 = !DILocation(line: 395, column: 3, scope: !5236)
!5239 = !DILocation(line: 399, column: 17, scope: !5222)
!5240 = !DILocation(line: 401, column: 6, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5222, file: !2523, line: 401, column: 6)
!5242 = !DILocation(line: 401, column: 9, scope: !5241)
!5243 = !DILocation(line: 401, column: 6, scope: !5222)
!5244 = !DILocation(line: 402, column: 23, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5241, file: !2523, line: 401, column: 16)
!5246 = !DILocation(line: 403, column: 9, scope: !5245)
!5247 = !DILocation(line: 403, column: 21, scope: !5245)
!5248 = !DILocation(line: 405, column: 11, scope: !5245)
!5249 = !DILocation(line: 404, column: 21, scope: !5245)
!5250 = !DILocation(line: 406, column: 2, scope: !5245)
!5251 = !DILocation(line: 409, column: 1, scope: !5222)
!5252 = distinct !DISubprogram(name: "extract_prec", scope: !2523, file: !2523, line: 420, type: !5041, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5253)
!5253 = !{!5254, !5255, !5256}
!5254 = !DILocalVariable(name: "conv", arg: 1, scope: !5252, file: !2523, line: 420, type: !4697)
!5255 = !DILocalVariable(name: "sp", arg: 2, scope: !5252, file: !2523, line: 421, type: !279)
!5256 = !DILocalVariable(name: "prec", scope: !5252, file: !2523, line: 435, type: !234)
!5257 = !DILocation(line: 0, scope: !5252)
!5258 = !DILocation(line: 423, column: 24, scope: !5252)
!5259 = !DILocation(line: 423, column: 28, scope: !5252)
!5260 = !DILocation(line: 423, column: 8, scope: !5252)
!5261 = !DILocation(line: 423, column: 21, scope: !5252)
!5262 = !DILocation(line: 425, column: 6, scope: !5252)
!5263 = !DILocation(line: 428, column: 2, scope: !5252)
!5264 = !DILocation(line: 430, column: 6, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5252, file: !2523, line: 430, column: 6)
!5266 = !DILocation(line: 430, column: 10, scope: !5265)
!5267 = !DILocation(line: 430, column: 6, scope: !5252)
!5268 = !DILocation(line: 431, column: 19, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5265, file: !2523, line: 430, column: 18)
!5270 = !DILocation(line: 432, column: 10, scope: !5269)
!5271 = !DILocation(line: 432, column: 3, scope: !5269)
!5272 = !DILocation(line: 435, column: 16, scope: !5252)
!5273 = !DILocation(line: 437, column: 8, scope: !5252)
!5274 = !DILocation(line: 437, column: 19, scope: !5252)
!5275 = !DILocation(line: 439, column: 10, scope: !5252)
!5276 = !DILocation(line: 438, column: 20, scope: !5252)
!5277 = !DILocation(line: 441, column: 9, scope: !5252)
!5278 = !DILocation(line: 442, column: 1, scope: !5252)
!5279 = distinct !DISubprogram(name: "extract_length", scope: !2523, file: !2523, line: 453, type: !5041, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5280)
!5280 = !{!5281, !5282}
!5281 = !DILocalVariable(name: "conv", arg: 1, scope: !5279, file: !2523, line: 453, type: !4697)
!5282 = !DILocalVariable(name: "sp", arg: 2, scope: !5279, file: !2523, line: 454, type: !279)
!5283 = !DILocation(line: 0, scope: !5279)
!5284 = !DILocation(line: 456, column: 10, scope: !5279)
!5285 = !DILocation(line: 456, column: 2, scope: !5279)
!5286 = !DILocation(line: 458, column: 8, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !2523, line: 458, column: 7)
!5288 = distinct !DILexicalBlock(scope: !5279, file: !2523, line: 456, column: 15)
!5289 = !DILocation(line: 458, column: 7, scope: !5287)
!5290 = !DILocation(line: 458, column: 13, scope: !5287)
!5291 = !DILocation(line: 0, scope: !5287)
!5292 = !DILocation(line: 458, column: 7, scope: !5288)
!5293 = !DILocation(line: 459, column: 21, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5287, file: !2523, line: 458, column: 21)
!5295 = !DILocation(line: 460, column: 4, scope: !5294)
!5296 = !DILocation(line: 461, column: 3, scope: !5294)
!5297 = !DILocation(line: 462, column: 21, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5287, file: !2523, line: 461, column: 10)
!5299 = !DILocation(line: 466, column: 8, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5288, file: !2523, line: 466, column: 7)
!5301 = !DILocation(line: 466, column: 7, scope: !5300)
!5302 = !DILocation(line: 466, column: 13, scope: !5300)
!5303 = !DILocation(line: 0, scope: !5300)
!5304 = !DILocation(line: 466, column: 7, scope: !5288)
!5305 = !DILocation(line: 467, column: 21, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5300, file: !2523, line: 466, column: 21)
!5307 = !DILocation(line: 468, column: 4, scope: !5306)
!5308 = !DILocation(line: 469, column: 3, scope: !5306)
!5309 = !DILocation(line: 470, column: 21, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5300, file: !2523, line: 469, column: 10)
!5311 = !DILocation(line: 474, column: 9, scope: !5288)
!5312 = !DILocation(line: 474, column: 20, scope: !5288)
!5313 = !DILocation(line: 475, column: 3, scope: !5288)
!5314 = !DILocation(line: 476, column: 3, scope: !5288)
!5315 = !DILocation(line: 478, column: 9, scope: !5288)
!5316 = !DILocation(line: 478, column: 20, scope: !5288)
!5317 = !DILocation(line: 479, column: 3, scope: !5288)
!5318 = !DILocation(line: 480, column: 3, scope: !5288)
!5319 = !DILocation(line: 482, column: 9, scope: !5288)
!5320 = !DILocation(line: 482, column: 20, scope: !5288)
!5321 = !DILocation(line: 483, column: 3, scope: !5288)
!5322 = !DILocation(line: 484, column: 3, scope: !5288)
!5323 = !DILocation(line: 486, column: 9, scope: !5288)
!5324 = !DILocation(line: 486, column: 20, scope: !5288)
!5325 = !DILocation(line: 487, column: 3, scope: !5288)
!5326 = !DILocation(line: 492, column: 21, scope: !5288)
!5327 = !DILocation(line: 493, column: 3, scope: !5288)
!5328 = !DILocation(line: 495, column: 9, scope: !5288)
!5329 = !DILocation(line: 495, column: 20, scope: !5288)
!5330 = !DILocation(line: 496, column: 3, scope: !5288)
!5331 = !DILocation(line: 498, column: 2, scope: !5279)
!5332 = distinct !DISubprogram(name: "extract_specifier", scope: !2523, file: !2523, line: 513, type: !5041, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5333)
!5333 = !{!5334, !5335, !5336, !5337}
!5334 = !DILocalVariable(name: "conv", arg: 1, scope: !5332, file: !2523, line: 513, type: !4697)
!5335 = !DILocalVariable(name: "sp", arg: 2, scope: !5332, file: !2523, line: 514, type: !279)
!5336 = !DILocalVariable(name: "unsupported", scope: !5332, file: !2523, line: 516, type: !347)
!5337 = !DILabel(scope: !5338, name: "int_conv", file: !2523, line: 526)
!5338 = distinct !DILexicalBlock(scope: !5332, file: !2523, line: 520, column: 27)
!5339 = !DILocation(line: 0, scope: !5332)
!5340 = !DILocation(line: 518, column: 20, scope: !5332)
!5341 = !DILocation(line: 518, column: 8, scope: !5332)
!5342 = !DILocation(line: 518, column: 18, scope: !5332)
!5343 = !DILocation(line: 520, column: 2, scope: !5332)
!5344 = !DILocation(line: 525, column: 3, scope: !5338)
!5345 = !DILocation(line: 0, scope: !5338)
!5346 = !DILocation(line: 526, column: 1, scope: !5338)
!5347 = !DILocation(line: 528, column: 24, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5338, file: !2523, line: 528, column: 7)
!5349 = !DILocation(line: 528, column: 7, scope: !5338)
!5350 = !DILocation(line: 535, column: 23, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5338, file: !2523, line: 535, column: 7)
!5352 = !DILocation(line: 535, column: 7, scope: !5338)
!5353 = !DILocation(line: 536, column: 36, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5351, file: !2523, line: 535, column: 31)
!5355 = !DILocation(line: 537, column: 3, scope: !5354)
!5356 = !DILocation(line: 570, column: 9, scope: !5338)
!5357 = !DILocation(line: 570, column: 23, scope: !5338)
!5358 = !DILocation(line: 575, column: 4, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !2523, line: 573, column: 48)
!5360 = distinct !DILexicalBlock(scope: !5338, file: !2523, line: 573, column: 7)
!5361 = !DILocation(line: 603, column: 9, scope: !5338)
!5362 = !DILocation(line: 603, column: 23, scope: !5338)
!5363 = !DILocation(line: 605, column: 24, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5338, file: !2523, line: 605, column: 7)
!5365 = !DILocation(line: 605, column: 7, scope: !5338)
!5366 = !DILocation(line: 612, column: 9, scope: !5338)
!5367 = !DILocation(line: 612, column: 23, scope: !5338)
!5368 = !DILocation(line: 619, column: 24, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5338, file: !2523, line: 619, column: 7)
!5370 = !DILocation(line: 619, column: 7, scope: !5338)
!5371 = !DILocation(line: 625, column: 9, scope: !5338)
!5372 = !DILocation(line: 625, column: 17, scope: !5338)
!5373 = !DILocation(line: 626, column: 3, scope: !5338)
!5374 = !DILocation(line: 629, column: 20, scope: !5332)
!5375 = !DILocation(line: 629, column: 8, scope: !5332)
!5376 = !DILocation(line: 518, column: 23, scope: !5332)
!5377 = !DILocation(line: 631, column: 2, scope: !5332)
!5378 = distinct !DISubprogram(name: "extract_decimal", scope: !2523, file: !2523, line: 318, type: !5379, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5381)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!234, !278}
!5381 = !{!5382, !5383, !5384}
!5382 = !DILocalVariable(name: "str", arg: 1, scope: !5378, file: !2523, line: 318, type: !278)
!5383 = !DILocalVariable(name: "sp", scope: !5378, file: !2523, line: 320, type: !279)
!5384 = !DILocalVariable(name: "val", scope: !5378, file: !2523, line: 321, type: !234)
!5385 = !DILocation(line: 0, scope: !5378)
!5386 = !DILocation(line: 320, column: 19, scope: !5378)
!5387 = !DILocation(line: 323, column: 37, scope: !5378)
!5388 = !DILocation(line: 323, column: 17, scope: !5378)
!5389 = !DILocation(line: 323, column: 9, scope: !5378)
!5390 = !DILocation(line: 323, column: 2, scope: !5378)
!5391 = !DILocation(line: 324, column: 13, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5378, file: !2523, line: 323, column: 43)
!5393 = !DILocation(line: 324, column: 24, scope: !5392)
!5394 = !DILocation(line: 324, column: 19, scope: !5392)
!5395 = !DILocation(line: 324, column: 27, scope: !5392)
!5396 = distinct !{!5396, !5390, !5397}
!5397 = !DILocation(line: 325, column: 2, scope: !5378)
!5398 = !DILocation(line: 326, column: 7, scope: !5378)
!5399 = !DILocation(line: 327, column: 2, scope: !5378)
!5400 = distinct !DISubprogram(name: "isdigit", scope: !5180, file: !5180, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5401)
!5401 = !{!5402}
!5402 = !DILocalVariable(name: "a", arg: 1, scope: !5400, file: !5180, line: 43, type: !109)
!5403 = !DILocation(line: 0, scope: !5400)
!5404 = !DILocation(line: 45, column: 29, scope: !5400)
!5405 = !DILocation(line: 45, column: 45, scope: !5400)
!5406 = !DILocation(line: 45, column: 2, scope: !5400)
!5407 = distinct !DISubprogram(name: "assert_post_action", scope: !5408, file: !5408, line: 26, type: !5409, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !5411)
!5408 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5409 = !DISubroutineType(types: !5410)
!5410 = !{null, !279, !32}
!5411 = !{!5412, !5413}
!5412 = !DILocalVariable(name: "file", arg: 1, scope: !5407, file: !5408, line: 26, type: !279)
!5413 = !DILocalVariable(name: "line", arg: 2, scope: !5407, file: !5408, line: 26, type: !32)
!5414 = !DILocation(line: 0, scope: !5407)
!5415 = !DILocation(line: 43, column: 2, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5407, file: !5408, line: 43, column: 2)
!5417 = !{i64 2154851822, i64 2154851838, i64 2154851864, i64 2154851892, i64 2154851912}
!5418 = !DILocation(line: 44, column: 1, scope: !5407)
!5419 = distinct !DISubprogram(name: "assert_print", scope: !5408, file: !5408, line: 46, type: !4390, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !5420)
!5420 = !{!5421, !5422}
!5421 = !DILocalVariable(name: "fmt", arg: 1, scope: !5419, file: !5408, line: 46, type: !279)
!5422 = !DILocalVariable(name: "ap", scope: !5419, file: !5408, line: 48, type: !5423)
!5423 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3396, line: 99, baseType: !5424)
!5424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3396, line: 40, baseType: !5425)
!5425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5408, baseType: !5426)
!5426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5427)
!5427 = !{!5428}
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5426, file: !5408, line: 48, baseType: !107, size: 32)
!5429 = !DILocation(line: 0, scope: !5419)
!5430 = !DILocation(line: 48, column: 2, scope: !5419)
!5431 = !DILocation(line: 48, column: 10, scope: !5419)
!5432 = !DILocation(line: 50, column: 2, scope: !5419)
!5433 = !DILocation(line: 52, column: 2, scope: !5419)
!5434 = !DILocation(line: 54, column: 2, scope: !5419)
!5435 = !DILocation(line: 55, column: 1, scope: !5419)
!5436 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5437, file: !5437, line: 9, type: !3094, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !2034)
!5437 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!5438 = !DILocation(line: 11, column: 1, scope: !5436)
!5439 = !{i64 2147565475, i64 2147565518, i64 2147565558}
!5440 = !DILocation(line: 12, column: 1, scope: !5436)
!5441 = !{i64 2147569702, i64 2147569745, i64 2147569785}
!5442 = !DILocation(line: 13, column: 1, scope: !5436)
!5443 = !{i64 2147569911, i64 2147569954, i64 2147569994}
!5444 = !DILocation(line: 14, column: 1, scope: !5436)
!5445 = !{i64 2147570080, i64 2147570123, i64 2147570163}
!5446 = !DILocation(line: 15, column: 1, scope: !5436)
!5447 = !{i64 2147570243, i64 2147570286, i64 2147570326}
!5448 = !DILocation(line: 16, column: 1, scope: !5436)
!5449 = !{i64 2147570427, i64 2147570470, i64 2147570510}
!5450 = !DILocation(line: 17, column: 1, scope: !5436)
!5451 = !{i64 2147570606, i64 2147570649, i64 2147570689}
!5452 = !DILocation(line: 18, column: 1, scope: !5436)
!5453 = !{i64 2147570849, i64 2147570892, i64 2147570932}
!5454 = !DILocation(line: 19, column: 1, scope: !5436)
!5455 = !{i64 2147571084, i64 2147571127, i64 2147571167}
!5456 = !DILocation(line: 20, column: 1, scope: !5436)
!5457 = !{i64 2147571271, i64 2147571314, i64 2147571354}
!5458 = !DILocation(line: 21, column: 1, scope: !5436)
!5459 = !{i64 2147571487, i64 2147571530, i64 2147571570}
!5460 = !DILocation(line: 22, column: 1, scope: !5436)
!5461 = !{i64 2147571690, i64 2147571733, i64 2147571773}
!5462 = !DILocation(line: 23, column: 1, scope: !5436)
!5463 = !{i64 2147571893, i64 2147571936, i64 2147571976}
!5464 = !DILocation(line: 24, column: 1, scope: !5436)
!5465 = !{i64 2147572068, i64 2147572111, i64 2147572151}
!5466 = !DILocation(line: 25, column: 1, scope: !5436)
!5467 = !{i64 2147572276, i64 2147572319, i64 2147572359}
!5468 = !DILocation(line: 26, column: 1, scope: !5436)
!5469 = !{i64 2147572480, i64 2147572523, i64 2147572563}
!5470 = !DILocation(line: 27, column: 1, scope: !5436)
!5471 = !{i64 2147572673, i64 2147572716, i64 2147572756}
!5472 = !DILocation(line: 28, column: 1, scope: !5436)
!5473 = !{i64 2147572875, i64 2147572918, i64 2147572958}
!5474 = !DILocation(line: 29, column: 1, scope: !5436)
!5475 = !{i64 2147573074, i64 2147573117, i64 2147573157}
!5476 = !DILocation(line: 30, column: 1, scope: !5436)
!5477 = !{i64 2147573301, i64 2147573344, i64 2147573384}
!5478 = !DILocation(line: 31, column: 1, scope: !5436)
!5479 = !{i64 2147573503, i64 2147573546, i64 2147573586}
!5480 = !DILocation(line: 32, column: 1, scope: !5436)
!5481 = !{i64 2147573718, i64 2147573761, i64 2147573801}
!5482 = !DILocation(line: 33, column: 1, scope: !5436)
!5483 = !{i64 2147573935, i64 2147573978, i64 2147574018}
!5484 = !DILocation(line: 34, column: 1, scope: !5436)
!5485 = !{i64 2147574107, i64 2147574150, i64 2147574190}
!5486 = !DILocation(line: 35, column: 1, scope: !5436)
!5487 = !{i64 2147574309, i64 2147574352, i64 2147574392}
!5488 = !DILocation(line: 36, column: 1, scope: !5436)
!5489 = !{i64 2147574535, i64 2147574578, i64 2147574618}
!5490 = !DILocation(line: 37, column: 1, scope: !5436)
!5491 = !{i64 2147574734, i64 2147574777, i64 2147574817}
!5492 = !DILocation(line: 38, column: 1, scope: !5436)
!5493 = !{i64 2147574909, i64 2147574952, i64 2147574992}
!5494 = !DILocation(line: 39, column: 1, scope: !5436)
!5495 = !{i64 2147575177, i64 2147575220, i64 2147575260}
!5496 = !DILocation(line: 40, column: 1, scope: !5436)
!5497 = !{i64 2147575430, i64 2147575473, i64 2147575513}
!5498 = !DILocation(line: 41, column: 1, scope: !5436)
!5499 = !{i64 2147575671, i64 2147575714, i64 2147575754}
!5500 = !DILocation(line: 42, column: 1, scope: !5436)
!5501 = !{i64 2147575906, i64 2147575949, i64 2147575989}
!5502 = !DILocation(line: 43, column: 1, scope: !5436)
!5503 = !{i64 2147576138, i64 2147576181, i64 2147576221}
!5504 = !DILocation(line: 44, column: 1, scope: !5436)
!5505 = !{i64 2147576364, i64 2147576407, i64 2147576447}
!5506 = !DILocation(line: 45, column: 1, scope: !5436)
!5507 = !{i64 2147576602, i64 2147576645, i64 2147576685}
!5508 = !DILocation(line: 46, column: 1, scope: !5436)
!5509 = !{i64 2147576828, i64 2147576871, i64 2147576911}
!5510 = !DILocation(line: 47, column: 1, scope: !5436)
!5511 = !{i64 2147577063, i64 2147577106, i64 2147577146}
!5512 = !DILocation(line: 48, column: 1, scope: !5436)
!5513 = !{i64 2147577298, i64 2147577341, i64 2147577381}
!5514 = !DILocation(line: 49, column: 1, scope: !5436)
!5515 = !{i64 2147577536, i64 2147577579, i64 2147577619}
!5516 = !DILocation(line: 50, column: 1, scope: !5436)
!5517 = !{i64 2147577810, i64 2147577853, i64 2147577893}
!5518 = !DILocation(line: 51, column: 1, scope: !5436)
!5519 = !{i64 2147578048, i64 2147578091, i64 2147578131}
!5520 = !DILocation(line: 52, column: 1, scope: !5436)
!5521 = !{i64 2147578301, i64 2147578344, i64 2147578384}
!5522 = !DILocation(line: 53, column: 1, scope: !5436)
!5523 = !{i64 2147582606, i64 2147582649, i64 2147582689}
!5524 = !DILocation(line: 54, column: 1, scope: !5436)
!5525 = !{i64 2147582856, i64 2147582899, i64 2147582939}
!5526 = !DILocation(line: 55, column: 1, scope: !5436)
!5527 = !{i64 2147583097, i64 2147583140, i64 2147583180}
!5528 = !DILocation(line: 56, column: 1, scope: !5436)
!5529 = !{i64 2147583344, i64 2147583387, i64 2147583427}
!5530 = !DILocation(line: 57, column: 1, scope: !5436)
!5531 = !{i64 2147583579, i64 2147583622, i64 2147583662}
!5532 = !DILocation(line: 58, column: 1, scope: !5436)
!5533 = !{i64 2147583814, i64 2147583857, i64 2147583897}
!5534 = !DILocation(line: 59, column: 1, scope: !5436)
!5535 = !{i64 2147584049, i64 2147584092, i64 2147584132}
!5536 = !DILocation(line: 60, column: 1, scope: !5436)
!5537 = !{i64 2147584287, i64 2147584330, i64 2147584370}
!5538 = !DILocation(line: 61, column: 1, scope: !5436)
!5539 = !{i64 2147584528, i64 2147584571, i64 2147584611}
!5540 = !DILocation(line: 62, column: 1, scope: !5436)
!5541 = !{i64 2147584808, i64 2147584851, i64 2147584891}
!5542 = !DILocation(line: 63, column: 1, scope: !5436)
!5543 = !{i64 2147585067, i64 2147585110, i64 2147585150}
!5544 = !DILocation(line: 64, column: 1, scope: !5436)
!5545 = !{i64 2147585305, i64 2147585348, i64 2147585388}
!5546 = !DILocation(line: 65, column: 1, scope: !5436)
!5547 = !{i64 2147585564, i64 2147585607, i64 2147585647}
!5548 = !DILocation(line: 66, column: 1, scope: !5436)
!5549 = !{i64 2147585793, i64 2147585836, i64 2147585876}
!5550 = !DILocation(line: 67, column: 1, scope: !5436)
!5551 = !{i64 2147586001, i64 2147586044, i64 2147586084}
!5552 = !DILocation(line: 68, column: 1, scope: !5436)
!5553 = !{i64 2147586212, i64 2147586255, i64 2147586295}
!5554 = !DILocation(line: 69, column: 1, scope: !5436)
!5555 = !{i64 2147586447, i64 2147586490, i64 2147586530}
!5556 = !DILocation(line: 70, column: 1, scope: !5436)
!5557 = !{i64 2147586676, i64 2147586719, i64 2147586759}
!5558 = !DILocation(line: 71, column: 1, scope: !5436)
!5559 = !{i64 2147586893, i64 2147586936, i64 2147586976}
!5560 = !DILocation(line: 72, column: 1, scope: !5436)
!5561 = !{i64 2147587122, i64 2147587165, i64 2147587205}
!5562 = !DILocation(line: 73, column: 1, scope: !5436)
!5563 = !{i64 2147587360, i64 2147587403, i64 2147587443}
!5564 = !DILocation(line: 74, column: 1, scope: !5436)
!5565 = !{i64 2147587592, i64 2147587635, i64 2147587675}
!5566 = !DILocation(line: 75, column: 1, scope: !5436)
!5567 = !{i64 2147587818, i64 2147587861, i64 2147587901}
!5568 = !DILocation(line: 76, column: 1, scope: !5436)
!5569 = !{i64 2147588035, i64 2147588078, i64 2147588118}
!5570 = !DILocation(line: 77, column: 1, scope: !5436)
!5571 = !{i64 2147588267, i64 2147588310, i64 2147588350}
!5572 = !DILocation(line: 78, column: 1, scope: !5436)
!5573 = !{i64 2147588493, i64 2147588536, i64 2147588576}
!5574 = !DILocation(line: 79, column: 1, scope: !5436)
!5575 = !{i64 2147588707, i64 2147588750, i64 2147588790}
!5576 = !DILocation(line: 80, column: 1, scope: !5436)
!5577 = !{i64 2147588927, i64 2147588970, i64 2147589010}
!5578 = !DILocation(line: 81, column: 1, scope: !5436)
!5579 = !{i64 2147589159, i64 2147589202, i64 2147589242}
!5580 = !DILocation(line: 82, column: 1, scope: !5436)
!5581 = !{i64 2147589367, i64 2147589410, i64 2147589450}
!5582 = !DILocation(line: 83, column: 1, scope: !5436)
!5583 = !{i64 2147589572, i64 2147589615, i64 2147589655}
!5584 = !DILocation(line: 84, column: 1, scope: !5436)
!5585 = !{i64 2147589789, i64 2147589832, i64 2147589872}
!5586 = !DILocation(line: 85, column: 1, scope: !5436)
!5587 = !{i64 2147590003, i64 2147590046, i64 2147590086}
!5588 = !DILocation(line: 86, column: 1, scope: !5436)
!5589 = !{i64 2147590229, i64 2147590272, i64 2147590312}
!5590 = !DILocation(line: 87, column: 1, scope: !5436)
!5591 = !{i64 2147590449, i64 2147590492, i64 2147590532}
!5592 = !DILocation(line: 88, column: 1, scope: !5436)
!5593 = !{i64 2147594715, i64 2147594758, i64 2147594798}
!5594 = !DILocation(line: 89, column: 1, scope: !5436)
!5595 = !{i64 2147594947, i64 2147594990, i64 2147595030}
!5596 = !DILocation(line: 90, column: 1, scope: !5436)
!5597 = !{i64 2147595182, i64 2147595225, i64 2147595265}
!5598 = !DILocation(line: 91, column: 1, scope: !5436)
!5599 = !{i64 2147595432, i64 2147595475, i64 2147595515}
!5600 = !DILocation(line: 92, column: 1, scope: !5436)
!5601 = !{i64 2147595682, i64 2147595725, i64 2147595765}
!5602 = !DILocation(line: 93, column: 1, scope: !5436)
!5603 = !{i64 2147595920, i64 2147595963, i64 2147596003}
!5604 = !DILocation(line: 94, column: 1, scope: !5436)
!5605 = !{i64 2147596131, i64 2147596174, i64 2147596214}
!5606 = !DILocation(line: 95, column: 1, scope: !5436)
!5607 = !{i64 2147596348, i64 2147596391, i64 2147596431}
!5608 = !DILocation(line: 96, column: 1, scope: !5436)
!5609 = !{i64 2147596544, i64 2147596587, i64 2147596627}
!5610 = !DILocation(line: 97, column: 1, scope: !5436)
!5611 = !{i64 2147596746, i64 2147596789, i64 2147596829}
!5612 = !DILocation(line: 98, column: 1, scope: !5436)
!5613 = !{i64 2147596939, i64 2147596982, i64 2147597022}
!5614 = !DILocation(line: 99, column: 1, scope: !5436)
!5615 = !{i64 2147597147, i64 2147597190, i64 2147597230}
!5616 = !DILocation(line: 100, column: 1, scope: !5436)
!5617 = !{i64 2147597343, i64 2147597386, i64 2147597426}
!5618 = !DILocation(line: 101, column: 1, scope: !5436)
!5619 = !{i64 2147597593, i64 2147597636, i64 2147597676}
!5620 = !DILocation(line: 102, column: 1, scope: !5436)
!5621 = !{i64 2147597804, i64 2147597847, i64 2147597887}
!5622 = !DILocation(line: 103, column: 1, scope: !5436)
!5623 = !{i64 2147598003, i64 2147598046, i64 2147598086}
!5624 = !DILocation(line: 104, column: 1, scope: !5436)
!5625 = !{i64 2147598178, i64 2147598221, i64 2147598261}
!5626 = !DILocation(line: 105, column: 1, scope: !5436)
!5627 = !{i64 2147598362, i64 2147598405, i64 2147598445}
!5628 = !DILocation(line: 106, column: 1, scope: !5436)
!5629 = !{i64 2147598564, i64 2147598607, i64 2147598647}
!5630 = !DILocation(line: 107, column: 1, scope: !5436)
!5631 = !{i64 2147598745, i64 2147598788, i64 2147598828}
!5632 = !DILocation(line: 108, column: 1, scope: !5436)
!5633 = !{i64 2147598944, i64 2147598987, i64 2147599027}
!5634 = !DILocation(line: 109, column: 1, scope: !5436)
!5635 = !{i64 2147599149, i64 2147599192, i64 2147599232}
!5636 = !DILocation(line: 110, column: 1, scope: !5436)
!5637 = !{i64 2147599342, i64 2147599385, i64 2147599425}
!5638 = !DILocation(line: 111, column: 1, scope: !5436)
!5639 = !{i64 2147599508, i64 2147599551, i64 2147599591}
!5640 = !DILocation(line: 112, column: 1, scope: !5436)
!5641 = !{i64 2147599692, i64 2147599735, i64 2147599775}
!5642 = !DILocation(line: 113, column: 1, scope: !5436)
!5643 = !{i64 2147599882, i64 2147599925, i64 2147599965}
!5644 = !DILocation(line: 114, column: 1, scope: !5436)
!5645 = !{i64 2147600066, i64 2147600109, i64 2147600149}
!5646 = !DILocation(line: 115, column: 1, scope: !5436)
!5647 = !{i64 2147600280, i64 2147600323, i64 2147600363}
!5648 = !DILocation(line: 116, column: 1, scope: !5436)
!5649 = !{i64 2147600491, i64 2147600534, i64 2147600574}
!5650 = !DILocation(line: 117, column: 1, scope: !5436)
!5651 = !{i64 2147600714, i64 2147600757, i64 2147600797}
!5652 = !DILocation(line: 118, column: 1, scope: !5436)
!5653 = !{i64 2147600898, i64 2147600941, i64 2147600981}
!5654 = !DILocation(line: 119, column: 1, scope: !5436)
!5655 = !{i64 2147601112, i64 2147601155, i64 2147601195}
!5656 = !DILocation(line: 120, column: 1, scope: !5436)
!5657 = !{i64 2147601278, i64 2147601321, i64 2147601361}
!5658 = !DILocation(line: 121, column: 1, scope: !5436)
!5659 = !{i64 2147601459, i64 2147601502, i64 2147601542}
!5660 = !DILocation(line: 122, column: 1, scope: !5436)
!5661 = !{i64 2147601652, i64 2147601695, i64 2147601735}
!5662 = !DILocation(line: 123, column: 1, scope: !5436)
!5663 = !{i64 2147601878, i64 2147601921, i64 2147601961}
!5664 = !DILocation(line: 124, column: 1, scope: !5436)
!5665 = !{i64 2147602092, i64 2147602135, i64 2147602175}
!5666 = !DILocation(line: 125, column: 1, scope: !5436)
!5667 = !{i64 2147602318, i64 2147602361, i64 2147602401}
!5668 = !DILocation(line: 126, column: 1, scope: !5436)
!5669 = !{i64 2147602535, i64 2147602578, i64 2147602618}
!5670 = !DILocation(line: 127, column: 1, scope: !5436)
!5671 = !{i64 2147602812, i64 2147602855, i64 2147602895}
!5672 = !DILocation(line: 128, column: 1, scope: !5436)
!5673 = !{i64 2147603038, i64 2147603081, i64 2147603121}
!5674 = !DILocation(line: 129, column: 1, scope: !5436)
!5675 = !{i64 2147603246, i64 2147603289, i64 2147603329}
!5676 = !DILocation(line: 130, column: 1, scope: !5436)
!5677 = !{i64 2147603442, i64 2147603485, i64 2147603525}
!5678 = !DILocation(line: 131, column: 1, scope: !5436)
!5679 = !{i64 2147603707, i64 2147603750, i64 2147603790}
!5680 = !DILocation(line: 132, column: 1, scope: !5436)
!5681 = !{i64 2147607982, i64 2147608025, i64 2147608065}
!5682 = !DILocation(line: 133, column: 1, scope: !5436)
!5683 = !{i64 2147608157, i64 2147608200, i64 2147608240}
!5684 = !DILocation(line: 134, column: 1, scope: !5436)
!5685 = !{i64 2147608411, i64 2147608454, i64 2147608494}
!5686 = !DILocation(line: 135, column: 1, scope: !5436)
!5687 = !{i64 2147608610, i64 2147608653, i64 2147608693}
!5688 = !DILocation(line: 136, column: 1, scope: !5436)
!5689 = !{i64 2147608852, i64 2147608895, i64 2147608935}
!5690 = !DILocation(line: 137, column: 1, scope: !5436)
!5691 = !{i64 2147609015, i64 2147609058, i64 2147609098}
!5692 = !DILocation(line: 138, column: 1, scope: !5436)
!5693 = !{i64 2147609202, i64 2147609245, i64 2147609285}
!5694 = !DILocation(line: 139, column: 1, scope: !5436)
!5695 = !{i64 2147609410, i64 2147609453, i64 2147609493}
!5696 = !DILocation(line: 140, column: 1, scope: !5436)
!5697 = !{i64 2147609606, i64 2147609649, i64 2147609689}
!5698 = !DILocation(line: 141, column: 1, scope: !5436)
!5699 = !{i64 2147609799, i64 2147609842, i64 2147609882}
!5700 = !DILocation(line: 142, column: 1, scope: !5436)
!5701 = !{i64 2147609982, i64 2147610025, i64 2147610065}
!5702 = !DILocation(line: 143, column: 1, scope: !5436)
!5703 = !{i64 2147610196, i64 2147610239, i64 2147610279}
!5704 = !DILocation(line: 144, column: 1, scope: !5436)
!5705 = !{i64 2147610407, i64 2147610450, i64 2147610490}
!5706 = !DILocation(line: 145, column: 1, scope: !5436)
!5707 = !{i64 2147610627, i64 2147610670, i64 2147610710}
!5708 = !DILocation(line: 146, column: 1, scope: !5436)
!5709 = !{i64 2147610834, i64 2147610877, i64 2147610917}
!5710 = !DILocation(line: 147, column: 1, scope: !5436)
!5711 = !{i64 2147611107, i64 2147611150, i64 2147611190}
!5712 = !DILocation(line: 148, column: 1, scope: !5436)
!5713 = !{i64 2147611355, i64 2147611398, i64 2147611438}
!5714 = !DILocation(line: 149, column: 1, scope: !5436)
!5715 = !{i64 2147611554, i64 2147611597, i64 2147611637}
!5716 = !DILocation(line: 150, column: 1, scope: !5436)
!5717 = !{i64 2147611789, i64 2147611832, i64 2147611872}
!5718 = !DILocation(line: 151, column: 1, scope: !5436)
!5719 = !{i64 2147612039, i64 2147612082, i64 2147612122}
!5720 = !DILocation(line: 152, column: 1, scope: !5436)
!5721 = !{i64 2147612241, i64 2147612284, i64 2147612324}
!5722 = !DILocation(line: 153, column: 1, scope: !5436)
!5723 = !{i64 2147612464, i64 2147612507, i64 2147612547}
!5724 = !DILocation(line: 154, column: 1, scope: !5436)
!5725 = !{i64 2147612678, i64 2147612721, i64 2147612761}
!5726 = !DILocation(line: 155, column: 1, scope: !5436)
!5727 = !{i64 2147612922, i64 2147612965, i64 2147613005}
!5728 = !DILocation(line: 156, column: 1, scope: !5436)
!5729 = !{i64 2147613151, i64 2147613194, i64 2147613234}
!5730 = !DILocation(line: 157, column: 1, scope: !5436)
!5731 = !{i64 2147613380, i64 2147613423, i64 2147613463}
!5732 = !DILocation(line: 158, column: 1, scope: !5436)
!5733 = !{i64 2147613588, i64 2147613631, i64 2147613671}
!5734 = !DILocation(line: 159, column: 1, scope: !5436)
!5735 = !{i64 2147613826, i64 2147613869, i64 2147613909}
!5736 = !DILocation(line: 160, column: 1, scope: !5436)
!5737 = !{i64 2147614052, i64 2147614095, i64 2147614135}
!5738 = !DILocation(line: 161, column: 1, scope: !5436)
!5739 = !{i64 2147614311, i64 2147614354, i64 2147614394}
!5740 = !DILocation(line: 162, column: 1, scope: !5436)
!5741 = !{i64 2147614531, i64 2147614574, i64 2147614614}
!5742 = !DILocation(line: 163, column: 1, scope: !5436)
!5743 = !{i64 2147614763, i64 2147614806, i64 2147614846}
!5744 = !DILocation(line: 164, column: 1, scope: !5436)
!5745 = !{i64 2147615004, i64 2147615047, i64 2147615087}
!5746 = !DILocation(line: 165, column: 1, scope: !5436)
!5747 = !{i64 2147615245, i64 2147615288, i64 2147615328}
!5748 = !DILocation(line: 166, column: 1, scope: !5436)
!5749 = !{i64 2147615468, i64 2147615511, i64 2147615551}
!5750 = !DILocation(line: 167, column: 1, scope: !5436)
!5751 = !{i64 2147615685, i64 2147615728, i64 2147615768}
!5752 = !DILocation(line: 168, column: 1, scope: !5436)
!5753 = !{i64 2147615926, i64 2147615969, i64 2147616009}
!5754 = !DILocation(line: 169, column: 1, scope: !5436)
!5755 = !{i64 2147616113, i64 2147616156, i64 2147616196}
!5756 = !DILocation(line: 170, column: 1, scope: !5436)
!5757 = !{i64 2147616300, i64 2147616343, i64 2147616383}
!5758 = !DILocation(line: 171, column: 1, scope: !5436)
!5759 = !{i64 2147616463, i64 2147616506, i64 2147616546}
!5760 = !DILocation(line: 172, column: 1, scope: !5436)
!5761 = !{i64 2147620729, i64 2147620772, i64 2147620812}
!5762 = !DILocation(line: 173, column: 1, scope: !5436)
!5763 = !{i64 2147620922, i64 2147620965, i64 2147621005}
!5764 = !DILocation(line: 174, column: 1, scope: !5436)
!5765 = !{i64 2147621181, i64 2147621224, i64 2147621264}
!5766 = !DILocation(line: 175, column: 1, scope: !5436)
!5767 = !{i64 2147621404, i64 2147621447, i64 2147621487}
!5768 = !DILocation(line: 176, column: 1, scope: !5436)
!5769 = !{i64 2147621633, i64 2147621676, i64 2147621716}
!5770 = !DILocation(line: 177, column: 1, scope: !5436)
!5771 = !{i64 2147621847, i64 2147621890, i64 2147621930}
!5772 = !DILocation(line: 178, column: 1, scope: !5436)
!5773 = !{i64 2147622049, i64 2147622092, i64 2147622132}
!5774 = !DILocation(line: 179, column: 1, scope: !5436)
!5775 = !{i64 2147622245, i64 2147622288, i64 2147622328}
!5776 = !DILocation(line: 180, column: 1, scope: !5436)
!5777 = !{i64 2147622457, i64 2147622500, i64 2147622540}
!5778 = !DILocation(line: 181, column: 1, scope: !5436)
!5779 = !{i64 2147622678, i64 2147622721, i64 2147622761}
!5780 = !DILocation(line: 182, column: 1, scope: !5436)
!5781 = !{i64 2147622892, i64 2147622935, i64 2147622975}
!5782 = !DILocation(line: 183, column: 1, scope: !5436)
!5783 = !{i64 2147623082, i64 2147623125, i64 2147623165}
!5784 = !DILocation(line: 184, column: 1, scope: !5436)
!5785 = !{i64 2147623281, i64 2147623324, i64 2147623364}
!5786 = !DILocation(line: 185, column: 1, scope: !5436)
!5787 = !{i64 2147623486, i64 2147623529, i64 2147623569}
!5788 = !DILocation(line: 186, column: 1, scope: !5436)
!5789 = !{i64 2147623706, i64 2147623749, i64 2147623789}
!5790 = !DILocation(line: 187, column: 1, scope: !5436)
!5791 = !{i64 2147623907, i64 2147623950, i64 2147623990}
!5792 = !DILocation(line: 188, column: 1, scope: !5436)
!5793 = !{i64 2147624106, i64 2147624149, i64 2147624189}
!5794 = !DILocation(line: 189, column: 1, scope: !5436)
!5795 = !{i64 2147624311, i64 2147624354, i64 2147624394}
!5796 = !DILocation(line: 190, column: 1, scope: !5436)
!5797 = !{i64 2147624480, i64 2147624523, i64 2147624563}
!5798 = !DILocation(line: 191, column: 1, scope: !5436)
!5799 = !{i64 2147624664, i64 2147624707, i64 2147624747}
!5800 = !DILocation(line: 192, column: 1, scope: !5436)
!5801 = !{i64 2147624848, i64 2147624891, i64 2147624931}
!5802 = !DILocation(line: 193, column: 1, scope: !5436)
!5803 = !{i64 2147625035, i64 2147625078, i64 2147625118}
!5804 = !DILocation(line: 194, column: 1, scope: !5436)
!5805 = !{i64 2147625219, i64 2147625262, i64 2147625302}
!5806 = !DILocation(line: 195, column: 1, scope: !5436)
!5807 = !{i64 2147625406, i64 2147625449, i64 2147625489}
!5808 = !DILocation(line: 196, column: 1, scope: !5436)
!5809 = !{i64 2147625618, i64 2147625661, i64 2147625701}
!5810 = !DILocation(line: 197, column: 1, scope: !5436)
!5811 = !{i64 2147625856, i64 2147625899, i64 2147625939}
!5812 = !DILocation(line: 198, column: 1, scope: !5436)
!5813 = !{i64 2147626086, i64 2147626129, i64 2147626169}
!5814 = !DILocation(line: 199, column: 1, scope: !5436)
!5815 = !{i64 2147626315, i64 2147626358, i64 2147626398}
!5816 = !DILocation(line: 200, column: 1, scope: !5436)
!5817 = !{i64 2147626502, i64 2147626545, i64 2147626585}
!5818 = !DILocation(line: 201, column: 1, scope: !5436)
!5819 = !{i64 2147626698, i64 2147626741, i64 2147626781}
!5820 = !DILocation(line: 202, column: 1, scope: !5436)
!5821 = !{i64 2147626906, i64 2147626949, i64 2147626989}
!5822 = !DILocation(line: 203, column: 1, scope: !5436)
!5823 = !{i64 2147627118, i64 2147627161, i64 2147627201}
!5824 = !DILocation(line: 204, column: 1, scope: !5436)
!5825 = !{i64 2147627317, i64 2147627360, i64 2147627400}
!5826 = !DILocation(line: 205, column: 1, scope: !5436)
!5827 = !{i64 2147627555, i64 2147627598, i64 2147627638}
!5828 = !DILocation(line: 206, column: 1, scope: !5436)
!5829 = !{i64 2147627751, i64 2147627794, i64 2147627834}
!5830 = !DILocation(line: 207, column: 1, scope: !5436)
!5831 = !{i64 2147627953, i64 2147627996, i64 2147628036}
!5832 = !DILocation(line: 208, column: 1, scope: !5436)
!5833 = !{i64 2147628146, i64 2147628189, i64 2147628229}
!5834 = !DILocation(line: 209, column: 1, scope: !5436)
!5835 = !{i64 2147628380, i64 2147628423, i64 2147628463}
!5836 = !DILocation(line: 210, column: 1, scope: !5436)
!5837 = !{i64 2147628543, i64 2147628586, i64 2147628626}
!5838 = !DILocation(line: 211, column: 1, scope: !5436)
!5839 = !{i64 2147628782, i64 2147628825, i64 2147628865}
!5840 = !DILocation(line: 212, column: 1, scope: !5436)
!5841 = !{i64 2147629021, i64 2147629064, i64 2147629104}
!5842 = !DILocation(line: 213, column: 1, scope: !5436)
!5843 = !{i64 2147629257, i64 2147629300, i64 2147629340}
!5844 = !DILocation(line: 214, column: 1, scope: !5436)
!5845 = !{i64 2147629487, i64 2147629530, i64 2147629570}
!5846 = !DILocation(line: 215, column: 1, scope: !5436)
!5847 = !{i64 2147629674, i64 2147629717, i64 2147629757}
!5848 = !DILocation(line: 216, column: 1, scope: !5436)
!5849 = !{i64 2147633934, i64 2147633977, i64 2147634017}
!5850 = !DILocation(line: 217, column: 1, scope: !5436)
!5851 = !{i64 2147634205, i64 2147634248, i64 2147634288}
!5852 = !DILocation(line: 218, column: 1, scope: !5436)
!5853 = !{i64 2147634380, i64 2147634423, i64 2147634463}
!5854 = !DILocation(line: 219, column: 1, scope: !5436)
!5855 = !{i64 2147634614, i64 2147634657, i64 2147634697}
!5856 = !DILocation(line: 220, column: 1, scope: !5436)
!5857 = !{i64 2147634822, i64 2147634865, i64 2147634905}
!5858 = !DILocation(line: 221, column: 1, scope: !5436)
!5859 = !{i64 2147635040, i64 2147635083, i64 2147635123}
!5860 = !DILocation(line: 222, column: 1, scope: !5436)
!5861 = !{i64 2147635230, i64 2147635273, i64 2147635313}
!5862 = !DILocation(line: 223, column: 1, scope: !5436)
!5863 = !{i64 2147635462, i64 2147635505, i64 2147635545}
!5864 = !DILocation(line: 224, column: 1, scope: !5436)
!5865 = !{i64 2147635682, i64 2147635725, i64 2147635765}
!5866 = !DILocation(line: 225, column: 1, scope: !5436)
!5867 = !{i64 2147635878, i64 2147635921, i64 2147635961}
!5868 = !DILocation(line: 226, column: 1, scope: !5436)
!5869 = !{i64 2147636084, i64 2147636127, i64 2147636167}
!5870 = !DILocation(line: 227, column: 1, scope: !5436)
!5871 = !{i64 2147636289, i64 2147636332, i64 2147636372}
!5872 = !DILocation(line: 228, column: 1, scope: !5436)
!5873 = !{i64 2147636515, i64 2147636558, i64 2147636598}
!5874 = !DILocation(line: 229, column: 1, scope: !5436)
!5875 = !{i64 2147636723, i64 2147636766, i64 2147636806}
!5876 = !DILocation(line: 230, column: 1, scope: !5436)
!5877 = !{i64 2147636919, i64 2147636962, i64 2147637002}
!5878 = !DILocation(line: 231, column: 1, scope: !5436)
!5879 = !{i64 2147637151, i64 2147637194, i64 2147637234}
!5880 = !DILocation(line: 232, column: 1, scope: !5436)
!5881 = !{i64 2147637335, i64 2147637378, i64 2147637418}
!5882 = !DILocation(line: 233, column: 1, scope: !5436)
!5883 = !{i64 2147637544, i64 2147637587, i64 2147637627}
!5884 = !DILocation(line: 234, column: 1, scope: !5436)
!5885 = !{i64 2147637752, i64 2147637795, i64 2147637835}
!5886 = !DILocation(line: 235, column: 1, scope: !5436)
!5887 = !{i64 2147637948, i64 2147637991, i64 2147638031}
!5888 = !DILocation(line: 236, column: 1, scope: !5436)
!5889 = !{i64 2147638132, i64 2147638175, i64 2147638215}
!5890 = !DILocation(line: 237, column: 1, scope: !5436)
!5891 = !{i64 2147638358, i64 2147638401, i64 2147638441}
!5892 = !DILocation(line: 238, column: 1, scope: !5436)
!5893 = !{i64 2147638584, i64 2147638627, i64 2147638667}
!5894 = !DILocation(line: 239, column: 1, scope: !5436)
!5895 = !{i64 2147638810, i64 2147638853, i64 2147638893}
!5896 = !DILocation(line: 240, column: 1, scope: !5436)
!5897 = !{i64 2147639036, i64 2147639079, i64 2147639119}
!5898 = !DILocation(line: 241, column: 1, scope: !5436)
!5899 = !{i64 2147639262, i64 2147639305, i64 2147639345}
!5900 = !DILocation(line: 242, column: 1, scope: !5436)
!5901 = !{i64 2147639494, i64 2147639537, i64 2147639577}
!5902 = !DILocation(line: 243, column: 1, scope: !5436)
!5903 = !{i64 2147639732, i64 2147639775, i64 2147639815}
!5904 = !DILocation(line: 244, column: 1, scope: !5436)
!5905 = !{i64 2147639952, i64 2147639995, i64 2147640035}
!5906 = !DILocation(line: 245, column: 1, scope: !5436)
!5907 = !{i64 2147640196, i64 2147640239, i64 2147640279}
!5908 = !DILocation(line: 246, column: 1, scope: !5436)
!5909 = !{i64 2147640437, i64 2147640480, i64 2147640520}
!5910 = !DILocation(line: 247, column: 1, scope: !5436)
!5911 = !{i64 2147640672, i64 2147640715, i64 2147640755}
!5912 = !DILocation(line: 248, column: 1, scope: !5436)
!5913 = !{i64 2147640904, i64 2147640947, i64 2147640987}
!5914 = !DILocation(line: 249, column: 1, scope: !5436)
!5915 = !{i64 2147641106, i64 2147641149, i64 2147641189}
!5916 = !DILocation(line: 250, column: 1, scope: !5436)
!5917 = !{i64 2147641356, i64 2147641399, i64 2147641439}
!5918 = !DILocation(line: 251, column: 1, scope: !5436)
!5919 = !{i64 2147641594, i64 2147641637, i64 2147641677}
!5920 = !DILocation(line: 252, column: 1, scope: !5436)
!5921 = !{i64 2147641802, i64 2147641845, i64 2147641885}
!5922 = !DILocation(line: 253, column: 1, scope: !5436)
!5923 = !{i64 2147641998, i64 2147642041, i64 2147642081}
!5924 = !DILocation(line: 254, column: 1, scope: !5436)
!5925 = !{i64 2147642182, i64 2147642225, i64 2147642265}
!5926 = !DILocation(line: 255, column: 1, scope: !5436)
!5927 = !{i64 2147642399, i64 2147642442, i64 2147642482}
!5928 = !DILocation(line: 256, column: 1, scope: !5436)
!5929 = !{i64 2147646665, i64 2147646708, i64 2147646748}
!5930 = !DILocation(line: 257, column: 1, scope: !5436)
!5931 = !{i64 2147646900, i64 2147646943, i64 2147646983}
!5932 = !DILocation(line: 258, column: 1, scope: !5436)
!5933 = !{i64 2147647123, i64 2147647166, i64 2147647206}
!5934 = !DILocation(line: 259, column: 1, scope: !5436)
!5935 = !{i64 2147647347, i64 2147647390, i64 2147647430}
!5936 = !DILocation(line: 260, column: 1, scope: !5436)
!5937 = !{i64 2147647585, i64 2147647628, i64 2147647668}
!5938 = !DILocation(line: 261, column: 1, scope: !5436)
!5939 = !{i64 2147647823, i64 2147647866, i64 2147647906}
!5940 = !DILocation(line: 262, column: 1, scope: !5436)
!5941 = !{i64 2147648040, i64 2147648083, i64 2147648123}
!5942 = !DILocation(line: 263, column: 1, scope: !5436)
!5943 = !{i64 2147648245, i64 2147648288, i64 2147648328}
!5944 = !DILocation(line: 264, column: 1, scope: !5436)
!5945 = !{i64 2147648438, i64 2147648481, i64 2147648521}
!5946 = !DILocation(line: 265, column: 1, scope: !5436)
!5947 = !{i64 2147648691, i64 2147648734, i64 2147648774}
!5948 = !DILocation(line: 266, column: 1, scope: !5436)
!5949 = !{i64 2147648899, i64 2147648942, i64 2147648982}
!5950 = !DILocation(line: 267, column: 1, scope: !5436)
!5951 = !{i64 2147649095, i64 2147649138, i64 2147649178}
!5952 = !DILocation(line: 268, column: 1, scope: !5436)
!5953 = !{i64 2147649309, i64 2147649352, i64 2147649392}
!5954 = !DILocation(line: 269, column: 1, scope: !5436)
!5955 = !{i64 2147649517, i64 2147649560, i64 2147649600}
!5956 = !DILocation(line: 270, column: 1, scope: !5436)
!5957 = !{i64 2147649707, i64 2147649750, i64 2147649790}
!5958 = !DILocation(line: 271, column: 1, scope: !5436)
!5959 = !{i64 2147649921, i64 2147649964, i64 2147650004}
!5960 = !DILocation(line: 272, column: 1, scope: !5436)
!5961 = !{i64 2147650183, i64 2147650226, i64 2147650266}
!5962 = !DILocation(line: 273, column: 1, scope: !5436)
!5963 = !{i64 2147650394, i64 2147650437, i64 2147650477}
!5964 = !DILocation(line: 274, column: 1, scope: !5436)
!5965 = !{i64 2147650638, i64 2147650681, i64 2147650721}
!5966 = !DILocation(line: 275, column: 1, scope: !5436)
!5967 = !{i64 2147650849, i64 2147650892, i64 2147650932}
!5968 = !DILocation(line: 276, column: 1, scope: !5436)
!5969 = !{i64 2147651078, i64 2147651121, i64 2147651161}
!5970 = !DILocation(line: 277, column: 1, scope: !5436)
!5971 = !{i64 2147651343, i64 2147651386, i64 2147651426}
!5972 = !DILocation(line: 278, column: 1, scope: !5436)
!5973 = !{i64 2147651548, i64 2147651591, i64 2147651631}
!5974 = !DILocation(line: 279, column: 1, scope: !5436)
!5975 = !{i64 2147651744, i64 2147651787, i64 2147651827}
!5976 = !DILocation(line: 280, column: 1, scope: !5436)
!5977 = !{i64 2147651967, i64 2147652010, i64 2147652050}
!5978 = !DILocation(line: 281, column: 1, scope: !5436)
!5979 = !{i64 2147652130, i64 2147652173, i64 2147652213}
!5980 = !DILocation(line: 282, column: 1, scope: !5436)
!5981 = !{i64 2147652335, i64 2147652378, i64 2147652418}
!5982 = !DILocation(line: 283, column: 1, scope: !5436)
!5983 = !{i64 2147652555, i64 2147652598, i64 2147652638}
!5984 = !DILocation(line: 284, column: 1, scope: !5436)
!5985 = !{i64 2147652769, i64 2147652812, i64 2147652852}
!5986 = !DILocation(line: 285, column: 1, scope: !5436)
!5987 = !{i64 2147653013, i64 2147653056, i64 2147653096}
!5988 = !DILocation(line: 286, column: 1, scope: !5436)
!5989 = !{i64 2147653245, i64 2147653288, i64 2147653328}
!5990 = !DILocation(line: 287, column: 1, scope: !5436)
!5991 = !{i64 2147653459, i64 2147653502, i64 2147653542}
!5992 = !DILocation(line: 288, column: 1, scope: !5436)
!5993 = !{i64 2147653670, i64 2147653713, i64 2147653753}
!5994 = !DILocation(line: 289, column: 1, scope: !5436)
!5995 = !{i64 2147653863, i64 2147653906, i64 2147653946}
!5996 = !DILocation(line: 290, column: 1, scope: !5436)
!5997 = !{i64 2147654062, i64 2147654105, i64 2147654145}
!5998 = !DILocation(line: 291, column: 1, scope: !5436)
!5999 = !{i64 2147654234, i64 2147654277, i64 2147654317}
!6000 = !DILocation(line: 292, column: 1, scope: !5436)
!6001 = !{i64 2147654427, i64 2147654470, i64 2147654510}
!6002 = !DILocation(line: 293, column: 1, scope: !5436)
!6003 = !{i64 2147654599, i64 2147654642, i64 2147654682}
!6004 = !DILocation(line: 294, column: 1, scope: !5436)
!6005 = !{i64 2147654789, i64 2147654832, i64 2147654872}
!6006 = !DILocation(line: 295, column: 1, scope: !5436)
!6007 = !{i64 2147654982, i64 2147655025, i64 2147655065}
!6008 = !DILocation(line: 296, column: 1, scope: !5436)
!6009 = !{i64 2147655178, i64 2147655221, i64 2147655261}
!6010 = !DILocation(line: 297, column: 1, scope: !5436)
!6011 = !{i64 2147655341, i64 2147655384, i64 2147655424}
!6012 = !DILocation(line: 298, column: 1, scope: !5436)
!6013 = !{i64 2147659604, i64 2147659647, i64 2147659687}
!6014 = !DILocation(line: 299, column: 1, scope: !5436)
!6015 = !{i64 2147659815, i64 2147659858, i64 2147659898}
!6016 = !DILocation(line: 300, column: 1, scope: !5436)
!6017 = !{i64 2147660020, i64 2147660063, i64 2147660103}
!6018 = !DILocation(line: 301, column: 1, scope: !5436)
!6019 = !{i64 2147660228, i64 2147660271, i64 2147660311}
!6020 = !DILocation(line: 302, column: 1, scope: !5436)
!6021 = !{i64 2147660421, i64 2147660464, i64 2147660504}
!6022 = !DILocation(line: 303, column: 1, scope: !5436)
!6023 = !{i64 2147660608, i64 2147660651, i64 2147660691}
!6024 = !DILocation(line: 304, column: 1, scope: !5436)
!6025 = !{i64 2147660774, i64 2147660817, i64 2147660857}
!6026 = !DILocation(line: 305, column: 1, scope: !5436)
!6027 = !{i64 2147661001, i64 2147661044, i64 2147661084}
!6028 = !DILocation(line: 306, column: 1, scope: !5436)
!6029 = !{i64 2147661218, i64 2147661261, i64 2147661301}
!6030 = !DILocation(line: 307, column: 1, scope: !5436)
!6031 = !{i64 2147661444, i64 2147661487, i64 2147661527}
!6032 = !DILocation(line: 308, column: 1, scope: !5436)
!6033 = !{i64 2147661649, i64 2147661692, i64 2147661732}
!6034 = !DILocation(line: 309, column: 1, scope: !5436)
!6035 = !{i64 2147661866, i64 2147661909, i64 2147661949}
!6036 = !DILocation(line: 310, column: 1, scope: !5436)
!6037 = !{i64 2147662158, i64 2147662201, i64 2147662241}
!6038 = !DILocation(line: 311, column: 1, scope: !5436)
!6039 = !{i64 2147662390, i64 2147662433, i64 2147662473}
!6040 = !DILocation(line: 312, column: 1, scope: !5436)
!6041 = !{i64 2147662607, i64 2147662650, i64 2147662690}
!6042 = !DILocation(line: 313, column: 1, scope: !5436)
!6043 = !{i64 2147662814, i64 2147662857, i64 2147662897}
!6044 = !DILocation(line: 314, column: 1, scope: !5436)
!6045 = !{i64 2147663015, i64 2147663058, i64 2147663098}
!6046 = !DILocation(line: 315, column: 1, scope: !5436)
!6047 = !{i64 2147663247, i64 2147663290, i64 2147663330}
!6048 = !DILocation(line: 316, column: 1, scope: !5436)
!6049 = !{i64 2147663455, i64 2147663498, i64 2147663538}
!6050 = !DILocation(line: 317, column: 1, scope: !5436)
!6051 = !{i64 2147663645, i64 2147663688, i64 2147663728}
!6052 = !DILocation(line: 318, column: 1, scope: !5436)
!6053 = !{i64 2147663871, i64 2147663914, i64 2147663954}
!6054 = !DILocation(line: 319, column: 1, scope: !5436)
!6055 = !{i64 2147664060, i64 2147664103, i64 2147664143}
!6056 = !DILocation(line: 320, column: 1, scope: !5436)
!6057 = !{i64 2147664331, i64 2147664374, i64 2147664414}
!6058 = !DILocation(line: 321, column: 1, scope: !5436)
!6059 = !{i64 2147664551, i64 2147664594, i64 2147664634}
!6060 = !DILocation(line: 322, column: 1, scope: !5436)
!6061 = !{i64 2147664804, i64 2147664847, i64 2147664887}
!6062 = !DILocation(line: 323, column: 1, scope: !5436)
!6063 = !{i64 2147665012, i64 2147665055, i64 2147665095}
!6064 = !DILocation(line: 324, column: 1, scope: !5436)
!6065 = !{i64 2147665244, i64 2147665287, i64 2147665327}
!6066 = !DILocation(line: 325, column: 1, scope: !5436)
!6067 = !{i64 2147665455, i64 2147665498, i64 2147665538}
!6068 = !DILocation(line: 326, column: 1, scope: !5436)
!6069 = !{i64 2147665645, i64 2147665688, i64 2147665728}
!6070 = !DILocation(line: 327, column: 1, scope: !5436)
!6071 = !{i64 2147665859, i64 2147665902, i64 2147665942}
!6072 = !DILocation(line: 328, column: 1, scope: !5436)
!6073 = !{i64 2147666058, i64 2147666101, i64 2147666141}
!6074 = !DILocation(line: 329, column: 1, scope: !5436)
!6075 = !{i64 2147666245, i64 2147666288, i64 2147666328}
!6076 = !DILocation(line: 330, column: 1, scope: !5436)
!6077 = !{i64 2147666453, i64 2147666496, i64 2147666536}
!6078 = !DILocation(line: 331, column: 1, scope: !5436)
!6079 = !{i64 2147666682, i64 2147666725, i64 2147666765}
!6080 = !DILocation(line: 332, column: 1, scope: !5436)
!6081 = !{i64 2147666884, i64 2147666927, i64 2147666967}
!6082 = !DILocation(line: 333, column: 1, scope: !5436)
!6083 = !{i64 2147667083, i64 2147667126, i64 2147667166}
!6084 = !DILocation(line: 334, column: 1, scope: !5436)
!6085 = !{i64 2147667300, i64 2147667343, i64 2147667383}
!6086 = !DILocation(line: 336, column: 1, scope: !5436)
!6087 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6088)
!6088 = !{!6089, !6090}
!6089 = !DILocalVariable(name: "arg", arg: 1, scope: !6087, file: !324, line: 30, type: !333)
!6090 = !DILocalVariable(name: "key", scope: !6087, file: !324, line: 32, type: !110)
!6091 = !DILocation(line: 0, scope: !6087)
!6092 = !DILocation(line: 37, column: 2, scope: !6087)
!6093 = !DILocation(line: 38, column: 2, scope: !6087)
!6094 = !DILocation(line: 55, column: 2, scope: !6095, inlinedAt: !6102)
!6095 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6099)
!6096 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6097 = !DISubroutineType(types: !6098)
!6098 = !{!32}
!6099 = !{!6100, !6101}
!6100 = !DILocalVariable(name: "key", scope: !6095, file: !6096, line: 44, type: !32)
!6101 = !DILocalVariable(name: "tmp", scope: !6095, file: !6096, line: 53, type: !32)
!6102 = distinct !DILocation(line: 40, column: 8, scope: !6087)
!6103 = !{i64 2110173}
!6104 = !DILocation(line: 0, scope: !6095, inlinedAt: !6102)
!6105 = !DILocalVariable(name: "key", arg: 1, scope: !6106, file: !6096, line: 84, type: !32)
!6106 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{null, !32}
!6109 = !{!6105}
!6110 = !DILocation(line: 0, scope: !6106, inlinedAt: !6111)
!6111 = distinct !DILocation(line: 47, column: 2, scope: !6087)
!6112 = !DILocation(line: 95, column: 2, scope: !6106, inlinedAt: !6111)
!6113 = !{i64 2110990}
!6114 = !DILocation(line: 51, column: 18, scope: !6087)
!6115 = !DILocation(line: 53, column: 2, scope: !6087)
!6116 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6117, file: !6117, line: 1609, type: !3094, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2034)
!6117 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6118 = !DILocation(line: 1611, column: 3, scope: !6116)
!6119 = !DILocation(line: 1612, column: 1, scope: !6116)
!6120 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6117, file: !6117, line: 1629, type: !3094, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2034)
!6121 = !DILocation(line: 1631, column: 3, scope: !6120)
!6122 = !DILocation(line: 1632, column: 1, scope: !6120)
!6123 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6124)
!6124 = !{!6125}
!6125 = !DILocalVariable(name: "dev", arg: 1, scope: !6123, file: !361, line: 26, type: !369)
!6126 = !DILocation(line: 0, scope: !6123)
!6127 = !DILocation(line: 68, column: 2, scope: !6123)
!6128 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6129, file: !6129, line: 14, type: !4390, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6130)
!6129 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6130 = !{!6131, !6132}
!6131 = !DILocalVariable(name: "fmt", arg: 1, scope: !6128, file: !6129, line: 14, type: !279)
!6132 = !DILocalVariable(name: "ap", scope: !6128, file: !6129, line: 16, type: !6133)
!6133 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3396, line: 99, baseType: !6134)
!6134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3396, line: 40, baseType: !6135)
!6135 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6129, baseType: !6136)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6137)
!6137 = !{!6138}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6136, file: !6129, line: 16, baseType: !107, size: 32)
!6139 = !DILocation(line: 0, scope: !6128)
!6140 = !DILocation(line: 16, column: 2, scope: !6128)
!6141 = !DILocation(line: 16, column: 10, scope: !6128)
!6142 = !DILocation(line: 18, column: 2, scope: !6128)
!6143 = !DILocation(line: 19, column: 2, scope: !6128)
!6144 = !DILocation(line: 20, column: 2, scope: !6128)
!6145 = !DILocation(line: 21, column: 1, scope: !6128)
!6146 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6129, file: !6129, line: 23, type: !6147, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6149)
!6147 = !DISubroutineType(types: !6148)
!6148 = !{null, !279, !6133}
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "fmt", arg: 1, scope: !6146, file: !6129, line: 23, type: !279)
!6151 = !DILocalVariable(name: "ap", arg: 2, scope: !6146, file: !6129, line: 23, type: !6133)
!6152 = !DILocation(line: 0, scope: !6146)
!6153 = !DILocation(line: 25, column: 2, scope: !6146)
!6154 = !DILocation(line: 26, column: 1, scope: !6146)
!6155 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6129, file: !6129, line: 52, type: !6156, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6158)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{null, !109, !13, !234}
!6158 = !{!6159, !6160, !6161, !6162}
!6159 = !DILocalVariable(name: "level", arg: 1, scope: !6155, file: !6129, line: 52, type: !109)
!6160 = !DILocalVariable(name: "data", arg: 2, scope: !6155, file: !6129, line: 52, type: !13)
!6161 = !DILocalVariable(name: "size", arg: 3, scope: !6155, file: !6129, line: 52, type: !234)
!6162 = !DILocalVariable(name: "data_buffer", scope: !6155, file: !6129, line: 54, type: !279)
!6163 = !DILocation(line: 0, scope: !6155)
!6164 = !DILocation(line: 55, column: 14, scope: !6155)
!6165 = !DILocation(line: 55, column: 2, scope: !6155)
!6166 = !DILocation(line: 56, column: 3, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6155, file: !6129, line: 55, column: 20)
!6168 = !DILocation(line: 57, column: 3, scope: !6167)
!6169 = !DILocation(line: 59, column: 7, scope: !6167)
!6170 = distinct !{!6170, !6165, !6171}
!6171 = !DILocation(line: 65, column: 2, scope: !6155)
!6172 = !DILocation(line: 66, column: 1, scope: !6155)
!6173 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6174, file: !6174, line: 175, type: !6175, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6177)
!6174 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6175 = !DISubroutineType(types: !6176)
!6176 = !{!150, !109}
!6177 = !{!6178}
!6178 = !DILocalVariable(name: "level", arg: 1, scope: !6173, file: !6174, line: 175, type: !109)
!6179 = !DILocation(line: 0, scope: !6173)
!6180 = !DILocation(line: 177, column: 2, scope: !6173)
!6181 = !DILocation(line: 189, column: 1, scope: !6173)
!6182 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6129, file: !6129, line: 28, type: !6183, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6185)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{null, !279, !234}
!6185 = !{!6186, !6187, !6188, !6190, !6192}
!6186 = !DILocalVariable(name: "data", arg: 1, scope: !6182, file: !6129, line: 28, type: !279)
!6187 = !DILocalVariable(name: "length", arg: 2, scope: !6182, file: !6129, line: 28, type: !234)
!6188 = !DILocalVariable(name: "i", scope: !6189, file: !6129, line: 30, type: !234)
!6189 = distinct !DILexicalBlock(scope: !6182, file: !6129, line: 30, column: 2)
!6190 = !DILocalVariable(name: "i", scope: !6191, file: !6129, line: 40, type: !234)
!6191 = distinct !DILexicalBlock(scope: !6182, file: !6129, line: 40, column: 2)
!6192 = !DILocalVariable(name: "c", scope: !6193, file: !6129, line: 42, type: !181)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !6129, line: 41, column: 19)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !6129, line: 41, column: 7)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !6129, line: 40, column: 54)
!6196 = distinct !DILexicalBlock(scope: !6191, file: !6129, line: 40, column: 2)
!6197 = !DILocation(line: 0, scope: !6182)
!6198 = !DILocation(line: 0, scope: !6189)
!6199 = !DILocation(line: 30, column: 2, scope: !6189)
!6200 = !DILocation(line: 38, column: 2, scope: !6182)
!6201 = !DILocation(line: 0, scope: !6191)
!6202 = !DILocation(line: 40, column: 2, scope: !6191)
!6203 = !DILocation(line: 31, column: 9, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !6129, line: 31, column: 7)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !6129, line: 30, column: 54)
!6206 = distinct !DILexicalBlock(scope: !6189, file: !6129, line: 30, column: 2)
!6207 = !DILocation(line: 31, column: 7, scope: !6205)
!6208 = !DILocation(line: 32, column: 35, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6204, file: !6129, line: 31, column: 19)
!6210 = !DILocation(line: 32, column: 20, scope: !6209)
!6211 = !DILocation(line: 32, column: 4, scope: !6209)
!6212 = !DILocation(line: 33, column: 3, scope: !6209)
!6213 = !DILocation(line: 34, column: 4, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6204, file: !6129, line: 33, column: 10)
!6215 = !DILocation(line: 30, column: 50, scope: !6206)
!6216 = !DILocation(line: 30, column: 24, scope: !6206)
!6217 = distinct !{!6217, !6199, !6218}
!6218 = !DILocation(line: 36, column: 2, scope: !6189)
!6219 = !DILocation(line: 49, column: 2, scope: !6182)
!6220 = !DILocation(line: 50, column: 1, scope: !6182)
!6221 = !DILocation(line: 41, column: 9, scope: !6194)
!6222 = !DILocation(line: 41, column: 7, scope: !6195)
!6223 = !DILocation(line: 42, column: 22, scope: !6193)
!6224 = !DILocation(line: 0, scope: !6193)
!6225 = !DILocation(line: 44, column: 25, scope: !6193)
!6226 = !DILocation(line: 44, column: 17, scope: !6193)
!6227 = !DILocation(line: 44, column: 33, scope: !6193)
!6228 = !DILocation(line: 44, column: 4, scope: !6193)
!6229 = !DILocation(line: 45, column: 3, scope: !6193)
!6230 = !DILocation(line: 46, column: 4, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6194, file: !6129, line: 45, column: 10)
!6232 = !DILocation(line: 40, column: 50, scope: !6196)
!6233 = !DILocation(line: 40, column: 24, scope: !6196)
!6234 = distinct !{!6234, !6202, !6235}
!6235 = !DILocation(line: 48, column: 2, scope: !6191)
!6236 = distinct !DISubprogram(name: "isprint", scope: !5180, file: !5180, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !6237)
!6237 = !{!6238}
!6238 = !DILocalVariable(name: "c", arg: 1, scope: !6236, file: !5180, line: 37, type: !109)
!6239 = !DILocation(line: 0, scope: !6236)
!6240 = !DILocation(line: 39, column: 38, scope: !6236)
!6241 = !DILocation(line: 39, column: 2, scope: !6236)
!6242 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6243, file: !6243, line: 57, type: !6244, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !6290)
!6243 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6244 = !DISubroutineType(types: !6245)
!6245 = !{null, !32, !6246}
!6246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6247, size: 32)
!6247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6248)
!6248 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2680, line: 141, baseType: !6249)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2680, line: 97, size: 256, elements: !6250)
!6250 = !{!6251}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6249, file: !2680, line: 107, baseType: !6252, size: 256)
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2680, line: 98, size: 256, elements: !6253)
!6253 = !{!6254, !6259, !6264, !6269, !6274, !6279, !6284, !6289}
!6254 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 99, baseType: !6255, size: 32)
!6255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 99, size: 32, elements: !6256)
!6256 = !{!6257, !6258}
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6255, file: !2680, line: 99, baseType: !110, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6255, file: !2680, line: 99, baseType: !110, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 100, baseType: !6260, size: 32, offset: 32)
!6260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 100, size: 32, elements: !6261)
!6261 = !{!6262, !6263}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6260, file: !2680, line: 100, baseType: !110, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6260, file: !2680, line: 100, baseType: !110, size: 32)
!6264 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 101, baseType: !6265, size: 32, offset: 64)
!6265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 101, size: 32, elements: !6266)
!6266 = !{!6267, !6268}
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6265, file: !2680, line: 101, baseType: !110, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6265, file: !2680, line: 101, baseType: !110, size: 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 102, baseType: !6270, size: 32, offset: 96)
!6270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 102, size: 32, elements: !6271)
!6271 = !{!6272, !6273}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6270, file: !2680, line: 102, baseType: !110, size: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6270, file: !2680, line: 102, baseType: !110, size: 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 103, baseType: !6275, size: 32, offset: 128)
!6275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 103, size: 32, elements: !6276)
!6276 = !{!6277, !6278}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6275, file: !2680, line: 103, baseType: !110, size: 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6275, file: !2680, line: 103, baseType: !110, size: 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 104, baseType: !6280, size: 32, offset: 160)
!6280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 104, size: 32, elements: !6281)
!6281 = !{!6282, !6283}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6280, file: !2680, line: 104, baseType: !110, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6280, file: !2680, line: 104, baseType: !110, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, scope: !6252, file: !2680, line: 105, baseType: !6285, size: 32, offset: 192)
!6285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6252, file: !2680, line: 105, size: 32, elements: !6286)
!6286 = !{!6287, !6288}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6285, file: !2680, line: 105, baseType: !110, size: 32)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6285, file: !2680, line: 105, baseType: !110, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6252, file: !2680, line: 106, baseType: !110, size: 32, offset: 224)
!6290 = !{!6291, !6292}
!6291 = !DILocalVariable(name: "reason", arg: 1, scope: !6242, file: !6243, line: 57, type: !32)
!6292 = !DILocalVariable(name: "esf", arg: 2, scope: !6242, file: !6243, line: 57, type: !6246)
!6293 = !DILocation(line: 0, scope: !6242)
!6294 = !DILocation(line: 60, column: 10, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6242, file: !6243, line: 60, column: 6)
!6296 = !DILocation(line: 60, column: 6, scope: !6242)
!6297 = !DILocation(line: 61, column: 3, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6295, file: !6243, line: 60, column: 19)
!6299 = !DILocation(line: 62, column: 2, scope: !6298)
!6300 = !DILocation(line: 63, column: 2, scope: !6242)
!6301 = !DILocation(line: 64, column: 1, scope: !6242)
!6302 = distinct !DISubprogram(name: "esf_dump", scope: !6243, file: !6243, line: 20, type: !6303, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !6305)
!6303 = !DISubroutineType(types: !6304)
!6304 = !{null, !6246}
!6305 = !{!6306}
!6306 = !DILocalVariable(name: "esf", arg: 1, scope: !6302, file: !6243, line: 20, type: !6246)
!6307 = !DILocation(line: 0, scope: !6302)
!6308 = !DILocation(line: 22, column: 2, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !6243, line: 22, column: 2)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !6243, line: 22, column: 2)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !6243, line: 22, column: 2)
!6312 = distinct !DILexicalBlock(scope: !6302, file: !6243, line: 22, column: 2)
!6313 = !DILocation(line: 24, column: 2, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !6243, line: 24, column: 2)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !6243, line: 24, column: 2)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !6243, line: 24, column: 2)
!6317 = distinct !DILexicalBlock(scope: !6302, file: !6243, line: 24, column: 2)
!6318 = !DILocation(line: 26, column: 2, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !6243, line: 26, column: 2)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !6243, line: 26, column: 2)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !6243, line: 26, column: 2)
!6322 = distinct !DILexicalBlock(scope: !6302, file: !6243, line: 26, column: 2)
!6323 = !DILocation(line: 53, column: 2, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !6243, line: 53, column: 2)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !6243, line: 53, column: 2)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !6243, line: 53, column: 2)
!6327 = distinct !DILexicalBlock(scope: !6302, file: !6243, line: 53, column: 2)
!6328 = !DILocation(line: 55, column: 1, scope: !6302)
!6329 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6243, file: !6243, line: 82, type: !6330, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !6345)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{null, !6246, !6332}
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 32)
!6333 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6334)
!6334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6335)
!6335 = !{!6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344}
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6334, file: !211, line: 26, baseType: !110, size: 32)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6334, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6334, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6334, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6334, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6334, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6334, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6334, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6334, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6345 = !{!6346, !6347, !6348}
!6346 = !DILocalVariable(name: "esf", arg: 1, scope: !6329, file: !6243, line: 82, type: !6246)
!6347 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6329, file: !6243, line: 82, type: !6332)
!6348 = !DILocalVariable(name: "reason", scope: !6329, file: !6243, line: 88, type: !32)
!6349 = !DILocation(line: 0, scope: !6329)
!6350 = !DILocation(line: 88, column: 35, scope: !6329)
!6351 = !DILocation(line: 108, column: 2, scope: !6329)
!6352 = !DILocation(line: 131, column: 1, scope: !6329)
!6353 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6243, file: !6243, line: 133, type: !6354, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !6356)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{null, !107}
!6356 = !{!6357, !6358, !6359}
!6357 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6353, file: !6243, line: 133, type: !107)
!6358 = !DILocalVariable(name: "ssf_contents", scope: !6353, file: !6243, line: 135, type: !884)
!6359 = !DILocalVariable(name: "oops_esf", scope: !6353, file: !6243, line: 136, type: !6248)
!6360 = !DILocation(line: 0, scope: !6353)
!6361 = !DILocation(line: 136, column: 2, scope: !6353)
!6362 = !DILocation(line: 136, column: 15, scope: !6353)
!6363 = !DILocation(line: 139, column: 22, scope: !6353)
!6364 = !DILocation(line: 139, column: 17, scope: !6353)
!6365 = !DILocation(line: 139, column: 20, scope: !6353)
!6366 = !DILocation(line: 141, column: 2, scope: !6353)
!6367 = !DILocation(line: 142, column: 2, scope: !6353)
!6368 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6369, file: !6369, line: 40, type: !6107, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6370)
!6369 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6370 = !{!6371}
!6371 = !DILocalVariable(name: "irq", arg: 1, scope: !6368, file: !6369, line: 40, type: !32)
!6372 = !DILocation(line: 0, scope: !6368)
!6373 = !DILocation(line: 42, column: 2, scope: !6368)
!6374 = !DILocation(line: 43, column: 1, scope: !6368)
!6375 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6376, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6378)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{null, !792}
!6378 = !{!6379}
!6379 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6375, file: !535, line: 1684, type: !792)
!6380 = !DILocation(line: 0, scope: !6375)
!6381 = !DILocation(line: 1686, column: 23, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6375, file: !535, line: 1686, column: 7)
!6383 = !DILocation(line: 1686, column: 7, scope: !6375)
!6384 = !DILocation(line: 1688, column: 5, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6382, file: !535, line: 1687, column: 3)
!6386 = !{i64 2151073291}
!6387 = !DILocation(line: 1689, column: 81, scope: !6385)
!6388 = !DILocation(line: 1689, column: 60, scope: !6385)
!6389 = !DILocation(line: 1689, column: 34, scope: !6385)
!6390 = !DILocation(line: 1689, column: 5, scope: !6385)
!6391 = !DILocation(line: 1689, column: 43, scope: !6385)
!6392 = !DILocation(line: 1690, column: 5, scope: !6385)
!6393 = !{i64 2151073405}
!6394 = !DILocation(line: 1691, column: 3, scope: !6385)
!6395 = !DILocation(line: 1692, column: 1, scope: !6375)
!6396 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6369, file: !6369, line: 45, type: !6107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6397)
!6397 = !{!6398}
!6398 = !DILocalVariable(name: "irq", arg: 1, scope: !6396, file: !6369, line: 45, type: !32)
!6399 = !DILocation(line: 0, scope: !6396)
!6400 = !DILocation(line: 47, column: 2, scope: !6396)
!6401 = !DILocation(line: 48, column: 1, scope: !6396)
!6402 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6376, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6403)
!6403 = !{!6404}
!6404 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6402, file: !535, line: 1722, type: !792)
!6405 = !DILocation(line: 0, scope: !6402)
!6406 = !DILocation(line: 1724, column: 23, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6402, file: !535, line: 1724, column: 7)
!6408 = !DILocation(line: 1724, column: 7, scope: !6402)
!6409 = !DILocation(line: 1726, column: 81, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6407, file: !535, line: 1725, column: 3)
!6411 = !DILocation(line: 1726, column: 60, scope: !6410)
!6412 = !DILocation(line: 1726, column: 34, scope: !6410)
!6413 = !DILocation(line: 1726, column: 5, scope: !6410)
!6414 = !DILocation(line: 1726, column: 43, scope: !6410)
!6415 = !DILocation(line: 271, column: 3, scope: !6416, inlinedAt: !6418)
!6416 = distinct !DISubprogram(name: "__DSB", scope: !6417, file: !6417, line: 269, type: !3094, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !2034)
!6417 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6418 = distinct !DILocation(line: 1727, column: 5, scope: !6410)
!6419 = !{i64 3527674}
!6420 = !DILocation(line: 260, column: 3, scope: !6421, inlinedAt: !6422)
!6421 = distinct !DISubprogram(name: "__ISB", scope: !6417, file: !6417, line: 258, type: !3094, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !2034)
!6422 = distinct !DILocation(line: 1728, column: 5, scope: !6410)
!6423 = !{i64 3527391}
!6424 = !DILocation(line: 1729, column: 3, scope: !6410)
!6425 = !DILocation(line: 1730, column: 1, scope: !6402)
!6426 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6369, file: !6369, line: 50, type: !6427, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6429)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!109, !32}
!6429 = !{!6430}
!6430 = !DILocalVariable(name: "irq", arg: 1, scope: !6426, file: !6369, line: 50, type: !32)
!6431 = !DILocation(line: 0, scope: !6426)
!6432 = !DILocation(line: 52, column: 20, scope: !6426)
!6433 = !DILocation(line: 52, column: 9, scope: !6426)
!6434 = !DILocation(line: 52, column: 41, scope: !6426)
!6435 = !DILocation(line: 52, column: 39, scope: !6426)
!6436 = !DILocation(line: 52, column: 2, scope: !6426)
!6437 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6369, file: !6369, line: 64, type: !6438, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6440)
!6438 = !DISubroutineType(types: !6439)
!6439 = !{null, !32, !32, !110}
!6440 = !{!6441, !6442, !6443}
!6441 = !DILocalVariable(name: "irq", arg: 1, scope: !6437, file: !6369, line: 64, type: !32)
!6442 = !DILocalVariable(name: "prio", arg: 2, scope: !6437, file: !6369, line: 64, type: !32)
!6443 = !DILocalVariable(name: "flags", arg: 3, scope: !6437, file: !6369, line: 64, type: !110)
!6444 = !DILocation(line: 0, scope: !6437)
!6445 = !DILocation(line: 83, column: 8, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !6369, line: 82, column: 9)
!6447 = distinct !DILexicalBlock(scope: !6437, file: !6369, line: 76, column: 6)
!6448 = !DILocation(line: 91, column: 2, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !6369, line: 91, column: 2)
!6450 = distinct !DILexicalBlock(scope: !6437, file: !6369, line: 91, column: 2)
!6451 = !DILocation(line: 91, column: 2, scope: !6450)
!6452 = !DILocation(line: 91, column: 2, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !6369, line: 91, column: 2)
!6454 = !DILocation(line: 95, column: 2, scope: !6437)
!6455 = !DILocation(line: 96, column: 1, scope: !6437)
!6456 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6457, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6459)
!6457 = !DISubroutineType(types: !6458)
!6458 = !{null, !792, !110}
!6459 = !{!6460, !6461}
!6460 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6456, file: !535, line: 1814, type: !792)
!6461 = !DILocalVariable(name: "priority", arg: 2, scope: !6456, file: !535, line: 1814, type: !110)
!6462 = !DILocation(line: 0, scope: !6456)
!6463 = !DILocation(line: 0, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6456, file: !535, line: 1816, column: 7)
!6465 = !DILocation(line: 1816, column: 7, scope: !6456)
!6466 = !DILocation(line: 1824, column: 1, scope: !6456)
!6467 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6369, file: !6369, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6468)
!6468 = !{!6469}
!6469 = !DILocalVariable(name: "unused", arg: 1, scope: !6467, file: !6369, line: 155, type: !13)
!6470 = !DILocation(line: 0, scope: !6467)
!6471 = !DILocation(line: 159, column: 2, scope: !6467)
!6472 = !DILocation(line: 160, column: 1, scope: !6467)
!6473 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6474, file: !6474, line: 87, type: !3094, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !2034)
!6474 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6475 = !DILocation(line: 89, column: 2, scope: !6473)
!6476 = !DILocation(line: 90, column: 2, scope: !6473)
!6477 = !DILocation(line: 91, column: 1, scope: !6473)
!6478 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6474, file: !6474, line: 23, type: !3094, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!6479 = !DISubprogram(name: "z_arm_int_exit", scope: !6480, file: !6480, line: 153, type: !3094, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!6480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6481 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6482, file: !6482, line: 256, type: !3094, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !2034)
!6482 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6483 = !DILocation(line: 258, column: 2, scope: !6481)
!6484 = !DILocation(line: 260, column: 2, scope: !6481)
!6485 = !DILocation(line: 262, column: 2, scope: !6481)
!6486 = !DILocation(line: 263, column: 2, scope: !6481)
!6487 = !DILocation(line: 267, column: 2, scope: !6481)
!6488 = !DILocation(line: 268, column: 2, scope: !6481)
!6489 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6482, file: !6482, line: 53, type: !3094, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !2034)
!6490 = !DILocation(line: 55, column: 12, scope: !6489)
!6491 = !DILocation(line: 271, column: 3, scope: !6492, inlinedAt: !6493)
!6492 = distinct !DISubprogram(name: "__DSB", scope: !6417, file: !6417, line: 269, type: !3094, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !2034)
!6493 = distinct !DILocation(line: 56, column: 2, scope: !6489)
!6494 = !{i64 3526345}
!6495 = !DILocation(line: 260, column: 3, scope: !6496, inlinedAt: !6497)
!6496 = distinct !DISubprogram(name: "__ISB", scope: !6417, file: !6417, line: 258, type: !3094, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !2034)
!6497 = distinct !DILocation(line: 57, column: 2, scope: !6489)
!6498 = !{i64 3526062}
!6499 = !DILocation(line: 58, column: 1, scope: !6489)
!6500 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6482, file: !6482, line: 96, type: !3094, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !2034)
!6501 = !DILocation(line: 103, column: 13, scope: !6500)
!6502 = !DILocation(line: 975, column: 3, scope: !6503, inlinedAt: !6508)
!6503 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6417, file: !6417, line: 971, type: !6504, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6506)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!110}
!6506 = !{!6507}
!6507 = !DILocalVariable(name: "result", scope: !6503, file: !6417, line: 973, type: !110)
!6508 = distinct !DILocation(line: 189, column: 16, scope: !6500)
!6509 = !{i64 3547175}
!6510 = !DILocation(line: 0, scope: !6503, inlinedAt: !6508)
!6511 = !DILocation(line: 189, column: 32, scope: !6500)
!6512 = !DILocalVariable(name: "control", arg: 1, scope: !6513, file: !6417, line: 1001, type: !110)
!6513 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6417, file: !6417, line: 1001, type: !6514, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{null, !110}
!6516 = !{!6512}
!6517 = !DILocation(line: 0, scope: !6513, inlinedAt: !6518)
!6518 = distinct !DILocation(line: 189, column: 2, scope: !6500)
!6519 = !DILocation(line: 1003, column: 3, scope: !6513, inlinedAt: !6518)
!6520 = !{i64 3547895}
!6521 = !DILocation(line: 260, column: 3, scope: !6496, inlinedAt: !6522)
!6522 = distinct !DILocation(line: 1004, column: 3, scope: !6513, inlinedAt: !6518)
!6523 = !DILocation(line: 191, column: 1, scope: !6500)
!6524 = distinct !DISubprogram(name: "arch_swap", scope: !6525, file: !6525, line: 33, type: !6427, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !6526)
!6525 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6526 = !{!6527}
!6527 = !DILocalVariable(name: "key", arg: 1, scope: !6524, file: !6525, line: 33, type: !32)
!6528 = !DILocation(line: 0, scope: !6524)
!6529 = !DILocation(line: 36, column: 2, scope: !6524)
!6530 = !DILocation(line: 36, column: 17, scope: !6524)
!6531 = !DILocation(line: 36, column: 25, scope: !6524)
!6532 = !DILocation(line: 37, column: 37, scope: !6524)
!6533 = !DILocation(line: 37, column: 17, scope: !6524)
!6534 = !DILocation(line: 37, column: 35, scope: !6524)
!6535 = !DILocation(line: 41, column: 12, scope: !6524)
!6536 = !DILocalVariable(name: "key", arg: 1, scope: !6537, file: !6096, line: 84, type: !32)
!6537 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !6538)
!6538 = !{!6536}
!6539 = !DILocation(line: 0, scope: !6537, inlinedAt: !6540)
!6540 = distinct !DILocation(line: 44, column: 2, scope: !6524)
!6541 = !DILocation(line: 95, column: 2, scope: !6537, inlinedAt: !6540)
!6542 = !{i64 2225667}
!6543 = !DILocation(line: 53, column: 9, scope: !6524)
!6544 = !DILocation(line: 53, column: 24, scope: !6524)
!6545 = !DILocation(line: 53, column: 2, scope: !6524)
!6546 = distinct !DISubprogram(name: "arch_new_thread", scope: !6547, file: !6547, line: 56, type: !6548, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !6658)
!6547 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6548 = !DISubroutineType(types: !6549)
!6549 = !{null, !6550, !6653, !285, !3361, !107, !107, !107}
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 32)
!6551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !6552)
!6552 = !{!6553, !6611, !6623, !6624, !6625, !6626, !6627, !6633, !6648}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6551, file: !158, line: 247, baseType: !6554, size: 384)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !6555)
!6555 = !{!6556, !6580, !6587, !6588, !6589, !6598, !6599, !6600}
!6556 = !DIDerivedType(tag: DW_TAG_member, scope: !6554, file: !158, line: 60, baseType: !6557, size: 64)
!6557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6554, file: !158, line: 60, size: 64, elements: !6558)
!6558 = !{!6559, !6574}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6557, file: !158, line: 61, baseType: !6560, size: 64)
!6560 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6561)
!6561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6562)
!6562 = !{!6563, !6569}
!6563 = !DIDerivedType(tag: DW_TAG_member, scope: !6561, file: !127, line: 38, baseType: !6564, size: 32)
!6564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6561, file: !127, line: 38, size: 32, elements: !6565)
!6565 = !{!6566, !6568}
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6564, file: !127, line: 39, baseType: !6567, size: 32)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 32)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6564, file: !127, line: 40, baseType: !6567, size: 32)
!6569 = !DIDerivedType(tag: DW_TAG_member, scope: !6561, file: !127, line: 42, baseType: !6570, size: 32, offset: 32)
!6570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6561, file: !127, line: 42, size: 32, elements: !6571)
!6571 = !{!6572, !6573}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6570, file: !127, line: 43, baseType: !6567, size: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6570, file: !127, line: 44, baseType: !6567, size: 32)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6557, file: !158, line: 62, baseType: !6575, size: 64)
!6575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !6576)
!6576 = !{!6577}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6575, file: !170, line: 50, baseType: !6578, size: 64)
!6578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6579, size: 64, elements: !175)
!6579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 32)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6554, file: !158, line: 68, baseType: !6581, size: 32, offset: 64)
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6583)
!6583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6584)
!6584 = !{!6585}
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6583, file: !122, line: 232, baseType: !6586, size: 64)
!6586 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6561)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6554, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6554, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!6589 = !DIDerivedType(tag: DW_TAG_member, scope: !6554, file: !158, line: 90, baseType: !6590, size: 16, offset: 112)
!6590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6554, file: !158, line: 90, size: 16, elements: !6591)
!6591 = !{!6592, !6597}
!6592 = !DIDerivedType(tag: DW_TAG_member, scope: !6590, file: !158, line: 91, baseType: !6593, size: 16)
!6593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6590, file: !158, line: 91, size: 16, elements: !6594)
!6594 = !{!6595, !6596}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6593, file: !158, line: 96, baseType: !190, size: 8)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6593, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6590, file: !158, line: 100, baseType: !194, size: 16)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6554, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6554, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6554, file: !158, line: 131, baseType: !6601, size: 192, offset: 192)
!6601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6602)
!6602 = !{!6603, !6604, !6610}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6601, file: !122, line: 245, baseType: !6560, size: 64)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6601, file: !122, line: 246, baseType: !6605, size: 32, offset: 64)
!6605 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6606)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 32)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{null, !6609}
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 32)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6601, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6551, file: !158, line: 250, baseType: !6612, size: 288, offset: 384)
!6612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6613)
!6613 = !{!6614, !6615, !6616, !6617, !6618, !6619, !6620, !6621, !6622}
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6612, file: !211, line: 26, baseType: !110, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6612, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6612, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6612, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6612, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6612, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6612, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6612, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6612, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6551, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6551, file: !158, line: 256, baseType: !6582, size: 64, offset: 704)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6551, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6551, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6551, file: !158, line: 300, baseType: !6628, size: 96, offset: 1056)
!6628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !6629)
!6629 = !{!6630, !6631, !6632}
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6628, file: !158, line: 153, baseType: !22, size: 32)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6628, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6628, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6551, file: !158, line: 325, baseType: !6634, size: 32, offset: 1152)
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 32)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6636)
!6636 = !{!6637, !6643, !6644}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6635, file: !118, line: 5074, baseType: !6638, size: 96)
!6638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !6639)
!6639 = !{!6640, !6641, !6642}
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6638, file: !243, line: 57, baseType: !246, size: 32)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6638, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6638, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6635, file: !118, line: 5075, baseType: !6582, size: 64, offset: 96)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6635, file: !118, line: 5076, baseType: !6645, size: 32, offset: 160)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !6646)
!6646 = !{!6647}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6645, file: !253, line: 52, baseType: !22, size: 32)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6551, file: !158, line: 343, baseType: !6649, size: 64, offset: 1184)
!6649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !6650)
!6650 = !{!6651, !6652}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6649, file: !211, line: 63, baseType: !110, size: 32)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6649, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!6653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6654, size: 32)
!6654 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3360, line: 44, baseType: !6655)
!6655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !6656)
!6656 = !{!6657}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6655, file: !147, line: 48, baseType: !150, size: 8)
!6658 = !{!6659, !6660, !6661, !6662, !6663, !6664, !6665, !6666}
!6659 = !DILocalVariable(name: "thread", arg: 1, scope: !6546, file: !6547, line: 56, type: !6550)
!6660 = !DILocalVariable(name: "stack", arg: 2, scope: !6546, file: !6547, line: 56, type: !6653)
!6661 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6546, file: !6547, line: 57, type: !285)
!6662 = !DILocalVariable(name: "entry", arg: 4, scope: !6546, file: !6547, line: 57, type: !3361)
!6663 = !DILocalVariable(name: "p1", arg: 5, scope: !6546, file: !6547, line: 58, type: !107)
!6664 = !DILocalVariable(name: "p2", arg: 6, scope: !6546, file: !6547, line: 58, type: !107)
!6665 = !DILocalVariable(name: "p3", arg: 7, scope: !6546, file: !6547, line: 58, type: !107)
!6666 = !DILocalVariable(name: "iframe", scope: !6546, file: !6547, line: 60, type: !2678)
!6667 = !DILocation(line: 0, scope: !6546)
!6668 = !DILocation(line: 85, column: 11, scope: !6546)
!6669 = !DILocation(line: 93, column: 10, scope: !6546)
!6670 = !DILocation(line: 98, column: 13, scope: !6546)
!6671 = !DILocation(line: 100, column: 15, scope: !6546)
!6672 = !DILocation(line: 100, column: 10, scope: !6546)
!6673 = !DILocation(line: 100, column: 13, scope: !6546)
!6674 = !DILocation(line: 101, column: 15, scope: !6546)
!6675 = !DILocation(line: 101, column: 10, scope: !6546)
!6676 = !DILocation(line: 101, column: 13, scope: !6546)
!6677 = !DILocation(line: 102, column: 15, scope: !6546)
!6678 = !DILocation(line: 102, column: 10, scope: !6546)
!6679 = !DILocation(line: 102, column: 13, scope: !6546)
!6680 = !DILocation(line: 103, column: 15, scope: !6546)
!6681 = !DILocation(line: 103, column: 10, scope: !6546)
!6682 = !DILocation(line: 103, column: 13, scope: !6546)
!6683 = !DILocation(line: 106, column: 10, scope: !6546)
!6684 = !DILocation(line: 106, column: 15, scope: !6546)
!6685 = !DILocation(line: 122, column: 29, scope: !6546)
!6686 = !DILocation(line: 122, column: 23, scope: !6546)
!6687 = !DILocation(line: 122, column: 27, scope: !6546)
!6688 = !DILocation(line: 123, column: 15, scope: !6546)
!6689 = !DILocation(line: 123, column: 23, scope: !6546)
!6690 = !DILocation(line: 143, column: 1, scope: !6546)
!6691 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6547, file: !6547, line: 385, type: !6692, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !6695)
!6692 = !DISubroutineType(types: !6693)
!6693 = !{!110, !6694, !6694}
!6694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6695 = !{!6696, !6697, !6698, !6701}
!6696 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6691, file: !6547, line: 385, type: !6694)
!6697 = !DILocalVariable(name: "psp", arg: 2, scope: !6691, file: !6547, line: 385, type: !6694)
!6698 = !DILocalVariable(name: "thread", scope: !6691, file: !6547, line: 388, type: !6699)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 32)
!6700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6551)
!6701 = !DILocalVariable(name: "guard_len", scope: !6691, file: !6547, line: 405, type: !110)
!6702 = !DILocation(line: 0, scope: !6691)
!6703 = !DILocation(line: 388, column: 34, scope: !6691)
!6704 = !DILocation(line: 390, column: 13, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6691, file: !6547, line: 390, column: 6)
!6706 = !DILocation(line: 390, column: 6, scope: !6691)
!6707 = !DILocation(line: 438, column: 6, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6691, file: !6547, line: 438, column: 6)
!6709 = !DILocation(line: 438, column: 6, scope: !6691)
!6710 = !DILocation(line: 442, column: 3, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6708, file: !6547, line: 440, column: 22)
!6712 = !DILocation(line: 455, column: 1, scope: !6691)
!6713 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6547, file: !6547, line: 530, type: !6714, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2675, retainedNodes: !6716)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{null, !6550, !285, !3361}
!6716 = !{!6717, !6718, !6719}
!6717 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6713, file: !6547, line: 530, type: !6550)
!6718 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6713, file: !6547, line: 530, type: !285)
!6719 = !DILocalVariable(name: "_main", arg: 3, scope: !6713, file: !6547, line: 531, type: !3361)
!6720 = !DILocation(line: 0, scope: !6713)
!6721 = !DILocation(line: 535, column: 11, scope: !6713)
!6722 = !DILocation(line: 560, column: 2, scope: !6713)
!6723 = !DILocation(line: 576, column: 2, scope: !6713)
!6724 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6725 = !DILocation(line: 603, column: 2, scope: !6713)
!6726 = distinct !DISubprogram(name: "z_arm_fault", scope: !6727, file: !6727, line: 1036, type: !6728, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6743)
!6727 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6728 = !DISubroutineType(types: !6729)
!6729 = !{null, !110, !110, !110, !6730}
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 32)
!6731 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6732)
!6732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6733)
!6733 = !{!6734, !6735, !6736, !6737, !6738, !6739, !6740, !6741, !6742}
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6732, file: !211, line: 26, baseType: !110, size: 32)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6732, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6732, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6732, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6732, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6732, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6732, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6732, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6732, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6743 = !{!6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753}
!6744 = !DILocalVariable(name: "msp", arg: 1, scope: !6726, file: !6727, line: 1036, type: !110)
!6745 = !DILocalVariable(name: "psp", arg: 2, scope: !6726, file: !6727, line: 1036, type: !110)
!6746 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6726, file: !6727, line: 1036, type: !110)
!6747 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6726, file: !6727, line: 1037, type: !6730)
!6748 = !DILocalVariable(name: "reason", scope: !6726, file: !6727, line: 1039, type: !110)
!6749 = !DILocalVariable(name: "fault", scope: !6726, file: !6727, line: 1040, type: !109)
!6750 = !DILocalVariable(name: "recoverable", scope: !6726, file: !6727, line: 1041, type: !347)
!6751 = !DILocalVariable(name: "nested_exc", scope: !6726, file: !6727, line: 1041, type: !347)
!6752 = !DILocalVariable(name: "esf", scope: !6726, file: !6727, line: 1042, type: !2746)
!6753 = !DILocalVariable(name: "esf_copy", scope: !6726, file: !6727, line: 1047, type: !2747)
!6754 = !DILocation(line: 0, scope: !6726)
!6755 = !DILocation(line: 1040, column: 19, scope: !6726)
!6756 = !DILocation(line: 1041, column: 2, scope: !6726)
!6757 = !DILocation(line: 1047, column: 2, scope: !6726)
!6758 = !DILocation(line: 1047, column: 15, scope: !6726)
!6759 = !DILocalVariable(name: "key", arg: 1, scope: !6760, file: !6096, line: 84, type: !32)
!6760 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6761)
!6761 = !{!6759}
!6762 = !DILocation(line: 0, scope: !6760, inlinedAt: !6763)
!6763 = distinct !DILocation(line: 1050, column: 2, scope: !6726)
!6764 = !DILocation(line: 95, column: 2, scope: !6760, inlinedAt: !6763)
!6765 = !{i64 2258911}
!6766 = !DILocation(line: 1055, column: 9, scope: !6726)
!6767 = !DILocation(line: 1056, column: 2, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6727, line: 1056, column: 2)
!6769 = distinct !DILexicalBlock(scope: !6726, file: !6727, line: 1056, column: 2)
!6770 = !DILocation(line: 1056, column: 2, scope: !6769)
!6771 = !DILocation(line: 1056, column: 2, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !6727, line: 1056, column: 2)
!6773 = !DILocation(line: 1040, column: 24, scope: !6726)
!6774 = !DILocation(line: 1063, column: 11, scope: !6726)
!6775 = !DILocation(line: 1064, column: 6, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6726, file: !6727, line: 1064, column: 6)
!6777 = !{i8 0, i8 2}
!6778 = !DILocation(line: 1064, column: 6, scope: !6726)
!6779 = !DILocation(line: 1070, column: 20, scope: !6726)
!6780 = !DILocation(line: 1070, column: 2, scope: !6726)
!6781 = !DILocation(line: 1089, column: 6, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6726, file: !6727, line: 1089, column: 6)
!6783 = !DILocation(line: 0, scope: !6782)
!6784 = !DILocation(line: 1089, column: 6, scope: !6726)
!6785 = !DILocation(line: 1090, column: 28, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !6727, line: 1090, column: 7)
!6787 = distinct !DILexicalBlock(scope: !6782, file: !6727, line: 1089, column: 18)
!6788 = !DILocation(line: 1090, column: 44, scope: !6786)
!6789 = !DILocation(line: 1090, column: 7, scope: !6787)
!6790 = !DILocation(line: 1091, column: 24, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6786, file: !6727, line: 1090, column: 50)
!6792 = !DILocation(line: 1092, column: 3, scope: !6791)
!6793 = !DILocation(line: 1094, column: 23, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6782, file: !6727, line: 1093, column: 9)
!6795 = !DILocation(line: 1097, column: 2, scope: !6726)
!6796 = !DILocation(line: 1098, column: 1, scope: !6726)
!6797 = distinct !DISubprogram(name: "get_esf", scope: !6727, file: !6727, line: 894, type: !6798, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6801)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!2746, !110, !110, !110, !6800}
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6801 = !{!6802, !6803, !6804, !6805, !6806, !6807}
!6802 = !DILocalVariable(name: "msp", arg: 1, scope: !6797, file: !6727, line: 894, type: !110)
!6803 = !DILocalVariable(name: "psp", arg: 2, scope: !6797, file: !6727, line: 894, type: !110)
!6804 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6797, file: !6727, line: 894, type: !110)
!6805 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6797, file: !6727, line: 895, type: !6800)
!6806 = !DILocalVariable(name: "alternative_state_exc", scope: !6797, file: !6727, line: 897, type: !347)
!6807 = !DILocalVariable(name: "ptr_esf", scope: !6797, file: !6727, line: 898, type: !2746)
!6808 = !DILocation(line: 0, scope: !6797)
!6809 = !DILocation(line: 900, column: 14, scope: !6797)
!6810 = !DILocation(line: 902, column: 49, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6797, file: !6727, line: 902, column: 6)
!6812 = !DILocation(line: 902, column: 6, scope: !6797)
!6813 = !DILocation(line: 983, column: 44, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6797, file: !6727, line: 983, column: 6)
!6815 = !DILocation(line: 985, column: 3, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6727, line: 985, column: 3)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6727, line: 985, column: 3)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6727, line: 985, column: 3)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6727, line: 985, column: 3)
!6820 = distinct !DILexicalBlock(scope: !6814, file: !6727, line: 984, column: 47)
!6821 = !DILocation(line: 986, column: 3, scope: !6820)
!6822 = !DILocation(line: 983, column: 18, scope: !6814)
!6823 = !DILocation(line: 991, column: 7, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6727, line: 990, column: 30)
!6825 = distinct !DILexicalBlock(scope: !6797, file: !6727, line: 990, column: 6)
!6826 = !DILocation(line: 998, column: 16, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6727, line: 995, column: 10)
!6828 = distinct !DILexicalBlock(scope: !6824, file: !6727, line: 991, column: 7)
!6829 = !DILocation(line: 1002, column: 2, scope: !6797)
!6830 = !DILocation(line: 1003, column: 1, scope: !6797)
!6831 = distinct !DISubprogram(name: "fault_handle", scope: !6727, file: !6727, line: 786, type: !6832, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6834)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{!110, !2746, !109, !6800}
!6834 = !{!6835, !6836, !6837, !6838}
!6835 = !DILocalVariable(name: "esf", arg: 1, scope: !6831, file: !6727, line: 786, type: !2746)
!6836 = !DILocalVariable(name: "fault", arg: 2, scope: !6831, file: !6727, line: 786, type: !109)
!6837 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6831, file: !6727, line: 786, type: !6800)
!6838 = !DILocalVariable(name: "reason", scope: !6831, file: !6727, line: 788, type: !110)
!6839 = !DILocation(line: 0, scope: !6831)
!6840 = !DILocation(line: 790, column: 15, scope: !6831)
!6841 = !DILocation(line: 792, column: 2, scope: !6831)
!6842 = !DILocation(line: 794, column: 12, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6831, file: !6727, line: 792, column: 17)
!6844 = !DILocation(line: 795, column: 3, scope: !6843)
!6845 = !DILocation(line: 800, column: 12, scope: !6843)
!6846 = !DILocation(line: 801, column: 3, scope: !6843)
!6847 = !DILocation(line: 803, column: 12, scope: !6843)
!6848 = !DILocation(line: 804, column: 3, scope: !6843)
!6849 = !DILocation(line: 806, column: 12, scope: !6843)
!6850 = !DILocation(line: 807, column: 3, scope: !6843)
!6851 = !DILocation(line: 814, column: 3, scope: !6843)
!6852 = !DILocation(line: 815, column: 3, scope: !6843)
!6853 = !DILocation(line: 820, column: 3, scope: !6843)
!6854 = !DILocation(line: 821, column: 3, scope: !6843)
!6855 = !DILocation(line: 829, column: 2, scope: !6831)
!6856 = distinct !DISubprogram(name: "hard_fault", scope: !6727, file: !6727, line: 709, type: !6857, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6859)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{!110, !2746, !6800}
!6859 = !{!6860, !6861, !6862}
!6860 = !DILocalVariable(name: "esf", arg: 1, scope: !6856, file: !6727, line: 709, type: !2746)
!6861 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6856, file: !6727, line: 709, type: !6800)
!6862 = !DILocalVariable(name: "reason", scope: !6856, file: !6727, line: 711, type: !110)
!6863 = !DILocation(line: 0, scope: !6856)
!6864 = !DILocation(line: 713, column: 2, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6727, line: 713, column: 2)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6727, line: 713, column: 2)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6727, line: 713, column: 2)
!6868 = distinct !DILexicalBlock(scope: !6856, file: !6727, line: 713, column: 2)
!6869 = !DILocation(line: 732, column: 15, scope: !6856)
!6870 = !DILocation(line: 734, column: 12, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6856, file: !6727, line: 734, column: 6)
!6872 = !DILocation(line: 734, column: 17, scope: !6871)
!6873 = !DILocation(line: 734, column: 41, scope: !6871)
!6874 = !DILocation(line: 734, column: 6, scope: !6856)
!6875 = !DILocation(line: 735, column: 3, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6727, line: 735, column: 3)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6727, line: 735, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6727, line: 735, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6727, line: 735, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6871, file: !6727, line: 734, column: 47)
!6881 = !DILocation(line: 736, column: 2, scope: !6880)
!6882 = !DILocation(line: 736, column: 19, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6871, file: !6727, line: 736, column: 13)
!6884 = !DILocation(line: 736, column: 49, scope: !6883)
!6885 = !DILocation(line: 736, column: 13, scope: !6871)
!6886 = !DILocation(line: 737, column: 3, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !6727, line: 737, column: 3)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6727, line: 737, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6727, line: 737, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6727, line: 737, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6883, file: !6727, line: 736, column: 55)
!6892 = !DILocation(line: 738, column: 2, scope: !6891)
!6893 = !DILocation(line: 738, column: 19, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6883, file: !6727, line: 738, column: 13)
!6895 = !DILocation(line: 738, column: 24, scope: !6894)
!6896 = !DILocation(line: 738, column: 47, scope: !6894)
!6897 = !DILocation(line: 738, column: 13, scope: !6883)
!6898 = !DILocation(line: 739, column: 3, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !6727, line: 739, column: 3)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6727, line: 739, column: 3)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6727, line: 739, column: 3)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6727, line: 739, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6894, file: !6727, line: 738, column: 53)
!6904 = !DILocation(line: 740, column: 7, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6903, file: !6727, line: 740, column: 7)
!6906 = !DILocation(line: 740, column: 7, scope: !6903)
!6907 = !DILocation(line: 741, column: 4, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6727, line: 741, column: 4)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6727, line: 741, column: 4)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6727, line: 741, column: 4)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6727, line: 741, column: 4)
!6912 = distinct !DILexicalBlock(scope: !6905, file: !6727, line: 740, column: 38)
!6913 = !DILocation(line: 742, column: 24, scope: !6912)
!6914 = !DILocation(line: 743, column: 3, scope: !6912)
!6915 = !DILocation(line: 743, column: 20, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6905, file: !6727, line: 743, column: 14)
!6917 = !DILocation(line: 743, column: 25, scope: !6916)
!6918 = !DILocation(line: 743, column: 52, scope: !6916)
!6919 = !DILocation(line: 743, column: 14, scope: !6905)
!6920 = !DILocation(line: 744, column: 13, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6916, file: !6727, line: 743, column: 58)
!6922 = !DILocation(line: 745, column: 3, scope: !6921)
!6923 = !DILocation(line: 745, column: 20, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6916, file: !6727, line: 745, column: 14)
!6925 = !DILocation(line: 745, column: 25, scope: !6924)
!6926 = !DILocation(line: 745, column: 52, scope: !6924)
!6927 = !DILocation(line: 745, column: 14, scope: !6916)
!6928 = !DILocation(line: 746, column: 13, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6924, file: !6727, line: 745, column: 58)
!6930 = !DILocation(line: 747, column: 3, scope: !6929)
!6931 = !DILocation(line: 747, column: 20, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6924, file: !6727, line: 747, column: 14)
!6933 = !DILocation(line: 747, column: 52, scope: !6932)
!6934 = !DILocation(line: 747, column: 14, scope: !6924)
!6935 = !DILocation(line: 748, column: 13, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6932, file: !6727, line: 747, column: 58)
!6937 = !DILocation(line: 754, column: 4, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6727, line: 754, column: 4)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6727, line: 754, column: 4)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6727, line: 754, column: 4)
!6941 = distinct !DILexicalBlock(scope: !6932, file: !6727, line: 753, column: 10)
!6942 = !DILocation(line: 758, column: 3, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6727, line: 758, column: 3)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6727, line: 758, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6727, line: 758, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6894, file: !6727, line: 757, column: 9)
!6947 = !DILocation(line: 766, column: 2, scope: !6856)
!6948 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6727, file: !6727, line: 229, type: !6832, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6949)
!6949 = !{!6950, !6951, !6952, !6953, !6954, !6955, !6958}
!6950 = !DILocalVariable(name: "esf", arg: 1, scope: !6948, file: !6727, line: 229, type: !2746)
!6951 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6948, file: !6727, line: 229, type: !109)
!6952 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6948, file: !6727, line: 230, type: !6800)
!6953 = !DILocalVariable(name: "reason", scope: !6948, file: !6727, line: 232, type: !110)
!6954 = !DILocalVariable(name: "mmfar", scope: !6948, file: !6727, line: 233, type: !110)
!6955 = !DILocalVariable(name: "temp", scope: !6956, file: !6727, line: 254, type: !110)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6727, line: 244, column: 48)
!6957 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 244, column: 6)
!6958 = !DILocalVariable(name: "min_stack_ptr", scope: !6959, file: !6727, line: 309, type: !110)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6727, line: 308, column: 43)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6727, line: 308, column: 7)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6727, line: 289, column: 40)
!6962 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 288, column: 6)
!6963 = !DILocation(line: 0, scope: !6948)
!6964 = !DILocation(line: 235, column: 2, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6727, line: 235, column: 2)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6727, line: 235, column: 2)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6727, line: 235, column: 2)
!6968 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 235, column: 2)
!6969 = !DILocation(line: 237, column: 12, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 237, column: 6)
!6971 = !DILocation(line: 237, column: 17, scope: !6970)
!6972 = !DILocation(line: 237, column: 41, scope: !6970)
!6973 = !DILocation(line: 237, column: 6, scope: !6948)
!6974 = !DILocation(line: 238, column: 3, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6727, line: 238, column: 3)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6727, line: 238, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6727, line: 238, column: 3)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6727, line: 238, column: 3)
!6979 = distinct !DILexicalBlock(scope: !6970, file: !6727, line: 237, column: 47)
!6980 = !DILocation(line: 240, column: 2, scope: !6979)
!6981 = !DILocation(line: 241, column: 12, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 241, column: 6)
!6983 = !DILocation(line: 241, column: 17, scope: !6982)
!6984 = !DILocation(line: 241, column: 43, scope: !6982)
!6985 = !DILocation(line: 241, column: 6, scope: !6948)
!6986 = !DILocation(line: 242, column: 3, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6727, line: 242, column: 3)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6727, line: 242, column: 3)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6727, line: 242, column: 3)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6727, line: 242, column: 3)
!6991 = distinct !DILexicalBlock(scope: !6982, file: !6727, line: 241, column: 49)
!6992 = !DILocation(line: 243, column: 2, scope: !6991)
!6993 = !DILocation(line: 244, column: 12, scope: !6957)
!6994 = !DILocation(line: 244, column: 17, scope: !6957)
!6995 = !DILocation(line: 244, column: 42, scope: !6957)
!6996 = !DILocation(line: 244, column: 6, scope: !6948)
!6997 = !DILocation(line: 245, column: 3, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6727, line: 245, column: 3)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6727, line: 245, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6727, line: 245, column: 3)
!7001 = distinct !DILexicalBlock(scope: !6956, file: !6727, line: 245, column: 3)
!7002 = !DILocation(line: 254, column: 24, scope: !6956)
!7003 = !DILocation(line: 0, scope: !6956)
!7004 = !DILocation(line: 256, column: 13, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6956, file: !6727, line: 256, column: 7)
!7006 = !DILocation(line: 256, column: 18, scope: !7005)
!7007 = !DILocation(line: 256, column: 44, scope: !7005)
!7008 = !DILocation(line: 256, column: 7, scope: !6956)
!7009 = !DILocation(line: 258, column: 4, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6727, line: 258, column: 4)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6727, line: 258, column: 4)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6727, line: 258, column: 4)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6727, line: 258, column: 4)
!7014 = distinct !DILexicalBlock(scope: !7005, file: !6727, line: 256, column: 50)
!7015 = !DILocation(line: 259, column: 24, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7014, file: !6727, line: 259, column: 8)
!7017 = !DILocation(line: 259, column: 8, scope: !7014)
!7018 = !DILocation(line: 261, column: 15, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !6727, line: 259, column: 30)
!7020 = !DILocation(line: 262, column: 4, scope: !7019)
!7021 = !DILocation(line: 265, column: 12, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 265, column: 6)
!7023 = !DILocation(line: 265, column: 17, scope: !7022)
!7024 = !DILocation(line: 265, column: 42, scope: !7022)
!7025 = !DILocation(line: 265, column: 6, scope: !6948)
!7026 = !DILocation(line: 266, column: 3, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6727, line: 266, column: 3)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6727, line: 266, column: 3)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !6727, line: 266, column: 3)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6727, line: 266, column: 3)
!7031 = distinct !DILexicalBlock(scope: !7022, file: !6727, line: 265, column: 48)
!7032 = !DILocation(line: 267, column: 2, scope: !7031)
!7033 = !DILocation(line: 269, column: 12, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 269, column: 6)
!7035 = !DILocation(line: 269, column: 17, scope: !7034)
!7036 = !DILocation(line: 269, column: 41, scope: !7034)
!7037 = !DILocation(line: 269, column: 6, scope: !6948)
!7038 = !DILocation(line: 270, column: 3, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6727, line: 270, column: 3)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6727, line: 270, column: 3)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !6727, line: 270, column: 3)
!7042 = distinct !DILexicalBlock(scope: !7043, file: !6727, line: 270, column: 3)
!7043 = distinct !DILexicalBlock(scope: !7034, file: !6727, line: 269, column: 47)
!7044 = !DILocation(line: 272, column: 2, scope: !7043)
!7045 = !DILocation(line: 288, column: 12, scope: !6962)
!7046 = !DILocation(line: 288, column: 17, scope: !6962)
!7047 = !DILocation(line: 288, column: 41, scope: !6962)
!7048 = !DILocation(line: 289, column: 9, scope: !6962)
!7049 = !DILocation(line: 289, column: 14, scope: !6962)
!7050 = !DILocation(line: 288, column: 6, scope: !6948)
!7051 = !DILocation(line: 308, column: 12, scope: !6960)
!7052 = !DILocation(line: 308, column: 17, scope: !6960)
!7053 = !DILocation(line: 308, column: 7, scope: !6961)
!7054 = !DILocation(line: 310, column: 6, scope: !6959)
!7055 = !DILocation(line: 309, column: 29, scope: !6959)
!7056 = !DILocation(line: 0, scope: !6959)
!7057 = !DILocation(line: 312, column: 8, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !6959, file: !6727, line: 312, column: 8)
!7059 = !DILocation(line: 312, column: 8, scope: !6959)
!7060 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7061, file: !6417, line: 1099, type: !110)
!7061 = distinct !DISubprogram(name: "__set_PSP", scope: !6417, file: !6417, line: 1099, type: !6514, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !7062)
!7062 = !{!7060}
!7063 = !DILocation(line: 0, scope: !7061, inlinedAt: !7064)
!7064 = distinct !DILocation(line: 338, column: 5, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7058, file: !6727, line: 312, column: 23)
!7066 = !DILocation(line: 1101, column: 3, scope: !7061, inlinedAt: !7064)
!7067 = !{i64 3577314}
!7068 = !DILocation(line: 341, column: 4, scope: !7065)
!7069 = !DILocation(line: 342, column: 5, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6727, line: 342, column: 5)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6727, line: 342, column: 5)
!7072 = distinct !DILexicalBlock(scope: !7058, file: !6727, line: 341, column: 11)
!7073 = !DILocation(line: 342, column: 5, scope: !7071)
!7074 = !DILocation(line: 342, column: 5, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7070, file: !6727, line: 342, column: 5)
!7076 = !DILocation(line: 360, column: 12, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !6948, file: !6727, line: 360, column: 6)
!7078 = !DILocation(line: 360, column: 17, scope: !7077)
!7079 = !DILocation(line: 360, column: 41, scope: !7077)
!7080 = !DILocation(line: 360, column: 6, scope: !6948)
!7081 = !DILocation(line: 361, column: 14, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !6727, line: 360, column: 47)
!7083 = !DILocation(line: 362, column: 2, scope: !7082)
!7084 = !DILocation(line: 366, column: 12, scope: !6948)
!7085 = !DILocation(line: 369, column: 15, scope: !6948)
!7086 = !DILocation(line: 371, column: 2, scope: !6948)
!7087 = distinct !DISubprogram(name: "bus_fault", scope: !6727, file: !6727, line: 383, type: !7088, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !7090)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{!109, !2746, !109, !6800}
!7090 = !{!7091, !7092, !7093, !7094, !7095}
!7091 = !DILocalVariable(name: "esf", arg: 1, scope: !7087, file: !6727, line: 383, type: !2746)
!7092 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7087, file: !6727, line: 383, type: !109)
!7093 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7087, file: !6727, line: 383, type: !6800)
!7094 = !DILocalVariable(name: "reason", scope: !7087, file: !6727, line: 385, type: !110)
!7095 = !DILocalVariable(name: "bfar", scope: !7096, file: !6727, line: 405, type: !110)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6727, line: 395, column: 42)
!7097 = distinct !DILexicalBlock(scope: !7087, file: !6727, line: 395, column: 6)
!7098 = !DILocation(line: 0, scope: !7087)
!7099 = !DILocation(line: 387, column: 2, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !6727, line: 387, column: 2)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6727, line: 387, column: 2)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6727, line: 387, column: 2)
!7103 = distinct !DILexicalBlock(scope: !7087, file: !6727, line: 387, column: 2)
!7104 = !DILocation(line: 389, column: 11, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7087, file: !6727, line: 389, column: 6)
!7106 = !DILocation(line: 389, column: 16, scope: !7105)
!7107 = !DILocation(line: 389, column: 6, scope: !7087)
!7108 = !DILocation(line: 390, column: 3, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !6727, line: 390, column: 3)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !6727, line: 390, column: 3)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6727, line: 390, column: 3)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6727, line: 390, column: 3)
!7113 = distinct !DILexicalBlock(scope: !7105, file: !6727, line: 389, column: 39)
!7114 = !DILocation(line: 391, column: 2, scope: !7113)
!7115 = !DILocation(line: 392, column: 11, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7087, file: !6727, line: 392, column: 6)
!7117 = !DILocation(line: 392, column: 16, scope: !7116)
!7118 = !DILocation(line: 392, column: 6, scope: !7087)
!7119 = !DILocation(line: 393, column: 3, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !6727, line: 393, column: 3)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6727, line: 393, column: 3)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !6727, line: 393, column: 3)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !6727, line: 393, column: 3)
!7124 = distinct !DILexicalBlock(scope: !7116, file: !6727, line: 392, column: 41)
!7125 = !DILocation(line: 394, column: 2, scope: !7124)
!7126 = !DILocation(line: 395, column: 11, scope: !7097)
!7127 = !DILocation(line: 395, column: 16, scope: !7097)
!7128 = !DILocation(line: 395, column: 6, scope: !7087)
!7129 = !DILocation(line: 396, column: 3, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6727, line: 396, column: 3)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6727, line: 396, column: 3)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !6727, line: 396, column: 3)
!7133 = distinct !DILexicalBlock(scope: !7096, file: !6727, line: 396, column: 3)
!7134 = !DILocation(line: 405, column: 3, scope: !7096)
!7135 = !DILocation(line: 0, scope: !7096)
!7136 = !DILocation(line: 407, column: 13, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7096, file: !6727, line: 407, column: 7)
!7138 = !DILocation(line: 407, column: 18, scope: !7137)
!7139 = !DILocation(line: 407, column: 44, scope: !7137)
!7140 = !DILocation(line: 407, column: 7, scope: !7096)
!7141 = !DILocation(line: 408, column: 4, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !6727, line: 408, column: 4)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6727, line: 408, column: 4)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !6727, line: 408, column: 4)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !6727, line: 408, column: 4)
!7146 = distinct !DILexicalBlock(scope: !7137, file: !6727, line: 407, column: 50)
!7147 = !DILocation(line: 409, column: 24, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7146, file: !6727, line: 409, column: 8)
!7149 = !DILocation(line: 409, column: 8, scope: !7146)
!7150 = !DILocation(line: 411, column: 15, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7148, file: !6727, line: 409, column: 30)
!7152 = !DILocation(line: 412, column: 4, scope: !7151)
!7153 = !DILocation(line: 415, column: 11, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7087, file: !6727, line: 415, column: 6)
!7155 = !DILocation(line: 415, column: 16, scope: !7154)
!7156 = !DILocation(line: 415, column: 6, scope: !7087)
!7157 = !DILocation(line: 416, column: 3, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !6727, line: 416, column: 3)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6727, line: 416, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6727, line: 416, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6727, line: 416, column: 3)
!7162 = distinct !DILexicalBlock(scope: !7154, file: !6727, line: 415, column: 44)
!7163 = !DILocation(line: 417, column: 2, scope: !7162)
!7164 = !DILocation(line: 418, column: 12, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7087, file: !6727, line: 418, column: 6)
!7166 = !DILocation(line: 418, column: 17, scope: !7165)
!7167 = !DILocation(line: 418, column: 41, scope: !7165)
!7168 = !DILocation(line: 418, column: 6, scope: !7087)
!7169 = !DILocation(line: 423, column: 18, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7165, file: !6727, line: 423, column: 13)
!7171 = !DILocation(line: 423, column: 23, scope: !7170)
!7172 = !DILocation(line: 423, column: 13, scope: !7165)
!7173 = !DILocation(line: 0, scope: !7165)
!7174 = !DILocation(line: 524, column: 12, scope: !7087)
!7175 = !DILocation(line: 526, column: 15, scope: !7087)
!7176 = !DILocation(line: 528, column: 2, scope: !7087)
!7177 = distinct !DISubprogram(name: "usage_fault", scope: !6727, file: !6727, line: 539, type: !7178, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !7182)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!110, !7180}
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7181, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2747)
!7182 = !{!7183, !7184}
!7183 = !DILocalVariable(name: "esf", arg: 1, scope: !7177, file: !6727, line: 539, type: !7180)
!7184 = !DILocalVariable(name: "reason", scope: !7177, file: !6727, line: 541, type: !110)
!7185 = !DILocation(line: 0, scope: !7177)
!7186 = !DILocation(line: 543, column: 2, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !6727, line: 543, column: 2)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6727, line: 543, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6727, line: 543, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 543, column: 2)
!7191 = !DILocation(line: 546, column: 12, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 546, column: 6)
!7193 = !DILocation(line: 546, column: 17, scope: !7192)
!7194 = !DILocation(line: 546, column: 43, scope: !7192)
!7195 = !DILocation(line: 546, column: 6, scope: !7177)
!7196 = !DILocation(line: 547, column: 3, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !6727, line: 547, column: 3)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !6727, line: 547, column: 3)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !6727, line: 547, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !6727, line: 547, column: 3)
!7201 = distinct !DILexicalBlock(scope: !7192, file: !6727, line: 546, column: 49)
!7202 = !DILocation(line: 548, column: 2, scope: !7201)
!7203 = !DILocation(line: 549, column: 12, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 549, column: 6)
!7205 = !DILocation(line: 549, column: 17, scope: !7204)
!7206 = !DILocation(line: 549, column: 43, scope: !7204)
!7207 = !DILocation(line: 549, column: 6, scope: !7177)
!7208 = !DILocation(line: 550, column: 3, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !6727, line: 550, column: 3)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !6727, line: 550, column: 3)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !6727, line: 550, column: 3)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !6727, line: 550, column: 3)
!7213 = distinct !DILexicalBlock(scope: !7204, file: !6727, line: 549, column: 49)
!7214 = !DILocation(line: 551, column: 2, scope: !7213)
!7215 = !DILocation(line: 567, column: 12, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 567, column: 6)
!7217 = !DILocation(line: 567, column: 17, scope: !7216)
!7218 = !DILocation(line: 567, column: 38, scope: !7216)
!7219 = !DILocation(line: 567, column: 6, scope: !7177)
!7220 = !DILocation(line: 568, column: 3, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !6727, line: 568, column: 3)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !6727, line: 568, column: 3)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !6727, line: 568, column: 3)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !6727, line: 568, column: 3)
!7225 = distinct !DILexicalBlock(scope: !7216, file: !6727, line: 567, column: 44)
!7226 = !DILocation(line: 569, column: 2, scope: !7225)
!7227 = !DILocation(line: 570, column: 12, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 570, column: 6)
!7229 = !DILocation(line: 570, column: 17, scope: !7228)
!7230 = !DILocation(line: 570, column: 39, scope: !7228)
!7231 = !DILocation(line: 570, column: 6, scope: !7177)
!7232 = !DILocation(line: 571, column: 3, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !6727, line: 571, column: 3)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !6727, line: 571, column: 3)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !6727, line: 571, column: 3)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !6727, line: 571, column: 3)
!7237 = distinct !DILexicalBlock(scope: !7228, file: !6727, line: 570, column: 45)
!7238 = !DILocation(line: 572, column: 2, scope: !7237)
!7239 = !DILocation(line: 573, column: 12, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 573, column: 6)
!7241 = !DILocation(line: 573, column: 17, scope: !7240)
!7242 = !DILocation(line: 573, column: 42, scope: !7240)
!7243 = !DILocation(line: 573, column: 6, scope: !7177)
!7244 = !DILocation(line: 574, column: 3, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !6727, line: 574, column: 3)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !6727, line: 574, column: 3)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !6727, line: 574, column: 3)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !6727, line: 574, column: 3)
!7249 = distinct !DILexicalBlock(scope: !7240, file: !6727, line: 573, column: 48)
!7250 = !DILocation(line: 575, column: 2, scope: !7249)
!7251 = !DILocation(line: 576, column: 12, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7177, file: !6727, line: 576, column: 6)
!7253 = !DILocation(line: 576, column: 17, scope: !7252)
!7254 = !DILocation(line: 576, column: 44, scope: !7252)
!7255 = !DILocation(line: 576, column: 6, scope: !7177)
!7256 = !DILocation(line: 577, column: 3, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !6727, line: 577, column: 3)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !6727, line: 577, column: 3)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !6727, line: 577, column: 3)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !6727, line: 577, column: 3)
!7261 = distinct !DILexicalBlock(scope: !7252, file: !6727, line: 576, column: 50)
!7262 = !DILocation(line: 578, column: 2, scope: !7261)
!7263 = !DILocation(line: 581, column: 12, scope: !7177)
!7264 = !DILocation(line: 583, column: 2, scope: !7177)
!7265 = distinct !DISubprogram(name: "debug_monitor", scope: !6727, file: !6727, line: 632, type: !7266, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !7268)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{null, !2746, !6800}
!7268 = !{!7269, !7270}
!7269 = !DILocalVariable(name: "esf", arg: 1, scope: !7265, file: !6727, line: 632, type: !2746)
!7270 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7265, file: !6727, line: 632, type: !6800)
!7271 = !DILocation(line: 0, scope: !7265)
!7272 = !DILocation(line: 634, column: 15, scope: !7265)
!7273 = !DILocation(line: 636, column: 2, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !6727, line: 636, column: 2)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !6727, line: 636, column: 2)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !6727, line: 636, column: 2)
!7277 = distinct !DILexicalBlock(scope: !7265, file: !6727, line: 636, column: 2)
!7278 = !DILocation(line: 652, column: 1, scope: !7265)
!7279 = distinct !DISubprogram(name: "reserved_exception", scope: !6727, file: !6727, line: 776, type: !7280, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !7282)
!7280 = !DISubroutineType(types: !7281)
!7281 = !{null, !7180, !109}
!7282 = !{!7283, !7284}
!7283 = !DILocalVariable(name: "esf", arg: 1, scope: !7279, file: !6727, line: 776, type: !7180)
!7284 = !DILocalVariable(name: "fault", arg: 2, scope: !7279, file: !6727, line: 776, type: !109)
!7285 = !DILocation(line: 0, scope: !7279)
!7286 = !DILocation(line: 780, column: 2, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !6727, line: 780, column: 2)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !6727, line: 780, column: 2)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !6727, line: 780, column: 2)
!7290 = distinct !DILexicalBlock(scope: !7279, file: !6727, line: 780, column: 2)
!7291 = !DILocation(line: 783, column: 1, scope: !7279)
!7292 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6727, file: !6727, line: 658, type: !7293, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !7295)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!347, !2746}
!7295 = !{!7296, !7297, !7298}
!7296 = !DILocalVariable(name: "esf", arg: 1, scope: !7292, file: !6727, line: 658, type: !2746)
!7297 = !DILocalVariable(name: "ret_addr", scope: !7292, file: !6727, line: 660, type: !2789)
!7298 = !DILocalVariable(name: "fault_insn", scope: !7292, file: !6727, line: 686, type: !194)
!7299 = !DILocation(line: 0, scope: !7292)
!7300 = !DILocation(line: 660, column: 46, scope: !7292)
!7301 = !DILocation(line: 660, column: 23, scope: !7292)
!7302 = !DILocation(line: 682, column: 11, scope: !7292)
!7303 = !DILocation(line: 271, column: 3, scope: !7304, inlinedAt: !7305)
!7304 = distinct !DISubprogram(name: "__DSB", scope: !6417, file: !6417, line: 269, type: !3094, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !2034)
!7305 = distinct !DILocation(line: 683, column: 2, scope: !7292)
!7306 = !{i64 3553449}
!7307 = !DILocation(line: 260, column: 3, scope: !7308, inlinedAt: !7309)
!7308 = distinct !DISubprogram(name: "__ISB", scope: !6417, file: !6417, line: 258, type: !3094, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !2034)
!7309 = distinct !DILocation(line: 684, column: 2, scope: !7292)
!7310 = !{i64 3553166}
!7311 = !DILocation(line: 686, column: 35, scope: !7292)
!7312 = !DILocation(line: 686, column: 24, scope: !7292)
!7313 = !DILocation(line: 688, column: 11, scope: !7292)
!7314 = !DILocation(line: 271, column: 3, scope: !7304, inlinedAt: !7315)
!7315 = distinct !DILocation(line: 689, column: 2, scope: !7292)
!7316 = !DILocation(line: 260, column: 3, scope: !7308, inlinedAt: !7317)
!7317 = distinct !DILocation(line: 690, column: 2, scope: !7292)
!7318 = !DILocation(line: 693, column: 45, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7292, file: !6727, line: 693, column: 6)
!7320 = !DILocation(line: 699, column: 1, scope: !7292)
!7321 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6727, file: !6727, line: 1107, type: !3094, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !2034)
!7322 = !DILocation(line: 1111, column: 11, scope: !7321)
!7323 = !DILocation(line: 1136, column: 1, scope: !7321)
!7324 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7325, file: !7325, line: 26, type: !3094, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7326)
!7325 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7326 = !{!7327}
!7327 = !DILocalVariable(name: "irq", scope: !7324, file: !7325, line: 28, type: !109)
!7328 = !DILocation(line: 0, scope: !7324)
!7329 = !DILocation(line: 30, column: 2, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7324, file: !7325, line: 30, column: 2)
!7331 = !DILocation(line: 31, column: 3, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !7325, line: 30, column: 39)
!7333 = distinct !DILexicalBlock(scope: !7330, file: !7325, line: 30, column: 2)
!7334 = !DILocation(line: 30, column: 35, scope: !7333)
!7335 = !DILocation(line: 30, column: 13, scope: !7333)
!7336 = distinct !{!7336, !7329, !7337}
!7337 = !DILocation(line: 32, column: 2, scope: !7330)
!7338 = !DILocation(line: 33, column: 1, scope: !7324)
!7339 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6457, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7340)
!7340 = !{!7341, !7342}
!7341 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7339, file: !535, line: 1814, type: !792)
!7342 = !DILocalVariable(name: "priority", arg: 2, scope: !7339, file: !535, line: 1814, type: !110)
!7343 = !DILocation(line: 0, scope: !7339)
!7344 = !DILocation(line: 1816, column: 7, scope: !7339)
!7345 = !DILocation(line: 0, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7339, file: !535, line: 1816, column: 7)
!7347 = !DILocation(line: 1824, column: 1, scope: !7339)
!7348 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7349, file: !7349, line: 27, type: !7350, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7456)
!7349 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7350 = !DISubroutineType(types: !7351)
!7351 = !{null, !7352}
!7352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !7353)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 32)
!7354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !7355)
!7355 = !{!7356, !7414, !7426, !7427, !7428, !7429, !7430, !7436, !7451}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7354, file: !158, line: 247, baseType: !7357, size: 384)
!7357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !7358)
!7358 = !{!7359, !7383, !7390, !7391, !7392, !7401, !7402, !7403}
!7359 = !DIDerivedType(tag: DW_TAG_member, scope: !7357, file: !158, line: 60, baseType: !7360, size: 64)
!7360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7357, file: !158, line: 60, size: 64, elements: !7361)
!7361 = !{!7362, !7377}
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7360, file: !158, line: 61, baseType: !7363, size: 64)
!7363 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7364)
!7364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7365)
!7365 = !{!7366, !7372}
!7366 = !DIDerivedType(tag: DW_TAG_member, scope: !7364, file: !127, line: 38, baseType: !7367, size: 32)
!7367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7364, file: !127, line: 38, size: 32, elements: !7368)
!7368 = !{!7369, !7371}
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7367, file: !127, line: 39, baseType: !7370, size: 32)
!7370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7364, size: 32)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7367, file: !127, line: 40, baseType: !7370, size: 32)
!7372 = !DIDerivedType(tag: DW_TAG_member, scope: !7364, file: !127, line: 42, baseType: !7373, size: 32, offset: 32)
!7373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7364, file: !127, line: 42, size: 32, elements: !7374)
!7374 = !{!7375, !7376}
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7373, file: !127, line: 43, baseType: !7370, size: 32)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7373, file: !127, line: 44, baseType: !7370, size: 32)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7360, file: !158, line: 62, baseType: !7378, size: 64)
!7378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !7379)
!7379 = !{!7380}
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7378, file: !170, line: 50, baseType: !7381, size: 64)
!7381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7382, size: 64, elements: !175)
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 32)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7357, file: !158, line: 68, baseType: !7384, size: 32, offset: 64)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7385, size: 32)
!7385 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7386)
!7386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7387)
!7387 = !{!7388}
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7386, file: !122, line: 232, baseType: !7389, size: 64)
!7389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7364)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7357, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7357, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!7392 = !DIDerivedType(tag: DW_TAG_member, scope: !7357, file: !158, line: 90, baseType: !7393, size: 16, offset: 112)
!7393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7357, file: !158, line: 90, size: 16, elements: !7394)
!7394 = !{!7395, !7400}
!7395 = !DIDerivedType(tag: DW_TAG_member, scope: !7393, file: !158, line: 91, baseType: !7396, size: 16)
!7396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7393, file: !158, line: 91, size: 16, elements: !7397)
!7397 = !{!7398, !7399}
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7396, file: !158, line: 96, baseType: !190, size: 8)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7396, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7393, file: !158, line: 100, baseType: !194, size: 16)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7357, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7357, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7357, file: !158, line: 131, baseType: !7404, size: 192, offset: 192)
!7404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7405)
!7405 = !{!7406, !7407, !7413}
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7404, file: !122, line: 245, baseType: !7363, size: 64)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7404, file: !122, line: 246, baseType: !7408, size: 32, offset: 64)
!7408 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7409)
!7409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7410, size: 32)
!7410 = !DISubroutineType(types: !7411)
!7411 = !{null, !7412}
!7412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7404, size: 32)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7404, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7354, file: !158, line: 250, baseType: !7415, size: 288, offset: 384)
!7415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !7416)
!7416 = !{!7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7415, file: !211, line: 26, baseType: !110, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7415, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7415, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7415, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7415, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7415, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7415, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7415, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7415, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7354, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7354, file: !158, line: 256, baseType: !7385, size: 64, offset: 704)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7354, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7354, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7354, file: !158, line: 300, baseType: !7431, size: 96, offset: 1056)
!7431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !7432)
!7432 = !{!7433, !7434, !7435}
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7431, file: !158, line: 153, baseType: !22, size: 32)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7431, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7431, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7354, file: !158, line: 325, baseType: !7437, size: 32, offset: 1152)
!7437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7438, size: 32)
!7438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7439)
!7439 = !{!7440, !7446, !7447}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7438, file: !118, line: 5074, baseType: !7441, size: 96)
!7441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !7442)
!7442 = !{!7443, !7444, !7445}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7441, file: !243, line: 57, baseType: !246, size: 32)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7441, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7441, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7438, file: !118, line: 5075, baseType: !7385, size: 64, offset: 96)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7438, file: !118, line: 5076, baseType: !7448, size: 32, offset: 160)
!7448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !7449)
!7449 = !{!7450}
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7448, file: !253, line: 52, baseType: !22, size: 32)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7354, file: !158, line: 343, baseType: !7452, size: 64, offset: 1184)
!7452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !7453)
!7453 = !{!7454, !7455}
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7452, file: !211, line: 63, baseType: !110, size: 32)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7452, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!7456 = !{!7457}
!7457 = !DILocalVariable(name: "thread", arg: 1, scope: !7348, file: !7349, line: 27, type: !7352)
!7458 = !DILocation(line: 0, scope: !7348)
!7459 = !DILocation(line: 29, column: 6, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7348, file: !7349, line: 29, column: 6)
!7461 = !DILocation(line: 29, column: 15, scope: !7460)
!7462 = !DILocation(line: 29, column: 6, scope: !7348)
!7463 = !DILocation(line: 1031, column: 3, scope: !7464, inlinedAt: !7467)
!7464 = distinct !DISubprogram(name: "__get_IPSR", scope: !6417, file: !6417, line: 1027, type: !6504, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7465)
!7465 = !{!7466}
!7466 = !DILocalVariable(name: "result", scope: !7464, file: !6417, line: 1029, type: !110)
!7467 = distinct !DILocation(line: 48, column: 10, scope: !7468, inlinedAt: !7472)
!7468 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7469, file: !7469, line: 46, type: !7470, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2034)
!7469 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7470 = !DISubroutineType(types: !7471)
!7471 = !{!347}
!7472 = distinct !DILocation(line: 30, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !7349, line: 30, column: 7)
!7474 = distinct !DILexicalBlock(scope: !7460, file: !7349, line: 29, column: 26)
!7475 = !{i64 3542297}
!7476 = !DILocation(line: 0, scope: !7464, inlinedAt: !7467)
!7477 = !DILocation(line: 48, column: 9, scope: !7468, inlinedAt: !7472)
!7478 = !DILocation(line: 30, column: 7, scope: !7474)
!7479 = !DILocation(line: 42, column: 14, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7473, file: !7349, line: 30, column: 25)
!7481 = !DILocation(line: 48, column: 15, scope: !7480)
!7482 = !DILocation(line: 49, column: 3, scope: !7480)
!7483 = !DILocation(line: 52, column: 2, scope: !7348)
!7484 = !DILocation(line: 53, column: 1, scope: !7348)
!7485 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3094, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2034)
!7486 = !DILocation(line: 134, column: 2, scope: !7485)
!7487 = !DILocation(line: 156, column: 1, scope: !7485)
!7488 = !DILocation(line: 0, scope: !393)
!7489 = !DILocation(line: 289, column: 36, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7491 = !DILocation(line: 289, column: 42, scope: !7490)
!7492 = !DILocation(line: 300, column: 36, scope: !393)
!7493 = !DILocation(line: 301, column: 35, scope: !393)
!7494 = !DILocation(line: 302, column: 37, scope: !393)
!7495 = !DILocation(line: 311, column: 2, scope: !393)
!7496 = !DILocation(line: 316, column: 1, scope: !393)
!7497 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3094, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2034)
!7498 = !DILocation(line: 188, column: 12, scope: !7497)
!7499 = !DILocation(line: 271, column: 3, scope: !7500, inlinedAt: !7501)
!7500 = distinct !DISubprogram(name: "__DSB", scope: !6417, file: !6417, line: 269, type: !3094, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2034)
!7501 = distinct !DILocation(line: 192, column: 2, scope: !7497)
!7502 = !{i64 3705963}
!7503 = !DILocation(line: 260, column: 3, scope: !7504, inlinedAt: !7505)
!7504 = distinct !DISubprogram(name: "__ISB", scope: !6417, file: !6417, line: 258, type: !3094, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2034)
!7505 = distinct !DILocation(line: 193, column: 2, scope: !7497)
!7506 = !{i64 3705680}
!7507 = !DILocation(line: 194, column: 1, scope: !7497)
!7508 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3094, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2034)
!7509 = !DILocation(line: 282, column: 3, scope: !7510, inlinedAt: !7511)
!7510 = distinct !DISubprogram(name: "__DMB", scope: !6417, file: !6417, line: 280, type: !3094, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2034)
!7511 = distinct !DILocation(line: 202, column: 2, scope: !7508)
!7512 = !{i64 3706239}
!7513 = !DILocation(line: 205, column: 12, scope: !7508)
!7514 = !DILocation(line: 206, column: 1, scope: !7508)
!7515 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7516, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7529)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{null, !7518, !1816, !6694, !6694}
!7518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7519, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7520)
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7521)
!7521 = !{!7522, !7523, !7524}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7520, file: !507, line: 53, baseType: !22, size: 32)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7520, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7520, file: !507, line: 55, baseType: !7525, size: 32, offset: 64)
!7525 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7526)
!7526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7527)
!7527 = !{!7528}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7526, file: !513, line: 150, baseType: !110, size: 32)
!7529 = !{!7530, !7531, !7532, !7533}
!7530 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7515, file: !563, line: 276, type: !7518)
!7531 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7515, file: !563, line: 276, type: !1816)
!7532 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7515, file: !563, line: 277, type: !6694)
!7533 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7515, file: !563, line: 277, type: !6694)
!7534 = !DILocation(line: 0, scope: !7515)
!7535 = !DILocation(line: 279, column: 6, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7515, file: !563, line: 279, column: 6)
!7537 = !DILocation(line: 280, column: 57, scope: !7536)
!7538 = !DILocation(line: 279, column: 6, scope: !7515)
!7539 = !DILocation(line: 282, column: 3, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !563, line: 282, column: 3)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !563, line: 282, column: 3)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !563, line: 282, column: 3)
!7543 = distinct !DILexicalBlock(scope: !7536, file: !563, line: 280, column: 69)
!7544 = !DILocation(line: 285, column: 1, scope: !7515)
!7545 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7546, file: !7546, line: 220, type: !7547, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7549)
!7546 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7547 = !DISubroutineType(types: !7548)
!7548 = !{!109, !7518, !1816, !6694, !6694}
!7549 = !{!7550, !7551, !7552, !7553, !7554}
!7550 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7545, file: !7546, line: 221, type: !7518)
!7551 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7545, file: !7546, line: 221, type: !1816)
!7552 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7545, file: !7546, line: 222, type: !6694)
!7553 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7545, file: !7546, line: 223, type: !6694)
!7554 = !DILocalVariable(name: "mpu_reg_index", scope: !7545, file: !7546, line: 225, type: !109)
!7555 = !DILocation(line: 0, scope: !7545)
!7556 = !DILocation(line: 225, column: 22, scope: !7545)
!7557 = !DILocation(line: 233, column: 18, scope: !7545)
!7558 = !DILocation(line: 236, column: 23, scope: !7545)
!7559 = !DILocation(line: 236, column: 21, scope: !7545)
!7560 = !DILocation(line: 238, column: 2, scope: !7545)
!7561 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7562, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!109, !7518, !180, !180, !347}
!7564 = !{!7565, !7566, !7567, !7568, !7569, !7570}
!7565 = !DILocalVariable(name: "regions", arg: 1, scope: !7561, file: !563, line: 106, type: !7518)
!7566 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7561, file: !563, line: 106, type: !180)
!7567 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7561, file: !563, line: 106, type: !180)
!7568 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7561, file: !563, line: 107, type: !347)
!7569 = !DILocalVariable(name: "i", scope: !7561, file: !563, line: 109, type: !109)
!7570 = !DILocalVariable(name: "reg_index", scope: !7561, file: !563, line: 110, type: !109)
!7571 = !DILocation(line: 0, scope: !7561)
!7572 = !DILocation(line: 110, column: 18, scope: !7561)
!7573 = !DILocation(line: 112, column: 16, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !563, line: 112, column: 2)
!7575 = distinct !DILexicalBlock(scope: !7561, file: !563, line: 112, column: 2)
!7576 = !DILocation(line: 112, column: 2, scope: !7575)
!7577 = !DILocation(line: 113, column: 7, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !563, line: 113, column: 7)
!7579 = distinct !DILexicalBlock(scope: !7574, file: !563, line: 112, column: 36)
!7580 = !DILocation(line: 113, column: 18, scope: !7578)
!7581 = !DILocation(line: 113, column: 23, scope: !7578)
!7582 = !DILocation(line: 113, column: 7, scope: !7579)
!7583 = !DILocation(line: 118, column: 23, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7579, file: !563, line: 118, column: 7)
!7585 = !DILocation(line: 119, column: 7, scope: !7584)
!7586 = !DILocation(line: 118, column: 7, scope: !7579)
!7587 = !DILocation(line: 120, column: 4, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !563, line: 120, column: 4)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !563, line: 120, column: 4)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !563, line: 120, column: 4)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !563, line: 120, column: 4)
!7592 = distinct !DILexicalBlock(scope: !7584, file: !563, line: 119, column: 45)
!7593 = !DILocation(line: 121, column: 4, scope: !7592)
!7594 = !DILocation(line: 124, column: 36, scope: !7579)
!7595 = !DILocation(line: 124, column: 15, scope: !7579)
!7596 = !DILocation(line: 126, column: 17, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7579, file: !563, line: 126, column: 7)
!7598 = !DILocation(line: 126, column: 7, scope: !7579)
!7599 = !DILocation(line: 131, column: 12, scope: !7579)
!7600 = !DILocation(line: 132, column: 2, scope: !7579)
!7601 = !DILocation(line: 112, column: 32, scope: !7574)
!7602 = distinct !{!7602, !7576, !7603}
!7603 = !DILocation(line: 132, column: 2, scope: !7575)
!7604 = !DILocation(line: 135, column: 1, scope: !7561)
!7605 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7546, file: !7546, line: 63, type: !7606, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7608)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{!109, !7518}
!7608 = !{!7609, !7610}
!7609 = !DILocalVariable(name: "part", arg: 1, scope: !7605, file: !7546, line: 63, type: !7518)
!7610 = !DILocalVariable(name: "partition_is_valid", scope: !7605, file: !7546, line: 70, type: !109)
!7611 = !DILocation(line: 0, scope: !7605)
!7612 = !DILocation(line: 71, column: 11, scope: !7605)
!7613 = !DILocation(line: 71, column: 37, scope: !7605)
!7614 = !{i32 0, i32 33}
!7615 = !DILocation(line: 72, column: 3, scope: !7605)
!7616 = !DILocation(line: 71, column: 30, scope: !7605)
!7617 = !DILocation(line: 75, column: 11, scope: !7605)
!7618 = !DILocation(line: 75, column: 17, scope: !7605)
!7619 = !DILocation(line: 75, column: 38, scope: !7605)
!7620 = !DILocation(line: 77, column: 2, scope: !7605)
!7621 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7622, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7624)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!109, !1816, !7518}
!7624 = !{!7625, !7626, !7627}
!7625 = !DILocalVariable(name: "index", arg: 1, scope: !7621, file: !563, line: 79, type: !1816)
!7626 = !DILocalVariable(name: "new_region", arg: 2, scope: !7621, file: !563, line: 80, type: !7518)
!7627 = !DILocalVariable(name: "region_conf", scope: !7621, file: !563, line: 82, type: !552)
!7628 = !DILocation(line: 0, scope: !7621)
!7629 = !DILocation(line: 82, column: 2, scope: !7621)
!7630 = !DILocation(line: 82, column: 24, scope: !7621)
!7631 = !DILocation(line: 87, column: 33, scope: !7621)
!7632 = !DILocation(line: 87, column: 14, scope: !7621)
!7633 = !DILocation(line: 87, column: 19, scope: !7621)
!7634 = !DILocation(line: 91, column: 55, scope: !7621)
!7635 = !DILocation(line: 92, column: 16, scope: !7621)
!7636 = !DILocation(line: 92, column: 53, scope: !7621)
!7637 = !DILocation(line: 91, column: 2, scope: !7621)
!7638 = !DILocation(line: 95, column: 9, scope: !7621)
!7639 = !DILocation(line: 97, column: 1, scope: !7621)
!7640 = !DILocation(line: 95, column: 2, scope: !7621)
!7641 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7546, file: !7546, line: 113, type: !7642, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7647)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !7644, !7645, !110, !110}
!7644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7525)
!7647 = !{!7648, !7649, !7650, !7651}
!7648 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7641, file: !7546, line: 114, type: !7644)
!7649 = !DILocalVariable(name: "attr", arg: 2, scope: !7641, file: !7546, line: 115, type: !7645)
!7650 = !DILocalVariable(name: "base", arg: 3, scope: !7641, file: !7546, line: 115, type: !110)
!7651 = !DILocalVariable(name: "size", arg: 4, scope: !7641, file: !7546, line: 115, type: !110)
!7652 = !DILocation(line: 0, scope: !7641)
!7653 = !DILocation(line: 127, column: 23, scope: !7641)
!7654 = !DILocation(line: 127, column: 35, scope: !7641)
!7655 = !DILocation(line: 127, column: 33, scope: !7641)
!7656 = !DILocation(line: 127, column: 10, scope: !7641)
!7657 = !DILocation(line: 127, column: 15, scope: !7641)
!7658 = !DILocation(line: 129, column: 1, scope: !7641)
!7659 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7660, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7662)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{!109, !1816, !550}
!7662 = !{!7663, !7664}
!7663 = !DILocalVariable(name: "index", arg: 1, scope: !7659, file: !563, line: 57, type: !1816)
!7664 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7659, file: !563, line: 58, type: !550)
!7665 = !DILocation(line: 0, scope: !7659)
!7666 = !DILocation(line: 61, column: 6, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7659, file: !563, line: 61, column: 6)
!7668 = !DILocation(line: 61, column: 12, scope: !7667)
!7669 = !DILocation(line: 61, column: 6, scope: !7659)
!7670 = !DILocation(line: 64, column: 3, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !563, line: 64, column: 3)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !563, line: 64, column: 3)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !563, line: 64, column: 3)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !563, line: 64, column: 3)
!7675 = distinct !DILexicalBlock(scope: !7667, file: !563, line: 61, column: 40)
!7676 = !DILocation(line: 65, column: 3, scope: !7675)
!7677 = !DILocation(line: 71, column: 2, scope: !7659)
!7678 = !DILocation(line: 73, column: 2, scope: !7659)
!7679 = !DILocation(line: 74, column: 1, scope: !7659)
!7680 = distinct !DISubprogram(name: "region_init", scope: !7546, file: !7546, line: 29, type: !7681, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7683)
!7681 = !DISubroutineType(types: !7682)
!7682 = !{null, !6694, !550}
!7683 = !{!7684, !7685}
!7684 = !DILocalVariable(name: "index", arg: 1, scope: !7680, file: !7546, line: 29, type: !6694)
!7685 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7680, file: !7546, line: 30, type: !550)
!7686 = !DILocation(line: 0, scope: !7680)
!7687 = !DILocation(line: 33, column: 2, scope: !7680)
!7688 = !DILocation(line: 47, column: 28, scope: !7680)
!7689 = !DILocation(line: 47, column: 33, scope: !7680)
!7690 = !DILocation(line: 48, column: 26, scope: !7680)
!7691 = !DILocation(line: 47, column: 12, scope: !7680)
!7692 = !DILocation(line: 49, column: 32, scope: !7680)
!7693 = !DILocation(line: 49, column: 37, scope: !7680)
!7694 = !DILocation(line: 49, column: 12, scope: !7680)
!7695 = !DILocation(line: 53, column: 1, scope: !7680)
!7696 = distinct !DISubprogram(name: "set_region_number", scope: !7697, file: !7697, line: 32, type: !6514, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7698)
!7697 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7698 = !{!7699}
!7699 = !DILocalVariable(name: "index", arg: 1, scope: !7696, file: !7697, line: 32, type: !110)
!7700 = !DILocation(line: 0, scope: !7696)
!7701 = !DILocation(line: 34, column: 11, scope: !7696)
!7702 = !DILocation(line: 35, column: 1, scope: !7696)
!7703 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7546, file: !7546, line: 88, type: !7704, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7706)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!110, !110}
!7706 = !{!7707}
!7707 = !DILocalVariable(name: "size", arg: 1, scope: !7703, file: !7546, line: 88, type: !110)
!7708 = !DILocation(line: 0, scope: !7703)
!7709 = !DILocation(line: 91, column: 11, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7703, file: !7546, line: 91, column: 6)
!7711 = !DILocation(line: 91, column: 6, scope: !7703)
!7712 = !DILocation(line: 100, column: 11, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7703, file: !7546, line: 100, column: 6)
!7714 = !DILocation(line: 100, column: 6, scope: !7703)
!7715 = !DILocation(line: 104, column: 35, scope: !7703)
!7716 = !DILocation(line: 104, column: 16, scope: !7703)
!7717 = !DILocation(line: 104, column: 50, scope: !7703)
!7718 = !DILocation(line: 104, column: 72, scope: !7703)
!7719 = !DILocation(line: 104, column: 2, scope: !7703)
!7720 = !DILocation(line: 106, column: 1, scope: !7703)
!7721 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7722, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7724)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{null, !7518, !180}
!7724 = !{!7725, !7726}
!7725 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7721, file: !563, line: 308, type: !7518)
!7726 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7721, file: !563, line: 308, type: !180)
!7727 = !DILocation(line: 0, scope: !7721)
!7728 = !DILocation(line: 310, column: 6, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7721, file: !563, line: 310, column: 6)
!7730 = !DILocation(line: 311, column: 3, scope: !7729)
!7731 = !DILocation(line: 310, column: 6, scope: !7721)
!7732 = !DILocation(line: 313, column: 3, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !563, line: 313, column: 3)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !563, line: 313, column: 3)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !563, line: 313, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7729, file: !563, line: 311, column: 15)
!7737 = !DILocation(line: 316, column: 1, scope: !7721)
!7738 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7546, file: !7546, line: 249, type: !7739, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7741)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{!109, !7518, !180}
!7741 = !{!7742, !7743, !7744, !7745}
!7742 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7738, file: !7546, line: 250, type: !7518)
!7743 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7738, file: !7546, line: 250, type: !180)
!7744 = !DILocalVariable(name: "mpu_reg_index", scope: !7738, file: !7546, line: 252, type: !109)
!7745 = !DILocalVariable(name: "i", scope: !7746, file: !7546, line: 264, type: !109)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7546, line: 264, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7546, line: 261, column: 32)
!7748 = distinct !DILexicalBlock(scope: !7738, file: !7546, line: 261, column: 6)
!7749 = !DILocation(line: 0, scope: !7738)
!7750 = !DILocation(line: 252, column: 22, scope: !7738)
!7751 = !DILocation(line: 258, column: 18, scope: !7738)
!7752 = !DILocation(line: 261, column: 20, scope: !7748)
!7753 = !DILocation(line: 261, column: 6, scope: !7738)
!7754 = !DILocation(line: 0, scope: !7746)
!7755 = !DILocation(line: 265, column: 4, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7546, line: 264, column: 59)
!7757 = distinct !DILexicalBlock(scope: !7746, file: !7546, line: 264, column: 3)
!7758 = !DILocation(line: 264, column: 55, scope: !7757)
!7759 = !DILocation(line: 264, column: 33, scope: !7757)
!7760 = !DILocation(line: 264, column: 3, scope: !7746)
!7761 = distinct !{!7761, !7760, !7762}
!7762 = !DILocation(line: 266, column: 3, scope: !7746)
!7763 = !DILocation(line: 269, column: 2, scope: !7738)
!7764 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7765, file: !7765, line: 218, type: !6514, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7766)
!7765 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7766 = !{!7767}
!7767 = !DILocalVariable(name: "rnr", arg: 1, scope: !7764, file: !7765, line: 218, type: !110)
!7768 = !DILocation(line: 0, scope: !7764)
!7769 = !DILocation(line: 220, column: 12, scope: !7764)
!7770 = !DILocation(line: 221, column: 13, scope: !7764)
!7771 = !DILocation(line: 222, column: 1, scope: !7764)
!7772 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7773, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7775)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!109}
!7775 = !{!7776}
!7776 = !DILocalVariable(name: "r_index", scope: !7772, file: !563, line: 328, type: !110)
!7777 = !DILocation(line: 330, column: 17, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7772, file: !563, line: 330, column: 6)
!7779 = !DILocation(line: 330, column: 29, scope: !7778)
!7780 = !DILocation(line: 330, column: 6, scope: !7772)
!7781 = !DILocation(line: 337, column: 3, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !563, line: 337, column: 3)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !563, line: 337, column: 3)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !563, line: 337, column: 3)
!7785 = distinct !DILexicalBlock(scope: !7778, file: !563, line: 330, column: 50)
!7786 = !DILocation(line: 347, column: 2, scope: !7772)
!7787 = !DILocation(line: 0, scope: !7772)
!7788 = !DILocation(line: 364, column: 29, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !563, line: 364, column: 2)
!7790 = distinct !DILexicalBlock(scope: !7772, file: !563, line: 364, column: 2)
!7791 = !DILocation(line: 364, column: 2, scope: !7790)
!7792 = !DILocation(line: 365, column: 25, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7789, file: !563, line: 364, column: 66)
!7794 = !DILocation(line: 365, column: 3, scope: !7793)
!7795 = !DILocation(line: 364, column: 62, scope: !7789)
!7796 = distinct !{!7796, !7791, !7797}
!7797 = !DILocation(line: 366, column: 2, scope: !7790)
!7798 = !DILocation(line: 369, column: 23, scope: !7772)
!7799 = !DILocation(line: 369, column: 21, scope: !7772)
!7800 = !DILocation(line: 372, column: 2, scope: !7772)
!7801 = !DILocation(line: 433, column: 2, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !563, line: 433, column: 2)
!7803 = distinct !DILexicalBlock(scope: !7772, file: !563, line: 433, column: 2)
!7804 = !DILocation(line: 433, column: 2, scope: !7803)
!7805 = !DILocation(line: 433, column: 2, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !563, line: 433, column: 2)
!7807 = !DILocation(line: 444, column: 1, scope: !7772)
!7808 = distinct !DISubprogram(name: "strcpy", scope: !7809, file: !7809, line: 20, type: !7810, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7814)
!7809 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!285, !7812, !7813}
!7812 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7813 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7814 = !{!7815, !7816, !7817}
!7815 = !DILocalVariable(name: "d", arg: 1, scope: !7808, file: !7809, line: 20, type: !7812)
!7816 = !DILocalVariable(name: "s", arg: 2, scope: !7808, file: !7809, line: 20, type: !7813)
!7817 = !DILocalVariable(name: "dest", scope: !7808, file: !7809, line: 22, type: !285)
!7818 = !DILocation(line: 0, scope: !7808)
!7819 = !DILocation(line: 24, column: 9, scope: !7808)
!7820 = !DILocation(line: 24, column: 12, scope: !7808)
!7821 = !DILocation(line: 24, column: 2, scope: !7808)
!7822 = !DILocation(line: 25, column: 6, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7808, file: !7809, line: 24, column: 21)
!7824 = !DILocation(line: 26, column: 4, scope: !7823)
!7825 = !DILocation(line: 27, column: 4, scope: !7823)
!7826 = distinct !{!7826, !7821, !7827}
!7827 = !DILocation(line: 28, column: 2, scope: !7808)
!7828 = !DILocation(line: 30, column: 5, scope: !7808)
!7829 = !DILocation(line: 32, column: 2, scope: !7808)
!7830 = distinct !DISubprogram(name: "strncpy", scope: !7809, file: !7809, line: 42, type: !7831, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7833)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!285, !7812, !7813, !234}
!7833 = !{!7834, !7835, !7836, !7837}
!7834 = !DILocalVariable(name: "d", arg: 1, scope: !7830, file: !7809, line: 42, type: !7812)
!7835 = !DILocalVariable(name: "s", arg: 2, scope: !7830, file: !7809, line: 42, type: !7813)
!7836 = !DILocalVariable(name: "n", arg: 3, scope: !7830, file: !7809, line: 42, type: !234)
!7837 = !DILocalVariable(name: "dest", scope: !7830, file: !7809, line: 44, type: !285)
!7838 = !DILocation(line: 0, scope: !7830)
!7839 = !DILocation(line: 46, column: 12, scope: !7830)
!7840 = !DILocation(line: 46, column: 17, scope: !7830)
!7841 = !DILocation(line: 46, column: 20, scope: !7830)
!7842 = !DILocation(line: 46, column: 23, scope: !7830)
!7843 = !DILocation(line: 46, column: 2, scope: !7830)
!7844 = !DILocation(line: 47, column: 6, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7830, file: !7809, line: 46, column: 32)
!7846 = !DILocation(line: 48, column: 4, scope: !7845)
!7847 = !DILocation(line: 49, column: 4, scope: !7845)
!7848 = !DILocation(line: 50, column: 4, scope: !7845)
!7849 = distinct !{!7849, !7843, !7850}
!7850 = !DILocation(line: 51, column: 2, scope: !7830)
!7851 = !DILocation(line: 54, column: 6, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7830, file: !7809, line: 53, column: 16)
!7853 = !DILocation(line: 55, column: 4, scope: !7852)
!7854 = !DILocation(line: 56, column: 4, scope: !7852)
!7855 = !DILocation(line: 53, column: 11, scope: !7830)
!7856 = !DILocation(line: 53, column: 2, scope: !7830)
!7857 = distinct !{!7857, !7856, !7858}
!7858 = !DILocation(line: 57, column: 2, scope: !7830)
!7859 = !DILocation(line: 59, column: 2, scope: !7830)
!7860 = distinct !DISubprogram(name: "strchr", scope: !7809, file: !7809, line: 69, type: !7861, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7863)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!285, !279, !109}
!7863 = !{!7864, !7865, !7866}
!7864 = !DILocalVariable(name: "s", arg: 1, scope: !7860, file: !7809, line: 69, type: !279)
!7865 = !DILocalVariable(name: "c", arg: 2, scope: !7860, file: !7809, line: 69, type: !109)
!7866 = !DILocalVariable(name: "tmp", scope: !7860, file: !7809, line: 71, type: !150)
!7867 = !DILocation(line: 0, scope: !7860)
!7868 = !DILocation(line: 73, column: 2, scope: !7860)
!7869 = !DILocation(line: 73, column: 10, scope: !7860)
!7870 = !DILocation(line: 73, column: 13, scope: !7860)
!7871 = !DILocation(line: 73, column: 21, scope: !7860)
!7872 = !DILocation(line: 74, column: 4, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7860, file: !7809, line: 73, column: 38)
!7874 = distinct !{!7874, !7868, !7875}
!7875 = !DILocation(line: 75, column: 2, scope: !7860)
!7876 = !DILocation(line: 77, column: 9, scope: !7860)
!7877 = !DILocation(line: 77, column: 2, scope: !7860)
!7878 = distinct !DISubprogram(name: "strrchr", scope: !7809, file: !7809, line: 87, type: !7861, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7879)
!7879 = !{!7880, !7881, !7882}
!7880 = !DILocalVariable(name: "s", arg: 1, scope: !7878, file: !7809, line: 87, type: !279)
!7881 = !DILocalVariable(name: "c", arg: 2, scope: !7878, file: !7809, line: 87, type: !109)
!7882 = !DILocalVariable(name: "match", scope: !7878, file: !7809, line: 89, type: !285)
!7883 = !DILocation(line: 0, scope: !7878)
!7884 = !DILocation(line: 91, column: 2, scope: !7878)
!7885 = !DILocation(line: 92, column: 7, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !7809, line: 92, column: 7)
!7887 = distinct !DILexicalBlock(scope: !7878, file: !7809, line: 91, column: 5)
!7888 = !DILocation(line: 92, column: 10, scope: !7886)
!7889 = !DILocation(line: 92, column: 7, scope: !7887)
!7890 = !DILocation(line: 95, column: 13, scope: !7878)
!7891 = !DILocation(line: 95, column: 2, scope: !7887)
!7892 = distinct !{!7892, !7884, !7893}
!7893 = !DILocation(line: 95, column: 15, scope: !7878)
!7894 = !DILocation(line: 97, column: 2, scope: !7878)
!7895 = distinct !DISubprogram(name: "strlen", scope: !7809, file: !7809, line: 107, type: !7896, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!234, !279}
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "s", arg: 1, scope: !7895, file: !7809, line: 107, type: !279)
!7900 = !DILocalVariable(name: "n", scope: !7895, file: !7809, line: 109, type: !234)
!7901 = !DILocation(line: 0, scope: !7895)
!7902 = !DILocation(line: 111, column: 9, scope: !7895)
!7903 = !DILocation(line: 111, column: 12, scope: !7895)
!7904 = !DILocation(line: 111, column: 2, scope: !7895)
!7905 = !DILocation(line: 112, column: 4, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7895, file: !7809, line: 111, column: 21)
!7907 = !DILocation(line: 113, column: 4, scope: !7906)
!7908 = distinct !{!7908, !7904, !7909}
!7909 = !DILocation(line: 114, column: 2, scope: !7895)
!7910 = !DILocation(line: 116, column: 2, scope: !7895)
!7911 = distinct !DISubprogram(name: "strnlen", scope: !7809, file: !7809, line: 126, type: !7912, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7914)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!234, !279, !234}
!7914 = !{!7915, !7916, !7917}
!7915 = !DILocalVariable(name: "s", arg: 1, scope: !7911, file: !7809, line: 126, type: !279)
!7916 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7911, file: !7809, line: 126, type: !234)
!7917 = !DILocalVariable(name: "n", scope: !7911, file: !7809, line: 128, type: !234)
!7918 = !DILocation(line: 0, scope: !7911)
!7919 = !DILocation(line: 130, column: 9, scope: !7911)
!7920 = !DILocation(line: 130, column: 12, scope: !7911)
!7921 = !DILocation(line: 130, column: 20, scope: !7911)
!7922 = !DILocation(line: 130, column: 2, scope: !7911)
!7923 = !DILocation(line: 131, column: 4, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7911, file: !7809, line: 130, column: 35)
!7925 = !DILocation(line: 132, column: 4, scope: !7924)
!7926 = distinct !{!7926, !7922, !7927}
!7927 = !DILocation(line: 133, column: 2, scope: !7911)
!7928 = !DILocation(line: 135, column: 2, scope: !7911)
!7929 = distinct !DISubprogram(name: "strcmp", scope: !7809, file: !7809, line: 145, type: !7930, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!109, !279, !279}
!7932 = !{!7933, !7934}
!7933 = !DILocalVariable(name: "s1", arg: 1, scope: !7929, file: !7809, line: 145, type: !279)
!7934 = !DILocalVariable(name: "s2", arg: 2, scope: !7929, file: !7809, line: 145, type: !279)
!7935 = !DILocation(line: 0, scope: !7929)
!7936 = !DILocation(line: 147, column: 10, scope: !7929)
!7937 = !DILocation(line: 147, column: 17, scope: !7929)
!7938 = !DILocation(line: 147, column: 14, scope: !7929)
!7939 = !DILocation(line: 147, column: 22, scope: !7929)
!7940 = !DILocation(line: 148, column: 5, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7929, file: !7809, line: 147, column: 40)
!7942 = !DILocation(line: 149, column: 5, scope: !7941)
!7943 = distinct !{!7943, !7944, !7945}
!7944 = !DILocation(line: 147, column: 2, scope: !7929)
!7945 = !DILocation(line: 150, column: 2, scope: !7929)
!7946 = !DILocation(line: 152, column: 9, scope: !7929)
!7947 = !DILocation(line: 152, column: 15, scope: !7929)
!7948 = !DILocation(line: 152, column: 13, scope: !7929)
!7949 = !DILocation(line: 152, column: 2, scope: !7929)
!7950 = distinct !DISubprogram(name: "strncmp", scope: !7809, file: !7809, line: 162, type: !7951, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7953)
!7951 = !DISubroutineType(types: !7952)
!7952 = !{!109, !279, !279, !234}
!7953 = !{!7954, !7955, !7956}
!7954 = !DILocalVariable(name: "s1", arg: 1, scope: !7950, file: !7809, line: 162, type: !279)
!7955 = !DILocalVariable(name: "s2", arg: 2, scope: !7950, file: !7809, line: 162, type: !279)
!7956 = !DILocalVariable(name: "n", arg: 3, scope: !7950, file: !7809, line: 162, type: !234)
!7957 = !DILocation(line: 0, scope: !7950)
!7958 = !DILocation(line: 164, column: 17, scope: !7950)
!7959 = !DILocation(line: 164, column: 21, scope: !7950)
!7960 = !DILocation(line: 164, column: 28, scope: !7950)
!7961 = !DILocation(line: 164, column: 25, scope: !7950)
!7962 = !DILocation(line: 164, column: 33, scope: !7950)
!7963 = !DILocation(line: 165, column: 5, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7950, file: !7809, line: 164, column: 51)
!7965 = !DILocation(line: 166, column: 5, scope: !7964)
!7966 = !DILocation(line: 167, column: 4, scope: !7964)
!7967 = distinct !{!7967, !7968, !7969}
!7968 = !DILocation(line: 164, column: 2, scope: !7950)
!7969 = !DILocation(line: 168, column: 2, scope: !7950)
!7970 = !DILocation(line: 170, column: 25, scope: !7950)
!7971 = !DILocation(line: 170, column: 31, scope: !7950)
!7972 = !DILocation(line: 170, column: 29, scope: !7950)
!7973 = !DILocation(line: 170, column: 9, scope: !7950)
!7974 = !DILocation(line: 170, column: 2, scope: !7950)
!7975 = distinct !DISubprogram(name: "strtok_r", scope: !7809, file: !7809, line: 180, type: !7976, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !7978)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{!285, !285, !279, !284}
!7978 = !{!7979, !7980, !7981, !7982, !7983}
!7979 = !DILocalVariable(name: "str", arg: 1, scope: !7975, file: !7809, line: 180, type: !285)
!7980 = !DILocalVariable(name: "sep", arg: 2, scope: !7975, file: !7809, line: 180, type: !279)
!7981 = !DILocalVariable(name: "state", arg: 3, scope: !7975, file: !7809, line: 180, type: !284)
!7982 = !DILocalVariable(name: "start", scope: !7975, file: !7809, line: 182, type: !285)
!7983 = !DILocalVariable(name: "end", scope: !7975, file: !7809, line: 182, type: !285)
!7984 = !DILocation(line: 0, scope: !7975)
!7985 = !DILocation(line: 184, column: 10, scope: !7975)
!7986 = !DILocation(line: 184, column: 22, scope: !7975)
!7987 = !DILocation(line: 187, column: 9, scope: !7975)
!7988 = !DILocation(line: 187, column: 16, scope: !7975)
!7989 = !DILocation(line: 187, column: 19, scope: !7975)
!7990 = !DILocation(line: 187, column: 2, scope: !7975)
!7991 = !DILocation(line: 188, column: 8, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7975, file: !7809, line: 187, column: 40)
!7993 = distinct !{!7993, !7990, !7994}
!7994 = !DILocation(line: 189, column: 2, scope: !7975)
!7995 = !DILocation(line: 198, column: 9, scope: !7975)
!7996 = !DILocation(line: 198, column: 18, scope: !7975)
!7997 = !DILocation(line: 198, column: 17, scope: !7975)
!7998 = !DILocation(line: 198, column: 2, scope: !7975)
!7999 = !DILocation(line: 199, column: 6, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7975, file: !7809, line: 198, column: 37)
!8001 = !DILocation(line: 198, column: 14, scope: !7975)
!8002 = distinct !{!8002, !7998, !8003}
!8003 = !DILocation(line: 200, column: 2, scope: !7975)
!8004 = !DILocation(line: 203, column: 8, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !7809, line: 202, column: 20)
!8006 = distinct !DILexicalBlock(scope: !7975, file: !7809, line: 202, column: 6)
!8007 = !DILocation(line: 204, column: 16, scope: !8005)
!8008 = !DILocation(line: 205, column: 2, scope: !8005)
!8009 = !DILocation(line: 210, column: 1, scope: !7975)
!8010 = distinct !DISubprogram(name: "strcat", scope: !7809, file: !7809, line: 212, type: !7810, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8011)
!8011 = !{!8012, !8013}
!8012 = !DILocalVariable(name: "dest", arg: 1, scope: !8010, file: !7809, line: 212, type: !7812)
!8013 = !DILocalVariable(name: "src", arg: 2, scope: !8010, file: !7809, line: 212, type: !7813)
!8014 = !DILocation(line: 0, scope: !8010)
!8015 = !DILocation(line: 214, column: 16, scope: !8010)
!8016 = !DILocation(line: 214, column: 14, scope: !8010)
!8017 = !DILocation(line: 214, column: 2, scope: !8010)
!8018 = !DILocation(line: 215, column: 2, scope: !8010)
!8019 = distinct !DISubprogram(name: "strncat", scope: !7809, file: !7809, line: 218, type: !7831, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8020)
!8020 = !{!8021, !8022, !8023, !8024, !8025}
!8021 = !DILocalVariable(name: "dest", arg: 1, scope: !8019, file: !7809, line: 218, type: !7812)
!8022 = !DILocalVariable(name: "src", arg: 2, scope: !8019, file: !7809, line: 218, type: !7813)
!8023 = !DILocalVariable(name: "n", arg: 3, scope: !8019, file: !7809, line: 219, type: !234)
!8024 = !DILocalVariable(name: "orig_dest", scope: !8019, file: !7809, line: 221, type: !285)
!8025 = !DILocalVariable(name: "len", scope: !8019, file: !7809, line: 222, type: !234)
!8026 = !DILocation(line: 0, scope: !8019)
!8027 = !DILocation(line: 222, column: 15, scope: !8019)
!8028 = !DILocation(line: 224, column: 7, scope: !8019)
!8029 = !DILocation(line: 225, column: 14, scope: !8019)
!8030 = !DILocation(line: 225, column: 19, scope: !8019)
!8031 = !DILocation(line: 225, column: 11, scope: !8019)
!8032 = !DILocation(line: 225, column: 23, scope: !8019)
!8033 = !DILocation(line: 225, column: 28, scope: !8019)
!8034 = !DILocation(line: 225, column: 2, scope: !8019)
!8035 = !DILocation(line: 226, column: 17, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8019, file: !7809, line: 225, column: 38)
!8037 = !DILocation(line: 226, column: 8, scope: !8036)
!8038 = !DILocation(line: 226, column: 11, scope: !8036)
!8039 = distinct !{!8039, !8034, !8040}
!8040 = !DILocation(line: 227, column: 2, scope: !8019)
!8041 = !DILocation(line: 228, column: 8, scope: !8019)
!8042 = !DILocation(line: 230, column: 2, scope: !8019)
!8043 = distinct !DISubprogram(name: "memcmp", scope: !7809, file: !7809, line: 239, type: !8044, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8046)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!109, !13, !13, !234}
!8046 = !{!8047, !8048, !8049, !8050, !8051}
!8047 = !DILocalVariable(name: "m1", arg: 1, scope: !8043, file: !7809, line: 239, type: !13)
!8048 = !DILocalVariable(name: "m2", arg: 2, scope: !8043, file: !7809, line: 239, type: !13)
!8049 = !DILocalVariable(name: "n", arg: 3, scope: !8043, file: !7809, line: 239, type: !234)
!8050 = !DILocalVariable(name: "c1", scope: !8043, file: !7809, line: 241, type: !279)
!8051 = !DILocalVariable(name: "c2", scope: !8043, file: !7809, line: 242, type: !279)
!8052 = !DILocation(line: 0, scope: !8043)
!8053 = !DILocation(line: 244, column: 7, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8043, file: !7809, line: 244, column: 6)
!8055 = !DILocation(line: 244, column: 6, scope: !8043)
!8056 = !DILocation(line: 248, column: 10, scope: !8043)
!8057 = !DILocation(line: 248, column: 14, scope: !8043)
!8058 = !DILocation(line: 248, column: 19, scope: !8043)
!8059 = !DILocation(line: 248, column: 2, scope: !8043)
!8060 = !DILocation(line: 248, column: 23, scope: !8043)
!8061 = !DILocation(line: 248, column: 30, scope: !8043)
!8062 = !DILocation(line: 248, column: 27, scope: !8043)
!8063 = !DILocation(line: 249, column: 5, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8043, file: !7809, line: 248, column: 36)
!8065 = !DILocation(line: 250, column: 5, scope: !8064)
!8066 = distinct !{!8066, !8059, !8067}
!8067 = !DILocation(line: 251, column: 2, scope: !8043)
!8068 = !DILocation(line: 253, column: 9, scope: !8043)
!8069 = !DILocation(line: 253, column: 15, scope: !8043)
!8070 = !DILocation(line: 253, column: 13, scope: !8043)
!8071 = !DILocation(line: 253, column: 2, scope: !8043)
!8072 = !DILocation(line: 254, column: 1, scope: !8043)
!8073 = distinct !DISubprogram(name: "memmove", scope: !7809, file: !7809, line: 263, type: !8074, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8076)
!8074 = !DISubroutineType(types: !8075)
!8075 = !{!107, !107, !13, !234}
!8076 = !{!8077, !8078, !8079, !8080, !8081}
!8077 = !DILocalVariable(name: "d", arg: 1, scope: !8073, file: !7809, line: 263, type: !107)
!8078 = !DILocalVariable(name: "s", arg: 2, scope: !8073, file: !7809, line: 263, type: !13)
!8079 = !DILocalVariable(name: "n", arg: 3, scope: !8073, file: !7809, line: 263, type: !234)
!8080 = !DILocalVariable(name: "dest", scope: !8073, file: !7809, line: 265, type: !285)
!8081 = !DILocalVariable(name: "src", scope: !8073, file: !7809, line: 266, type: !279)
!8082 = !DILocation(line: 0, scope: !8073)
!8083 = !DILocation(line: 268, column: 21, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8073, file: !7809, line: 268, column: 6)
!8085 = !DILocation(line: 268, column: 28, scope: !8084)
!8086 = !DILocation(line: 268, column: 6, scope: !8073)
!8087 = !DILocation(line: 280, column: 12, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8084, file: !7809, line: 278, column: 9)
!8089 = !DILocation(line: 280, column: 3, scope: !8088)
!8090 = !DILocation(line: 275, column: 5, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !7809, line: 274, column: 17)
!8092 = distinct !DILexicalBlock(scope: !8084, file: !7809, line: 268, column: 33)
!8093 = !DILocation(line: 276, column: 14, scope: !8091)
!8094 = !DILocation(line: 276, column: 4, scope: !8091)
!8095 = !DILocation(line: 276, column: 12, scope: !8091)
!8096 = !DILocation(line: 274, column: 12, scope: !8092)
!8097 = !DILocation(line: 274, column: 3, scope: !8092)
!8098 = distinct !{!8098, !8097, !8099}
!8099 = !DILocation(line: 277, column: 3, scope: !8092)
!8100 = !DILocation(line: 281, column: 12, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8088, file: !7809, line: 280, column: 17)
!8102 = !DILocation(line: 281, column: 10, scope: !8101)
!8103 = !DILocation(line: 282, column: 8, scope: !8101)
!8104 = !DILocation(line: 283, column: 7, scope: !8101)
!8105 = !DILocation(line: 284, column: 5, scope: !8101)
!8106 = distinct !{!8106, !8089, !8107}
!8107 = !DILocation(line: 285, column: 3, scope: !8088)
!8108 = !DILocation(line: 288, column: 2, scope: !8073)
!8109 = distinct !DISubprogram(name: "memcpy", scope: !7809, file: !7809, line: 298, type: !8110, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8114)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{!107, !8112, !8113, !234}
!8112 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8113 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8114 = !{!8115, !8116, !8117, !8118, !8119}
!8115 = !DILocalVariable(name: "d", arg: 1, scope: !8109, file: !7809, line: 298, type: !8112)
!8116 = !DILocalVariable(name: "s", arg: 2, scope: !8109, file: !7809, line: 298, type: !8113)
!8117 = !DILocalVariable(name: "n", arg: 3, scope: !8109, file: !7809, line: 298, type: !234)
!8118 = !DILocalVariable(name: "d_byte", scope: !8109, file: !7809, line: 302, type: !989)
!8119 = !DILocalVariable(name: "s_byte", scope: !8109, file: !7809, line: 303, type: !2866)
!8120 = !DILocation(line: 0, scope: !8109)
!8121 = !DILocation(line: 337, column: 11, scope: !8109)
!8122 = !DILocation(line: 337, column: 2, scope: !8109)
!8123 = !DILocation(line: 338, column: 25, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8109, file: !7809, line: 337, column: 16)
!8125 = !DILocation(line: 338, column: 17, scope: !8124)
!8126 = !DILocation(line: 338, column: 11, scope: !8124)
!8127 = !DILocation(line: 338, column: 15, scope: !8124)
!8128 = !DILocation(line: 339, column: 4, scope: !8124)
!8129 = distinct !{!8129, !8122, !8130}
!8130 = !DILocation(line: 340, column: 2, scope: !8109)
!8131 = !DILocation(line: 342, column: 2, scope: !8109)
!8132 = distinct !DISubprogram(name: "memset", scope: !7809, file: !7809, line: 352, type: !8133, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8135)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{!107, !107, !109, !234}
!8135 = !{!8136, !8137, !8138, !8139, !8140}
!8136 = !DILocalVariable(name: "buf", arg: 1, scope: !8132, file: !7809, line: 352, type: !107)
!8137 = !DILocalVariable(name: "c", arg: 2, scope: !8132, file: !7809, line: 352, type: !109)
!8138 = !DILocalVariable(name: "n", arg: 3, scope: !8132, file: !7809, line: 352, type: !234)
!8139 = !DILocalVariable(name: "d_byte", scope: !8132, file: !7809, line: 356, type: !989)
!8140 = !DILocalVariable(name: "c_byte", scope: !8132, file: !7809, line: 357, type: !181)
!8141 = !DILocation(line: 0, scope: !8132)
!8142 = !DILocation(line: 357, column: 25, scope: !8132)
!8143 = !DILocation(line: 389, column: 11, scope: !8132)
!8144 = !DILocation(line: 389, column: 2, scope: !8132)
!8145 = !DILocation(line: 390, column: 11, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8132, file: !7809, line: 389, column: 16)
!8147 = !DILocation(line: 390, column: 15, scope: !8146)
!8148 = !DILocation(line: 391, column: 4, scope: !8146)
!8149 = distinct !{!8149, !8144, !8150}
!8150 = !DILocation(line: 392, column: 2, scope: !8132)
!8151 = !DILocation(line: 394, column: 2, scope: !8132)
!8152 = distinct !DISubprogram(name: "memchr", scope: !7809, file: !7809, line: 404, type: !8153, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8155)
!8153 = !DISubroutineType(types: !8154)
!8154 = !{!107, !13, !109, !234}
!8155 = !{!8156, !8157, !8158, !8159}
!8156 = !DILocalVariable(name: "s", arg: 1, scope: !8152, file: !7809, line: 404, type: !13)
!8157 = !DILocalVariable(name: "c", arg: 2, scope: !8152, file: !7809, line: 404, type: !109)
!8158 = !DILocalVariable(name: "n", arg: 3, scope: !8152, file: !7809, line: 404, type: !234)
!8159 = !DILocalVariable(name: "p", scope: !8160, file: !7809, line: 407, type: !2866)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !7809, line: 406, column: 14)
!8161 = distinct !DILexicalBlock(scope: !8152, file: !7809, line: 406, column: 6)
!8162 = !DILocation(line: 0, scope: !8152)
!8163 = !DILocation(line: 406, column: 8, scope: !8161)
!8164 = !DILocation(line: 406, column: 6, scope: !8152)
!8165 = !DILocation(line: 409, column: 3, scope: !8160)
!8166 = !DILocation(line: 0, scope: !8160)
!8167 = !DILocation(line: 410, column: 8, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !7809, line: 410, column: 8)
!8169 = distinct !DILexicalBlock(scope: !8160, file: !7809, line: 409, column: 6)
!8170 = !DILocation(line: 410, column: 13, scope: !8168)
!8171 = !DILocation(line: 410, column: 8, scope: !8169)
!8172 = distinct !{!8172, !8165, !8173}
!8173 = !DILocation(line: 414, column: 20, scope: !8160)
!8174 = !DILocation(line: 417, column: 2, scope: !8152)
!8175 = !DILocation(line: 418, column: 1, scope: !8152)
!8176 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4312, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8177)
!8177 = !{!8178}
!8178 = !DILocalVariable(name: "hook", arg: 1, scope: !8176, file: !573, line: 23, type: !302)
!8179 = !DILocation(line: 0, scope: !8176)
!8180 = !DILocation(line: 25, column: 15, scope: !8176)
!8181 = !DILocation(line: 26, column: 1, scope: !8176)
!8182 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8183)
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "c", arg: 1, scope: !8182, file: !573, line: 14, type: !109)
!8185 = !DILocation(line: 0, scope: !8182)
!8186 = !DILocation(line: 18, column: 2, scope: !8182)
!8187 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8188, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8190)
!8188 = !DISubroutineType(types: !8189)
!8189 = !{!109, !109, !569}
!8190 = !{!8191, !8192}
!8191 = !DILocalVariable(name: "c", arg: 1, scope: !8187, file: !573, line: 28, type: !109)
!8192 = !DILocalVariable(name: "stream", arg: 2, scope: !8187, file: !573, line: 28, type: !569)
!8193 = !DILocation(line: 0, scope: !8187)
!8194 = !DILocation(line: 30, column: 27, scope: !8187)
!8195 = !DILocation(line: 30, column: 50, scope: !8187)
!8196 = !DILocation(line: 30, column: 9, scope: !8187)
!8197 = !DILocation(line: 30, column: 2, scope: !8187)
!8198 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8188, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8199)
!8199 = !{!8200, !8201}
!8200 = !DILocalVariable(name: "c", arg: 1, scope: !8198, file: !573, line: 41, type: !109)
!8201 = !DILocalVariable(name: "stream", arg: 2, scope: !8198, file: !573, line: 41, type: !569)
!8202 = !DILocation(line: 0, scope: !8198)
!8203 = !DILocation(line: 43, column: 9, scope: !8198)
!8204 = !DILocation(line: 43, column: 2, scope: !8198)
!8205 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8206, file: !8206, line: 72, type: !8188, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8207)
!8206 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!8207 = !{!8208, !8209}
!8208 = !DILocalVariable(name: "c", arg: 1, scope: !8205, file: !8206, line: 72, type: !109)
!8209 = !DILocalVariable(name: "stream", arg: 2, scope: !8205, file: !8206, line: 72, type: !569)
!8210 = !DILocation(line: 0, scope: !8205)
!8211 = !DILocation(line: 81, column: 2, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8205, file: !8206, line: 81, column: 2)
!8213 = !{i64 2154911943}
!8214 = !DILocation(line: 82, column: 9, scope: !8205)
!8215 = !DILocation(line: 82, column: 2, scope: !8205)
!8216 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8217, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8220)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{!109, !7813, !8219}
!8219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8220 = !{!8221, !8222, !8223, !8224}
!8221 = !DILocalVariable(name: "s", arg: 1, scope: !8216, file: !573, line: 46, type: !7813)
!8222 = !DILocalVariable(name: "stream", arg: 2, scope: !8216, file: !573, line: 46, type: !8219)
!8223 = !DILocalVariable(name: "len", scope: !8216, file: !573, line: 48, type: !109)
!8224 = !DILocalVariable(name: "ret", scope: !8216, file: !573, line: 49, type: !109)
!8225 = !DILocation(line: 0, scope: !8216)
!8226 = !DILocation(line: 48, column: 12, scope: !8216)
!8227 = !DILocation(line: 51, column: 8, scope: !8216)
!8228 = !DILocation(line: 53, column: 13, scope: !8216)
!8229 = !DILocation(line: 53, column: 9, scope: !8216)
!8230 = !DILocation(line: 53, column: 2, scope: !8216)
!8231 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8232, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8234)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!234, !8113, !234, !234, !8219}
!8234 = !{!8235, !8236, !8237, !8238}
!8235 = !DILocalVariable(name: "ptr", arg: 1, scope: !8231, file: !573, line: 99, type: !8113)
!8236 = !DILocalVariable(name: "size", arg: 2, scope: !8231, file: !573, line: 99, type: !234)
!8237 = !DILocalVariable(name: "nitems", arg: 3, scope: !8231, file: !573, line: 99, type: !234)
!8238 = !DILocalVariable(name: "stream", arg: 4, scope: !8231, file: !573, line: 100, type: !8219)
!8239 = !DILocation(line: 0, scope: !8231)
!8240 = !DILocation(line: 102, column: 9, scope: !8231)
!8241 = !DILocation(line: 102, column: 2, scope: !8231)
!8242 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8206, file: !8206, line: 96, type: !8232, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8243)
!8243 = !{!8244, !8245, !8246, !8247}
!8244 = !DILocalVariable(name: "ptr", arg: 1, scope: !8242, file: !8206, line: 96, type: !8113)
!8245 = !DILocalVariable(name: "size", arg: 2, scope: !8242, file: !8206, line: 96, type: !234)
!8246 = !DILocalVariable(name: "nitems", arg: 3, scope: !8242, file: !8206, line: 96, type: !234)
!8247 = !DILocalVariable(name: "stream", arg: 4, scope: !8242, file: !8206, line: 96, type: !8219)
!8248 = !DILocation(line: 0, scope: !8242)
!8249 = !DILocation(line: 107, column: 2, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8242, file: !8206, line: 107, column: 2)
!8251 = !{i64 2154912047}
!8252 = !DILocation(line: 108, column: 9, scope: !8242)
!8253 = !DILocation(line: 108, column: 2, scope: !8242)
!8254 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8232, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8255)
!8255 = !{!8256, !8257, !8258, !8259, !8260, !8261, !8262, !8263}
!8256 = !DILocalVariable(name: "ptr", arg: 1, scope: !8254, file: !573, line: 56, type: !8113)
!8257 = !DILocalVariable(name: "size", arg: 2, scope: !8254, file: !573, line: 56, type: !234)
!8258 = !DILocalVariable(name: "nitems", arg: 3, scope: !8254, file: !573, line: 57, type: !234)
!8259 = !DILocalVariable(name: "stream", arg: 4, scope: !8254, file: !573, line: 57, type: !8219)
!8260 = !DILocalVariable(name: "i", scope: !8254, file: !573, line: 59, type: !234)
!8261 = !DILocalVariable(name: "j", scope: !8254, file: !573, line: 60, type: !234)
!8262 = !DILocalVariable(name: "p", scope: !8254, file: !573, line: 61, type: !2866)
!8263 = !DILabel(scope: !8254, name: "done", file: !573, line: 82)
!8264 = !DILocation(line: 0, scope: !8254)
!8265 = !DILocation(line: 63, column: 14, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8254, file: !573, line: 63, column: 6)
!8267 = !DILocation(line: 63, column: 24, scope: !8266)
!8268 = !DILocation(line: 72, column: 3, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8254, file: !573, line: 70, column: 5)
!8270 = !DILocation(line: 0, scope: !8269)
!8271 = !DILocation(line: 73, column: 8, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !573, line: 73, column: 8)
!8273 = distinct !DILexicalBlock(scope: !8269, file: !573, line: 72, column: 6)
!8274 = !DILocation(line: 73, column: 29, scope: !8272)
!8275 = !DILocation(line: 73, column: 27, scope: !8272)
!8276 = !DILocation(line: 73, column: 21, scope: !8272)
!8277 = !DILocation(line: 73, column: 33, scope: !8272)
!8278 = !DILocation(line: 73, column: 8, scope: !8273)
!8279 = !DILocation(line: 76, column: 5, scope: !8273)
!8280 = !DILocation(line: 77, column: 14, scope: !8269)
!8281 = !DILocation(line: 77, column: 3, scope: !8273)
!8282 = distinct !{!8282, !8268, !8283}
!8283 = !DILocation(line: 77, column: 17, scope: !8269)
!8284 = !DILocation(line: 79, column: 4, scope: !8269)
!8285 = !DILocation(line: 80, column: 13, scope: !8254)
!8286 = !DILocation(line: 80, column: 2, scope: !8269)
!8287 = distinct !{!8287, !8288, !8289}
!8288 = !DILocation(line: 70, column: 2, scope: !8254)
!8289 = !DILocation(line: 80, column: 16, scope: !8254)
!8290 = !DILocation(line: 82, column: 1, scope: !8254)
!8291 = !DILocation(line: 83, column: 17, scope: !8254)
!8292 = !DILocation(line: 83, column: 2, scope: !8254)
!8293 = !DILocation(line: 84, column: 1, scope: !8254)
!8294 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8295, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!109, !279}
!8297 = !{!8298}
!8298 = !DILocalVariable(name: "s", arg: 1, scope: !8294, file: !573, line: 106, type: !279)
!8299 = !DILocation(line: 0, scope: !8294)
!8300 = !DILocation(line: 108, column: 6, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8294, file: !573, line: 108, column: 6)
!8302 = !DILocation(line: 108, column: 23, scope: !8301)
!8303 = !DILocation(line: 108, column: 6, scope: !8294)
!8304 = !DILocation(line: 112, column: 9, scope: !8294)
!8305 = !DILocation(line: 112, column: 29, scope: !8294)
!8306 = !DILocation(line: 112, column: 2, scope: !8294)
!8307 = !DILocation(line: 113, column: 1, scope: !8294)
!8308 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !706, file: !706, line: 368, type: !759, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8309)
!8309 = !{!8310}
!8310 = !DILocalVariable(name: "dev", arg: 1, scope: !8308, file: !706, line: 368, type: !735)
!8311 = !DILocation(line: 0, scope: !8308)
!8312 = !DILocation(line: 370, column: 2, scope: !8308)
!8313 = !DILocation(line: 371, column: 1, scope: !8308)
!8314 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !706, file: !706, line: 243, type: !8315, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8317)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{null, !109, !109, !735}
!8317 = !{!8318, !8319, !8320, !8321, !8323}
!8318 = !DILocalVariable(name: "min", arg: 1, scope: !8314, file: !706, line: 243, type: !109)
!8319 = !DILocalVariable(name: "max", arg: 2, scope: !8314, file: !706, line: 243, type: !109)
!8320 = !DILocalVariable(name: "dev", arg: 3, scope: !8314, file: !706, line: 243, type: !735)
!8321 = !DILocalVariable(name: "data", scope: !8314, file: !706, line: 245, type: !8322)
!8322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!8323 = !DILocalVariable(name: "line", scope: !8314, file: !706, line: 246, type: !109)
!8324 = !DILocation(line: 0, scope: !8314)
!8325 = !DILocation(line: 245, column: 38, scope: !8314)
!8326 = !DILocation(line: 249, column: 24, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !706, line: 249, column: 2)
!8328 = distinct !DILexicalBlock(scope: !8314, file: !706, line: 249, column: 2)
!8329 = !DILocation(line: 249, column: 2, scope: !8328)
!8330 = !DILocation(line: 251, column: 7, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !706, line: 251, column: 7)
!8332 = distinct !DILexicalBlock(scope: !8327, file: !706, line: 249, column: 39)
!8333 = !DILocation(line: 251, column: 7, scope: !8332)
!8334 = !DILocation(line: 253, column: 4, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8331, file: !706, line: 251, column: 36)
!8336 = !DILocation(line: 256, column: 24, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8335, file: !706, line: 256, column: 8)
!8338 = !DILocation(line: 256, column: 9, scope: !8337)
!8339 = !DILocation(line: 256, column: 8, scope: !8335)
!8340 = !DILocation(line: 260, column: 43, scope: !8335)
!8341 = !DILocation(line: 260, column: 4, scope: !8335)
!8342 = !DILocation(line: 261, column: 3, scope: !8335)
!8343 = !DILocation(line: 249, column: 35, scope: !8327)
!8344 = distinct !{!8344, !8329, !8345}
!8345 = !DILocation(line: 262, column: 2, scope: !8328)
!8346 = !DILocation(line: 263, column: 1, scope: !8314)
!8347 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !706, file: !706, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8348)
!8348 = !{!8349}
!8349 = !DILocalVariable(name: "line", arg: 1, scope: !8347, file: !706, line: 158, type: !109)
!8350 = !DILocation(line: 0, scope: !8347)
!8351 = !DILocation(line: 170, column: 38, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !706, line: 160, column: 17)
!8353 = distinct !DILexicalBlock(scope: !8347, file: !706, line: 160, column: 6)
!8354 = !DILocation(line: 170, column: 10, scope: !8352)
!8355 = !DILocation(line: 176, column: 1, scope: !8347)
!8356 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !706, file: !706, line: 183, type: !8357, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8359)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{null, !109}
!8359 = !{!8360}
!8360 = !DILocalVariable(name: "line", arg: 1, scope: !8356, file: !706, line: 183, type: !109)
!8361 = !DILocation(line: 0, scope: !8356)
!8362 = !DILocation(line: 195, column: 28, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !706, line: 185, column: 17)
!8364 = distinct !DILexicalBlock(scope: !8356, file: !706, line: 185, column: 6)
!8365 = !DILocation(line: 195, column: 3, scope: !8363)
!8366 = !DILocation(line: 200, column: 1, scope: !8356)
!8367 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8368, file: !8368, line: 910, type: !6514, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8369)
!8368 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8369 = !{!8370}
!8370 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8367, file: !8368, line: 910, type: !110)
!8371 = !DILocation(line: 0, scope: !8367)
!8372 = !DILocation(line: 912, column: 3, scope: !8367)
!8373 = !DILocation(line: 913, column: 1, scope: !8367)
!8374 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8368, file: !8368, line: 834, type: !7704, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8375)
!8375 = !{!8376}
!8376 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8374, file: !8368, line: 834, type: !110)
!8377 = !DILocation(line: 0, scope: !8374)
!8378 = !DILocation(line: 836, column: 11, scope: !8374)
!8379 = !DILocation(line: 836, column: 40, scope: !8374)
!8380 = !DILocation(line: 836, column: 3, scope: !8374)
!8381 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !706, file: !706, line: 304, type: !759, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "dev", arg: 1, scope: !8381, file: !706, line: 304, type: !735)
!8384 = !DILocation(line: 0, scope: !8381)
!8385 = !DILocation(line: 306, column: 2, scope: !8381)
!8386 = !DILocation(line: 307, column: 1, scope: !8381)
!8387 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !706, file: !706, line: 299, type: !759, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8388)
!8388 = !{!8389}
!8389 = !DILocalVariable(name: "dev", arg: 1, scope: !8387, file: !706, line: 299, type: !735)
!8390 = !DILocation(line: 0, scope: !8387)
!8391 = !DILocation(line: 301, column: 2, scope: !8387)
!8392 = !DILocation(line: 302, column: 1, scope: !8387)
!8393 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !706, file: !706, line: 294, type: !759, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8394)
!8394 = !{!8395}
!8395 = !DILocalVariable(name: "dev", arg: 1, scope: !8393, file: !706, line: 294, type: !735)
!8396 = !DILocation(line: 0, scope: !8393)
!8397 = !DILocation(line: 296, column: 2, scope: !8393)
!8398 = !DILocation(line: 297, column: 1, scope: !8393)
!8399 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !706, file: !706, line: 397, type: !759, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8400)
!8400 = !{!8401}
!8401 = !DILocalVariable(name: "dev", arg: 1, scope: !8399, file: !706, line: 397, type: !735)
!8402 = !DILocation(line: 0, scope: !8399)
!8403 = !DILocation(line: 399, column: 2, scope: !8399)
!8404 = !DILocation(line: 400, column: 1, scope: !8399)
!8405 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !706, file: !706, line: 392, type: !759, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8406)
!8406 = !{!8407}
!8407 = !DILocalVariable(name: "dev", arg: 1, scope: !8405, file: !706, line: 392, type: !735)
!8408 = !DILocation(line: 0, scope: !8405)
!8409 = !DILocation(line: 394, column: 2, scope: !8405)
!8410 = !DILocation(line: 395, column: 1, scope: !8405)
!8411 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !706, file: !706, line: 289, type: !759, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8412)
!8412 = !{!8413}
!8413 = !DILocalVariable(name: "dev", arg: 1, scope: !8411, file: !706, line: 289, type: !735)
!8414 = !DILocation(line: 0, scope: !8411)
!8415 = !DILocation(line: 291, column: 2, scope: !8411)
!8416 = !DILocation(line: 292, column: 1, scope: !8411)
!8417 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !706, file: !706, line: 387, type: !759, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8418)
!8418 = !{!8419}
!8419 = !DILocalVariable(name: "dev", arg: 1, scope: !8417, file: !706, line: 387, type: !735)
!8420 = !DILocation(line: 0, scope: !8417)
!8421 = !DILocation(line: 389, column: 2, scope: !8417)
!8422 = !DILocation(line: 390, column: 1, scope: !8417)
!8423 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !706, file: !706, line: 382, type: !759, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8424)
!8424 = !{!8425}
!8425 = !DILocalVariable(name: "dev", arg: 1, scope: !8423, file: !706, line: 382, type: !735)
!8426 = !DILocation(line: 0, scope: !8423)
!8427 = !DILocation(line: 384, column: 2, scope: !8423)
!8428 = !DILocation(line: 385, column: 1, scope: !8423)
!8429 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !706, file: !706, line: 373, type: !759, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8430)
!8430 = !{!8431}
!8431 = !DILocalVariable(name: "dev", arg: 1, scope: !8429, file: !706, line: 373, type: !735)
!8432 = !DILocation(line: 0, scope: !8429)
!8433 = !DILocation(line: 375, column: 2, scope: !8429)
!8434 = !DILocation(line: 376, column: 1, scope: !8429)
!8435 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !706, file: !706, line: 284, type: !759, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8436)
!8436 = !{!8437}
!8437 = !DILocalVariable(name: "dev", arg: 1, scope: !8435, file: !706, line: 284, type: !735)
!8438 = !DILocation(line: 0, scope: !8435)
!8439 = !DILocation(line: 286, column: 2, scope: !8435)
!8440 = !DILocation(line: 287, column: 1, scope: !8435)
!8441 = distinct !DISubprogram(name: "stm32_exti_init", scope: !706, file: !706, line: 416, type: !733, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8442)
!8442 = !{!8443}
!8443 = !DILocalVariable(name: "dev", arg: 1, scope: !8441, file: !706, line: 416, type: !735)
!8444 = !DILocation(line: 0, scope: !8441)
!8445 = !DILocation(line: 418, column: 2, scope: !8441)
!8446 = !DILocation(line: 420, column: 2, scope: !8441)
!8447 = !DILocation(line: 0, scope: !758)
!8448 = !DILocation(line: 493, column: 2, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !758, file: !706, line: 493, column: 2)
!8450 = !DILocation(line: 497, column: 2, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !758, file: !706, line: 497, column: 2)
!8452 = !DILocation(line: 507, column: 2, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !758, file: !706, line: 507, column: 2)
!8454 = !DILocation(line: 512, column: 2, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !758, file: !706, line: 512, column: 2)
!8456 = !DILocation(line: 516, column: 2, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !758, file: !706, line: 516, column: 2)
!8458 = !DILocation(line: 523, column: 2, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !758, file: !706, line: 523, column: 2)
!8460 = !DILocation(line: 527, column: 2, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !758, file: !706, line: 527, column: 2)
!8462 = !DILocation(line: 581, column: 2, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !758, file: !706, line: 581, column: 2)
!8464 = !DILocation(line: 586, column: 2, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !758, file: !706, line: 586, column: 2)
!8466 = !DILocation(line: 591, column: 2, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !758, file: !706, line: 591, column: 2)
!8468 = !DILocation(line: 595, column: 2, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !758, file: !706, line: 595, column: 2)
!8470 = !DILocation(line: 607, column: 1, scope: !758)
!8471 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !706, file: !706, line: 112, type: !8357, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8472)
!8472 = !{!8473, !8474}
!8473 = !DILocalVariable(name: "line", arg: 1, scope: !8471, file: !706, line: 112, type: !109)
!8474 = !DILocalVariable(name: "irqnum", scope: !8471, file: !706, line: 114, type: !109)
!8475 = !DILocation(line: 0, scope: !8471)
!8476 = !DILocation(line: 122, column: 13, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8471, file: !706, line: 122, column: 6)
!8478 = !DILocation(line: 122, column: 6, scope: !8471)
!8479 = !DILocation(line: 123, column: 3, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !706, line: 123, column: 3)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !706, line: 123, column: 3)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !706, line: 123, column: 3)
!8483 = distinct !DILexicalBlock(scope: !8477, file: !706, line: 122, column: 22)
!8484 = !DILocation(line: 121, column: 11, scope: !8471)
!8485 = !DILocation(line: 130, column: 26, scope: !8471)
!8486 = !DILocation(line: 130, column: 2, scope: !8471)
!8487 = !DILocation(line: 134, column: 2, scope: !8471)
!8488 = !DILocation(line: 135, column: 1, scope: !8471)
!8489 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8368, file: !8368, line: 268, type: !6514, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8490)
!8490 = !{!8491}
!8491 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8489, file: !8368, line: 268, type: !110)
!8492 = !DILocation(line: 0, scope: !8489)
!8493 = !DILocation(line: 270, column: 3, scope: !8489)
!8494 = !DILocation(line: 271, column: 1, scope: !8489)
!8495 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !706, file: !706, line: 137, type: !8357, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8496)
!8496 = !{!8497}
!8497 = !DILocalVariable(name: "line", arg: 1, scope: !8495, file: !706, line: 137, type: !109)
!8498 = !DILocation(line: 0, scope: !8495)
!8499 = !DILocation(line: 141, column: 11, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8495, file: !706, line: 141, column: 6)
!8501 = !DILocation(line: 141, column: 6, scope: !8495)
!8502 = !DILocation(line: 145, column: 28, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8500, file: !706, line: 141, column: 17)
!8504 = !DILocation(line: 145, column: 3, scope: !8503)
!8505 = !DILocation(line: 147, column: 2, scope: !8503)
!8506 = !DILocation(line: 151, column: 1, scope: !8495)
!8507 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8368, file: !8368, line: 309, type: !6514, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8508)
!8508 = !{!8509}
!8509 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8507, file: !8368, line: 309, type: !110)
!8510 = !DILocation(line: 0, scope: !8507)
!8511 = !DILocation(line: 311, column: 3, scope: !8507)
!8512 = !DILocation(line: 312, column: 1, scope: !8507)
!8513 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !706, file: !706, line: 202, type: !8514, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8516)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{null, !109, !109}
!8516 = !{!8517, !8518}
!8517 = !DILocalVariable(name: "line", arg: 1, scope: !8513, file: !706, line: 202, type: !109)
!8518 = !DILocalVariable(name: "trigger", arg: 2, scope: !8513, file: !706, line: 202, type: !109)
!8519 = !DILocation(line: 0, scope: !8513)
!8520 = !DILocation(line: 211, column: 2, scope: !8513)
!8521 = !DILocation(line: 213, column: 36, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8513, file: !706, line: 211, column: 19)
!8523 = !DILocation(line: 213, column: 3, scope: !8522)
!8524 = !DILocation(line: 214, column: 3, scope: !8522)
!8525 = !DILocation(line: 215, column: 3, scope: !8522)
!8526 = !DILocation(line: 217, column: 35, scope: !8522)
!8527 = !DILocation(line: 217, column: 3, scope: !8522)
!8528 = !DILocation(line: 218, column: 3, scope: !8522)
!8529 = !DILocation(line: 219, column: 3, scope: !8522)
!8530 = !DILocation(line: 221, column: 36, scope: !8522)
!8531 = !DILocation(line: 221, column: 3, scope: !8522)
!8532 = !DILocation(line: 222, column: 3, scope: !8522)
!8533 = !DILocation(line: 223, column: 3, scope: !8522)
!8534 = !DILocation(line: 225, column: 35, scope: !8522)
!8535 = !DILocation(line: 225, column: 3, scope: !8522)
!8536 = !DILocation(line: 226, column: 3, scope: !8522)
!8537 = !DILocation(line: 227, column: 3, scope: !8522)
!8538 = !DILocation(line: 232, column: 1, scope: !8513)
!8539 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8368, file: !8368, line: 573, type: !6514, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8540)
!8540 = !{!8541}
!8541 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8539, file: !8368, line: 573, type: !110)
!8542 = !DILocation(line: 0, scope: !8539)
!8543 = !DILocation(line: 575, column: 3, scope: !8539)
!8544 = !DILocation(line: 577, column: 1, scope: !8539)
!8545 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8368, file: !8368, line: 703, type: !6514, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8546)
!8546 = !{!8547}
!8547 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8545, file: !8368, line: 703, type: !110)
!8548 = !DILocation(line: 0, scope: !8545)
!8549 = !DILocation(line: 705, column: 3, scope: !8545)
!8550 = !DILocation(line: 706, column: 1, scope: !8545)
!8551 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8368, file: !8368, line: 529, type: !6514, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8552)
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8551, file: !8368, line: 529, type: !110)
!8554 = !DILocation(line: 0, scope: !8551)
!8555 = !DILocation(line: 531, column: 3, scope: !8551)
!8556 = !DILocation(line: 533, column: 1, scope: !8551)
!8557 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8368, file: !8368, line: 661, type: !6514, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8558)
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8557, file: !8368, line: 661, type: !110)
!8560 = !DILocation(line: 0, scope: !8557)
!8561 = !DILocation(line: 663, column: 3, scope: !8557)
!8562 = !DILocation(line: 664, column: 1, scope: !8557)
!8563 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !706, file: !706, line: 433, type: !8564, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8566)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!109, !109, !746, !107}
!8566 = !{!8567, !8568, !8569, !8570, !8572}
!8567 = !DILocalVariable(name: "line", arg: 1, scope: !8563, file: !706, line: 433, type: !109)
!8568 = !DILocalVariable(name: "cb", arg: 2, scope: !8563, file: !706, line: 433, type: !746)
!8569 = !DILocalVariable(name: "arg", arg: 3, scope: !8563, file: !706, line: 433, type: !107)
!8570 = !DILocalVariable(name: "dev", scope: !8563, file: !706, line: 435, type: !8571)
!8571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!8572 = !DILocalVariable(name: "data", scope: !8563, file: !706, line: 436, type: !8322)
!8573 = !DILocation(line: 0, scope: !8563)
!8574 = !DILocation(line: 438, column: 21, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8563, file: !706, line: 438, column: 6)
!8576 = !DILocation(line: 438, column: 6, scope: !8575)
!8577 = !DILocation(line: 438, column: 6, scope: !8563)
!8578 = !DILocation(line: 442, column: 20, scope: !8563)
!8579 = !DILocation(line: 443, column: 17, scope: !8563)
!8580 = !DILocation(line: 443, column: 22, scope: !8563)
!8581 = !DILocation(line: 445, column: 2, scope: !8563)
!8582 = !DILocation(line: 446, column: 1, scope: !8563)
!8583 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !706, file: !706, line: 448, type: !8357, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8584)
!8584 = !{!8585, !8586, !8587}
!8585 = !DILocalVariable(name: "line", arg: 1, scope: !8583, file: !706, line: 448, type: !109)
!8586 = !DILocalVariable(name: "dev", scope: !8583, file: !706, line: 450, type: !8571)
!8587 = !DILocalVariable(name: "data", scope: !8583, file: !706, line: 451, type: !8322)
!8588 = !DILocation(line: 0, scope: !8583)
!8589 = !DILocation(line: 453, column: 17, scope: !8583)
!8590 = !DILocation(line: 453, column: 20, scope: !8583)
!8591 = !DILocation(line: 454, column: 17, scope: !8583)
!8592 = !DILocation(line: 454, column: 22, scope: !8583)
!8593 = !DILocation(line: 455, column: 1, scope: !8583)
!8594 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !888, file: !888, line: 183, type: !926, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8595)
!8595 = !{!8596, !8597, !8598, !8599, !8600}
!8596 = !DILocalVariable(name: "dev", arg: 1, scope: !8594, file: !888, line: 183, type: !917)
!8597 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8594, file: !888, line: 184, type: !928)
!8598 = !DILocalVariable(name: "pclken", scope: !8594, file: !888, line: 186, type: !878)
!8599 = !DILocalVariable(name: "reg", scope: !8594, file: !888, line: 187, type: !1478)
!8600 = !DILocalVariable(name: "reg_val", scope: !8594, file: !888, line: 188, type: !110)
!8601 = !DILocation(line: 0, scope: !8594)
!8602 = !DILocation(line: 192, column: 6, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8594, file: !888, line: 192, column: 6)
!8604 = !DILocation(line: 192, column: 6, scope: !8594)
!8605 = !DILocation(line: 197, column: 52, scope: !8594)
!8606 = !DILocation(line: 197, column: 8, scope: !8594)
!8607 = !DILocation(line: 198, column: 12, scope: !8594)
!8608 = !DILocation(line: 199, column: 21, scope: !8594)
!8609 = !DILocation(line: 199, column: 10, scope: !8594)
!8610 = !DILocation(line: 200, column: 7, scope: !8594)
!8611 = !DILocation(line: 202, column: 2, scope: !8594)
!8612 = !DILocation(line: 203, column: 1, scope: !8594)
!8613 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !888, file: !888, line: 205, type: !926, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8614)
!8614 = !{!8615, !8616, !8617, !8618, !8619}
!8615 = !DILocalVariable(name: "dev", arg: 1, scope: !8613, file: !888, line: 205, type: !917)
!8616 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8613, file: !888, line: 206, type: !928)
!8617 = !DILocalVariable(name: "pclken", scope: !8613, file: !888, line: 208, type: !878)
!8618 = !DILocalVariable(name: "reg", scope: !8613, file: !888, line: 209, type: !1478)
!8619 = !DILocalVariable(name: "reg_val", scope: !8613, file: !888, line: 210, type: !110)
!8620 = !DILocation(line: 0, scope: !8613)
!8621 = !DILocation(line: 214, column: 6, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8613, file: !888, line: 214, column: 6)
!8623 = !DILocation(line: 214, column: 6, scope: !8613)
!8624 = !DILocation(line: 219, column: 52, scope: !8613)
!8625 = !DILocation(line: 219, column: 8, scope: !8613)
!8626 = !DILocation(line: 220, column: 12, scope: !8613)
!8627 = !DILocation(line: 221, column: 22, scope: !8613)
!8628 = !DILocation(line: 221, column: 13, scope: !8613)
!8629 = !DILocation(line: 221, column: 10, scope: !8613)
!8630 = !DILocation(line: 222, column: 7, scope: !8613)
!8631 = !DILocation(line: 224, column: 2, scope: !8613)
!8632 = !DILocation(line: 225, column: 1, scope: !8613)
!8633 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !888, file: !888, line: 262, type: !942, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8634)
!8634 = !{!8635, !8636, !8637, !8638, !8639, !8640, !8641, !8642}
!8635 = !DILocalVariable(name: "clock", arg: 1, scope: !8633, file: !888, line: 262, type: !917)
!8636 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8633, file: !888, line: 263, type: !928)
!8637 = !DILocalVariable(name: "rate", arg: 3, scope: !8633, file: !888, line: 264, type: !884)
!8638 = !DILocalVariable(name: "pclken", scope: !8633, file: !888, line: 266, type: !878)
!8639 = !DILocalVariable(name: "ahb_clock", scope: !8633, file: !888, line: 273, type: !110)
!8640 = !DILocalVariable(name: "apb1_clock", scope: !8633, file: !888, line: 274, type: !110)
!8641 = !DILocalVariable(name: "apb2_clock", scope: !8633, file: !888, line: 276, type: !110)
!8642 = !DILocalVariable(name: "ahb3_clock", scope: !8633, file: !888, line: 286, type: !110)
!8643 = !DILocation(line: 0, scope: !8633)
!8644 = !DILocation(line: 273, column: 23, scope: !8633)
!8645 = !DILocation(line: 299, column: 18, scope: !8633)
!8646 = !DILocation(line: 299, column: 2, scope: !8633)
!8647 = !DILocation(line: 274, column: 24, scope: !8633)
!8648 = !DILocation(line: 319, column: 3, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8633, file: !888, line: 299, column: 23)
!8650 = !DILocation(line: 276, column: 24, scope: !8633)
!8651 = !DILocation(line: 323, column: 3, scope: !8649)
!8652 = !DILocation(line: 346, column: 33, scope: !8649)
!8653 = !DILocation(line: 346, column: 11, scope: !8649)
!8654 = !DILocation(line: 350, column: 3, scope: !8649)
!8655 = !DILocation(line: 354, column: 33, scope: !8649)
!8656 = !DILocation(line: 354, column: 11, scope: !8649)
!8657 = !DILocation(line: 358, column: 3, scope: !8649)
!8658 = !DILocation(line: 374, column: 3, scope: !8649)
!8659 = !DILocation(line: 379, column: 3, scope: !8649)
!8660 = !DILocation(line: 0, scope: !8649)
!8661 = !DILocation(line: 396, column: 1, scope: !8633)
!8662 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !888, file: !888, line: 227, type: !958, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8663)
!8663 = !{!8664, !8665, !8666, !8667, !8668, !8669, !8670, !8671}
!8664 = !DILocalVariable(name: "dev", arg: 1, scope: !8662, file: !888, line: 227, type: !917)
!8665 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8662, file: !888, line: 228, type: !928)
!8666 = !DILocalVariable(name: "data", arg: 3, scope: !8662, file: !888, line: 229, type: !107)
!8667 = !DILocalVariable(name: "pclken", scope: !8662, file: !888, line: 233, type: !878)
!8668 = !DILocalVariable(name: "reg", scope: !8662, file: !888, line: 234, type: !1478)
!8669 = !DILocalVariable(name: "reg_val", scope: !8662, file: !888, line: 235, type: !110)
!8670 = !DILocalVariable(name: "dt_val", scope: !8662, file: !888, line: 235, type: !110)
!8671 = !DILocalVariable(name: "err", scope: !8662, file: !888, line: 236, type: !109)
!8672 = !DILocation(line: 0, scope: !8662)
!8673 = !DILocation(line: 241, column: 30, scope: !8662)
!8674 = !DILocation(line: 241, column: 8, scope: !8662)
!8675 = !DILocation(line: 242, column: 10, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8662, file: !888, line: 242, column: 6)
!8677 = !DILocation(line: 242, column: 6, scope: !8662)
!8678 = !DILocation(line: 247, column: 11, scope: !8662)
!8679 = !DILocation(line: 248, column: 6, scope: !8662)
!8680 = !DILocation(line: 247, column: 44, scope: !8662)
!8681 = !DILocation(line: 250, column: 6, scope: !8662)
!8682 = !DILocation(line: 249, column: 52, scope: !8662)
!8683 = !DILocation(line: 249, column: 8, scope: !8662)
!8684 = !DILocation(line: 251, column: 12, scope: !8662)
!8685 = !DILocation(line: 252, column: 10, scope: !8662)
!8686 = !DILocation(line: 253, column: 7, scope: !8662)
!8687 = !DILocation(line: 255, column: 2, scope: !8662)
!8688 = !DILocation(line: 260, column: 1, scope: !8662)
!8689 = distinct !DISubprogram(name: "enabled_clock", scope: !888, file: !888, line: 100, type: !8690, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8692)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!109, !110}
!8692 = !{!8693, !8694}
!8693 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8689, file: !888, line: 100, type: !110)
!8694 = !DILocalVariable(name: "r", scope: !8689, file: !888, line: 102, type: !109)
!8695 = !DILocation(line: 0, scope: !8689)
!8696 = !DILocation(line: 104, column: 2, scope: !8689)
!8697 = !DILocation(line: 180, column: 2, scope: !8689)
!8698 = !DILocation(line: 181, column: 1, scope: !8689)
!8699 = distinct !DISubprogram(name: "get_bus_clock", scope: !888, file: !888, line: 79, type: !8700, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8702)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{!110, !110, !110}
!8702 = !{!8703, !8704}
!8703 = !DILocalVariable(name: "clock", arg: 1, scope: !8699, file: !888, line: 79, type: !110)
!8704 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8699, file: !888, line: 79, type: !110)
!8705 = !DILocation(line: 0, scope: !8699)
!8706 = !DILocation(line: 81, column: 15, scope: !8699)
!8707 = !DILocation(line: 81, column: 2, scope: !8699)
!8708 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !888, file: !888, line: 68, type: !8709, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!110, !110, !109, !109, !109}
!8711 = !{!8712, !8713, !8714, !8715}
!8712 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8708, file: !888, line: 68, type: !110)
!8713 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8708, file: !888, line: 69, type: !109)
!8714 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8708, file: !888, line: 70, type: !109)
!8715 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8708, file: !888, line: 71, type: !109)
!8716 = !DILocation(line: 0, scope: !8708)
!8717 = !DILocation(line: 75, column: 22, scope: !8708)
!8718 = !DILocation(line: 76, column: 13, scope: !8708)
!8719 = !DILocation(line: 75, column: 34, scope: !8708)
!8720 = !DILocation(line: 75, column: 2, scope: !8708)
!8721 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !888, file: !888, line: 641, type: !915, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8722)
!8722 = !{!8723, !8724, !8725}
!8723 = !DILocalVariable(name: "dev", arg: 1, scope: !8721, file: !888, line: 641, type: !917)
!8724 = !DILocalVariable(name: "old_flash_freq", scope: !8721, file: !888, line: 664, type: !110)
!8725 = !DILocalVariable(name: "new_flash_freq", scope: !8721, file: !888, line: 665, type: !110)
!8726 = !DILocation(line: 0, scope: !8721)
!8727 = !DILocation(line: 646, column: 2, scope: !8721)
!8728 = !DILocation(line: 667, column: 19, scope: !8721)
!8729 = !DILocation(line: 674, column: 21, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8721, file: !888, line: 674, column: 6)
!8731 = !DILocation(line: 674, column: 6, scope: !8721)
!8732 = !DILocation(line: 675, column: 3, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8730, file: !888, line: 674, column: 59)
!8734 = !DILocation(line: 676, column: 2, scope: !8733)
!8735 = !DILocation(line: 680, column: 2, scope: !8721)
!8736 = !DILocation(line: 683, column: 2, scope: !8721)
!8737 = !DILocation(line: 690, column: 3, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !888, line: 689, column: 9)
!8739 = distinct !DILexicalBlock(scope: !8721, file: !888, line: 685, column: 6)
!8740 = !DILocation(line: 695, column: 2, scope: !8721)
!8741 = !DILocation(line: 696, column: 2, scope: !8721)
!8742 = !DILocation(line: 696, column: 9, scope: !8721)
!8743 = !DILocation(line: 696, column: 34, scope: !8721)
!8744 = distinct !{!8744, !8741, !8745}
!8745 = !DILocation(line: 697, column: 2, scope: !8721)
!8746 = !DILocation(line: 720, column: 21, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8721, file: !888, line: 720, column: 6)
!8748 = !DILocation(line: 720, column: 6, scope: !8721)
!8749 = !DILocation(line: 721, column: 3, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8747, file: !888, line: 720, column: 60)
!8751 = !DILocation(line: 722, column: 2, scope: !8750)
!8752 = !DILocation(line: 725, column: 18, scope: !8721)
!8753 = !DILocation(line: 728, column: 2, scope: !8721)
!8754 = !DILocation(line: 730, column: 2, scope: !8721)
!8755 = !DILocation(line: 745, column: 2, scope: !8721)
!8756 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8757, file: !8757, line: 3275, type: !6504, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8757 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8758 = !DILocation(line: 3277, column: 21, scope: !8756)
!8759 = !DILocation(line: 3277, column: 3, scope: !8756)
!8760 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !888, file: !888, line: 507, type: !3094, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8761 = !DILocation(line: 516, column: 4, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !888, line: 515, column: 10)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !888, line: 513, column: 7)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !888, line: 510, column: 37)
!8765 = distinct !DILexicalBlock(scope: !8760, file: !888, line: 510, column: 6)
!8766 = !DILocation(line: 526, column: 3, scope: !8764)
!8767 = !DILocation(line: 527, column: 3, scope: !8764)
!8768 = !DILocation(line: 527, column: 10, scope: !8764)
!8769 = !DILocation(line: 527, column: 31, scope: !8764)
!8770 = distinct !{!8770, !8767, !8771}
!8771 = !DILocation(line: 529, column: 3, scope: !8764)
!8772 = !DILocation(line: 583, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !888, line: 577, column: 37)
!8774 = distinct !DILexicalBlock(scope: !8760, file: !888, line: 577, column: 6)
!8775 = !DILocation(line: 584, column: 3, scope: !8773)
!8776 = !DILocation(line: 584, column: 10, scope: !8773)
!8777 = !DILocation(line: 584, column: 31, scope: !8773)
!8778 = distinct !{!8778, !8775, !8779}
!8779 = !DILocation(line: 585, column: 3, scope: !8773)
!8780 = !DILocation(line: 627, column: 1, scope: !8760)
!8781 = distinct !DISubprogram(name: "set_up_plls", scope: !888, file: !888, line: 448, type: !3094, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8782 = !DILocation(line: 460, column: 6, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8781, file: !888, line: 460, column: 6)
!8784 = !DILocation(line: 460, column: 31, scope: !8783)
!8785 = !DILocation(line: 460, column: 6, scope: !8781)
!8786 = !DILocation(line: 461, column: 3, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8783, file: !888, line: 460, column: 67)
!8788 = !DILocation(line: 462, column: 3, scope: !8787)
!8789 = !DILocation(line: 463, column: 2, scope: !8787)
!8790 = !DILocation(line: 464, column: 2, scope: !8781)
!8791 = !DILocation(line: 488, column: 2, scope: !8781)
!8792 = !DILocation(line: 492, column: 2, scope: !8781)
!8793 = !DILocation(line: 496, column: 2, scope: !8781)
!8794 = !DILocation(line: 499, column: 2, scope: !8781)
!8795 = !DILocation(line: 500, column: 2, scope: !8781)
!8796 = !DILocation(line: 500, column: 9, scope: !8781)
!8797 = !DILocation(line: 500, column: 30, scope: !8781)
!8798 = distinct !{!8798, !8795, !8799}
!8799 = !DILocation(line: 502, column: 2, scope: !8781)
!8800 = !DILocation(line: 505, column: 1, scope: !8781)
!8801 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8757, file: !8757, line: 3224, type: !6514, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8802)
!8802 = !{!8803}
!8803 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8801, file: !8757, line: 3224, type: !110)
!8804 = !DILocation(line: 0, scope: !8801)
!8805 = !DILocation(line: 3226, column: 3, scope: !8801)
!8806 = !DILocation(line: 3227, column: 1, scope: !8801)
!8807 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8757, file: !8757, line: 3188, type: !6514, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8808)
!8808 = !{!8809}
!8809 = !DILocalVariable(name: "Source", arg: 1, scope: !8807, file: !8757, line: 3188, type: !110)
!8810 = !DILocation(line: 0, scope: !8807)
!8811 = !DILocation(line: 3190, column: 3, scope: !8807)
!8812 = !DILocation(line: 3191, column: 1, scope: !8807)
!8813 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8757, file: !8757, line: 3204, type: !6504, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8814 = !DILocation(line: 3206, column: 21, scope: !8813)
!8815 = !DILocation(line: 3206, column: 3, scope: !8813)
!8816 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8757, file: !8757, line: 3240, type: !6514, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8817)
!8817 = !{!8818}
!8818 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8816, file: !8757, line: 3240, type: !110)
!8819 = !DILocation(line: 0, scope: !8816)
!8820 = !DILocation(line: 3242, column: 3, scope: !8816)
!8821 = !DILocation(line: 3243, column: 1, scope: !8816)
!8822 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8757, file: !8757, line: 3256, type: !6514, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !8823)
!8823 = !{!8824}
!8824 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8822, file: !8757, line: 3256, type: !110)
!8825 = !DILocation(line: 0, scope: !8822)
!8826 = !DILocation(line: 3258, column: 3, scope: !8822)
!8827 = !DILocation(line: 3259, column: 1, scope: !8822)
!8828 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !888, file: !888, line: 409, type: !3094, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8829 = !DILocation(line: 412, column: 6, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8828, file: !888, line: 412, column: 6)
!8831 = !DILocation(line: 412, column: 27, scope: !8830)
!8832 = !DILocation(line: 412, column: 6, scope: !8828)
!8833 = !DILocation(line: 414, column: 3, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8830, file: !888, line: 412, column: 33)
!8835 = !DILocation(line: 415, column: 3, scope: !8834)
!8836 = !DILocation(line: 415, column: 10, scope: !8834)
!8837 = !DILocation(line: 415, column: 31, scope: !8834)
!8838 = distinct !{!8838, !8835, !8839}
!8839 = !DILocation(line: 417, column: 3, scope: !8834)
!8840 = !DILocation(line: 421, column: 2, scope: !8828)
!8841 = !DILocation(line: 422, column: 2, scope: !8828)
!8842 = !DILocation(line: 422, column: 9, scope: !8828)
!8843 = !DILocation(line: 422, column: 34, scope: !8828)
!8844 = distinct !{!8844, !8841, !8845}
!8845 = !DILocation(line: 423, column: 2, scope: !8828)
!8846 = !DILocation(line: 424, column: 1, scope: !8828)
!8847 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8757, file: !8757, line: 4195, type: !3094, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8848 = !DILocation(line: 4197, column: 3, scope: !8847)
!8849 = !DILocation(line: 4198, column: 1, scope: !8847)
!8850 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8757, file: !8757, line: 4184, type: !3094, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8851 = !DILocation(line: 4186, column: 3, scope: !8850)
!8852 = !DILocation(line: 4187, column: 1, scope: !8850)
!8853 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8757, file: !8757, line: 4205, type: !6504, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8854 = !DILocation(line: 4207, column: 11, scope: !8853)
!8855 = !DILocation(line: 4207, column: 44, scope: !8853)
!8856 = !DILocation(line: 4207, column: 3, scope: !8853)
!8857 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8757, file: !8757, line: 3007, type: !6504, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8858 = !DILocation(line: 3009, column: 11, scope: !8857)
!8859 = !DILocation(line: 3009, column: 44, scope: !8857)
!8860 = !DILocation(line: 3009, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8757, file: !8757, line: 2987, type: !3094, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8862 = !DILocation(line: 2989, column: 3, scope: !8861)
!8863 = !DILocation(line: 2990, column: 1, scope: !8861)
!8864 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8757, file: !8757, line: 2939, type: !3094, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8865 = !DILocation(line: 2941, column: 3, scope: !8864)
!8866 = !DILocation(line: 2942, column: 1, scope: !8864)
!8867 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8757, file: !8757, line: 2949, type: !3094, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8868 = !DILocation(line: 2951, column: 3, scope: !8867)
!8869 = !DILocation(line: 2952, column: 1, scope: !8867)
!8870 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8757, file: !8757, line: 2969, type: !6504, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8871 = !DILocation(line: 2971, column: 11, scope: !8870)
!8872 = !DILocation(line: 2971, column: 44, scope: !8870)
!8873 = !DILocation(line: 2971, column: 3, scope: !8870)
!8874 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8757, file: !8757, line: 3143, type: !3094, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8875 = !DILocation(line: 3145, column: 3, scope: !8874)
!8876 = !DILocation(line: 3146, column: 1, scope: !8874)
!8877 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8757, file: !8757, line: 3163, type: !6504, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !2034)
!8878 = !DILocation(line: 3165, column: 11, scope: !8877)
!8879 = !DILocation(line: 3165, column: 46, scope: !8877)
!8880 = !DILocation(line: 3165, column: 3, scope: !8877)
!8881 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8882, file: !8882, line: 40, type: !6504, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !2034)
!8882 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8883 = !DILocation(line: 45, column: 3, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !8882, line: 44, column: 44)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !8882, line: 44, column: 13)
!8886 = distinct !DILexicalBlock(scope: !8881, file: !8882, line: 42, column: 6)
!8887 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8882, file: !8882, line: 56, type: !3094, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !2034)
!8888 = !DILocation(line: 58, column: 2, scope: !8887)
!8889 = !DILocation(line: 62, column: 1, scope: !8887)
!8890 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8757, file: !8757, line: 4304, type: !8891, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{null, !110, !110, !110, !110}
!8893 = !{!8894, !8895, !8896, !8897}
!8894 = !DILocalVariable(name: "Source", arg: 1, scope: !8890, file: !8757, line: 4304, type: !110)
!8895 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8890, file: !8757, line: 4304, type: !110)
!8896 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8890, file: !8757, line: 4304, type: !110)
!8897 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8890, file: !8757, line: 4304, type: !110)
!8898 = !DILocation(line: 0, scope: !8890)
!8899 = !DILocation(line: 4306, column: 3, scope: !8890)
!8900 = !DILocation(line: 4308, column: 3, scope: !8890)
!8901 = !DILocation(line: 4312, column: 1, scope: !8890)
!8902 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8882, file: !8882, line: 69, type: !3094, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !2034)
!8903 = !DILocation(line: 72, column: 2, scope: !8902)
!8904 = !DILocation(line: 73, column: 1, scope: !8902)
!8905 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8906, file: !8906, line: 1185, type: !6514, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !8907)
!8906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8907 = !{!8908, !8909}
!8908 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8905, file: !8906, line: 1185, type: !110)
!8909 = !DILocalVariable(name: "tmpreg", scope: !8905, file: !8906, line: 1187, type: !316)
!8910 = !DILocation(line: 0, scope: !8905)
!8911 = !DILocation(line: 1187, column: 3, scope: !8905)
!8912 = !DILocation(line: 1187, column: 17, scope: !8905)
!8913 = !DILocation(line: 1188, column: 3, scope: !8905)
!8914 = !DILocation(line: 1190, column: 12, scope: !8905)
!8915 = !DILocation(line: 1190, column: 10, scope: !8905)
!8916 = !DILocation(line: 1191, column: 9, scope: !8905)
!8917 = !DILocation(line: 1192, column: 1, scope: !8905)
!8918 = distinct !DISubprogram(name: "uart_console_init", scope: !1019, file: !1019, line: 588, type: !996, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8919)
!8919 = !{!8920}
!8920 = !DILocalVariable(name: "arg", arg: 1, scope: !8918, file: !1019, line: 588, type: !974)
!8921 = !DILocation(line: 0, scope: !8918)
!8922 = !DILocation(line: 593, column: 7, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !1019, line: 593, column: 6)
!8924 = !DILocation(line: 593, column: 6, scope: !8918)
!8925 = !DILocation(line: 597, column: 2, scope: !8918)
!8926 = !DILocation(line: 599, column: 2, scope: !8918)
!8927 = !DILocation(line: 600, column: 1, scope: !8918)
!8928 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !8930, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8932)
!8929 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!347, !974}
!8932 = !{!8933}
!8933 = !DILocalVariable(name: "dev", arg: 1, scope: !8928, file: !8929, line: 47, type: !974)
!8934 = !DILocation(line: 0, scope: !8928)
!8935 = !DILocation(line: 55, column: 2, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8928, file: !8929, line: 55, column: 2)
!8937 = !{i64 2155054945}
!8938 = !DILocation(line: 56, column: 9, scope: !8928)
!8939 = !DILocation(line: 56, column: 2, scope: !8928)
!8940 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1019, file: !1019, line: 573, type: !3094, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !2034)
!8941 = !DILocation(line: 576, column: 2, scope: !8940)
!8942 = !DILocation(line: 579, column: 2, scope: !8940)
!8943 = !DILocation(line: 581, column: 1, scope: !8940)
!8944 = distinct !DISubprogram(name: "console_out", scope: !1019, file: !1019, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8945)
!8945 = !{!8946}
!8946 = !DILocalVariable(name: "c", arg: 1, scope: !8944, file: !1019, line: 77, type: !109)
!8947 = !DILocation(line: 0, scope: !8944)
!8948 = !DILocation(line: 89, column: 11, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8944, file: !1019, line: 89, column: 6)
!8950 = !DILocation(line: 89, column: 6, scope: !8944)
!8951 = !DILocation(line: 90, column: 3, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8949, file: !1019, line: 89, column: 17)
!8953 = !DILocation(line: 91, column: 2, scope: !8952)
!8954 = !DILocation(line: 92, column: 34, scope: !8944)
!8955 = !DILocation(line: 92, column: 2, scope: !8944)
!8956 = !DILocation(line: 94, column: 2, scope: !8944)
!8957 = distinct !DISubprogram(name: "uart_poll_out", scope: !8958, file: !8958, line: 95, type: !992, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8959)
!8958 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/condvar")
!8959 = !{!8960, !8961}
!8960 = !DILocalVariable(name: "dev", arg: 1, scope: !8957, file: !8958, line: 95, type: !974)
!8961 = !DILocalVariable(name: "out_char", arg: 2, scope: !8957, file: !8958, line: 95, type: !181)
!8962 = !DILocation(line: 0, scope: !8957)
!8963 = !DILocation(line: 105, column: 2, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8957, file: !8958, line: 105, column: 2)
!8965 = !{i64 2155138336}
!8966 = !DILocation(line: 106, column: 2, scope: !8957)
!8967 = !DILocation(line: 107, column: 1, scope: !8957)
!8968 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !968, file: !968, line: 574, type: !992, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8969)
!8969 = !{!8970, !8971, !8972}
!8970 = !DILocalVariable(name: "dev", arg: 1, scope: !8968, file: !968, line: 574, type: !974)
!8971 = !DILocalVariable(name: "out_char", arg: 2, scope: !8968, file: !968, line: 575, type: !181)
!8972 = !DILocalVariable(name: "api", scope: !8968, file: !968, line: 577, type: !965)
!8973 = !DILocation(line: 0, scope: !8968)
!8974 = !DILocation(line: 578, column: 40, scope: !8968)
!8975 = !DILocation(line: 580, column: 7, scope: !8968)
!8976 = !DILocation(line: 580, column: 2, scope: !8968)
!8977 = !DILocation(line: 581, column: 1, scope: !8968)
!8978 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8930, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8979)
!8979 = !{!8980}
!8980 = !DILocalVariable(name: "dev", arg: 1, scope: !8978, file: !336, line: 730, type: !974)
!8981 = !DILocation(line: 0, scope: !8978)
!8982 = !DILocation(line: 732, column: 9, scope: !8978)
!8983 = !DILocation(line: 732, column: 2, scope: !8978)
!8984 = distinct !DISubprogram(name: "uart_register_input", scope: !1019, file: !1019, line: 560, type: !8985, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !9032)
!8985 = !DISubroutineType(types: !8986)
!8986 = !{null, !8987, !8987, !9029}
!8987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8988, size: 32)
!8988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8989)
!8989 = !{!8990}
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8988, file: !118, line: 2209, baseType: !8991, size: 160)
!8991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8992)
!8992 = !{!8993, !9006, !9010}
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8991, file: !118, line: 1710, baseType: !8994, size: 64)
!8994 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8995, line: 46, baseType: !8996)
!8995 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8995, line: 41, size: 64, elements: !8997)
!8997 = !{!8998, !9005}
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8996, file: !8995, line: 42, baseType: !8999, size: 32)
!8999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9000, size: 32)
!9000 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8995, line: 39, baseType: !9001)
!9001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8995, line: 35, size: 32, elements: !9002)
!9002 = !{!9003}
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9001, file: !8995, line: 36, baseType: !9004, size: 32)
!9004 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8995, line: 32, baseType: !110)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8996, file: !8995, line: 43, baseType: !8999, size: 32, offset: 32)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8991, file: !118, line: 1711, baseType: !9007, size: 32, offset: 64)
!9007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !9008)
!9008 = !{!9009}
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9007, file: !253, line: 52, baseType: !22, size: 32)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8991, file: !118, line: 1712, baseType: !9011, size: 64, offset: 96)
!9011 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9012)
!9012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9013)
!9013 = !{!9014}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9012, file: !122, line: 232, baseType: !9015, size: 64)
!9015 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9016)
!9016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9017)
!9017 = !{!9018, !9024}
!9018 = !DIDerivedType(tag: DW_TAG_member, scope: !9016, file: !127, line: 38, baseType: !9019, size: 32)
!9019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9016, file: !127, line: 38, size: 32, elements: !9020)
!9020 = !{!9021, !9023}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9019, file: !127, line: 39, baseType: !9022, size: 32)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 32)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9019, file: !127, line: 40, baseType: !9022, size: 32)
!9024 = !DIDerivedType(tag: DW_TAG_member, scope: !9016, file: !127, line: 42, baseType: !9025, size: 32, offset: 32)
!9025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9016, file: !127, line: 42, size: 32, elements: !9026)
!9026 = !{!9027, !9028}
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9025, file: !127, line: 43, baseType: !9022, size: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9025, file: !127, line: 44, baseType: !9022, size: 32)
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 32)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!180, !285, !180}
!9032 = !{!9033, !9034, !9035}
!9033 = !DILocalVariable(name: "avail", arg: 1, scope: !8984, file: !1019, line: 560, type: !8987)
!9034 = !DILocalVariable(name: "lines", arg: 2, scope: !8984, file: !1019, line: 560, type: !8987)
!9035 = !DILocalVariable(name: "completion", arg: 3, scope: !8984, file: !1019, line: 561, type: !9029)
!9036 = !DILocation(line: 0, scope: !8984)
!9037 = !DILocation(line: 566, column: 1, scope: !8984)
!9038 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1197, file: !1197, line: 523, type: !1055, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9039)
!9039 = !{!9040, !9041, !9042, !9043, !9044}
!9040 = !DILocalVariable(name: "dev", arg: 1, scope: !9038, file: !1197, line: 523, type: !1057)
!9041 = !DILocalVariable(name: "pin", arg: 2, scope: !9038, file: !1197, line: 524, type: !1072)
!9042 = !DILocalVariable(name: "flags", arg: 3, scope: !9038, file: !1197, line: 524, type: !1073)
!9043 = !DILocalVariable(name: "err", scope: !9038, file: !1197, line: 526, type: !109)
!9044 = !DILocalVariable(name: "pincfg", scope: !9038, file: !1197, line: 527, type: !109)
!9045 = !DILocation(line: 0, scope: !9038)
!9046 = !DILocation(line: 527, column: 2, scope: !9038)
!9047 = !DILocation(line: 532, column: 8, scope: !9038)
!9048 = !DILocation(line: 533, column: 10, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9038, file: !1197, line: 533, column: 6)
!9050 = !DILocation(line: 533, column: 6, scope: !9038)
!9051 = !DILocation(line: 543, column: 13, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9038, file: !1197, line: 543, column: 6)
!9053 = !DILocation(line: 543, column: 28, scope: !9052)
!9054 = !DILocation(line: 543, column: 6, scope: !9038)
!9055 = !DILocation(line: 544, column: 14, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !1197, line: 544, column: 7)
!9057 = distinct !DILexicalBlock(scope: !9052, file: !1197, line: 543, column: 34)
!9058 = !DILocation(line: 544, column: 39, scope: !9056)
!9059 = !DILocation(line: 544, column: 7, scope: !9057)
!9060 = !DILocation(line: 545, column: 38, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !1197, line: 544, column: 45)
!9062 = !DILocation(line: 545, column: 4, scope: !9061)
!9063 = !DILocation(line: 546, column: 3, scope: !9061)
!9064 = !DILocation(line: 546, column: 21, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9056, file: !1197, line: 546, column: 14)
!9066 = !DILocation(line: 546, column: 45, scope: !9065)
!9067 = !DILocation(line: 546, column: 14, scope: !9056)
!9068 = !DILocation(line: 547, column: 40, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9065, file: !1197, line: 546, column: 51)
!9070 = !DILocation(line: 547, column: 4, scope: !9069)
!9071 = !DILocation(line: 548, column: 3, scope: !9069)
!9072 = !DILocation(line: 551, column: 32, scope: !9038)
!9073 = !DILocation(line: 551, column: 37, scope: !9038)
!9074 = !DILocation(line: 551, column: 2, scope: !9038)
!9075 = !DILocation(line: 554, column: 6, scope: !9038)
!9076 = !DILocation(line: 562, column: 1, scope: !9038)
!9077 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1197, file: !1197, line: 410, type: !9078, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9080)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{!109, !1057, !884}
!9080 = !{!9081, !9082, !9083, !9085}
!9081 = !DILocalVariable(name: "dev", arg: 1, scope: !9077, file: !1197, line: 410, type: !1057)
!9082 = !DILocalVariable(name: "value", arg: 2, scope: !9077, file: !1197, line: 410, type: !884)
!9083 = !DILocalVariable(name: "cfg", scope: !9077, file: !1197, line: 412, type: !9084)
!9084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!9085 = !DILocalVariable(name: "gpio", scope: !9077, file: !1197, line: 413, type: !1130)
!9086 = !DILocation(line: 0, scope: !9077)
!9087 = !DILocation(line: 412, column: 45, scope: !9077)
!9088 = !DILocation(line: 413, column: 44, scope: !9077)
!9089 = !DILocation(line: 415, column: 11, scope: !9077)
!9090 = !DILocation(line: 415, column: 9, scope: !9077)
!9091 = !DILocation(line: 417, column: 2, scope: !9077)
!9092 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1197, file: !1197, line: 420, type: !1082, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9093)
!9093 = !{!9094, !9095, !9096, !9097, !9098, !9099}
!9094 = !DILocalVariable(name: "dev", arg: 1, scope: !9092, file: !1197, line: 420, type: !1057)
!9095 = !DILocalVariable(name: "mask", arg: 2, scope: !9092, file: !1197, line: 421, type: !1084)
!9096 = !DILocalVariable(name: "value", arg: 3, scope: !9092, file: !1197, line: 422, type: !1079)
!9097 = !DILocalVariable(name: "cfg", scope: !9092, file: !1197, line: 424, type: !9084)
!9098 = !DILocalVariable(name: "gpio", scope: !9092, file: !1197, line: 425, type: !1130)
!9099 = !DILocalVariable(name: "port_value", scope: !9092, file: !1197, line: 426, type: !110)
!9100 = !DILocation(line: 0, scope: !9092)
!9101 = !DILocation(line: 424, column: 45, scope: !9092)
!9102 = !DILocation(line: 425, column: 44, scope: !9092)
!9103 = !DILocation(line: 430, column: 15, scope: !9092)
!9104 = !DILocation(line: 431, column: 46, scope: !9092)
!9105 = !DILocation(line: 431, column: 44, scope: !9092)
!9106 = !DILocation(line: 431, column: 61, scope: !9092)
!9107 = !DILocation(line: 431, column: 53, scope: !9092)
!9108 = !DILocation(line: 431, column: 2, scope: !9092)
!9109 = !DILocation(line: 435, column: 2, scope: !9092)
!9110 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1197, file: !1197, line: 438, type: !1087, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9111)
!9111 = !{!9112, !9113, !9114, !9115}
!9112 = !DILocalVariable(name: "dev", arg: 1, scope: !9110, file: !1197, line: 438, type: !1057)
!9113 = !DILocalVariable(name: "pins", arg: 2, scope: !9110, file: !1197, line: 439, type: !1084)
!9114 = !DILocalVariable(name: "cfg", scope: !9110, file: !1197, line: 441, type: !9084)
!9115 = !DILocalVariable(name: "gpio", scope: !9110, file: !1197, line: 442, type: !1130)
!9116 = !DILocation(line: 0, scope: !9110)
!9117 = !DILocation(line: 441, column: 45, scope: !9110)
!9118 = !DILocation(line: 442, column: 44, scope: !9110)
!9119 = !DILocation(line: 448, column: 2, scope: !9110)
!9120 = !DILocation(line: 450, column: 2, scope: !9110)
!9121 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1197, file: !1197, line: 453, type: !1087, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9122)
!9122 = !{!9123, !9124, !9125, !9126}
!9123 = !DILocalVariable(name: "dev", arg: 1, scope: !9121, file: !1197, line: 453, type: !1057)
!9124 = !DILocalVariable(name: "pins", arg: 2, scope: !9121, file: !1197, line: 454, type: !1084)
!9125 = !DILocalVariable(name: "cfg", scope: !9121, file: !1197, line: 456, type: !9084)
!9126 = !DILocalVariable(name: "gpio", scope: !9121, file: !1197, line: 457, type: !1130)
!9127 = !DILocation(line: 0, scope: !9121)
!9128 = !DILocation(line: 456, column: 45, scope: !9121)
!9129 = !DILocation(line: 457, column: 44, scope: !9121)
!9130 = !DILocation(line: 467, column: 2, scope: !9121)
!9131 = !DILocation(line: 470, column: 2, scope: !9121)
!9132 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1197, file: !1197, line: 473, type: !1087, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9133)
!9133 = !{!9134, !9135, !9136, !9137}
!9134 = !DILocalVariable(name: "dev", arg: 1, scope: !9132, file: !1197, line: 473, type: !1057)
!9135 = !DILocalVariable(name: "pins", arg: 2, scope: !9132, file: !1197, line: 474, type: !1084)
!9136 = !DILocalVariable(name: "cfg", scope: !9132, file: !1197, line: 476, type: !9084)
!9137 = !DILocalVariable(name: "gpio", scope: !9132, file: !1197, line: 477, type: !1130)
!9138 = !DILocation(line: 0, scope: !9132)
!9139 = !DILocation(line: 476, column: 45, scope: !9132)
!9140 = !DILocation(line: 477, column: 44, scope: !9132)
!9141 = !DILocation(line: 484, column: 2, scope: !9132)
!9142 = !DILocation(line: 487, column: 2, scope: !9132)
!9143 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1197, file: !1197, line: 594, type: !1093, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9144)
!9144 = !{!9145, !9146, !9147, !9148, !9149, !9150, !9152, !9153, !9154}
!9145 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !1197, line: 594, type: !1057)
!9146 = !DILocalVariable(name: "pin", arg: 2, scope: !9143, file: !1197, line: 595, type: !1072)
!9147 = !DILocalVariable(name: "mode", arg: 3, scope: !9143, file: !1197, line: 596, type: !1031)
!9148 = !DILocalVariable(name: "trig", arg: 4, scope: !9143, file: !1197, line: 597, type: !1037)
!9149 = !DILocalVariable(name: "cfg", scope: !9143, file: !1197, line: 599, type: !9084)
!9150 = !DILocalVariable(name: "data", scope: !9143, file: !1197, line: 600, type: !9151)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!9152 = !DILocalVariable(name: "edge", scope: !9143, file: !1197, line: 601, type: !109)
!9153 = !DILocalVariable(name: "err", scope: !9143, file: !1197, line: 602, type: !109)
!9154 = !DILabel(scope: !9143, name: "exit", file: !1197, line: 643)
!9155 = !DILocation(line: 0, scope: !9143)
!9156 = !DILocation(line: 599, column: 45, scope: !9143)
!9157 = !DILocation(line: 604, column: 6, scope: !9143)
!9158 = !DILocation(line: 605, column: 34, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9160, file: !1197, line: 605, column: 7)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !1197, line: 604, column: 38)
!9161 = distinct !DILexicalBlock(scope: !9143, file: !1197, line: 604, column: 6)
!9162 = !DILocation(line: 605, column: 7, scope: !9159)
!9163 = !DILocation(line: 605, column: 47, scope: !9159)
!9164 = !DILocation(line: 605, column: 39, scope: !9159)
!9165 = !DILocation(line: 605, column: 7, scope: !9160)
!9166 = !DILocation(line: 606, column: 4, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9159, file: !1197, line: 605, column: 53)
!9168 = !DILocation(line: 607, column: 4, scope: !9167)
!9169 = !DILocation(line: 608, column: 4, scope: !9167)
!9170 = !DILocation(line: 609, column: 3, scope: !9167)
!9171 = !DILocation(line: 600, column: 38, scope: !9143)
!9172 = !DILocation(line: 620, column: 30, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9143, file: !1197, line: 620, column: 6)
!9174 = !DILocation(line: 620, column: 6, scope: !9173)
!9175 = !DILocation(line: 620, column: 57, scope: !9173)
!9176 = !DILocation(line: 620, column: 6, scope: !9143)
!9177 = !DILocation(line: 625, column: 29, scope: !9143)
!9178 = !DILocation(line: 625, column: 2, scope: !9143)
!9179 = !DILocation(line: 627, column: 2, scope: !9143)
!9180 = !DILocation(line: 630, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9143, file: !1197, line: 627, column: 16)
!9182 = !DILocation(line: 633, column: 3, scope: !9181)
!9183 = !DILocation(line: 636, column: 3, scope: !9181)
!9184 = !DILocation(line: 639, column: 2, scope: !9143)
!9185 = !DILocation(line: 641, column: 2, scope: !9143)
!9186 = !DILocation(line: 643, column: 1, scope: !9143)
!9187 = !DILocation(line: 644, column: 2, scope: !9143)
!9188 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1197, file: !1197, line: 647, type: !1097, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9189)
!9189 = !{!9190, !9191, !9192, !9193}
!9190 = !DILocalVariable(name: "dev", arg: 1, scope: !9188, file: !1197, line: 647, type: !1057)
!9191 = !DILocalVariable(name: "callback", arg: 2, scope: !9188, file: !1197, line: 648, type: !1099)
!9192 = !DILocalVariable(name: "set", arg: 3, scope: !9188, file: !1197, line: 649, type: !347)
!9193 = !DILocalVariable(name: "data", scope: !9188, file: !1197, line: 651, type: !9151)
!9194 = !DILocation(line: 0, scope: !9188)
!9195 = !DILocation(line: 651, column: 38, scope: !9188)
!9196 = !DILocation(line: 653, column: 37, scope: !9188)
!9197 = !DILocation(line: 653, column: 9, scope: !9188)
!9198 = !DILocation(line: 653, column: 2, scope: !9188)
!9199 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9200, file: !9200, line: 38, type: !9201, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9204)
!9200 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9201 = !DISubroutineType(types: !9202)
!9202 = !{!109, !9203, !1099, !347}
!9203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!9204 = !{!9205, !9206, !9207}
!9205 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9199, file: !9200, line: 38, type: !9203)
!9206 = !DILocalVariable(name: "callback", arg: 2, scope: !9199, file: !9200, line: 39, type: !1099)
!9207 = !DILocalVariable(name: "set", arg: 3, scope: !9199, file: !9200, line: 40, type: !347)
!9208 = !DILocation(line: 0, scope: !9199)
!9209 = !DILocation(line: 42, column: 2, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !9200, line: 42, column: 2)
!9211 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 42, column: 2)
!9212 = !DILocation(line: 42, column: 2, scope: !9211)
!9213 = !DILocation(line: 42, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9210, file: !9200, line: 42, column: 2)
!9215 = !DILocation(line: 43, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !9200, line: 43, column: 2)
!9217 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 43, column: 2)
!9218 = !DILocation(line: 43, column: 2, scope: !9217)
!9219 = !DILocation(line: 43, column: 2, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !9200, line: 43, column: 2)
!9221 = !DILocation(line: 45, column: 7, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 45, column: 6)
!9223 = !DILocation(line: 45, column: 6, scope: !9199)
!9224 = !DILocation(line: 46, column: 56, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !9200, line: 46, column: 7)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !9200, line: 45, column: 38)
!9227 = !DILocation(line: 46, column: 8, scope: !9225)
!9228 = !DILocation(line: 46, column: 7, scope: !9226)
!9229 = !DILocation(line: 51, column: 13, scope: !9222)
!9230 = !DILocation(line: 56, column: 43, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !9200, line: 55, column: 11)
!9232 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 55, column: 6)
!9233 = !DILocation(line: 56, column: 3, scope: !9231)
!9234 = !DILocation(line: 57, column: 2, scope: !9231)
!9235 = !DILocation(line: 60, column: 1, scope: !9199)
!9236 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1104, file: !1104, line: 261, type: !9237, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9239)
!9237 = !DISubroutineType(types: !9238)
!9238 = !{!347, !9203}
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "list", arg: 1, scope: !9236, file: !1104, line: 261, type: !9203)
!9241 = !DILocation(line: 0, scope: !9236)
!9242 = !DILocation(line: 261, column: 1, scope: !9236)
!9243 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1104, file: !1104, line: 417, type: !9244, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9246)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{!347, !9203, !1276}
!9246 = !{!9247, !9248, !9249, !9250}
!9247 = !DILocalVariable(name: "list", arg: 1, scope: !9243, file: !1104, line: 417, type: !9203)
!9248 = !DILocalVariable(name: "node", arg: 2, scope: !9243, file: !1104, line: 417, type: !1276)
!9249 = !DILocalVariable(name: "prev", scope: !9243, file: !1104, line: 417, type: !1276)
!9250 = !DILocalVariable(name: "test", scope: !9243, file: !1104, line: 417, type: !1276)
!9251 = !DILocation(line: 0, scope: !9243)
!9252 = !DILocation(line: 417, column: 1, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9243, file: !1104, line: 417, column: 1)
!9254 = !DILocation(line: 417, column: 1, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9253, file: !1104, line: 417, column: 1)
!9256 = !DILocation(line: 417, column: 1, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !1104, line: 417, column: 1)
!9258 = distinct !DILexicalBlock(scope: !9255, file: !1104, line: 417, column: 1)
!9259 = !DILocation(line: 417, column: 1, scope: !9258)
!9260 = distinct !{!9260, !9252, !9252}
!9261 = !DILocation(line: 417, column: 1, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9257, file: !1104, line: 417, column: 1)
!9263 = !DILocation(line: 417, column: 1, scope: !9243)
!9264 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1104, file: !1104, line: 298, type: !9265, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9267)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{null, !9203, !1276}
!9267 = !{!9268, !9269}
!9268 = !DILocalVariable(name: "list", arg: 1, scope: !9264, file: !1104, line: 298, type: !9203)
!9269 = !DILocalVariable(name: "node", arg: 2, scope: !9264, file: !1104, line: 298, type: !1276)
!9270 = !DILocation(line: 0, scope: !9264)
!9271 = !DILocation(line: 298, column: 1, scope: !9264)
!9272 = !DILocation(line: 298, column: 1, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9264, file: !1104, line: 298, column: 1)
!9274 = !DILocation(line: 298, column: 1, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9273, file: !1104, line: 298, column: 1)
!9276 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1104, file: !1104, line: 231, type: !9277, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9279)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!1276, !9203}
!9279 = !{!9280}
!9280 = !DILocalVariable(name: "list", arg: 1, scope: !9276, file: !1104, line: 231, type: !9203)
!9281 = !DILocation(line: 0, scope: !9276)
!9282 = !DILocation(line: 233, column: 15, scope: !9276)
!9283 = !DILocation(line: 233, column: 2, scope: !9276)
!9284 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1104, file: !1104, line: 209, type: !9285, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{null, !1276, !1276}
!9287 = !{!9288, !9289}
!9288 = !DILocalVariable(name: "parent", arg: 1, scope: !9284, file: !1104, line: 209, type: !1276)
!9289 = !DILocalVariable(name: "child", arg: 2, scope: !9284, file: !1104, line: 209, type: !1276)
!9290 = !DILocation(line: 0, scope: !9284)
!9291 = !DILocation(line: 211, column: 10, scope: !9284)
!9292 = !DILocation(line: 211, column: 15, scope: !9284)
!9293 = !DILocation(line: 212, column: 1, scope: !9284)
!9294 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1104, file: !1104, line: 214, type: !9265, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9295)
!9295 = !{!9296, !9297}
!9296 = !DILocalVariable(name: "list", arg: 1, scope: !9294, file: !1104, line: 214, type: !9203)
!9297 = !DILocalVariable(name: "node", arg: 2, scope: !9294, file: !1104, line: 214, type: !1276)
!9298 = !DILocation(line: 0, scope: !9294)
!9299 = !DILocation(line: 216, column: 8, scope: !9294)
!9300 = !DILocation(line: 216, column: 13, scope: !9294)
!9301 = !DILocation(line: 217, column: 1, scope: !9294)
!9302 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1104, file: !1104, line: 243, type: !9277, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9303)
!9303 = !{!9304}
!9304 = !DILocalVariable(name: "list", arg: 1, scope: !9302, file: !1104, line: 243, type: !9203)
!9305 = !DILocation(line: 0, scope: !9302)
!9306 = !DILocation(line: 245, column: 15, scope: !9302)
!9307 = !DILocation(line: 245, column: 2, scope: !9302)
!9308 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1104, file: !1104, line: 219, type: !9265, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9309)
!9309 = !{!9310, !9311}
!9310 = !DILocalVariable(name: "list", arg: 1, scope: !9308, file: !1104, line: 219, type: !9203)
!9311 = !DILocalVariable(name: "node", arg: 2, scope: !9308, file: !1104, line: 219, type: !1276)
!9312 = !DILocation(line: 0, scope: !9308)
!9313 = !DILocation(line: 221, column: 8, scope: !9308)
!9314 = !DILocation(line: 221, column: 13, scope: !9308)
!9315 = !DILocation(line: 222, column: 1, scope: !9308)
!9316 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1104, file: !1104, line: 401, type: !9317, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9319)
!9317 = !DISubroutineType(types: !9318)
!9318 = !{null, !9203, !1276, !1276}
!9319 = !{!9320, !9321, !9322}
!9320 = !DILocalVariable(name: "list", arg: 1, scope: !9316, file: !1104, line: 401, type: !9203)
!9321 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9316, file: !1104, line: 401, type: !1276)
!9322 = !DILocalVariable(name: "node", arg: 3, scope: !9316, file: !1104, line: 401, type: !1276)
!9323 = !DILocation(line: 0, scope: !9316)
!9324 = !DILocation(line: 401, column: 1, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9316, file: !1104, line: 401, column: 1)
!9326 = !DILocation(line: 0, scope: !9325)
!9327 = !DILocation(line: 401, column: 1, scope: !9316)
!9328 = !DILocation(line: 401, column: 1, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9325, file: !1104, line: 401, column: 1)
!9330 = !DILocation(line: 401, column: 1, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9329, file: !1104, line: 401, column: 1)
!9332 = !DILocation(line: 401, column: 1, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9331, file: !1104, line: 401, column: 1)
!9334 = !DILocation(line: 401, column: 1, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9325, file: !1104, line: 401, column: 1)
!9336 = !DILocation(line: 401, column: 1, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !1104, line: 401, column: 1)
!9338 = !DILocation(line: 401, column: 1, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9337, file: !1104, line: 401, column: 1)
!9340 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1104, file: !1104, line: 285, type: !9341, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!1276, !1276}
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "node", arg: 1, scope: !9340, file: !1104, line: 285, type: !1276)
!9345 = !DILocation(line: 0, scope: !9340)
!9346 = !DILocation(line: 285, column: 1, scope: !9340)
!9347 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1104, file: !1104, line: 274, type: !9341, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9348)
!9348 = !{!9349}
!9349 = !DILocalVariable(name: "node", arg: 1, scope: !9347, file: !1104, line: 274, type: !1276)
!9350 = !DILocation(line: 0, scope: !9347)
!9351 = !DILocation(line: 274, column: 1, scope: !9347)
!9352 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1104, file: !1104, line: 204, type: !9341, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9353)
!9353 = !{!9354}
!9354 = !DILocalVariable(name: "node", arg: 1, scope: !9352, file: !1104, line: 204, type: !1276)
!9355 = !DILocation(line: 0, scope: !9352)
!9356 = !DILocation(line: 206, column: 15, scope: !9352)
!9357 = !DILocation(line: 206, column: 2, scope: !9352)
!9358 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1197, file: !1197, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9359)
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "pin", arg: 1, scope: !9358, file: !1197, line: 342, type: !109)
!9361 = !DILocalVariable(name: "line", scope: !9358, file: !1197, line: 344, type: !110)
!9362 = !DILocalVariable(name: "port", scope: !9358, file: !1197, line: 345, type: !109)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 344, column: 18, scope: !9358)
!9365 = !{i32 983040, i32 0}
!9366 = !DILocation(line: 356, column: 9, scope: !9358)
!9367 = !DILocation(line: 370, column: 2, scope: !9358)
!9368 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1197, file: !1197, line: 37, type: !749, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9369)
!9369 = !{!9370, !9371, !9372}
!9370 = !DILocalVariable(name: "line", arg: 1, scope: !9368, file: !1197, line: 37, type: !109)
!9371 = !DILocalVariable(name: "arg", arg: 2, scope: !9368, file: !1197, line: 37, type: !107)
!9372 = !DILocalVariable(name: "data", scope: !9368, file: !1197, line: 39, type: !9151)
!9373 = !DILocation(line: 0, scope: !9368)
!9374 = !DILocation(line: 41, column: 29, scope: !9368)
!9375 = !DILocation(line: 41, column: 39, scope: !9368)
!9376 = !DILocation(line: 41, column: 44, scope: !9368)
!9377 = !DILocation(line: 41, column: 2, scope: !9368)
!9378 = !DILocation(line: 42, column: 1, scope: !9368)
!9379 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1197, file: !1197, line: 376, type: !9380, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9382)
!9380 = !DISubroutineType(types: !9381)
!9381 = !{!109, !109, !109}
!9382 = !{!9383, !9384, !9385, !9387, !9388}
!9383 = !DILocalVariable(name: "port", arg: 1, scope: !9379, file: !1197, line: 376, type: !109)
!9384 = !DILocalVariable(name: "pin", arg: 2, scope: !9379, file: !1197, line: 376, type: !109)
!9385 = !DILocalVariable(name: "clk", scope: !9379, file: !1197, line: 386, type: !9386)
!9386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!9387 = !DILocalVariable(name: "pclken", scope: !9379, file: !1197, line: 387, type: !1323)
!9388 = !DILocalVariable(name: "ret", scope: !9379, file: !1197, line: 396, type: !109)
!9389 = !DILocation(line: 0, scope: !9379)
!9390 = !DILocation(line: 387, column: 2, scope: !9379)
!9391 = !DILocation(line: 387, column: 22, scope: !9379)
!9392 = !DILocation(line: 399, column: 8, scope: !9379)
!9393 = !DILocation(line: 400, column: 10, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9379, file: !1197, line: 400, column: 6)
!9395 = !DILocation(line: 400, column: 6, scope: !9379)
!9396 = !DILocation(line: 405, column: 2, scope: !9379)
!9397 = !DILocation(line: 407, column: 2, scope: !9379)
!9398 = !DILocation(line: 408, column: 1, scope: !9379)
!9399 = distinct !DISubprogram(name: "clock_control_on", scope: !836, file: !836, line: 123, type: !1162, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403}
!9401 = !DILocalVariable(name: "dev", arg: 1, scope: !9399, file: !836, line: 123, type: !1057)
!9402 = !DILocalVariable(name: "sys", arg: 2, scope: !9399, file: !836, line: 124, type: !928)
!9403 = !DILocalVariable(name: "api", scope: !9399, file: !836, line: 126, type: !1155)
!9404 = !DILocation(line: 0, scope: !9399)
!9405 = !DILocation(line: 127, column: 49, scope: !9399)
!9406 = !DILocation(line: 129, column: 14, scope: !9399)
!9407 = !DILocation(line: 129, column: 9, scope: !9399)
!9408 = !DILocation(line: 129, column: 2, scope: !9399)
!9409 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1197, file: !1197, line: 311, type: !8514, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "port", arg: 1, scope: !9409, file: !1197, line: 311, type: !109)
!9412 = !DILocalVariable(name: "pin", arg: 2, scope: !9409, file: !1197, line: 311, type: !109)
!9413 = !DILocalVariable(name: "line", scope: !9409, file: !1197, line: 313, type: !110)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 313, column: 18, scope: !9409)
!9416 = !DILocation(line: 337, column: 2, scope: !9409)
!9417 = !DILocation(line: 340, column: 1, scope: !9409)
!9418 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1197, file: !1197, line: 295, type: !9419, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9421)
!9419 = !DISubroutineType(types: !9420)
!9420 = !{!110, !109}
!9421 = !{!9422}
!9422 = !DILocalVariable(name: "pin", arg: 1, scope: !9418, file: !1197, line: 295, type: !109)
!9423 = !DILocation(line: 0, scope: !9418)
!9424 = !DILocation(line: 307, column: 46, scope: !9418)
!9425 = !DILocation(line: 307, column: 27, scope: !9418)
!9426 = !DILocation(line: 307, column: 32, scope: !9418)
!9427 = !DILocation(line: 307, column: 14, scope: !9418)
!9428 = !DILocation(line: 307, column: 39, scope: !9418)
!9429 = !DILocation(line: 307, column: 2, scope: !9418)
!9430 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6117, file: !6117, line: 671, type: !9431, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9433)
!9431 = !DISubroutineType(types: !9432)
!9432 = !{null, !110, !110}
!9433 = !{!9434, !9435}
!9434 = !DILocalVariable(name: "Port", arg: 1, scope: !9430, file: !6117, line: 671, type: !110)
!9435 = !DILocalVariable(name: "Line", arg: 2, scope: !9430, file: !6117, line: 671, type: !110)
!9436 = !DILocation(line: 0, scope: !9430)
!9437 = !DILocation(line: 673, column: 3, scope: !9430)
!9438 = !DILocalVariable(name: "value", arg: 1, scope: !9439, file: !6417, line: 373, type: !110)
!9439 = distinct !DISubprogram(name: "__RBIT", scope: !6417, file: !6417, line: 373, type: !7704, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9440)
!9440 = !{!9438, !9441}
!9441 = !DILocalVariable(name: "result", scope: !9439, file: !6417, line: 375, type: !110)
!9442 = !DILocation(line: 0, scope: !9439, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 673, column: 3, scope: !9430)
!9444 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9443)
!9445 = !{i64 3549597}
!9446 = !DILocalVariable(name: "value", arg: 1, scope: !9447, file: !6417, line: 403, type: !110)
!9447 = distinct !DISubprogram(name: "__CLZ", scope: !6417, file: !6417, line: 403, type: !9448, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9450)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!180, !110}
!9450 = !{!9446}
!9451 = !DILocation(line: 0, scope: !9447, inlinedAt: !9452)
!9452 = distinct !DILocation(line: 673, column: 3, scope: !9430)
!9453 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9452)
!9454 = !DILocation(line: 674, column: 1, scope: !9430)
!9455 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9200, file: !9200, line: 69, type: !9456, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9458)
!9456 = !DISubroutineType(types: !9457)
!9457 = !{null, !9203, !1057, !110}
!9458 = !{!9459, !9460, !9461, !9462, !9463}
!9459 = !DILocalVariable(name: "list", arg: 1, scope: !9455, file: !9200, line: 69, type: !9203)
!9460 = !DILocalVariable(name: "port", arg: 2, scope: !9455, file: !9200, line: 70, type: !1057)
!9461 = !DILocalVariable(name: "pins", arg: 3, scope: !9455, file: !9200, line: 71, type: !110)
!9462 = !DILocalVariable(name: "cb", scope: !9455, file: !9200, line: 73, type: !1099)
!9463 = !DILocalVariable(name: "tmp", scope: !9455, file: !9200, line: 73, type: !1099)
!9464 = !DILocation(line: 0, scope: !9455)
!9465 = !DILocation(line: 75, column: 2, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9455, file: !9200, line: 75, column: 2)
!9467 = !DILocation(line: 0, scope: !9466)
!9468 = !DILocation(line: 76, column: 11, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !9200, line: 76, column: 7)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !9200, line: 75, column: 57)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !9200, line: 75, column: 2)
!9472 = !DILocation(line: 76, column: 20, scope: !9469)
!9473 = !DILocation(line: 76, column: 7, scope: !9470)
!9474 = !DILocation(line: 77, column: 4, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !9200, line: 77, column: 4)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !9200, line: 77, column: 4)
!9477 = distinct !DILexicalBlock(scope: !9469, file: !9200, line: 76, column: 28)
!9478 = !DILocation(line: 77, column: 4, scope: !9476)
!9479 = !DILocation(line: 77, column: 4, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9475, file: !9200, line: 77, column: 4)
!9481 = !DILocation(line: 78, column: 4, scope: !9477)
!9482 = !DILocation(line: 79, column: 3, scope: !9477)
!9483 = !DILocation(line: 75, column: 2, scope: !9471)
!9484 = !DILocation(line: 81, column: 1, scope: !9455)
!9485 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6117, file: !6117, line: 710, type: !7704, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9486)
!9486 = !{!9487}
!9487 = !DILocalVariable(name: "Line", arg: 1, scope: !9485, file: !6117, line: 710, type: !110)
!9488 = !DILocation(line: 0, scope: !9485)
!9489 = !DILocation(line: 712, column: 21, scope: !9485)
!9490 = !DILocation(line: 0, scope: !9439, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 712, column: 76, scope: !9485)
!9492 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9491)
!9493 = !DILocation(line: 0, scope: !9447, inlinedAt: !9494)
!9494 = distinct !DILocation(line: 712, column: 76, scope: !9485)
!9495 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9494)
!9496 = !DILocation(line: 712, column: 73, scope: !9485)
!9497 = !DILocation(line: 712, column: 3, scope: !9485)
!9498 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9499, file: !9499, line: 910, type: !9500, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9502)
!9499 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9500 = !DISubroutineType(types: !9501)
!9501 = !{null, !1130, !110}
!9502 = !{!9503, !9504}
!9503 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9498, file: !9499, line: 910, type: !1130)
!9504 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9498, file: !9499, line: 910, type: !110)
!9505 = !DILocation(line: 0, scope: !9498)
!9506 = !DILocation(line: 912, column: 3, scope: !9498)
!9507 = !DILocation(line: 913, column: 1, scope: !9498)
!9508 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9499, file: !9499, line: 823, type: !9509, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9511)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{!110, !1130}
!9511 = !{!9512}
!9512 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9508, file: !9499, line: 823, type: !1130)
!9513 = !DILocation(line: 0, scope: !9508)
!9514 = !DILocation(line: 825, column: 21, scope: !9508)
!9515 = !DILocation(line: 825, column: 3, scope: !9508)
!9516 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9499, file: !9499, line: 812, type: !9500, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9517)
!9517 = !{!9518, !9519}
!9518 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9516, file: !9499, line: 812, type: !1130)
!9519 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9516, file: !9499, line: 812, type: !110)
!9520 = !DILocation(line: 0, scope: !9516)
!9521 = !DILocation(line: 814, column: 3, scope: !9516)
!9522 = !DILocation(line: 815, column: 1, scope: !9516)
!9523 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9499, file: !9499, line: 771, type: !9509, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9524)
!9524 = !{!9525}
!9525 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9523, file: !9499, line: 771, type: !1130)
!9526 = !DILocation(line: 0, scope: !9523)
!9527 = !DILocation(line: 773, column: 21, scope: !9523)
!9528 = !DILocation(line: 773, column: 3, scope: !9523)
!9529 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1197, file: !1197, line: 47, type: !9530, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9532)
!9530 = !DISubroutineType(types: !9531)
!9531 = !{!109, !1073, !281}
!9532 = !{!9533, !9534}
!9533 = !DILocalVariable(name: "flags", arg: 1, scope: !9529, file: !1197, line: 47, type: !1073)
!9534 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9529, file: !1197, line: 47, type: !281)
!9535 = !DILocation(line: 0, scope: !9529)
!9536 = !DILocation(line: 50, column: 13, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9529, file: !1197, line: 50, column: 6)
!9538 = !DILocation(line: 50, column: 28, scope: !9537)
!9539 = !DILocation(line: 50, column: 6, scope: !9529)
!9540 = !DILocation(line: 53, column: 11, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9537, file: !1197, line: 50, column: 34)
!9542 = !DILocation(line: 55, column: 14, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9541, file: !1197, line: 55, column: 7)
!9544 = !DILocation(line: 55, column: 35, scope: !9543)
!9545 = !DILocation(line: 55, column: 7, scope: !9541)
!9546 = !DILocation(line: 56, column: 14, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !1197, line: 56, column: 8)
!9548 = distinct !DILexicalBlock(scope: !9543, file: !1197, line: 55, column: 41)
!9549 = !DILocation(line: 56, column: 8, scope: !9548)
!9550 = !DILocation(line: 0, scope: !9543)
!9551 = !DILocation(line: 66, column: 14, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9541, file: !1197, line: 66, column: 7)
!9553 = !DILocation(line: 66, column: 30, scope: !9552)
!9554 = !DILocation(line: 66, column: 7, scope: !9541)
!9555 = !DILocation(line: 67, column: 12, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !1197, line: 66, column: 36)
!9557 = !DILocation(line: 68, column: 3, scope: !9556)
!9558 = !DILocation(line: 68, column: 21, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9552, file: !1197, line: 68, column: 14)
!9560 = !DILocation(line: 68, column: 39, scope: !9559)
!9561 = !DILocation(line: 68, column: 14, scope: !9552)
!9562 = !DILocation(line: 69, column: 12, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !1197, line: 68, column: 45)
!9564 = !DILocation(line: 70, column: 3, scope: !9563)
!9565 = !DILocation(line: 72, column: 21, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9537, file: !1197, line: 72, column: 14)
!9567 = !DILocation(line: 72, column: 35, scope: !9566)
!9568 = !DILocation(line: 72, column: 14, scope: !9537)
!9569 = !DILocation(line: 77, column: 14, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1197, line: 77, column: 7)
!9571 = distinct !DILexicalBlock(scope: !9566, file: !1197, line: 72, column: 41)
!9572 = !DILocation(line: 77, column: 30, scope: !9570)
!9573 = !DILocation(line: 77, column: 7, scope: !9571)
!9574 = !DILocation(line: 0, scope: !9537)
!9575 = !DILocation(line: 90, column: 1, scope: !9529)
!9576 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1197, file: !1197, line: 157, type: !9577, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9579)
!9577 = !DISubroutineType(types: !9578)
!9578 = !{null, !1057, !109, !109, !109}
!9579 = !{!9580, !9581, !9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590}
!9580 = !DILocalVariable(name: "dev", arg: 1, scope: !9576, file: !1197, line: 157, type: !1057)
!9581 = !DILocalVariable(name: "pin", arg: 2, scope: !9576, file: !1197, line: 157, type: !109)
!9582 = !DILocalVariable(name: "conf", arg: 3, scope: !9576, file: !1197, line: 158, type: !109)
!9583 = !DILocalVariable(name: "func", arg: 4, scope: !9576, file: !1197, line: 158, type: !109)
!9584 = !DILocalVariable(name: "cfg", scope: !9576, file: !1197, line: 160, type: !9084)
!9585 = !DILocalVariable(name: "gpio", scope: !9576, file: !1197, line: 161, type: !1130)
!9586 = !DILocalVariable(name: "pin_ll", scope: !9576, file: !1197, line: 163, type: !109)
!9587 = !DILocalVariable(name: "mode", scope: !9576, file: !1197, line: 227, type: !32)
!9588 = !DILocalVariable(name: "otype", scope: !9576, file: !1197, line: 227, type: !32)
!9589 = !DILocalVariable(name: "ospeed", scope: !9576, file: !1197, line: 227, type: !32)
!9590 = !DILocalVariable(name: "pupd", scope: !9576, file: !1197, line: 227, type: !32)
!9591 = !DILocation(line: 0, scope: !9576)
!9592 = !DILocation(line: 160, column: 45, scope: !9576)
!9593 = !DILocation(line: 161, column: 44, scope: !9576)
!9594 = !DILocation(line: 163, column: 15, scope: !9576)
!9595 = !DILocation(line: 229, column: 14, scope: !9576)
!9596 = !DILocation(line: 246, column: 47, scope: !9576)
!9597 = !DILocation(line: 246, column: 2, scope: !9576)
!9598 = !DILocation(line: 248, column: 43, scope: !9576)
!9599 = !DILocation(line: 248, column: 2, scope: !9576)
!9600 = !DILocation(line: 250, column: 40, scope: !9576)
!9601 = !DILocation(line: 250, column: 2, scope: !9576)
!9602 = !DILocation(line: 252, column: 11, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9576, file: !1197, line: 252, column: 6)
!9604 = !DILocation(line: 252, column: 6, scope: !9576)
!9605 = !DILocation(line: 253, column: 11, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !1197, line: 253, column: 7)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !1197, line: 252, column: 36)
!9608 = !DILocation(line: 253, column: 7, scope: !9607)
!9609 = !DILocation(line: 254, column: 4, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9606, file: !1197, line: 253, column: 16)
!9611 = !DILocation(line: 255, column: 3, scope: !9610)
!9612 = !DILocation(line: 256, column: 4, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9606, file: !1197, line: 255, column: 10)
!9614 = !DILocation(line: 260, column: 40, scope: !9576)
!9615 = !DILocation(line: 260, column: 2, scope: !9576)
!9616 = !DILocation(line: 265, column: 1, scope: !9576)
!9617 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1197, file: !1197, line: 137, type: !9419, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9618)
!9618 = !{!9619, !9620}
!9619 = !DILocalVariable(name: "pin", arg: 1, scope: !9617, file: !1197, line: 137, type: !109)
!9620 = !DILocalVariable(name: "pinval", scope: !9617, file: !1197, line: 139, type: !110)
!9621 = !DILocation(line: 0, scope: !9617)
!9622 = !DILocation(line: 149, column: 13, scope: !9617)
!9623 = !DILocation(line: 151, column: 2, scope: !9617)
!9624 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9499, file: !9499, line: 342, type: !9625, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9627)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{null, !1130, !110, !110}
!9627 = !{!9628, !9629, !9630}
!9628 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9624, file: !9499, line: 342, type: !1130)
!9629 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9624, file: !9499, line: 342, type: !110)
!9630 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9624, file: !9499, line: 342, type: !110)
!9631 = !DILocation(line: 0, scope: !9624)
!9632 = !DILocation(line: 344, column: 3, scope: !9624)
!9633 = !DILocation(line: 345, column: 1, scope: !9624)
!9634 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9499, file: !9499, line: 413, type: !9625, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9635)
!9635 = !{!9636, !9637, !9638}
!9636 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9634, file: !9499, line: 413, type: !1130)
!9637 = !DILocalVariable(name: "Pin", arg: 2, scope: !9634, file: !9499, line: 413, type: !110)
!9638 = !DILocalVariable(name: "Speed", arg: 3, scope: !9634, file: !9499, line: 413, type: !110)
!9639 = !DILocation(line: 0, scope: !9634)
!9640 = !DILocation(line: 415, column: 3, scope: !9634)
!9641 = !DILocation(line: 0, scope: !9439, inlinedAt: !9642)
!9642 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9643 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9642)
!9644 = !DILocation(line: 0, scope: !9447, inlinedAt: !9645)
!9645 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9646 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9645)
!9647 = !DILocation(line: 0, scope: !9439, inlinedAt: !9648)
!9648 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9649 = !DILocation(line: 0, scope: !9447, inlinedAt: !9650)
!9650 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9651 = !DILocation(line: 417, column: 1, scope: !9634)
!9652 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9499, file: !9499, line: 484, type: !9625, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9653)
!9653 = !{!9654, !9655, !9656}
!9654 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9652, file: !9499, line: 484, type: !1130)
!9655 = !DILocalVariable(name: "Pin", arg: 2, scope: !9652, file: !9499, line: 484, type: !110)
!9656 = !DILocalVariable(name: "Pull", arg: 3, scope: !9652, file: !9499, line: 484, type: !110)
!9657 = !DILocation(line: 0, scope: !9652)
!9658 = !DILocation(line: 486, column: 3, scope: !9652)
!9659 = !DILocation(line: 0, scope: !9439, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9661 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9660)
!9662 = !DILocation(line: 0, scope: !9447, inlinedAt: !9663)
!9663 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9664 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9663)
!9665 = !DILocation(line: 0, scope: !9439, inlinedAt: !9666)
!9666 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9667 = !DILocation(line: 0, scope: !9447, inlinedAt: !9668)
!9668 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9669 = !DILocation(line: 487, column: 1, scope: !9652)
!9670 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9499, file: !9499, line: 556, type: !9625, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674}
!9672 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9670, file: !9499, line: 556, type: !1130)
!9673 = !DILocalVariable(name: "Pin", arg: 2, scope: !9670, file: !9499, line: 556, type: !110)
!9674 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9670, file: !9499, line: 556, type: !110)
!9675 = !DILocation(line: 0, scope: !9670)
!9676 = !DILocation(line: 558, column: 3, scope: !9670)
!9677 = !DILocation(line: 0, scope: !9439, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9679 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9678)
!9680 = !DILocation(line: 0, scope: !9447, inlinedAt: !9681)
!9681 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9682 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9681)
!9683 = !DILocation(line: 0, scope: !9439, inlinedAt: !9684)
!9684 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9685 = !DILocation(line: 0, scope: !9447, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9687 = !DILocation(line: 560, column: 1, scope: !9670)
!9688 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9499, file: !9499, line: 633, type: !9625, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9689)
!9689 = !{!9690, !9691, !9692}
!9690 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9688, file: !9499, line: 633, type: !1130)
!9691 = !DILocalVariable(name: "Pin", arg: 2, scope: !9688, file: !9499, line: 633, type: !110)
!9692 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9688, file: !9499, line: 633, type: !110)
!9693 = !DILocation(line: 0, scope: !9688)
!9694 = !DILocation(line: 635, column: 3, scope: !9688)
!9695 = !DILocation(line: 0, scope: !9439, inlinedAt: !9696)
!9696 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9697 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9696)
!9698 = !DILocation(line: 0, scope: !9447, inlinedAt: !9699)
!9699 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9700 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9699)
!9701 = !DILocation(line: 0, scope: !9439, inlinedAt: !9702)
!9702 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9703 = !DILocation(line: 0, scope: !9447, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9705 = !DILocation(line: 637, column: 1, scope: !9688)
!9706 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9499, file: !9499, line: 273, type: !9625, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9707)
!9707 = !{!9708, !9709, !9710}
!9708 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9706, file: !9499, line: 273, type: !1130)
!9709 = !DILocalVariable(name: "Pin", arg: 2, scope: !9706, file: !9499, line: 273, type: !110)
!9710 = !DILocalVariable(name: "Mode", arg: 3, scope: !9706, file: !9499, line: 273, type: !110)
!9711 = !DILocation(line: 0, scope: !9706)
!9712 = !DILocation(line: 275, column: 3, scope: !9706)
!9713 = !DILocation(line: 0, scope: !9439, inlinedAt: !9714)
!9714 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9715 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9714)
!9716 = !DILocation(line: 0, scope: !9447, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9718 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9717)
!9719 = !DILocation(line: 0, scope: !9439, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9721 = !DILocation(line: 0, scope: !9447, inlinedAt: !9722)
!9722 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9723 = !DILocation(line: 276, column: 1, scope: !9706)
!9724 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1197, file: !1197, line: 698, type: !1210, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9725)
!9725 = !{!9726, !9727, !9728}
!9726 = !DILocalVariable(name: "dev", arg: 1, scope: !9724, file: !1197, line: 698, type: !1057)
!9727 = !DILocalVariable(name: "data", scope: !9724, file: !1197, line: 700, type: !9151)
!9728 = !DILocalVariable(name: "ret", scope: !9724, file: !1197, line: 701, type: !109)
!9729 = !DILocation(line: 0, scope: !9724)
!9730 = !DILocation(line: 700, column: 38, scope: !9724)
!9731 = !DILocation(line: 703, column: 8, scope: !9724)
!9732 = !DILocation(line: 703, column: 12, scope: !9724)
!9733 = !DILocation(line: 705, column: 7, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9724, file: !1197, line: 705, column: 6)
!9735 = !DILocation(line: 705, column: 6, scope: !9724)
!9736 = !DILocation(line: 722, column: 8, scope: !9724)
!9737 = !DILocation(line: 723, column: 10, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9724, file: !1197, line: 723, column: 6)
!9739 = !DILocation(line: 723, column: 6, scope: !9724)
!9740 = !DILocation(line: 731, column: 1, scope: !9724)
!9741 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !9742, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!347, !1057}
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9741, file: !8929, line: 47, type: !1057)
!9746 = !DILocation(line: 0, scope: !9741)
!9747 = !DILocation(line: 55, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9741, file: !8929, line: 55, column: 2)
!9749 = !{i64 2155046152}
!9750 = !DILocation(line: 56, column: 9, scope: !9741)
!9751 = !DILocation(line: 56, column: 2, scope: !9741)
!9752 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1197, file: !1197, line: 270, type: !9753, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9755)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!109, !1057, !347}
!9755 = !{!9756, !9757, !9758, !9759, !9760}
!9756 = !DILocalVariable(name: "dev", arg: 1, scope: !9752, file: !1197, line: 270, type: !1057)
!9757 = !DILocalVariable(name: "on", arg: 2, scope: !9752, file: !1197, line: 270, type: !347)
!9758 = !DILocalVariable(name: "cfg", scope: !9752, file: !1197, line: 272, type: !9084)
!9759 = !DILocalVariable(name: "ret", scope: !9752, file: !1197, line: 273, type: !109)
!9760 = !DILocalVariable(name: "clk", scope: !9752, file: !1197, line: 278, type: !9386)
!9761 = !DILocation(line: 0, scope: !9752)
!9762 = !DILocation(line: 272, column: 45, scope: !9752)
!9763 = !DILocation(line: 282, column: 38, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1197, line: 280, column: 10)
!9765 = distinct !DILexicalBlock(scope: !9752, file: !1197, line: 280, column: 6)
!9766 = !DILocation(line: 282, column: 6, scope: !9764)
!9767 = !DILocation(line: 281, column: 9, scope: !9764)
!9768 = !DILocation(line: 293, column: 1, scope: !9752)
!9769 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9742, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9770)
!9770 = !{!9771}
!9771 = !DILocalVariable(name: "dev", arg: 1, scope: !9769, file: !336, line: 730, type: !1057)
!9772 = !DILocation(line: 0, scope: !9769)
!9773 = !DILocation(line: 732, column: 9, scope: !9769)
!9774 = !DILocation(line: 732, column: 2, scope: !9769)
!9775 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1197, file: !1197, line: 496, type: !9776, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9778)
!9776 = !DISubroutineType(types: !9777)
!9777 = !{!109, !1057, !109, !109, !109}
!9778 = !{!9779, !9780, !9781, !9782, !9783, !9784}
!9779 = !DILocalVariable(name: "dev", arg: 1, scope: !9775, file: !1197, line: 496, type: !1057)
!9780 = !DILocalVariable(name: "pin", arg: 2, scope: !9775, file: !1197, line: 496, type: !109)
!9781 = !DILocalVariable(name: "conf", arg: 3, scope: !9775, file: !1197, line: 496, type: !109)
!9782 = !DILocalVariable(name: "func", arg: 4, scope: !9775, file: !1197, line: 496, type: !109)
!9783 = !DILocalVariable(name: "ret", scope: !9775, file: !1197, line: 498, type: !109)
!9784 = !DILocalVariable(name: "gpio_out", scope: !9785, file: !1197, line: 508, type: !110)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !1197, line: 507, column: 27)
!9786 = distinct !DILexicalBlock(scope: !9775, file: !1197, line: 507, column: 6)
!9787 = !DILocation(line: 0, scope: !9775)
!9788 = !DILocation(line: 505, column: 2, scope: !9775)
!9789 = !DILocation(line: 507, column: 11, scope: !9786)
!9790 = !DILocation(line: 507, column: 6, scope: !9775)
!9791 = !DILocation(line: 508, column: 28, scope: !9785)
!9792 = !DILocation(line: 0, scope: !9785)
!9793 = !DILocation(line: 510, column: 16, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9785, file: !1197, line: 510, column: 7)
!9795 = !DILocation(line: 0, scope: !9794)
!9796 = !DILocation(line: 510, column: 7, scope: !9785)
!9797 = !DILocation(line: 511, column: 4, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !1197, line: 510, column: 32)
!9799 = !DILocation(line: 512, column: 3, scope: !9798)
!9800 = !DILocation(line: 513, column: 4, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !1197, line: 512, column: 39)
!9802 = distinct !DILexicalBlock(scope: !9794, file: !1197, line: 512, column: 14)
!9803 = !DILocation(line: 514, column: 3, scope: !9801)
!9804 = !DILocation(line: 518, column: 1, scope: !9775)
!9805 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1482, file: !1482, line: 526, type: !1385, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9806)
!9806 = !{!9807, !9808, !9809}
!9807 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !1482, line: 526, type: !1387)
!9808 = !DILocalVariable(name: "c", arg: 2, scope: !9805, file: !1482, line: 526, type: !989)
!9809 = !DILocalVariable(name: "config", scope: !9805, file: !1482, line: 528, type: !9810)
!9810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!9811 = !DILocation(line: 0, scope: !9805)
!9812 = !DILocation(line: 528, column: 48, scope: !9805)
!9813 = !DILocation(line: 531, column: 40, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9805, file: !1482, line: 531, column: 6)
!9815 = !DILocation(line: 531, column: 6, scope: !9814)
!9816 = !DILocation(line: 531, column: 6, scope: !9805)
!9817 = !DILocation(line: 532, column: 34, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9814, file: !1482, line: 531, column: 48)
!9819 = !DILocation(line: 532, column: 3, scope: !9818)
!9820 = !DILocation(line: 533, column: 2, scope: !9818)
!9821 = !DILocation(line: 539, column: 42, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9805, file: !1482, line: 539, column: 6)
!9823 = !DILocation(line: 539, column: 7, scope: !9822)
!9824 = !DILocation(line: 539, column: 6, scope: !9805)
!9825 = !DILocation(line: 543, column: 52, scope: !9805)
!9826 = !DILocation(line: 543, column: 22, scope: !9805)
!9827 = !DILocation(line: 543, column: 5, scope: !9805)
!9828 = !DILocation(line: 545, column: 2, scope: !9805)
!9829 = !DILocation(line: 546, column: 1, scope: !9805)
!9830 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1482, file: !1482, line: 548, type: !1404, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9831)
!9831 = !{!9832, !9833, !9834, !9835}
!9832 = !DILocalVariable(name: "dev", arg: 1, scope: !9830, file: !1482, line: 548, type: !1387)
!9833 = !DILocalVariable(name: "c", arg: 2, scope: !9830, file: !1482, line: 549, type: !181)
!9834 = !DILocalVariable(name: "config", scope: !9830, file: !1482, line: 551, type: !9810)
!9835 = !DILocalVariable(name: "key", scope: !9830, file: !1482, line: 555, type: !32)
!9836 = !DILocation(line: 0, scope: !9830)
!9837 = !DILocation(line: 551, column: 48, scope: !9830)
!9838 = !DILocation(line: 562, column: 2, scope: !9830)
!9839 = !DILocation(line: 563, column: 41, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !1482, line: 563, column: 7)
!9841 = distinct !DILexicalBlock(scope: !9830, file: !1482, line: 562, column: 12)
!9842 = !DILocation(line: 563, column: 7, scope: !9840)
!9843 = !DILocation(line: 563, column: 7, scope: !9841)
!9844 = !DILocation(line: 55, column: 2, scope: !9845, inlinedAt: !9849)
!9845 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9846)
!9846 = !{!9847, !9848}
!9847 = !DILocalVariable(name: "key", scope: !9845, file: !6096, line: 44, type: !32)
!9848 = !DILocalVariable(name: "tmp", scope: !9845, file: !6096, line: 53, type: !32)
!9849 = distinct !DILocation(line: 564, column: 10, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9840, file: !1482, line: 563, column: 49)
!9851 = !{i64 2275268}
!9852 = !DILocation(line: 0, scope: !9845, inlinedAt: !9849)
!9853 = !DILocation(line: 565, column: 42, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9850, file: !1482, line: 565, column: 8)
!9855 = !DILocation(line: 565, column: 8, scope: !9854)
!9856 = !DILocation(line: 565, column: 8, scope: !9850)
!9857 = !DILocalVariable(name: "key", arg: 1, scope: !9858, file: !6096, line: 84, type: !32)
!9858 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9859)
!9859 = !{!9857}
!9860 = !DILocation(line: 0, scope: !9858, inlinedAt: !9861)
!9861 = distinct !DILocation(line: 568, column: 4, scope: !9850)
!9862 = !DILocation(line: 95, column: 2, scope: !9858, inlinedAt: !9861)
!9863 = !{i64 2276085}
!9864 = !DILocation(line: 569, column: 3, scope: !9850)
!9865 = distinct !{!9865, !9838, !9866}
!9866 = !DILocation(line: 570, column: 2, scope: !9830)
!9867 = !DILocation(line: 592, column: 33, scope: !9830)
!9868 = !DILocation(line: 592, column: 2, scope: !9830)
!9869 = !DILocation(line: 0, scope: !9858, inlinedAt: !9870)
!9870 = distinct !DILocation(line: 593, column: 2, scope: !9830)
!9871 = !DILocation(line: 95, column: 2, scope: !9858, inlinedAt: !9870)
!9872 = !DILocation(line: 594, column: 1, scope: !9830)
!9873 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1482, file: !1482, line: 596, type: !1408, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9874)
!9874 = !{!9875, !9876, !9877}
!9875 = !DILocalVariable(name: "dev", arg: 1, scope: !9873, file: !1482, line: 596, type: !1387)
!9876 = !DILocalVariable(name: "config", scope: !9873, file: !1482, line: 598, type: !9810)
!9877 = !DILocalVariable(name: "err", scope: !9873, file: !1482, line: 599, type: !110)
!9878 = !DILocation(line: 0, scope: !9873)
!9879 = !DILocation(line: 598, column: 48, scope: !9873)
!9880 = !DILocation(line: 606, column: 40, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 606, column: 6)
!9882 = !DILocation(line: 606, column: 6, scope: !9881)
!9883 = !DILocation(line: 606, column: 6, scope: !9873)
!9884 = !DILocation(line: 610, column: 39, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 610, column: 6)
!9886 = !DILocation(line: 610, column: 6, scope: !9885)
!9887 = !DILocation(line: 610, column: 6, scope: !9873)
!9888 = !DILocation(line: 614, column: 39, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 614, column: 6)
!9890 = !DILocation(line: 614, column: 6, scope: !9889)
!9891 = !DILocation(line: 614, column: 6, scope: !9873)
!9892 = !DILocation(line: 619, column: 40, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 619, column: 6)
!9894 = !DILocation(line: 619, column: 6, scope: !9893)
!9895 = !DILocation(line: 619, column: 6, scope: !9873)
!9896 = !DILocation(line: 623, column: 10, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 623, column: 6)
!9898 = !DILocation(line: 623, column: 6, scope: !9873)
!9899 = !DILocation(line: 624, column: 34, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9897, file: !1482, line: 623, column: 24)
!9901 = !DILocation(line: 624, column: 3, scope: !9900)
!9902 = !DILocation(line: 625, column: 2, scope: !9900)
!9903 = !DILocation(line: 632, column: 10, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 632, column: 6)
!9905 = !DILocation(line: 632, column: 6, scope: !9873)
!9906 = !DILocation(line: 633, column: 34, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9904, file: !1482, line: 632, column: 32)
!9908 = !DILocation(line: 633, column: 3, scope: !9907)
!9909 = !DILocation(line: 634, column: 2, scope: !9907)
!9910 = !DILocation(line: 636, column: 10, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 636, column: 6)
!9912 = !DILocation(line: 636, column: 6, scope: !9873)
!9913 = !DILocation(line: 637, column: 33, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9911, file: !1482, line: 636, column: 31)
!9915 = !DILocation(line: 637, column: 3, scope: !9914)
!9916 = !DILocation(line: 638, column: 2, scope: !9914)
!9917 = !DILocation(line: 640, column: 10, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9873, file: !1482, line: 640, column: 6)
!9919 = !DILocation(line: 640, column: 6, scope: !9873)
!9920 = !DILocation(line: 641, column: 33, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !1482, line: 640, column: 32)
!9922 = !DILocation(line: 641, column: 3, scope: !9921)
!9923 = !DILocation(line: 642, column: 2, scope: !9921)
!9924 = !DILocation(line: 646, column: 32, scope: !9873)
!9925 = !DILocation(line: 646, column: 2, scope: !9873)
!9926 = !DILocation(line: 648, column: 2, scope: !9873)
!9927 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1482, file: !1482, line: 419, type: !1412, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9928)
!9928 = !{!9929, !9930, !9931, !9932, !9934, !9935, !9936, !9937}
!9929 = !DILocalVariable(name: "dev", arg: 1, scope: !9927, file: !1482, line: 419, type: !1387)
!9930 = !DILocalVariable(name: "cfg", arg: 2, scope: !9927, file: !1482, line: 420, type: !1414)
!9931 = !DILocalVariable(name: "config", scope: !9927, file: !1482, line: 422, type: !9810)
!9932 = !DILocalVariable(name: "data", scope: !9927, file: !1482, line: 423, type: !9933)
!9933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!9934 = !DILocalVariable(name: "parity", scope: !9927, file: !1482, line: 424, type: !6694)
!9935 = !DILocalVariable(name: "stopbits", scope: !9927, file: !1482, line: 425, type: !6694)
!9936 = !DILocalVariable(name: "databits", scope: !9927, file: !1482, line: 426, type: !6694)
!9937 = !DILocalVariable(name: "flowctrl", scope: !9927, file: !1482, line: 428, type: !6694)
!9938 = !DILocation(line: 0, scope: !9927)
!9939 = !DILocation(line: 422, column: 48, scope: !9927)
!9940 = !DILocation(line: 423, column: 38, scope: !9927)
!9941 = !DILocation(line: 424, column: 56, scope: !9927)
!9942 = !DILocation(line: 424, column: 51, scope: !9927)
!9943 = !DILocation(line: 424, column: 26, scope: !9927)
!9944 = !DILocation(line: 425, column: 60, scope: !9927)
!9945 = !DILocation(line: 425, column: 55, scope: !9927)
!9946 = !DILocation(line: 425, column: 28, scope: !9927)
!9947 = !DILocation(line: 426, column: 60, scope: !9927)
!9948 = !DILocation(line: 426, column: 55, scope: !9927)
!9949 = !DILocation(line: 426, column: 28, scope: !9927)
!9950 = !DILocation(line: 428, column: 58, scope: !9927)
!9951 = !DILocation(line: 428, column: 53, scope: !9927)
!9952 = !DILocation(line: 428, column: 28, scope: !9927)
!9953 = !DILocation(line: 431, column: 44, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 431, column: 6)
!9955 = !DILocation(line: 438, column: 22, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 437, column: 6)
!9957 = !DILocation(line: 437, column: 6, scope: !9927)
!9958 = !DILocation(line: 448, column: 6, scope: !9927)
!9959 = !DILocation(line: 465, column: 47, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 465, column: 6)
!9961 = !DILocation(line: 475, column: 21, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 475, column: 6)
!9963 = !DILocation(line: 475, column: 6, scope: !9927)
!9964 = !DILocation(line: 476, column: 8, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !1482, line: 476, column: 7)
!9966 = distinct !DILexicalBlock(scope: !9962, file: !1482, line: 475, column: 49)
!9967 = !DILocation(line: 477, column: 34, scope: !9965)
!9968 = !DILocation(line: 476, column: 7, scope: !9966)
!9969 = !DILocation(line: 482, column: 27, scope: !9927)
!9970 = !DILocation(line: 482, column: 2, scope: !9927)
!9971 = !DILocation(line: 484, column: 16, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 484, column: 6)
!9973 = !DILocation(line: 484, column: 13, scope: !9972)
!9974 = !DILocation(line: 484, column: 6, scope: !9927)
!9975 = !DILocation(line: 485, column: 3, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !1482, line: 484, column: 44)
!9977 = !DILocation(line: 486, column: 2, scope: !9976)
!9978 = !DILocation(line: 488, column: 18, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 488, column: 6)
!9980 = !DILocation(line: 488, column: 15, scope: !9979)
!9981 = !DILocation(line: 488, column: 6, scope: !9927)
!9982 = !DILocation(line: 489, column: 3, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9979, file: !1482, line: 488, column: 48)
!9984 = !DILocation(line: 490, column: 2, scope: !9983)
!9985 = !DILocation(line: 492, column: 18, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 492, column: 6)
!9987 = !DILocation(line: 492, column: 15, scope: !9986)
!9988 = !DILocation(line: 492, column: 6, scope: !9927)
!9989 = !DILocation(line: 493, column: 3, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9986, file: !1482, line: 492, column: 48)
!9991 = !DILocation(line: 494, column: 2, scope: !9990)
!9992 = !DILocation(line: 496, column: 18, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 496, column: 6)
!9994 = !DILocation(line: 496, column: 15, scope: !9993)
!9995 = !DILocation(line: 496, column: 6, scope: !9927)
!9996 = !DILocation(line: 497, column: 3, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9993, file: !1482, line: 496, column: 46)
!9998 = !DILocation(line: 498, column: 2, scope: !9997)
!9999 = !DILocation(line: 500, column: 11, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 500, column: 6)
!10001 = !DILocation(line: 500, column: 29, scope: !10000)
!10002 = !DILocation(line: 500, column: 20, scope: !10000)
!10003 = !DILocation(line: 500, column: 6, scope: !9927)
!10004 = !DILocation(line: 501, column: 3, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10000, file: !1482, line: 500, column: 40)
!10006 = !DILocation(line: 502, column: 26, scope: !10005)
!10007 = !DILocation(line: 502, column: 19, scope: !10005)
!10008 = !DILocation(line: 503, column: 2, scope: !10005)
!10009 = !DILocation(line: 505, column: 26, scope: !9927)
!10010 = !DILocation(line: 505, column: 2, scope: !9927)
!10011 = !DILocation(line: 506, column: 2, scope: !9927)
!10012 = !DILocation(line: 507, column: 1, scope: !9927)
!10013 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1482, file: !1482, line: 509, type: !1425, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10014)
!10014 = !{!10015, !10016, !10017}
!10015 = !DILocalVariable(name: "dev", arg: 1, scope: !10013, file: !1482, line: 509, type: !1387)
!10016 = !DILocalVariable(name: "cfg", arg: 2, scope: !10013, file: !1482, line: 510, type: !1427)
!10017 = !DILocalVariable(name: "data", scope: !10013, file: !1482, line: 512, type: !9933)
!10018 = !DILocation(line: 0, scope: !10013)
!10019 = !DILocation(line: 512, column: 38, scope: !10013)
!10020 = !DILocation(line: 514, column: 24, scope: !10013)
!10021 = !DILocation(line: 514, column: 7, scope: !10013)
!10022 = !DILocation(line: 514, column: 16, scope: !10013)
!10023 = !DILocation(line: 515, column: 41, scope: !10013)
!10024 = !{i32 0, i32 1537}
!10025 = !DILocation(line: 515, column: 16, scope: !10013)
!10026 = !DILocation(line: 515, column: 7, scope: !10013)
!10027 = !DILocation(line: 515, column: 14, scope: !10013)
!10028 = !DILocation(line: 517, column: 3, scope: !10013)
!10029 = !{i32 0, i32 12289}
!10030 = !DILocation(line: 516, column: 19, scope: !10013)
!10031 = !DILocation(line: 516, column: 7, scope: !10013)
!10032 = !DILocation(line: 516, column: 17, scope: !10013)
!10033 = !DILocation(line: 519, column: 3, scope: !10013)
!10034 = !DILocation(line: 519, column: 33, scope: !10013)
!10035 = !DILocation(line: 518, column: 19, scope: !10013)
!10036 = !DILocation(line: 518, column: 7, scope: !10013)
!10037 = !DILocation(line: 518, column: 17, scope: !10013)
!10038 = !DILocation(line: 521, column: 3, scope: !10013)
!10039 = !{i32 0, i32 769}
!10040 = !DILocation(line: 520, column: 19, scope: !10013)
!10041 = !DILocation(line: 520, column: 7, scope: !10013)
!10042 = !DILocation(line: 520, column: 17, scope: !10013)
!10043 = !DILocation(line: 522, column: 2, scope: !10013)
!10044 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1482, file: !1482, line: 205, type: !10045, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10047)
!10045 = !DISubroutineType(types: !10046)
!10046 = !{!110, !1387}
!10047 = !{!10048, !10049}
!10048 = !DILocalVariable(name: "dev", arg: 1, scope: !10044, file: !1482, line: 205, type: !1387)
!10049 = !DILocalVariable(name: "config", scope: !10044, file: !1482, line: 207, type: !9810)
!10050 = !DILocation(line: 0, scope: !10044)
!10051 = !DILocation(line: 207, column: 48, scope: !10044)
!10052 = !DILocation(line: 209, column: 36, scope: !10044)
!10053 = !DILocation(line: 209, column: 9, scope: !10044)
!10054 = !DILocation(line: 209, column: 2, scope: !10044)
!10055 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1482, file: !1482, line: 270, type: !10056, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10058)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!1353, !110}
!10058 = !{!10059}
!10059 = !DILocalVariable(name: "parity", arg: 1, scope: !10055, file: !1482, line: 270, type: !110)
!10060 = !DILocation(line: 0, scope: !10055)
!10061 = !DILocation(line: 272, column: 2, scope: !10055)
!10062 = !DILocation(line: 281, column: 1, scope: !10055)
!10063 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1482, file: !1482, line: 220, type: !10045, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10064)
!10064 = !{!10065, !10066}
!10065 = !DILocalVariable(name: "dev", arg: 1, scope: !10063, file: !1482, line: 220, type: !1387)
!10066 = !DILocalVariable(name: "config", scope: !10063, file: !1482, line: 222, type: !9810)
!10067 = !DILocation(line: 0, scope: !10063)
!10068 = !DILocation(line: 222, column: 48, scope: !10063)
!10069 = !DILocation(line: 224, column: 44, scope: !10063)
!10070 = !DILocation(line: 224, column: 9, scope: !10063)
!10071 = !DILocation(line: 224, column: 2, scope: !10063)
!10072 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1482, file: !1482, line: 304, type: !10073, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10075)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{!1367, !110}
!10075 = !{!10076}
!10076 = !DILocalVariable(name: "sb", arg: 1, scope: !10072, file: !1482, line: 304, type: !110)
!10077 = !DILocation(line: 0, scope: !10072)
!10078 = !DILocation(line: 306, column: 2, scope: !10072)
!10079 = !DILocation(line: 0, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10072, file: !1482, line: 306, column: 14)
!10081 = !DILocation(line: 323, column: 1, scope: !10072)
!10082 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1482, file: !1482, line: 235, type: !10045, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10083)
!10083 = !{!10084, !10085}
!10084 = !DILocalVariable(name: "dev", arg: 1, scope: !10082, file: !1482, line: 235, type: !1387)
!10085 = !DILocalVariable(name: "config", scope: !10082, file: !1482, line: 237, type: !9810)
!10086 = !DILocation(line: 0, scope: !10082)
!10087 = !DILocation(line: 237, column: 48, scope: !10082)
!10088 = !DILocation(line: 239, column: 39, scope: !10082)
!10089 = !DILocation(line: 239, column: 9, scope: !10082)
!10090 = !DILocation(line: 239, column: 2, scope: !10082)
!10091 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1482, file: !1482, line: 355, type: !10092, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10094)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{!1360, !110, !110}
!10094 = !{!10095, !10096}
!10095 = !DILocalVariable(name: "db", arg: 1, scope: !10091, file: !1482, line: 355, type: !110)
!10096 = !DILocalVariable(name: "p", arg: 2, scope: !10091, file: !1482, line: 356, type: !110)
!10097 = !DILocation(line: 0, scope: !10091)
!10098 = !DILocation(line: 358, column: 2, scope: !10091)
!10099 = !DILocation(line: 384, column: 1, scope: !10091)
!10100 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1482, file: !1482, line: 250, type: !10045, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10101)
!10101 = !{!10102, !10103}
!10102 = !DILocalVariable(name: "dev", arg: 1, scope: !10100, file: !1482, line: 250, type: !1387)
!10103 = !DILocalVariable(name: "config", scope: !10100, file: !1482, line: 252, type: !9810)
!10104 = !DILocation(line: 0, scope: !10100)
!10105 = !DILocation(line: 252, column: 48, scope: !10100)
!10106 = !DILocation(line: 254, column: 40, scope: !10100)
!10107 = !DILocation(line: 254, column: 9, scope: !10100)
!10108 = !DILocation(line: 254, column: 2, scope: !10100)
!10109 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1482, file: !1482, line: 409, type: !10110, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!1373, !110}
!10112 = !{!10113}
!10113 = !DILocalVariable(name: "fc", arg: 1, scope: !10109, file: !1482, line: 409, type: !110)
!10114 = !DILocation(line: 0, scope: !10109)
!10115 = !DILocation(line: 411, column: 9, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10109, file: !1482, line: 411, column: 6)
!10117 = !DILocation(line: 416, column: 1, scope: !10109)
!10118 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10119, file: !10119, line: 967, type: !10120, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10122)
!10119 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10120 = !DISubroutineType(types: !10121)
!10121 = !{!110, !1428}
!10122 = !{!10123}
!10123 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10118, file: !10119, line: 967, type: !1428)
!10124 = !DILocation(line: 0, scope: !10118)
!10125 = !DILocation(line: 969, column: 21, scope: !10118)
!10126 = !DILocation(line: 969, column: 3, scope: !10118)
!10127 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10119, file: !10119, line: 601, type: !10120, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10128)
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10127, file: !10119, line: 601, type: !1428)
!10130 = !DILocation(line: 0, scope: !10127)
!10131 = !DILocation(line: 603, column: 21, scope: !10127)
!10132 = !DILocation(line: 603, column: 3, scope: !10127)
!10133 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10119, file: !10119, line: 820, type: !10120, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10134)
!10134 = !{!10135}
!10135 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10133, file: !10119, line: 820, type: !1428)
!10136 = !DILocation(line: 0, scope: !10133)
!10137 = !DILocation(line: 822, column: 21, scope: !10133)
!10138 = !DILocation(line: 822, column: 3, scope: !10133)
!10139 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10119, file: !10119, line: 547, type: !10120, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10140)
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10139, file: !10119, line: 547, type: !1428)
!10142 = !DILocation(line: 0, scope: !10139)
!10143 = !DILocation(line: 549, column: 21, scope: !10139)
!10144 = !DILocation(line: 549, column: 3, scope: !10139)
!10145 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1482, file: !1482, line: 257, type: !10146, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10148)
!10146 = !DISubroutineType(types: !10147)
!10147 = !{!110, !1353}
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "parity", arg: 1, scope: !10145, file: !1482, line: 257, type: !1353)
!10150 = !DILocation(line: 0, scope: !10145)
!10151 = !DILocation(line: 259, column: 2, scope: !10145)
!10152 = !DILocation(line: 268, column: 1, scope: !10145)
!10153 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1482, file: !1482, line: 283, type: !10154, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!110, !1367}
!10156 = !{!10157}
!10157 = !DILocalVariable(name: "sb", arg: 1, scope: !10153, file: !1482, line: 283, type: !1367)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 285, column: 2, scope: !10153)
!10160 = !DILocation(line: 0, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10153, file: !1482, line: 285, column: 14)
!10162 = !DILocation(line: 302, column: 1, scope: !10153)
!10163 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1482, file: !1482, line: 325, type: !10164, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!110, !1360, !1353}
!10166 = !{!10167, !10168}
!10167 = !DILocalVariable(name: "db", arg: 1, scope: !10163, file: !1482, line: 325, type: !1360)
!10168 = !DILocalVariable(name: "p", arg: 2, scope: !10163, file: !1482, line: 326, type: !1353)
!10169 = !DILocation(line: 0, scope: !10163)
!10170 = !DILocation(line: 328, column: 2, scope: !10163)
!10171 = !DILocation(line: 353, column: 1, scope: !10163)
!10172 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1482, file: !1482, line: 393, type: !10173, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!110, !1373}
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "fc", arg: 1, scope: !10172, file: !1482, line: 393, type: !1373)
!10177 = !DILocation(line: 0, scope: !10172)
!10178 = !DILocation(line: 395, column: 9, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10172, file: !1482, line: 395, column: 6)
!10180 = !DILocation(line: 400, column: 1, scope: !10172)
!10181 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10119, file: !10119, line: 424, type: !10182, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10184)
!10182 = !DISubroutineType(types: !10183)
!10183 = !{null, !1428}
!10184 = !{!10185}
!10185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10181, file: !10119, line: 424, type: !1428)
!10186 = !DILocation(line: 0, scope: !10181)
!10187 = !DILocation(line: 426, column: 3, scope: !10181)
!10188 = !DILocation(line: 427, column: 1, scope: !10181)
!10189 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1482, file: !1482, line: 197, type: !10190, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10192)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{null, !1387, !110}
!10192 = !{!10193, !10194, !10195}
!10193 = !DILocalVariable(name: "dev", arg: 1, scope: !10189, file: !1482, line: 197, type: !1387)
!10194 = !DILocalVariable(name: "parity", arg: 2, scope: !10189, file: !1482, line: 198, type: !110)
!10195 = !DILocalVariable(name: "config", scope: !10189, file: !1482, line: 200, type: !9810)
!10196 = !DILocation(line: 0, scope: !10189)
!10197 = !DILocation(line: 200, column: 48, scope: !10189)
!10198 = !DILocation(line: 202, column: 29, scope: !10189)
!10199 = !DILocation(line: 202, column: 2, scope: !10189)
!10200 = !DILocation(line: 203, column: 1, scope: !10189)
!10201 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1482, file: !1482, line: 212, type: !10190, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10202)
!10202 = !{!10203, !10204, !10205}
!10203 = !DILocalVariable(name: "dev", arg: 1, scope: !10201, file: !1482, line: 212, type: !1387)
!10204 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10201, file: !1482, line: 213, type: !110)
!10205 = !DILocalVariable(name: "config", scope: !10201, file: !1482, line: 215, type: !9810)
!10206 = !DILocation(line: 0, scope: !10201)
!10207 = !DILocation(line: 215, column: 48, scope: !10201)
!10208 = !DILocation(line: 217, column: 37, scope: !10201)
!10209 = !DILocation(line: 217, column: 2, scope: !10201)
!10210 = !DILocation(line: 218, column: 1, scope: !10201)
!10211 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1482, file: !1482, line: 227, type: !10190, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10212)
!10212 = !{!10213, !10214, !10215}
!10213 = !DILocalVariable(name: "dev", arg: 1, scope: !10211, file: !1482, line: 227, type: !1387)
!10214 = !DILocalVariable(name: "databits", arg: 2, scope: !10211, file: !1482, line: 228, type: !110)
!10215 = !DILocalVariable(name: "config", scope: !10211, file: !1482, line: 230, type: !9810)
!10216 = !DILocation(line: 0, scope: !10211)
!10217 = !DILocation(line: 230, column: 48, scope: !10211)
!10218 = !DILocation(line: 232, column: 32, scope: !10211)
!10219 = !DILocation(line: 232, column: 2, scope: !10211)
!10220 = !DILocation(line: 233, column: 1, scope: !10211)
!10221 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1482, file: !1482, line: 242, type: !10190, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10222)
!10222 = !{!10223, !10224, !10225}
!10223 = !DILocalVariable(name: "dev", arg: 1, scope: !10221, file: !1482, line: 242, type: !1387)
!10224 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10221, file: !1482, line: 243, type: !110)
!10225 = !DILocalVariable(name: "config", scope: !10221, file: !1482, line: 245, type: !9810)
!10226 = !DILocation(line: 0, scope: !10221)
!10227 = !DILocation(line: 245, column: 48, scope: !10221)
!10228 = !DILocation(line: 247, column: 33, scope: !10221)
!10229 = !DILocation(line: 247, column: 2, scope: !10221)
!10230 = !DILocation(line: 248, column: 1, scope: !10221)
!10231 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1482, file: !1482, line: 107, type: !10190, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10232)
!10232 = !{!10233, !10234, !10235, !10236, !10237}
!10233 = !DILocalVariable(name: "dev", arg: 1, scope: !10231, file: !1482, line: 107, type: !1387)
!10234 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10231, file: !1482, line: 107, type: !110)
!10235 = !DILocalVariable(name: "config", scope: !10231, file: !1482, line: 109, type: !9810)
!10236 = !DILocalVariable(name: "data", scope: !10231, file: !1482, line: 110, type: !9933)
!10237 = !DILocalVariable(name: "clock_rate", scope: !10231, file: !1482, line: 112, type: !110)
!10238 = !DILocation(line: 0, scope: !10231)
!10239 = !DILocation(line: 109, column: 48, scope: !10231)
!10240 = !DILocation(line: 110, column: 38, scope: !10231)
!10241 = !DILocation(line: 112, column: 2, scope: !10231)
!10242 = !DILocation(line: 123, column: 36, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !1482, line: 123, column: 7)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !1482, line: 122, column: 9)
!10245 = distinct !DILexicalBlock(scope: !10231, file: !1482, line: 115, column: 6)
!10246 = !DILocation(line: 124, column: 42, scope: !10243)
!10247 = !DILocation(line: 123, column: 7, scope: !10243)
!10248 = !DILocation(line: 125, column: 22, scope: !10243)
!10249 = !DILocation(line: 123, column: 7, scope: !10244)
!10250 = !DILocation(line: 126, column: 4, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10252, file: !1482, line: 126, column: 4)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !1482, line: 126, column: 4)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !1482, line: 126, column: 4)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !1482, line: 126, column: 4)
!10255 = distinct !DILexicalBlock(scope: !10243, file: !1482, line: 125, column: 27)
!10256 = !DILocation(line: 127, column: 4, scope: !10255)
!10257 = !DILocation(line: 176, column: 36, scope: !10231)
!10258 = !DILocation(line: 176, column: 3, scope: !10231)
!10259 = !DILocation(line: 179, column: 32, scope: !10231)
!10260 = !DILocation(line: 180, column: 10, scope: !10231)
!10261 = !DILocation(line: 179, column: 3, scope: !10231)
!10262 = !DILocation(line: 189, column: 3, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10264, file: !1482, line: 189, column: 3)
!10264 = distinct !DILexicalBlock(scope: !10231, file: !1482, line: 189, column: 3)
!10265 = !DILocation(line: 189, column: 3, scope: !10264)
!10266 = !DILocation(line: 189, column: 3, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !1482, line: 189, column: 3)
!10268 = !DILocation(line: 195, column: 1, scope: !10231)
!10269 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10119, file: !10119, line: 410, type: !10182, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10270)
!10270 = !{!10271}
!10271 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10269, file: !10119, line: 410, type: !1428)
!10272 = !DILocation(line: 0, scope: !10269)
!10273 = !DILocation(line: 412, column: 3, scope: !10269)
!10274 = !DILocation(line: 413, column: 1, scope: !10269)
!10275 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !836, file: !836, line: 216, type: !1461, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10276)
!10276 = !{!10277, !10278, !10279, !10280}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10275, file: !836, line: 216, type: !1387)
!10278 = !DILocalVariable(name: "sys", arg: 2, scope: !10275, file: !836, line: 217, type: !928)
!10279 = !DILocalVariable(name: "rate", arg: 3, scope: !10275, file: !836, line: 218, type: !884)
!10280 = !DILocalVariable(name: "api", scope: !10275, file: !836, line: 220, type: !1439)
!10281 = !DILocation(line: 0, scope: !10275)
!10282 = !DILocation(line: 221, column: 49, scope: !10275)
!10283 = !DILocation(line: 223, column: 11, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10275, file: !836, line: 223, column: 6)
!10285 = !DILocation(line: 223, column: 20, scope: !10284)
!10286 = !DILocation(line: 223, column: 6, scope: !10275)
!10287 = !DILocation(line: 227, column: 9, scope: !10275)
!10288 = !DILocation(line: 227, column: 2, scope: !10275)
!10289 = !DILocation(line: 228, column: 1, scope: !10275)
!10290 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6174, file: !6174, line: 175, type: !6175, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10291)
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "level", arg: 1, scope: !10290, file: !6174, line: 175, type: !109)
!10293 = !DILocation(line: 0, scope: !10290)
!10294 = !DILocation(line: 177, column: 2, scope: !10290)
!10295 = !DILocation(line: 189, column: 1, scope: !10290)
!10296 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10119, file: !10119, line: 615, type: !10297, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{null, !1428, !110}
!10299 = !{!10300, !10301}
!10300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10296, file: !10119, line: 615, type: !1428)
!10301 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10296, file: !10119, line: 615, type: !110)
!10302 = !DILocation(line: 0, scope: !10296)
!10303 = !DILocation(line: 617, column: 3, scope: !10296)
!10304 = !DILocation(line: 618, column: 1, scope: !10296)
!10305 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10119, file: !10119, line: 1020, type: !10306, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{null, !1428, !110, !110, !110}
!10308 = !{!10309, !10310, !10311, !10312}
!10309 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10305, file: !10119, line: 1020, type: !1428)
!10310 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10305, file: !10119, line: 1020, type: !110)
!10311 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10305, file: !10119, line: 1020, type: !110)
!10312 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10305, file: !10119, line: 1021, type: !110)
!10313 = !DILocation(line: 0, scope: !10305)
!10314 = !DILocation(line: 1029, column: 30, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !10119, line: 1028, column: 3)
!10316 = distinct !DILexicalBlock(scope: !10305, file: !10119, line: 1023, column: 7)
!10317 = !DILocation(line: 1029, column: 19, scope: !10315)
!10318 = !DILocation(line: 1029, column: 13, scope: !10315)
!10319 = !DILocation(line: 1029, column: 17, scope: !10315)
!10320 = !DILocation(line: 1031, column: 1, scope: !10305)
!10321 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10119, file: !10119, line: 949, type: !10297, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10322)
!10322 = !{!10323, !10324}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !10119, line: 949, type: !1428)
!10324 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10321, file: !10119, line: 949, type: !110)
!10325 = !DILocation(line: 0, scope: !10321)
!10326 = !DILocation(line: 951, column: 3, scope: !10321)
!10327 = !DILocation(line: 952, column: 1, scope: !10321)
!10328 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10119, file: !10119, line: 588, type: !10297, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10329)
!10329 = !{!10330, !10331}
!10330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10328, file: !10119, line: 588, type: !1428)
!10331 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10328, file: !10119, line: 588, type: !110)
!10332 = !DILocation(line: 0, scope: !10328)
!10333 = !DILocation(line: 590, column: 3, scope: !10328)
!10334 = !DILocation(line: 591, column: 1, scope: !10328)
!10335 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10119, file: !10119, line: 805, type: !10297, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10336)
!10336 = !{!10337, !10338}
!10337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10335, file: !10119, line: 805, type: !1428)
!10338 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10335, file: !10119, line: 805, type: !110)
!10339 = !DILocation(line: 0, scope: !10335)
!10340 = !DILocation(line: 807, column: 3, scope: !10335)
!10341 = !DILocation(line: 808, column: 1, scope: !10335)
!10342 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10119, file: !10119, line: 532, type: !10297, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10343)
!10343 = !{!10344, !10345}
!10344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10342, file: !10119, line: 532, type: !1428)
!10345 = !DILocalVariable(name: "Parity", arg: 2, scope: !10342, file: !10119, line: 532, type: !110)
!10346 = !DILocation(line: 0, scope: !10342)
!10347 = !DILocation(line: 534, column: 3, scope: !10342)
!10348 = !DILocation(line: 535, column: 1, scope: !10342)
!10349 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10119, file: !10119, line: 1770, type: !10120, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10350)
!10350 = !{!10351}
!10351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10349, file: !10119, line: 1770, type: !1428)
!10352 = !DILocation(line: 0, scope: !10349)
!10353 = !DILocation(line: 1772, column: 11, scope: !10349)
!10354 = !DILocation(line: 1772, column: 46, scope: !10349)
!10355 = !DILocation(line: 1772, column: 3, scope: !10349)
!10356 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10119, file: !10119, line: 1737, type: !10120, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10357)
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10356, file: !10119, line: 1737, type: !1428)
!10359 = !DILocation(line: 0, scope: !10356)
!10360 = !DILocation(line: 1739, column: 11, scope: !10356)
!10361 = !DILocation(line: 1739, column: 3, scope: !10356)
!10362 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10119, file: !10119, line: 1748, type: !10120, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10363)
!10363 = !{!10364}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10119, line: 1748, type: !1428)
!10365 = !DILocation(line: 0, scope: !10362)
!10366 = !DILocation(line: 1750, column: 11, scope: !10362)
!10367 = !DILocation(line: 1750, column: 45, scope: !10362)
!10368 = !DILocation(line: 1750, column: 3, scope: !10362)
!10369 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10119, file: !10119, line: 1827, type: !10120, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10370)
!10370 = !{!10371}
!10371 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10369, file: !10119, line: 1827, type: !1428)
!10372 = !DILocation(line: 0, scope: !10369)
!10373 = !DILocation(line: 1829, column: 11, scope: !10369)
!10374 = !DILocation(line: 1829, column: 46, scope: !10369)
!10375 = !DILocation(line: 1829, column: 3, scope: !10369)
!10376 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10119, file: !10119, line: 1992, type: !10182, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10377)
!10377 = !{!10378}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10119, line: 1992, type: !1428)
!10379 = !DILocation(line: 0, scope: !10376)
!10380 = !DILocation(line: 1994, column: 3, scope: !10376)
!10381 = !DILocation(line: 1995, column: 1, scope: !10376)
!10382 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10119, file: !10119, line: 1934, type: !10182, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10383)
!10383 = !{!10384, !10385}
!10384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10382, file: !10119, line: 1934, type: !1428)
!10385 = !DILocalVariable(name: "tmpreg", scope: !10382, file: !10119, line: 1936, type: !316)
!10386 = !DILocation(line: 0, scope: !10382)
!10387 = !DILocation(line: 1936, column: 3, scope: !10382)
!10388 = !DILocation(line: 1936, column: 17, scope: !10382)
!10389 = !DILocation(line: 1937, column: 20, scope: !10382)
!10390 = !DILocation(line: 1937, column: 10, scope: !10382)
!10391 = !DILocation(line: 1938, column: 10, scope: !10382)
!10392 = !DILocation(line: 1939, column: 20, scope: !10382)
!10393 = !DILocation(line: 1939, column: 10, scope: !10382)
!10394 = !DILocation(line: 1940, column: 10, scope: !10382)
!10395 = !DILocation(line: 1941, column: 1, scope: !10382)
!10396 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10119, file: !10119, line: 1877, type: !10182, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10397)
!10397 = !{!10398, !10399}
!10398 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10396, file: !10119, line: 1877, type: !1428)
!10399 = !DILocalVariable(name: "tmpreg", scope: !10396, file: !10119, line: 1879, type: !316)
!10400 = !DILocation(line: 0, scope: !10396)
!10401 = !DILocation(line: 1879, column: 3, scope: !10396)
!10402 = !DILocation(line: 1879, column: 17, scope: !10396)
!10403 = !DILocation(line: 1880, column: 20, scope: !10396)
!10404 = !DILocation(line: 1880, column: 10, scope: !10396)
!10405 = !DILocation(line: 1881, column: 10, scope: !10396)
!10406 = !DILocation(line: 1882, column: 20, scope: !10396)
!10407 = !DILocation(line: 1882, column: 10, scope: !10396)
!10408 = !DILocation(line: 1883, column: 10, scope: !10396)
!10409 = !DILocation(line: 1884, column: 1, scope: !10396)
!10410 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10119, file: !10119, line: 1896, type: !10182, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10411)
!10411 = !{!10412, !10413}
!10412 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10410, file: !10119, line: 1896, type: !1428)
!10413 = !DILocalVariable(name: "tmpreg", scope: !10410, file: !10119, line: 1898, type: !316)
!10414 = !DILocation(line: 0, scope: !10410)
!10415 = !DILocation(line: 1898, column: 3, scope: !10410)
!10416 = !DILocation(line: 1898, column: 17, scope: !10410)
!10417 = !DILocation(line: 1899, column: 20, scope: !10410)
!10418 = !DILocation(line: 1899, column: 10, scope: !10410)
!10419 = !DILocation(line: 1900, column: 10, scope: !10410)
!10420 = !DILocation(line: 1901, column: 20, scope: !10410)
!10421 = !DILocation(line: 1901, column: 10, scope: !10410)
!10422 = !DILocation(line: 1902, column: 10, scope: !10410)
!10423 = !DILocation(line: 1903, column: 1, scope: !10410)
!10424 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10119, file: !10119, line: 1915, type: !10182, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10425)
!10425 = !{!10426, !10427}
!10426 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10424, file: !10119, line: 1915, type: !1428)
!10427 = !DILocalVariable(name: "tmpreg", scope: !10424, file: !10119, line: 1917, type: !316)
!10428 = !DILocation(line: 0, scope: !10424)
!10429 = !DILocation(line: 1917, column: 3, scope: !10424)
!10430 = !DILocation(line: 1917, column: 17, scope: !10424)
!10431 = !DILocation(line: 1918, column: 20, scope: !10424)
!10432 = !DILocation(line: 1918, column: 10, scope: !10424)
!10433 = !DILocation(line: 1919, column: 10, scope: !10424)
!10434 = !DILocation(line: 1920, column: 20, scope: !10424)
!10435 = !DILocation(line: 1920, column: 10, scope: !10424)
!10436 = !DILocation(line: 1921, column: 10, scope: !10424)
!10437 = !DILocation(line: 1922, column: 1, scope: !10424)
!10438 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10119, file: !10119, line: 1814, type: !10120, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10439)
!10439 = !{!10440}
!10440 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10438, file: !10119, line: 1814, type: !1428)
!10441 = !DILocation(line: 0, scope: !10438)
!10442 = !DILocation(line: 1816, column: 11, scope: !10438)
!10443 = !DILocation(line: 1816, column: 46, scope: !10438)
!10444 = !DILocation(line: 1816, column: 3, scope: !10438)
!10445 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10119, file: !10119, line: 2426, type: !10446, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10448)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{null, !1428, !180}
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10445, file: !10119, line: 2426, type: !1428)
!10450 = !DILocalVariable(name: "Value", arg: 2, scope: !10445, file: !10119, line: 2426, type: !180)
!10451 = !DILocation(line: 0, scope: !10445)
!10452 = !DILocation(line: 2428, column: 16, scope: !10445)
!10453 = !DILocation(line: 2428, column: 11, scope: !10445)
!10454 = !DILocation(line: 2428, column: 14, scope: !10445)
!10455 = !DILocation(line: 2429, column: 1, scope: !10445)
!10456 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10119, file: !10119, line: 1792, type: !10120, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10457)
!10457 = !{!10458}
!10458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10456, file: !10119, line: 1792, type: !1428)
!10459 = !DILocation(line: 0, scope: !10456)
!10460 = !DILocation(line: 1794, column: 11, scope: !10456)
!10461 = !DILocation(line: 1794, column: 47, scope: !10456)
!10462 = !DILocation(line: 1794, column: 3, scope: !10456)
!10463 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10119, file: !10119, line: 2403, type: !10464, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!180, !1428}
!10466 = !{!10467}
!10467 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10463, file: !10119, line: 2403, type: !1428)
!10468 = !DILocation(line: 0, scope: !10463)
!10469 = !DILocation(line: 2405, column: 20, scope: !10463)
!10470 = !DILocation(line: 2405, column: 10, scope: !10463)
!10471 = !DILocation(line: 2405, column: 3, scope: !10463)
!10472 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1482, file: !1482, line: 1583, type: !1408, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477, !10478, !10479}
!10474 = !DILocalVariable(name: "dev", arg: 1, scope: !10472, file: !1482, line: 1583, type: !1387)
!10475 = !DILocalVariable(name: "config", scope: !10472, file: !1482, line: 1585, type: !9810)
!10476 = !DILocalVariable(name: "data", scope: !10472, file: !1482, line: 1586, type: !9933)
!10477 = !DILocalVariable(name: "ll_parity", scope: !10472, file: !1482, line: 1587, type: !110)
!10478 = !DILocalVariable(name: "ll_datawidth", scope: !10472, file: !1482, line: 1588, type: !110)
!10479 = !DILocalVariable(name: "err", scope: !10472, file: !1482, line: 1589, type: !109)
!10480 = !DILocation(line: 0, scope: !10472)
!10481 = !DILocation(line: 1585, column: 48, scope: !10472)
!10482 = !DILocation(line: 1586, column: 38, scope: !10472)
!10483 = !DILocation(line: 1591, column: 2, scope: !10472)
!10484 = !DILocation(line: 1593, column: 29, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10472, file: !1482, line: 1593, column: 6)
!10486 = !DILocation(line: 1593, column: 7, scope: !10485)
!10487 = !DILocation(line: 1593, column: 6, scope: !10472)
!10488 = !DILocation(line: 1594, column: 3, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !1482, line: 1594, column: 3)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !1482, line: 1594, column: 3)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !1482, line: 1594, column: 3)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !1482, line: 1594, column: 3)
!10493 = distinct !DILexicalBlock(scope: !10485, file: !1482, line: 1593, column: 37)
!10494 = !DILocation(line: 1595, column: 3, scope: !10493)
!10495 = !DILocation(line: 1599, column: 31, scope: !10472)
!10496 = !DILocation(line: 1599, column: 71, scope: !10472)
!10497 = !DILocation(line: 1599, column: 8, scope: !10472)
!10498 = !DILocation(line: 1600, column: 10, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10472, file: !1482, line: 1600, column: 6)
!10500 = !DILocation(line: 1600, column: 6, scope: !10472)
!10501 = !DILocation(line: 1601, column: 3, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !1482, line: 1601, column: 3)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !1482, line: 1601, column: 3)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !1482, line: 1601, column: 3)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !1482, line: 1601, column: 3)
!10506 = distinct !DILexicalBlock(scope: !10499, file: !1482, line: 1600, column: 16)
!10507 = !DILocation(line: 1602, column: 3, scope: !10506)
!10508 = !DILocation(line: 1616, column: 36, scope: !10472)
!10509 = !DILocation(line: 1616, column: 8, scope: !10472)
!10510 = !DILocation(line: 1617, column: 10, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10472, file: !1482, line: 1617, column: 6)
!10512 = !DILocation(line: 1617, column: 6, scope: !10472)
!10513 = !DILocation(line: 1621, column: 27, scope: !10472)
!10514 = !DILocation(line: 1621, column: 2, scope: !10472)
!10515 = !DILocation(line: 1624, column: 40, scope: !10472)
!10516 = !DILocation(line: 1624, column: 2, scope: !10472)
!10517 = !DILocation(line: 1630, column: 14, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10472, file: !1482, line: 1630, column: 6)
!10519 = !DILocation(line: 1630, column: 6, scope: !10472)
!10520 = !DILocation(line: 1640, column: 4, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1482, line: 1640, column: 4)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !1482, line: 1640, column: 4)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !1482, line: 1640, column: 4)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1482, line: 1640, column: 4)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1482, line: 1639, column: 28)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !1482, line: 1639, column: 7)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !1482, line: 1638, column: 9)
!10528 = distinct !DILexicalBlock(scope: !10518, file: !1482, line: 1634, column: 13)
!10529 = !DILocation(line: 0, scope: !10518)
!10530 = !DILocation(line: 1649, column: 35, scope: !10472)
!10531 = !DILocation(line: 1649, column: 2, scope: !10472)
!10532 = !DILocation(line: 1654, column: 14, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10472, file: !1482, line: 1654, column: 6)
!10534 = !DILocation(line: 1654, column: 6, scope: !10472)
!10535 = !DILocation(line: 1655, column: 3, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10533, file: !1482, line: 1654, column: 31)
!10537 = !DILocation(line: 1656, column: 2, scope: !10536)
!10538 = !DILocation(line: 1659, column: 37, scope: !10472)
!10539 = !DILocation(line: 1659, column: 2, scope: !10472)
!10540 = !DILocation(line: 1662, column: 14, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10472, file: !1482, line: 1662, column: 6)
!10542 = !DILocation(line: 1662, column: 6, scope: !10472)
!10543 = !DILocation(line: 1663, column: 37, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10541, file: !1482, line: 1662, column: 27)
!10545 = !DILocation(line: 1663, column: 3, scope: !10544)
!10546 = !DILocation(line: 1664, column: 2, scope: !10544)
!10547 = !DILocation(line: 1684, column: 26, scope: !10472)
!10548 = !DILocation(line: 1684, column: 2, scope: !10472)
!10549 = !DILocation(line: 1722, column: 2, scope: !10472)
!10550 = !DILocation(line: 1724, column: 1, scope: !10472)
!10551 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1482, file: !1482, line: 651, type: !10552, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10554)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{null, !1387}
!10554 = !{!10555, !10556, !10557}
!10555 = !DILocalVariable(name: "dev", arg: 1, scope: !10551, file: !1482, line: 651, type: !1387)
!10556 = !DILocalVariable(name: "data", scope: !10551, file: !1482, line: 653, type: !9933)
!10557 = !DILocalVariable(name: "clk", scope: !10551, file: !1482, line: 654, type: !10558)
!10558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!10559 = !DILocation(line: 0, scope: !10551)
!10560 = !DILocation(line: 653, column: 38, scope: !10551)
!10561 = !DILocation(line: 656, column: 8, scope: !10551)
!10562 = !DILocation(line: 656, column: 14, scope: !10551)
!10563 = !DILocation(line: 657, column: 1, scope: !10551)
!10564 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !10565, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10567)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{!347, !1387}
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "dev", arg: 1, scope: !10564, file: !8929, line: 47, type: !1387)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 55, column: 2, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10564, file: !8929, line: 55, column: 2)
!10572 = !{i64 2155137315}
!10573 = !DILocation(line: 56, column: 9, scope: !10564)
!10574 = !DILocation(line: 56, column: 2, scope: !10564)
!10575 = distinct !DISubprogram(name: "clock_control_on", scope: !836, file: !836, line: 123, type: !1446, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10576)
!10576 = !{!10577, !10578, !10579}
!10577 = !DILocalVariable(name: "dev", arg: 1, scope: !10575, file: !836, line: 123, type: !1387)
!10578 = !DILocalVariable(name: "sys", arg: 2, scope: !10575, file: !836, line: 124, type: !928)
!10579 = !DILocalVariable(name: "api", scope: !10575, file: !836, line: 126, type: !1439)
!10580 = !DILocation(line: 0, scope: !10575)
!10581 = !DILocation(line: 127, column: 49, scope: !10575)
!10582 = !DILocation(line: 129, column: 14, scope: !10575)
!10583 = !DILocation(line: 129, column: 9, scope: !10575)
!10584 = !DILocation(line: 129, column: 2, scope: !10575)
!10585 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1522, file: !1522, line: 342, type: !10586, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!109, !1519, !180}
!10588 = !{!10589, !10590, !10591, !10592}
!10589 = !DILocalVariable(name: "config", arg: 1, scope: !10585, file: !1522, line: 342, type: !1519)
!10590 = !DILocalVariable(name: "id", arg: 2, scope: !10585, file: !1522, line: 343, type: !180)
!10591 = !DILocalVariable(name: "ret", scope: !10585, file: !1522, line: 345, type: !109)
!10592 = !DILocalVariable(name: "state", scope: !10585, file: !1522, line: 346, type: !1525)
!10593 = !DILocation(line: 0, scope: !10585)
!10594 = !DILocation(line: 346, column: 2, scope: !10585)
!10595 = !DILocation(line: 348, column: 8, scope: !10585)
!10596 = !DILocation(line: 349, column: 10, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10585, file: !1522, line: 349, column: 6)
!10598 = !DILocation(line: 349, column: 6, scope: !10585)
!10599 = !DILocation(line: 353, column: 44, scope: !10585)
!10600 = !DILocation(line: 353, column: 9, scope: !10585)
!10601 = !DILocation(line: 353, column: 2, scope: !10585)
!10602 = !DILocation(line: 354, column: 1, scope: !10585)
!10603 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10119, file: !10119, line: 497, type: !10297, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10604)
!10604 = !{!10605, !10606, !10607}
!10605 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10603, file: !10119, line: 497, type: !1428)
!10606 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10603, file: !10119, line: 497, type: !110)
!10607 = !DILocalVariable(name: "val", scope: !10608, file: !10119, line: 499, type: !110)
!10608 = distinct !DILexicalBlock(scope: !10603, file: !10119, line: 499, column: 3)
!10609 = !DILocation(line: 0, scope: !10603)
!10610 = !DILocation(line: 499, column: 3, scope: !10608)
!10611 = !DILocalVariable(name: "addr", arg: 1, scope: !10612, file: !6417, line: 476, type: !1478)
!10612 = distinct !DISubprogram(name: "__LDREXW", scope: !6417, file: !6417, line: 476, type: !10613, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!110, !1478}
!10615 = !{!10611, !10616}
!10616 = !DILocalVariable(name: "result", scope: !10612, file: !6417, line: 478, type: !110)
!10617 = !DILocation(line: 0, scope: !10612, inlinedAt: !10618)
!10618 = distinct !DILocation(line: 499, column: 3, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10608, file: !10119, line: 499, column: 3)
!10620 = !DILocation(line: 480, column: 4, scope: !10612, inlinedAt: !10618)
!10621 = !{i64 3577204}
!10622 = !DILocation(line: 499, column: 3, scope: !10619)
!10623 = !DILocation(line: 0, scope: !10608)
!10624 = !DILocalVariable(name: "value", arg: 1, scope: !10625, file: !6417, line: 527, type: !110)
!10625 = distinct !DISubprogram(name: "__STREXW", scope: !6417, file: !6417, line: 527, type: !10626, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10628)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!110, !110, !1478}
!10628 = !{!10624, !10629, !10630}
!10629 = !DILocalVariable(name: "addr", arg: 2, scope: !10625, file: !6417, line: 527, type: !1478)
!10630 = !DILocalVariable(name: "result", scope: !10625, file: !6417, line: 529, type: !110)
!10631 = !DILocation(line: 0, scope: !10625, inlinedAt: !10632)
!10632 = distinct !DILocation(line: 499, column: 3, scope: !10608)
!10633 = !DILocation(line: 531, column: 4, scope: !10625, inlinedAt: !10632)
!10634 = !{i64 3578640}
!10635 = distinct !{!10635, !10610, !10610}
!10636 = !DILocation(line: 500, column: 1, scope: !10603)
!10637 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10119, file: !10119, line: 850, type: !10306, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10638)
!10638 = !{!10639, !10640, !10641, !10642}
!10639 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10637, file: !10119, line: 850, type: !1428)
!10640 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10637, file: !10119, line: 850, type: !110)
!10641 = !DILocalVariable(name: "Parity", arg: 3, scope: !10637, file: !10119, line: 850, type: !110)
!10642 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10637, file: !10119, line: 851, type: !110)
!10643 = !DILocation(line: 0, scope: !10637)
!10644 = !DILocation(line: 853, column: 3, scope: !10637)
!10645 = !DILocation(line: 854, column: 3, scope: !10637)
!10646 = !DILocation(line: 855, column: 1, scope: !10637)
!10647 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10119, file: !10119, line: 1337, type: !10182, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10648)
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10647, file: !10119, line: 1337, type: !1428)
!10650 = !DILocation(line: 0, scope: !10647)
!10651 = !DILocation(line: 1339, column: 3, scope: !10647)
!10652 = !DILocation(line: 1340, column: 1, scope: !10647)
!10653 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1522, file: !1522, line: 316, type: !10654, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10656)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{!109, !1519, !1525}
!10656 = !{!10657, !10658, !10659}
!10657 = !DILocalVariable(name: "config", arg: 1, scope: !10653, file: !1522, line: 317, type: !1519)
!10658 = !DILocalVariable(name: "state", arg: 2, scope: !10653, file: !1522, line: 318, type: !1525)
!10659 = !DILocalVariable(name: "reg", scope: !10653, file: !1522, line: 320, type: !22)
!10660 = !DILocation(line: 0, scope: !10653)
!10661 = !DILocation(line: 329, column: 39, scope: !10653)
!10662 = !DILocation(line: 329, column: 52, scope: !10653)
!10663 = !DILocation(line: 329, column: 9, scope: !10653)
!10664 = !DILocation(line: 329, column: 2, scope: !10653)
!10665 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10565, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10666)
!10666 = !{!10667}
!10667 = !DILocalVariable(name: "dev", arg: 1, scope: !10665, file: !336, line: 730, type: !1387)
!10668 = !DILocation(line: 0, scope: !10665)
!10669 = !DILocation(line: 732, column: 9, scope: !10665)
!10670 = !DILocation(line: 732, column: 2, scope: !10665)
!10671 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1645, file: !1645, line: 270, type: !1651, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10672)
!10672 = !{!10673}
!10673 = !DILocalVariable(name: "dev", arg: 1, scope: !10671, file: !1645, line: 270, type: !1653)
!10674 = !DILocation(line: 0, scope: !10671)
!10675 = !DILocation(line: 274, column: 2, scope: !10671)
!10676 = !DILocation(line: 275, column: 12, scope: !10671)
!10677 = !DILocation(line: 276, column: 15, scope: !10671)
!10678 = !DILocation(line: 277, column: 16, scope: !10671)
!10679 = !DILocation(line: 278, column: 15, scope: !10671)
!10680 = !DILocation(line: 279, column: 16, scope: !10671)
!10681 = !DILocation(line: 282, column: 2, scope: !10671)
!10682 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6457, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10683)
!10683 = !{!10684, !10685}
!10684 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10682, file: !535, line: 1814, type: !792)
!10685 = !DILocalVariable(name: "priority", arg: 2, scope: !10682, file: !535, line: 1814, type: !110)
!10686 = !DILocation(line: 0, scope: !10682)
!10687 = !DILocation(line: 1822, column: 46, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !535, line: 1821, column: 3)
!10689 = distinct !DILexicalBlock(scope: !10682, file: !535, line: 1816, column: 7)
!10690 = !DILocation(line: 1824, column: 1, scope: !10682)
!10691 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1645, file: !1645, line: 118, type: !6354, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10692)
!10692 = !{!10693, !10694}
!10693 = !DILocalVariable(name: "arg", arg: 1, scope: !10691, file: !1645, line: 118, type: !107)
!10694 = !DILocalVariable(name: "dticks", scope: !10691, file: !1645, line: 121, type: !110)
!10695 = !DILocation(line: 0, scope: !10691)
!10696 = !DILocation(line: 124, column: 2, scope: !10691)
!10697 = !DILocation(line: 129, column: 17, scope: !10691)
!10698 = !DILocation(line: 129, column: 14, scope: !10691)
!10699 = !DILocation(line: 130, column: 15, scope: !10691)
!10700 = !DILocation(line: 145, column: 27, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !1645, line: 132, column: 16)
!10702 = distinct !DILexicalBlock(scope: !10691, file: !1645, line: 132, column: 6)
!10703 = !DILocation(line: 145, column: 25, scope: !10701)
!10704 = !DILocation(line: 145, column: 45, scope: !10701)
!10705 = !DILocation(line: 146, column: 30, scope: !10701)
!10706 = !DILocation(line: 146, column: 20, scope: !10701)
!10707 = !DILocation(line: 147, column: 3, scope: !10701)
!10708 = !DILocation(line: 151, column: 2, scope: !10691)
!10709 = !DILocation(line: 152, column: 1, scope: !10691)
!10710 = distinct !DISubprogram(name: "elapsed", scope: !1645, file: !1645, line: 85, type: !6504, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10711)
!10711 = !{!10712, !10713, !10714}
!10712 = !DILocalVariable(name: "val1", scope: !10710, file: !1645, line: 87, type: !110)
!10713 = !DILocalVariable(name: "ctrl", scope: !10710, file: !1645, line: 88, type: !110)
!10714 = !DILocalVariable(name: "val2", scope: !10710, file: !1645, line: 89, type: !110)
!10715 = !DILocation(line: 87, column: 27, scope: !10710)
!10716 = !DILocation(line: 0, scope: !10710)
!10717 = !DILocation(line: 88, column: 27, scope: !10710)
!10718 = !DILocation(line: 89, column: 27, scope: !10710)
!10719 = !DILocation(line: 105, column: 12, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10710, file: !1645, line: 105, column: 6)
!10721 = !DILocation(line: 106, column: 6, scope: !10720)
!10722 = !DILocation(line: 107, column: 16, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10720, file: !1645, line: 106, column: 24)
!10724 = !DILocation(line: 111, column: 18, scope: !10723)
!10725 = !DILocation(line: 112, column: 2, scope: !10723)
!10726 = !DILocation(line: 114, column: 20, scope: !10710)
!10727 = !DILocation(line: 114, column: 30, scope: !10710)
!10728 = !DILocation(line: 114, column: 28, scope: !10710)
!10729 = !DILocation(line: 114, column: 2, scope: !10710)
!10730 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1645, file: !1645, line: 154, type: !10731, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10733)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{null, !766, !347}
!10733 = !{!10734, !10735, !10736, !10737, !10738, !10739, !10740, !10745, !10746}
!10734 = !DILocalVariable(name: "ticks", arg: 1, scope: !10730, file: !1645, line: 154, type: !766)
!10735 = !DILocalVariable(name: "idle", arg: 2, scope: !10730, file: !1645, line: 154, type: !347)
!10736 = !DILocalVariable(name: "delay", scope: !10730, file: !1645, line: 169, type: !110)
!10737 = !DILocalVariable(name: "val1", scope: !10730, file: !1645, line: 170, type: !110)
!10738 = !DILocalVariable(name: "val2", scope: !10730, file: !1645, line: 170, type: !110)
!10739 = !DILocalVariable(name: "last_load_", scope: !10730, file: !1645, line: 171, type: !110)
!10740 = !DILocalVariable(name: "key", scope: !10730, file: !1645, line: 176, type: !10741)
!10741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !10742)
!10742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !10743)
!10743 = !{!10744}
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10742, file: !253, line: 33, baseType: !109, size: 32)
!10745 = !DILocalVariable(name: "pending", scope: !10730, file: !1645, line: 178, type: !110)
!10746 = !DILocalVariable(name: "unannounced", scope: !10730, file: !1645, line: 185, type: !110)
!10747 = !DILocation(line: 0, scope: !10730)
!10748 = !DILocation(line: 162, column: 49, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10730, file: !1645, line: 162, column: 6)
!10750 = !DILocation(line: 163, column: 17, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10749, file: !1645, line: 162, column: 78)
!10752 = !DILocation(line: 164, column: 13, scope: !10751)
!10753 = !DILocation(line: 165, column: 3, scope: !10751)
!10754 = !DILocation(line: 171, column: 24, scope: !10730)
!10755 = !DILocation(line: 173, column: 10, scope: !10730)
!10756 = !DILocation(line: 174, column: 10, scope: !10730)
!10757 = !DILocalVariable(name: "l", arg: 1, scope: !10758, file: !253, line: 136, type: !10761)
!10758 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !10759, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10762)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!10741, !10761}
!10761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!10762 = !{!10757, !10763}
!10763 = !DILocalVariable(name: "k", scope: !10758, file: !253, line: 139, type: !10741)
!10764 = !DILocation(line: 0, scope: !10758, inlinedAt: !10765)
!10765 = distinct !DILocation(line: 176, column: 25, scope: !10730)
!10766 = !DILocation(line: 55, column: 2, scope: !10767, inlinedAt: !10771)
!10767 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10768)
!10768 = !{!10769, !10770}
!10769 = !DILocalVariable(name: "key", scope: !10767, file: !6096, line: 44, type: !32)
!10770 = !DILocalVariable(name: "tmp", scope: !10767, file: !6096, line: 53, type: !32)
!10771 = distinct !DILocation(line: 145, column: 10, scope: !10758, inlinedAt: !10765)
!10772 = !{i64 2200402}
!10773 = !DILocation(line: 0, scope: !10767, inlinedAt: !10771)
!10774 = !DILocation(line: 148, column: 2, scope: !10775, inlinedAt: !10765)
!10775 = distinct !DILexicalBlock(scope: !10776, file: !253, line: 148, column: 2)
!10776 = distinct !DILexicalBlock(scope: !10758, file: !253, line: 148, column: 2)
!10777 = !DILocation(line: 148, column: 2, scope: !10776, inlinedAt: !10765)
!10778 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10765)
!10779 = distinct !DILexicalBlock(scope: !10775, file: !253, line: 148, column: 2)
!10780 = !DILocation(line: 160, column: 2, scope: !10758, inlinedAt: !10765)
!10781 = !DILocation(line: 178, column: 21, scope: !10730)
!10782 = !DILocation(line: 180, column: 18, scope: !10730)
!10783 = !DILocation(line: 182, column: 14, scope: !10730)
!10784 = !DILocation(line: 183, column: 15, scope: !10730)
!10785 = !DILocation(line: 185, column: 39, scope: !10730)
!10786 = !DILocation(line: 185, column: 37, scope: !10730)
!10787 = !DILocation(line: 187, column: 27, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10730, file: !1645, line: 187, column: 6)
!10789 = !DILocation(line: 187, column: 6, scope: !10730)
!10790 = !DILocation(line: 202, column: 27, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !1645, line: 195, column: 9)
!10792 = !DILocation(line: 202, column: 48, scope: !10791)
!10793 = !DILocation(line: 203, column: 9, scope: !10791)
!10794 = !DILocation(line: 204, column: 11, scope: !10791)
!10795 = !DILocation(line: 205, column: 13, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !1645, line: 205, column: 7)
!10797 = !DILocation(line: 205, column: 7, scope: !10791)
!10798 = !DILocation(line: 0, scope: !10788)
!10799 = !DILocation(line: 212, column: 18, scope: !10730)
!10800 = !DILocation(line: 214, column: 28, scope: !10730)
!10801 = !DILocation(line: 214, column: 16, scope: !10730)
!10802 = !DILocation(line: 215, column: 15, scope: !10730)
!10803 = !DILocation(line: 227, column: 11, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10730, file: !1645, line: 227, column: 6)
!10805 = !DILocation(line: 227, column: 6, scope: !10730)
!10806 = !DILocation(line: 228, column: 15, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10804, file: !1645, line: 227, column: 19)
!10808 = !DILocation(line: 228, column: 38, scope: !10807)
!10809 = !DILocation(line: 228, column: 24, scope: !10807)
!10810 = !DILocation(line: 229, column: 2, scope: !10807)
!10811 = !DILocation(line: 230, column: 24, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10804, file: !1645, line: 229, column: 9)
!10813 = !DILocation(line: 230, column: 15, scope: !10812)
!10814 = !DILocation(line: 0, scope: !10804)
!10815 = !DILocalVariable(name: "key", arg: 2, scope: !10816, file: !253, line: 190, type: !10741)
!10816 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !10817, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10819)
!10817 = !DISubroutineType(types: !10818)
!10818 = !{null, !10761, !10741}
!10819 = !{!10820, !10815}
!10820 = !DILocalVariable(name: "l", arg: 1, scope: !10816, file: !253, line: 189, type: !10761)
!10821 = !DILocation(line: 0, scope: !10816, inlinedAt: !10822)
!10822 = distinct !DILocation(line: 232, column: 2, scope: !10730)
!10823 = !DILocation(line: 194, column: 2, scope: !10824, inlinedAt: !10822)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !253, line: 194, column: 2)
!10825 = distinct !DILexicalBlock(scope: !10816, file: !253, line: 194, column: 2)
!10826 = !DILocation(line: 194, column: 2, scope: !10825, inlinedAt: !10822)
!10827 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10822)
!10828 = distinct !DILexicalBlock(scope: !10824, file: !253, line: 194, column: 2)
!10829 = !DILocalVariable(name: "key", arg: 1, scope: !10830, file: !6096, line: 84, type: !32)
!10830 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10831)
!10831 = !{!10829}
!10832 = !DILocation(line: 0, scope: !10830, inlinedAt: !10833)
!10833 = distinct !DILocation(line: 215, column: 2, scope: !10816, inlinedAt: !10822)
!10834 = !DILocation(line: 95, column: 2, scope: !10830, inlinedAt: !10833)
!10835 = !{i64 2201219}
!10836 = !DILocation(line: 234, column: 1, scope: !10730)
!10837 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1645, file: !1645, line: 236, type: !6504, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10838)
!10838 = !{!10839, !10840}
!10839 = !DILocalVariable(name: "key", scope: !10837, file: !1645, line: 242, type: !10741)
!10840 = !DILocalVariable(name: "cyc", scope: !10837, file: !1645, line: 243, type: !110)
!10841 = !DILocation(line: 0, scope: !10758, inlinedAt: !10842)
!10842 = distinct !DILocation(line: 242, column: 25, scope: !10837)
!10843 = !DILocation(line: 55, column: 2, scope: !10767, inlinedAt: !10844)
!10844 = distinct !DILocation(line: 145, column: 10, scope: !10758, inlinedAt: !10842)
!10845 = !DILocation(line: 0, scope: !10767, inlinedAt: !10844)
!10846 = !DILocation(line: 148, column: 2, scope: !10775, inlinedAt: !10842)
!10847 = !DILocation(line: 148, column: 2, scope: !10776, inlinedAt: !10842)
!10848 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10842)
!10849 = !DILocation(line: 160, column: 2, scope: !10758, inlinedAt: !10842)
!10850 = !DILocation(line: 0, scope: !10837)
!10851 = !DILocation(line: 243, column: 17, scope: !10837)
!10852 = !DILocation(line: 243, column: 29, scope: !10837)
!10853 = !DILocation(line: 243, column: 43, scope: !10837)
!10854 = !DILocation(line: 0, scope: !10816, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 245, column: 2, scope: !10837)
!10856 = !DILocation(line: 194, column: 2, scope: !10824, inlinedAt: !10855)
!10857 = !DILocation(line: 194, column: 2, scope: !10825, inlinedAt: !10855)
!10858 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10855)
!10859 = !DILocation(line: 243, column: 27, scope: !10837)
!10860 = !DILocation(line: 243, column: 41, scope: !10837)
!10861 = !DILocation(line: 0, scope: !10830, inlinedAt: !10862)
!10862 = distinct !DILocation(line: 215, column: 2, scope: !10816, inlinedAt: !10855)
!10863 = !DILocation(line: 95, column: 2, scope: !10830, inlinedAt: !10862)
!10864 = !DILocation(line: 246, column: 13, scope: !10837)
!10865 = !DILocation(line: 246, column: 2, scope: !10837)
!10866 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1645, file: !1645, line: 249, type: !6504, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !10867)
!10867 = !{!10868, !10869}
!10868 = !DILocalVariable(name: "key", scope: !10866, file: !1645, line: 251, type: !10741)
!10869 = !DILocalVariable(name: "ret", scope: !10866, file: !1645, line: 252, type: !110)
!10870 = !DILocation(line: 0, scope: !10758, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 251, column: 25, scope: !10866)
!10872 = !DILocation(line: 55, column: 2, scope: !10767, inlinedAt: !10873)
!10873 = distinct !DILocation(line: 145, column: 10, scope: !10758, inlinedAt: !10871)
!10874 = !DILocation(line: 0, scope: !10767, inlinedAt: !10873)
!10875 = !DILocation(line: 148, column: 2, scope: !10775, inlinedAt: !10871)
!10876 = !DILocation(line: 148, column: 2, scope: !10776, inlinedAt: !10871)
!10877 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10871)
!10878 = !DILocation(line: 160, column: 2, scope: !10758, inlinedAt: !10871)
!10879 = !DILocation(line: 0, scope: !10866)
!10880 = !DILocation(line: 252, column: 17, scope: !10866)
!10881 = !DILocation(line: 252, column: 29, scope: !10866)
!10882 = !DILocation(line: 0, scope: !10816, inlinedAt: !10883)
!10883 = distinct !DILocation(line: 254, column: 2, scope: !10866)
!10884 = !DILocation(line: 194, column: 2, scope: !10824, inlinedAt: !10883)
!10885 = !DILocation(line: 194, column: 2, scope: !10825, inlinedAt: !10883)
!10886 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10883)
!10887 = !DILocation(line: 252, column: 27, scope: !10866)
!10888 = !DILocation(line: 0, scope: !10830, inlinedAt: !10889)
!10889 = distinct !DILocation(line: 215, column: 2, scope: !10816, inlinedAt: !10883)
!10890 = !DILocation(line: 95, column: 2, scope: !10830, inlinedAt: !10889)
!10891 = !DILocation(line: 255, column: 2, scope: !10866)
!10892 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1645, file: !1645, line: 258, type: !3094, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !2034)
!10893 = !DILocation(line: 260, column: 6, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10892, file: !1645, line: 260, column: 6)
!10895 = !DILocation(line: 260, column: 16, scope: !10894)
!10896 = !DILocation(line: 260, column: 6, scope: !10892)
!10897 = !DILocation(line: 261, column: 17, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !1645, line: 260, column: 34)
!10899 = !DILocation(line: 262, column: 2, scope: !10898)
!10900 = !DILocation(line: 263, column: 1, scope: !10892)
!10901 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1645, file: !1645, line: 265, type: !3094, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !2034)
!10902 = !DILocation(line: 267, column: 16, scope: !10901)
!10903 = !DILocation(line: 268, column: 1, scope: !10901)
!10904 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10905, file: !10905, line: 9, type: !10906, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2905, retainedNodes: !10929)
!10905 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10906 = !DISubroutineType(types: !10907)
!10907 = !{!109, !10908, !180, !10928}
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10910)
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1522, line: 60, size: 64, elements: !10911)
!10911 = !{!10912, !10927}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10910, file: !1522, line: 69, baseType: !10913, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 32)
!10914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10915)
!10915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1522, line: 50, size: 64, elements: !10916)
!10916 = !{!10917, !10925, !10926}
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10915, file: !1522, line: 52, baseType: !10918, size: 32)
!10918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10919, size: 32)
!10919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10920)
!10920 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1533, line: 37, baseType: !10921)
!10921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1533, line: 32, size: 64, elements: !10922)
!10922 = !{!10923, !10924}
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10921, file: !1533, line: 34, baseType: !110, size: 32)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10921, file: !1533, line: 36, baseType: !110, size: 32, offset: 32)
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10915, file: !1522, line: 54, baseType: !180, size: 8, offset: 32)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10915, file: !1522, line: 56, baseType: !180, size: 8, offset: 40)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10910, file: !1522, line: 71, baseType: !180, size: 8, offset: 32)
!10928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10913, size: 32)
!10929 = !{!10930, !10931, !10932}
!10930 = !DILocalVariable(name: "config", arg: 1, scope: !10904, file: !10905, line: 9, type: !10908)
!10931 = !DILocalVariable(name: "id", arg: 2, scope: !10904, file: !10905, line: 9, type: !180)
!10932 = !DILocalVariable(name: "state", arg: 3, scope: !10904, file: !10905, line: 10, type: !10928)
!10933 = !DILocation(line: 0, scope: !10904)
!10934 = !DILocation(line: 12, column: 20, scope: !10904)
!10935 = !DILocation(line: 13, column: 27, scope: !10904)
!10936 = !DILocation(line: 13, column: 42, scope: !10904)
!10937 = !DILocation(line: 13, column: 19, scope: !10904)
!10938 = !DILocation(line: 13, column: 16, scope: !10904)
!10939 = !DILocation(line: 13, column: 2, scope: !10904)
!10940 = distinct !{!10940, !10939, !10941}
!10941 = !DILocation(line: 19, column: 2, scope: !10904)
!10942 = !DILocation(line: 14, column: 23, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10905, line: 14, column: 7)
!10944 = distinct !DILexicalBlock(scope: !10904, file: !10905, line: 13, column: 54)
!10945 = !DILocation(line: 14, column: 10, scope: !10943)
!10946 = !DILocation(line: 18, column: 11, scope: !10944)
!10947 = !DILocation(line: 14, column: 7, scope: !10944)
!10948 = !DILocation(line: 22, column: 1, scope: !10904)
!10949 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1764, file: !1764, line: 193, type: !10950, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !10959)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!109, !10952, !180, !22}
!10952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10953, size: 32)
!10953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10954)
!10954 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1533, line: 37, baseType: !10955)
!10955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1533, line: 32, size: 64, elements: !10956)
!10956 = !{!10957, !10958}
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10955, file: !1533, line: 34, baseType: !110, size: 32)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10955, file: !1533, line: 36, baseType: !110, size: 32, offset: 32)
!10959 = !{!10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10969}
!10960 = !DILocalVariable(name: "pins", arg: 1, scope: !10949, file: !1764, line: 193, type: !10952)
!10961 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10949, file: !1764, line: 193, type: !180)
!10962 = !DILocalVariable(name: "reg", arg: 3, scope: !10949, file: !1764, line: 194, type: !22)
!10963 = !DILocalVariable(name: "pin", scope: !10949, file: !1764, line: 196, type: !110)
!10964 = !DILocalVariable(name: "mux", scope: !10949, file: !1764, line: 196, type: !110)
!10965 = !DILocalVariable(name: "pin_cgf", scope: !10949, file: !1764, line: 197, type: !110)
!10966 = !DILocalVariable(name: "ret", scope: !10949, file: !1764, line: 198, type: !109)
!10967 = !DILocalVariable(name: "i", scope: !10968, file: !1764, line: 209, type: !180)
!10968 = distinct !DILexicalBlock(scope: !10949, file: !1764, line: 209, column: 2)
!10969 = !DILocalVariable(name: "gpio_out", scope: !10970, file: !1764, line: 239, type: !110)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !1764, line: 238, column: 55)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !1764, line: 238, column: 14)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !1764, line: 236, column: 14)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !1764, line: 234, column: 7)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1764, line: 209, column: 41)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !1764, line: 209, column: 2)
!10976 = !DILocation(line: 0, scope: !10949)
!10977 = !DILocation(line: 0, scope: !10968)
!10978 = !DILocation(line: 209, column: 25, scope: !10975)
!10979 = !DILocation(line: 209, column: 2, scope: !10968)
!10980 = distinct !{!10980, !10979, !10981}
!10981 = !DILocation(line: 259, column: 2, scope: !10968)
!10982 = !DILocation(line: 210, column: 17, scope: !10974)
!10983 = !DILocation(line: 234, column: 7, scope: !10973)
!10984 = !DILocation(line: 234, column: 33, scope: !10973)
!10985 = !DILocation(line: 234, column: 7, scope: !10974)
!10986 = !DILocation(line: 235, column: 22, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10973, file: !1764, line: 234, column: 49)
!10988 = !DILocation(line: 235, column: 29, scope: !10987)
!10989 = !DILocation(line: 236, column: 3, scope: !10987)
!10990 = !DILocation(line: 236, column: 14, scope: !10973)
!10991 = !DILocation(line: 239, column: 32, scope: !10970)
!10992 = !DILocation(line: 0, scope: !10970)
!10993 = !DILocation(line: 241, column: 8, scope: !10970)
!10994 = !DILocation(line: 246, column: 3, scope: !10970)
!10995 = !DILocation(line: 252, column: 9, scope: !10974)
!10996 = !DILocation(line: 255, column: 9, scope: !10974)
!10997 = !DILocation(line: 256, column: 11, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10974, file: !1764, line: 256, column: 7)
!10999 = !DILocation(line: 209, column: 37, scope: !10975)
!11000 = !DILocation(line: 256, column: 7, scope: !10974)
!11001 = !DILocation(line: 262, column: 1, scope: !10949)
!11002 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1764, file: !1764, line: 176, type: !11003, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11005)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{!109, !110, !110, !110}
!11005 = !{!11006, !11007, !11008, !11009}
!11006 = !DILocalVariable(name: "pin", arg: 1, scope: !11002, file: !1764, line: 176, type: !110)
!11007 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11002, file: !1764, line: 176, type: !110)
!11008 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11002, file: !1764, line: 176, type: !110)
!11009 = !DILocalVariable(name: "port_device", scope: !11002, file: !1764, line: 178, type: !1694)
!11010 = !DILocation(line: 0, scope: !11002)
!11011 = !DILocation(line: 180, column: 22, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11002, file: !1764, line: 180, column: 6)
!11013 = !DILocation(line: 180, column: 6, scope: !11002)
!11014 = !DILocation(line: 180, column: 6, scope: !11012)
!11015 = !DILocation(line: 184, column: 16, scope: !11002)
!11016 = !DILocation(line: 186, column: 19, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11002, file: !1764, line: 186, column: 6)
!11018 = !DILocation(line: 186, column: 28, scope: !11017)
!11019 = !DILocation(line: 186, column: 33, scope: !11017)
!11020 = !DILocation(line: 186, column: 6, scope: !11002)
!11021 = !DILocation(line: 190, column: 43, scope: !11002)
!11022 = !DILocation(line: 190, column: 9, scope: !11002)
!11023 = !DILocation(line: 190, column: 2, scope: !11002)
!11024 = !DILocation(line: 191, column: 1, scope: !11002)
!11025 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !11026, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11028)
!11026 = !DISubroutineType(types: !11027)
!11027 = !{!347, !1694}
!11028 = !{!11029}
!11029 = !DILocalVariable(name: "dev", arg: 1, scope: !11025, file: !8929, line: 47, type: !1694)
!11030 = !DILocation(line: 0, scope: !11025)
!11031 = !DILocation(line: 55, column: 2, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11025, file: !8929, line: 55, column: 2)
!11033 = !{i64 2149438469}
!11034 = !DILocation(line: 56, column: 9, scope: !11025)
!11035 = !DILocation(line: 56, column: 2, scope: !11025)
!11036 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11026, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1682, retainedNodes: !11037)
!11037 = !{!11038}
!11038 = !DILocalVariable(name: "dev", arg: 1, scope: !11036, file: !336, line: 730, type: !1694)
!11039 = !DILocation(line: 0, scope: !11036)
!11040 = !DILocation(line: 732, column: 9, scope: !11036)
!11041 = !DILocation(line: 732, column: 2, scope: !11036)
!11042 = distinct !DISubprogram(name: "SystemInit", scope: !1812, file: !1812, line: 167, type: !3094, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1772, retainedNodes: !2034)
!11043 = !DILocation(line: 182, column: 1, scope: !11042)
!11044 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1812, file: !1812, line: 220, type: !3094, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1772, retainedNodes: !11045)
!11045 = !{!11046, !11047, !11048, !11049, !11050}
!11046 = !DILocalVariable(name: "tmp", scope: !11044, file: !1812, line: 222, type: !110)
!11047 = !DILocalVariable(name: "pllvco", scope: !11044, file: !1812, line: 222, type: !110)
!11048 = !DILocalVariable(name: "pllp", scope: !11044, file: !1812, line: 222, type: !110)
!11049 = !DILocalVariable(name: "pllsource", scope: !11044, file: !1812, line: 222, type: !110)
!11050 = !DILocalVariable(name: "pllm", scope: !11044, file: !1812, line: 222, type: !110)
!11051 = !DILocation(line: 0, scope: !11044)
!11052 = !DILocation(line: 225, column: 14, scope: !11044)
!11053 = !DILocation(line: 225, column: 19, scope: !11044)
!11054 = !DILocation(line: 227, column: 3, scope: !11044)
!11055 = !DILocation(line: 234, column: 7, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11044, file: !1812, line: 228, column: 3)
!11057 = !DILocation(line: 240, column: 25, scope: !11056)
!11058 = !DILocation(line: 241, column: 19, scope: !11056)
!11059 = !DILocation(line: 241, column: 27, scope: !11056)
!11060 = !DILocation(line: 243, column: 21, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11056, file: !1812, line: 243, column: 11)
!11062 = !DILocation(line: 0, scope: !11061)
!11063 = !DILocation(line: 254, column: 22, scope: !11056)
!11064 = !DILocation(line: 254, column: 62, scope: !11056)
!11065 = !DILocation(line: 255, column: 31, scope: !11056)
!11066 = !DILocation(line: 256, column: 7, scope: !11056)
!11067 = !DILocation(line: 0, scope: !11056)
!11068 = !DILocation(line: 263, column: 30, scope: !11044)
!11069 = !DILocation(line: 263, column: 52, scope: !11044)
!11070 = !DILocation(line: 263, column: 9, scope: !11044)
!11071 = !DILocation(line: 265, column: 19, scope: !11044)
!11072 = !DILocation(line: 266, column: 1, scope: !11044)
!11073 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11074, file: !11074, line: 200, type: !11075, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11074 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11075 = !DISubroutineType(types: !11076)
!11076 = !{!11077}
!11077 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2911, line: 44, baseType: !2910)
!11078 = !DILocation(line: 202, column: 3, scope: !11073)
!11079 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11074, file: !11074, line: 219, type: !11080, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11104)
!11080 = !DISubroutineType(types: !11081)
!11081 = !{!11077, !11082}
!11082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11083, size: 32)
!11083 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11084, line: 70, baseType: !11085)
!11084 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11084, line: 49, size: 384, elements: !11086)
!11086 = !{!11087, !11088, !11089, !11090, !11091, !11092, !11093}
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11085, file: !11084, line: 51, baseType: !110, size: 32)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11085, file: !11084, line: 54, baseType: !110, size: 32, offset: 32)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11085, file: !11084, line: 57, baseType: !110, size: 32, offset: 64)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11085, file: !11084, line: 60, baseType: !110, size: 32, offset: 96)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11085, file: !11084, line: 63, baseType: !110, size: 32, offset: 128)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11085, file: !11084, line: 66, baseType: !110, size: 32, offset: 160)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11085, file: !11084, line: 69, baseType: !11094, size: 192, offset: 192)
!11094 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11095, line: 73, baseType: !11096)
!11095 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11095, line: 45, size: 192, elements: !11097)
!11097 = !{!11098, !11099, !11100, !11101, !11102, !11103}
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11096, file: !11095, line: 47, baseType: !110, size: 32)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11096, file: !11095, line: 50, baseType: !110, size: 32, offset: 32)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11096, file: !11095, line: 53, baseType: !110, size: 32, offset: 64)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11096, file: !11095, line: 56, baseType: !110, size: 32, offset: 96)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11096, file: !11095, line: 60, baseType: !110, size: 32, offset: 128)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11096, file: !11095, line: 63, baseType: !110, size: 32, offset: 160)
!11104 = !{!11105, !11106, !11107, !11108, !11112}
!11105 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11079, file: !11074, line: 219, type: !11082)
!11106 = !DILocalVariable(name: "tickstart", scope: !11079, file: !11074, line: 221, type: !110)
!11107 = !DILocalVariable(name: "pll_config", scope: !11079, file: !11074, line: 221, type: !110)
!11108 = !DILocalVariable(name: "pwrclkchanged", scope: !11109, file: !11074, line: 391, type: !11111)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !11074, line: 390, column: 3)
!11110 = distinct !DILexicalBlock(scope: !11079, file: !11074, line: 389, column: 6)
!11111 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !831, line: 188, baseType: !2917)
!11112 = !DILocalVariable(name: "tmpreg", scope: !11113, file: !11074, line: 400, type: !316)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !11074, line: 400, column: 7)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !11074, line: 399, column: 5)
!11115 = distinct !DILexicalBlock(scope: !11109, file: !11074, line: 398, column: 8)
!11116 = !DILocation(line: 0, scope: !11079)
!11117 = !DILocation(line: 224, column: 24, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11079, file: !11074, line: 224, column: 6)
!11119 = !DILocation(line: 224, column: 6, scope: !11079)
!11120 = !DILocation(line: 232, column: 27, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11079, file: !11074, line: 232, column: 6)
!11122 = !DILocation(line: 232, column: 43, scope: !11121)
!11123 = !DILocation(line: 232, column: 69, scope: !11121)
!11124 = !DILocation(line: 232, column: 6, scope: !11079)
!11125 = !DILocation(line: 237, column: 9, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !11074, line: 237, column: 8)
!11127 = distinct !DILexicalBlock(scope: !11121, file: !11074, line: 233, column: 3)
!11128 = !DILocation(line: 237, column: 39, scope: !11126)
!11129 = !DILocation(line: 237, column: 60, scope: !11126)
!11130 = !DILocation(line: 238, column: 9, scope: !11126)
!11131 = !DILocation(line: 238, column: 39, scope: !11126)
!11132 = !DILocation(line: 238, column: 60, scope: !11126)
!11133 = !DILocation(line: 238, column: 70, scope: !11126)
!11134 = !DILocation(line: 238, column: 78, scope: !11126)
!11135 = !DILocation(line: 238, column: 100, scope: !11126)
!11136 = !DILocation(line: 237, column: 8, scope: !11127)
!11137 = !DILocation(line: 240, column: 11, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !11074, line: 240, column: 10)
!11139 = distinct !DILexicalBlock(scope: !11126, file: !11074, line: 239, column: 5)
!11140 = !DILocation(line: 240, column: 57, scope: !11138)
!11141 = !DILocation(line: 240, column: 80, scope: !11138)
!11142 = !DILocation(line: 240, column: 89, scope: !11138)
!11143 = !DILocation(line: 240, column: 10, scope: !11139)
!11144 = !DILocation(line: 248, column: 7, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !11074, line: 248, column: 7)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !11074, line: 248, column: 7)
!11147 = distinct !DILexicalBlock(scope: !11126, file: !11074, line: 246, column: 5)
!11148 = !DILocation(line: 248, column: 7, scope: !11146)
!11149 = !DILocation(line: 248, column: 7, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11145, file: !11074, line: 248, column: 7)
!11151 = !DILocation(line: 248, column: 7, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !11074, line: 248, column: 7)
!11153 = distinct !DILexicalBlock(scope: !11145, file: !11074, line: 248, column: 7)
!11154 = !DILocation(line: 248, column: 7, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11153, file: !11074, line: 248, column: 7)
!11156 = !DILocation(line: 0, scope: !11145)
!11157 = !DILocation(line: 251, column: 30, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11147, file: !11074, line: 251, column: 10)
!11159 = !DILocation(line: 251, column: 40, scope: !11158)
!11160 = !DILocation(line: 0, scope: !11158)
!11161 = !DILocation(line: 251, column: 10, scope: !11147)
!11162 = !DILocation(line: 257, column: 15, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11158, file: !11074, line: 252, column: 7)
!11164 = !DILocation(line: 257, column: 51, scope: !11163)
!11165 = !DILocation(line: 257, column: 9, scope: !11163)
!11166 = !DILocation(line: 259, column: 15, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !11074, line: 259, column: 14)
!11168 = distinct !DILexicalBlock(scope: !11163, file: !11074, line: 258, column: 9)
!11169 = !DILocation(line: 259, column: 29, scope: !11167)
!11170 = !DILocation(line: 259, column: 43, scope: !11167)
!11171 = !DILocation(line: 259, column: 14, scope: !11168)
!11172 = distinct !{!11172, !11165, !11173}
!11173 = !DILocation(line: 263, column: 9, scope: !11163)
!11174 = !DILocation(line: 271, column: 15, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11158, file: !11074, line: 266, column: 7)
!11176 = !DILocation(line: 271, column: 9, scope: !11175)
!11177 = !DILocation(line: 273, column: 15, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !11074, line: 273, column: 14)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !11074, line: 272, column: 9)
!11180 = !DILocation(line: 273, column: 29, scope: !11178)
!11181 = !DILocation(line: 273, column: 43, scope: !11178)
!11182 = !DILocation(line: 273, column: 14, scope: !11179)
!11183 = distinct !{!11183, !11176, !11184}
!11184 = !DILocation(line: 277, column: 9, scope: !11175)
!11185 = !DILocation(line: 282, column: 27, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11079, file: !11074, line: 282, column: 6)
!11187 = !DILocation(line: 282, column: 43, scope: !11186)
!11188 = !DILocation(line: 282, column: 69, scope: !11186)
!11189 = !DILocation(line: 282, column: 6, scope: !11079)
!11190 = !DILocation(line: 289, column: 9, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !11074, line: 289, column: 8)
!11192 = distinct !DILexicalBlock(scope: !11186, file: !11074, line: 283, column: 3)
!11193 = !DILocation(line: 289, column: 39, scope: !11191)
!11194 = !DILocation(line: 289, column: 60, scope: !11191)
!11195 = !DILocation(line: 290, column: 9, scope: !11191)
!11196 = !DILocation(line: 290, column: 39, scope: !11191)
!11197 = !DILocation(line: 290, column: 60, scope: !11191)
!11198 = !DILocation(line: 290, column: 70, scope: !11191)
!11199 = !DILocation(line: 290, column: 78, scope: !11191)
!11200 = !DILocation(line: 290, column: 100, scope: !11191)
!11201 = !DILocation(line: 289, column: 8, scope: !11192)
!11202 = !DILocation(line: 293, column: 11, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !11074, line: 293, column: 10)
!11204 = distinct !DILexicalBlock(scope: !11191, file: !11074, line: 291, column: 5)
!11205 = !DILocation(line: 293, column: 57, scope: !11203)
!11206 = !DILocation(line: 293, column: 80, scope: !11203)
!11207 = !DILocation(line: 293, column: 89, scope: !11203)
!11208 = !DILocation(line: 293, column: 10, scope: !11204)
!11209 = !DILocation(line: 307, column: 30, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !11074, line: 307, column: 10)
!11211 = distinct !DILexicalBlock(scope: !11191, file: !11074, line: 305, column: 5)
!11212 = !DILocation(line: 307, column: 39, scope: !11210)
!11213 = !DILocation(line: 307, column: 10, scope: !11211)
!11214 = !DILocation(line: 310, column: 9, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11210, file: !11074, line: 308, column: 7)
!11216 = !DILocation(line: 313, column: 21, scope: !11215)
!11217 = !DILocation(line: 316, column: 9, scope: !11215)
!11218 = !DILocation(line: 316, column: 15, scope: !11215)
!11219 = !DILocation(line: 316, column: 51, scope: !11215)
!11220 = !DILocation(line: 318, column: 15, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !11074, line: 318, column: 14)
!11222 = distinct !DILexicalBlock(scope: !11215, file: !11074, line: 317, column: 9)
!11223 = !DILocation(line: 318, column: 29, scope: !11221)
!11224 = !DILocation(line: 318, column: 43, scope: !11221)
!11225 = !DILocation(line: 318, column: 14, scope: !11222)
!11226 = distinct !{!11226, !11217, !11227}
!11227 = !DILocation(line: 322, column: 9, scope: !11215)
!11228 = !DILocation(line: 330, column: 9, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11210, file: !11074, line: 328, column: 7)
!11230 = !DILocation(line: 333, column: 21, scope: !11229)
!11231 = !DILocation(line: 336, column: 9, scope: !11229)
!11232 = !DILocation(line: 336, column: 15, scope: !11229)
!11233 = !DILocation(line: 338, column: 15, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11235, file: !11074, line: 338, column: 14)
!11235 = distinct !DILexicalBlock(scope: !11229, file: !11074, line: 337, column: 9)
!11236 = !DILocation(line: 338, column: 29, scope: !11234)
!11237 = !DILocation(line: 338, column: 43, scope: !11234)
!11238 = !DILocation(line: 338, column: 14, scope: !11235)
!11239 = distinct !{!11239, !11231, !11240}
!11240 = !DILocation(line: 342, column: 9, scope: !11229)
!11241 = !DILocation(line: 0, scope: !11191)
!11242 = !DILocation(line: 347, column: 27, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11079, file: !11074, line: 347, column: 6)
!11244 = !DILocation(line: 347, column: 43, scope: !11243)
!11245 = !DILocation(line: 347, column: 69, scope: !11243)
!11246 = !DILocation(line: 347, column: 6, scope: !11079)
!11247 = !DILocation(line: 353, column: 28, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !11074, line: 353, column: 8)
!11249 = distinct !DILexicalBlock(scope: !11243, file: !11074, line: 348, column: 3)
!11250 = !DILocation(line: 353, column: 37, scope: !11248)
!11251 = !DILocation(line: 353, column: 8, scope: !11249)
!11252 = !DILocation(line: 356, column: 7, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11248, file: !11074, line: 354, column: 5)
!11254 = !DILocation(line: 359, column: 19, scope: !11253)
!11255 = !DILocation(line: 362, column: 7, scope: !11253)
!11256 = !DILocation(line: 362, column: 13, scope: !11253)
!11257 = !DILocation(line: 362, column: 49, scope: !11253)
!11258 = !DILocation(line: 364, column: 13, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11260, file: !11074, line: 364, column: 12)
!11260 = distinct !DILexicalBlock(scope: !11253, file: !11074, line: 363, column: 7)
!11261 = !DILocation(line: 364, column: 27, scope: !11259)
!11262 = !DILocation(line: 364, column: 41, scope: !11259)
!11263 = !DILocation(line: 364, column: 12, scope: !11260)
!11264 = distinct !{!11264, !11255, !11265}
!11265 = !DILocation(line: 368, column: 7, scope: !11253)
!11266 = !DILocation(line: 373, column: 7, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11248, file: !11074, line: 371, column: 5)
!11268 = !DILocation(line: 376, column: 19, scope: !11267)
!11269 = !DILocation(line: 379, column: 7, scope: !11267)
!11270 = !DILocation(line: 379, column: 13, scope: !11267)
!11271 = !DILocation(line: 381, column: 13, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !11074, line: 381, column: 12)
!11273 = distinct !DILexicalBlock(scope: !11267, file: !11074, line: 380, column: 7)
!11274 = !DILocation(line: 381, column: 27, scope: !11272)
!11275 = !DILocation(line: 381, column: 41, scope: !11272)
!11276 = !DILocation(line: 381, column: 12, scope: !11273)
!11277 = distinct !{!11277, !11269, !11278}
!11278 = !DILocation(line: 385, column: 7, scope: !11267)
!11279 = !DILocation(line: 389, column: 27, scope: !11110)
!11280 = !DILocation(line: 389, column: 43, scope: !11110)
!11281 = !DILocation(line: 389, column: 69, scope: !11110)
!11282 = !DILocation(line: 389, column: 6, scope: !11079)
!11283 = !DILocation(line: 0, scope: !11109)
!11284 = !DILocation(line: 398, column: 8, scope: !11115)
!11285 = !DILocation(line: 398, column: 8, scope: !11109)
!11286 = !DILocation(line: 400, column: 7, scope: !11113)
!11287 = !DILocation(line: 400, column: 7, scope: !11114)
!11288 = !DILocation(line: 402, column: 5, scope: !11114)
!11289 = !DILocation(line: 404, column: 8, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11109, file: !11074, line: 404, column: 8)
!11291 = !DILocation(line: 404, column: 8, scope: !11109)
!11292 = !DILocation(line: 407, column: 7, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11290, file: !11074, line: 405, column: 5)
!11294 = !DILocation(line: 410, column: 19, scope: !11293)
!11295 = !DILocation(line: 412, column: 7, scope: !11293)
!11296 = !DILocation(line: 412, column: 13, scope: !11293)
!11297 = !DILocation(line: 414, column: 13, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !11074, line: 414, column: 12)
!11299 = distinct !DILexicalBlock(scope: !11293, file: !11074, line: 413, column: 7)
!11300 = !DILocation(line: 414, column: 27, scope: !11298)
!11301 = !DILocation(line: 414, column: 40, scope: !11298)
!11302 = !DILocation(line: 414, column: 12, scope: !11299)
!11303 = distinct !{!11303, !11295, !11304}
!11304 = !DILocation(line: 418, column: 7, scope: !11293)
!11305 = !DILocation(line: 422, column: 5, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11307, file: !11074, line: 422, column: 5)
!11307 = distinct !DILexicalBlock(scope: !11109, file: !11074, line: 422, column: 5)
!11308 = !DILocation(line: 422, column: 5, scope: !11307)
!11309 = !DILocation(line: 422, column: 5, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11306, file: !11074, line: 422, column: 5)
!11311 = !DILocation(line: 422, column: 5, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !11074, line: 422, column: 5)
!11313 = distinct !DILexicalBlock(scope: !11306, file: !11074, line: 422, column: 5)
!11314 = !DILocation(line: 422, column: 5, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11313, file: !11074, line: 422, column: 5)
!11316 = !DILocation(line: 0, scope: !11306)
!11317 = !DILocation(line: 424, column: 28, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11109, file: !11074, line: 424, column: 8)
!11319 = !DILocation(line: 424, column: 38, scope: !11318)
!11320 = !DILocation(line: 0, scope: !11318)
!11321 = !DILocation(line: 424, column: 8, scope: !11109)
!11322 = !DILocation(line: 430, column: 13, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11318, file: !11074, line: 425, column: 5)
!11324 = !DILocation(line: 430, column: 49, scope: !11323)
!11325 = !DILocation(line: 430, column: 7, scope: !11323)
!11326 = !DILocation(line: 432, column: 13, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !11074, line: 432, column: 12)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !11074, line: 431, column: 7)
!11329 = !DILocation(line: 432, column: 27, scope: !11327)
!11330 = !DILocation(line: 432, column: 41, scope: !11327)
!11331 = !DILocation(line: 432, column: 12, scope: !11328)
!11332 = distinct !{!11332, !11325, !11333}
!11333 = !DILocation(line: 436, column: 7, scope: !11323)
!11334 = !DILocation(line: 444, column: 13, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11318, file: !11074, line: 439, column: 5)
!11336 = !DILocation(line: 444, column: 7, scope: !11335)
!11337 = !DILocation(line: 446, column: 13, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !11074, line: 446, column: 12)
!11339 = distinct !DILexicalBlock(scope: !11335, file: !11074, line: 445, column: 7)
!11340 = !DILocation(line: 446, column: 27, scope: !11338)
!11341 = !DILocation(line: 446, column: 41, scope: !11338)
!11342 = !DILocation(line: 446, column: 12, scope: !11339)
!11343 = distinct !{!11343, !11336, !11344}
!11344 = !DILocation(line: 450, column: 7, scope: !11335)
!11345 = !DILocation(line: 454, column: 8, scope: !11109)
!11346 = !DILocation(line: 456, column: 7, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !11074, line: 455, column: 5)
!11348 = distinct !DILexicalBlock(scope: !11109, file: !11074, line: 454, column: 8)
!11349 = !DILocation(line: 457, column: 5, scope: !11347)
!11350 = !DILocation(line: 462, column: 31, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11079, file: !11074, line: 462, column: 7)
!11352 = !DILocation(line: 462, column: 41, scope: !11351)
!11353 = !DILocation(line: 462, column: 7, scope: !11079)
!11354 = !DILocation(line: 465, column: 8, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !11074, line: 465, column: 8)
!11356 = distinct !DILexicalBlock(scope: !11351, file: !11074, line: 463, column: 3)
!11357 = !DILocation(line: 465, column: 38, scope: !11355)
!11358 = !DILocation(line: 465, column: 8, scope: !11356)
!11359 = !DILocation(line: 467, column: 44, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !11074, line: 467, column: 10)
!11361 = distinct !DILexicalBlock(scope: !11355, file: !11074, line: 466, column: 5)
!11362 = !DILocation(line: 0, scope: !11360)
!11363 = !DILocation(line: 467, column: 10, scope: !11361)
!11364 = !DILocation(line: 483, column: 15, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11360, file: !11074, line: 468, column: 7)
!11366 = !DILocation(line: 483, column: 9, scope: !11365)
!11367 = !DILocation(line: 485, column: 15, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !11074, line: 485, column: 14)
!11369 = distinct !DILexicalBlock(scope: !11365, file: !11074, line: 484, column: 9)
!11370 = !DILocation(line: 485, column: 29, scope: !11368)
!11371 = !DILocation(line: 485, column: 43, scope: !11368)
!11372 = !DILocation(line: 485, column: 14, scope: !11369)
!11373 = distinct !{!11373, !11366, !11374}
!11374 = !DILocation(line: 489, column: 9, scope: !11365)
!11375 = !DILocation(line: 492, column: 9, scope: !11365)
!11376 = !DILocation(line: 498, column: 9, scope: !11365)
!11377 = !DILocation(line: 501, column: 21, scope: !11365)
!11378 = !DILocation(line: 504, column: 9, scope: !11365)
!11379 = !DILocation(line: 504, column: 15, scope: !11365)
!11380 = !DILocation(line: 504, column: 51, scope: !11365)
!11381 = !DILocation(line: 506, column: 15, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !11074, line: 506, column: 14)
!11383 = distinct !DILexicalBlock(scope: !11365, file: !11074, line: 505, column: 9)
!11384 = !DILocation(line: 506, column: 29, scope: !11382)
!11385 = !DILocation(line: 506, column: 43, scope: !11382)
!11386 = !DILocation(line: 506, column: 14, scope: !11383)
!11387 = distinct !{!11387, !11378, !11388}
!11388 = !DILocation(line: 510, column: 9, scope: !11365)
!11389 = !DILocation(line: 521, column: 15, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11360, file: !11074, line: 513, column: 7)
!11391 = !DILocation(line: 521, column: 9, scope: !11390)
!11392 = !DILocation(line: 523, column: 15, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11394, file: !11074, line: 523, column: 14)
!11394 = distinct !DILexicalBlock(scope: !11390, file: !11074, line: 522, column: 9)
!11395 = !DILocation(line: 523, column: 29, scope: !11393)
!11396 = !DILocation(line: 523, column: 43, scope: !11393)
!11397 = !DILocation(line: 523, column: 14, scope: !11394)
!11398 = distinct !{!11398, !11391, !11399}
!11399 = !DILocation(line: 527, column: 9, scope: !11390)
!11400 = !DILocation(line: 533, column: 44, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !11074, line: 533, column: 10)
!11402 = distinct !DILexicalBlock(scope: !11355, file: !11074, line: 531, column: 5)
!11403 = !DILocation(line: 533, column: 10, scope: !11402)
!11404 = !DILocation(line: 540, column: 27, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !11074, line: 538, column: 7)
!11406 = !DILocation(line: 551, column: 14, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11405, file: !11074, line: 550, column: 13)
!11408 = !DILocation(line: 551, column: 81, scope: !11407)
!11409 = !DILocation(line: 551, column: 55, scope: !11407)
!11410 = !DILocation(line: 551, column: 92, scope: !11407)
!11411 = !DILocation(line: 552, column: 14, scope: !11407)
!11412 = !DILocation(line: 552, column: 80, scope: !11407)
!11413 = !DILocation(line: 552, column: 53, scope: !11407)
!11414 = !DILocation(line: 552, column: 111, scope: !11407)
!11415 = !DILocation(line: 553, column: 14, scope: !11407)
!11416 = !DILocation(line: 553, column: 80, scope: !11407)
!11417 = !DILocation(line: 553, column: 86, scope: !11407)
!11418 = !DILocation(line: 553, column: 53, scope: !11407)
!11419 = !DILocation(line: 553, column: 111, scope: !11407)
!11420 = !DILocation(line: 554, column: 14, scope: !11407)
!11421 = !DILocation(line: 554, column: 82, scope: !11407)
!11422 = !DILocation(line: 554, column: 101, scope: !11407)
!11423 = !DILocation(line: 554, column: 53, scope: !11407)
!11424 = !DILocation(line: 554, column: 126, scope: !11407)
!11425 = !DILocation(line: 555, column: 14, scope: !11407)
!11426 = !DILocation(line: 555, column: 80, scope: !11407)
!11427 = !DILocation(line: 555, column: 85, scope: !11407)
!11428 = !DILocation(line: 555, column: 53, scope: !11407)
!11429 = !DILocation(line: 550, column: 13, scope: !11405)
!11430 = !DILocation(line: 563, column: 3, scope: !11079)
!11431 = !DILocation(line: 564, column: 1, scope: !11079)
!11432 = !DISubprogram(name: "HAL_GetTick", scope: !11433, file: !11433, line: 234, type: !6504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!11433 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11434 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11074, file: !11074, line: 591, type: !11435, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11446)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!11077, !11437, !110}
!11437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11438, size: 32)
!11438 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11084, line: 92, baseType: !11439)
!11439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11084, line: 75, size: 160, elements: !11440)
!11440 = !{!11441, !11442, !11443, !11444, !11445}
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11439, file: !11084, line: 77, baseType: !110, size: 32)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11439, file: !11084, line: 80, baseType: !110, size: 32, offset: 32)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11439, file: !11084, line: 83, baseType: !110, size: 32, offset: 64)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11439, file: !11084, line: 86, baseType: !110, size: 32, offset: 96)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11439, file: !11084, line: 89, baseType: !110, size: 32, offset: 128)
!11446 = !{!11447, !11448, !11449}
!11447 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11434, file: !11074, line: 591, type: !11437)
!11448 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11434, file: !11074, line: 591, type: !110)
!11449 = !DILocalVariable(name: "tickstart", scope: !11434, file: !11074, line: 593, type: !110)
!11450 = !DILocation(line: 0, scope: !11434)
!11451 = !DILocation(line: 596, column: 24, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 596, column: 6)
!11453 = !DILocation(line: 596, column: 6, scope: !11434)
!11454 = !DILocation(line: 610, column: 17, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 610, column: 6)
!11456 = !DILocation(line: 610, column: 15, scope: !11455)
!11457 = !DILocation(line: 610, column: 6, scope: !11434)
!11458 = !DILocation(line: 613, column: 5, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11455, file: !11074, line: 611, column: 3)
!11460 = !DILocation(line: 617, column: 8, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11459, file: !11074, line: 617, column: 8)
!11462 = !DILocation(line: 617, column: 34, scope: !11461)
!11463 = !DILocation(line: 617, column: 8, scope: !11459)
!11464 = !DILocation(line: 624, column: 27, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 624, column: 6)
!11466 = !DILocation(line: 624, column: 38, scope: !11465)
!11467 = !DILocation(line: 624, column: 60, scope: !11465)
!11468 = !DILocation(line: 624, column: 6, scope: !11434)
!11469 = !DILocation(line: 628, column: 40, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !11074, line: 628, column: 8)
!11471 = distinct !DILexicalBlock(scope: !11465, file: !11074, line: 625, column: 3)
!11472 = !DILocation(line: 628, column: 63, scope: !11470)
!11473 = !DILocation(line: 628, column: 8, scope: !11471)
!11474 = !DILocation(line: 630, column: 7, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11470, file: !11074, line: 629, column: 5)
!11476 = !DILocation(line: 633, column: 29, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11471, file: !11074, line: 633, column: 8)
!11478 = !DILocation(line: 631, column: 5, scope: !11475)
!11479 = !DILocation(line: 633, column: 40, scope: !11477)
!11480 = !DILocation(line: 633, column: 63, scope: !11477)
!11481 = !DILocation(line: 633, column: 8, scope: !11471)
!11482 = !DILocation(line: 635, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11477, file: !11074, line: 634, column: 5)
!11484 = !DILocation(line: 636, column: 5, scope: !11483)
!11485 = !DILocation(line: 639, column: 5, scope: !11471)
!11486 = !DILocation(line: 643, column: 27, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 643, column: 6)
!11488 = !DILocation(line: 640, column: 3, scope: !11471)
!11489 = !DILocation(line: 643, column: 38, scope: !11487)
!11490 = !DILocation(line: 643, column: 62, scope: !11487)
!11491 = !DILocation(line: 643, column: 6, scope: !11434)
!11492 = !DILocation(line: 648, column: 27, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !11074, line: 648, column: 8)
!11494 = distinct !DILexicalBlock(scope: !11487, file: !11074, line: 644, column: 3)
!11495 = !DILocation(line: 648, column: 8, scope: !11494)
!11496 = !DILocation(line: 651, column: 10, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !11074, line: 651, column: 10)
!11498 = distinct !DILexicalBlock(scope: !11493, file: !11074, line: 649, column: 5)
!11499 = !DILocation(line: 651, column: 46, scope: !11497)
!11500 = !DILocation(line: 651, column: 10, scope: !11498)
!11501 = !DILocation(line: 661, column: 10, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !11074, line: 661, column: 10)
!11503 = distinct !DILexicalBlock(scope: !11504, file: !11074, line: 659, column: 5)
!11504 = distinct !DILexicalBlock(scope: !11493, file: !11074, line: 657, column: 13)
!11505 = !DILocation(line: 661, column: 46, scope: !11502)
!11506 = !DILocation(line: 661, column: 10, scope: !11503)
!11507 = !DILocation(line: 670, column: 10, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !11074, line: 670, column: 10)
!11509 = distinct !DILexicalBlock(scope: !11504, file: !11074, line: 668, column: 5)
!11510 = !DILocation(line: 670, column: 46, scope: !11508)
!11511 = !DILocation(line: 670, column: 10, scope: !11509)
!11512 = !DILocation(line: 676, column: 5, scope: !11494)
!11513 = !DILocation(line: 679, column: 17, scope: !11494)
!11514 = !DILocation(line: 681, column: 5, scope: !11494)
!11515 = !DILocation(line: 681, column: 12, scope: !11494)
!11516 = !DILocation(line: 681, column: 65, scope: !11494)
!11517 = !DILocation(line: 681, column: 78, scope: !11494)
!11518 = !DILocation(line: 681, column: 42, scope: !11494)
!11519 = !DILocation(line: 683, column: 12, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !11074, line: 683, column: 11)
!11521 = distinct !DILexicalBlock(scope: !11494, file: !11074, line: 682, column: 5)
!11522 = !DILocation(line: 683, column: 26, scope: !11520)
!11523 = !DILocation(line: 683, column: 39, scope: !11520)
!11524 = !DILocation(line: 683, column: 11, scope: !11521)
!11525 = distinct !{!11525, !11514, !11526}
!11526 = !DILocation(line: 687, column: 5, scope: !11494)
!11527 = !DILocation(line: 691, column: 17, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 691, column: 6)
!11529 = !DILocation(line: 691, column: 15, scope: !11528)
!11530 = !DILocation(line: 691, column: 6, scope: !11434)
!11531 = !DILocation(line: 694, column: 5, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11528, file: !11074, line: 692, column: 3)
!11533 = !DILocation(line: 698, column: 8, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11532, file: !11074, line: 698, column: 8)
!11535 = !DILocation(line: 698, column: 34, scope: !11534)
!11536 = !DILocation(line: 698, column: 8, scope: !11532)
!11537 = !DILocation(line: 705, column: 27, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 705, column: 6)
!11539 = !DILocation(line: 705, column: 38, scope: !11538)
!11540 = !DILocation(line: 705, column: 61, scope: !11538)
!11541 = !DILocation(line: 705, column: 6, scope: !11434)
!11542 = !DILocation(line: 708, column: 5, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11538, file: !11074, line: 706, column: 3)
!11544 = !DILocation(line: 712, column: 27, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11434, file: !11074, line: 712, column: 6)
!11546 = !DILocation(line: 709, column: 3, scope: !11543)
!11547 = !DILocation(line: 712, column: 38, scope: !11545)
!11548 = !DILocation(line: 712, column: 61, scope: !11545)
!11549 = !DILocation(line: 712, column: 6, scope: !11434)
!11550 = !DILocation(line: 715, column: 5, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11545, file: !11074, line: 713, column: 3)
!11552 = !DILocation(line: 716, column: 3, scope: !11551)
!11553 = !DILocation(line: 719, column: 21, scope: !11434)
!11554 = !DILocation(line: 719, column: 70, scope: !11434)
!11555 = !DILocation(line: 719, column: 91, scope: !11434)
!11556 = !DILocation(line: 719, column: 50, scope: !11434)
!11557 = !DILocation(line: 719, column: 47, scope: !11434)
!11558 = !DILocation(line: 719, column: 19, scope: !11434)
!11559 = !DILocation(line: 722, column: 17, scope: !11434)
!11560 = !DILocation(line: 722, column: 3, scope: !11434)
!11561 = !DILocation(line: 724, column: 3, scope: !11434)
!11562 = !DILocation(line: 725, column: 1, scope: !11434)
!11563 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11074, file: !11074, line: 885, type: !6504, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11564)
!11564 = !{!11565, !11566, !11567, !11568}
!11565 = !DILocalVariable(name: "pllm", scope: !11563, file: !11074, line: 887, type: !110)
!11566 = !DILocalVariable(name: "pllvco", scope: !11563, file: !11074, line: 887, type: !110)
!11567 = !DILocalVariable(name: "pllp", scope: !11563, file: !11074, line: 887, type: !110)
!11568 = !DILocalVariable(name: "sysclockfreq", scope: !11563, file: !11074, line: 888, type: !110)
!11569 = !DILocation(line: 0, scope: !11563)
!11570 = !DILocation(line: 891, column: 16, scope: !11563)
!11571 = !DILocation(line: 891, column: 21, scope: !11563)
!11572 = !DILocation(line: 891, column: 3, scope: !11563)
!11573 = !DILocation(line: 901, column: 7, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !11074, line: 899, column: 5)
!11575 = distinct !DILexicalBlock(scope: !11563, file: !11074, line: 892, column: 3)
!11576 = !DILocation(line: 907, column: 19, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11575, file: !11074, line: 904, column: 5)
!11578 = !DILocation(line: 907, column: 27, scope: !11577)
!11579 = !DILocation(line: 908, column: 10, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11577, file: !11074, line: 908, column: 10)
!11581 = !DILocation(line: 908, column: 40, scope: !11580)
!11582 = !DILocation(line: 0, scope: !11580)
!11583 = !DILocation(line: 918, column: 23, scope: !11577)
!11584 = !DILocation(line: 918, column: 82, scope: !11577)
!11585 = !DILocation(line: 920, column: 28, scope: !11577)
!11586 = !DILocation(line: 921, column: 7, scope: !11577)
!11587 = !DILocation(line: 0, scope: !11575)
!11588 = !DILocation(line: 929, column: 3, scope: !11563)
!11589 = !DISubprogram(name: "HAL_InitTick", scope: !11433, file: !11433, line: 223, type: !11590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!11590 = !DISubroutineType(types: !11591)
!11591 = !{!11077, !110}
!11592 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11074, file: !11074, line: 775, type: !11593, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11595)
!11593 = !DISubroutineType(types: !11594)
!11594 = !{null, !110, !110, !110}
!11595 = !{!11596, !11597, !11598, !11599, !11609, !11613}
!11596 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11592, file: !11074, line: 775, type: !110)
!11597 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11592, file: !11074, line: 775, type: !110)
!11598 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11592, file: !11074, line: 775, type: !110)
!11599 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11592, file: !11074, line: 777, type: !11600)
!11600 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11601, line: 62, baseType: !11602)
!11601 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11601, line: 46, size: 160, elements: !11603)
!11603 = !{!11604, !11605, !11606, !11607, !11608}
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11602, file: !11601, line: 48, baseType: !110, size: 32)
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11602, file: !11601, line: 51, baseType: !110, size: 32, offset: 32)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11602, file: !11601, line: 54, baseType: !110, size: 32, offset: 64)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11602, file: !11601, line: 57, baseType: !110, size: 32, offset: 96)
!11608 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11602, file: !11601, line: 60, baseType: !110, size: 32, offset: 128)
!11609 = !DILocalVariable(name: "tmpreg", scope: !11610, file: !11074, line: 787, type: !316)
!11610 = distinct !DILexicalBlock(scope: !11611, file: !11074, line: 787, column: 5)
!11611 = distinct !DILexicalBlock(scope: !11612, file: !11074, line: 783, column: 3)
!11612 = distinct !DILexicalBlock(scope: !11592, file: !11074, line: 782, column: 6)
!11613 = !DILocalVariable(name: "tmpreg", scope: !11614, file: !11074, line: 811, type: !316)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !11074, line: 811, column: 5)
!11615 = distinct !DILexicalBlock(scope: !11612, file: !11074, line: 807, column: 3)
!11616 = !DILocation(line: 0, scope: !11592)
!11617 = !DILocation(line: 777, column: 3, scope: !11592)
!11618 = !DILocation(line: 777, column: 20, scope: !11592)
!11619 = !DILocation(line: 782, column: 15, scope: !11612)
!11620 = !DILocation(line: 782, column: 6, scope: !11592)
!11621 = !DILocation(line: 787, column: 5, scope: !11610)
!11622 = !DILocation(line: 787, column: 5, scope: !11611)
!11623 = !DILocation(line: 790, column: 21, scope: !11611)
!11624 = !DILocation(line: 790, column: 25, scope: !11611)
!11625 = !DILocation(line: 791, column: 21, scope: !11611)
!11626 = !DILocation(line: 791, column: 26, scope: !11611)
!11627 = !DILocation(line: 792, column: 21, scope: !11611)
!11628 = !DILocation(line: 792, column: 27, scope: !11611)
!11629 = !DILocation(line: 793, column: 21, scope: !11611)
!11630 = !DILocation(line: 793, column: 26, scope: !11611)
!11631 = !DILocation(line: 794, column: 21, scope: !11611)
!11632 = !DILocation(line: 794, column: 31, scope: !11611)
!11633 = !DILocation(line: 795, column: 5, scope: !11611)
!11634 = !DILocation(line: 798, column: 5, scope: !11611)
!11635 = !DILocation(line: 804, column: 3, scope: !11611)
!11636 = !DILocation(line: 811, column: 5, scope: !11614)
!11637 = !DILocation(line: 811, column: 5, scope: !11615)
!11638 = !DILocation(line: 814, column: 21, scope: !11615)
!11639 = !DILocation(line: 814, column: 25, scope: !11615)
!11640 = !DILocation(line: 815, column: 21, scope: !11615)
!11641 = !DILocation(line: 815, column: 26, scope: !11615)
!11642 = !DILocation(line: 816, column: 21, scope: !11615)
!11643 = !DILocation(line: 816, column: 27, scope: !11615)
!11644 = !DILocation(line: 817, column: 21, scope: !11615)
!11645 = !DILocation(line: 817, column: 26, scope: !11615)
!11646 = !DILocation(line: 818, column: 21, scope: !11615)
!11647 = !DILocation(line: 818, column: 31, scope: !11615)
!11648 = !DILocation(line: 819, column: 5, scope: !11615)
!11649 = !DILocation(line: 822, column: 5, scope: !11615)
!11650 = !DILocation(line: 0, scope: !11612)
!11651 = !DILocation(line: 830, column: 1, scope: !11592)
!11652 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11601, file: !11601, line: 224, type: !11653, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{null, !2978, !11655}
!11655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11600, size: 32)
!11656 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11074, file: !11074, line: 841, type: !3094, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11657 = !DILocation(line: 843, column: 38, scope: !11656)
!11658 = !DILocation(line: 844, column: 1, scope: !11656)
!11659 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11074, file: !11074, line: 850, type: !3094, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11660 = !DILocation(line: 852, column: 38, scope: !11659)
!11661 = !DILocation(line: 853, column: 1, scope: !11659)
!11662 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11074, file: !11074, line: 941, type: !6504, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11663 = !DILocation(line: 943, column: 10, scope: !11662)
!11664 = !DILocation(line: 943, column: 3, scope: !11662)
!11665 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11074, file: !11074, line: 952, type: !6504, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11666 = !DILocation(line: 955, column: 11, scope: !11665)
!11667 = !DILocation(line: 955, column: 56, scope: !11665)
!11668 = !DILocation(line: 955, column: 78, scope: !11665)
!11669 = !DILocation(line: 955, column: 36, scope: !11665)
!11670 = !DILocation(line: 955, column: 33, scope: !11665)
!11671 = !DILocation(line: 955, column: 3, scope: !11665)
!11672 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11074, file: !11074, line: 964, type: !6504, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11673 = !DILocation(line: 967, column: 11, scope: !11672)
!11674 = !DILocation(line: 967, column: 55, scope: !11672)
!11675 = !DILocation(line: 967, column: 77, scope: !11672)
!11676 = !DILocation(line: 967, column: 35, scope: !11672)
!11677 = !DILocation(line: 967, column: 32, scope: !11672)
!11678 = !DILocation(line: 967, column: 3, scope: !11672)
!11679 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11074, file: !11074, line: 977, type: !11680, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11682)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{null, !11082}
!11682 = !{!11683}
!11683 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11679, file: !11074, line: 977, type: !11082)
!11684 = !DILocation(line: 0, scope: !11679)
!11685 = !DILocation(line: 980, column: 22, scope: !11679)
!11686 = !DILocation(line: 980, column: 37, scope: !11679)
!11687 = !DILocation(line: 983, column: 12, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11679, file: !11074, line: 983, column: 6)
!11689 = !DILocation(line: 983, column: 15, scope: !11688)
!11690 = !DILocation(line: 983, column: 31, scope: !11688)
!11691 = !DILocation(line: 983, column: 6, scope: !11679)
!11692 = !DILocation(line: 985, column: 24, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11688, file: !11074, line: 984, column: 3)
!11694 = !DILocation(line: 985, column: 33, scope: !11693)
!11695 = !DILocation(line: 986, column: 3, scope: !11693)
!11696 = !DILocation(line: 987, column: 17, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11688, file: !11074, line: 987, column: 11)
!11698 = !DILocation(line: 987, column: 20, scope: !11697)
!11699 = !DILocation(line: 987, column: 35, scope: !11697)
!11700 = !DILocation(line: 0, scope: !11697)
!11701 = !DILocation(line: 987, column: 11, scope: !11688)
!11702 = !DILocation(line: 989, column: 33, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11697, file: !11074, line: 988, column: 3)
!11704 = !DILocation(line: 990, column: 3, scope: !11703)
!11705 = !DILocation(line: 993, column: 33, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11697, file: !11074, line: 992, column: 3)
!11707 = !DILocation(line: 997, column: 12, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11679, file: !11074, line: 997, column: 6)
!11709 = !DILocation(line: 997, column: 15, scope: !11708)
!11710 = !DILocation(line: 1003, column: 24, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11708, file: !11074, line: 1002, column: 3)
!11712 = !DILocation(line: 1003, column: 33, scope: !11711)
!11713 = !DILocation(line: 1006, column: 61, scope: !11679)
!11714 = !DILocation(line: 1006, column: 81, scope: !11679)
!11715 = !DILocation(line: 1006, column: 22, scope: !11679)
!11716 = !DILocation(line: 1006, column: 42, scope: !11679)
!11717 = !DILocation(line: 1009, column: 12, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11679, file: !11074, line: 1009, column: 6)
!11719 = !DILocation(line: 1009, column: 17, scope: !11718)
!11720 = !DILocation(line: 1009, column: 35, scope: !11718)
!11721 = !DILocation(line: 1009, column: 6, scope: !11679)
!11722 = !DILocation(line: 1011, column: 24, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11718, file: !11074, line: 1010, column: 3)
!11724 = !DILocation(line: 1011, column: 33, scope: !11723)
!11725 = !DILocation(line: 1012, column: 3, scope: !11723)
!11726 = !DILocation(line: 1013, column: 17, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11718, file: !11074, line: 1013, column: 11)
!11728 = !DILocation(line: 1013, column: 22, scope: !11727)
!11729 = !DILocation(line: 1013, column: 39, scope: !11727)
!11730 = !DILocation(line: 0, scope: !11727)
!11731 = !DILocation(line: 1013, column: 11, scope: !11718)
!11732 = !DILocation(line: 1015, column: 33, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11727, file: !11074, line: 1014, column: 3)
!11734 = !DILocation(line: 1016, column: 3, scope: !11733)
!11735 = !DILocation(line: 1019, column: 33, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11727, file: !11074, line: 1018, column: 3)
!11737 = !DILocation(line: 1023, column: 12, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11679, file: !11074, line: 1023, column: 6)
!11739 = !DILocation(line: 1023, column: 16, scope: !11738)
!11740 = !DILocation(line: 1029, column: 24, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11738, file: !11074, line: 1028, column: 3)
!11742 = !DILocation(line: 1029, column: 33, scope: !11741)
!11743 = !DILocation(line: 1033, column: 12, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11679, file: !11074, line: 1033, column: 6)
!11745 = !DILocation(line: 1033, column: 15, scope: !11744)
!11746 = !DILocation(line: 1033, column: 30, scope: !11744)
!11747 = !DILocation(line: 1033, column: 6, scope: !11679)
!11748 = !DILocation(line: 1039, column: 28, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11744, file: !11074, line: 1038, column: 3)
!11750 = !DILocation(line: 1039, column: 37, scope: !11749)
!11751 = !DILocation(line: 1041, column: 54, scope: !11679)
!11752 = !DILocation(line: 1041, column: 62, scope: !11679)
!11753 = !DILocation(line: 1041, column: 26, scope: !11679)
!11754 = !DILocation(line: 1041, column: 36, scope: !11679)
!11755 = !DILocation(line: 1042, column: 49, scope: !11679)
!11756 = !DILocation(line: 1042, column: 57, scope: !11679)
!11757 = !DILocation(line: 1042, column: 26, scope: !11679)
!11758 = !DILocation(line: 1042, column: 31, scope: !11679)
!11759 = !DILocation(line: 1043, column: 50, scope: !11679)
!11760 = !DILocation(line: 1043, column: 78, scope: !11679)
!11761 = !DILocation(line: 1043, column: 26, scope: !11679)
!11762 = !DILocation(line: 1043, column: 31, scope: !11679)
!11763 = !DILocation(line: 1044, column: 52, scope: !11679)
!11764 = !DILocation(line: 1044, column: 102, scope: !11679)
!11765 = !DILocation(line: 1044, column: 109, scope: !11679)
!11766 = !DILocation(line: 1044, column: 26, scope: !11679)
!11767 = !DILocation(line: 1044, column: 31, scope: !11679)
!11768 = !DILocation(line: 1045, column: 50, scope: !11679)
!11769 = !DILocation(line: 1045, column: 78, scope: !11679)
!11770 = !DILocation(line: 1045, column: 26, scope: !11679)
!11771 = !DILocation(line: 1045, column: 31, scope: !11679)
!11772 = !DILocation(line: 1046, column: 1, scope: !11679)
!11773 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11074, file: !11074, line: 1056, type: !11774, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11776)
!11774 = !DISubroutineType(types: !11775)
!11775 = !{null, !11437, !884}
!11776 = !{!11777, !11778}
!11777 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11773, file: !11074, line: 1056, type: !11437)
!11778 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11773, file: !11074, line: 1056, type: !884)
!11779 = !DILocation(line: 0, scope: !11773)
!11780 = !DILocation(line: 1059, column: 22, scope: !11773)
!11781 = !DILocation(line: 1059, column: 32, scope: !11773)
!11782 = !DILocation(line: 1062, column: 53, scope: !11773)
!11783 = !DILocation(line: 1062, column: 58, scope: !11773)
!11784 = !DILocation(line: 1062, column: 22, scope: !11773)
!11785 = !DILocation(line: 1062, column: 35, scope: !11773)
!11786 = !DILocation(line: 1065, column: 54, scope: !11773)
!11787 = !DILocation(line: 1065, column: 59, scope: !11773)
!11788 = !DILocation(line: 1065, column: 22, scope: !11773)
!11789 = !DILocation(line: 1065, column: 36, scope: !11773)
!11790 = !DILocation(line: 1068, column: 55, scope: !11773)
!11791 = !DILocation(line: 1068, column: 60, scope: !11773)
!11792 = !DILocation(line: 1068, column: 22, scope: !11773)
!11793 = !DILocation(line: 1068, column: 37, scope: !11773)
!11794 = !DILocation(line: 1071, column: 56, scope: !11773)
!11795 = !DILocation(line: 1071, column: 79, scope: !11773)
!11796 = !DILocation(line: 1071, column: 22, scope: !11773)
!11797 = !DILocation(line: 1071, column: 37, scope: !11773)
!11798 = !DILocation(line: 1074, column: 34, scope: !11773)
!11799 = !DILocation(line: 1074, column: 38, scope: !11773)
!11800 = !DILocation(line: 1074, column: 14, scope: !11773)
!11801 = !DILocation(line: 1075, column: 1, scope: !11773)
!11802 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11074, file: !11074, line: 1082, type: !3094, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11803 = !DILocation(line: 1085, column: 6, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11802, file: !11074, line: 1085, column: 6)
!11805 = !DILocation(line: 1085, column: 6, scope: !11802)
!11806 = !DILocation(line: 1088, column: 5, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11804, file: !11074, line: 1086, column: 3)
!11808 = !DILocation(line: 1091, column: 5, scope: !11807)
!11809 = !DILocation(line: 1092, column: 3, scope: !11807)
!11810 = !DILocation(line: 1093, column: 1, scope: !11802)
!11811 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11074, file: !11074, line: 1099, type: !3094, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2034)
!11812 = !DILocation(line: 1104, column: 1, scope: !11811)
!11813 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11814, file: !11814, line: 257, type: !6514, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11815)
!11814 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11815 = !{!11816}
!11816 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11813, file: !11814, line: 257, type: !110)
!11817 = !DILocation(line: 0, scope: !11813)
!11818 = !DILocation(line: 260, column: 3, scope: !11813)
!11819 = !DILocation(line: 261, column: 1, scope: !11813)
!11820 = distinct !DISubprogram(name: "LL_InitTick", scope: !11821, file: !11821, line: 260, type: !9431, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11822)
!11821 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11822 = !{!11823, !11824}
!11823 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11820, file: !11821, line: 260, type: !110)
!11824 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11820, file: !11821, line: 260, type: !110)
!11825 = !DILocation(line: 0, scope: !11820)
!11826 = !DILocation(line: 263, column: 46, scope: !11820)
!11827 = !DILocation(line: 263, column: 55, scope: !11820)
!11828 = !DILocation(line: 263, column: 18, scope: !11820)
!11829 = !DILocation(line: 264, column: 18, scope: !11820)
!11830 = !DILocation(line: 265, column: 18, scope: !11820)
!11831 = !DILocation(line: 267, column: 1, scope: !11820)
!11832 = distinct !DISubprogram(name: "LL_mDelay", scope: !11814, file: !11814, line: 273, type: !6514, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11833)
!11833 = !{!11834, !11835}
!11834 = !DILocalVariable(name: "Delay", arg: 1, scope: !11832, file: !11814, line: 273, type: !110)
!11835 = !DILocalVariable(name: "tmp", scope: !11832, file: !11814, line: 275, type: !316)
!11836 = !DILocation(line: 0, scope: !11832)
!11837 = !DILocation(line: 275, column: 3, scope: !11832)
!11838 = !DILocation(line: 275, column: 18, scope: !11832)
!11839 = !DILocation(line: 275, column: 33, scope: !11832)
!11840 = !DILocation(line: 277, column: 10, scope: !11832)
!11841 = !DILocation(line: 280, column: 12, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11832, file: !11814, line: 280, column: 6)
!11843 = !DILocation(line: 285, column: 3, scope: !11832)
!11844 = !DILocation(line: 287, column: 18, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !11814, line: 287, column: 8)
!11846 = distinct !DILexicalBlock(scope: !11832, file: !11814, line: 286, column: 3)
!11847 = !DILocation(line: 292, column: 1, scope: !11832)
!11848 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11814, file: !11814, line: 323, type: !6514, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11849)
!11849 = !{!11850}
!11850 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11848, file: !11814, line: 323, type: !110)
!11851 = !DILocation(line: 0, scope: !11848)
!11852 = !DILocation(line: 326, column: 19, scope: !11848)
!11853 = !DILocation(line: 327, column: 1, scope: !11848)
!11854 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11814, file: !11814, line: 338, type: !11855, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11858)
!11855 = !DISubroutineType(types: !11856)
!11856 = !{!11857, !110}
!11857 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !831, line: 201, baseType: !830)
!11858 = !{!11859, !11860, !11861, !11862, !11863}
!11859 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11854, file: !11814, line: 338, type: !110)
!11860 = !DILocalVariable(name: "timeout", scope: !11854, file: !11814, line: 340, type: !110)
!11861 = !DILocalVariable(name: "getlatency", scope: !11854, file: !11814, line: 341, type: !110)
!11862 = !DILocalVariable(name: "latency", scope: !11854, file: !11814, line: 342, type: !110)
!11863 = !DILocalVariable(name: "status", scope: !11854, file: !11814, line: 343, type: !11857)
!11864 = !DILocation(line: 0, scope: !11854)
!11865 = !DILocation(line: 347, column: 21, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11854, file: !11814, line: 347, column: 6)
!11867 = !DILocation(line: 347, column: 6, scope: !11854)
!11868 = !DILocation(line: 353, column: 8, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !11814, line: 353, column: 8)
!11870 = distinct !DILexicalBlock(scope: !11866, file: !11814, line: 352, column: 3)
!11871 = !DILocation(line: 353, column: 40, scope: !11869)
!11872 = !DILocation(line: 353, column: 8, scope: !11870)
!11873 = !DILocation(line: 356, column: 26, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !11814, line: 356, column: 10)
!11875 = distinct !DILexicalBlock(scope: !11869, file: !11814, line: 354, column: 5)
!11876 = !DILocation(line: 356, column: 55, scope: !11874)
!11877 = !DILocation(line: 362, column: 55, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11875, file: !11814, line: 362, column: 10)
!11879 = !DILocation(line: 368, column: 55, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11875, file: !11814, line: 368, column: 10)
!11881 = !DILocation(line: 374, column: 26, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11875, file: !11814, line: 374, column: 10)
!11883 = !DILocation(line: 374, column: 55, scope: !11882)
!11884 = !DILocation(line: 380, column: 28, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !11814, line: 380, column: 12)
!11886 = distinct !DILexicalBlock(scope: !11882, file: !11814, line: 379, column: 7)
!11887 = !DILocation(line: 380, column: 57, scope: !11885)
!11888 = !DILocation(line: 387, column: 8, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11870, file: !11814, line: 387, column: 8)
!11890 = !DILocation(line: 387, column: 40, scope: !11889)
!11891 = !DILocation(line: 387, column: 8, scope: !11870)
!11892 = !DILocation(line: 396, column: 26, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !11814, line: 396, column: 10)
!11894 = distinct !DILexicalBlock(scope: !11889, file: !11814, line: 388, column: 5)
!11895 = !DILocation(line: 396, column: 55, scope: !11893)
!11896 = !DILocation(line: 402, column: 26, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11894, file: !11814, line: 402, column: 10)
!11898 = !DILocation(line: 402, column: 55, scope: !11897)
!11899 = !DILocation(line: 407, column: 26, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11894, file: !11814, line: 407, column: 10)
!11901 = !DILocation(line: 407, column: 55, scope: !11900)
!11902 = !DILocation(line: 413, column: 28, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !11814, line: 413, column: 12)
!11904 = distinct !DILexicalBlock(scope: !11900, file: !11814, line: 412, column: 7)
!11905 = !DILocation(line: 413, column: 57, scope: !11903)
!11906 = !DILocation(line: 0, scope: !11870)
!11907 = !DILocation(line: 444, column: 5, scope: !11870)
!11908 = !DILocation(line: 448, column: 5, scope: !11870)
!11909 = !DILocation(line: 451, column: 18, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11870, file: !11814, line: 449, column: 5)
!11911 = !DILocation(line: 452, column: 12, scope: !11910)
!11912 = !DILocation(line: 453, column: 26, scope: !11870)
!11913 = !DILocation(line: 453, column: 38, scope: !11870)
!11914 = !DILocation(line: 453, column: 5, scope: !11910)
!11915 = distinct !{!11915, !11908, !11916}
!11916 = !DILocation(line: 453, column: 54, scope: !11870)
!11917 = !DILocation(line: 0, scope: !11866)
!11918 = !DILocation(line: 464, column: 3, scope: !11854)
!11919 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11920, file: !11920, line: 519, type: !6504, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!11920 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11921 = !DILocation(line: 521, column: 21, scope: !11919)
!11922 = !DILocation(line: 521, column: 3, scope: !11919)
!11923 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6117, file: !6117, line: 1543, type: !6514, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11924)
!11924 = !{!11925}
!11925 = !DILocalVariable(name: "Latency", arg: 1, scope: !11923, file: !6117, line: 1543, type: !110)
!11926 = !DILocation(line: 0, scope: !11923)
!11927 = !DILocation(line: 1545, column: 3, scope: !11923)
!11928 = !DILocation(line: 1546, column: 1, scope: !11923)
!11929 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6117, file: !6117, line: 1569, type: !6504, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!11930 = !DILocation(line: 1571, column: 21, scope: !11929)
!11931 = !DILocation(line: 1571, column: 3, scope: !11929)
!11932 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11814, file: !11814, line: 483, type: !11933, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11949)
!11933 = !DISubroutineType(types: !11934)
!11934 = !{!11857, !11935, !11942}
!11935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11936, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11821, line: 114, baseType: !11937)
!11937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11821, line: 94, size: 96, elements: !11938)
!11938 = !{!11939, !11940, !11941}
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11937, file: !11821, line: 96, baseType: !110, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11937, file: !11821, line: 102, baseType: !110, size: 32, offset: 32)
!11941 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11937, file: !11821, line: 109, baseType: !110, size: 32, offset: 64)
!11942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11943, size: 32)
!11943 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11821, line: 139, baseType: !11944)
!11944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11821, line: 119, size: 96, elements: !11945)
!11945 = !{!11946, !11947, !11948}
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11944, file: !11821, line: 121, baseType: !110, size: 32)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11944, file: !11821, line: 127, baseType: !110, size: 32, offset: 32)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11944, file: !11821, line: 133, baseType: !110, size: 32, offset: 64)
!11949 = !{!11950, !11951, !11952, !11953}
!11950 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11932, file: !11814, line: 483, type: !11935)
!11951 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11932, file: !11814, line: 484, type: !11942)
!11952 = !DILocalVariable(name: "status", scope: !11932, file: !11814, line: 486, type: !11857)
!11953 = !DILocalVariable(name: "pllfreq", scope: !11932, file: !11814, line: 487, type: !110)
!11954 = !DILocation(line: 0, scope: !11932)
!11955 = !DILocation(line: 490, column: 6, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11932, file: !11814, line: 490, column: 6)
!11957 = !DILocation(line: 490, column: 25, scope: !11956)
!11958 = !DILocation(line: 490, column: 6, scope: !11932)
!11959 = !DILocation(line: 493, column: 15, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !11814, line: 491, column: 3)
!11961 = !DILocation(line: 496, column: 8, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11960, file: !11814, line: 496, column: 8)
!11963 = !DILocation(line: 496, column: 29, scope: !11962)
!11964 = !DILocation(line: 496, column: 8, scope: !11960)
!11965 = !DILocation(line: 498, column: 7, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11962, file: !11814, line: 497, column: 5)
!11967 = !DILocation(line: 499, column: 7, scope: !11966)
!11968 = !DILocation(line: 499, column: 14, scope: !11966)
!11969 = !DILocation(line: 499, column: 35, scope: !11966)
!11970 = distinct !{!11970, !11967, !11971}
!11971 = !DILocation(line: 502, column: 7, scope: !11966)
!11972 = !DILocation(line: 506, column: 76, scope: !11960)
!11973 = !DILocation(line: 506, column: 103, scope: !11960)
!11974 = !DILocation(line: 507, column: 54, scope: !11960)
!11975 = !DILocation(line: 506, column: 5, scope: !11960)
!11976 = !DILocation(line: 510, column: 14, scope: !11960)
!11977 = !DILocation(line: 511, column: 3, scope: !11960)
!11978 = !DILocation(line: 0, scope: !11956)
!11979 = !DILocation(line: 518, column: 3, scope: !11932)
!11980 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11814, file: !11814, line: 642, type: !11981, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11983)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!11857}
!11983 = !{!11984}
!11984 = !DILocalVariable(name: "status", scope: !11980, file: !11814, line: 644, type: !11857)
!11985 = !DILocation(line: 0, scope: !11980)
!11986 = !DILocation(line: 647, column: 6, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11980, file: !11814, line: 647, column: 6)
!11988 = !DILocation(line: 647, column: 27, scope: !11987)
!11989 = !DILocation(line: 663, column: 6, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11980, file: !11814, line: 663, column: 6)
!11991 = !DILocation(line: 663, column: 30, scope: !11990)
!11992 = !DILocation(line: 663, column: 6, scope: !11980)
!11993 = !DILocation(line: 669, column: 3, scope: !11980)
!11994 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11814, file: !11814, line: 611, type: !11995, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !11997)
!11995 = !DISubroutineType(types: !11996)
!11996 = !{!110, !110, !11935}
!11997 = !{!11998, !11999, !12000}
!11998 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11994, file: !11814, line: 611, type: !110)
!11999 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11994, file: !11814, line: 611, type: !11935)
!12000 = !DILocalVariable(name: "pllfreq", scope: !11994, file: !11814, line: 613, type: !110)
!12001 = !DILocation(line: 0, scope: !11994)
!12002 = !DILocation(line: 622, column: 56, scope: !11994)
!12003 = !DILocation(line: 622, column: 61, scope: !11994)
!12004 = !DILocation(line: 622, column: 32, scope: !11994)
!12005 = !DILocation(line: 626, column: 45, scope: !11994)
!12006 = !DILocation(line: 626, column: 50, scope: !11994)
!12007 = !DILocation(line: 626, column: 21, scope: !11994)
!12008 = !DILocation(line: 630, column: 47, scope: !11994)
!12009 = !DILocation(line: 630, column: 82, scope: !11994)
!12010 = !DILocation(line: 630, column: 21, scope: !11994)
!12011 = !DILocation(line: 633, column: 3, scope: !11994)
!12012 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8757, file: !8757, line: 3007, type: !6504, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12013 = !DILocation(line: 3009, column: 11, scope: !12012)
!12014 = !DILocation(line: 3009, column: 44, scope: !12012)
!12015 = !DILocation(line: 3009, column: 3, scope: !12012)
!12016 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8757, file: !8757, line: 2987, type: !3094, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12017 = !DILocation(line: 2989, column: 3, scope: !12016)
!12018 = !DILocation(line: 2990, column: 1, scope: !12016)
!12019 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8757, file: !8757, line: 4304, type: !8891, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12020)
!12020 = !{!12021, !12022, !12023, !12024}
!12021 = !DILocalVariable(name: "Source", arg: 1, scope: !12019, file: !8757, line: 4304, type: !110)
!12022 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12019, file: !8757, line: 4304, type: !110)
!12023 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12019, file: !8757, line: 4304, type: !110)
!12024 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12019, file: !8757, line: 4304, type: !110)
!12025 = !DILocation(line: 0, scope: !12019)
!12026 = !DILocation(line: 4306, column: 3, scope: !12019)
!12027 = !DILocation(line: 4308, column: 3, scope: !12019)
!12028 = !DILocation(line: 4312, column: 1, scope: !12019)
!12029 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11814, file: !11814, line: 681, type: !12030, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12032)
!12030 = !DISubroutineType(types: !12031)
!12031 = !{!11857, !110, !11942}
!12032 = !{!12033, !12034, !12035, !12036}
!12033 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12029, file: !11814, line: 681, type: !110)
!12034 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12029, file: !11814, line: 681, type: !11942)
!12035 = !DILocalVariable(name: "status", scope: !12029, file: !11814, line: 683, type: !11857)
!12036 = !DILocalVariable(name: "hclk_frequency", scope: !12029, file: !11814, line: 684, type: !110)
!12037 = !DILocation(line: 0, scope: !12029)
!12038 = !DILocation(line: 691, column: 20, scope: !12029)
!12039 = !DILocation(line: 694, column: 6, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12029, file: !11814, line: 694, column: 6)
!12041 = !DILocation(line: 694, column: 22, scope: !12040)
!12042 = !DILocation(line: 694, column: 6, scope: !12029)
!12043 = !DILocation(line: 697, column: 14, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !11814, line: 695, column: 3)
!12045 = !DILocation(line: 701, column: 13, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12029, file: !11814, line: 701, column: 6)
!12047 = !DILocation(line: 701, column: 6, scope: !12029)
!12048 = !DILocation(line: 704, column: 5, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12046, file: !11814, line: 702, column: 3)
!12050 = !DILocation(line: 705, column: 5, scope: !12049)
!12051 = !DILocation(line: 705, column: 12, scope: !12049)
!12052 = !DILocation(line: 705, column: 33, scope: !12049)
!12053 = distinct !{!12053, !12050, !12054}
!12054 = !DILocation(line: 708, column: 5, scope: !12049)
!12055 = !DILocation(line: 711, column: 49, scope: !12049)
!12056 = !DILocation(line: 711, column: 5, scope: !12049)
!12057 = !DILocation(line: 712, column: 5, scope: !12049)
!12058 = !DILocation(line: 713, column: 5, scope: !12049)
!12059 = !DILocation(line: 713, column: 12, scope: !12049)
!12060 = !DILocation(line: 713, column: 37, scope: !12049)
!12061 = distinct !{!12061, !12058, !12062}
!12062 = !DILocation(line: 716, column: 5, scope: !12049)
!12063 = !DILocation(line: 719, column: 50, scope: !12049)
!12064 = !DILocation(line: 719, column: 5, scope: !12049)
!12065 = !DILocation(line: 720, column: 50, scope: !12049)
!12066 = !DILocation(line: 720, column: 5, scope: !12049)
!12067 = !DILocation(line: 721, column: 3, scope: !12049)
!12068 = !DILocation(line: 724, column: 6, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12029, file: !11814, line: 724, column: 6)
!12070 = !DILocation(line: 724, column: 22, scope: !12069)
!12071 = !DILocation(line: 724, column: 6, scope: !12029)
!12072 = !DILocation(line: 727, column: 14, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12069, file: !11814, line: 725, column: 3)
!12074 = !DILocation(line: 728, column: 3, scope: !12073)
!12075 = !DILocation(line: 731, column: 13, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12029, file: !11814, line: 731, column: 6)
!12077 = !DILocation(line: 731, column: 6, scope: !12029)
!12078 = !DILocation(line: 733, column: 5, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12076, file: !11814, line: 732, column: 3)
!12080 = !DILocation(line: 734, column: 3, scope: !12079)
!12081 = !DILocation(line: 736, column: 3, scope: !12029)
!12082 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8757, file: !8757, line: 4184, type: !3094, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12083 = !DILocation(line: 4186, column: 3, scope: !12082)
!12084 = !DILocation(line: 4187, column: 1, scope: !12082)
!12085 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8757, file: !8757, line: 4205, type: !6504, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12086 = !DILocation(line: 4207, column: 11, scope: !12085)
!12087 = !DILocation(line: 4207, column: 44, scope: !12085)
!12088 = !DILocation(line: 4207, column: 3, scope: !12085)
!12089 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8757, file: !8757, line: 3224, type: !6514, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12090)
!12090 = !{!12091}
!12091 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12089, file: !8757, line: 3224, type: !110)
!12092 = !DILocation(line: 0, scope: !12089)
!12093 = !DILocation(line: 3226, column: 3, scope: !12089)
!12094 = !DILocation(line: 3227, column: 1, scope: !12089)
!12095 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8757, file: !8757, line: 3188, type: !6514, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12096)
!12096 = !{!12097}
!12097 = !DILocalVariable(name: "Source", arg: 1, scope: !12095, file: !8757, line: 3188, type: !110)
!12098 = !DILocation(line: 0, scope: !12095)
!12099 = !DILocation(line: 3190, column: 3, scope: !12095)
!12100 = !DILocation(line: 3191, column: 1, scope: !12095)
!12101 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8757, file: !8757, line: 3204, type: !6504, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12102 = !DILocation(line: 3206, column: 21, scope: !12101)
!12103 = !DILocation(line: 3206, column: 3, scope: !12101)
!12104 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8757, file: !8757, line: 3240, type: !6514, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12105)
!12105 = !{!12106}
!12106 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12104, file: !8757, line: 3240, type: !110)
!12107 = !DILocation(line: 0, scope: !12104)
!12108 = !DILocation(line: 3242, column: 3, scope: !12104)
!12109 = !DILocation(line: 3243, column: 1, scope: !12104)
!12110 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8757, file: !8757, line: 3256, type: !6514, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12111)
!12111 = !{!12112}
!12112 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12110, file: !8757, line: 3256, type: !110)
!12113 = !DILocation(line: 0, scope: !12110)
!12114 = !DILocation(line: 3258, column: 3, scope: !12110)
!12115 = !DILocation(line: 3259, column: 1, scope: !12110)
!12116 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8757, file: !8757, line: 5153, type: !6504, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12117 = !DILocation(line: 5155, column: 11, scope: !12116)
!12118 = !DILocation(line: 5155, column: 47, scope: !12116)
!12119 = !DILocation(line: 5155, column: 3, scope: !12116)
!12120 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11814, file: !11814, line: 540, type: !12121, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !12123)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!11857, !110, !110, !11935, !11942}
!12123 = !{!12124, !12125, !12126, !12127, !12128, !12129}
!12124 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12120, file: !11814, line: 540, type: !110)
!12125 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12120, file: !11814, line: 540, type: !110)
!12126 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12120, file: !11814, line: 541, type: !11935)
!12127 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12120, file: !11814, line: 541, type: !11942)
!12128 = !DILocalVariable(name: "status", scope: !12120, file: !11814, line: 543, type: !11857)
!12129 = !DILocalVariable(name: "pllfreq", scope: !12120, file: !11814, line: 544, type: !110)
!12130 = !DILocation(line: 0, scope: !12120)
!12131 = !DILocation(line: 551, column: 6, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12120, file: !11814, line: 551, column: 6)
!12133 = !DILocation(line: 551, column: 25, scope: !12132)
!12134 = !DILocation(line: 551, column: 6, scope: !12120)
!12135 = !DILocation(line: 554, column: 15, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12132, file: !11814, line: 552, column: 3)
!12137 = !DILocation(line: 557, column: 8, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12136, file: !11814, line: 557, column: 8)
!12139 = !DILocation(line: 557, column: 29, scope: !12138)
!12140 = !DILocation(line: 557, column: 8, scope: !12136)
!12141 = !DILocation(line: 560, column: 20, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !11814, line: 560, column: 10)
!12143 = distinct !DILexicalBlock(scope: !12138, file: !11814, line: 558, column: 5)
!12144 = !DILocation(line: 560, column: 10, scope: !12143)
!12145 = !DILocation(line: 562, column: 9, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12142, file: !11814, line: 561, column: 7)
!12147 = !DILocation(line: 563, column: 7, scope: !12146)
!12148 = !DILocation(line: 566, column: 9, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12142, file: !11814, line: 565, column: 7)
!12150 = !DILocation(line: 570, column: 7, scope: !12143)
!12151 = !DILocation(line: 571, column: 7, scope: !12143)
!12152 = !DILocation(line: 571, column: 14, scope: !12143)
!12153 = !DILocation(line: 571, column: 35, scope: !12143)
!12154 = distinct !{!12154, !12151, !12155}
!12155 = !DILocation(line: 574, column: 7, scope: !12143)
!12156 = !DILocation(line: 578, column: 76, scope: !12136)
!12157 = !DILocation(line: 578, column: 103, scope: !12136)
!12158 = !DILocation(line: 579, column: 54, scope: !12136)
!12159 = !DILocation(line: 578, column: 5, scope: !12136)
!12160 = !DILocation(line: 582, column: 14, scope: !12136)
!12161 = !DILocation(line: 583, column: 3, scope: !12136)
!12162 = !DILocation(line: 0, scope: !12132)
!12163 = !DILocation(line: 590, column: 3, scope: !12120)
!12164 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8757, file: !8757, line: 2969, type: !6504, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12165 = !DILocation(line: 2971, column: 11, scope: !12164)
!12166 = !DILocation(line: 2971, column: 44, scope: !12164)
!12167 = !DILocation(line: 2971, column: 3, scope: !12164)
!12168 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8757, file: !8757, line: 2929, type: !3094, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12169 = !DILocation(line: 2931, column: 3, scope: !12168)
!12170 = !DILocation(line: 2932, column: 1, scope: !12168)
!12171 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8757, file: !8757, line: 2939, type: !3094, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12172 = !DILocation(line: 2941, column: 3, scope: !12171)
!12173 = !DILocation(line: 2942, column: 1, scope: !12171)
!12174 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8757, file: !8757, line: 2949, type: !3094, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2991, retainedNodes: !2034)
!12175 = !DILocation(line: 2951, column: 3, scope: !12174)
!12176 = !DILocation(line: 2952, column: 1, scope: !12174)
!12177 = distinct !DISubprogram(name: "z_device_state_init", scope: !12178, file: !12178, line: 23, type: !3094, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12179)
!12178 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12179 = !{!12180}
!12180 = !DILocalVariable(name: "dev", scope: !12177, file: !12178, line: 25, type: !12181)
!12181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12182, size: 32)
!12182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12183)
!12183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12184)
!12184 = !{!12185, !12186, !12187, !12188, !12194, !12195}
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12183, file: !336, line: 380, baseType: !279, size: 32)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12183, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12183, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12183, file: !336, line: 386, baseType: !12189, size: 32, offset: 96)
!12189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12190, size: 32)
!12190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12191)
!12191 = !{!12192, !12193}
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12190, file: !336, line: 359, baseType: !180, size: 8)
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12190, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12183, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12183, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12196 = !DILocation(line: 0, scope: !12177)
!12197 = !DILocation(line: 31, column: 1, scope: !12177)
!12198 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12178, file: !12178, line: 33, type: !12199, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12201)
!12199 = !DISubroutineType(types: !12200)
!12200 = !{!12181, !279}
!12201 = !{!12202, !12203}
!12202 = !DILocalVariable(name: "name", arg: 1, scope: !12198, file: !12178, line: 33, type: !279)
!12203 = !DILocalVariable(name: "dev", scope: !12198, file: !12178, line: 35, type: !12181)
!12204 = !DILocation(line: 0, scope: !12198)
!12205 = !DILocation(line: 40, column: 12, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12198, file: !12178, line: 40, column: 6)
!12207 = !DILocation(line: 40, column: 21, scope: !12206)
!12208 = !DILocation(line: 40, column: 25, scope: !12206)
!12209 = !DILocation(line: 40, column: 33, scope: !12206)
!12210 = !DILocation(line: 40, column: 6, scope: !12198)
!12211 = !DILocation(line: 55, column: 2, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12198, file: !12178, line: 55, column: 2)
!12213 = !DILocation(line: 50, column: 7, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12215, file: !12178, line: 50, column: 7)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !12178, line: 49, column: 57)
!12216 = distinct !DILexicalBlock(scope: !12217, file: !12178, line: 49, column: 2)
!12217 = distinct !DILexicalBlock(scope: !12198, file: !12178, line: 49, column: 2)
!12218 = !DILocation(line: 50, column: 30, scope: !12214)
!12219 = !DILocation(line: 50, column: 39, scope: !12214)
!12220 = !DILocation(line: 50, column: 44, scope: !12214)
!12221 = !DILocation(line: 50, column: 7, scope: !12215)
!12222 = !DILocation(line: 49, column: 53, scope: !12216)
!12223 = !DILocation(line: 49, column: 33, scope: !12216)
!12224 = !DILocation(line: 49, column: 2, scope: !12217)
!12225 = distinct !{!12225, !12224, !12226}
!12226 = !DILocation(line: 53, column: 2, scope: !12217)
!12227 = !DILocation(line: 56, column: 7, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12229, file: !12178, line: 56, column: 7)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !12178, line: 55, column: 57)
!12230 = distinct !DILexicalBlock(scope: !12212, file: !12178, line: 55, column: 2)
!12231 = !DILocation(line: 56, column: 30, scope: !12228)
!12232 = !DILocation(line: 56, column: 52, scope: !12228)
!12233 = !DILocation(line: 56, column: 34, scope: !12228)
!12234 = !DILocation(line: 56, column: 58, scope: !12228)
!12235 = !DILocation(line: 56, column: 7, scope: !12229)
!12236 = !DILocation(line: 55, column: 53, scope: !12230)
!12237 = !DILocation(line: 55, column: 33, scope: !12230)
!12238 = distinct !{!12238, !12211, !12239}
!12239 = !DILocation(line: 59, column: 2, scope: !12212)
!12240 = !DILocation(line: 62, column: 1, scope: !12198)
!12241 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12178, file: !12178, line: 93, type: !12242, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12244)
!12242 = !DISubroutineType(types: !12243)
!12243 = !{!347, !12181}
!12244 = !{!12245}
!12245 = !DILocalVariable(name: "dev", arg: 1, scope: !12241, file: !12178, line: 93, type: !12181)
!12246 = !DILocation(line: 0, scope: !12241)
!12247 = !DILocation(line: 99, column: 10, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12241, file: !12178, line: 99, column: 6)
!12249 = !DILocation(line: 99, column: 6, scope: !12241)
!12250 = !DILocation(line: 103, column: 14, scope: !12241)
!12251 = !DILocation(line: 103, column: 21, scope: !12241)
!12252 = !DILocation(line: 103, column: 33, scope: !12241)
!12253 = !DILocation(line: 103, column: 49, scope: !12241)
!12254 = !DILocation(line: 103, column: 58, scope: !12241)
!12255 = !DILocation(line: 104, column: 1, scope: !12241)
!12256 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12178, file: !12178, line: 87, type: !12257, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12260)
!12257 = !DISubroutineType(types: !12258)
!12258 = !{!234, !12259}
!12259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12181, size: 32)
!12260 = !{!12261}
!12261 = !DILocalVariable(name: "devices", arg: 1, scope: !12256, file: !12178, line: 87, type: !12259)
!12262 = !DILocation(line: 0, scope: !12256)
!12263 = !DILocation(line: 89, column: 11, scope: !12256)
!12264 = !DILocation(line: 90, column: 2, scope: !12256)
!12265 = distinct !DISubprogram(name: "device_required_foreach", scope: !12178, file: !12178, line: 125, type: !12266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12272)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{!109, !12181, !12268, !107}
!12268 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12269)
!12269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12270, size: 32)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{!109, !12181, !107}
!12272 = !{!12273, !12274, !12275, !12276, !12277}
!12273 = !DILocalVariable(name: "dev", arg: 1, scope: !12265, file: !12178, line: 125, type: !12181)
!12274 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12265, file: !12178, line: 126, type: !12268)
!12275 = !DILocalVariable(name: "context", arg: 3, scope: !12265, file: !12178, line: 127, type: !107)
!12276 = !DILocalVariable(name: "handle_count", scope: !12265, file: !12178, line: 129, type: !234)
!12277 = !DILocalVariable(name: "handles", scope: !12265, file: !12178, line: 130, type: !350)
!12278 = !DILocation(line: 0, scope: !12265)
!12279 = !DILocation(line: 129, column: 2, scope: !12265)
!12280 = !DILocation(line: 129, column: 9, scope: !12265)
!12281 = !DILocation(line: 130, column: 35, scope: !12265)
!12282 = !DILocation(line: 132, column: 33, scope: !12265)
!12283 = !DILocation(line: 132, column: 9, scope: !12265)
!12284 = !DILocation(line: 133, column: 1, scope: !12265)
!12285 = !DILocation(line: 132, column: 2, scope: !12265)
!12286 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12287, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12289)
!12287 = !DISubroutineType(types: !12288)
!12288 = !{!350, !12181, !2550}
!12289 = !{!12290, !12291, !12292, !12293}
!12290 = !DILocalVariable(name: "dev", arg: 1, scope: !12286, file: !336, line: 493, type: !12181)
!12291 = !DILocalVariable(name: "count", arg: 2, scope: !12286, file: !336, line: 493, type: !2550)
!12292 = !DILocalVariable(name: "rv", scope: !12286, file: !336, line: 495, type: !350)
!12293 = !DILocalVariable(name: "i", scope: !12294, file: !336, line: 498, type: !234)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !336, line: 497, column: 18)
!12295 = distinct !DILexicalBlock(scope: !12286, file: !336, line: 497, column: 6)
!12296 = !DILocation(line: 0, scope: !12286)
!12297 = !DILocation(line: 495, column: 35, scope: !12286)
!12298 = !DILocation(line: 497, column: 9, scope: !12295)
!12299 = !DILocation(line: 497, column: 6, scope: !12286)
!12300 = !DILocation(line: 0, scope: !12294)
!12301 = !DILocation(line: 500, column: 11, scope: !12294)
!12302 = !DILocation(line: 500, column: 40, scope: !12294)
!12303 = !DILocation(line: 502, column: 4, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12294, file: !336, line: 501, column: 40)
!12305 = distinct !{!12305, !12306, !12307}
!12306 = !DILocation(line: 500, column: 3, scope: !12294)
!12307 = !DILocation(line: 503, column: 3, scope: !12294)
!12308 = !DILocation(line: 504, column: 10, scope: !12294)
!12309 = !DILocation(line: 505, column: 2, scope: !12294)
!12310 = !DILocation(line: 507, column: 2, scope: !12286)
!12311 = distinct !DISubprogram(name: "device_visitor", scope: !12178, file: !12178, line: 106, type: !12312, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12314)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{!109, !350, !234, !12268, !107}
!12314 = !{!12315, !12316, !12317, !12318, !12319, !12321, !12324, !12325}
!12315 = !DILocalVariable(name: "handles", arg: 1, scope: !12311, file: !12178, line: 106, type: !350)
!12316 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12311, file: !12178, line: 107, type: !234)
!12317 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12311, file: !12178, line: 108, type: !12268)
!12318 = !DILocalVariable(name: "context", arg: 4, scope: !12311, file: !12178, line: 109, type: !107)
!12319 = !DILocalVariable(name: "i", scope: !12320, file: !12178, line: 112, type: !234)
!12320 = distinct !DILexicalBlock(scope: !12311, file: !12178, line: 112, column: 2)
!12321 = !DILocalVariable(name: "dh", scope: !12322, file: !12178, line: 113, type: !352)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !12178, line: 112, column: 44)
!12323 = distinct !DILexicalBlock(scope: !12320, file: !12178, line: 112, column: 2)
!12324 = !DILocalVariable(name: "rdev", scope: !12322, file: !12178, line: 114, type: !12181)
!12325 = !DILocalVariable(name: "rc", scope: !12322, file: !12178, line: 115, type: !109)
!12326 = !DILocation(line: 0, scope: !12311)
!12327 = !DILocation(line: 0, scope: !12320)
!12328 = !DILocation(line: 112, column: 23, scope: !12323)
!12329 = !DILocation(line: 112, column: 2, scope: !12320)
!12330 = distinct !{!12330, !12329, !12331}
!12331 = !DILocation(line: 120, column: 2, scope: !12320)
!12332 = !DILocation(line: 113, column: 24, scope: !12322)
!12333 = !DILocation(line: 0, scope: !12322)
!12334 = !DILocation(line: 114, column: 31, scope: !12322)
!12335 = !DILocation(line: 115, column: 12, scope: !12322)
!12336 = !DILocation(line: 117, column: 10, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12322, file: !12178, line: 117, column: 7)
!12338 = !DILocation(line: 112, column: 39, scope: !12323)
!12339 = !DILocation(line: 123, column: 1, scope: !12311)
!12340 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12341, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12343)
!12341 = !DISubroutineType(types: !12342)
!12342 = !{!12181, !352}
!12343 = !{!12344, !12345, !12346}
!12344 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12340, file: !336, line: 439, type: !352)
!12345 = !DILocalVariable(name: "dev", scope: !12340, file: !336, line: 443, type: !12181)
!12346 = !DILocalVariable(name: "numdev", scope: !12340, file: !336, line: 444, type: !234)
!12347 = !DILocation(line: 0, scope: !12340)
!12348 = !DILocation(line: 446, column: 7, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12340, file: !336, line: 446, column: 6)
!12350 = !DILocation(line: 446, column: 18, scope: !12349)
!12351 = !DILocation(line: 446, column: 23, scope: !12349)
!12352 = !DILocation(line: 450, column: 2, scope: !12340)
!12353 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12178, file: !12178, line: 135, type: !12266, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12354)
!12354 = !{!12355, !12356, !12357, !12358, !12359}
!12355 = !DILocalVariable(name: "dev", arg: 1, scope: !12353, file: !12178, line: 135, type: !12181)
!12356 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12353, file: !12178, line: 136, type: !12268)
!12357 = !DILocalVariable(name: "context", arg: 3, scope: !12353, file: !12178, line: 137, type: !107)
!12358 = !DILocalVariable(name: "handle_count", scope: !12353, file: !12178, line: 139, type: !234)
!12359 = !DILocalVariable(name: "handles", scope: !12353, file: !12178, line: 140, type: !350)
!12360 = !DILocation(line: 0, scope: !12353)
!12361 = !DILocation(line: 139, column: 2, scope: !12353)
!12362 = !DILocation(line: 139, column: 9, scope: !12353)
!12363 = !DILocation(line: 140, column: 35, scope: !12353)
!12364 = !DILocation(line: 142, column: 33, scope: !12353)
!12365 = !DILocation(line: 142, column: 9, scope: !12353)
!12366 = !DILocation(line: 143, column: 1, scope: !12353)
!12367 = !DILocation(line: 142, column: 2, scope: !12353)
!12368 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12287, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3054, retainedNodes: !12369)
!12369 = !{!12370, !12371, !12372, !12373, !12374}
!12370 = !DILocalVariable(name: "dev", arg: 1, scope: !12368, file: !336, line: 573, type: !12181)
!12371 = !DILocalVariable(name: "count", arg: 2, scope: !12368, file: !336, line: 573, type: !2550)
!12372 = !DILocalVariable(name: "rv", scope: !12368, file: !336, line: 575, type: !350)
!12373 = !DILocalVariable(name: "region", scope: !12368, file: !336, line: 576, type: !234)
!12374 = !DILocalVariable(name: "i", scope: !12368, file: !336, line: 577, type: !234)
!12375 = !DILocation(line: 0, scope: !12368)
!12376 = !DILocation(line: 575, column: 35, scope: !12368)
!12377 = !DILocation(line: 579, column: 9, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12368, file: !336, line: 579, column: 6)
!12379 = !DILocation(line: 579, column: 6, scope: !12368)
!12380 = !DILocation(line: 582, column: 8, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12382, file: !336, line: 582, column: 8)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !336, line: 581, column: 23)
!12383 = distinct !DILexicalBlock(scope: !12378, file: !336, line: 579, column: 18)
!12384 = !DILocation(line: 582, column: 12, scope: !12381)
!12385 = !DILocation(line: 585, column: 6, scope: !12382)
!12386 = !DILocation(line: 0, scope: !12383)
!12387 = !DILocation(line: 581, column: 17, scope: !12383)
!12388 = !DILocation(line: 581, column: 3, scope: !12383)
!12389 = !DILocation(line: 588, column: 10, scope: !12383)
!12390 = !DILocation(line: 588, column: 16, scope: !12383)
!12391 = !DILocation(line: 589, column: 4, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12383, file: !336, line: 588, column: 39)
!12393 = !DILocation(line: 588, column: 3, scope: !12383)
!12394 = distinct !{!12394, !12393, !12395}
!12395 = !DILocation(line: 590, column: 3, scope: !12383)
!12396 = !DILocation(line: 591, column: 10, scope: !12383)
!12397 = !DILocation(line: 592, column: 2, scope: !12383)
!12398 = !DILocation(line: 575, column: 25, scope: !12368)
!12399 = !DILocation(line: 594, column: 2, scope: !12368)
!12400 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1825, file: !1825, line: 49, type: !12401, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1822, retainedNodes: !2034)
!12401 = !DISubroutineType(types: !12402)
!12402 = !{!281}
!12403 = !DILocation(line: 51, column: 10, scope: !12400)
!12404 = !DILocation(line: 51, column: 20, scope: !12400)
!12405 = !DILocation(line: 51, column: 2, scope: !12400)
!12406 = distinct !DISubprogram(name: "coredump", scope: !3061, file: !3061, line: 209, type: !12407, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12556)
!12407 = !DISubroutineType(types: !12408)
!12408 = !{null, !32, !12409, !12453}
!12409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12410, size: 32)
!12410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12411)
!12411 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2680, line: 141, baseType: !12412)
!12412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2680, line: 97, size: 256, elements: !12413)
!12413 = !{!12414}
!12414 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12412, file: !2680, line: 107, baseType: !12415, size: 256)
!12415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2680, line: 98, size: 256, elements: !12416)
!12416 = !{!12417, !12422, !12427, !12432, !12437, !12442, !12447, !12452}
!12417 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 99, baseType: !12418, size: 32)
!12418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 99, size: 32, elements: !12419)
!12419 = !{!12420, !12421}
!12420 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12418, file: !2680, line: 99, baseType: !110, size: 32)
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12418, file: !2680, line: 99, baseType: !110, size: 32)
!12422 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 100, baseType: !12423, size: 32, offset: 32)
!12423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 100, size: 32, elements: !12424)
!12424 = !{!12425, !12426}
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12423, file: !2680, line: 100, baseType: !110, size: 32)
!12426 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12423, file: !2680, line: 100, baseType: !110, size: 32)
!12427 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 101, baseType: !12428, size: 32, offset: 64)
!12428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 101, size: 32, elements: !12429)
!12429 = !{!12430, !12431}
!12430 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12428, file: !2680, line: 101, baseType: !110, size: 32)
!12431 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12428, file: !2680, line: 101, baseType: !110, size: 32)
!12432 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 102, baseType: !12433, size: 32, offset: 96)
!12433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 102, size: 32, elements: !12434)
!12434 = !{!12435, !12436}
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12433, file: !2680, line: 102, baseType: !110, size: 32)
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12433, file: !2680, line: 102, baseType: !110, size: 32)
!12437 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 103, baseType: !12438, size: 32, offset: 128)
!12438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 103, size: 32, elements: !12439)
!12439 = !{!12440, !12441}
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12438, file: !2680, line: 103, baseType: !110, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12438, file: !2680, line: 103, baseType: !110, size: 32)
!12442 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 104, baseType: !12443, size: 32, offset: 160)
!12443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 104, size: 32, elements: !12444)
!12444 = !{!12445, !12446}
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12443, file: !2680, line: 104, baseType: !110, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12443, file: !2680, line: 104, baseType: !110, size: 32)
!12447 = !DIDerivedType(tag: DW_TAG_member, scope: !12415, file: !2680, line: 105, baseType: !12448, size: 32, offset: 192)
!12448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12415, file: !2680, line: 105, size: 32, elements: !12449)
!12449 = !{!12450, !12451}
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12448, file: !2680, line: 105, baseType: !110, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12448, file: !2680, line: 105, baseType: !110, size: 32)
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12415, file: !2680, line: 106, baseType: !110, size: 32, offset: 224)
!12453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12454, size: 32)
!12454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !12455)
!12455 = !{!12456, !12514, !12526, !12527, !12528, !12529, !12530, !12536, !12551}
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12454, file: !158, line: 247, baseType: !12457, size: 384)
!12457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !12458)
!12458 = !{!12459, !12483, !12490, !12491, !12492, !12501, !12502, !12503}
!12459 = !DIDerivedType(tag: DW_TAG_member, scope: !12457, file: !158, line: 60, baseType: !12460, size: 64)
!12460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12457, file: !158, line: 60, size: 64, elements: !12461)
!12461 = !{!12462, !12477}
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12460, file: !158, line: 61, baseType: !12463, size: 64)
!12463 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12464)
!12464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12465)
!12465 = !{!12466, !12472}
!12466 = !DIDerivedType(tag: DW_TAG_member, scope: !12464, file: !127, line: 38, baseType: !12467, size: 32)
!12467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12464, file: !127, line: 38, size: 32, elements: !12468)
!12468 = !{!12469, !12471}
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12467, file: !127, line: 39, baseType: !12470, size: 32)
!12470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12464, size: 32)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12467, file: !127, line: 40, baseType: !12470, size: 32)
!12472 = !DIDerivedType(tag: DW_TAG_member, scope: !12464, file: !127, line: 42, baseType: !12473, size: 32, offset: 32)
!12473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12464, file: !127, line: 42, size: 32, elements: !12474)
!12474 = !{!12475, !12476}
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12473, file: !127, line: 43, baseType: !12470, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12473, file: !127, line: 44, baseType: !12470, size: 32)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12460, file: !158, line: 62, baseType: !12478, size: 64)
!12478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !12479)
!12479 = !{!12480}
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12478, file: !170, line: 50, baseType: !12481, size: 64)
!12481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12482, size: 64, elements: !175)
!12482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12478, size: 32)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12457, file: !158, line: 68, baseType: !12484, size: 32, offset: 64)
!12484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12485, size: 32)
!12485 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12486)
!12486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12487)
!12487 = !{!12488}
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12486, file: !122, line: 232, baseType: !12489, size: 64)
!12489 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12464)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12457, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12457, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!12492 = !DIDerivedType(tag: DW_TAG_member, scope: !12457, file: !158, line: 90, baseType: !12493, size: 16, offset: 112)
!12493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12457, file: !158, line: 90, size: 16, elements: !12494)
!12494 = !{!12495, !12500}
!12495 = !DIDerivedType(tag: DW_TAG_member, scope: !12493, file: !158, line: 91, baseType: !12496, size: 16)
!12496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12493, file: !158, line: 91, size: 16, elements: !12497)
!12497 = !{!12498, !12499}
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12496, file: !158, line: 96, baseType: !190, size: 8)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12496, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12493, file: !158, line: 100, baseType: !194, size: 16)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12457, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12457, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12457, file: !158, line: 131, baseType: !12504, size: 192, offset: 192)
!12504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12505)
!12505 = !{!12506, !12507, !12513}
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12504, file: !122, line: 245, baseType: !12463, size: 64)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12504, file: !122, line: 246, baseType: !12508, size: 32, offset: 64)
!12508 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12509)
!12509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12510, size: 32)
!12510 = !DISubroutineType(types: !12511)
!12511 = !{null, !12512}
!12512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12504, size: 32)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12504, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12454, file: !158, line: 250, baseType: !12515, size: 288, offset: 384)
!12515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !12516)
!12516 = !{!12517, !12518, !12519, !12520, !12521, !12522, !12523, !12524, !12525}
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12515, file: !211, line: 26, baseType: !110, size: 32)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12515, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12515, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12515, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12515, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12515, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12515, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12515, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12515, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12454, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12454, file: !158, line: 256, baseType: !12485, size: 64, offset: 704)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12454, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12454, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12454, file: !158, line: 300, baseType: !12531, size: 96, offset: 1056)
!12531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !12532)
!12532 = !{!12533, !12534, !12535}
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12531, file: !158, line: 153, baseType: !22, size: 32)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12531, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12531, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12454, file: !158, line: 325, baseType: !12537, size: 32, offset: 1152)
!12537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12538, size: 32)
!12538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12539)
!12539 = !{!12540, !12546, !12547}
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12538, file: !118, line: 5074, baseType: !12541, size: 96)
!12541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !12542)
!12542 = !{!12543, !12544, !12545}
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12541, file: !243, line: 57, baseType: !246, size: 32)
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12541, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12541, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12538, file: !118, line: 5075, baseType: !12485, size: 64, offset: 96)
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12538, file: !118, line: 5076, baseType: !12548, size: 32, offset: 160)
!12548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !12549)
!12549 = !{!12550}
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12548, file: !253, line: 52, baseType: !22, size: 32)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12454, file: !158, line: 343, baseType: !12552, size: 64, offset: 1184)
!12552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !12553)
!12553 = !{!12554, !12555}
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12552, file: !211, line: 63, baseType: !110, size: 32)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12552, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!12556 = !{!12557, !12558, !12559}
!12557 = !DILocalVariable(name: "reason", arg: 1, scope: !12406, file: !3061, line: 209, type: !32)
!12558 = !DILocalVariable(name: "esf", arg: 2, scope: !12406, file: !3061, line: 209, type: !12409)
!12559 = !DILocalVariable(name: "thread", arg: 3, scope: !12406, file: !3061, line: 210, type: !12453)
!12560 = !DILocation(line: 0, scope: !12406)
!12561 = !DILocation(line: 212, column: 1, scope: !12406)
!12562 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3061, file: !3061, line: 214, type: !12563, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12565)
!12563 = !DISubroutineType(types: !12564)
!12564 = !{null, !22, !22}
!12565 = !{!12566, !12567}
!12566 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12562, file: !3061, line: 214, type: !22)
!12567 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12562, file: !3061, line: 214, type: !22)
!12568 = !DILocation(line: 0, scope: !12562)
!12569 = !DILocation(line: 216, column: 1, scope: !12562)
!12570 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3061, file: !3061, line: 218, type: !12571, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12573)
!12571 = !DISubroutineType(types: !12572)
!12572 = !{null, !286, !234}
!12573 = !{!12574, !12575}
!12574 = !DILocalVariable(name: "buf", arg: 1, scope: !12570, file: !3061, line: 218, type: !286)
!12575 = !DILocalVariable(name: "buflen", arg: 2, scope: !12570, file: !3061, line: 218, type: !234)
!12576 = !DILocation(line: 0, scope: !12570)
!12577 = !DILocation(line: 220, column: 1, scope: !12570)
!12578 = distinct !DISubprogram(name: "coredump_query", scope: !3061, file: !3061, line: 222, type: !12579, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12581)
!12579 = !DISubroutineType(types: !12580)
!12580 = !{!109, !3060, !107}
!12581 = !{!12582, !12583}
!12582 = !DILocalVariable(name: "query_id", arg: 1, scope: !12578, file: !3061, line: 222, type: !3060)
!12583 = !DILocalVariable(name: "arg", arg: 2, scope: !12578, file: !3061, line: 222, type: !107)
!12584 = !DILocation(line: 0, scope: !12578)
!12585 = !DILocation(line: 224, column: 2, scope: !12578)
!12586 = distinct !DISubprogram(name: "coredump_cmd", scope: !3061, file: !3061, line: 227, type: !12587, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12589)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{!109, !3067, !107}
!12589 = !{!12590, !12591}
!12590 = !DILocalVariable(name: "query_id", arg: 1, scope: !12586, file: !3061, line: 227, type: !3067)
!12591 = !DILocalVariable(name: "arg", arg: 2, scope: !12586, file: !3061, line: 227, type: !107)
!12592 = !DILocation(line: 0, scope: !12586)
!12593 = !DILocation(line: 229, column: 2, scope: !12586)
!12594 = distinct !DISubprogram(name: "arch_system_halt", scope: !12595, file: !12595, line: 23, type: !6107, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12596)
!12595 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12596 = !{!12597}
!12597 = !DILocalVariable(name: "reason", arg: 1, scope: !12594, file: !12595, line: 23, type: !32)
!12598 = !DILocation(line: 0, scope: !12594)
!12599 = !DILocation(line: 55, column: 2, scope: !12600, inlinedAt: !12604)
!12600 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12601)
!12601 = !{!12602, !12603}
!12602 = !DILocalVariable(name: "key", scope: !12600, file: !6096, line: 44, type: !32)
!12603 = !DILocalVariable(name: "tmp", scope: !12600, file: !6096, line: 53, type: !32)
!12604 = distinct !DILocation(line: 31, column: 8, scope: !12594)
!12605 = !{i64 2227828}
!12606 = !DILocation(line: 0, scope: !12600, inlinedAt: !12604)
!12607 = !DILocation(line: 32, column: 2, scope: !12594)
!12608 = !DILocation(line: 32, column: 2, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !12595, line: 32, column: 2)
!12610 = distinct !DILexicalBlock(scope: !12594, file: !12595, line: 32, column: 2)
!12611 = distinct !{!12611, !12612, !12613}
!12612 = !DILocation(line: 32, column: 2, scope: !12610)
!12613 = !DILocation(line: 34, column: 2, scope: !12610)
!12614 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12595, file: !12595, line: 39, type: !12615, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12617)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{null, !32, !12409}
!12617 = !{!12618, !12619}
!12618 = !DILocalVariable(name: "reason", arg: 1, scope: !12614, file: !12595, line: 39, type: !32)
!12619 = !DILocalVariable(name: "esf", arg: 2, scope: !12614, file: !12595, line: 40, type: !12409)
!12620 = !DILocation(line: 0, scope: !12614)
!12621 = !DILocation(line: 45, column: 2, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !12595, line: 45, column: 2)
!12623 = distinct !DILexicalBlock(scope: !12624, file: !12595, line: 45, column: 2)
!12624 = distinct !DILexicalBlock(scope: !12625, file: !12595, line: 45, column: 2)
!12625 = distinct !DILexicalBlock(scope: !12614, file: !12595, line: 45, column: 2)
!12626 = !DILocation(line: 46, column: 2, scope: !12614)
!12627 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12595, file: !12595, line: 81, type: !6107, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12628)
!12628 = !{!12629}
!12629 = !DILocalVariable(name: "reason", arg: 1, scope: !12627, file: !12595, line: 81, type: !32)
!12630 = !DILocation(line: 0, scope: !12627)
!12631 = !DILocation(line: 83, column: 2, scope: !12627)
!12632 = distinct !DISubprogram(name: "z_fatal_error", scope: !12595, file: !12595, line: 96, type: !12615, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12633)
!12633 = !{!12634, !12635, !12636, !12637}
!12634 = !DILocalVariable(name: "reason", arg: 1, scope: !12632, file: !12595, line: 96, type: !32)
!12635 = !DILocalVariable(name: "esf", arg: 2, scope: !12632, file: !12595, line: 96, type: !12409)
!12636 = !DILocalVariable(name: "key", scope: !12632, file: !12595, line: 102, type: !32)
!12637 = !DILocalVariable(name: "thread", scope: !12632, file: !12595, line: 103, type: !12453)
!12638 = !DILocation(line: 0, scope: !12632)
!12639 = !DILocation(line: 55, column: 2, scope: !12600, inlinedAt: !12640)
!12640 = distinct !DILocation(line: 102, column: 21, scope: !12632)
!12641 = !DILocation(line: 0, scope: !12600, inlinedAt: !12640)
!12642 = !DILocation(line: 104, column: 4, scope: !12632)
!12643 = !DILocation(line: 109, column: 2, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12645, file: !12595, line: 109, column: 2)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12595, line: 109, column: 2)
!12646 = distinct !DILexicalBlock(scope: !12647, file: !12595, line: 109, column: 2)
!12647 = distinct !DILexicalBlock(scope: !12632, file: !12595, line: 109, column: 2)
!12648 = !DILocation(line: 119, column: 11, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12632, file: !12595, line: 119, column: 6)
!12650 = !DILocation(line: 119, column: 20, scope: !12649)
!12651 = !DILocalVariable(name: "esf", arg: 1, scope: !12652, file: !7469, line: 71, type: !12409)
!12652 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7469, file: !7469, line: 71, type: !12653, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12655)
!12653 = !DISubroutineType(types: !12654)
!12654 = !{!347, !12409}
!12655 = !{!12651}
!12656 = !DILocation(line: 0, scope: !12652, inlinedAt: !12657)
!12657 = distinct !DILocation(line: 119, column: 23, scope: !12649)
!12658 = !DILocation(line: 73, column: 21, scope: !12652, inlinedAt: !12657)
!12659 = !DILocation(line: 73, column: 26, scope: !12652, inlinedAt: !12657)
!12660 = !DILocation(line: 73, column: 9, scope: !12652, inlinedAt: !12657)
!12661 = !DILocation(line: 119, column: 6, scope: !12632)
!12662 = !DILocation(line: 120, column: 3, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !12595, line: 120, column: 3)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12595, line: 120, column: 3)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !12595, line: 120, column: 3)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !12595, line: 120, column: 3)
!12667 = distinct !DILexicalBlock(scope: !12649, file: !12595, line: 119, column: 57)
!12668 = !DILocation(line: 121, column: 2, scope: !12667)
!12669 = !DILocation(line: 124, column: 2, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12595, line: 124, column: 2)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !12595, line: 124, column: 2)
!12672 = distinct !DILexicalBlock(scope: !12673, file: !12595, line: 124, column: 2)
!12673 = distinct !DILexicalBlock(scope: !12632, file: !12595, line: 124, column: 2)
!12674 = !DILocation(line: 131, column: 2, scope: !12632)
!12675 = !DILocation(line: 0, scope: !12652, inlinedAt: !12676)
!12676 = distinct !DILocation(line: 163, column: 24, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !12595, line: 163, column: 7)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !12595, line: 160, column: 9)
!12679 = distinct !DILexicalBlock(scope: !12632, file: !12595, line: 146, column: 6)
!12680 = !DILocation(line: 73, column: 21, scope: !12652, inlinedAt: !12676)
!12681 = !DILocation(line: 73, column: 26, scope: !12652, inlinedAt: !12676)
!12682 = !DILocation(line: 73, column: 9, scope: !12652, inlinedAt: !12676)
!12683 = !DILocation(line: 163, column: 7, scope: !12678)
!12684 = !DILocalVariable(name: "key", arg: 1, scope: !12685, file: !6096, line: 84, type: !32)
!12685 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12686)
!12686 = !{!12684}
!12687 = !DILocation(line: 0, scope: !12685, inlinedAt: !12688)
!12688 = distinct !DILocation(line: 171, column: 4, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12677, file: !12595, line: 163, column: 58)
!12690 = !DILocation(line: 95, column: 2, scope: !12685, inlinedAt: !12688)
!12691 = !{i64 2228645}
!12692 = !DILocation(line: 172, column: 4, scope: !12689)
!12693 = !DILocation(line: 163, column: 21, scope: !12677)
!12694 = !DILocation(line: 178, column: 15, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !12595, line: 178, column: 8)
!12696 = distinct !DILexicalBlock(scope: !12677, file: !12595, line: 174, column: 10)
!12697 = !DILocation(line: 0, scope: !12685, inlinedAt: !12698)
!12698 = distinct !DILocation(line: 179, column: 5, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12695, file: !12595, line: 178, column: 38)
!12700 = !DILocation(line: 0, scope: !12685, inlinedAt: !12701)
!12701 = distinct !DILocation(line: 186, column: 2, scope: !12632)
!12702 = !DILocation(line: 178, column: 8, scope: !12696)
!12703 = !DILocation(line: 189, column: 3, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !12595, line: 188, column: 41)
!12705 = distinct !DILexicalBlock(scope: !12632, file: !12595, line: 188, column: 6)
!12706 = !DILocation(line: 191, column: 1, scope: !12632)
!12707 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12708, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !2034)
!12708 = !DISubroutineType(types: !12709)
!12709 = !{!12710}
!12710 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !12453)
!12711 = !DILocation(line: 535, column: 9, scope: !12707)
!12712 = !DILocation(line: 535, column: 2, scope: !12707)
!12713 = distinct !DISubprogram(name: "reason_to_str", scope: !12595, file: !12595, line: 62, type: !12714, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12716)
!12714 = !DISubroutineType(types: !12715)
!12715 = !{!279, !32}
!12716 = !{!12717}
!12717 = !DILocalVariable(name: "reason", arg: 1, scope: !12713, file: !12595, line: 62, type: !32)
!12718 = !DILocation(line: 0, scope: !12713)
!12719 = !DILocation(line: 64, column: 2, scope: !12713)
!12720 = !DILocation(line: 0, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12713, file: !12595, line: 64, column: 18)
!12722 = !DILocation(line: 78, column: 1, scope: !12713)
!12723 = distinct !DISubprogram(name: "thread_name_get", scope: !12595, file: !12595, line: 51, type: !12724, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12726)
!12724 = !DISubroutineType(types: !12725)
!12725 = !{!279, !12453}
!12726 = !{!12727, !12728}
!12727 = !DILocalVariable(name: "thread", arg: 1, scope: !12723, file: !12595, line: 51, type: !12453)
!12728 = !DILocalVariable(name: "thread_name", scope: !12723, file: !12595, line: 53, type: !279)
!12729 = !DILocation(line: 0, scope: !12723)
!12730 = !DILocation(line: 53, column: 36, scope: !12723)
!12731 = !DILocation(line: 53, column: 28, scope: !12723)
!12732 = !DILocation(line: 53, column: 47, scope: !12723)
!12733 = !DILocation(line: 55, column: 19, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12723, file: !12595, line: 55, column: 6)
!12735 = !DILocation(line: 55, column: 28, scope: !12734)
!12736 = !DILocation(line: 55, column: 32, scope: !12734)
!12737 = !DILocation(line: 55, column: 47, scope: !12734)
!12738 = !DILocation(line: 55, column: 6, scope: !12723)
!12739 = !DILocation(line: 57, column: 2, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12734, file: !12595, line: 55, column: 57)
!12741 = !DILocation(line: 59, column: 2, scope: !12723)
!12742 = distinct !DISubprogram(name: "k_thread_abort", scope: !3240, file: !3240, line: 188, type: !12743, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12745)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{null, !12710}
!12745 = !{!12746}
!12746 = !DILocalVariable(name: "thread", arg: 1, scope: !12742, file: !3240, line: 188, type: !12710)
!12747 = !DILocation(line: 0, scope: !12742)
!12748 = !DILocation(line: 197, column: 2, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12742, file: !3240, line: 197, column: 2)
!12750 = !{i64 2154850183}
!12751 = !DILocation(line: 198, column: 2, scope: !12742)
!12752 = !DILocation(line: 199, column: 1, scope: !12742)
!12753 = distinct !DISubprogram(name: "z_current_get", scope: !3240, file: !3240, line: 173, type: !12708, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !2034)
!12754 = !DILocation(line: 180, column: 2, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12753, file: !3240, line: 180, column: 2)
!12756 = !{i64 2154850115}
!12757 = !DILocation(line: 181, column: 9, scope: !12753)
!12758 = !DILocation(line: 181, column: 2, scope: !12753)
!12759 = distinct !DISubprogram(name: "z_early_memset", scope: !1833, file: !1833, line: 108, type: !12760, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12762)
!12760 = !DISubroutineType(types: !12761)
!12761 = !{null, !107, !109, !234}
!12762 = !{!12763, !12764, !12765}
!12763 = !DILocalVariable(name: "dst", arg: 1, scope: !12759, file: !1833, line: 108, type: !107)
!12764 = !DILocalVariable(name: "c", arg: 2, scope: !12759, file: !1833, line: 108, type: !109)
!12765 = !DILocalVariable(name: "n", arg: 3, scope: !12759, file: !1833, line: 108, type: !234)
!12766 = !DILocation(line: 0, scope: !12759)
!12767 = !DILocation(line: 110, column: 9, scope: !12759)
!12768 = !DILocation(line: 111, column: 1, scope: !12759)
!12769 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1833, file: !1833, line: 121, type: !12770, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12772)
!12770 = !DISubroutineType(types: !12771)
!12771 = !{null, !107, !13, !234}
!12772 = !{!12773, !12774, !12775}
!12773 = !DILocalVariable(name: "dst", arg: 1, scope: !12769, file: !1833, line: 121, type: !107)
!12774 = !DILocalVariable(name: "src", arg: 2, scope: !12769, file: !1833, line: 121, type: !13)
!12775 = !DILocalVariable(name: "n", arg: 3, scope: !12769, file: !1833, line: 121, type: !234)
!12776 = !DILocation(line: 0, scope: !12769)
!12777 = !DILocation(line: 123, column: 9, scope: !12769)
!12778 = !DILocation(line: 124, column: 1, scope: !12769)
!12779 = distinct !DISubprogram(name: "z_bss_zero", scope: !1833, file: !1833, line: 132, type: !3094, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2034)
!12780 = !DILocation(line: 143, column: 2, scope: !12779)
!12781 = !DILocation(line: 145, column: 2, scope: !12779)
!12782 = !DILocation(line: 168, column: 1, scope: !12779)
!12783 = distinct !DISubprogram(name: "z_init_cpu", scope: !1833, file: !1833, line: 372, type: !8357, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12784)
!12784 = !{!12785}
!12785 = !DILocalVariable(name: "id", arg: 1, scope: !12783, file: !1833, line: 372, type: !109)
!12786 = !DILocation(line: 0, scope: !12783)
!12787 = !DILocation(line: 374, column: 2, scope: !12783)
!12788 = !DILocation(line: 375, column: 34, scope: !12783)
!12789 = !DILocation(line: 375, column: 19, scope: !12783)
!12790 = !DILocation(line: 375, column: 31, scope: !12783)
!12791 = !DILocation(line: 376, column: 24, scope: !12783)
!12792 = !DILocation(line: 376, column: 19, scope: !12783)
!12793 = !DILocation(line: 376, column: 22, scope: !12783)
!12794 = !DILocation(line: 378, column: 26, scope: !12783)
!12795 = !DILocation(line: 378, column: 4, scope: !12783)
!12796 = !DILocation(line: 378, column: 50, scope: !12783)
!12797 = !DILocation(line: 377, column: 19, scope: !12783)
!12798 = !DILocation(line: 377, column: 29, scope: !12783)
!12799 = !DILocation(line: 384, column: 1, scope: !12783)
!12800 = distinct !DISubprogram(name: "init_idle_thread", scope: !1833, file: !1833, line: 343, type: !8357, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12801)
!12801 = !{!12802, !12803, !12804, !12807}
!12802 = !DILocalVariable(name: "i", arg: 1, scope: !12800, file: !1833, line: 343, type: !109)
!12803 = !DILocalVariable(name: "thread", scope: !12800, file: !1833, line: 345, type: !1925)
!12804 = !DILocalVariable(name: "stack", scope: !12800, file: !1833, line: 346, type: !12805)
!12805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12806, size: 32)
!12806 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3360, line: 44, baseType: !2043)
!12807 = !DILocalVariable(name: "tname", scope: !12800, file: !1833, line: 354, type: !285)
!12808 = !DILocation(line: 0, scope: !12800)
!12809 = !DILocation(line: 345, column: 29, scope: !12800)
!12810 = !DILocation(line: 346, column: 28, scope: !12800)
!12811 = !DILocation(line: 362, column: 37, scope: !12800)
!12812 = !DILocation(line: 362, column: 36, scope: !12800)
!12813 = !DILocation(line: 361, column: 2, scope: !12800)
!12814 = !DILocation(line: 365, column: 2, scope: !12800)
!12815 = !DILocation(line: 370, column: 1, scope: !12800)
!12816 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !12817, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12819)
!12817 = !DISubroutineType(types: !12818)
!12818 = !{!285, !12805}
!12819 = !{!12820}
!12820 = !DILocalVariable(name: "sym", arg: 1, scope: !12816, file: !147, line: 331, type: !12805)
!12821 = !DILocation(line: 0, scope: !12816)
!12822 = !DILocation(line: 333, column: 21, scope: !12816)
!12823 = !DILocation(line: 333, column: 2, scope: !12816)
!12824 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12825, file: !12825, line: 155, type: !12826, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12828)
!12825 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12826 = !DISubroutineType(types: !12827)
!12827 = !{null, !1925}
!12828 = !{!12829}
!12829 = !DILocalVariable(name: "thread", arg: 1, scope: !12824, file: !12825, line: 155, type: !1925)
!12830 = !DILocation(line: 0, scope: !12824)
!12831 = !DILocation(line: 157, column: 15, scope: !12824)
!12832 = !DILocation(line: 157, column: 28, scope: !12824)
!12833 = !DILocation(line: 158, column: 1, scope: !12824)
!12834 = distinct !DISubprogram(name: "z_cstart", scope: !1833, file: !1833, line: 501, type: !3094, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12835)
!12835 = !{!12836}
!12836 = !DILocalVariable(name: "dummy_thread", scope: !12834, file: !1833, line: 518, type: !1926)
!12837 = !DILocation(line: 507, column: 2, scope: !12834)
!12838 = !DILocation(line: 43, column: 14, scope: !12839, inlinedAt: !12843)
!12839 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12840, file: !12840, line: 40, type: !3094, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12841)
!12840 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12841 = !{!12842}
!12842 = !DILocalVariable(name: "msp", scope: !12839, file: !12840, line: 42, type: !110)
!12843 = distinct !DILocation(line: 44, column: 2, scope: !12844, inlinedAt: !12846)
!12844 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12845, file: !12845, line: 42, type: !3094, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2034)
!12845 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12846 = distinct !DILocation(line: 510, column: 2, scope: !12834)
!12847 = !DILocation(line: 43, column: 3, scope: !12839, inlinedAt: !12843)
!12848 = !DILocation(line: 43, column: 60, scope: !12839, inlinedAt: !12843)
!12849 = !DILocation(line: 0, scope: !12839, inlinedAt: !12843)
!12850 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12851, file: !6417, line: 1153, type: !110)
!12851 = distinct !DISubprogram(name: "__set_MSP", scope: !6417, file: !6417, line: 1153, type: !6514, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12852)
!12852 = !{!12850}
!12853 = !DILocation(line: 0, scope: !12851, inlinedAt: !12854)
!12854 = distinct !DILocation(line: 46, column: 2, scope: !12839, inlinedAt: !12843)
!12855 = !DILocation(line: 1155, column: 3, scope: !12851, inlinedAt: !12854)
!12856 = !{i64 3564946}
!12857 = !DILocation(line: 62, column: 11, scope: !12839, inlinedAt: !12843)
!12858 = !DILocation(line: 102, column: 2, scope: !12859, inlinedAt: !12860)
!12859 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7469, file: !7469, line: 97, type: !3094, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2034)
!12860 = distinct !DILocation(line: 45, column: 2, scope: !12844, inlinedAt: !12846)
!12861 = !DILocation(line: 108, column: 2, scope: !12859, inlinedAt: !12860)
!12862 = !DILocation(line: 112, column: 2, scope: !12859, inlinedAt: !12860)
!12863 = !DILocation(line: 113, column: 2, scope: !12859, inlinedAt: !12860)
!12864 = !DILocation(line: 114, column: 2, scope: !12859, inlinedAt: !12860)
!12865 = !DILocation(line: 116, column: 2, scope: !12859, inlinedAt: !12860)
!12866 = !DILocation(line: 123, column: 13, scope: !12859, inlinedAt: !12860)
!12867 = !DILocation(line: 46, column: 2, scope: !12844, inlinedAt: !12846)
!12868 = !DILocation(line: 47, column: 2, scope: !12844, inlinedAt: !12846)
!12869 = !DILocation(line: 174, column: 12, scope: !12870, inlinedAt: !12871)
!12870 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7469, file: !7469, line: 169, type: !3094, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2034)
!12871 = distinct !DILocation(line: 48, column: 2, scope: !12844, inlinedAt: !12846)
!12872 = !DILocation(line: 179, column: 12, scope: !12870, inlinedAt: !12871)
!12873 = !DILocation(line: 50, column: 2, scope: !12844, inlinedAt: !12846)
!12874 = !DILocation(line: 57, column: 2, scope: !12844, inlinedAt: !12846)
!12875 = !DILocation(line: 518, column: 2, scope: !12834)
!12876 = !DILocation(line: 518, column: 18, scope: !12834)
!12877 = !DILocation(line: 520, column: 2, scope: !12834)
!12878 = !DILocation(line: 523, column: 2, scope: !12834)
!12879 = !DILocation(line: 526, column: 2, scope: !12834)
!12880 = !DILocation(line: 527, column: 2, scope: !12834)
!12881 = !DILocation(line: 543, column: 24, scope: !12834)
!12882 = !DILocation(line: 543, column: 2, scope: !12834)
!12883 = !DILocation(line: 0, scope: !2066)
!12884 = !DILocation(line: 246, column: 15, scope: !2084)
!12885 = !DILocation(line: 246, column: 36, scope: !2083)
!12886 = !DILocation(line: 246, column: 2, scope: !2084)
!12887 = !DILocation(line: 247, column: 37, scope: !2082)
!12888 = !DILocation(line: 0, scope: !2082)
!12889 = !DILocation(line: 248, column: 19, scope: !2082)
!12890 = !DILocation(line: 248, column: 12, scope: !2082)
!12891 = !DILocation(line: 250, column: 11, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !2082, file: !1833, line: 250, column: 7)
!12893 = !DILocation(line: 250, column: 7, scope: !2082)
!12894 = !DILocation(line: 254, column: 11, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12896, file: !1833, line: 254, column: 8)
!12896 = distinct !DILexicalBlock(scope: !12892, file: !1833, line: 250, column: 20)
!12897 = !DILocation(line: 254, column: 8, scope: !12896)
!12898 = !DILocation(line: 255, column: 9, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12895, file: !1833, line: 254, column: 17)
!12900 = !DILocation(line: 258, column: 9, scope: !12899)
!12901 = !DILocation(line: 261, column: 28, scope: !12899)
!12902 = !DILocation(line: 261, column: 10, scope: !12899)
!12903 = !DILocation(line: 261, column: 17, scope: !12899)
!12904 = !DILocation(line: 261, column: 26, scope: !12899)
!12905 = !DILocation(line: 262, column: 4, scope: !12899)
!12906 = !DILocation(line: 263, column: 9, scope: !12896)
!12907 = !DILocation(line: 263, column: 16, scope: !12896)
!12908 = !DILocation(line: 263, column: 28, scope: !12896)
!12909 = !DILocation(line: 264, column: 3, scope: !12896)
!12910 = !DILocation(line: 246, column: 60, scope: !2083)
!12911 = distinct !{!12911, !12886, !12912}
!12912 = !DILocation(line: 265, column: 2, scope: !2084)
!12913 = !DILocation(line: 266, column: 1, scope: !2066)
!12914 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6457, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12915)
!12915 = !{!12916, !12917}
!12916 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12914, file: !535, line: 1814, type: !792)
!12917 = !DILocalVariable(name: "priority", arg: 2, scope: !12914, file: !535, line: 1814, type: !110)
!12918 = !DILocation(line: 0, scope: !12914)
!12919 = !DILocation(line: 1822, column: 48, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !535, line: 1821, column: 3)
!12921 = distinct !DILexicalBlock(scope: !12914, file: !535, line: 1816, column: 7)
!12922 = !DILocation(line: 1822, column: 32, scope: !12920)
!12923 = !DILocation(line: 1822, column: 40, scope: !12920)
!12924 = !DILocation(line: 1822, column: 5, scope: !12920)
!12925 = !DILocation(line: 1822, column: 46, scope: !12920)
!12926 = !DILocation(line: 1824, column: 1, scope: !12914)
!12927 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12845, file: !12845, line: 32, type: !3094, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!12928 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12929, file: !12929, line: 215, type: !12826, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12930)
!12929 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12930 = !{!12931}
!12931 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12928, file: !12929, line: 215, type: !1925)
!12932 = !DILocation(line: 0, scope: !12928)
!12933 = !DILocation(line: 217, column: 21, scope: !12928)
!12934 = !DILocation(line: 217, column: 34, scope: !12928)
!12935 = !DILocation(line: 221, column: 21, scope: !12928)
!12936 = !DILocation(line: 221, column: 34, scope: !12928)
!12937 = !DILocation(line: 223, column: 27, scope: !12928)
!12938 = !DILocation(line: 223, column: 33, scope: !12928)
!12939 = !DILocation(line: 224, column: 27, scope: !12928)
!12940 = !DILocation(line: 224, column: 32, scope: !12928)
!12941 = !DILocation(line: 232, column: 16, scope: !12928)
!12942 = !DILocation(line: 232, column: 30, scope: !12928)
!12943 = !DILocation(line: 239, column: 24, scope: !12928)
!12944 = !DILocation(line: 240, column: 1, scope: !12928)
!12945 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1833, file: !1833, line: 399, type: !12946, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12948)
!12946 = !DISubroutineType(types: !12947)
!12947 = !{!285}
!12948 = !{!12949}
!12949 = !DILocalVariable(name: "stack_ptr", scope: !12945, file: !1833, line: 401, type: !285)
!12950 = !DILocation(line: 404, column: 2, scope: !12945)
!12951 = !DILocation(line: 416, column: 24, scope: !12945)
!12952 = !DILocation(line: 418, column: 14, scope: !12945)
!12953 = !DILocation(line: 0, scope: !12945)
!12954 = !DILocation(line: 423, column: 2, scope: !12945)
!12955 = !DILocation(line: 424, column: 2, scope: !12945)
!12956 = !DILocation(line: 426, column: 2, scope: !12945)
!12957 = !DILocation(line: 428, column: 2, scope: !12945)
!12958 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1833, file: !1833, line: 432, type: !12959, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12961)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{null, !285}
!12961 = !{!12962}
!12962 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12958, file: !1833, line: 432, type: !285)
!12963 = !DILocation(line: 0, scope: !12958)
!12964 = !DILocation(line: 435, column: 2, scope: !12958)
!12965 = !DILocation(line: 445, column: 2, scope: !12958)
!12966 = distinct !DISubprogram(name: "bg_thread_main", scope: !1833, file: !1833, line: 277, type: !3206, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !12967)
!12967 = !{!12968, !12969, !12970}
!12968 = !DILocalVariable(name: "unused1", arg: 1, scope: !12966, file: !1833, line: 277, type: !107)
!12969 = !DILocalVariable(name: "unused2", arg: 2, scope: !12966, file: !1833, line: 277, type: !107)
!12970 = !DILocalVariable(name: "unused3", arg: 3, scope: !12966, file: !1833, line: 277, type: !107)
!12971 = !DILocation(line: 0, scope: !12966)
!12972 = !DILocation(line: 291, column: 20, scope: !12966)
!12973 = !DILocation(line: 293, column: 2, scope: !12966)
!12974 = !DILocation(line: 297, column: 2, scope: !12966)
!12975 = !DILocation(line: 305, column: 2, scope: !12966)
!12976 = !DILocation(line: 307, column: 2, scope: !12966)
!12977 = !DILocation(line: 330, column: 8, scope: !12966)
!12978 = !DILocation(line: 333, column: 34, scope: !12966)
!12979 = !DILocation(line: 339, column: 1, scope: !12966)
!12980 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2095, file: !2095, line: 45, type: !12981, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !12989)
!12981 = !DISubroutineType(types: !12982)
!12982 = !{null, !12983, !107}
!12983 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12984)
!12984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12985, size: 32)
!12985 = !DISubroutineType(types: !12986)
!12986 = !{null, !12987, !107}
!12987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12988, size: 32)
!12988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2100)
!12989 = !{!12990, !12991}
!12990 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12980, file: !2095, line: 45, type: !12983)
!12991 = !DILocalVariable(name: "user_data", arg: 2, scope: !12980, file: !2095, line: 45, type: !107)
!12992 = !DILocation(line: 0, scope: !12980)
!12993 = !DILocation(line: 71, column: 1, scope: !12980)
!12994 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2095, file: !2095, line: 73, type: !12981, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !12995)
!12995 = !{!12996, !12997}
!12996 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12994, file: !2095, line: 73, type: !12983)
!12997 = !DILocalVariable(name: "user_data", arg: 2, scope: !12994, file: !2095, line: 73, type: !107)
!12998 = !DILocation(line: 0, scope: !12994)
!12999 = !DILocation(line: 95, column: 1, scope: !12994)
!13000 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2095, file: !2095, line: 97, type: !7470, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !2034)
!13001 = !DILocation(line: 1031, column: 3, scope: !13002, inlinedAt: !13005)
!13002 = distinct !DISubprogram(name: "__get_IPSR", scope: !6417, file: !6417, line: 1027, type: !6504, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13003)
!13003 = !{!13004}
!13004 = !DILocalVariable(name: "result", scope: !13002, file: !6417, line: 1029, type: !110)
!13005 = distinct !DILocation(line: 48, column: 10, scope: !13006, inlinedAt: !13007)
!13006 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7469, file: !7469, line: 46, type: !7470, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !2034)
!13007 = distinct !DILocation(line: 99, column: 9, scope: !13000)
!13008 = !{i64 3570597}
!13009 = !DILocation(line: 0, scope: !13002, inlinedAt: !13005)
!13010 = !DILocation(line: 48, column: 9, scope: !13006, inlinedAt: !13007)
!13011 = !DILocation(line: 99, column: 2, scope: !13000)
!13012 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2095, file: !2095, line: 106, type: !3094, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !2034)
!13013 = !DILocation(line: 108, column: 2, scope: !13012)
!13014 = !DILocation(line: 108, column: 17, scope: !13012)
!13015 = !DILocation(line: 108, column: 30, scope: !13012)
!13016 = !DILocation(line: 109, column: 1, scope: !13012)
!13017 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2095, file: !2095, line: 116, type: !3094, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !2034)
!13018 = !DILocation(line: 118, column: 2, scope: !13017)
!13019 = !DILocation(line: 118, column: 17, scope: !13017)
!13020 = !DILocation(line: 118, column: 30, scope: !13017)
!13021 = !DILocation(line: 119, column: 1, scope: !13017)
!13022 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2095, file: !2095, line: 126, type: !7470, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !2034)
!13023 = !DILocation(line: 128, column: 10, scope: !13022)
!13024 = !DILocation(line: 128, column: 25, scope: !13022)
!13025 = !DILocation(line: 128, column: 38, scope: !13022)
!13026 = !DILocation(line: 128, column: 53, scope: !13022)
!13027 = !DILocation(line: 128, column: 2, scope: !13022)
!13028 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2095, file: !2095, line: 187, type: !13029, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{!109, !2099, !279}
!13031 = !{!13032, !13033}
!13032 = !DILocalVariable(name: "thread", arg: 1, scope: !13028, file: !2095, line: 187, type: !2099)
!13033 = !DILocalVariable(name: "value", arg: 2, scope: !13028, file: !2095, line: 187, type: !279)
!13034 = !DILocation(line: 0, scope: !13028)
!13035 = !DILocation(line: 190, column: 13, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13028, file: !2095, line: 190, column: 6)
!13037 = !DILocation(line: 190, column: 6, scope: !13028)
!13038 = !DILocation(line: 194, column: 10, scope: !13028)
!13039 = !DILocation(line: 194, column: 2, scope: !13028)
!13040 = !DILocation(line: 195, column: 2, scope: !13028)
!13041 = !DILocation(line: 195, column: 47, scope: !13028)
!13042 = !DILocation(line: 199, column: 2, scope: !13028)
!13043 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2095, file: !2095, line: 238, type: !13044, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13046)
!13044 = !DISubroutineType(types: !13045)
!13045 = !{!279, !2099}
!13046 = !{!13047}
!13047 = !DILocalVariable(name: "thread", arg: 1, scope: !13043, file: !2095, line: 238, type: !2099)
!13048 = !DILocation(line: 0, scope: !13043)
!13049 = !DILocation(line: 241, column: 23, scope: !13043)
!13050 = !DILocation(line: 241, column: 2, scope: !13043)
!13051 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2095, file: !2095, line: 248, type: !13052, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!109, !2098, !285, !234}
!13054 = !{!13055, !13056, !13057}
!13055 = !DILocalVariable(name: "thread", arg: 1, scope: !13051, file: !2095, line: 248, type: !2098)
!13056 = !DILocalVariable(name: "buf", arg: 2, scope: !13051, file: !2095, line: 248, type: !285)
!13057 = !DILocalVariable(name: "size", arg: 3, scope: !13051, file: !2095, line: 248, type: !234)
!13058 = !DILocation(line: 0, scope: !13051)
!13059 = !DILocation(line: 251, column: 15, scope: !13051)
!13060 = !DILocation(line: 251, column: 2, scope: !13051)
!13061 = !DILocation(line: 252, column: 2, scope: !13051)
!13062 = !DILocation(line: 0, scope: !2094)
!13063 = !DILocation(line: 281, column: 11, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !2094, file: !2095, line: 281, column: 6)
!13065 = !DILocation(line: 281, column: 20, scope: !13064)
!13066 = !DILocation(line: 275, column: 45, scope: !2094)
!13067 = !DILocation(line: 285, column: 10, scope: !2094)
!13068 = !DILocation(line: 0, scope: !2218)
!13069 = !DILocation(line: 293, column: 39, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !2218, file: !2095, line: 293, column: 2)
!13071 = !DILocation(line: 293, column: 2, scope: !2218)
!13072 = !DILocation(line: 273, column: 14, scope: !2094)
!13073 = !DILocation(line: 309, column: 2, scope: !2094)
!13074 = !DILocation(line: 309, column: 11, scope: !2094)
!13075 = !DILocation(line: 311, column: 2, scope: !2094)
!13076 = !DILocation(line: 293, column: 26, scope: !13070)
!13077 = !DILocation(line: 294, column: 9, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13070, file: !2095, line: 293, column: 54)
!13079 = !DILocation(line: 295, column: 21, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13078, file: !2095, line: 295, column: 7)
!13081 = !DILocation(line: 295, column: 28, scope: !13080)
!13082 = !DILocation(line: 295, column: 7, scope: !13078)
!13083 = !DILocation(line: 299, column: 25, scope: !13078)
!13084 = !DILocation(line: 299, column: 41, scope: !13078)
!13085 = !DILocation(line: 300, column: 7, scope: !13078)
!13086 = !DILocation(line: 300, column: 26, scope: !13078)
!13087 = !DILocation(line: 299, column: 10, scope: !13078)
!13088 = !DILocation(line: 299, column: 7, scope: !13078)
!13089 = !DILocation(line: 302, column: 16, scope: !13078)
!13090 = !DILocation(line: 304, column: 20, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13078, file: !2095, line: 304, column: 7)
!13092 = !DILocation(line: 304, column: 7, scope: !13078)
!13093 = !DILocation(line: 305, column: 26, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13091, file: !2095, line: 304, column: 26)
!13095 = !DILocation(line: 305, column: 42, scope: !13094)
!13096 = !DILocation(line: 305, column: 11, scope: !13094)
!13097 = !DILocation(line: 305, column: 8, scope: !13094)
!13098 = !DILocation(line: 306, column: 3, scope: !13094)
!13099 = !DILocation(line: 293, column: 50, scope: !13070)
!13100 = !DILocation(line: 312, column: 1, scope: !2094)
!13101 = distinct !DISubprogram(name: "copy_bytes", scope: !2095, file: !2095, line: 261, type: !13102, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13104)
!13102 = !DISubroutineType(types: !13103)
!13103 = !{!234, !285, !234, !279, !234}
!13104 = !{!13105, !13106, !13107, !13108, !13109}
!13105 = !DILocalVariable(name: "dest", arg: 1, scope: !13101, file: !2095, line: 261, type: !285)
!13106 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13101, file: !2095, line: 261, type: !234)
!13107 = !DILocalVariable(name: "src", arg: 3, scope: !13101, file: !2095, line: 261, type: !279)
!13108 = !DILocalVariable(name: "src_size", arg: 4, scope: !13101, file: !2095, line: 261, type: !234)
!13109 = !DILocalVariable(name: "bytes_to_copy", scope: !13101, file: !2095, line: 263, type: !234)
!13110 = !DILocation(line: 0, scope: !13101)
!13111 = !DILocation(line: 265, column: 18, scope: !13101)
!13112 = !DILocation(line: 266, column: 2, scope: !13101)
!13113 = !DILocation(line: 268, column: 2, scope: !13101)
!13114 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2095, file: !2095, line: 383, type: !13115, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13117)
!13115 = !DISubroutineType(types: !13116)
!13116 = !{null, !2099}
!13117 = !{!13118}
!13118 = !DILocalVariable(name: "thread", arg: 1, scope: !13114, file: !2095, line: 383, type: !2099)
!13119 = !DILocation(line: 0, scope: !13114)
!13120 = !DILocation(line: 387, column: 2, scope: !13114)
!13121 = !DILocation(line: 388, column: 1, scope: !13114)
!13122 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2095, file: !2095, line: 528, type: !13123, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13130)
!13123 = !DISubroutineType(types: !13124)
!13124 = !{!285, !2099, !13125, !234, !3361, !107, !107, !107, !109, !110, !279}
!13125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13126, size: 32)
!13126 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3360, line: 44, baseType: !13127)
!13127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !13128)
!13128 = !{!13129}
!13129 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13127, file: !147, line: 48, baseType: !150, size: 8)
!13130 = !{!13131, !13132, !13133, !13134, !13135, !13136, !13137, !13138, !13139, !13140, !13141}
!13131 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13122, file: !2095, line: 528, type: !2099)
!13132 = !DILocalVariable(name: "stack", arg: 2, scope: !13122, file: !2095, line: 529, type: !13125)
!13133 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13122, file: !2095, line: 529, type: !234)
!13134 = !DILocalVariable(name: "entry", arg: 4, scope: !13122, file: !2095, line: 530, type: !3361)
!13135 = !DILocalVariable(name: "p1", arg: 5, scope: !13122, file: !2095, line: 531, type: !107)
!13136 = !DILocalVariable(name: "p2", arg: 6, scope: !13122, file: !2095, line: 531, type: !107)
!13137 = !DILocalVariable(name: "p3", arg: 7, scope: !13122, file: !2095, line: 531, type: !107)
!13138 = !DILocalVariable(name: "prio", arg: 8, scope: !13122, file: !2095, line: 532, type: !109)
!13139 = !DILocalVariable(name: "options", arg: 9, scope: !13122, file: !2095, line: 532, type: !110)
!13140 = !DILocalVariable(name: "name", arg: 10, scope: !13122, file: !2095, line: 532, type: !279)
!13141 = !DILocalVariable(name: "stack_ptr", scope: !13122, file: !2095, line: 534, type: !285)
!13142 = !DILocation(line: 0, scope: !13122)
!13143 = !DILocation(line: 536, column: 2, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13145, file: !2095, line: 536, column: 2)
!13145 = distinct !DILexicalBlock(scope: !13146, file: !2095, line: 536, column: 2)
!13146 = distinct !DILexicalBlock(scope: !13122, file: !2095, line: 536, column: 2)
!13147 = !DILocation(line: 536, column: 2, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13144, file: !2095, line: 536, column: 2)
!13149 = !DILocation(line: 550, column: 28, scope: !13122)
!13150 = !DILocation(line: 550, column: 2, scope: !13122)
!13151 = !DILocation(line: 553, column: 34, scope: !13122)
!13152 = !DILocation(line: 553, column: 2, scope: !13122)
!13153 = !DILocation(line: 554, column: 14, scope: !13122)
!13154 = !DILocation(line: 564, column: 2, scope: !13122)
!13155 = !DILocation(line: 567, column: 14, scope: !13122)
!13156 = !DILocation(line: 567, column: 24, scope: !13122)
!13157 = !DILocation(line: 594, column: 11, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13122, file: !2095, line: 594, column: 6)
!13159 = !DILocation(line: 0, scope: !13158)
!13160 = !DILocation(line: 594, column: 6, scope: !13122)
!13161 = !DILocation(line: 595, column: 3, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13158, file: !2095, line: 594, column: 20)
!13163 = !DILocation(line: 598, column: 3, scope: !13162)
!13164 = !DILocation(line: 598, column: 52, scope: !13162)
!13165 = !DILocation(line: 599, column: 2, scope: !13162)
!13166 = !DILocation(line: 600, column: 23, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13158, file: !2095, line: 599, column: 9)
!13168 = !DILocation(line: 612, column: 7, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13122, file: !2095, line: 612, column: 6)
!13170 = !DILocation(line: 612, column: 6, scope: !13122)
!13171 = !DILocation(line: 627, column: 40, scope: !13122)
!13172 = !DILocation(line: 637, column: 2, scope: !13122)
!13173 = !DILocation(line: 613, column: 15, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13169, file: !2095, line: 612, column: 17)
!13175 = !DILocation(line: 613, column: 29, scope: !13174)
!13176 = !DILocation(line: 638, column: 1, scope: !13122)
!13177 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12825, file: !12825, line: 78, type: !13178, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13180)
!13178 = !DISubroutineType(types: !13179)
!13179 = !{!347, !107}
!13180 = !{!13181}
!13181 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13177, file: !12825, line: 78, type: !107)
!13182 = !DILocation(line: 0, scope: !13177)
!13183 = !DILocation(line: 80, column: 21, scope: !13177)
!13184 = !DILocation(line: 80, column: 2, scope: !13177)
!13185 = distinct !DISubprogram(name: "z_waitq_init", scope: !13186, file: !13186, line: 47, type: !13187, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13189)
!13186 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13187 = !DISubroutineType(types: !13188)
!13188 = !{null, !2130}
!13189 = !{!13190}
!13190 = !DILocalVariable(name: "w", arg: 1, scope: !13185, file: !13186, line: 47, type: !2130)
!13191 = !DILocation(line: 0, scope: !13185)
!13192 = !DILocation(line: 49, column: 21, scope: !13185)
!13193 = !DILocation(line: 49, column: 2, scope: !13185)
!13194 = !DILocation(line: 50, column: 1, scope: !13185)
!13195 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2095, file: !2095, line: 791, type: !13196, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13199)
!13196 = !DISubroutineType(types: !13197)
!13197 = !{null, !13198, !109, !110, !32}
!13198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!13199 = !{!13200, !13201, !13202, !13203}
!13200 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13195, file: !2095, line: 791, type: !13198)
!13201 = !DILocalVariable(name: "priority", arg: 2, scope: !13195, file: !2095, line: 791, type: !109)
!13202 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13195, file: !2095, line: 792, type: !110)
!13203 = !DILocalVariable(name: "options", arg: 4, scope: !13195, file: !2095, line: 792, type: !32)
!13204 = !DILocation(line: 0, scope: !13195)
!13205 = !DILocation(line: 795, column: 15, scope: !13195)
!13206 = !DILocation(line: 795, column: 25, scope: !13195)
!13207 = !DILocation(line: 796, column: 30, scope: !13195)
!13208 = !DILocation(line: 796, column: 15, scope: !13195)
!13209 = !DILocation(line: 796, column: 28, scope: !13195)
!13210 = !DILocation(line: 797, column: 30, scope: !13195)
!13211 = !DILocation(line: 797, column: 15, scope: !13195)
!13212 = !DILocation(line: 797, column: 28, scope: !13195)
!13213 = !DILocation(line: 799, column: 22, scope: !13195)
!13214 = !DILocation(line: 799, column: 15, scope: !13195)
!13215 = !DILocation(line: 799, column: 20, scope: !13195)
!13216 = !DILocation(line: 801, column: 15, scope: !13195)
!13217 = !DILocation(line: 801, column: 28, scope: !13195)
!13218 = !DILocation(line: 814, column: 2, scope: !13195)
!13219 = !DILocation(line: 815, column: 1, scope: !13195)
!13220 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2095, file: !2095, line: 449, type: !13221, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13223)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{!285, !2099, !13125, !234}
!13223 = !{!13224, !13225, !13226, !13227, !13228, !13229, !13230, !13231}
!13224 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13220, file: !2095, line: 449, type: !2099)
!13225 = !DILocalVariable(name: "stack", arg: 2, scope: !13220, file: !2095, line: 450, type: !13125)
!13226 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13220, file: !2095, line: 450, type: !234)
!13227 = !DILocalVariable(name: "stack_obj_size", scope: !13220, file: !2095, line: 452, type: !234)
!13228 = !DILocalVariable(name: "stack_buf_size", scope: !13220, file: !2095, line: 452, type: !234)
!13229 = !DILocalVariable(name: "stack_ptr", scope: !13220, file: !2095, line: 453, type: !285)
!13230 = !DILocalVariable(name: "stack_buf_start", scope: !13220, file: !2095, line: 453, type: !285)
!13231 = !DILocalVariable(name: "delta", scope: !13220, file: !2095, line: 454, type: !234)
!13232 = !DILocation(line: 0, scope: !13220)
!13233 = !DILocation(line: 465, column: 20, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13220, file: !2095, line: 463, column: 2)
!13235 = !DILocation(line: 466, column: 21, scope: !13234)
!13236 = !DILocation(line: 473, column: 28, scope: !13220)
!13237 = !DILocation(line: 514, column: 33, scope: !13220)
!13238 = !DILocation(line: 514, column: 25, scope: !13220)
!13239 = !DILocation(line: 514, column: 31, scope: !13220)
!13240 = !DILocation(line: 515, column: 25, scope: !13220)
!13241 = !DILocation(line: 515, column: 30, scope: !13220)
!13242 = !DILocation(line: 516, column: 25, scope: !13220)
!13243 = !DILocation(line: 516, column: 31, scope: !13220)
!13244 = !DILocation(line: 520, column: 2, scope: !13220)
!13245 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13246, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!285, !13125}
!13248 = !{!13249}
!13249 = !DILocalVariable(name: "sym", arg: 1, scope: !13245, file: !147, line: 331, type: !13125)
!13250 = !DILocation(line: 0, scope: !13245)
!13251 = !DILocation(line: 333, column: 21, scope: !13245)
!13252 = !DILocation(line: 333, column: 2, scope: !13245)
!13253 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13254, file: !13254, line: 40, type: !13255, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13257)
!13254 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13255 = !DISubroutineType(types: !13256)
!13256 = !{null, !13198}
!13257 = !{!13258}
!13258 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13253, file: !13254, line: 40, type: !13198)
!13259 = !DILocation(line: 0, scope: !13253)
!13260 = !DILocation(line: 42, column: 31, scope: !13253)
!13261 = !DILocation(line: 42, column: 2, scope: !13253)
!13262 = !DILocation(line: 43, column: 1, scope: !13253)
!13263 = distinct !DISubprogram(name: "z_init_timeout", scope: !13254, file: !13254, line: 25, type: !2156, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13264)
!13264 = !{!13265}
!13265 = !DILocalVariable(name: "to", arg: 1, scope: !13263, file: !13254, line: 25, type: !2158)
!13266 = !DILocation(line: 0, scope: !13263)
!13267 = !DILocation(line: 27, column: 22, scope: !13263)
!13268 = !DILocation(line: 27, column: 2, scope: !13263)
!13269 = !DILocation(line: 28, column: 1, scope: !13263)
!13270 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13271, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13273)
!13271 = !DISubroutineType(types: !13272)
!13272 = !{null, !2205}
!13273 = !{!13274}
!13274 = !DILocalVariable(name: "node", arg: 1, scope: !13270, file: !127, line: 211, type: !2205)
!13275 = !DILocation(line: 0, scope: !13270)
!13276 = !DILocation(line: 213, column: 8, scope: !13270)
!13277 = !DILocation(line: 213, column: 13, scope: !13270)
!13278 = !DILocation(line: 214, column: 8, scope: !13270)
!13279 = !DILocation(line: 214, column: 13, scope: !13270)
!13280 = !DILocation(line: 215, column: 1, scope: !13270)
!13281 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13282, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13285)
!13282 = !DISubroutineType(types: !13283)
!13283 = !{null, !13284}
!13284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!13285 = !{!13286}
!13286 = !DILocalVariable(name: "list", arg: 1, scope: !13281, file: !127, line: 197, type: !13284)
!13287 = !DILocation(line: 0, scope: !13281)
!13288 = !DILocation(line: 199, column: 8, scope: !13281)
!13289 = !DILocation(line: 199, column: 13, scope: !13281)
!13290 = !DILocation(line: 200, column: 8, scope: !13281)
!13291 = !DILocation(line: 200, column: 13, scope: !13281)
!13292 = !DILocation(line: 201, column: 1, scope: !13281)
!13293 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2095, file: !2095, line: 641, type: !13294, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13300)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{!2098, !2099, !13125, !234, !3361, !107, !107, !107, !109, !110, !13296}
!13296 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13297)
!13297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13298)
!13298 = !{!13299}
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13297, file: !104, line: 66, baseType: !103, size: 64)
!13300 = !{!13301, !13302, !13303, !13304, !13305, !13306, !13307, !13308, !13309, !13310}
!13301 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13293, file: !2095, line: 641, type: !2099)
!13302 = !DILocalVariable(name: "stack", arg: 2, scope: !13293, file: !2095, line: 642, type: !13125)
!13303 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13293, file: !2095, line: 643, type: !234)
!13304 = !DILocalVariable(name: "entry", arg: 4, scope: !13293, file: !2095, line: 643, type: !3361)
!13305 = !DILocalVariable(name: "p1", arg: 5, scope: !13293, file: !2095, line: 644, type: !107)
!13306 = !DILocalVariable(name: "p2", arg: 6, scope: !13293, file: !2095, line: 644, type: !107)
!13307 = !DILocalVariable(name: "p3", arg: 7, scope: !13293, file: !2095, line: 644, type: !107)
!13308 = !DILocalVariable(name: "prio", arg: 8, scope: !13293, file: !2095, line: 645, type: !109)
!13309 = !DILocalVariable(name: "options", arg: 9, scope: !13293, file: !2095, line: 645, type: !110)
!13310 = !DILocalVariable(name: "delay", arg: 10, scope: !13293, file: !2095, line: 645, type: !13296)
!13311 = !DILocation(line: 0, scope: !13293)
!13312 = !DILocation(line: 1031, column: 3, scope: !13002, inlinedAt: !13313)
!13313 = distinct !DILocation(line: 48, column: 10, scope: !13006, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 647, column: 2, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !2095, line: 647, column: 2)
!13316 = distinct !DILexicalBlock(scope: !13293, file: !2095, line: 647, column: 2)
!13317 = !DILocation(line: 0, scope: !13002, inlinedAt: !13313)
!13318 = !DILocation(line: 48, column: 9, scope: !13006, inlinedAt: !13314)
!13319 = !DILocation(line: 647, column: 2, scope: !13316)
!13320 = !DILocation(line: 647, column: 2, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13315, file: !2095, line: 647, column: 2)
!13322 = !DILocation(line: 649, column: 2, scope: !13293)
!13323 = !DILocation(line: 652, column: 7, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13293, file: !2095, line: 652, column: 6)
!13325 = !DILocation(line: 652, column: 6, scope: !13293)
!13326 = !DILocation(line: 653, column: 3, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13324, file: !2095, line: 652, column: 39)
!13328 = !DILocation(line: 654, column: 2, scope: !13327)
!13329 = !DILocation(line: 656, column: 2, scope: !13293)
!13330 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2095, file: !2095, line: 401, type: !13331, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13333)
!13331 = !DISubroutineType(types: !13332)
!13332 = !{null, !2099, !13296}
!13333 = !{!13334, !13335}
!13334 = !DILocalVariable(name: "thread", arg: 1, scope: !13330, file: !2095, line: 401, type: !2099)
!13335 = !DILocalVariable(name: "delay", arg: 2, scope: !13330, file: !2095, line: 401, type: !13296)
!13336 = !DILocation(line: 0, scope: !13330)
!13337 = !DILocation(line: 404, column: 6, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13330, file: !2095, line: 404, column: 6)
!13339 = !DILocation(line: 404, column: 6, scope: !13330)
!13340 = !DILocation(line: 405, column: 3, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13338, file: !2095, line: 404, column: 38)
!13342 = !DILocation(line: 406, column: 2, scope: !13341)
!13343 = !DILocation(line: 407, column: 3, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13338, file: !2095, line: 406, column: 9)
!13345 = !DILocation(line: 413, column: 1, scope: !13330)
!13346 = distinct !DISubprogram(name: "k_thread_start", scope: !3240, file: !3240, line: 205, type: !13347, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13349)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{null, !2098}
!13349 = !{!13350}
!13350 = !DILocalVariable(name: "thread", arg: 1, scope: !13346, file: !3240, line: 205, type: !2098)
!13351 = !DILocation(line: 0, scope: !13346)
!13352 = !DILocation(line: 214, column: 2, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13346, file: !3240, line: 214, column: 2)
!13354 = !{i64 2154875407}
!13355 = !DILocation(line: 215, column: 2, scope: !13346)
!13356 = !DILocation(line: 216, column: 1, scope: !13346)
!13357 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13254, file: !13254, line: 47, type: !13331, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13358)
!13358 = !{!13359, !13360}
!13359 = !DILocalVariable(name: "thread", arg: 1, scope: !13357, file: !13254, line: 47, type: !2099)
!13360 = !DILocalVariable(name: "ticks", arg: 2, scope: !13357, file: !13254, line: 47, type: !13296)
!13361 = !DILocation(line: 0, scope: !13357)
!13362 = !DILocation(line: 49, column: 30, scope: !13357)
!13363 = !DILocation(line: 49, column: 2, scope: !13357)
!13364 = !DILocation(line: 50, column: 1, scope: !13357)
!13365 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2095, file: !2095, line: 748, type: !3094, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13366)
!13366 = !{!13367, !13385}
!13367 = !DILocalVariable(name: "thread_data", scope: !13368, file: !2095, line: 750, type: !13369)
!13368 = distinct !DILexicalBlock(scope: !13365, file: !2095, line: 750, column: 2)
!13369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13370, size: 32)
!13370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13371)
!13371 = !{!13372, !13373, !13374, !13375, !13376, !13377, !13378, !13379, !13380, !13381, !13382, !13384}
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13370, file: !118, line: 621, baseType: !2099, size: 32)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13370, file: !118, line: 622, baseType: !13125, size: 32, offset: 32)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13370, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13370, file: !118, line: 624, baseType: !3361, size: 32, offset: 96)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13370, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13370, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13370, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13370, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13370, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13370, file: !118, line: 630, baseType: !766, size: 32, offset: 288)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13370, file: !118, line: 631, baseType: !13383, size: 32, offset: 320)
!13383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 32)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13370, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13385 = !DILocalVariable(name: "thread_data", scope: !13386, file: !2095, line: 781, type: !13369)
!13386 = distinct !DILexicalBlock(scope: !13365, file: !2095, line: 781, column: 2)
!13387 = !DILocation(line: 0, scope: !13368)
!13388 = !DILocation(line: 750, column: 2, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2095, line: 750, column: 2)
!13390 = distinct !DILexicalBlock(scope: !13391, file: !2095, line: 750, column: 2)
!13391 = distinct !DILexicalBlock(scope: !13368, file: !2095, line: 750, column: 2)
!13392 = !DILocation(line: 750, column: 2, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !2095, line: 750, column: 2)
!13394 = distinct !DILexicalBlock(scope: !13389, file: !2095, line: 750, column: 2)
!13395 = !DILocation(line: 750, column: 2, scope: !13390)
!13396 = !DILocation(line: 750, column: 2, scope: !13368)
!13397 = !DILocation(line: 780, column: 2, scope: !13365)
!13398 = !DILocation(line: 0, scope: !13386)
!13399 = !DILocation(line: 781, column: 2, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !2095, line: 781, column: 2)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !2095, line: 781, column: 2)
!13402 = distinct !DILexicalBlock(scope: !13386, file: !2095, line: 781, column: 2)
!13403 = !DILocation(line: 752, column: 17, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13391, file: !2095, line: 750, column: 38)
!13405 = !DILocation(line: 753, column: 17, scope: !13404)
!13406 = !DILocation(line: 754, column: 17, scope: !13404)
!13407 = !DILocation(line: 755, column: 17, scope: !13404)
!13408 = !DILocation(line: 756, column: 17, scope: !13404)
!13409 = !DILocation(line: 757, column: 17, scope: !13404)
!13410 = !DILocation(line: 758, column: 17, scope: !13404)
!13411 = !DILocation(line: 759, column: 17, scope: !13404)
!13412 = !DILocation(line: 760, column: 17, scope: !13404)
!13413 = !DILocation(line: 761, column: 17, scope: !13404)
!13414 = !DILocation(line: 751, column: 3, scope: !13404)
!13415 = !DILocation(line: 763, column: 16, scope: !13404)
!13416 = !DILocation(line: 763, column: 29, scope: !13404)
!13417 = !DILocation(line: 763, column: 39, scope: !13404)
!13418 = !DILocation(line: 750, column: 2, scope: !13391)
!13419 = !DILocation(line: 750, column: 2, scope: !13394)
!13420 = distinct !{!13420, !13396, !13421}
!13421 = !DILocation(line: 764, column: 2, scope: !13368)
!13422 = !DILocation(line: 781, column: 2, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !2095, line: 781, column: 2)
!13424 = distinct !DILexicalBlock(scope: !13400, file: !2095, line: 781, column: 2)
!13425 = !DILocation(line: 781, column: 2, scope: !13401)
!13426 = !DILocation(line: 781, column: 2, scope: !13386)
!13427 = !DILocation(line: 787, column: 2, scope: !13365)
!13428 = !DILocation(line: 788, column: 1, scope: !13365)
!13429 = !DILocation(line: 782, column: 20, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !2095, line: 782, column: 7)
!13431 = distinct !DILexicalBlock(scope: !13402, file: !2095, line: 781, column: 38)
!13432 = !DILocation(line: 782, column: 31, scope: !13430)
!13433 = !DILocation(line: 782, column: 7, scope: !13431)
!13434 = !DILocation(line: 783, column: 37, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13430, file: !2095, line: 782, column: 51)
!13436 = !DILocation(line: 784, column: 10, scope: !13435)
!13437 = !DILocation(line: 783, column: 4, scope: !13435)
!13438 = !DILocation(line: 785, column: 3, scope: !13435)
!13439 = !DILocation(line: 781, column: 2, scope: !13402)
!13440 = !DILocation(line: 781, column: 2, scope: !13424)
!13441 = distinct !{!13441, !13426, !13442}
!13442 = !DILocation(line: 786, column: 2, scope: !13386)
!13443 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13444, file: !13444, line: 403, type: !13445, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13447)
!13444 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13445 = !DISubroutineType(types: !13446)
!13446 = !{!111, !111}
!13447 = !{!13448}
!13448 = !DILocalVariable(name: "t", arg: 1, scope: !13443, file: !13444, line: 403, type: !111)
!13449 = !DILocation(line: 0, scope: !13443)
!13450 = !DILocalVariable(name: "t", arg: 1, scope: !13451, file: !13444, line: 102, type: !111)
!13451 = distinct !DISubprogram(name: "z_tmcvt", scope: !13444, file: !13444, line: 102, type: !13452, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13454)
!13452 = !DISubroutineType(types: !13453)
!13453 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!13454 = !{!13450, !13455, !13456, !13457, !13458, !13459, !13460, !13461, !13462, !13463, !13464}
!13455 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13451, file: !13444, line: 102, type: !110)
!13456 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13451, file: !13444, line: 103, type: !110)
!13457 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13451, file: !13444, line: 103, type: !347)
!13458 = !DILocalVariable(name: "result32", arg: 5, scope: !13451, file: !13444, line: 104, type: !347)
!13459 = !DILocalVariable(name: "round_up", arg: 6, scope: !13451, file: !13444, line: 104, type: !347)
!13460 = !DILocalVariable(name: "round_off", arg: 7, scope: !13451, file: !13444, line: 105, type: !347)
!13461 = !DILocalVariable(name: "mul_ratio", scope: !13451, file: !13444, line: 107, type: !347)
!13462 = !DILocalVariable(name: "div_ratio", scope: !13451, file: !13444, line: 109, type: !347)
!13463 = !DILocalVariable(name: "off", scope: !13451, file: !13444, line: 116, type: !111)
!13464 = !DILocalVariable(name: "rdivisor", scope: !13465, file: !13444, line: 119, type: !110)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !13444, line: 118, column: 18)
!13466 = distinct !DILexicalBlock(scope: !13451, file: !13444, line: 118, column: 6)
!13467 = !DILocation(line: 0, scope: !13451, inlinedAt: !13468)
!13468 = distinct !DILocation(line: 406, column: 9, scope: !13443)
!13469 = !DILocation(line: 145, column: 13, scope: !13470, inlinedAt: !13468)
!13470 = distinct !DILexicalBlock(scope: !13471, file: !13444, line: 144, column: 10)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !13444, line: 142, column: 7)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !13444, line: 141, column: 24)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !13444, line: 141, column: 13)
!13474 = distinct !DILexicalBlock(scope: !13451, file: !13444, line: 134, column: 6)
!13475 = !DILocation(line: 406, column: 2, scope: !13443)
!13476 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2095, file: !2095, line: 817, type: !4486, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13477)
!13477 = !{!13478, !13479, !13480, !13481}
!13478 = !DILocalVariable(name: "entry", arg: 1, scope: !13476, file: !2095, line: 817, type: !3361)
!13479 = !DILocalVariable(name: "p1", arg: 2, scope: !13476, file: !2095, line: 818, type: !107)
!13480 = !DILocalVariable(name: "p2", arg: 3, scope: !13476, file: !2095, line: 818, type: !107)
!13481 = !DILocalVariable(name: "p3", arg: 4, scope: !13476, file: !2095, line: 818, type: !107)
!13482 = !DILocation(line: 0, scope: !13476)
!13483 = !DILocation(line: 822, column: 2, scope: !13476)
!13484 = !DILocation(line: 822, column: 17, scope: !13476)
!13485 = !DILocation(line: 822, column: 30, scope: !13476)
!13486 = !DILocation(line: 823, column: 2, scope: !13476)
!13487 = !DILocation(line: 845, column: 2, scope: !13476)
!13488 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2095, file: !2095, line: 853, type: !13489, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13492)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{!347, !13491}
!13491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!13492 = !{!13493, !13494}
!13493 = !DILocalVariable(name: "l", arg: 1, scope: !13488, file: !2095, line: 853, type: !13491)
!13494 = !DILocalVariable(name: "thread_cpu", scope: !13488, file: !2095, line: 855, type: !22)
!13495 = !DILocation(line: 0, scope: !13488)
!13496 = !DILocation(line: 855, column: 28, scope: !13488)
!13497 = !DILocation(line: 857, column: 17, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13488, file: !2095, line: 857, column: 6)
!13499 = !DILocation(line: 857, column: 6, scope: !13488)
!13500 = !DILocation(line: 858, column: 19, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13502, file: !2095, line: 858, column: 7)
!13502 = distinct !DILexicalBlock(scope: !13498, file: !2095, line: 857, column: 24)
!13503 = !DILocation(line: 858, column: 42, scope: !13501)
!13504 = !DILocation(line: 858, column: 28, scope: !13501)
!13505 = !DILocation(line: 858, column: 25, scope: !13501)
!13506 = !DILocation(line: 858, column: 7, scope: !13502)
!13507 = !DILocation(line: 862, column: 2, scope: !13488)
!13508 = !DILocation(line: 863, column: 1, scope: !13488)
!13509 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2095, file: !2095, line: 865, type: !13489, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13510)
!13510 = !{!13511}
!13511 = !DILocalVariable(name: "l", arg: 1, scope: !13509, file: !2095, line: 865, type: !13491)
!13512 = !DILocation(line: 0, scope: !13509)
!13513 = !DILocation(line: 867, column: 9, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13509, file: !2095, line: 867, column: 6)
!13515 = !DILocation(line: 867, column: 38, scope: !13514)
!13516 = !DILocation(line: 867, column: 24, scope: !13514)
!13517 = !DILocation(line: 867, column: 54, scope: !13514)
!13518 = !DILocation(line: 867, column: 43, scope: !13514)
!13519 = !DILocation(line: 867, column: 41, scope: !13514)
!13520 = !DILocation(line: 867, column: 20, scope: !13514)
!13521 = !DILocation(line: 867, column: 6, scope: !13509)
!13522 = !DILocation(line: 870, column: 16, scope: !13509)
!13523 = !DILocation(line: 871, column: 2, scope: !13509)
!13524 = !DILocation(line: 872, column: 1, scope: !13509)
!13525 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2095, file: !2095, line: 874, type: !13526, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13528)
!13526 = !DISubroutineType(types: !13527)
!13527 = !{null, !13491}
!13528 = !{!13529}
!13529 = !DILocalVariable(name: "l", arg: 1, scope: !13525, file: !2095, line: 874, type: !13491)
!13530 = !DILocation(line: 0, scope: !13525)
!13531 = !DILocation(line: 876, column: 32, scope: !13525)
!13532 = !DILocation(line: 876, column: 18, scope: !13525)
!13533 = !DILocation(line: 876, column: 48, scope: !13525)
!13534 = !DILocation(line: 876, column: 37, scope: !13525)
!13535 = !DILocation(line: 876, column: 35, scope: !13525)
!13536 = !DILocation(line: 876, column: 5, scope: !13525)
!13537 = !DILocation(line: 876, column: 16, scope: !13525)
!13538 = !DILocation(line: 877, column: 1, scope: !13525)
!13539 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2095, file: !2095, line: 888, type: !13540, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!109, !2099}
!13542 = !{!13543}
!13543 = !DILocalVariable(name: "thread", arg: 1, scope: !13539, file: !2095, line: 888, type: !2099)
!13544 = !DILocation(line: 0, scope: !13539)
!13545 = !DILocation(line: 893, column: 2, scope: !13539)
!13546 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2095, file: !2095, line: 897, type: !13547, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13549)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{!109, !2099, !32}
!13549 = !{!13550, !13551}
!13550 = !DILocalVariable(name: "thread", arg: 1, scope: !13546, file: !2095, line: 897, type: !2099)
!13551 = !DILocalVariable(name: "options", arg: 2, scope: !13546, file: !2095, line: 897, type: !32)
!13552 = !DILocation(line: 0, scope: !13546)
!13553 = !DILocation(line: 902, column: 2, scope: !13546)
!13554 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2095, file: !2095, line: 1072, type: !13555, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13560)
!13555 = !DISubroutineType(types: !13556)
!13556 = !{!109, !2098, !13557}
!13557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13558, size: 32)
!13558 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !158, line: 234, baseType: !13559)
!13559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !158, line: 192, elements: !2034)
!13560 = !{!13561, !13562}
!13561 = !DILocalVariable(name: "thread", arg: 1, scope: !13554, file: !2095, line: 1072, type: !2098)
!13562 = !DILocalVariable(name: "stats", arg: 2, scope: !13554, file: !2095, line: 1073, type: !13557)
!13563 = !DILocation(line: 0, scope: !13554)
!13564 = !DILocation(line: 1075, column: 14, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13554, file: !2095, line: 1075, column: 6)
!13566 = !DILocation(line: 1075, column: 23, scope: !13565)
!13567 = !DILocation(line: 1086, column: 1, scope: !13554)
!13568 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2095, file: !2095, line: 1088, type: !13569, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !13571)
!13569 = !DISubroutineType(types: !13570)
!13570 = !{!109, !13557}
!13571 = !{!13572}
!13572 = !DILocalVariable(name: "stats", arg: 1, scope: !13568, file: !2095, line: 1088, type: !13557)
!13573 = !DILocation(line: 0, scope: !13568)
!13574 = !DILocation(line: 1094, column: 12, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13568, file: !2095, line: 1094, column: 6)
!13576 = !DILocation(line: 1120, column: 1, scope: !13568)
!13577 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13578, file: !13578, line: 20, type: !3094, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !2034)
!13578 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13579 = !DILocation(line: 30, column: 2, scope: !13577)
!13580 = !DILocation(line: 31, column: 1, scope: !13577)
!13581 = distinct !DISubprogram(name: "idle", scope: !13578, file: !13578, line: 33, type: !3206, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13582)
!13582 = !{!13583, !13584, !13585}
!13583 = !DILocalVariable(name: "unused1", arg: 1, scope: !13581, file: !13578, line: 33, type: !107)
!13584 = !DILocalVariable(name: "unused2", arg: 2, scope: !13581, file: !13578, line: 33, type: !107)
!13585 = !DILocalVariable(name: "unused3", arg: 3, scope: !13581, file: !13578, line: 33, type: !107)
!13586 = !DILocation(line: 0, scope: !13581)
!13587 = !DILocation(line: 39, column: 2, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !13578, line: 39, column: 2)
!13589 = distinct !DILexicalBlock(scope: !13581, file: !13578, line: 39, column: 2)
!13590 = !DILocation(line: 39, column: 2, scope: !13589)
!13591 = !DILocation(line: 39, column: 2, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13588, file: !13578, line: 39, column: 2)
!13593 = !DILocation(line: 55, column: 2, scope: !13594, inlinedAt: !13598)
!13594 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13595)
!13595 = !{!13596, !13597}
!13596 = !DILocalVariable(name: "key", scope: !13594, file: !6096, line: 44, type: !32)
!13597 = !DILocalVariable(name: "tmp", scope: !13594, file: !6096, line: 53, type: !32)
!13598 = distinct !DILocation(line: 62, column: 10, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13581, file: !13578, line: 41, column: 15)
!13600 = !{i64 2226170}
!13601 = !DILocation(line: 0, scope: !13594, inlinedAt: !13598)
!13602 = !DILocation(line: 86, column: 3, scope: !13599)
!13603 = !DILocation(line: 41, column: 2, scope: !13581)
!13604 = distinct !{!13604, !13603, !13605}
!13605 = !DILocation(line: 105, column: 2, scope: !13581)
!13606 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3094, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !2034)
!13607 = !DILocation(line: 5629, column: 2, scope: !13606)
!13608 = !DILocation(line: 5630, column: 1, scope: !13606)
!13609 = !DISubprogram(name: "arch_cpu_idle", scope: !3360, file: !3360, line: 167, type: !3094, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!13610 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2330, file: !2330, line: 49, type: !13611, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13620)
!13611 = !DISubroutineType(types: !13612)
!13612 = !{!109, !13613}
!13613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13614, size: 32)
!13614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13615)
!13615 = !{!13616, !13617, !13618, !13619}
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13614, file: !118, line: 2722, baseType: !2258, size: 64)
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13614, file: !118, line: 2724, baseType: !2240, size: 32, offset: 64)
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13614, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13614, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13620 = !{!13621}
!13621 = !DILocalVariable(name: "mutex", arg: 1, scope: !13610, file: !2330, line: 49, type: !13613)
!13622 = !DILocation(line: 0, scope: !13610)
!13623 = !DILocation(line: 51, column: 9, scope: !13610)
!13624 = !DILocation(line: 51, column: 15, scope: !13610)
!13625 = !DILocation(line: 52, column: 9, scope: !13610)
!13626 = !DILocation(line: 52, column: 20, scope: !13610)
!13627 = !DILocation(line: 54, column: 23, scope: !13610)
!13628 = !DILocation(line: 54, column: 2, scope: !13610)
!13629 = !DILocation(line: 60, column: 2, scope: !13610)
!13630 = distinct !DISubprogram(name: "z_waitq_init", scope: !13186, file: !13186, line: 47, type: !13631, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13633)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{null, !2257}
!13633 = !{!13634}
!13634 = !DILocalVariable(name: "w", arg: 1, scope: !13630, file: !13186, line: 47, type: !2257)
!13635 = !DILocation(line: 0, scope: !13630)
!13636 = !DILocation(line: 49, column: 21, scope: !13630)
!13637 = !DILocation(line: 49, column: 2, scope: !13630)
!13638 = !DILocation(line: 50, column: 1, scope: !13630)
!13639 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13640, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13643)
!13640 = !DISubroutineType(types: !13641)
!13641 = !{null, !13642}
!13642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!13643 = !{!13644}
!13644 = !DILocalVariable(name: "list", arg: 1, scope: !13639, file: !127, line: 197, type: !13642)
!13645 = !DILocation(line: 0, scope: !13639)
!13646 = !DILocation(line: 199, column: 8, scope: !13639)
!13647 = !DILocation(line: 199, column: 13, scope: !13639)
!13648 = !DILocation(line: 200, column: 8, scope: !13639)
!13649 = !DILocation(line: 200, column: 13, scope: !13639)
!13650 = !DILocation(line: 201, column: 1, scope: !13639)
!13651 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2330, file: !2330, line: 95, type: !13652, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13658)
!13652 = !DISubroutineType(types: !13653)
!13653 = !{!109, !13613, !13654}
!13654 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13655)
!13655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13656)
!13656 = !{!13657}
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13655, file: !104, line: 66, baseType: !103, size: 64)
!13658 = !{!13659, !13660, !13661, !13662, !13667, !13668, !13669}
!13659 = !DILocalVariable(name: "mutex", arg: 1, scope: !13651, file: !2330, line: 95, type: !13613)
!13660 = !DILocalVariable(name: "timeout", arg: 2, scope: !13651, file: !2330, line: 95, type: !13654)
!13661 = !DILocalVariable(name: "new_prio", scope: !13651, file: !2330, line: 97, type: !109)
!13662 = !DILocalVariable(name: "key", scope: !13651, file: !2330, line: 98, type: !13663)
!13663 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !13664)
!13664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !13665)
!13665 = !{!13666}
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13664, file: !253, line: 33, baseType: !109, size: 32)
!13667 = !DILocalVariable(name: "resched", scope: !13651, file: !2330, line: 99, type: !347)
!13668 = !DILocalVariable(name: "got_mutex", scope: !13651, file: !2330, line: 146, type: !109)
!13669 = !DILocalVariable(name: "waiter", scope: !13670, file: !2330, line: 169, type: !2240)
!13670 = distinct !DILexicalBlock(scope: !13671, file: !2330, line: 168, column: 36)
!13671 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 168, column: 6)
!13672 = !DILocation(line: 0, scope: !13651)
!13673 = !DILocation(line: 1031, column: 3, scope: !13674, inlinedAt: !13677)
!13674 = distinct !DISubprogram(name: "__get_IPSR", scope: !6417, file: !6417, line: 1027, type: !6504, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13675)
!13675 = !{!13676}
!13676 = !DILocalVariable(name: "result", scope: !13674, file: !6417, line: 1029, type: !110)
!13677 = distinct !DILocation(line: 48, column: 10, scope: !13678, inlinedAt: !13679)
!13678 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7469, file: !7469, line: 46, type: !7470, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !2034)
!13679 = distinct !DILocation(line: 101, column: 2, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13681, file: !2330, line: 101, column: 2)
!13681 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 101, column: 2)
!13682 = !{i64 3548191}
!13683 = !DILocation(line: 0, scope: !13674, inlinedAt: !13677)
!13684 = !DILocation(line: 48, column: 9, scope: !13678, inlinedAt: !13679)
!13685 = !DILocation(line: 101, column: 2, scope: !13681)
!13686 = !DILocation(line: 101, column: 2, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13680, file: !2330, line: 101, column: 2)
!13688 = !DILocalVariable(name: "l", arg: 1, scope: !13689, file: !253, line: 136, type: !13692)
!13689 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !13690, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13693)
!13690 = !DISubroutineType(types: !13691)
!13691 = !{!13663, !13692}
!13692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!13693 = !{!13688, !13694}
!13694 = !DILocalVariable(name: "k", scope: !13689, file: !253, line: 139, type: !13663)
!13695 = !DILocation(line: 0, scope: !13689, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 105, column: 8, scope: !13651)
!13697 = !DILocation(line: 55, column: 2, scope: !13698, inlinedAt: !13702)
!13698 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13699)
!13699 = !{!13700, !13701}
!13700 = !DILocalVariable(name: "key", scope: !13698, file: !6096, line: 44, type: !32)
!13701 = !DILocalVariable(name: "tmp", scope: !13698, file: !6096, line: 53, type: !32)
!13702 = distinct !DILocation(line: 145, column: 10, scope: !13689, inlinedAt: !13696)
!13703 = !{i64 2230578}
!13704 = !DILocation(line: 0, scope: !13698, inlinedAt: !13702)
!13705 = !DILocation(line: 148, column: 2, scope: !13706, inlinedAt: !13696)
!13706 = distinct !DILexicalBlock(scope: !13707, file: !253, line: 148, column: 2)
!13707 = distinct !DILexicalBlock(scope: !13689, file: !253, line: 148, column: 2)
!13708 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !13696)
!13709 = !DILocation(line: 148, column: 2, scope: !13710, inlinedAt: !13696)
!13710 = distinct !DILexicalBlock(scope: !13706, file: !253, line: 148, column: 2)
!13711 = !DILocation(line: 160, column: 2, scope: !13689, inlinedAt: !13696)
!13712 = !DILocation(line: 107, column: 6, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 107, column: 6)
!13714 = !DILocation(line: 107, column: 6, scope: !13651)
!13715 = !{!"branch_weights", i32 2000, i32 1}
!13716 = !DILocation(line: 110, column: 6, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13713, file: !2330, line: 107, column: 71)
!13718 = !DILocation(line: 110, column: 21, scope: !13717)
!13719 = !DILocation(line: 109, column: 28, scope: !13717)
!13720 = !DILocation(line: 111, column: 13, scope: !13717)
!13721 = !DILocation(line: 114, column: 18, scope: !13717)
!13722 = !DILocation(line: 109, column: 10, scope: !13717)
!13723 = !DILocation(line: 109, column: 26, scope: !13717)
!13724 = !DILocation(line: 113, column: 20, scope: !13717)
!13725 = !DILocation(line: 114, column: 10, scope: !13717)
!13726 = !DILocation(line: 114, column: 16, scope: !13717)
!13727 = !DILocalVariable(name: "key", arg: 2, scope: !13728, file: !253, line: 190, type: !13663)
!13728 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !13729, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13731)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{null, !13692, !13663}
!13731 = !{!13732, !13727}
!13732 = !DILocalVariable(name: "l", arg: 1, scope: !13728, file: !253, line: 189, type: !13692)
!13733 = !DILocation(line: 0, scope: !13728, inlinedAt: !13734)
!13734 = distinct !DILocation(line: 120, column: 3, scope: !13717)
!13735 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13734)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !253, line: 194, column: 2)
!13737 = distinct !DILexicalBlock(scope: !13728, file: !253, line: 194, column: 2)
!13738 = !DILocation(line: 194, column: 2, scope: !13737, inlinedAt: !13734)
!13739 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13734)
!13740 = distinct !DILexicalBlock(scope: !13736, file: !253, line: 194, column: 2)
!13741 = !DILocalVariable(name: "key", arg: 1, scope: !13742, file: !6096, line: 84, type: !32)
!13742 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13743)
!13743 = !{!13741}
!13744 = !DILocation(line: 0, scope: !13742, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 215, column: 2, scope: !13728, inlinedAt: !13734)
!13746 = !DILocation(line: 95, column: 2, scope: !13742, inlinedAt: !13745)
!13747 = !{i64 2231395}
!13748 = !DILocation(line: 124, column: 3, scope: !13717)
!13749 = !DILocation(line: 127, column: 6, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 127, column: 6)
!13751 = !DILocation(line: 127, column: 6, scope: !13651)
!13752 = !{!"branch_weights", i32 1, i32 2000}
!13753 = !DILocation(line: 0, scope: !13728, inlinedAt: !13754)
!13754 = distinct !DILocation(line: 128, column: 3, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13750, file: !2330, line: 127, column: 50)
!13756 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13754)
!13757 = !DILocation(line: 194, column: 2, scope: !13737, inlinedAt: !13754)
!13758 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13754)
!13759 = !DILocation(line: 0, scope: !13742, inlinedAt: !13760)
!13760 = distinct !DILocation(line: 215, column: 2, scope: !13728, inlinedAt: !13754)
!13761 = !DILocation(line: 95, column: 2, scope: !13742, inlinedAt: !13760)
!13762 = !DILocation(line: 132, column: 3, scope: !13755)
!13763 = !DILocation(line: 137, column: 53, scope: !13651)
!13764 = !DILocation(line: 137, column: 38, scope: !13651)
!13765 = !DILocation(line: 138, column: 29, scope: !13651)
!13766 = !DILocation(line: 138, column: 10, scope: !13651)
!13767 = !DILocation(line: 137, column: 13, scope: !13651)
!13768 = !DILocation(line: 142, column: 6, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 142, column: 6)
!13770 = !DILocation(line: 142, column: 6, scope: !13651)
!13771 = !DILocation(line: 143, column: 13, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13769, file: !2330, line: 142, column: 59)
!13773 = !DILocation(line: 144, column: 2, scope: !13772)
!13774 = !DILocation(line: 146, column: 50, scope: !13651)
!13775 = !DILocation(line: 146, column: 18, scope: !13651)
!13776 = !DILocation(line: 153, column: 16, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 153, column: 6)
!13778 = !DILocation(line: 153, column: 6, scope: !13651)
!13779 = !DILocation(line: 0, scope: !13689, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 162, column: 8, scope: !13651)
!13781 = !DILocation(line: 55, column: 2, scope: !13698, inlinedAt: !13782)
!13782 = distinct !DILocation(line: 145, column: 10, scope: !13689, inlinedAt: !13780)
!13783 = !DILocation(line: 0, scope: !13698, inlinedAt: !13782)
!13784 = !DILocation(line: 148, column: 2, scope: !13706, inlinedAt: !13780)
!13785 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !13780)
!13786 = !DILocation(line: 148, column: 2, scope: !13710, inlinedAt: !13780)
!13787 = !DILocation(line: 160, column: 2, scope: !13689, inlinedAt: !13780)
!13788 = !DILocation(line: 168, column: 6, scope: !13671)
!13789 = !DILocation(line: 168, column: 6, scope: !13651)
!13790 = !DILocation(line: 169, column: 29, scope: !13670)
!13791 = !DILocation(line: 0, scope: !13670)
!13792 = !DILocation(line: 171, column: 22, scope: !13670)
!13793 = !DILocation(line: 171, column: 14, scope: !13670)
!13794 = !DILocation(line: 172, column: 42, scope: !13670)
!13795 = !DILocation(line: 172, column: 29, scope: !13670)
!13796 = !DILocation(line: 172, column: 55, scope: !13670)
!13797 = !DILocation(line: 172, column: 4, scope: !13670)
!13798 = !DILocation(line: 173, column: 11, scope: !13670)
!13799 = !DILocation(line: 177, column: 13, scope: !13670)
!13800 = !DILocation(line: 177, column: 48, scope: !13670)
!13801 = !DILocation(line: 180, column: 6, scope: !13651)
!13802 = !DILocation(line: 181, column: 3, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13804, file: !2330, line: 180, column: 15)
!13804 = distinct !DILexicalBlock(scope: !13651, file: !2330, line: 180, column: 6)
!13805 = !DILocation(line: 182, column: 2, scope: !13803)
!13806 = !DILocation(line: 0, scope: !13728, inlinedAt: !13807)
!13807 = distinct !DILocation(line: 183, column: 3, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13804, file: !2330, line: 182, column: 9)
!13809 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13807)
!13810 = !DILocation(line: 194, column: 2, scope: !13737, inlinedAt: !13807)
!13811 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13807)
!13812 = !DILocation(line: 0, scope: !13742, inlinedAt: !13813)
!13813 = distinct !DILocation(line: 215, column: 2, scope: !13728, inlinedAt: !13807)
!13814 = !DILocation(line: 95, column: 2, scope: !13742, inlinedAt: !13813)
!13815 = !DILocation(line: 189, column: 1, scope: !13651)
!13816 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2330, file: !2330, line: 72, type: !13817, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13819)
!13817 = !DISubroutineType(types: !13818)
!13818 = !{!766, !766, !766}
!13819 = !{!13820, !13821, !13822}
!13820 = !DILocalVariable(name: "target", arg: 1, scope: !13816, file: !2330, line: 72, type: !766)
!13821 = !DILocalVariable(name: "limit", arg: 2, scope: !13816, file: !2330, line: 72, type: !766)
!13822 = !DILocalVariable(name: "new_prio", scope: !13816, file: !2330, line: 74, type: !109)
!13823 = !DILocation(line: 0, scope: !13816)
!13824 = !DILocation(line: 74, column: 17, scope: !13816)
!13825 = !DILocation(line: 76, column: 13, scope: !13816)
!13826 = !DILocation(line: 78, column: 2, scope: !13816)
!13827 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12825, file: !12825, line: 211, type: !13828, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13830)
!13828 = !DISubroutineType(types: !13829)
!13829 = !{!347, !109, !109}
!13830 = !{!13831, !13832}
!13831 = !DILocalVariable(name: "prio", arg: 1, scope: !13827, file: !12825, line: 211, type: !109)
!13832 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13827, file: !12825, line: 211, type: !109)
!13833 = !DILocation(line: 0, scope: !13827)
!13834 = !DILocation(line: 213, column: 9, scope: !13827)
!13835 = !DILocation(line: 213, column: 2, scope: !13827)
!13836 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2330, file: !2330, line: 81, type: !13837, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13839)
!13837 = !DISubroutineType(types: !13838)
!13838 = !{!347, !13613, !766}
!13839 = !{!13840, !13841}
!13840 = !DILocalVariable(name: "mutex", arg: 1, scope: !13836, file: !2330, line: 81, type: !13613)
!13841 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13836, file: !2330, line: 81, type: !766)
!13842 = !DILocation(line: 0, scope: !13836)
!13843 = !DILocation(line: 83, column: 13, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13836, file: !2330, line: 83, column: 6)
!13845 = !DILocation(line: 83, column: 25, scope: !13844)
!13846 = !DILocation(line: 83, column: 6, scope: !13844)
!13847 = !DILocation(line: 83, column: 30, scope: !13844)
!13848 = !DILocation(line: 83, column: 6, scope: !13836)
!13849 = !DILocation(line: 90, column: 10, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13844, file: !2330, line: 83, column: 43)
!13851 = !DILocation(line: 90, column: 3, scope: !13850)
!13852 = !DILocation(line: 93, column: 1, scope: !13836)
!13853 = distinct !DISubprogram(name: "z_waitq_head", scope: !13186, file: !13186, line: 52, type: !13854, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13856)
!13854 = !DISubroutineType(types: !13855)
!13855 = !{!2240, !2257}
!13856 = !{!13857}
!13857 = !DILocalVariable(name: "w", arg: 1, scope: !13853, file: !13186, line: 52, type: !2257)
!13858 = !DILocation(line: 0, scope: !13853)
!13859 = !DILocation(line: 54, column: 52, scope: !13853)
!13860 = !DILocation(line: 54, column: 28, scope: !13853)
!13861 = !DILocation(line: 54, column: 9, scope: !13853)
!13862 = !DILocation(line: 54, column: 2, scope: !13853)
!13863 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13864, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13866)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{!2225, !13642}
!13866 = !{!13867}
!13867 = !DILocalVariable(name: "list", arg: 1, scope: !13863, file: !127, line: 294, type: !13642)
!13868 = !DILocation(line: 0, scope: !13863)
!13869 = !DILocation(line: 296, column: 9, scope: !13863)
!13870 = !DILocation(line: 296, column: 49, scope: !13863)
!13871 = !DILocation(line: 296, column: 2, scope: !13863)
!13872 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13873, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13875)
!13873 = !DISubroutineType(types: !13874)
!13874 = !{!347, !13642}
!13875 = !{!13876}
!13876 = !DILocalVariable(name: "list", arg: 1, scope: !13872, file: !127, line: 266, type: !13642)
!13877 = !DILocation(line: 0, scope: !13872)
!13878 = !DILocation(line: 268, column: 15, scope: !13872)
!13879 = !DILocation(line: 268, column: 20, scope: !13872)
!13880 = !DILocation(line: 268, column: 2, scope: !13872)
!13881 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12825, file: !12825, line: 206, type: !13828, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13882)
!13882 = !{!13883, !13884}
!13883 = !DILocalVariable(name: "prio1", arg: 1, scope: !13881, file: !12825, line: 206, type: !109)
!13884 = !DILocalVariable(name: "prio2", arg: 2, scope: !13881, file: !12825, line: 206, type: !109)
!13885 = !DILocation(line: 0, scope: !13881)
!13886 = !DILocation(line: 208, column: 15, scope: !13881)
!13887 = !DILocation(line: 208, column: 2, scope: !13881)
!13888 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12825, file: !12825, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13889)
!13889 = !{!13890}
!13890 = !DILocalVariable(name: "prio", arg: 1, scope: !13888, file: !12825, line: 186, type: !109)
!13891 = !DILocation(line: 0, scope: !13888)
!13892 = !DILocation(line: 188, column: 9, scope: !13888)
!13893 = !DILocation(line: 188, column: 2, scope: !13888)
!13894 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12825, file: !12825, line: 181, type: !13895, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13897)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{!347, !109}
!13897 = !{!13898}
!13898 = !DILocalVariable(name: "prio", arg: 1, scope: !13894, file: !12825, line: 181, type: !109)
!13899 = !DILocation(line: 0, scope: !13894)
!13900 = !DILocation(line: 183, column: 14, scope: !13894)
!13901 = !DILocation(line: 183, column: 2, scope: !13894)
!13902 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2330, file: !2330, line: 201, type: !13611, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13903)
!13903 = !{!13904, !13905, !13906, !13907}
!13904 = !DILocalVariable(name: "mutex", arg: 1, scope: !13902, file: !2330, line: 201, type: !13613)
!13905 = !DILocalVariable(name: "new_owner", scope: !13902, file: !2330, line: 203, type: !2240)
!13906 = !DILocalVariable(name: "key", scope: !13902, file: !2330, line: 242, type: !13663)
!13907 = !DILabel(scope: !13902, name: "k_mutex_unlock_return", file: !2330, line: 270)
!13908 = !DILocation(line: 0, scope: !13902)
!13909 = !DILocation(line: 1031, column: 3, scope: !13674, inlinedAt: !13910)
!13910 = distinct !DILocation(line: 48, column: 10, scope: !13678, inlinedAt: !13911)
!13911 = distinct !DILocation(line: 205, column: 2, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !2330, line: 205, column: 2)
!13913 = distinct !DILexicalBlock(scope: !13902, file: !2330, line: 205, column: 2)
!13914 = !DILocation(line: 0, scope: !13674, inlinedAt: !13910)
!13915 = !DILocation(line: 48, column: 9, scope: !13678, inlinedAt: !13911)
!13916 = !DILocation(line: 205, column: 2, scope: !13913)
!13917 = !DILocation(line: 205, column: 2, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13912, file: !2330, line: 205, column: 2)
!13919 = !DILocation(line: 209, column: 2, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13902, file: !2330, line: 209, column: 2)
!13921 = !DILocation(line: 209, column: 2, scope: !13902)
!13922 = !DILocation(line: 217, column: 2, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13902, file: !2330, line: 217, column: 2)
!13924 = !DILocation(line: 217, column: 2, scope: !13902)
!13925 = !DILocation(line: 229, column: 2, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !2330, line: 229, column: 2)
!13927 = distinct !DILexicalBlock(scope: !13902, file: !2330, line: 229, column: 2)
!13928 = !DILocation(line: 229, column: 2, scope: !13927)
!13929 = !DILocation(line: 229, column: 2, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13926, file: !2330, line: 229, column: 2)
!13931 = !DILocation(line: 238, column: 20, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !2330, line: 237, column: 30)
!13933 = distinct !DILexicalBlock(scope: !13902, file: !2330, line: 237, column: 6)
!13934 = !DILocation(line: 239, column: 3, scope: !13932)
!13935 = !DILocation(line: 0, scope: !13689, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 242, column: 25, scope: !13902)
!13937 = !DILocation(line: 55, column: 2, scope: !13698, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 145, column: 10, scope: !13689, inlinedAt: !13936)
!13939 = !DILocation(line: 0, scope: !13698, inlinedAt: !13938)
!13940 = !DILocation(line: 148, column: 2, scope: !13706, inlinedAt: !13936)
!13941 = !DILocation(line: 148, column: 2, scope: !13707, inlinedAt: !13936)
!13942 = !DILocation(line: 148, column: 2, scope: !13710, inlinedAt: !13936)
!13943 = !DILocation(line: 160, column: 2, scope: !13689, inlinedAt: !13936)
!13944 = !DILocation(line: 244, column: 34, scope: !13902)
!13945 = !DILocation(line: 244, column: 2, scope: !13902)
!13946 = !DILocation(line: 247, column: 44, scope: !13902)
!13947 = !DILocation(line: 247, column: 14, scope: !13902)
!13948 = !DILocation(line: 249, column: 15, scope: !13902)
!13949 = !DILocation(line: 254, column: 16, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13902, file: !2330, line: 254, column: 6)
!13951 = !DILocation(line: 254, column: 6, scope: !13902)
!13952 = !DILocation(line: 260, column: 44, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13950, file: !2330, line: 254, column: 25)
!13954 = !DILocation(line: 260, column: 28, scope: !13953)
!13955 = !DILocation(line: 260, column: 26, scope: !13953)
!13956 = !DILocalVariable(name: "thread", arg: 1, scope: !13957, file: !12845, line: 65, type: !2240)
!13957 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12845, file: !12845, line: 65, type: !13958, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2222, retainedNodes: !13960)
!13958 = !DISubroutineType(types: !13959)
!13959 = !{null, !2240, !32}
!13960 = !{!13956, !13961}
!13961 = !DILocalVariable(name: "value", arg: 2, scope: !13957, file: !12845, line: 65, type: !32)
!13962 = !DILocation(line: 0, scope: !13957, inlinedAt: !13963)
!13963 = distinct !DILocation(line: 261, column: 3, scope: !13953)
!13964 = !DILocation(line: 67, column: 15, scope: !13957, inlinedAt: !13963)
!13965 = !DILocation(line: 67, column: 33, scope: !13957, inlinedAt: !13963)
!13966 = !DILocation(line: 262, column: 3, scope: !13953)
!13967 = !DILocation(line: 263, column: 3, scope: !13953)
!13968 = !DILocation(line: 264, column: 2, scope: !13953)
!13969 = !DILocation(line: 265, column: 21, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13950, file: !2330, line: 264, column: 9)
!13971 = !DILocation(line: 0, scope: !13728, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 266, column: 3, scope: !13970)
!13973 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13972)
!13974 = !DILocation(line: 194, column: 2, scope: !13737, inlinedAt: !13972)
!13975 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13972)
!13976 = !DILocation(line: 0, scope: !13742, inlinedAt: !13977)
!13977 = distinct !DILocation(line: 215, column: 2, scope: !13728, inlinedAt: !13972)
!13978 = !DILocation(line: 95, column: 2, scope: !13742, inlinedAt: !13977)
!13979 = !DILocation(line: 274, column: 1, scope: !13902)
!13980 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2444, file: !2444, line: 93, type: !13981, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13983)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{!766, !2336, !2336}
!13983 = !{!13984, !13985, !13986, !13987}
!13984 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13980, file: !2444, line: 93, type: !2336)
!13985 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13980, file: !2444, line: 94, type: !2336)
!13986 = !DILocalVariable(name: "b1", scope: !13980, file: !2444, line: 97, type: !766)
!13987 = !DILocalVariable(name: "b2", scope: !13980, file: !2444, line: 98, type: !766)
!13988 = !DILocation(line: 0, scope: !13980)
!13989 = !DILocation(line: 97, column: 30, scope: !13980)
!13990 = !DILocation(line: 98, column: 30, scope: !13980)
!13991 = !DILocation(line: 100, column: 9, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13980, file: !2444, line: 100, column: 6)
!13993 = !DILocation(line: 100, column: 6, scope: !13980)
!13994 = !DILocation(line: 125, column: 1, scope: !13980)
!13995 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2444, file: !2444, line: 428, type: !13996, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13998)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{null, !2336}
!13998 = !{!13999}
!13999 = !DILocalVariable(name: "curr", arg: 1, scope: !13995, file: !2444, line: 428, type: !2336)
!14000 = !DILocation(line: 0, scope: !13995)
!14001 = !DILocation(line: 434, column: 6, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13995, file: !2444, line: 434, column: 6)
!14003 = !DILocation(line: 434, column: 23, scope: !14002)
!14004 = !DILocation(line: 434, column: 6, scope: !13995)
!14005 = !DILocation(line: 435, column: 50, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14002, file: !2444, line: 434, column: 29)
!14007 = !DILocation(line: 435, column: 48, scope: !14006)
!14008 = !DILocation(line: 435, column: 29, scope: !14006)
!14009 = !DILocation(line: 436, column: 24, scope: !14006)
!14010 = !DILocation(line: 436, column: 3, scope: !14006)
!14011 = !DILocation(line: 437, column: 2, scope: !14006)
!14012 = !DILocation(line: 438, column: 1, scope: !13995)
!14013 = distinct !DISubprogram(name: "slice_time", scope: !2444, file: !2444, line: 407, type: !14014, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14016)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{!109, !2336}
!14016 = !{!14017, !14018}
!14017 = !DILocalVariable(name: "curr", arg: 1, scope: !14013, file: !2444, line: 407, type: !2336)
!14018 = !DILocalVariable(name: "ret", scope: !14013, file: !2444, line: 409, type: !109)
!14019 = !DILocation(line: 0, scope: !14013)
!14020 = !DILocation(line: 409, column: 12, scope: !14013)
!14021 = !DILocation(line: 416, column: 2, scope: !14013)
!14022 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2444, file: !2444, line: 440, type: !14023, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14025)
!14023 = !DISubroutineType(types: !14024)
!14024 = !{null, !766, !109}
!14025 = !{!14026, !14027, !14028, !14034}
!14026 = !DILocalVariable(name: "slice", arg: 1, scope: !14022, file: !2444, line: 440, type: !766)
!14027 = !DILocalVariable(name: "prio", arg: 2, scope: !14022, file: !2444, line: 440, type: !109)
!14028 = !DILocalVariable(name: "__i", scope: !14029, file: !2444, line: 442, type: !14030)
!14029 = distinct !DILexicalBlock(scope: !14022, file: !2444, line: 442, column: 2)
!14030 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !14031)
!14031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !14032)
!14032 = !{!14033}
!14033 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14031, file: !253, line: 33, baseType: !109, size: 32)
!14034 = !DILocalVariable(name: "__key", scope: !14029, file: !2444, line: 442, type: !14030)
!14035 = !DILocation(line: 0, scope: !14022)
!14036 = !DILocation(line: 0, scope: !14029)
!14037 = !DILocalVariable(name: "l", arg: 1, scope: !14038, file: !253, line: 136, type: !14041)
!14038 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14039, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14042)
!14039 = !DISubroutineType(types: !14040)
!14040 = !{!14030, !14041}
!14041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!14042 = !{!14037, !14043}
!14043 = !DILocalVariable(name: "k", scope: !14038, file: !253, line: 139, type: !14030)
!14044 = !DILocation(line: 0, scope: !14038, inlinedAt: !14045)
!14045 = distinct !DILocation(line: 442, column: 2, scope: !14029)
!14046 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14051)
!14047 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14048)
!14048 = !{!14049, !14050}
!14049 = !DILocalVariable(name: "key", scope: !14047, file: !6096, line: 44, type: !32)
!14050 = !DILocalVariable(name: "tmp", scope: !14047, file: !6096, line: 53, type: !32)
!14051 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14045)
!14052 = !{i64 2270141}
!14053 = !DILocation(line: 0, scope: !14047, inlinedAt: !14051)
!14054 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14045)
!14055 = distinct !DILexicalBlock(scope: !14056, file: !253, line: 148, column: 2)
!14056 = distinct !DILexicalBlock(scope: !14038, file: !253, line: 148, column: 2)
!14057 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14045)
!14058 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14045)
!14059 = distinct !DILexicalBlock(scope: !14055, file: !253, line: 148, column: 2)
!14060 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14045)
!14061 = !DILocation(line: 443, column: 29, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !2444, line: 442, column: 26)
!14063 = distinct !DILexicalBlock(scope: !14029, file: !2444, line: 442, column: 2)
!14064 = !DILocation(line: 444, column: 17, scope: !14062)
!14065 = !DILocation(line: 445, column: 51, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !2444, line: 445, column: 7)
!14067 = !DILocation(line: 445, column: 7, scope: !14062)
!14068 = !DILocation(line: 0, scope: !14062)
!14069 = !DILocation(line: 451, column: 18, scope: !14062)
!14070 = !DILocation(line: 452, column: 3, scope: !14062)
!14071 = !DILocalVariable(name: "key", arg: 2, scope: !14072, file: !253, line: 190, type: !14030)
!14072 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14073, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14075)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{null, !14041, !14030}
!14075 = !{!14076, !14071}
!14076 = !DILocalVariable(name: "l", arg: 1, scope: !14072, file: !253, line: 189, type: !14041)
!14077 = !DILocation(line: 0, scope: !14072, inlinedAt: !14078)
!14078 = distinct !DILocation(line: 442, column: 2, scope: !14063)
!14079 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14078)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !253, line: 194, column: 2)
!14081 = distinct !DILexicalBlock(scope: !14072, file: !253, line: 194, column: 2)
!14082 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14078)
!14083 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14078)
!14084 = distinct !DILexicalBlock(scope: !14080, file: !253, line: 194, column: 2)
!14085 = !DILocalVariable(name: "key", arg: 1, scope: !14086, file: !6096, line: 84, type: !32)
!14086 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14087)
!14087 = !{!14085}
!14088 = !DILocation(line: 0, scope: !14086, inlinedAt: !14089)
!14089 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14078)
!14090 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14089)
!14091 = !{i64 2270958}
!14092 = !DILocation(line: 454, column: 1, scope: !14022)
!14093 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13444, file: !13444, line: 389, type: !7704, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14094)
!14094 = !{!14095}
!14095 = !DILocalVariable(name: "t", arg: 1, scope: !14093, file: !13444, line: 389, type: !110)
!14096 = !DILocation(line: 0, scope: !14093)
!14097 = !DILocalVariable(name: "t", arg: 1, scope: !14098, file: !13444, line: 102, type: !111)
!14098 = distinct !DISubprogram(name: "z_tmcvt", scope: !13444, file: !13444, line: 102, type: !13452, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14099)
!14099 = !{!14097, !14100, !14101, !14102, !14103, !14104, !14105, !14106, !14107, !14108, !14109}
!14100 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14098, file: !13444, line: 102, type: !110)
!14101 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14098, file: !13444, line: 103, type: !110)
!14102 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14098, file: !13444, line: 103, type: !347)
!14103 = !DILocalVariable(name: "result32", arg: 5, scope: !14098, file: !13444, line: 104, type: !347)
!14104 = !DILocalVariable(name: "round_up", arg: 6, scope: !14098, file: !13444, line: 104, type: !347)
!14105 = !DILocalVariable(name: "round_off", arg: 7, scope: !14098, file: !13444, line: 105, type: !347)
!14106 = !DILocalVariable(name: "mul_ratio", scope: !14098, file: !13444, line: 107, type: !347)
!14107 = !DILocalVariable(name: "div_ratio", scope: !14098, file: !13444, line: 109, type: !347)
!14108 = !DILocalVariable(name: "off", scope: !14098, file: !13444, line: 116, type: !111)
!14109 = !DILocalVariable(name: "rdivisor", scope: !14110, file: !13444, line: 119, type: !110)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !13444, line: 118, column: 18)
!14111 = distinct !DILexicalBlock(scope: !14098, file: !13444, line: 118, column: 6)
!14112 = !DILocation(line: 0, scope: !14098, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 392, column: 9, scope: !14093)
!14114 = !DILocation(line: 143, column: 25, scope: !14115, inlinedAt: !14113)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !13444, line: 142, column: 17)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !13444, line: 142, column: 7)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !13444, line: 141, column: 24)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !13444, line: 141, column: 13)
!14119 = distinct !DILexicalBlock(scope: !14098, file: !13444, line: 134, column: 6)
!14120 = !DILocation(line: 392, column: 2, scope: !14093)
!14121 = distinct !DISubprogram(name: "z_time_slice", scope: !2444, file: !2444, line: 502, type: !8357, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14122)
!14122 = !{!14123, !14124}
!14123 = !DILocalVariable(name: "ticks", arg: 1, scope: !14121, file: !2444, line: 502, type: !109)
!14124 = !DILocalVariable(name: "key", scope: !14121, file: !2444, line: 511, type: !14030)
!14125 = !DILocation(line: 0, scope: !14121)
!14126 = !DILocation(line: 0, scope: !14038, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 511, column: 25, scope: !14121)
!14128 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14127)
!14130 = !DILocation(line: 0, scope: !14047, inlinedAt: !14129)
!14131 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14127)
!14132 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14127)
!14133 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14127)
!14134 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14127)
!14135 = !DILocation(line: 514, column: 6, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14121, file: !2444, line: 514, column: 6)
!14137 = !DILocation(line: 514, column: 25, scope: !14136)
!14138 = !DILocation(line: 514, column: 22, scope: !14136)
!14139 = !DILocation(line: 514, column: 6, scope: !14121)
!14140 = !DILocation(line: 515, column: 3, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14136, file: !2444, line: 514, column: 35)
!14142 = !DILocation(line: 0, scope: !14072, inlinedAt: !14143)
!14143 = distinct !DILocation(line: 516, column: 3, scope: !14141)
!14144 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14143)
!14145 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14143)
!14146 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14143)
!14147 = !DILocation(line: 0, scope: !14086, inlinedAt: !14148)
!14148 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14143)
!14149 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14148)
!14150 = !DILocation(line: 517, column: 3, scope: !14141)
!14151 = !DILocation(line: 519, column: 18, scope: !14121)
!14152 = !DILocation(line: 522, column: 6, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14121, file: !2444, line: 522, column: 6)
!14154 = !DILocation(line: 522, column: 27, scope: !14153)
!14155 = !DILocation(line: 522, column: 30, scope: !14153)
!14156 = !DILocation(line: 522, column: 6, scope: !14121)
!14157 = !DILocation(line: 523, column: 30, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !2444, line: 523, column: 7)
!14159 = distinct !DILexicalBlock(scope: !14153, file: !2444, line: 522, column: 51)
!14160 = !DILocation(line: 523, column: 13, scope: !14158)
!14161 = !DILocation(line: 523, column: 7, scope: !14159)
!14162 = !DILocation(line: 530, column: 10, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14158, file: !2444, line: 523, column: 43)
!14164 = !DILocation(line: 531, column: 3, scope: !14163)
!14165 = !DILocation(line: 532, column: 30, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14158, file: !2444, line: 531, column: 10)
!14167 = !DILocation(line: 535, column: 29, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14153, file: !2444, line: 534, column: 9)
!14169 = !DILocation(line: 0, scope: !14072, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 537, column: 2, scope: !14121)
!14171 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14170)
!14172 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14170)
!14173 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14170)
!14174 = !DILocation(line: 0, scope: !14086, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14170)
!14176 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14175)
!14177 = !DILocation(line: 538, column: 1, scope: !14121)
!14178 = distinct !DISubprogram(name: "sliceable", scope: !2444, file: !2444, line: 468, type: !14179, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14181)
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!347, !2336}
!14181 = !{!14182, !14183}
!14182 = !DILocalVariable(name: "thread", arg: 1, scope: !14178, file: !2444, line: 468, type: !2336)
!14183 = !DILocalVariable(name: "ret", scope: !14178, file: !2444, line: 470, type: !347)
!14184 = !DILocation(line: 0, scope: !14178)
!14185 = !DILocation(line: 470, column: 13, scope: !14178)
!14186 = !DILocation(line: 471, column: 3, scope: !14178)
!14187 = !DILocation(line: 471, column: 7, scope: !14178)
!14188 = !DILocation(line: 472, column: 3, scope: !14178)
!14189 = !DILocation(line: 472, column: 37, scope: !14178)
!14190 = !DILocation(line: 472, column: 24, scope: !14178)
!14191 = !DILocation(line: 472, column: 43, scope: !14178)
!14192 = !DILocation(line: 472, column: 7, scope: !14178)
!14193 = !DILocation(line: 473, column: 3, scope: !14178)
!14194 = !DILocation(line: 473, column: 7, scope: !14178)
!14195 = !DILocation(line: 473, column: 6, scope: !14178)
!14196 = !DILocation(line: 479, column: 2, scope: !14178)
!14197 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2444, file: !2444, line: 482, type: !14198, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14200)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!14030, !14030}
!14200 = !{!14201, !14202}
!14201 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14197, file: !2444, line: 482, type: !14030)
!14202 = !DILocalVariable(name: "curr", scope: !14197, file: !2444, line: 484, type: !2336)
!14203 = !DILocation(line: 0, scope: !14197)
!14204 = !DILocation(line: 484, column: 26, scope: !14197)
!14205 = !DILocation(line: 493, column: 7, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14197, file: !2444, line: 493, column: 6)
!14207 = !DILocation(line: 493, column: 6, scope: !14197)
!14208 = !DILocation(line: 494, column: 3, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14206, file: !2444, line: 493, column: 49)
!14210 = !DILocation(line: 495, column: 2, scope: !14209)
!14211 = !DILocation(line: 496, column: 2, scope: !14197)
!14212 = !DILocation(line: 499, column: 1, scope: !14197)
!14213 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12825, file: !12825, line: 106, type: !14179, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14214)
!14214 = !{!14215, !14216}
!14215 = !DILocalVariable(name: "thread", arg: 1, scope: !14213, file: !12825, line: 106, type: !2336)
!14216 = !DILocalVariable(name: "state", scope: !14213, file: !12825, line: 108, type: !180)
!14217 = !DILocation(line: 0, scope: !14213)
!14218 = !DILocation(line: 108, column: 31, scope: !14213)
!14219 = !DILocation(line: 110, column: 16, scope: !14213)
!14220 = !DILocation(line: 111, column: 41, scope: !14213)
!14221 = !DILocation(line: 110, column: 2, scope: !14213)
!14222 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2444, file: !2444, line: 393, type: !13996, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14223)
!14223 = !{!14224}
!14224 = !DILocalVariable(name: "thread", arg: 1, scope: !14222, file: !2444, line: 393, type: !2336)
!14225 = !DILocation(line: 0, scope: !14222)
!14226 = !DILocation(line: 395, column: 6, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14222, file: !2444, line: 395, column: 6)
!14228 = !DILocation(line: 395, column: 6, scope: !14222)
!14229 = !DILocalVariable(name: "thread", arg: 1, scope: !14230, file: !2444, line: 264, type: !2336)
!14230 = distinct !DISubprogram(name: "dequeue_thread", scope: !2444, file: !2444, line: 264, type: !13996, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14231)
!14231 = !{!14229}
!14232 = !DILocation(line: 0, scope: !14230, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 396, column: 3, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14227, file: !2444, line: 395, column: 34)
!14235 = !DILocation(line: 266, column: 15, scope: !14230, inlinedAt: !14233)
!14236 = !DILocation(line: 266, column: 28, scope: !14230, inlinedAt: !14233)
!14237 = !DILocalVariable(name: "thread", arg: 1, scope: !14238, file: !2444, line: 232, type: !2336)
!14238 = distinct !DISubprogram(name: "runq_remove", scope: !2444, file: !2444, line: 232, type: !13996, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14239)
!14239 = !{!14237}
!14240 = !DILocation(line: 0, scope: !14238, inlinedAt: !14241)
!14241 = distinct !DILocation(line: 268, column: 3, scope: !14242, inlinedAt: !14233)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !2444, line: 267, column: 35)
!14243 = distinct !DILexicalBlock(scope: !14230, file: !2444, line: 267, column: 6)
!14244 = !DILocation(line: 234, column: 2, scope: !14238, inlinedAt: !14241)
!14245 = !DILocation(line: 397, column: 2, scope: !14234)
!14246 = !DILocalVariable(name: "thread", arg: 1, scope: !14247, file: !2444, line: 250, type: !2336)
!14247 = distinct !DISubprogram(name: "queue_thread", scope: !2444, file: !2444, line: 250, type: !13996, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14248)
!14248 = !{!14246}
!14249 = !DILocation(line: 0, scope: !14247, inlinedAt: !14250)
!14250 = distinct !DILocation(line: 398, column: 2, scope: !14222)
!14251 = !DILocation(line: 252, column: 15, scope: !14247, inlinedAt: !14250)
!14252 = !DILocation(line: 252, column: 28, scope: !14247, inlinedAt: !14250)
!14253 = !DILocalVariable(name: "thread", arg: 1, scope: !14254, file: !2444, line: 227, type: !2336)
!14254 = distinct !DISubprogram(name: "runq_add", scope: !2444, file: !2444, line: 227, type: !13996, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14255)
!14255 = !{!14253}
!14256 = !DILocation(line: 0, scope: !14254, inlinedAt: !14257)
!14257 = distinct !DILocation(line: 254, column: 3, scope: !14258, inlinedAt: !14250)
!14258 = distinct !DILexicalBlock(scope: !14259, file: !2444, line: 253, column: 35)
!14259 = distinct !DILexicalBlock(scope: !14247, file: !2444, line: 253, column: 6)
!14260 = !DILocalVariable(name: "pq", arg: 1, scope: !14261, file: !2444, line: 181, type: !14264)
!14261 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2444, file: !2444, line: 181, type: !14262, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14265)
!14262 = !DISubroutineType(types: !14263)
!14263 = !{null, !14264, !2336}
!14264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!14265 = !{!14260, !14266, !14267}
!14266 = !DILocalVariable(name: "thread", arg: 2, scope: !14261, file: !2444, line: 182, type: !2336)
!14267 = !DILocalVariable(name: "t", scope: !14261, file: !2444, line: 184, type: !2336)
!14268 = !DILocation(line: 0, scope: !14261, inlinedAt: !14269)
!14269 = distinct !DILocation(line: 229, column: 2, scope: !14254, inlinedAt: !14257)
!14270 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !14269)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !2444, line: 186, column: 2)
!14272 = distinct !DILexicalBlock(scope: !14261, file: !2444, line: 186, column: 2)
!14273 = !DILocation(line: 186, column: 2, scope: !14272, inlinedAt: !14269)
!14274 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !14269)
!14275 = distinct !DILexicalBlock(scope: !14271, file: !2444, line: 186, column: 2)
!14276 = !DILocation(line: 188, column: 2, scope: !14277, inlinedAt: !14269)
!14277 = distinct !DILexicalBlock(scope: !14261, file: !2444, line: 188, column: 2)
!14278 = !DILocation(line: 188, column: 2, scope: !14279, inlinedAt: !14269)
!14279 = distinct !DILexicalBlock(scope: !14277, file: !2444, line: 188, column: 2)
!14280 = !DILocation(line: 0, scope: !14277, inlinedAt: !14269)
!14281 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !14269)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !2444, line: 189, column: 7)
!14283 = distinct !DILexicalBlock(scope: !14279, file: !2444, line: 188, column: 56)
!14284 = !DILocation(line: 189, column: 35, scope: !14282, inlinedAt: !14269)
!14285 = !DILocation(line: 189, column: 7, scope: !14283, inlinedAt: !14269)
!14286 = !DILocation(line: 191, column: 21, scope: !14287, inlinedAt: !14269)
!14287 = distinct !DILexicalBlock(scope: !14282, file: !2444, line: 189, column: 40)
!14288 = !DILocation(line: 190, column: 4, scope: !14287, inlinedAt: !14269)
!14289 = !DILocation(line: 192, column: 4, scope: !14287, inlinedAt: !14269)
!14290 = distinct !{!14290, !14276, !14291}
!14291 = !DILocation(line: 194, column: 2, scope: !14277, inlinedAt: !14269)
!14292 = !DILocation(line: 196, column: 37, scope: !14261, inlinedAt: !14269)
!14293 = !DILocation(line: 196, column: 2, scope: !14261, inlinedAt: !14269)
!14294 = !DILocation(line: 197, column: 1, scope: !14261, inlinedAt: !14269)
!14295 = !DILocation(line: 399, column: 25, scope: !14222)
!14296 = !DILocation(line: 399, column: 22, scope: !14222)
!14297 = !DILocation(line: 399, column: 2, scope: !14222)
!14298 = !DILocation(line: 400, column: 1, scope: !14222)
!14299 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12825, file: !12825, line: 136, type: !14179, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14300)
!14300 = !{!14301}
!14301 = !DILocalVariable(name: "thread", arg: 1, scope: !14299, file: !12825, line: 136, type: !2336)
!14302 = !DILocation(line: 0, scope: !14299)
!14303 = !DILocation(line: 138, column: 9, scope: !14299)
!14304 = !DILocation(line: 138, column: 2, scope: !14299)
!14305 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2444, file: !2444, line: 1137, type: !14262, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14306)
!14306 = !{!14307, !14308}
!14307 = !DILocalVariable(name: "pq", arg: 1, scope: !14305, file: !2444, line: 1137, type: !14264)
!14308 = !DILocalVariable(name: "thread", arg: 2, scope: !14305, file: !2444, line: 1137, type: !2336)
!14309 = !DILocation(line: 0, scope: !14305)
!14310 = !DILocation(line: 1139, column: 2, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !2444, line: 1139, column: 2)
!14312 = distinct !DILexicalBlock(scope: !14305, file: !2444, line: 1139, column: 2)
!14313 = !DILocation(line: 1139, column: 2, scope: !14312)
!14314 = !DILocation(line: 1139, column: 2, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14311, file: !2444, line: 1139, column: 2)
!14316 = !DILocation(line: 1141, column: 33, scope: !14305)
!14317 = !DILocation(line: 1141, column: 2, scope: !14305)
!14318 = !DILocation(line: 1142, column: 1, scope: !14305)
!14319 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12825, file: !12825, line: 83, type: !14179, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14320)
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "thread", arg: 1, scope: !14319, file: !12825, line: 83, type: !2336)
!14322 = !DILocation(line: 0, scope: !14319)
!14323 = !DILocation(line: 89, column: 16, scope: !14319)
!14324 = !DILocation(line: 89, column: 2, scope: !14319)
!14325 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14326, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14328)
!14326 = !DISubroutineType(types: !14327)
!14327 = !{!2440, !14264}
!14328 = !{!14329}
!14329 = !DILocalVariable(name: "list", arg: 1, scope: !14325, file: !127, line: 294, type: !14264)
!14330 = !DILocation(line: 0, scope: !14325)
!14331 = !DILocation(line: 296, column: 9, scope: !14325)
!14332 = !DILocation(line: 296, column: 49, scope: !14325)
!14333 = !DILocation(line: 296, column: 2, scope: !14325)
!14334 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14335, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14337)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{null, !2440, !2440}
!14337 = !{!14338, !14339, !14340}
!14338 = !DILocalVariable(name: "successor", arg: 1, scope: !14334, file: !127, line: 443, type: !2440)
!14339 = !DILocalVariable(name: "node", arg: 2, scope: !14334, file: !127, line: 443, type: !2440)
!14340 = !DILocalVariable(name: "prev", scope: !14334, file: !127, line: 445, type: !14341)
!14341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2440)
!14342 = !DILocation(line: 0, scope: !14334)
!14343 = !DILocation(line: 445, column: 39, scope: !14334)
!14344 = !DILocation(line: 447, column: 8, scope: !14334)
!14345 = !DILocation(line: 447, column: 13, scope: !14334)
!14346 = !DILocation(line: 448, column: 8, scope: !14334)
!14347 = !DILocation(line: 448, column: 13, scope: !14334)
!14348 = !DILocation(line: 449, column: 8, scope: !14334)
!14349 = !DILocation(line: 449, column: 13, scope: !14334)
!14350 = !DILocation(line: 450, column: 18, scope: !14334)
!14351 = !DILocation(line: 451, column: 1, scope: !14334)
!14352 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14353, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14355)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{!2440, !14264, !2440}
!14355 = !{!14356, !14357}
!14356 = !DILocalVariable(name: "list", arg: 1, scope: !14352, file: !127, line: 341, type: !14264)
!14357 = !DILocalVariable(name: "node", arg: 2, scope: !14352, file: !127, line: 342, type: !2440)
!14358 = !DILocation(line: 0, scope: !14352)
!14359 = !DILocation(line: 344, column: 15, scope: !14352)
!14360 = !DILocation(line: 344, column: 9, scope: !14352)
!14361 = !DILocation(line: 344, column: 26, scope: !14352)
!14362 = !DILocation(line: 344, column: 2, scope: !14352)
!14363 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14364, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14366)
!14364 = !DISubroutineType(types: !14365)
!14365 = !{null, !14264, !2440}
!14366 = !{!14367, !14368, !14369}
!14367 = !DILocalVariable(name: "list", arg: 1, scope: !14363, file: !127, line: 404, type: !14264)
!14368 = !DILocalVariable(name: "node", arg: 2, scope: !14363, file: !127, line: 404, type: !2440)
!14369 = !DILocalVariable(name: "tail", scope: !14363, file: !127, line: 406, type: !14341)
!14370 = !DILocation(line: 0, scope: !14363)
!14371 = !DILocation(line: 406, column: 34, scope: !14363)
!14372 = !DILocation(line: 408, column: 8, scope: !14363)
!14373 = !DILocation(line: 408, column: 13, scope: !14363)
!14374 = !DILocation(line: 409, column: 8, scope: !14363)
!14375 = !DILocation(line: 409, column: 13, scope: !14363)
!14376 = !DILocation(line: 411, column: 8, scope: !14363)
!14377 = !DILocation(line: 411, column: 13, scope: !14363)
!14378 = !DILocation(line: 412, column: 13, scope: !14363)
!14379 = !DILocation(line: 413, column: 1, scope: !14363)
!14380 = distinct !DISubprogram(name: "update_cache", scope: !2444, file: !2444, line: 559, type: !8357, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14381)
!14381 = !{!14382, !14383}
!14382 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14380, file: !2444, line: 559, type: !109)
!14383 = !DILocalVariable(name: "thread", scope: !14380, file: !2444, line: 562, type: !2336)
!14384 = !DILocation(line: 0, scope: !14380)
!14385 = !DILocation(line: 239, column: 9, scope: !14386, inlinedAt: !14389)
!14386 = distinct !DISubprogram(name: "runq_best", scope: !2444, file: !2444, line: 237, type: !14387, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!14387 = !DISubroutineType(types: !14388)
!14388 = !{!2336}
!14389 = distinct !DILocation(line: 314, column: 28, scope: !14390, inlinedAt: !14393)
!14390 = distinct !DISubprogram(name: "next_up", scope: !2444, file: !2444, line: 312, type: !14387, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14391)
!14391 = !{!14392}
!14392 = !DILocalVariable(name: "thread", scope: !14390, file: !2444, line: 314, type: !2336)
!14393 = distinct !DILocation(line: 562, column: 28, scope: !14380)
!14394 = !DILocation(line: 0, scope: !14390, inlinedAt: !14393)
!14395 = !DILocation(line: 340, column: 17, scope: !14390, inlinedAt: !14393)
!14396 = !DILocation(line: 340, column: 9, scope: !14390, inlinedAt: !14393)
!14397 = !DILocalVariable(name: "thread", arg: 1, scope: !14398, file: !2444, line: 127, type: !2336)
!14398 = distinct !DISubprogram(name: "should_preempt", scope: !2444, file: !2444, line: 127, type: !14399, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!347, !2336, !109}
!14401 = !{!14397, !14402}
!14402 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14398, file: !2444, line: 128, type: !109)
!14403 = !DILocation(line: 0, scope: !14398, inlinedAt: !14404)
!14404 = distinct !DILocation(line: 564, column: 6, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14380, file: !2444, line: 564, column: 6)
!14406 = !DILocation(line: 133, column: 17, scope: !14407, inlinedAt: !14404)
!14407 = distinct !DILexicalBlock(scope: !14398, file: !2444, line: 133, column: 6)
!14408 = !DILocation(line: 0, scope: !14405)
!14409 = !DILocation(line: 133, column: 6, scope: !14398, inlinedAt: !14404)
!14410 = !DILocation(line: 137, column: 2, scope: !14411, inlinedAt: !14404)
!14411 = distinct !DILexicalBlock(scope: !14412, file: !2444, line: 137, column: 2)
!14412 = distinct !DILexicalBlock(scope: !14398, file: !2444, line: 137, column: 2)
!14413 = !DILocation(line: 137, column: 2, scope: !14412, inlinedAt: !14404)
!14414 = !DILocation(line: 137, column: 2, scope: !14415, inlinedAt: !14404)
!14415 = distinct !DILexicalBlock(scope: !14411, file: !2444, line: 137, column: 2)
!14416 = !DILocation(line: 140, column: 6, scope: !14417, inlinedAt: !14404)
!14417 = distinct !DILexicalBlock(scope: !14398, file: !2444, line: 140, column: 6)
!14418 = !DILocation(line: 140, column: 6, scope: !14398, inlinedAt: !14404)
!14419 = !DILocation(line: 150, column: 9, scope: !14420, inlinedAt: !14404)
!14420 = distinct !DILexicalBlock(scope: !14398, file: !2444, line: 149, column: 6)
!14421 = !DILocation(line: 149, column: 6, scope: !14398, inlinedAt: !14404)
!14422 = !DILocation(line: 157, column: 6, scope: !14423, inlinedAt: !14404)
!14423 = distinct !DILexicalBlock(scope: !14398, file: !2444, line: 157, column: 6)
!14424 = !DILocation(line: 564, column: 6, scope: !14380)
!14425 = !DILocation(line: 566, column: 14, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !2444, line: 566, column: 7)
!14427 = distinct !DILexicalBlock(scope: !14405, file: !2444, line: 564, column: 42)
!14428 = !DILocation(line: 566, column: 7, scope: !14427)
!14429 = !DILocation(line: 567, column: 4, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14426, file: !2444, line: 566, column: 27)
!14431 = !DILocation(line: 568, column: 3, scope: !14430)
!14432 = !DILocation(line: 585, column: 1, scope: !14380)
!14433 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2444, file: !2444, line: 1144, type: !14434, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14436)
!14434 = !DISubroutineType(types: !14435)
!14435 = !{!2336, !14264}
!14436 = !{!14437, !14438, !14439}
!14437 = !DILocalVariable(name: "pq", arg: 1, scope: !14433, file: !2444, line: 1144, type: !14264)
!14438 = !DILocalVariable(name: "thread", scope: !14433, file: !2444, line: 1146, type: !2336)
!14439 = !DILocalVariable(name: "n", scope: !14433, file: !2444, line: 1147, type: !2440)
!14440 = !DILocation(line: 0, scope: !14433)
!14441 = !DILocation(line: 1147, column: 19, scope: !14433)
!14442 = !DILocation(line: 1152, column: 2, scope: !14433)
!14443 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12825, file: !12825, line: 115, type: !14179, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14444)
!14444 = !{!14445}
!14445 = !DILocalVariable(name: "thread", arg: 1, scope: !14443, file: !12825, line: 115, type: !2336)
!14446 = !DILocation(line: 0, scope: !14443)
!14447 = !DILocation(line: 117, column: 46, scope: !14443)
!14448 = !DILocation(line: 117, column: 10, scope: !14443)
!14449 = !DILocation(line: 117, column: 9, scope: !14443)
!14450 = !DILocation(line: 117, column: 2, scope: !14443)
!14451 = distinct !DISubprogram(name: "is_preempt", scope: !2444, file: !2444, line: 62, type: !14014, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14452)
!14452 = !{!14453}
!14453 = !DILocalVariable(name: "thread", arg: 1, scope: !14451, file: !2444, line: 62, type: !2336)
!14454 = !DILocation(line: 0, scope: !14451)
!14455 = !DILocation(line: 65, column: 22, scope: !14451)
!14456 = !DILocation(line: 65, column: 30, scope: !14451)
!14457 = !DILocation(line: 65, column: 2, scope: !14451)
!14458 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13254, file: !13254, line: 35, type: !14459, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14463)
!14459 = !DISubroutineType(types: !14460)
!14460 = !{!347, !14461}
!14461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14462, size: 32)
!14462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2387)
!14463 = !{!14464}
!14464 = !DILocalVariable(name: "to", arg: 1, scope: !14458, file: !13254, line: 35, type: !14461)
!14465 = !DILocation(line: 0, scope: !14458)
!14466 = !DILocation(line: 37, column: 35, scope: !14458)
!14467 = !DILocation(line: 37, column: 10, scope: !14458)
!14468 = !DILocation(line: 37, column: 9, scope: !14458)
!14469 = !DILocation(line: 37, column: 2, scope: !14458)
!14470 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14471, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14475)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{!347, !14473}
!14473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14474, size: 32)
!14474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2346)
!14475 = !{!14476}
!14476 = !DILocalVariable(name: "node", arg: 1, scope: !14470, file: !127, line: 225, type: !14473)
!14477 = !DILocation(line: 0, scope: !14470)
!14478 = !DILocation(line: 227, column: 15, scope: !14470)
!14479 = !DILocation(line: 227, column: 20, scope: !14470)
!14480 = !DILocation(line: 227, column: 2, scope: !14470)
!14481 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14353, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14482)
!14482 = !{!14483, !14484}
!14483 = !DILocalVariable(name: "list", arg: 1, scope: !14481, file: !127, line: 325, type: !14264)
!14484 = !DILocalVariable(name: "node", arg: 2, scope: !14481, file: !127, line: 326, type: !2440)
!14485 = !DILocation(line: 0, scope: !14481)
!14486 = !DILocation(line: 328, column: 24, scope: !14481)
!14487 = !DILocation(line: 328, column: 15, scope: !14481)
!14488 = !DILocation(line: 328, column: 9, scope: !14481)
!14489 = !DILocation(line: 328, column: 45, scope: !14481)
!14490 = !DILocation(line: 328, column: 2, scope: !14481)
!14491 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14492, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14494)
!14492 = !DISubroutineType(types: !14493)
!14493 = !{!347, !14264}
!14494 = !{!14495}
!14495 = !DILocalVariable(name: "list", arg: 1, scope: !14491, file: !127, line: 266, type: !14264)
!14496 = !DILocation(line: 0, scope: !14491)
!14497 = !DILocation(line: 268, column: 15, scope: !14491)
!14498 = !DILocation(line: 268, column: 20, scope: !14491)
!14499 = !DILocation(line: 268, column: 2, scope: !14491)
!14500 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14501, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14503)
!14501 = !DISubroutineType(types: !14502)
!14502 = !{null, !2440}
!14503 = !{!14504, !14505, !14506}
!14504 = !DILocalVariable(name: "node", arg: 1, scope: !14500, file: !127, line: 496, type: !2440)
!14505 = !DILocalVariable(name: "prev", scope: !14500, file: !127, line: 498, type: !14341)
!14506 = !DILocalVariable(name: "next", scope: !14500, file: !127, line: 499, type: !14341)
!14507 = !DILocation(line: 0, scope: !14500)
!14508 = !DILocation(line: 498, column: 34, scope: !14500)
!14509 = !DILocation(line: 499, column: 34, scope: !14500)
!14510 = !DILocation(line: 501, column: 8, scope: !14500)
!14511 = !DILocation(line: 501, column: 13, scope: !14500)
!14512 = !DILocation(line: 502, column: 8, scope: !14500)
!14513 = !DILocation(line: 502, column: 13, scope: !14500)
!14514 = !DILocation(line: 503, column: 2, scope: !14500)
!14515 = !DILocation(line: 504, column: 1, scope: !14500)
!14516 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14501, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14517)
!14517 = !{!14518}
!14518 = !DILocalVariable(name: "node", arg: 1, scope: !14516, file: !127, line: 211, type: !2440)
!14519 = !DILocation(line: 0, scope: !14516)
!14520 = !DILocation(line: 213, column: 8, scope: !14516)
!14521 = !DILocation(line: 213, column: 13, scope: !14516)
!14522 = !DILocation(line: 214, column: 8, scope: !14516)
!14523 = !DILocation(line: 214, column: 13, scope: !14516)
!14524 = !DILocation(line: 215, column: 1, scope: !14516)
!14525 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12825, file: !12825, line: 131, type: !14526, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14528)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{!347, !2336, !110}
!14528 = !{!14529, !14530}
!14529 = !DILocalVariable(name: "thread", arg: 1, scope: !14525, file: !12825, line: 131, type: !2336)
!14530 = !DILocalVariable(name: "state", arg: 2, scope: !14525, file: !12825, line: 131, type: !110)
!14531 = !DILocation(line: 0, scope: !14525)
!14532 = !DILocation(line: 133, column: 23, scope: !14525)
!14533 = !DILocation(line: 133, column: 10, scope: !14525)
!14534 = !DILocation(line: 133, column: 36, scope: !14525)
!14535 = !DILocation(line: 133, column: 45, scope: !14525)
!14536 = !DILocation(line: 133, column: 2, scope: !14525)
!14537 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12825, file: !12825, line: 211, type: !13828, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14538)
!14538 = !{!14539, !14540}
!14539 = !DILocalVariable(name: "prio", arg: 1, scope: !14537, file: !12825, line: 211, type: !109)
!14540 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14537, file: !12825, line: 211, type: !109)
!14541 = !DILocation(line: 0, scope: !14537)
!14542 = !DILocation(line: 213, column: 9, scope: !14537)
!14543 = !DILocation(line: 213, column: 2, scope: !14537)
!14544 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12825, file: !12825, line: 206, type: !13828, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14545)
!14545 = !{!14546, !14547}
!14546 = !DILocalVariable(name: "prio1", arg: 1, scope: !14544, file: !12825, line: 206, type: !109)
!14547 = !DILocalVariable(name: "prio2", arg: 2, scope: !14544, file: !12825, line: 206, type: !109)
!14548 = !DILocation(line: 0, scope: !14544)
!14549 = !DILocation(line: 208, column: 15, scope: !14544)
!14550 = !DILocation(line: 208, column: 2, scope: !14544)
!14551 = distinct !DISubprogram(name: "z_ready_thread", scope: !2444, file: !2444, line: 635, type: !13996, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14552)
!14552 = !{!14553, !14554, !14556}
!14553 = !DILocalVariable(name: "thread", arg: 1, scope: !14551, file: !2444, line: 635, type: !2336)
!14554 = !DILocalVariable(name: "__i", scope: !14555, file: !2444, line: 637, type: !14030)
!14555 = distinct !DILexicalBlock(scope: !14551, file: !2444, line: 637, column: 2)
!14556 = !DILocalVariable(name: "__key", scope: !14555, file: !2444, line: 637, type: !14030)
!14557 = !DILocation(line: 0, scope: !14551)
!14558 = !DILocation(line: 0, scope: !14555)
!14559 = !DILocation(line: 0, scope: !14038, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 637, column: 2, scope: !14555)
!14561 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14562)
!14562 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14560)
!14563 = !DILocation(line: 0, scope: !14047, inlinedAt: !14562)
!14564 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14560)
!14565 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14560)
!14566 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14560)
!14567 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14560)
!14568 = !DILocation(line: 639, column: 4, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14570, file: !2444, line: 638, column: 41)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !2444, line: 638, column: 7)
!14571 = distinct !DILexicalBlock(scope: !14572, file: !2444, line: 637, column: 26)
!14572 = distinct !DILexicalBlock(scope: !14555, file: !2444, line: 637, column: 2)
!14573 = !DILocation(line: 0, scope: !14072, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 637, column: 2, scope: !14572)
!14575 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14574)
!14576 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14574)
!14577 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14574)
!14578 = !DILocation(line: 0, scope: !14086, inlinedAt: !14579)
!14579 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14574)
!14580 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14579)
!14581 = !DILocation(line: 642, column: 1, scope: !14551)
!14582 = distinct !DISubprogram(name: "ready_thread", scope: !2444, file: !2444, line: 617, type: !13996, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14583)
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !2444, line: 617, type: !2336)
!14585 = !DILocation(line: 0, scope: !14582)
!14586 = !DILocation(line: 626, column: 7, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14582, file: !2444, line: 626, column: 6)
!14588 = !DILocation(line: 626, column: 34, scope: !14587)
!14589 = !DILocation(line: 626, column: 37, scope: !14587)
!14590 = !DILocation(line: 626, column: 6, scope: !14582)
!14591 = !DILocation(line: 0, scope: !14247, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 629, column: 3, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14587, file: !2444, line: 626, column: 64)
!14594 = !DILocation(line: 252, column: 15, scope: !14247, inlinedAt: !14592)
!14595 = !DILocation(line: 252, column: 28, scope: !14247, inlinedAt: !14592)
!14596 = !DILocation(line: 0, scope: !14254, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 254, column: 3, scope: !14258, inlinedAt: !14592)
!14598 = !DILocation(line: 0, scope: !14261, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 229, column: 2, scope: !14254, inlinedAt: !14597)
!14600 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !14599)
!14601 = !DILocation(line: 186, column: 2, scope: !14272, inlinedAt: !14599)
!14602 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !14599)
!14603 = !DILocation(line: 188, column: 2, scope: !14277, inlinedAt: !14599)
!14604 = !DILocation(line: 188, column: 2, scope: !14279, inlinedAt: !14599)
!14605 = !DILocation(line: 0, scope: !14277, inlinedAt: !14599)
!14606 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !14599)
!14607 = !DILocation(line: 189, column: 35, scope: !14282, inlinedAt: !14599)
!14608 = !DILocation(line: 189, column: 7, scope: !14283, inlinedAt: !14599)
!14609 = !DILocation(line: 191, column: 21, scope: !14287, inlinedAt: !14599)
!14610 = !DILocation(line: 190, column: 4, scope: !14287, inlinedAt: !14599)
!14611 = !DILocation(line: 192, column: 4, scope: !14287, inlinedAt: !14599)
!14612 = distinct !{!14612, !14603, !14613}
!14613 = !DILocation(line: 194, column: 2, scope: !14277, inlinedAt: !14599)
!14614 = !DILocation(line: 196, column: 37, scope: !14261, inlinedAt: !14599)
!14615 = !DILocation(line: 196, column: 2, scope: !14261, inlinedAt: !14599)
!14616 = !DILocation(line: 197, column: 1, scope: !14261, inlinedAt: !14599)
!14617 = !DILocation(line: 630, column: 3, scope: !14593)
!14618 = !DILocation(line: 632, column: 2, scope: !14593)
!14619 = !DILocation(line: 633, column: 1, scope: !14582)
!14620 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12825, file: !12825, line: 120, type: !14179, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14621)
!14621 = !{!14622}
!14622 = !DILocalVariable(name: "thread", arg: 1, scope: !14620, file: !12825, line: 120, type: !2336)
!14623 = !DILocation(line: 0, scope: !14620)
!14624 = !DILocation(line: 122, column: 12, scope: !14620)
!14625 = !DILocation(line: 122, column: 62, scope: !14620)
!14626 = !DILocation(line: 123, column: 4, scope: !14620)
!14627 = !DILocation(line: 122, column: 2, scope: !14620)
!14628 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2444, file: !2444, line: 644, type: !13996, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14629)
!14629 = !{!14630, !14631, !14633}
!14630 = !DILocalVariable(name: "thread", arg: 1, scope: !14628, file: !2444, line: 644, type: !2336)
!14631 = !DILocalVariable(name: "__i", scope: !14632, file: !2444, line: 646, type: !14030)
!14632 = distinct !DILexicalBlock(scope: !14628, file: !2444, line: 646, column: 2)
!14633 = !DILocalVariable(name: "__key", scope: !14632, file: !2444, line: 646, type: !14030)
!14634 = !DILocation(line: 0, scope: !14628)
!14635 = !DILocation(line: 0, scope: !14632)
!14636 = !DILocation(line: 0, scope: !14038, inlinedAt: !14637)
!14637 = distinct !DILocation(line: 646, column: 2, scope: !14632)
!14638 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14637)
!14640 = !DILocation(line: 0, scope: !14047, inlinedAt: !14639)
!14641 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14637)
!14642 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14637)
!14643 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14637)
!14644 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14637)
!14645 = !DILocation(line: 647, column: 3, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14647, file: !2444, line: 646, column: 26)
!14647 = distinct !DILexicalBlock(scope: !14632, file: !2444, line: 646, column: 2)
!14648 = !DILocation(line: 0, scope: !14072, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 646, column: 2, scope: !14647)
!14650 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14649)
!14651 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14649)
!14652 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14649)
!14653 = !DILocation(line: 0, scope: !14086, inlinedAt: !14654)
!14654 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14649)
!14655 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14654)
!14656 = !DILocation(line: 649, column: 1, scope: !14628)
!14657 = distinct !DISubprogram(name: "z_sched_start", scope: !2444, file: !2444, line: 651, type: !13996, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14658)
!14658 = !{!14659, !14660}
!14659 = !DILocalVariable(name: "thread", arg: 1, scope: !14657, file: !2444, line: 651, type: !2336)
!14660 = !DILocalVariable(name: "key", scope: !14657, file: !2444, line: 653, type: !14030)
!14661 = !DILocation(line: 0, scope: !14657)
!14662 = !DILocation(line: 0, scope: !14038, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 653, column: 25, scope: !14657)
!14664 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14663)
!14666 = !DILocation(line: 0, scope: !14047, inlinedAt: !14665)
!14667 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14663)
!14668 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14663)
!14669 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14663)
!14670 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14663)
!14671 = !DILocation(line: 655, column: 6, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14657, file: !2444, line: 655, column: 6)
!14673 = !DILocation(line: 655, column: 6, scope: !14657)
!14674 = !DILocation(line: 0, scope: !14072, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 656, column: 3, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14672, file: !2444, line: 655, column: 36)
!14677 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14675)
!14678 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14675)
!14679 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14675)
!14680 = !DILocation(line: 0, scope: !14086, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14675)
!14682 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14681)
!14683 = !DILocation(line: 657, column: 3, scope: !14676)
!14684 = !DILocation(line: 660, column: 2, scope: !14657)
!14685 = !DILocation(line: 661, column: 2, scope: !14657)
!14686 = !DILocation(line: 662, column: 2, scope: !14657)
!14687 = !DILocation(line: 663, column: 1, scope: !14657)
!14688 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12825, file: !12825, line: 126, type: !14179, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14689)
!14689 = !{!14690}
!14690 = !DILocalVariable(name: "thread", arg: 1, scope: !14688, file: !12825, line: 126, type: !2336)
!14691 = !DILocation(line: 0, scope: !14688)
!14692 = !DILocation(line: 128, column: 23, scope: !14688)
!14693 = !DILocation(line: 128, column: 36, scope: !14688)
!14694 = !DILocation(line: 128, column: 56, scope: !14688)
!14695 = !DILocation(line: 128, column: 2, scope: !14688)
!14696 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12825, file: !12825, line: 155, type: !13996, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14697)
!14697 = !{!14698}
!14698 = !DILocalVariable(name: "thread", arg: 1, scope: !14696, file: !12825, line: 155, type: !2336)
!14699 = !DILocation(line: 0, scope: !14696)
!14700 = !DILocation(line: 157, column: 15, scope: !14696)
!14701 = !DILocation(line: 157, column: 28, scope: !14696)
!14702 = !DILocation(line: 158, column: 1, scope: !14696)
!14703 = distinct !DISubprogram(name: "z_reschedule", scope: !2444, file: !2444, line: 967, type: !14073, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14704)
!14704 = !{!14705, !14706}
!14705 = !DILocalVariable(name: "lock", arg: 1, scope: !14703, file: !2444, line: 967, type: !14041)
!14706 = !DILocalVariable(name: "key", arg: 2, scope: !14703, file: !2444, line: 967, type: !14030)
!14707 = !DILocation(line: 0, scope: !14703)
!14708 = !DILocation(line: 969, column: 6, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14703, file: !2444, line: 969, column: 6)
!14710 = !DILocation(line: 969, column: 23, scope: !14709)
!14711 = !DILocation(line: 969, column: 26, scope: !14709)
!14712 = !DILocation(line: 969, column: 6, scope: !14703)
!14713 = !DILocalVariable(name: "key", arg: 2, scope: !14714, file: !12929, line: 193, type: !14030)
!14714 = distinct !DISubprogram(name: "z_swap", scope: !12929, file: !12929, line: 193, type: !14715, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14717)
!14715 = !DISubroutineType(types: !14716)
!14716 = !{!109, !14041, !14030}
!14717 = !{!14718, !14713}
!14718 = !DILocalVariable(name: "lock", arg: 1, scope: !14714, file: !12929, line: 193, type: !14041)
!14719 = !DILocation(line: 0, scope: !14714, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 970, column: 3, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14709, file: !2444, line: 969, column: 39)
!14722 = !DILocalVariable(name: "l", arg: 1, scope: !14723, file: !253, line: 221, type: !14041)
!14723 = distinct !DISubprogram(name: "k_spin_release", scope: !253, file: !253, line: 221, type: !14724, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14726)
!14724 = !DISubroutineType(types: !14725)
!14725 = !{null, !14041}
!14726 = !{!14722}
!14727 = !DILocation(line: 0, scope: !14723, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 195, column: 2, scope: !14714, inlinedAt: !14720)
!14729 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !14728)
!14730 = distinct !DILexicalBlock(scope: !14731, file: !253, line: 225, column: 2)
!14731 = distinct !DILexicalBlock(scope: !14723, file: !253, line: 225, column: 2)
!14732 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !14728)
!14733 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !14728)
!14734 = distinct !DILexicalBlock(scope: !14730, file: !253, line: 225, column: 2)
!14735 = !DILocation(line: 196, column: 9, scope: !14714, inlinedAt: !14720)
!14736 = !DILocation(line: 971, column: 2, scope: !14721)
!14737 = !DILocation(line: 0, scope: !14072, inlinedAt: !14738)
!14738 = distinct !DILocation(line: 972, column: 3, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14709, file: !2444, line: 971, column: 9)
!14740 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14738)
!14741 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14738)
!14742 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14738)
!14743 = !DILocation(line: 0, scope: !14086, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14738)
!14745 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14744)
!14746 = !DILocation(line: 975, column: 1, scope: !14703)
!14747 = distinct !DISubprogram(name: "resched", scope: !2444, file: !2444, line: 940, type: !14748, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14750)
!14748 = !DISubroutineType(types: !14749)
!14749 = !{!347, !110}
!14750 = !{!14751}
!14751 = !DILocalVariable(name: "key", arg: 1, scope: !14747, file: !2444, line: 940, type: !110)
!14752 = !DILocation(line: 0, scope: !14747)
!14753 = !DILocalVariable(name: "key", arg: 1, scope: !14754, file: !6096, line: 112, type: !32)
!14754 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6096, file: !6096, line: 112, type: !14755, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14757)
!14755 = !DISubroutineType(types: !14756)
!14756 = !{!347, !32}
!14757 = !{!14753}
!14758 = !DILocation(line: 0, scope: !14754, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 946, column: 9, scope: !14747)
!14760 = !DILocation(line: 115, column: 13, scope: !14754, inlinedAt: !14759)
!14761 = !DILocation(line: 946, column: 32, scope: !14747)
!14762 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !14766)
!14763 = distinct !DISubprogram(name: "__get_IPSR", scope: !6417, file: !6417, line: 1027, type: !6504, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14764)
!14764 = !{!14765}
!14765 = !DILocalVariable(name: "result", scope: !14763, file: !6417, line: 1029, type: !110)
!14766 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !14768)
!14767 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7469, file: !7469, line: 46, type: !7470, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!14768 = distinct !DILocation(line: 946, column: 36, scope: !14747)
!14769 = !{i64 3587754}
!14770 = !DILocation(line: 0, scope: !14763, inlinedAt: !14766)
!14771 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !14768)
!14772 = !DILocation(line: 946, column: 2, scope: !14747)
!14773 = distinct !DISubprogram(name: "need_swap", scope: !2444, file: !2444, line: 953, type: !7470, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14774)
!14774 = !{!14775}
!14775 = !DILocalVariable(name: "new_thread", scope: !14773, file: !2444, line: 959, type: !2336)
!14776 = !DILocation(line: 962, column: 31, scope: !14773)
!14777 = !DILocation(line: 0, scope: !14773)
!14778 = !DILocation(line: 963, column: 23, scope: !14773)
!14779 = !DILocation(line: 963, column: 20, scope: !14773)
!14780 = !DILocation(line: 963, column: 2, scope: !14773)
!14781 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12929, file: !12929, line: 181, type: !6427, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14782)
!14782 = !{!14783, !14784}
!14783 = !DILocalVariable(name: "key", arg: 1, scope: !14781, file: !12929, line: 181, type: !32)
!14784 = !DILocalVariable(name: "ret", scope: !14781, file: !12929, line: 183, type: !109)
!14785 = !DILocation(line: 0, scope: !14781)
!14786 = !DILocation(line: 185, column: 8, scope: !14781)
!14787 = !DILocation(line: 186, column: 2, scope: !14781)
!14788 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2444, file: !2444, line: 665, type: !13996, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14789)
!14789 = !{!14790, !14791, !14793}
!14790 = !DILocalVariable(name: "thread", arg: 1, scope: !14788, file: !2444, line: 665, type: !2336)
!14791 = !DILocalVariable(name: "__i", scope: !14792, file: !2444, line: 671, type: !14030)
!14792 = distinct !DILexicalBlock(scope: !14788, file: !2444, line: 671, column: 2)
!14793 = !DILocalVariable(name: "__key", scope: !14792, file: !2444, line: 671, type: !14030)
!14794 = !DILocation(line: 0, scope: !14788)
!14795 = !DILocation(line: 669, column: 8, scope: !14788)
!14796 = !DILocation(line: 0, scope: !14792)
!14797 = !DILocation(line: 0, scope: !14038, inlinedAt: !14798)
!14798 = distinct !DILocation(line: 671, column: 2, scope: !14792)
!14799 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14798)
!14801 = !DILocation(line: 0, scope: !14047, inlinedAt: !14800)
!14802 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14798)
!14803 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14798)
!14804 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14798)
!14805 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14798)
!14806 = !DILocation(line: 672, column: 7, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !2444, line: 672, column: 7)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !2444, line: 671, column: 26)
!14809 = distinct !DILexicalBlock(scope: !14792, file: !2444, line: 671, column: 2)
!14810 = !DILocation(line: 672, column: 7, scope: !14808)
!14811 = !DILocation(line: 0, scope: !14230, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 673, column: 4, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14807, file: !2444, line: 672, column: 35)
!14814 = !DILocation(line: 266, column: 15, scope: !14230, inlinedAt: !14812)
!14815 = !DILocation(line: 266, column: 28, scope: !14230, inlinedAt: !14812)
!14816 = !DILocation(line: 0, scope: !14238, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 268, column: 3, scope: !14242, inlinedAt: !14812)
!14818 = !DILocation(line: 234, column: 2, scope: !14238, inlinedAt: !14817)
!14819 = !DILocation(line: 674, column: 3, scope: !14813)
!14820 = !DILocation(line: 675, column: 3, scope: !14808)
!14821 = !DILocation(line: 676, column: 26, scope: !14808)
!14822 = !DILocation(line: 676, column: 23, scope: !14808)
!14823 = !DILocation(line: 676, column: 3, scope: !14808)
!14824 = !DILocation(line: 0, scope: !14072, inlinedAt: !14825)
!14825 = distinct !DILocation(line: 671, column: 2, scope: !14809)
!14826 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14825)
!14827 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14825)
!14828 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14825)
!14829 = !DILocation(line: 0, scope: !14086, inlinedAt: !14830)
!14830 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14825)
!14831 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14830)
!14832 = !DILocation(line: 679, column: 16, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14788, file: !2444, line: 679, column: 6)
!14834 = !DILocation(line: 679, column: 13, scope: !14833)
!14835 = !DILocation(line: 679, column: 6, scope: !14788)
!14836 = !DILocation(line: 680, column: 3, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14833, file: !2444, line: 679, column: 26)
!14838 = !DILocation(line: 681, column: 2, scope: !14837)
!14839 = !DILocation(line: 684, column: 1, scope: !14788)
!14840 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13254, file: !13254, line: 52, type: !14014, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14841)
!14841 = !{!14842}
!14842 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !13254, line: 52, type: !2336)
!14843 = !DILocation(line: 0, scope: !14840)
!14844 = !DILocation(line: 54, column: 39, scope: !14840)
!14845 = !DILocation(line: 54, column: 9, scope: !14840)
!14846 = !DILocation(line: 54, column: 2, scope: !14840)
!14847 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12825, file: !12825, line: 141, type: !13996, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14848)
!14848 = !{!14849}
!14849 = !DILocalVariable(name: "thread", arg: 1, scope: !14847, file: !12825, line: 141, type: !2336)
!14850 = !DILocation(line: 0, scope: !14847)
!14851 = !DILocation(line: 143, column: 15, scope: !14847)
!14852 = !DILocation(line: 143, column: 28, scope: !14847)
!14853 = !DILocation(line: 146, column: 1, scope: !14847)
!14854 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12825, file: !12825, line: 73, type: !3094, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!14855 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 75, column: 30, scope: !14854)
!14857 = !DILocation(line: 0, scope: !14047, inlinedAt: !14856)
!14858 = !DILocation(line: 75, column: 9, scope: !14854)
!14859 = !DILocation(line: 76, column: 1, scope: !14854)
!14860 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2444, file: !2444, line: 977, type: !6514, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14861)
!14861 = !{!14862}
!14862 = !DILocalVariable(name: "key", arg: 1, scope: !14860, file: !2444, line: 977, type: !110)
!14863 = !DILocation(line: 0, scope: !14860)
!14864 = !DILocation(line: 979, column: 6, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14860, file: !2444, line: 979, column: 6)
!14866 = !DILocation(line: 979, column: 6, scope: !14860)
!14867 = !DILocation(line: 980, column: 3, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14865, file: !2444, line: 979, column: 20)
!14869 = !DILocation(line: 981, column: 2, scope: !14868)
!14870 = !DILocation(line: 0, scope: !14086, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 982, column: 3, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14865, file: !2444, line: 981, column: 9)
!14873 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14871)
!14874 = !DILocation(line: 985, column: 1, scope: !14860)
!14875 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2444, file: !2444, line: 695, type: !13996, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14876)
!14876 = !{!14877, !14878}
!14877 = !DILocalVariable(name: "thread", arg: 1, scope: !14875, file: !2444, line: 695, type: !2336)
!14878 = !DILocalVariable(name: "key", scope: !14875, file: !2444, line: 699, type: !14030)
!14879 = !DILocation(line: 0, scope: !14875)
!14880 = !DILocation(line: 0, scope: !14038, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 699, column: 25, scope: !14875)
!14882 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14883)
!14883 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14881)
!14884 = !DILocation(line: 0, scope: !14047, inlinedAt: !14883)
!14885 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14881)
!14886 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14881)
!14887 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14881)
!14888 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14881)
!14889 = !DILocation(line: 702, column: 7, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14875, file: !2444, line: 702, column: 6)
!14891 = !DILocation(line: 702, column: 6, scope: !14875)
!14892 = !DILocation(line: 0, scope: !14072, inlinedAt: !14893)
!14893 = distinct !DILocation(line: 703, column: 3, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14890, file: !2444, line: 702, column: 38)
!14895 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14893)
!14896 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14893)
!14897 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14893)
!14898 = !DILocation(line: 0, scope: !14086, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14893)
!14900 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14899)
!14901 = !DILocation(line: 704, column: 3, scope: !14894)
!14902 = !DILocation(line: 707, column: 2, scope: !14875)
!14903 = !DILocation(line: 708, column: 2, scope: !14875)
!14904 = !DILocation(line: 710, column: 2, scope: !14875)
!14905 = !DILocation(line: 713, column: 1, scope: !14875)
!14906 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12825, file: !12825, line: 96, type: !14179, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14907)
!14907 = !{!14908}
!14908 = !DILocalVariable(name: "thread", arg: 1, scope: !14906, file: !12825, line: 96, type: !2336)
!14909 = !DILocation(line: 0, scope: !14906)
!14910 = !DILocation(line: 98, column: 23, scope: !14906)
!14911 = !DILocation(line: 98, column: 36, scope: !14906)
!14912 = !DILocation(line: 98, column: 57, scope: !14906)
!14913 = !DILocation(line: 98, column: 2, scope: !14906)
!14914 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12825, file: !12825, line: 148, type: !13996, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14915)
!14915 = !{!14916}
!14916 = !DILocalVariable(name: "thread", arg: 1, scope: !14914, file: !12825, line: 148, type: !2336)
!14917 = !DILocation(line: 0, scope: !14914)
!14918 = !DILocation(line: 150, column: 15, scope: !14914)
!14919 = !DILocation(line: 150, column: 28, scope: !14914)
!14920 = !DILocation(line: 153, column: 1, scope: !14914)
!14921 = distinct !DISubprogram(name: "z_pend_thread", scope: !2444, file: !2444, line: 770, type: !14922, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14928)
!14922 = !DISubroutineType(types: !14923)
!14923 = !{null, !2336, !2367, !14924}
!14924 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14925)
!14925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14926)
!14926 = !{!14927}
!14927 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14925, file: !104, line: 66, baseType: !103, size: 64)
!14928 = !{!14929, !14930, !14931, !14932, !14934}
!14929 = !DILocalVariable(name: "thread", arg: 1, scope: !14921, file: !2444, line: 770, type: !2336)
!14930 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14921, file: !2444, line: 770, type: !2367)
!14931 = !DILocalVariable(name: "timeout", arg: 3, scope: !14921, file: !2444, line: 771, type: !14924)
!14932 = !DILocalVariable(name: "__i", scope: !14933, file: !2444, line: 774, type: !14030)
!14933 = distinct !DILexicalBlock(scope: !14921, file: !2444, line: 774, column: 2)
!14934 = !DILocalVariable(name: "__key", scope: !14933, file: !2444, line: 774, type: !14030)
!14935 = !DILocation(line: 0, scope: !14921)
!14936 = !DILocation(line: 773, column: 2, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14938, file: !2444, line: 773, column: 2)
!14938 = distinct !DILexicalBlock(scope: !14921, file: !2444, line: 773, column: 2)
!14939 = !DILocation(line: 773, column: 2, scope: !14938)
!14940 = !DILocation(line: 773, column: 2, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14937, file: !2444, line: 773, column: 2)
!14942 = !DILocation(line: 0, scope: !14933)
!14943 = !DILocation(line: 0, scope: !14038, inlinedAt: !14944)
!14944 = distinct !DILocation(line: 774, column: 2, scope: !14933)
!14945 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !14946)
!14946 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !14944)
!14947 = !DILocation(line: 0, scope: !14047, inlinedAt: !14946)
!14948 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14944)
!14949 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !14944)
!14950 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14944)
!14951 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !14944)
!14952 = !DILocation(line: 775, column: 3, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14954, file: !2444, line: 774, column: 26)
!14954 = distinct !DILexicalBlock(scope: !14933, file: !2444, line: 774, column: 2)
!14955 = !DILocation(line: 0, scope: !14072, inlinedAt: !14956)
!14956 = distinct !DILocation(line: 774, column: 2, scope: !14954)
!14957 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14956)
!14958 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !14956)
!14959 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14956)
!14960 = !DILocation(line: 0, scope: !14086, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !14956)
!14962 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !14961)
!14963 = !DILocation(line: 777, column: 1, scope: !14921)
!14964 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2444, file: !2444, line: 79, type: !14179, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14965)
!14965 = !{!14966}
!14966 = !DILocalVariable(name: "thread", arg: 1, scope: !14964, file: !2444, line: 79, type: !2336)
!14967 = !DILocation(line: 0, scope: !14964)
!14968 = !DILocation(line: 81, column: 23, scope: !14964)
!14969 = !DILocation(line: 81, column: 36, scope: !14964)
!14970 = !DILocation(line: 81, column: 53, scope: !14964)
!14971 = !DILocation(line: 81, column: 2, scope: !14964)
!14972 = distinct !DISubprogram(name: "pend_locked", scope: !2444, file: !2444, line: 760, type: !14922, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14973)
!14973 = !{!14974, !14975, !14976}
!14974 = !DILocalVariable(name: "thread", arg: 1, scope: !14972, file: !2444, line: 760, type: !2336)
!14975 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14972, file: !2444, line: 760, type: !2367)
!14976 = !DILocalVariable(name: "timeout", arg: 3, scope: !14972, file: !2444, line: 761, type: !14924)
!14977 = !DILocation(line: 0, scope: !14972)
!14978 = !DILocation(line: 766, column: 2, scope: !14972)
!14979 = !DILocation(line: 767, column: 2, scope: !14972)
!14980 = !DILocation(line: 768, column: 1, scope: !14972)
!14981 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2444, file: !2444, line: 740, type: !14982, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14984)
!14982 = !DISubroutineType(types: !14983)
!14983 = !{null, !2336, !2367}
!14984 = !{!14985, !14986}
!14985 = !DILocalVariable(name: "thread", arg: 1, scope: !14981, file: !2444, line: 740, type: !2336)
!14986 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14981, file: !2444, line: 740, type: !2367)
!14987 = !DILocation(line: 0, scope: !14981)
!14988 = !DILocation(line: 742, column: 2, scope: !14981)
!14989 = !DILocation(line: 743, column: 2, scope: !14981)
!14990 = !DILocation(line: 747, column: 13, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14981, file: !2444, line: 747, column: 6)
!14992 = !DILocation(line: 747, column: 6, scope: !14981)
!14993 = !DILocation(line: 748, column: 16, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14991, file: !2444, line: 747, column: 22)
!14995 = !DILocation(line: 748, column: 26, scope: !14994)
!14996 = !DILocation(line: 749, column: 28, scope: !14994)
!14997 = !DILocation(line: 0, scope: !14261, inlinedAt: !14998)
!14998 = distinct !DILocation(line: 749, column: 3, scope: !14994)
!14999 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !14998)
!15000 = !DILocation(line: 186, column: 2, scope: !14272, inlinedAt: !14998)
!15001 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !14998)
!15002 = !DILocation(line: 188, column: 2, scope: !14277, inlinedAt: !14998)
!15003 = !DILocation(line: 188, column: 2, scope: !14279, inlinedAt: !14998)
!15004 = !DILocation(line: 0, scope: !14277, inlinedAt: !14998)
!15005 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !14998)
!15006 = !DILocation(line: 189, column: 35, scope: !14282, inlinedAt: !14998)
!15007 = !DILocation(line: 189, column: 7, scope: !14283, inlinedAt: !14998)
!15008 = !DILocation(line: 191, column: 21, scope: !14287, inlinedAt: !14998)
!15009 = !DILocation(line: 190, column: 4, scope: !14287, inlinedAt: !14998)
!15010 = !DILocation(line: 192, column: 4, scope: !14287, inlinedAt: !14998)
!15011 = distinct !{!15011, !15002, !15012}
!15012 = !DILocation(line: 194, column: 2, scope: !14277, inlinedAt: !14998)
!15013 = !DILocation(line: 196, column: 37, scope: !14261, inlinedAt: !14998)
!15014 = !DILocation(line: 196, column: 2, scope: !14261, inlinedAt: !14998)
!15015 = !DILocation(line: 197, column: 1, scope: !14261, inlinedAt: !14998)
!15016 = !DILocation(line: 751, column: 1, scope: !14981)
!15017 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2444, file: !2444, line: 753, type: !15018, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15020)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{null, !2336, !14924}
!15020 = !{!15021, !15022}
!15021 = !DILocalVariable(name: "thread", arg: 1, scope: !15017, file: !2444, line: 753, type: !2336)
!15022 = !DILocalVariable(name: "timeout", arg: 2, scope: !15017, file: !2444, line: 753, type: !14924)
!15023 = !DILocation(line: 0, scope: !15017)
!15024 = !DILocation(line: 755, column: 7, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15017, file: !2444, line: 755, column: 6)
!15026 = !DILocation(line: 755, column: 6, scope: !15017)
!15027 = !DILocation(line: 756, column: 3, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15025, file: !2444, line: 755, column: 41)
!15029 = !DILocation(line: 757, column: 2, scope: !15028)
!15030 = !DILocation(line: 758, column: 1, scope: !15017)
!15031 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13254, file: !13254, line: 47, type: !15018, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15032)
!15032 = !{!15033, !15034}
!15033 = !DILocalVariable(name: "thread", arg: 1, scope: !15031, file: !13254, line: 47, type: !2336)
!15034 = !DILocalVariable(name: "ticks", arg: 2, scope: !15031, file: !13254, line: 47, type: !14924)
!15035 = !DILocation(line: 0, scope: !15031)
!15036 = !DILocation(line: 49, column: 30, scope: !15031)
!15037 = !DILocation(line: 49, column: 2, scope: !15031)
!15038 = !DILocation(line: 50, column: 1, scope: !15031)
!15039 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2444, file: !2444, line: 795, type: !2393, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15040)
!15040 = !{!15041, !15042, !15043, !15045, !15046}
!15041 = !DILocalVariable(name: "timeout", arg: 1, scope: !15039, file: !2444, line: 795, type: !2395)
!15042 = !DILocalVariable(name: "thread", scope: !15039, file: !2444, line: 797, type: !2336)
!15043 = !DILocalVariable(name: "__i", scope: !15044, file: !2444, line: 800, type: !14030)
!15044 = distinct !DILexicalBlock(scope: !15039, file: !2444, line: 800, column: 2)
!15045 = !DILocalVariable(name: "__key", scope: !15044, file: !2444, line: 800, type: !14030)
!15046 = !DILocalVariable(name: "killed", scope: !15047, file: !2444, line: 801, type: !347)
!15047 = distinct !DILexicalBlock(scope: !15048, file: !2444, line: 800, column: 26)
!15048 = distinct !DILexicalBlock(scope: !15044, file: !2444, line: 800, column: 2)
!15049 = !DILocation(line: 0, scope: !15039)
!15050 = !DILocation(line: 797, column: 28, scope: !15039)
!15051 = !DILocation(line: 0, scope: !15044)
!15052 = !DILocation(line: 0, scope: !14038, inlinedAt: !15053)
!15053 = distinct !DILocation(line: 800, column: 2, scope: !15044)
!15054 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15055)
!15055 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15053)
!15056 = !DILocation(line: 0, scope: !14047, inlinedAt: !15055)
!15057 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15053)
!15058 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15053)
!15059 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15053)
!15060 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15053)
!15061 = !DILocation(line: 801, column: 27, scope: !15047)
!15062 = !DILocation(line: 801, column: 32, scope: !15047)
!15063 = !DILocation(line: 801, column: 61, scope: !15047)
!15064 = !DILocation(line: 0, scope: !15047)
!15065 = !DILocation(line: 804, column: 7, scope: !15047)
!15066 = !DILocation(line: 805, column: 21, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15068, file: !2444, line: 805, column: 8)
!15068 = distinct !DILexicalBlock(scope: !15069, file: !2444, line: 804, column: 16)
!15069 = distinct !DILexicalBlock(scope: !15047, file: !2444, line: 804, column: 7)
!15070 = !DILocation(line: 805, column: 31, scope: !15067)
!15071 = !DILocation(line: 805, column: 8, scope: !15068)
!15072 = !DILocation(line: 806, column: 5, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15067, file: !2444, line: 805, column: 40)
!15074 = !DILocation(line: 807, column: 4, scope: !15073)
!15075 = !DILocation(line: 808, column: 4, scope: !15068)
!15076 = !DILocation(line: 809, column: 4, scope: !15068)
!15077 = !DILocation(line: 810, column: 4, scope: !15068)
!15078 = !DILocation(line: 811, column: 3, scope: !15068)
!15079 = !DILocation(line: 0, scope: !14072, inlinedAt: !15080)
!15080 = distinct !DILocation(line: 800, column: 2, scope: !15048)
!15081 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15080)
!15082 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15080)
!15083 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15080)
!15084 = !DILocation(line: 0, scope: !14086, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15080)
!15086 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15085)
!15087 = !DILocation(line: 813, column: 1, scope: !15039)
!15088 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2444, file: !2444, line: 779, type: !13996, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15089)
!15089 = !{!15090}
!15090 = !DILocalVariable(name: "thread", arg: 1, scope: !15088, file: !2444, line: 779, type: !2336)
!15091 = !DILocation(line: 0, scope: !15088)
!15092 = !DILocation(line: 781, column: 21, scope: !15088)
!15093 = !DILocation(line: 781, column: 2, scope: !15088)
!15094 = !DILocation(line: 782, column: 2, scope: !15088)
!15095 = !DILocation(line: 783, column: 15, scope: !15088)
!15096 = !DILocation(line: 783, column: 25, scope: !15088)
!15097 = !DILocation(line: 784, column: 1, scope: !15088)
!15098 = distinct !DISubprogram(name: "pended_on_thread", scope: !2444, file: !2444, line: 724, type: !15099, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15101)
!15099 = !DISubroutineType(types: !15100)
!15100 = !{!2367, !2336}
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "thread", arg: 1, scope: !15098, file: !2444, line: 724, type: !2336)
!15103 = !DILocation(line: 0, scope: !15098)
!15104 = !DILocation(line: 726, column: 2, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15106, file: !2444, line: 726, column: 2)
!15106 = distinct !DILexicalBlock(scope: !15098, file: !2444, line: 726, column: 2)
!15107 = !DILocation(line: 726, column: 2, scope: !15106)
!15108 = !DILocation(line: 726, column: 2, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15105, file: !2444, line: 726, column: 2)
!15110 = !DILocation(line: 728, column: 2, scope: !15098)
!15111 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12825, file: !12825, line: 165, type: !13996, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15112)
!15112 = !{!15113}
!15113 = !DILocalVariable(name: "thread", arg: 1, scope: !15111, file: !12825, line: 165, type: !2336)
!15114 = !DILocation(line: 0, scope: !15111)
!15115 = !DILocation(line: 167, column: 15, scope: !15111)
!15116 = !DILocation(line: 167, column: 28, scope: !15111)
!15117 = !DILocation(line: 168, column: 1, scope: !15111)
!15118 = distinct !DISubprogram(name: "unready_thread", scope: !2444, file: !2444, line: 731, type: !13996, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15119)
!15119 = !{!15120}
!15120 = !DILocalVariable(name: "thread", arg: 1, scope: !15118, file: !2444, line: 731, type: !2336)
!15121 = !DILocation(line: 0, scope: !15118)
!15122 = !DILocation(line: 733, column: 6, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15118, file: !2444, line: 733, column: 6)
!15124 = !DILocation(line: 733, column: 6, scope: !15118)
!15125 = !DILocation(line: 0, scope: !14230, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 734, column: 3, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15123, file: !2444, line: 733, column: 34)
!15128 = !DILocation(line: 266, column: 15, scope: !14230, inlinedAt: !15126)
!15129 = !DILocation(line: 266, column: 28, scope: !14230, inlinedAt: !15126)
!15130 = !DILocation(line: 0, scope: !14238, inlinedAt: !15131)
!15131 = distinct !DILocation(line: 268, column: 3, scope: !14242, inlinedAt: !15126)
!15132 = !DILocation(line: 234, column: 2, scope: !14238, inlinedAt: !15131)
!15133 = !DILocation(line: 735, column: 2, scope: !15127)
!15134 = !DILocation(line: 736, column: 25, scope: !15118)
!15135 = !DILocation(line: 736, column: 22, scope: !15118)
!15136 = !DILocation(line: 736, column: 2, scope: !15118)
!15137 = !DILocation(line: 737, column: 1, scope: !15118)
!15138 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12825, file: !12825, line: 160, type: !13996, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15139)
!15139 = !{!15140}
!15140 = !DILocalVariable(name: "thread", arg: 1, scope: !15138, file: !12825, line: 160, type: !2336)
!15141 = !DILocation(line: 0, scope: !15138)
!15142 = !DILocation(line: 162, column: 15, scope: !15138)
!15143 = !DILocation(line: 162, column: 28, scope: !15138)
!15144 = !DILocation(line: 163, column: 1, scope: !15138)
!15145 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2444, file: !2444, line: 786, type: !13996, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15146)
!15146 = !{!15147, !15148, !15150}
!15147 = !DILocalVariable(name: "thread", arg: 1, scope: !15145, file: !2444, line: 786, type: !2336)
!15148 = !DILocalVariable(name: "__i", scope: !15149, file: !2444, line: 788, type: !14030)
!15149 = distinct !DILexicalBlock(scope: !15145, file: !2444, line: 788, column: 2)
!15150 = !DILocalVariable(name: "__key", scope: !15149, file: !2444, line: 788, type: !14030)
!15151 = !DILocation(line: 0, scope: !15145)
!15152 = !DILocation(line: 0, scope: !15149)
!15153 = !DILocation(line: 0, scope: !14038, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 788, column: 2, scope: !15149)
!15155 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15156)
!15156 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15154)
!15157 = !DILocation(line: 0, scope: !14047, inlinedAt: !15156)
!15158 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15154)
!15159 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15154)
!15160 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15154)
!15161 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15154)
!15162 = !DILocation(line: 789, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15164, file: !2444, line: 788, column: 26)
!15164 = distinct !DILexicalBlock(scope: !15149, file: !2444, line: 788, column: 2)
!15165 = !DILocation(line: 0, scope: !14072, inlinedAt: !15166)
!15166 = distinct !DILocation(line: 788, column: 2, scope: !15164)
!15167 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15166)
!15168 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15166)
!15169 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15166)
!15170 = !DILocation(line: 0, scope: !14086, inlinedAt: !15171)
!15171 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15166)
!15172 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15171)
!15173 = !DILocation(line: 791, column: 1, scope: !15145)
!15174 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2444, file: !2444, line: 816, type: !15175, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15177)
!15175 = !DISubroutineType(types: !15176)
!15176 = !{!109, !110, !2367, !14924}
!15177 = !{!15178, !15179, !15180, !15181, !15182, !15184}
!15178 = !DILocalVariable(name: "key", arg: 1, scope: !15174, file: !2444, line: 816, type: !110)
!15179 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15174, file: !2444, line: 816, type: !2367)
!15180 = !DILocalVariable(name: "timeout", arg: 3, scope: !15174, file: !2444, line: 816, type: !14924)
!15181 = !DILocalVariable(name: "ret", scope: !15174, file: !2444, line: 828, type: !109)
!15182 = !DILocalVariable(name: "__i", scope: !15183, file: !2444, line: 829, type: !14030)
!15183 = distinct !DILexicalBlock(scope: !15174, file: !2444, line: 829, column: 2)
!15184 = !DILocalVariable(name: "__key", scope: !15183, file: !2444, line: 829, type: !14030)
!15185 = !DILocation(line: 0, scope: !15174)
!15186 = !DILocation(line: 823, column: 14, scope: !15174)
!15187 = !DILocation(line: 823, column: 2, scope: !15174)
!15188 = !DILocation(line: 826, column: 20, scope: !15174)
!15189 = !DILocation(line: 826, column: 18, scope: !15174)
!15190 = !DILocation(line: 828, column: 12, scope: !15174)
!15191 = !DILocation(line: 0, scope: !15183)
!15192 = !DILocation(line: 0, scope: !14038, inlinedAt: !15193)
!15193 = distinct !DILocation(line: 829, column: 2, scope: !15183)
!15194 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15195)
!15195 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15193)
!15196 = !DILocation(line: 0, scope: !14047, inlinedAt: !15195)
!15197 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15193)
!15198 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15193)
!15199 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15193)
!15200 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15193)
!15201 = !DILocation(line: 830, column: 7, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15203, file: !2444, line: 830, column: 7)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !2444, line: 829, column: 26)
!15204 = distinct !DILexicalBlock(scope: !15183, file: !2444, line: 829, column: 2)
!15205 = !DILocation(line: 830, column: 26, scope: !15202)
!15206 = !DILocation(line: 830, column: 23, scope: !15202)
!15207 = !DILocation(line: 830, column: 7, scope: !15203)
!15208 = !DILocation(line: 831, column: 20, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15202, file: !2444, line: 830, column: 36)
!15210 = !DILocation(line: 832, column: 3, scope: !15209)
!15211 = !DILocation(line: 0, scope: !14072, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 829, column: 2, scope: !15204)
!15213 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15212)
!15214 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15212)
!15215 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15212)
!15216 = !DILocation(line: 0, scope: !14086, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15212)
!15218 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15217)
!15219 = !DILocation(line: 834, column: 2, scope: !15174)
!15220 = distinct !DISubprogram(name: "z_pend_curr", scope: !2444, file: !2444, line: 840, type: !15221, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15223)
!15221 = !DISubroutineType(types: !15222)
!15222 = !{!109, !14041, !14030, !2367, !14924}
!15223 = !{!15224, !15225, !15226, !15227}
!15224 = !DILocalVariable(name: "lock", arg: 1, scope: !15220, file: !2444, line: 840, type: !14041)
!15225 = !DILocalVariable(name: "key", arg: 2, scope: !15220, file: !2444, line: 840, type: !14030)
!15226 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15220, file: !2444, line: 841, type: !2367)
!15227 = !DILocalVariable(name: "timeout", arg: 4, scope: !15220, file: !2444, line: 841, type: !14924)
!15228 = !DILocation(line: 0, scope: !15220)
!15229 = !DILocation(line: 844, column: 20, scope: !15220)
!15230 = !DILocation(line: 844, column: 18, scope: !15220)
!15231 = !DILocation(line: 846, column: 2, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15233, file: !2444, line: 846, column: 2)
!15233 = distinct !DILexicalBlock(scope: !15220, file: !2444, line: 846, column: 2)
!15234 = !DILocation(line: 846, column: 2, scope: !15233)
!15235 = !DILocation(line: 846, column: 2, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15232, file: !2444, line: 846, column: 2)
!15237 = !DILocation(line: 0, scope: !14038, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 856, column: 9, scope: !15220)
!15239 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15238)
!15241 = !DILocation(line: 0, scope: !14047, inlinedAt: !15240)
!15242 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15238)
!15243 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15238)
!15244 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15238)
!15245 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15238)
!15246 = !DILocation(line: 857, column: 14, scope: !15220)
!15247 = !DILocation(line: 857, column: 2, scope: !15220)
!15248 = !DILocation(line: 0, scope: !14723, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 858, column: 2, scope: !15220)
!15250 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15249)
!15251 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !15249)
!15252 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15249)
!15253 = !DILocation(line: 0, scope: !14714, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 859, column: 9, scope: !15220)
!15255 = !DILocation(line: 0, scope: !14723, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 195, column: 2, scope: !14714, inlinedAt: !15254)
!15257 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15256)
!15258 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !15256)
!15259 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15256)
!15260 = !DILocation(line: 196, column: 9, scope: !14714, inlinedAt: !15254)
!15261 = !DILocation(line: 859, column: 2, scope: !15220)
!15262 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2444, file: !2444, line: 862, type: !15263, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15265)
!15263 = !DISubroutineType(types: !15264)
!15264 = !{!2336, !2367}
!15265 = !{!15266, !15267, !15268, !15270}
!15266 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15262, file: !2444, line: 862, type: !2367)
!15267 = !DILocalVariable(name: "thread", scope: !15262, file: !2444, line: 864, type: !2336)
!15268 = !DILocalVariable(name: "__i", scope: !15269, file: !2444, line: 866, type: !14030)
!15269 = distinct !DILexicalBlock(scope: !15262, file: !2444, line: 866, column: 2)
!15270 = !DILocalVariable(name: "__key", scope: !15269, file: !2444, line: 866, type: !14030)
!15271 = !DILocation(line: 0, scope: !15262)
!15272 = !DILocation(line: 0, scope: !15269)
!15273 = !DILocation(line: 0, scope: !14038, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 866, column: 2, scope: !15269)
!15275 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15274)
!15277 = !DILocation(line: 0, scope: !14047, inlinedAt: !15276)
!15278 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15274)
!15279 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15274)
!15280 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15274)
!15281 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15274)
!15282 = !DILocation(line: 867, column: 12, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15284, file: !2444, line: 866, column: 26)
!15284 = distinct !DILexicalBlock(scope: !15269, file: !2444, line: 866, column: 2)
!15285 = !DILocation(line: 869, column: 14, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15283, file: !2444, line: 869, column: 7)
!15287 = !DILocation(line: 869, column: 7, scope: !15283)
!15288 = !DILocation(line: 870, column: 4, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15286, file: !2444, line: 869, column: 23)
!15290 = !DILocation(line: 871, column: 3, scope: !15289)
!15291 = !DILocation(line: 0, scope: !14072, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 866, column: 2, scope: !15284)
!15293 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15292)
!15294 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15292)
!15295 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15292)
!15296 = !DILocation(line: 0, scope: !14086, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15292)
!15298 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15297)
!15299 = !DILocation(line: 874, column: 2, scope: !15262)
!15300 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2444, file: !2444, line: 877, type: !15263, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15301)
!15301 = !{!15302, !15303, !15304, !15306}
!15302 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15300, file: !2444, line: 877, type: !2367)
!15303 = !DILocalVariable(name: "thread", scope: !15300, file: !2444, line: 879, type: !2336)
!15304 = !DILocalVariable(name: "__i", scope: !15305, file: !2444, line: 881, type: !14030)
!15305 = distinct !DILexicalBlock(scope: !15300, file: !2444, line: 881, column: 2)
!15306 = !DILocalVariable(name: "__key", scope: !15305, file: !2444, line: 881, type: !14030)
!15307 = !DILocation(line: 0, scope: !15300)
!15308 = !DILocation(line: 0, scope: !15305)
!15309 = !DILocation(line: 0, scope: !14038, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 881, column: 2, scope: !15305)
!15311 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15310)
!15313 = !DILocation(line: 0, scope: !14047, inlinedAt: !15312)
!15314 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15310)
!15315 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15310)
!15316 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15310)
!15317 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15310)
!15318 = !DILocation(line: 882, column: 12, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15320, file: !2444, line: 881, column: 26)
!15320 = distinct !DILexicalBlock(scope: !15305, file: !2444, line: 881, column: 2)
!15321 = !DILocation(line: 884, column: 14, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15319, file: !2444, line: 884, column: 7)
!15323 = !DILocation(line: 884, column: 7, scope: !15319)
!15324 = !DILocation(line: 885, column: 4, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15322, file: !2444, line: 884, column: 23)
!15326 = !DILocation(line: 886, column: 10, scope: !15325)
!15327 = !DILocation(line: 887, column: 3, scope: !15325)
!15328 = !DILocation(line: 0, scope: !14072, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 881, column: 2, scope: !15320)
!15330 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15329)
!15331 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15329)
!15332 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15329)
!15333 = !DILocation(line: 0, scope: !14086, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15329)
!15335 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15334)
!15336 = !DILocation(line: 890, column: 2, scope: !15300)
!15337 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2444, file: !2444, line: 893, type: !13996, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15338)
!15338 = !{!15339}
!15339 = !DILocalVariable(name: "thread", arg: 1, scope: !15337, file: !2444, line: 893, type: !2336)
!15340 = !DILocation(line: 0, scope: !15337)
!15341 = !DILocation(line: 0, scope: !15145, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 895, column: 2, scope: !15337)
!15343 = !DILocation(line: 0, scope: !15149, inlinedAt: !15342)
!15344 = !DILocation(line: 0, scope: !14038, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 788, column: 2, scope: !15149, inlinedAt: !15342)
!15346 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15345)
!15348 = !DILocation(line: 0, scope: !14047, inlinedAt: !15347)
!15349 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15345)
!15350 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15345)
!15351 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15345)
!15352 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15345)
!15353 = !DILocation(line: 789, column: 3, scope: !15163, inlinedAt: !15342)
!15354 = !DILocation(line: 0, scope: !14072, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 788, column: 2, scope: !15164, inlinedAt: !15342)
!15356 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15355)
!15357 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15355)
!15358 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15355)
!15359 = !DILocation(line: 0, scope: !14086, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15355)
!15361 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15360)
!15362 = !DILocation(line: 896, column: 8, scope: !15337)
!15363 = !DILocation(line: 897, column: 1, scope: !15337)
!15364 = distinct !DISubprogram(name: "z_set_prio", scope: !2444, file: !2444, line: 902, type: !14399, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15365)
!15365 = !{!15366, !15367, !15368, !15369, !15371}
!15366 = !DILocalVariable(name: "thread", arg: 1, scope: !15364, file: !2444, line: 902, type: !2336)
!15367 = !DILocalVariable(name: "prio", arg: 2, scope: !15364, file: !2444, line: 902, type: !109)
!15368 = !DILocalVariable(name: "need_sched", scope: !15364, file: !2444, line: 904, type: !347)
!15369 = !DILocalVariable(name: "__i", scope: !15370, file: !2444, line: 906, type: !14030)
!15370 = distinct !DILexicalBlock(scope: !15364, file: !2444, line: 906, column: 2)
!15371 = !DILocalVariable(name: "__key", scope: !15370, file: !2444, line: 906, type: !14030)
!15372 = !DILocation(line: 0, scope: !15364)
!15373 = !DILocation(line: 0, scope: !15370)
!15374 = !DILocation(line: 0, scope: !14038, inlinedAt: !15375)
!15375 = distinct !DILocation(line: 906, column: 2, scope: !15370)
!15376 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15375)
!15378 = !DILocation(line: 0, scope: !14047, inlinedAt: !15377)
!15379 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15375)
!15380 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15375)
!15381 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15375)
!15382 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15375)
!15383 = !DILocation(line: 907, column: 16, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15385, file: !2444, line: 906, column: 26)
!15385 = distinct !DILexicalBlock(scope: !15370, file: !2444, line: 906, column: 2)
!15386 = !DILocation(line: 909, column: 7, scope: !15384)
!15387 = !DILocation(line: 0, scope: !14230, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 912, column: 5, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15390, file: !2444, line: 911, column: 63)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !2444, line: 911, column: 8)
!15391 = distinct !DILexicalBlock(scope: !15392, file: !2444, line: 909, column: 19)
!15392 = distinct !DILexicalBlock(scope: !15384, file: !2444, line: 909, column: 7)
!15393 = !DILocation(line: 266, column: 28, scope: !14230, inlinedAt: !15388)
!15394 = !DILocation(line: 0, scope: !14238, inlinedAt: !15395)
!15395 = distinct !DILocation(line: 268, column: 3, scope: !14242, inlinedAt: !15388)
!15396 = !DILocation(line: 234, column: 2, scope: !14238, inlinedAt: !15395)
!15397 = !DILocation(line: 913, column: 23, scope: !15389)
!15398 = !DILocation(line: 0, scope: !14247, inlinedAt: !15399)
!15399 = distinct !DILocation(line: 914, column: 5, scope: !15389)
!15400 = !DILocation(line: 252, column: 28, scope: !14247, inlinedAt: !15399)
!15401 = !DILocation(line: 0, scope: !14254, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 254, column: 3, scope: !14258, inlinedAt: !15399)
!15403 = !DILocation(line: 0, scope: !14261, inlinedAt: !15404)
!15404 = distinct !DILocation(line: 229, column: 2, scope: !14254, inlinedAt: !15402)
!15405 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !15404)
!15406 = !DILocation(line: 186, column: 2, scope: !14272, inlinedAt: !15404)
!15407 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !15404)
!15408 = !DILocation(line: 188, column: 2, scope: !14277, inlinedAt: !15404)
!15409 = !DILocation(line: 188, column: 2, scope: !14279, inlinedAt: !15404)
!15410 = !DILocation(line: 0, scope: !14277, inlinedAt: !15404)
!15411 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !15404)
!15412 = !DILocation(line: 189, column: 35, scope: !14282, inlinedAt: !15404)
!15413 = !DILocation(line: 189, column: 7, scope: !14283, inlinedAt: !15404)
!15414 = !DILocation(line: 190, column: 4, scope: !14287, inlinedAt: !15404)
!15415 = !DILocation(line: 192, column: 4, scope: !14287, inlinedAt: !15404)
!15416 = distinct !{!15416, !15408, !15417}
!15417 = !DILocation(line: 194, column: 2, scope: !14277, inlinedAt: !15404)
!15418 = !DILocation(line: 196, column: 2, scope: !14261, inlinedAt: !15404)
!15419 = !DILocation(line: 197, column: 1, scope: !14261, inlinedAt: !15404)
!15420 = !DILocation(line: 918, column: 4, scope: !15391)
!15421 = !DILocation(line: 919, column: 3, scope: !15391)
!15422 = !DILocation(line: 920, column: 22, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15392, file: !2444, line: 919, column: 10)
!15424 = !DILocation(line: 0, scope: !14072, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 906, column: 2, scope: !15385)
!15426 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15425)
!15427 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15425)
!15428 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15425)
!15429 = !DILocation(line: 0, scope: !14086, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15425)
!15431 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15430)
!15432 = !DILocation(line: 926, column: 2, scope: !15364)
!15433 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2444, file: !2444, line: 929, type: !15434, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15436)
!15434 = !DISubroutineType(types: !15435)
!15435 = !{null, !2336, !109}
!15436 = !{!15437, !15438, !15439}
!15437 = !DILocalVariable(name: "thread", arg: 1, scope: !15433, file: !2444, line: 929, type: !2336)
!15438 = !DILocalVariable(name: "prio", arg: 2, scope: !15433, file: !2444, line: 929, type: !109)
!15439 = !DILocalVariable(name: "need_sched", scope: !15433, file: !2444, line: 931, type: !347)
!15440 = !DILocation(line: 0, scope: !15433)
!15441 = !DILocation(line: 931, column: 20, scope: !15433)
!15442 = !DILocation(line: 935, column: 17, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15433, file: !2444, line: 935, column: 6)
!15444 = !DILocation(line: 935, column: 20, scope: !15443)
!15445 = !DILocation(line: 935, column: 35, scope: !15443)
!15446 = !DILocation(line: 935, column: 48, scope: !15443)
!15447 = !DILocation(line: 935, column: 6, scope: !15433)
!15448 = !DILocation(line: 936, column: 3, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15443, file: !2444, line: 935, column: 55)
!15450 = !DILocation(line: 937, column: 2, scope: !15449)
!15451 = !DILocation(line: 938, column: 1, scope: !15433)
!15452 = distinct !DISubprogram(name: "k_sched_lock", scope: !2444, file: !2444, line: 987, type: !3094, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15453)
!15453 = !{!15454, !15456}
!15454 = !DILocalVariable(name: "__i", scope: !15455, file: !2444, line: 989, type: !14030)
!15455 = distinct !DILexicalBlock(scope: !15452, file: !2444, line: 989, column: 2)
!15456 = !DILocalVariable(name: "__key", scope: !15455, file: !2444, line: 989, type: !14030)
!15457 = !DILocation(line: 0, scope: !15455)
!15458 = !DILocation(line: 0, scope: !14038, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 989, column: 2, scope: !15455)
!15460 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15461)
!15461 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15459)
!15462 = !DILocation(line: 0, scope: !14047, inlinedAt: !15461)
!15463 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15459)
!15464 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15459)
!15465 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15459)
!15466 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15459)
!15467 = !DILocation(line: 992, column: 3, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15469, file: !2444, line: 989, column: 26)
!15469 = distinct !DILexicalBlock(scope: !15455, file: !2444, line: 989, column: 2)
!15470 = !DILocation(line: 0, scope: !14072, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 989, column: 2, scope: !15469)
!15472 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15471)
!15473 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15471)
!15474 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15471)
!15475 = !DILocation(line: 0, scope: !14086, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15471)
!15477 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15476)
!15478 = !DILocation(line: 994, column: 1, scope: !15452)
!15479 = distinct !DISubprogram(name: "z_sched_lock", scope: !12825, file: !12825, line: 251, type: !3094, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!15480 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 253, column: 2, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15484, file: !12825, line: 253, column: 2)
!15484 = distinct !DILexicalBlock(scope: !15479, file: !12825, line: 253, column: 2)
!15485 = !DILocation(line: 0, scope: !14763, inlinedAt: !15481)
!15486 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !15482)
!15487 = !DILocation(line: 253, column: 2, scope: !15484)
!15488 = !DILocation(line: 253, column: 2, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15483, file: !12825, line: 253, column: 2)
!15490 = !DILocation(line: 254, column: 2, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !12825, line: 254, column: 2)
!15492 = distinct !DILexicalBlock(scope: !15479, file: !12825, line: 254, column: 2)
!15493 = !DILocation(line: 254, column: 2, scope: !15492)
!15494 = !DILocation(line: 254, column: 2, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15491, file: !12825, line: 254, column: 2)
!15496 = !DILocation(line: 256, column: 2, scope: !15479)
!15497 = !DILocation(line: 258, column: 2, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15479, file: !12825, line: 258, column: 2)
!15499 = !{i64 2154976814}
!15500 = !DILocation(line: 259, column: 1, scope: !15479)
!15501 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2444, file: !2444, line: 996, type: !3094, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15502)
!15502 = !{!15503, !15505}
!15503 = !DILocalVariable(name: "__i", scope: !15504, file: !2444, line: 998, type: !14030)
!15504 = distinct !DILexicalBlock(scope: !15501, file: !2444, line: 998, column: 2)
!15505 = !DILocalVariable(name: "__key", scope: !15504, file: !2444, line: 998, type: !14030)
!15506 = !DILocation(line: 0, scope: !15504)
!15507 = !DILocation(line: 0, scope: !14038, inlinedAt: !15508)
!15508 = distinct !DILocation(line: 998, column: 2, scope: !15504)
!15509 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15508)
!15511 = !DILocation(line: 0, scope: !14047, inlinedAt: !15510)
!15512 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15508)
!15513 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15508)
!15514 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15508)
!15515 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15508)
!15516 = !DILocation(line: 999, column: 3, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15518, file: !2444, line: 999, column: 3)
!15518 = distinct !DILexicalBlock(scope: !15519, file: !2444, line: 999, column: 3)
!15519 = distinct !DILexicalBlock(scope: !15520, file: !2444, line: 998, column: 26)
!15520 = distinct !DILexicalBlock(scope: !15504, file: !2444, line: 998, column: 2)
!15521 = !DILocation(line: 999, column: 3, scope: !15518)
!15522 = !DILocation(line: 999, column: 3, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15517, file: !2444, line: 999, column: 3)
!15524 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 1000, column: 3, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !2444, line: 1000, column: 3)
!15528 = distinct !DILexicalBlock(scope: !15519, file: !2444, line: 1000, column: 3)
!15529 = !DILocation(line: 0, scope: !14763, inlinedAt: !15525)
!15530 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !15526)
!15531 = !DILocation(line: 1000, column: 3, scope: !15528)
!15532 = !DILocation(line: 1000, column: 3, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15527, file: !2444, line: 1000, column: 3)
!15534 = !DILocation(line: 1002, column: 5, scope: !15519)
!15535 = !DILocation(line: 1002, column: 20, scope: !15519)
!15536 = !DILocation(line: 1002, column: 3, scope: !15519)
!15537 = !DILocation(line: 1003, column: 3, scope: !15519)
!15538 = !DILocation(line: 0, scope: !14072, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 998, column: 2, scope: !15520)
!15540 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15539)
!15541 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !15539)
!15542 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15539)
!15543 = !DILocation(line: 0, scope: !14086, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !15539)
!15545 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !15544)
!15546 = !DILocation(line: 1011, column: 2, scope: !15501)
!15547 = !DILocation(line: 1012, column: 1, scope: !15501)
!15548 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2444, file: !2444, line: 1014, type: !14387, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!15549 = !DILocation(line: 1028, column: 25, scope: !15548)
!15550 = !DILocation(line: 1028, column: 2, scope: !15548)
!15551 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2444, file: !2444, line: 1155, type: !15552, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15554)
!15552 = !DISubroutineType(types: !15553)
!15553 = !{!347, !2365, !2365}
!15554 = !{!15555, !15556, !15557, !15558, !15559}
!15555 = !DILocalVariable(name: "a", arg: 1, scope: !15551, file: !2444, line: 1155, type: !2365)
!15556 = !DILocalVariable(name: "b", arg: 2, scope: !15551, file: !2444, line: 1155, type: !2365)
!15557 = !DILocalVariable(name: "thread_a", scope: !15551, file: !2444, line: 1157, type: !2336)
!15558 = !DILocalVariable(name: "thread_b", scope: !15551, file: !2444, line: 1157, type: !2336)
!15559 = !DILocalVariable(name: "cmp", scope: !15551, file: !2444, line: 1158, type: !766)
!15560 = !DILocation(line: 0, scope: !15551)
!15561 = !DILocation(line: 1160, column: 13, scope: !15551)
!15562 = !DILocation(line: 1161, column: 13, scope: !15551)
!15563 = !DILocation(line: 1163, column: 8, scope: !15551)
!15564 = !DILocation(line: 1165, column: 10, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15551, file: !2444, line: 1165, column: 6)
!15566 = !DILocation(line: 1165, column: 6, scope: !15551)
!15567 = !DILocation(line: 1167, column: 17, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15565, file: !2444, line: 1167, column: 13)
!15569 = !DILocation(line: 1167, column: 13, scope: !15565)
!15570 = !DILocation(line: 1170, column: 25, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15568, file: !2444, line: 1169, column: 9)
!15572 = !DILocation(line: 1170, column: 52, scope: !15571)
!15573 = !DILocation(line: 1170, column: 35, scope: !15571)
!15574 = !DILocation(line: 1170, column: 3, scope: !15571)
!15575 = !DILocation(line: 0, scope: !15565)
!15576 = !DILocation(line: 1173, column: 1, scope: !15551)
!15577 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2444, file: !2444, line: 1175, type: !15578, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15593)
!15578 = !DISubroutineType(types: !15579)
!15579 = !{null, !15580, !2336}
!15580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15581, size: 32)
!15581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15582, line: 37, size: 128, elements: !15583)
!15582 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15583 = !{!15584, !15592}
!15584 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15581, file: !15582, line: 38, baseType: !15585, size: 96)
!15585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !170, line: 83, size: 96, elements: !15586)
!15586 = !{!15587, !15588, !15591}
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15585, file: !170, line: 84, baseType: !2365, size: 32)
!15588 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15585, file: !170, line: 85, baseType: !15589, size: 32, offset: 32)
!15589 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !170, line: 81, baseType: !15590)
!15590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15552, size: 32)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15585, file: !170, line: 86, baseType: !109, size: 32, offset: 64)
!15592 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15581, file: !15582, line: 39, baseType: !109, size: 32, offset: 96)
!15593 = !{!15594, !15595, !15596, !15597, !15606}
!15594 = !DILocalVariable(name: "pq", arg: 1, scope: !15577, file: !2444, line: 1175, type: !15580)
!15595 = !DILocalVariable(name: "thread", arg: 2, scope: !15577, file: !2444, line: 1175, type: !2336)
!15596 = !DILocalVariable(name: "t", scope: !15577, file: !2444, line: 1177, type: !2336)
!15597 = !DILocalVariable(name: "__f", scope: !15598, file: !2444, line: 1190, type: !15601)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !2444, line: 1190, column: 3)
!15599 = distinct !DILexicalBlock(scope: !15600, file: !2444, line: 1189, column: 27)
!15600 = distinct !DILexicalBlock(scope: !15577, file: !2444, line: 1189, column: 6)
!15601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !170, line: 155, size: 96, elements: !15602)
!15602 = !{!15603, !15604, !15605}
!15603 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15601, file: !170, line: 156, baseType: !2439, size: 32)
!15604 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15601, file: !170, line: 157, baseType: !286, size: 32, offset: 32)
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15601, file: !170, line: 158, baseType: !766, size: 32, offset: 64)
!15606 = !DILocalVariable(name: "n", scope: !15607, file: !2444, line: 1190, type: !2365)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !2444, line: 1190, column: 3)
!15608 = distinct !DILexicalBlock(scope: !15598, file: !2444, line: 1190, column: 3)
!15609 = !DILocation(line: 0, scope: !15577)
!15610 = !DILocation(line: 1179, column: 2, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15612, file: !2444, line: 1179, column: 2)
!15612 = distinct !DILexicalBlock(scope: !15577, file: !2444, line: 1179, column: 2)
!15613 = !DILocation(line: 1179, column: 2, scope: !15612)
!15614 = !DILocation(line: 1179, column: 2, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15611, file: !2444, line: 1179, column: 2)
!15616 = !DILocation(line: 1181, column: 31, scope: !15577)
!15617 = !DILocation(line: 1181, column: 45, scope: !15577)
!15618 = !DILocation(line: 1181, column: 15, scope: !15577)
!15619 = !DILocation(line: 1181, column: 25, scope: !15577)
!15620 = !DILocation(line: 1189, column: 11, scope: !15600)
!15621 = !DILocation(line: 1189, column: 7, scope: !15600)
!15622 = !DILocation(line: 1189, column: 6, scope: !15577)
!15623 = !DILocation(line: 1190, column: 3, scope: !15598)
!15624 = !DILocation(line: 1190, column: 3, scope: !15607)
!15625 = !DILocation(line: 0, scope: !15607)
!15626 = !DILocation(line: 1190, column: 3, scope: !15608)
!15627 = !DILocation(line: 1193, column: 2, scope: !15599)
!15628 = !DILocation(line: 1191, column: 42, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15608, file: !2444, line: 1190, column: 54)
!15630 = !DILocation(line: 1191, column: 12, scope: !15629)
!15631 = !DILocation(line: 1191, column: 22, scope: !15629)
!15632 = distinct !{!15632, !15623, !15633}
!15633 = !DILocation(line: 1192, column: 3, scope: !15598)
!15634 = !DILocation(line: 1195, column: 17, scope: !15577)
!15635 = !DILocation(line: 1195, column: 37, scope: !15577)
!15636 = !DILocation(line: 1195, column: 2, scope: !15577)
!15637 = !DILocation(line: 1196, column: 1, scope: !15577)
!15638 = !DISubprogram(name: "z_rb_foreach_next", scope: !170, file: !170, line: 176, type: !15639, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!15639 = !DISubroutineType(types: !15640)
!15640 = !{!2365, !15641, !15642}
!15641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15585, size: 32)
!15642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15601, size: 32)
!15643 = !DISubprogram(name: "rb_insert", scope: !170, file: !170, line: 105, type: !15644, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{null, !15641, !2365}
!15646 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2444, file: !2444, line: 1198, type: !15578, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15647)
!15647 = !{!15648, !15649}
!15648 = !DILocalVariable(name: "pq", arg: 1, scope: !15646, file: !2444, line: 1198, type: !15580)
!15649 = !DILocalVariable(name: "thread", arg: 2, scope: !15646, file: !2444, line: 1198, type: !2336)
!15650 = !DILocation(line: 0, scope: !15646)
!15651 = !DILocation(line: 1200, column: 2, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15653, file: !2444, line: 1200, column: 2)
!15653 = distinct !DILexicalBlock(scope: !15646, file: !2444, line: 1200, column: 2)
!15654 = !DILocation(line: 1200, column: 2, scope: !15653)
!15655 = !DILocation(line: 1200, column: 2, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15652, file: !2444, line: 1200, column: 2)
!15657 = !DILocation(line: 1202, column: 17, scope: !15646)
!15658 = !DILocation(line: 1202, column: 37, scope: !15646)
!15659 = !DILocation(line: 1202, column: 2, scope: !15646)
!15660 = !DILocation(line: 1204, column: 16, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15646, file: !2444, line: 1204, column: 6)
!15662 = !DILocation(line: 1204, column: 7, scope: !15661)
!15663 = !DILocation(line: 1204, column: 6, scope: !15646)
!15664 = !DILocation(line: 1205, column: 7, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15661, file: !2444, line: 1204, column: 22)
!15666 = !DILocation(line: 1205, column: 22, scope: !15665)
!15667 = !DILocation(line: 1206, column: 2, scope: !15665)
!15668 = !DILocation(line: 1207, column: 1, scope: !15646)
!15669 = !DISubprogram(name: "rb_remove", scope: !170, file: !170, line: 110, type: !15644, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!15670 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2444, file: !2444, line: 1209, type: !15671, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15673)
!15671 = !DISubroutineType(types: !15672)
!15672 = !{!2336, !15580}
!15673 = !{!15674, !15675, !15676}
!15674 = !DILocalVariable(name: "pq", arg: 1, scope: !15670, file: !2444, line: 1209, type: !15580)
!15675 = !DILocalVariable(name: "thread", scope: !15670, file: !2444, line: 1211, type: !2336)
!15676 = !DILocalVariable(name: "n", scope: !15670, file: !2444, line: 1212, type: !2365)
!15677 = !DILocation(line: 0, scope: !15670)
!15678 = !DILocation(line: 1212, column: 37, scope: !15670)
!15679 = !DILocation(line: 1212, column: 21, scope: !15670)
!15680 = !DILocation(line: 1217, column: 2, scope: !15670)
!15681 = distinct !DISubprogram(name: "rb_get_min", scope: !170, file: !170, line: 115, type: !15682, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15684)
!15682 = !DISubroutineType(types: !15683)
!15683 = !{!2365, !15641}
!15684 = !{!15685}
!15685 = !DILocalVariable(name: "tree", arg: 1, scope: !15681, file: !170, line: 115, type: !15641)
!15686 = !DILocation(line: 0, scope: !15681)
!15687 = !DILocation(line: 117, column: 9, scope: !15681)
!15688 = !DILocation(line: 117, column: 2, scope: !15681)
!15689 = !DISubprogram(name: "z_rb_get_minmax", scope: !170, file: !170, line: 100, type: !15690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2034)
!15690 = !DISubroutineType(types: !15691)
!15691 = !{!2365, !15641, !180}
!15692 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2444, file: !2444, line: 1246, type: !15693, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15701)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{!2336, !15695}
!15695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15696, size: 32)
!15696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15582, line: 53, size: 2080, elements: !15697)
!15697 = !{!15698, !15700}
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15696, file: !15582, line: 54, baseType: !15699, size: 2048)
!15699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 2048, elements: !226)
!15700 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15696, file: !15582, line: 55, baseType: !32, size: 32, offset: 2048)
!15701 = !{!15702, !15703, !15704, !15705}
!15702 = !DILocalVariable(name: "pq", arg: 1, scope: !15692, file: !2444, line: 1246, type: !15695)
!15703 = !DILocalVariable(name: "thread", scope: !15692, file: !2444, line: 1252, type: !2336)
!15704 = !DILocalVariable(name: "l", scope: !15692, file: !2444, line: 1253, type: !14264)
!15705 = !DILocalVariable(name: "n", scope: !15692, file: !2444, line: 1254, type: !2440)
!15706 = !DILocation(line: 0, scope: !15692)
!15707 = !DILocation(line: 1248, column: 11, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15692, file: !2444, line: 1248, column: 6)
!15709 = !DILocation(line: 1248, column: 7, scope: !15708)
!15710 = !DILocation(line: 1248, column: 6, scope: !15692)
!15711 = !DILocation(line: 1253, column: 31, scope: !15692)
!15712 = !DILocation(line: 1253, column: 20, scope: !15692)
!15713 = !DILocation(line: 1254, column: 19, scope: !15692)
!15714 = !DILocation(line: 1260, column: 1, scope: !15692)
!15715 = distinct !DISubprogram(name: "z_unpend_all", scope: !2444, file: !2444, line: 1262, type: !15716, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15718)
!15716 = !DISubroutineType(types: !15717)
!15717 = !{!109, !2367}
!15718 = !{!15719, !15720, !15721}
!15719 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15715, file: !2444, line: 1262, type: !2367)
!15720 = !DILocalVariable(name: "need_sched", scope: !15715, file: !2444, line: 1264, type: !109)
!15721 = !DILocalVariable(name: "thread", scope: !15715, file: !2444, line: 1265, type: !2336)
!15722 = !DILocation(line: 0, scope: !15715)
!15723 = !DILocation(line: 1267, column: 19, scope: !15715)
!15724 = !DILocation(line: 1267, column: 41, scope: !15715)
!15725 = !DILocation(line: 1267, column: 2, scope: !15715)
!15726 = !DILocation(line: 1268, column: 3, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15715, file: !2444, line: 1267, column: 50)
!15728 = !DILocation(line: 1269, column: 3, scope: !15727)
!15729 = distinct !{!15729, !15725, !15730}
!15730 = !DILocation(line: 1271, column: 2, scope: !15715)
!15731 = !DILocation(line: 1273, column: 2, scope: !15715)
!15732 = distinct !DISubprogram(name: "z_waitq_head", scope: !13186, file: !13186, line: 52, type: !15263, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15733)
!15733 = !{!15734}
!15734 = !DILocalVariable(name: "w", arg: 1, scope: !15732, file: !13186, line: 52, type: !2367)
!15735 = !DILocation(line: 0, scope: !15732)
!15736 = !DILocation(line: 54, column: 52, scope: !15732)
!15737 = !DILocation(line: 54, column: 28, scope: !15732)
!15738 = !DILocation(line: 54, column: 9, scope: !15732)
!15739 = !DILocation(line: 54, column: 2, scope: !15732)
!15740 = distinct !DISubprogram(name: "init_ready_q", scope: !2444, file: !2444, line: 1276, type: !15741, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15748)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{null, !15743}
!15743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15744, size: 32)
!15744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15745)
!15745 = !{!15746, !15747}
!15746 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15744, file: !122, line: 86, baseType: !2336, size: 32)
!15747 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15744, file: !122, line: 90, baseType: !2372, size: 64, offset: 32)
!15748 = !{!15749}
!15749 = !DILocalVariable(name: "rq", arg: 1, scope: !15740, file: !2444, line: 1276, type: !15743)
!15750 = !DILocation(line: 0, scope: !15740)
!15751 = !DILocation(line: 1289, column: 22, scope: !15740)
!15752 = !DILocation(line: 1289, column: 2, scope: !15740)
!15753 = !DILocation(line: 1291, column: 1, scope: !15740)
!15754 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15755, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15757)
!15755 = !DISubroutineType(types: !15756)
!15756 = !{null, !14264}
!15757 = !{!15758}
!15758 = !DILocalVariable(name: "list", arg: 1, scope: !15754, file: !127, line: 197, type: !14264)
!15759 = !DILocation(line: 0, scope: !15754)
!15760 = !DILocation(line: 199, column: 8, scope: !15754)
!15761 = !DILocation(line: 199, column: 13, scope: !15754)
!15762 = !DILocation(line: 200, column: 8, scope: !15754)
!15763 = !DILocation(line: 200, column: 13, scope: !15754)
!15764 = !DILocation(line: 201, column: 1, scope: !15754)
!15765 = distinct !DISubprogram(name: "z_sched_init", scope: !2444, file: !2444, line: 1293, type: !3094, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!15766 = !DILocation(line: 1302, column: 2, scope: !15765)
!15767 = !DILocation(line: 1306, column: 2, scope: !15765)
!15768 = !DILocation(line: 1309, column: 1, scope: !15765)
!15769 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2444, file: !2444, line: 1311, type: !15770, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15773)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{!109, !15772}
!15772 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2336)
!15773 = !{!15774}
!15774 = !DILocalVariable(name: "thread", arg: 1, scope: !15769, file: !2444, line: 1311, type: !15772)
!15775 = !DILocation(line: 0, scope: !15769)
!15776 = !DILocation(line: 1313, column: 22, scope: !15769)
!15777 = !DILocation(line: 1313, column: 9, scope: !15769)
!15778 = !DILocation(line: 1313, column: 2, scope: !15769)
!15779 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2444, file: !2444, line: 1325, type: !15780, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15782)
!15780 = !DISubroutineType(types: !15781)
!15781 = !{null, !15772, !109}
!15782 = !{!15783, !15784, !15785}
!15783 = !DILocalVariable(name: "thread", arg: 1, scope: !15779, file: !2444, line: 1325, type: !15772)
!15784 = !DILocalVariable(name: "prio", arg: 2, scope: !15779, file: !2444, line: 1325, type: !109)
!15785 = !DILocalVariable(name: "th", scope: !15779, file: !2444, line: 1334, type: !2336)
!15786 = !DILocation(line: 0, scope: !15779)
!15787 = !DILocation(line: 1331, column: 2, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15789, file: !2444, line: 1331, column: 2)
!15789 = distinct !DILexicalBlock(scope: !15790, file: !2444, line: 1331, column: 2)
!15790 = distinct !DILexicalBlock(scope: !15779, file: !2444, line: 1331, column: 2)
!15791 = !DILocation(line: 1331, column: 2, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15788, file: !2444, line: 1331, column: 2)
!15793 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 1332, column: 2, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15797, file: !2444, line: 1332, column: 2)
!15797 = distinct !DILexicalBlock(scope: !15779, file: !2444, line: 1332, column: 2)
!15798 = !DILocation(line: 0, scope: !14763, inlinedAt: !15794)
!15799 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !15795)
!15800 = !DILocation(line: 1332, column: 2, scope: !15797)
!15801 = !DILocation(line: 1332, column: 2, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15796, file: !2444, line: 1332, column: 2)
!15803 = !DILocation(line: 1336, column: 2, scope: !15779)
!15804 = !DILocation(line: 1337, column: 1, scope: !15779)
!15805 = distinct !DISubprogram(name: "k_can_yield", scope: !2444, file: !2444, line: 1384, type: !7470, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!15806 = !DILocation(line: 1386, column: 11, scope: !15805)
!15807 = !DILocation(line: 1386, column: 29, scope: !15805)
!15808 = !DILocation(line: 1386, column: 32, scope: !15805)
!15809 = !DILocation(line: 1386, column: 46, scope: !15805)
!15810 = !DILocation(line: 1387, column: 28, scope: !15805)
!15811 = !DILocation(line: 1387, column: 4, scope: !15805)
!15812 = !DILocation(line: 1386, column: 2, scope: !15805)
!15813 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7470, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!15814 = !DILocation(line: 993, column: 10, scope: !15813)
!15815 = !DILocation(line: 993, column: 2, scope: !15813)
!15816 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2444, file: !2444, line: 1390, type: !3094, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15817)
!15817 = !{!15818}
!15818 = !DILocalVariable(name: "key", scope: !15816, file: !2444, line: 1396, type: !14030)
!15819 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !15821)
!15821 = distinct !DILocation(line: 1392, column: 2, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15823, file: !2444, line: 1392, column: 2)
!15823 = distinct !DILexicalBlock(scope: !15816, file: !2444, line: 1392, column: 2)
!15824 = !DILocation(line: 0, scope: !14763, inlinedAt: !15820)
!15825 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !15821)
!15826 = !DILocation(line: 1392, column: 2, scope: !15823)
!15827 = !DILocation(line: 1392, column: 2, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15822, file: !2444, line: 1392, column: 2)
!15829 = !DILocation(line: 0, scope: !14038, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 1396, column: 25, scope: !15816)
!15831 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15830)
!15833 = !DILocation(line: 0, scope: !14047, inlinedAt: !15832)
!15834 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15830)
!15835 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15830)
!15836 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15830)
!15837 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15830)
!15838 = !DILocation(line: 0, scope: !15816)
!15839 = !DILocation(line: 1400, column: 18, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15841, file: !2444, line: 1399, column: 36)
!15841 = distinct !DILexicalBlock(scope: !15816, file: !2444, line: 1398, column: 6)
!15842 = !DILocation(line: 0, scope: !14230, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 1400, column: 3, scope: !15840)
!15844 = !DILocation(line: 266, column: 15, scope: !14230, inlinedAt: !15843)
!15845 = !DILocation(line: 266, column: 28, scope: !14230, inlinedAt: !15843)
!15846 = !DILocation(line: 0, scope: !14238, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 268, column: 3, scope: !14242, inlinedAt: !15843)
!15848 = !DILocation(line: 234, column: 2, scope: !14238, inlinedAt: !15847)
!15849 = !DILocation(line: 1402, column: 15, scope: !15816)
!15850 = !DILocation(line: 0, scope: !14247, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 1402, column: 2, scope: !15816)
!15852 = !DILocation(line: 252, column: 15, scope: !14247, inlinedAt: !15851)
!15853 = !DILocation(line: 252, column: 28, scope: !14247, inlinedAt: !15851)
!15854 = !DILocation(line: 0, scope: !14254, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 254, column: 3, scope: !14258, inlinedAt: !15851)
!15856 = !DILocation(line: 0, scope: !14261, inlinedAt: !15857)
!15857 = distinct !DILocation(line: 229, column: 2, scope: !14254, inlinedAt: !15855)
!15858 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !15857)
!15859 = !DILocation(line: 186, column: 2, scope: !14272, inlinedAt: !15857)
!15860 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !15857)
!15861 = !DILocation(line: 188, column: 2, scope: !14277, inlinedAt: !15857)
!15862 = !DILocation(line: 188, column: 2, scope: !14279, inlinedAt: !15857)
!15863 = !DILocation(line: 0, scope: !14277, inlinedAt: !15857)
!15864 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !15857)
!15865 = !DILocation(line: 189, column: 35, scope: !14282, inlinedAt: !15857)
!15866 = !DILocation(line: 189, column: 7, scope: !14283, inlinedAt: !15857)
!15867 = !DILocation(line: 191, column: 21, scope: !14287, inlinedAt: !15857)
!15868 = !DILocation(line: 190, column: 4, scope: !14287, inlinedAt: !15857)
!15869 = !DILocation(line: 192, column: 4, scope: !14287, inlinedAt: !15857)
!15870 = distinct !{!15870, !15861, !15871}
!15871 = !DILocation(line: 194, column: 2, scope: !14277, inlinedAt: !15857)
!15872 = !DILocation(line: 196, column: 37, scope: !14261, inlinedAt: !15857)
!15873 = !DILocation(line: 196, column: 2, scope: !14261, inlinedAt: !15857)
!15874 = !DILocation(line: 197, column: 1, scope: !14261, inlinedAt: !15857)
!15875 = !DILocation(line: 1403, column: 2, scope: !15816)
!15876 = !DILocation(line: 0, scope: !14714, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 1404, column: 2, scope: !15816)
!15878 = !DILocation(line: 0, scope: !14723, inlinedAt: !15879)
!15879 = distinct !DILocation(line: 195, column: 2, scope: !14714, inlinedAt: !15877)
!15880 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15879)
!15881 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !15879)
!15882 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15879)
!15883 = !DILocation(line: 196, column: 9, scope: !14714, inlinedAt: !15877)
!15884 = !DILocation(line: 1405, column: 1, scope: !15816)
!15885 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2444, file: !2444, line: 1459, type: !15886, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15888)
!15886 = !DISubroutineType(types: !15887)
!15887 = !{!766, !14924}
!15888 = !{!15889, !15890, !15891}
!15889 = !DILocalVariable(name: "timeout", arg: 1, scope: !15885, file: !2444, line: 1459, type: !14924)
!15890 = !DILocalVariable(name: "ticks", scope: !15885, file: !2444, line: 1461, type: !103)
!15891 = !DILocalVariable(name: "ret", scope: !15885, file: !2444, line: 1480, type: !766)
!15892 = !DILocation(line: 0, scope: !15885)
!15893 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !15894)
!15894 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 1463, column: 2, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !2444, line: 1463, column: 2)
!15897 = distinct !DILexicalBlock(scope: !15885, file: !2444, line: 1463, column: 2)
!15898 = !DILocation(line: 0, scope: !14763, inlinedAt: !15894)
!15899 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !15895)
!15900 = !DILocation(line: 1463, column: 2, scope: !15897)
!15901 = !DILocation(line: 1463, column: 2, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15896, file: !2444, line: 1463, column: 2)
!15903 = !DILocation(line: 1468, column: 6, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15885, file: !2444, line: 1468, column: 6)
!15905 = !DILocation(line: 1468, column: 6, scope: !15885)
!15906 = !DILocation(line: 1469, column: 20, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15904, file: !2444, line: 1468, column: 40)
!15908 = !DILocation(line: 1469, column: 3, scope: !15907)
!15909 = !DILocation(line: 1473, column: 3, scope: !15907)
!15910 = !DILocation(line: 1478, column: 10, scope: !15885)
!15911 = !DILocation(line: 1480, column: 16, scope: !15885)
!15912 = !DILocation(line: 1485, column: 1, scope: !15885)
!15913 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3240, file: !3240, line: 310, type: !15914, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15916)
!15914 = !DISubroutineType(types: !15915)
!15915 = !{null, !15772}
!15916 = !{!15917}
!15917 = !DILocalVariable(name: "thread", arg: 1, scope: !15913, file: !3240, line: 310, type: !15772)
!15918 = !DILocation(line: 0, scope: !15913)
!15919 = !DILocation(line: 319, column: 2, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15913, file: !3240, line: 319, column: 2)
!15921 = !{i64 2154892972}
!15922 = !DILocation(line: 320, column: 2, scope: !15913)
!15923 = !DILocation(line: 321, column: 1, scope: !15913)
!15924 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2444, file: !2444, line: 1415, type: !15925, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15927)
!15925 = !DISubroutineType(types: !15926)
!15926 = !{!766, !103}
!15927 = !{!15928, !15929, !15930, !15931}
!15928 = !DILocalVariable(name: "ticks", arg: 1, scope: !15924, file: !2444, line: 1415, type: !103)
!15929 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15924, file: !2444, line: 1418, type: !110)
!15930 = !DILocalVariable(name: "timeout", scope: !15924, file: !2444, line: 1430, type: !14924)
!15931 = !DILocalVariable(name: "key", scope: !15924, file: !2444, line: 1437, type: !14030)
!15932 = !DILocation(line: 0, scope: !15924)
!15933 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !15935)
!15935 = distinct !DILocation(line: 1420, column: 2, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15937, file: !2444, line: 1420, column: 2)
!15937 = distinct !DILexicalBlock(scope: !15924, file: !2444, line: 1420, column: 2)
!15938 = !DILocation(line: 0, scope: !14763, inlinedAt: !15934)
!15939 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !15935)
!15940 = !DILocation(line: 1420, column: 2, scope: !15937)
!15941 = !DILocation(line: 1420, column: 2, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15936, file: !2444, line: 1420, column: 2)
!15943 = !DILocation(line: 1425, column: 12, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15924, file: !2444, line: 1425, column: 6)
!15945 = !DILocation(line: 1425, column: 6, scope: !15924)
!15946 = !DILocation(line: 1426, column: 3, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15944, file: !2444, line: 1425, column: 18)
!15948 = !DILocation(line: 1427, column: 3, scope: !15947)
!15949 = !DILocation(line: 1431, column: 24, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15924, file: !2444, line: 1431, column: 6)
!15951 = !DILocation(line: 1431, column: 6, scope: !15924)
!15952 = !DILocation(line: 1432, column: 35, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15950, file: !2444, line: 1431, column: 30)
!15954 = !DILocation(line: 1432, column: 27, scope: !15953)
!15955 = !DILocation(line: 1433, column: 2, scope: !15953)
!15956 = !DILocation(line: 1434, column: 27, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15950, file: !2444, line: 1433, column: 9)
!15958 = !DILocation(line: 0, scope: !15950)
!15959 = !DILocation(line: 0, scope: !14038, inlinedAt: !15960)
!15960 = distinct !DILocation(line: 1437, column: 25, scope: !15924)
!15961 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !15960)
!15963 = !DILocation(line: 0, scope: !14047, inlinedAt: !15962)
!15964 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15960)
!15965 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !15960)
!15966 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15960)
!15967 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !15960)
!15968 = !DILocation(line: 1440, column: 20, scope: !15924)
!15969 = !DILocation(line: 1440, column: 18, scope: !15924)
!15970 = !DILocation(line: 1442, column: 2, scope: !15924)
!15971 = !DILocation(line: 1443, column: 23, scope: !15924)
!15972 = !DILocation(line: 1443, column: 2, scope: !15924)
!15973 = !DILocation(line: 1444, column: 29, scope: !15924)
!15974 = !DILocation(line: 1444, column: 2, scope: !15924)
!15975 = !DILocation(line: 0, scope: !14714, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 1446, column: 8, scope: !15924)
!15977 = !DILocation(line: 0, scope: !14723, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 195, column: 2, scope: !14714, inlinedAt: !15976)
!15979 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15978)
!15980 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !15978)
!15981 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15978)
!15982 = !DILocation(line: 196, column: 9, scope: !14714, inlinedAt: !15976)
!15983 = !DILocation(line: 1448, column: 2, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15985, file: !2444, line: 1448, column: 2)
!15985 = distinct !DILexicalBlock(scope: !15924, file: !2444, line: 1448, column: 2)
!15986 = !DILocation(line: 1448, column: 2, scope: !15985)
!15987 = !DILocation(line: 1448, column: 2, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15984, file: !2444, line: 1448, column: 2)
!15989 = !DILocation(line: 1450, column: 10, scope: !15924)
!15990 = !DILocation(line: 1450, column: 45, scope: !15924)
!15991 = !DILocation(line: 1450, column: 43, scope: !15924)
!15992 = !DILocation(line: 1451, column: 6, scope: !15924)
!15993 = !DILocation(line: 1457, column: 1, scope: !15924)
!15994 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13444, file: !13444, line: 1103, type: !13445, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !15995)
!15995 = !{!15996}
!15996 = !DILocalVariable(name: "t", arg: 1, scope: !15994, file: !13444, line: 1103, type: !111)
!15997 = !DILocation(line: 0, scope: !15994)
!15998 = !DILocation(line: 0, scope: !14098, inlinedAt: !15999)
!15999 = distinct !DILocation(line: 1106, column: 9, scope: !15994)
!16000 = !DILocation(line: 139, column: 13, scope: !16001, inlinedAt: !15999)
!16001 = distinct !DILexicalBlock(scope: !16002, file: !13444, line: 138, column: 10)
!16002 = distinct !DILexicalBlock(scope: !16003, file: !13444, line: 136, column: 7)
!16003 = distinct !DILexicalBlock(scope: !14119, file: !13444, line: 134, column: 17)
!16004 = !DILocation(line: 1106, column: 2, scope: !15994)
!16005 = distinct !DISubprogram(name: "k_yield", scope: !3240, file: !3240, line: 140, type: !3094, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!16006 = !DILocation(line: 148, column: 2, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16005, file: !3240, line: 148, column: 2)
!16008 = !{i64 2154892292}
!16009 = !DILocation(line: 149, column: 2, scope: !16005)
!16010 = !DILocation(line: 150, column: 1, scope: !16005)
!16011 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2444, file: !2444, line: 1495, type: !16012, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16014)
!16012 = !DISubroutineType(types: !16013)
!16013 = !{!766, !109}
!16014 = !{!16015, !16016}
!16015 = !DILocalVariable(name: "us", arg: 1, scope: !16011, file: !2444, line: 1495, type: !109)
!16016 = !DILocalVariable(name: "ticks", scope: !16011, file: !2444, line: 1497, type: !766)
!16017 = !DILocation(line: 0, scope: !16011)
!16018 = !DILocation(line: 1501, column: 31, scope: !16011)
!16019 = !DILocation(line: 1501, column: 10, scope: !16011)
!16020 = !DILocation(line: 1502, column: 23, scope: !16011)
!16021 = !DILocation(line: 1502, column: 10, scope: !16011)
!16022 = !DILocation(line: 1506, column: 31, scope: !16011)
!16023 = !DILocation(line: 1506, column: 9, scope: !16011)
!16024 = !DILocation(line: 1506, column: 2, scope: !16011)
!16025 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13444, file: !13444, line: 571, type: !13445, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16026)
!16026 = !{!16027}
!16027 = !DILocalVariable(name: "t", arg: 1, scope: !16025, file: !13444, line: 571, type: !111)
!16028 = !DILocation(line: 0, scope: !16025)
!16029 = !DILocation(line: 0, scope: !14098, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 574, column: 9, scope: !16025)
!16031 = !DILocation(line: 135, column: 5, scope: !16003, inlinedAt: !16030)
!16032 = !DILocation(line: 139, column: 13, scope: !16001, inlinedAt: !16030)
!16033 = !DILocation(line: 574, column: 2, scope: !16025)
!16034 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13444, file: !13444, line: 1187, type: !13445, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16035)
!16035 = !{!16036}
!16036 = !DILocalVariable(name: "t", arg: 1, scope: !16034, file: !13444, line: 1187, type: !111)
!16037 = !DILocation(line: 0, scope: !16034)
!16038 = !DILocation(line: 0, scope: !14098, inlinedAt: !16039)
!16039 = distinct !DILocation(line: 1190, column: 9, scope: !16034)
!16040 = !DILocation(line: 145, column: 13, scope: !16041, inlinedAt: !16039)
!16041 = distinct !DILexicalBlock(scope: !14116, file: !13444, line: 144, column: 10)
!16042 = !DILocation(line: 1190, column: 2, scope: !16034)
!16043 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2444, file: !2444, line: 1517, type: !15914, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16044)
!16044 = !{!16045}
!16045 = !DILocalVariable(name: "thread", arg: 1, scope: !16043, file: !2444, line: 1517, type: !15772)
!16046 = !DILocation(line: 0, scope: !16043)
!16047 = !DILocation(line: 1521, column: 6, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16043, file: !2444, line: 1521, column: 6)
!16049 = !DILocation(line: 1521, column: 6, scope: !16043)
!16050 = !DILocation(line: 1525, column: 6, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16043, file: !2444, line: 1525, column: 6)
!16052 = !DILocation(line: 1525, column: 37, scope: !16051)
!16053 = !DILocation(line: 1525, column: 6, scope: !16043)
!16054 = !DILocation(line: 1527, column: 20, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16056, file: !2444, line: 1527, column: 7)
!16056 = distinct !DILexicalBlock(scope: !16051, file: !2444, line: 1525, column: 42)
!16057 = !DILocation(line: 1527, column: 33, scope: !16055)
!16058 = !DILocation(line: 1527, column: 7, scope: !16056)
!16059 = !DILocation(line: 1532, column: 2, scope: !16043)
!16060 = !DILocation(line: 1533, column: 2, scope: !16043)
!16061 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !16063)
!16063 = distinct !DILocation(line: 1537, column: 7, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16043, file: !2444, line: 1537, column: 6)
!16065 = !DILocation(line: 0, scope: !14763, inlinedAt: !16062)
!16066 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !16063)
!16067 = !DILocation(line: 1537, column: 6, scope: !16043)
!16068 = !DILocation(line: 1538, column: 3, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16064, file: !2444, line: 1537, column: 25)
!16070 = !DILocation(line: 1539, column: 2, scope: !16069)
!16071 = !DILocation(line: 1540, column: 1, scope: !16043)
!16072 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12825, file: !12825, line: 101, type: !14179, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16073)
!16073 = !{!16074}
!16074 = !DILocalVariable(name: "thread", arg: 1, scope: !16072, file: !12825, line: 101, type: !2336)
!16075 = !DILocation(line: 0, scope: !16072)
!16076 = !DILocation(line: 103, column: 23, scope: !16072)
!16077 = !DILocation(line: 103, column: 36, scope: !16072)
!16078 = !DILocation(line: 103, column: 55, scope: !16072)
!16079 = !DILocation(line: 103, column: 2, scope: !16072)
!16080 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2444, file: !2444, line: 1567, type: !16081, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16083)
!16081 = !DISubroutineType(types: !16082)
!16082 = !{!15772}
!16083 = !{!16084}
!16084 = !DILocalVariable(name: "ret", scope: !16080, file: !2444, line: 1577, type: !15772)
!16085 = !DILocation(line: 1577, column: 30, scope: !16080)
!16086 = !DILocation(line: 0, scope: !16080)
!16087 = !DILocation(line: 1582, column: 2, scope: !16080)
!16088 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2444, file: !2444, line: 1593, type: !7773, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2034)
!16089 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !16091)
!16091 = distinct !DILocation(line: 1595, column: 10, scope: !16088)
!16092 = !DILocation(line: 0, scope: !14763, inlinedAt: !16090)
!16093 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !16091)
!16094 = !DILocation(line: 1595, column: 27, scope: !16088)
!16095 = !DILocation(line: 1595, column: 41, scope: !16088)
!16096 = !DILocation(line: 1595, column: 30, scope: !16088)
!16097 = !DILocation(line: 1595, column: 2, scope: !16088)
!16098 = distinct !DISubprogram(name: "z_thread_abort", scope: !2444, file: !2444, line: 1725, type: !13996, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16099)
!16099 = !{!16100, !16101}
!16100 = !DILocalVariable(name: "thread", arg: 1, scope: !16098, file: !2444, line: 1725, type: !2336)
!16101 = !DILocalVariable(name: "key", scope: !16098, file: !2444, line: 1727, type: !14030)
!16102 = !DILocation(line: 0, scope: !16098)
!16103 = !DILocation(line: 0, scope: !14038, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 1727, column: 25, scope: !16098)
!16105 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !16106)
!16106 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !16104)
!16107 = !DILocation(line: 0, scope: !14047, inlinedAt: !16106)
!16108 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !16104)
!16109 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !16104)
!16110 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !16104)
!16111 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !16104)
!16112 = !DILocation(line: 1729, column: 20, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16098, file: !2444, line: 1729, column: 6)
!16114 = !DILocation(line: 1729, column: 33, scope: !16113)
!16115 = !DILocation(line: 1729, column: 48, scope: !16113)
!16116 = !DILocation(line: 1729, column: 6, scope: !16098)
!16117 = !DILocation(line: 0, scope: !14072, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 1730, column: 3, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16113, file: !2444, line: 1729, column: 54)
!16120 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16118)
!16121 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !16118)
!16122 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16118)
!16123 = !DILocation(line: 0, scope: !14086, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !16118)
!16125 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !16124)
!16126 = !DILocation(line: 1731, column: 3, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !2444, line: 1731, column: 3)
!16128 = distinct !DILexicalBlock(scope: !16129, file: !2444, line: 1731, column: 3)
!16129 = distinct !DILexicalBlock(scope: !16119, file: !2444, line: 1731, column: 3)
!16130 = !DILocation(line: 1736, column: 20, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16098, file: !2444, line: 1736, column: 6)
!16132 = !DILocation(line: 1736, column: 33, scope: !16131)
!16133 = !DILocation(line: 1736, column: 49, scope: !16131)
!16134 = !DILocation(line: 1736, column: 6, scope: !16098)
!16135 = !DILocation(line: 0, scope: !14072, inlinedAt: !16136)
!16136 = distinct !DILocation(line: 1737, column: 3, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16131, file: !2444, line: 1736, column: 56)
!16138 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16136)
!16139 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !16136)
!16140 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16136)
!16141 = !DILocation(line: 0, scope: !14086, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !16136)
!16143 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !16142)
!16144 = !DILocation(line: 1738, column: 3, scope: !16137)
!16145 = !DILocation(line: 1775, column: 2, scope: !16098)
!16146 = !DILocation(line: 1776, column: 16, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16098, file: !2444, line: 1776, column: 6)
!16148 = !DILocation(line: 1776, column: 13, scope: !16147)
!16149 = !DILocation(line: 1776, column: 25, scope: !16147)
!16150 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !16151)
!16151 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 1776, column: 29, scope: !16147)
!16153 = !DILocation(line: 0, scope: !14763, inlinedAt: !16151)
!16154 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !16152)
!16155 = !DILocation(line: 1776, column: 6, scope: !16098)
!16156 = !DILocation(line: 0, scope: !14714, inlinedAt: !16157)
!16157 = distinct !DILocation(line: 1777, column: 3, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16147, file: !2444, line: 1776, column: 47)
!16159 = !DILocation(line: 0, scope: !14723, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 195, column: 2, scope: !14714, inlinedAt: !16157)
!16161 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !16160)
!16162 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !16160)
!16163 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !16160)
!16164 = !DILocation(line: 196, column: 9, scope: !14714, inlinedAt: !16157)
!16165 = !DILocation(line: 1778, column: 3, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16167, file: !2444, line: 1778, column: 3)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !2444, line: 1778, column: 3)
!16168 = distinct !DILexicalBlock(scope: !16158, file: !2444, line: 1778, column: 3)
!16169 = !DILocation(line: 0, scope: !14072, inlinedAt: !16170)
!16170 = distinct !DILocation(line: 1780, column: 2, scope: !16098)
!16171 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16170)
!16172 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !16170)
!16173 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16170)
!16174 = !DILocation(line: 0, scope: !14086, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !16170)
!16176 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !16175)
!16177 = !DILocation(line: 1781, column: 1, scope: !16098)
!16178 = distinct !DISubprogram(name: "end_thread", scope: !2444, file: !2444, line: 1690, type: !13996, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16179)
!16179 = !{!16180}
!16180 = !DILocalVariable(name: "thread", arg: 1, scope: !16178, file: !2444, line: 1690, type: !2336)
!16181 = !DILocation(line: 0, scope: !16178)
!16182 = !DILocation(line: 1695, column: 20, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16178, file: !2444, line: 1695, column: 6)
!16184 = !DILocation(line: 1695, column: 33, scope: !16183)
!16185 = !DILocation(line: 1695, column: 49, scope: !16183)
!16186 = !DILocation(line: 1695, column: 6, scope: !16178)
!16187 = !DILocation(line: 1697, column: 29, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16183, file: !2444, line: 1695, column: 56)
!16189 = !DILocation(line: 1698, column: 7, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16188, file: !2444, line: 1698, column: 7)
!16191 = !DILocation(line: 1698, column: 7, scope: !16188)
!16192 = !DILocation(line: 0, scope: !14230, inlinedAt: !16193)
!16193 = distinct !DILocation(line: 1699, column: 4, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16190, file: !2444, line: 1698, column: 35)
!16195 = !DILocation(line: 266, column: 28, scope: !14230, inlinedAt: !16193)
!16196 = !DILocation(line: 0, scope: !14238, inlinedAt: !16197)
!16197 = distinct !DILocation(line: 268, column: 3, scope: !14242, inlinedAt: !16193)
!16198 = !DILocation(line: 234, column: 2, scope: !14238, inlinedAt: !16197)
!16199 = !DILocation(line: 1700, column: 3, scope: !16194)
!16200 = !DILocation(line: 1701, column: 20, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16188, file: !2444, line: 1701, column: 7)
!16202 = !DILocation(line: 1701, column: 30, scope: !16201)
!16203 = !DILocation(line: 1701, column: 7, scope: !16188)
!16204 = !DILocation(line: 1702, column: 4, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16201, file: !2444, line: 1701, column: 39)
!16206 = !DILocation(line: 1703, column: 3, scope: !16205)
!16207 = !DILocation(line: 1704, column: 9, scope: !16188)
!16208 = !DILocation(line: 1705, column: 23, scope: !16188)
!16209 = !DILocation(line: 1705, column: 3, scope: !16188)
!16210 = !DILocation(line: 1706, column: 3, scope: !16188)
!16211 = !DILocation(line: 1722, column: 2, scope: !16188)
!16212 = !DILocation(line: 1723, column: 1, scope: !16178)
!16213 = distinct !DISubprogram(name: "unpend_all", scope: !2444, file: !2444, line: 1674, type: !16214, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16216)
!16214 = !DISubroutineType(types: !16215)
!16215 = !{null, !2367}
!16216 = !{!16217, !16218}
!16217 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16213, file: !2444, line: 1674, type: !2367)
!16218 = !DILocalVariable(name: "thread", scope: !16213, file: !2444, line: 1676, type: !2336)
!16219 = !DILocation(line: 0, scope: !16213)
!16220 = !DILocation(line: 1678, column: 19, scope: !16213)
!16221 = !DILocation(line: 1678, column: 41, scope: !16213)
!16222 = !DILocation(line: 1678, column: 2, scope: !16213)
!16223 = !DILocation(line: 1679, column: 3, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16213, file: !2444, line: 1678, column: 50)
!16225 = !DILocation(line: 1680, column: 9, scope: !16224)
!16226 = !DILocalVariable(name: "thread", arg: 1, scope: !16227, file: !12845, line: 65, type: !2336)
!16227 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12845, file: !12845, line: 65, type: !16228, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16230)
!16228 = !DISubroutineType(types: !16229)
!16229 = !{null, !2336, !32}
!16230 = !{!16226, !16231}
!16231 = !DILocalVariable(name: "value", arg: 2, scope: !16227, file: !12845, line: 65, type: !32)
!16232 = !DILocation(line: 0, scope: !16227, inlinedAt: !16233)
!16233 = distinct !DILocation(line: 1681, column: 3, scope: !16224)
!16234 = !DILocation(line: 67, column: 15, scope: !16227, inlinedAt: !16233)
!16235 = !DILocation(line: 67, column: 33, scope: !16227, inlinedAt: !16233)
!16236 = !DILocation(line: 1682, column: 3, scope: !16224)
!16237 = distinct !{!16237, !16222, !16238}
!16238 = !DILocation(line: 1683, column: 2, scope: !16213)
!16239 = !DILocation(line: 1684, column: 1, scope: !16213)
!16240 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2444, file: !2444, line: 1794, type: !16241, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16243)
!16241 = !DISubroutineType(types: !16242)
!16242 = !{!109, !2336, !14924}
!16243 = !{!16244, !16245, !16246, !16247}
!16244 = !DILocalVariable(name: "thread", arg: 1, scope: !16240, file: !2444, line: 1794, type: !2336)
!16245 = !DILocalVariable(name: "timeout", arg: 2, scope: !16240, file: !2444, line: 1794, type: !14924)
!16246 = !DILocalVariable(name: "key", scope: !16240, file: !2444, line: 1796, type: !14030)
!16247 = !DILocalVariable(name: "ret", scope: !16240, file: !2444, line: 1797, type: !109)
!16248 = !DILocation(line: 0, scope: !16240)
!16249 = !DILocation(line: 0, scope: !14038, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 1796, column: 25, scope: !16240)
!16251 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !16252)
!16252 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !16250)
!16253 = !DILocation(line: 0, scope: !14047, inlinedAt: !16252)
!16254 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !16250)
!16255 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !16250)
!16256 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !16250)
!16257 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !16250)
!16258 = !DILocation(line: 1801, column: 20, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16240, file: !2444, line: 1801, column: 6)
!16260 = !DILocation(line: 1801, column: 33, scope: !16259)
!16261 = !DILocation(line: 1801, column: 49, scope: !16259)
!16262 = !DILocation(line: 1801, column: 6, scope: !16240)
!16263 = !DILocation(line: 1803, column: 13, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16259, file: !2444, line: 1803, column: 13)
!16265 = !DILocation(line: 1803, column: 13, scope: !16259)
!16266 = !DILocation(line: 1805, column: 24, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16264, file: !2444, line: 1805, column: 13)
!16268 = !DILocation(line: 1805, column: 21, scope: !16267)
!16269 = !DILocation(line: 1805, column: 34, scope: !16267)
!16270 = !DILocation(line: 1806, column: 20, scope: !16267)
!16271 = !DILocation(line: 1806, column: 44, scope: !16267)
!16272 = !DILocation(line: 1806, column: 30, scope: !16267)
!16273 = !DILocation(line: 1805, column: 13, scope: !16264)
!16274 = !DILocation(line: 1031, column: 3, scope: !14763, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 48, column: 10, scope: !14767, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 1809, column: 3, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !2444, line: 1809, column: 3)
!16278 = distinct !DILexicalBlock(scope: !16279, file: !2444, line: 1809, column: 3)
!16279 = distinct !DILexicalBlock(scope: !16267, file: !2444, line: 1808, column: 9)
!16280 = !DILocation(line: 0, scope: !14763, inlinedAt: !16275)
!16281 = !DILocation(line: 48, column: 9, scope: !14767, inlinedAt: !16276)
!16282 = !DILocation(line: 1809, column: 3, scope: !16278)
!16283 = !DILocation(line: 1809, column: 3, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16277, file: !2444, line: 1809, column: 3)
!16285 = !DILocation(line: 1810, column: 23, scope: !16279)
!16286 = !DILocation(line: 1810, column: 42, scope: !16279)
!16287 = !DILocation(line: 1810, column: 3, scope: !16279)
!16288 = !DILocation(line: 1811, column: 22, scope: !16279)
!16289 = !DILocation(line: 1811, column: 3, scope: !16279)
!16290 = !DILocation(line: 0, scope: !14714, inlinedAt: !16291)
!16291 = distinct !DILocation(line: 1814, column: 9, scope: !16279)
!16292 = !DILocation(line: 0, scope: !14723, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 195, column: 2, scope: !14714, inlinedAt: !16291)
!16294 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !16293)
!16295 = !DILocation(line: 225, column: 2, scope: !14731, inlinedAt: !16293)
!16296 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !16293)
!16297 = !DILocation(line: 196, column: 9, scope: !14714, inlinedAt: !16291)
!16298 = !DILocation(line: 1817, column: 3, scope: !16279)
!16299 = !DILocation(line: 0, scope: !16259)
!16300 = !DILocation(line: 0, scope: !14072, inlinedAt: !16301)
!16301 = distinct !DILocation(line: 1822, column: 2, scope: !16240)
!16302 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16301)
!16303 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !16301)
!16304 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16301)
!16305 = !DILocation(line: 0, scope: !14086, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !16301)
!16307 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !16306)
!16308 = !DILocation(line: 1823, column: 2, scope: !16240)
!16309 = !DILocation(line: 1824, column: 1, scope: !16240)
!16310 = distinct !DISubprogram(name: "z_sched_wake", scope: !2444, file: !2444, line: 1882, type: !16311, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16313)
!16311 = !DISubroutineType(types: !16312)
!16312 = !{!347, !2367, !109, !107}
!16313 = !{!16314, !16315, !16316, !16317, !16318, !16319, !16321}
!16314 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16310, file: !2444, line: 1882, type: !2367)
!16315 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16310, file: !2444, line: 1882, type: !109)
!16316 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16310, file: !2444, line: 1882, type: !107)
!16317 = !DILocalVariable(name: "thread", scope: !16310, file: !2444, line: 1884, type: !2336)
!16318 = !DILocalVariable(name: "ret", scope: !16310, file: !2444, line: 1885, type: !347)
!16319 = !DILocalVariable(name: "__i", scope: !16320, file: !2444, line: 1887, type: !14030)
!16320 = distinct !DILexicalBlock(scope: !16310, file: !2444, line: 1887, column: 2)
!16321 = !DILocalVariable(name: "__key", scope: !16320, file: !2444, line: 1887, type: !14030)
!16322 = !DILocation(line: 0, scope: !16310)
!16323 = !DILocation(line: 0, scope: !16320)
!16324 = !DILocation(line: 0, scope: !14038, inlinedAt: !16325)
!16325 = distinct !DILocation(line: 1887, column: 2, scope: !16320)
!16326 = !DILocation(line: 55, column: 2, scope: !14047, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 145, column: 10, scope: !14038, inlinedAt: !16325)
!16328 = !DILocation(line: 0, scope: !14047, inlinedAt: !16327)
!16329 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !16325)
!16330 = !DILocation(line: 148, column: 2, scope: !14056, inlinedAt: !16325)
!16331 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !16325)
!16332 = !DILocation(line: 160, column: 2, scope: !14038, inlinedAt: !16325)
!16333 = !DILocation(line: 1888, column: 12, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16335, file: !2444, line: 1887, column: 26)
!16335 = distinct !DILexicalBlock(scope: !16320, file: !2444, line: 1887, column: 2)
!16336 = !DILocation(line: 1890, column: 14, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16334, file: !2444, line: 1890, column: 7)
!16338 = !DILocation(line: 1890, column: 7, scope: !16334)
!16339 = !DILocalVariable(name: "thread", arg: 1, scope: !16340, file: !16341, line: 134, type: !2336)
!16340 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16341, file: !16341, line: 134, type: !16342, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16344)
!16341 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16342 = !DISubroutineType(types: !16343)
!16343 = !{null, !2336, !32, !107}
!16344 = !{!16339, !16345, !16346}
!16345 = !DILocalVariable(name: "value", arg: 2, scope: !16340, file: !16341, line: 135, type: !32)
!16346 = !DILocalVariable(name: "data", arg: 3, scope: !16340, file: !16341, line: 136, type: !107)
!16347 = !DILocation(line: 0, scope: !16340, inlinedAt: !16348)
!16348 = distinct !DILocation(line: 1891, column: 4, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16337, file: !2444, line: 1890, column: 23)
!16350 = !DILocation(line: 0, scope: !16227, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 138, column: 2, scope: !16340, inlinedAt: !16348)
!16352 = !DILocation(line: 67, column: 15, scope: !16227, inlinedAt: !16351)
!16353 = !DILocation(line: 67, column: 33, scope: !16227, inlinedAt: !16351)
!16354 = !DILocation(line: 139, column: 15, scope: !16340, inlinedAt: !16348)
!16355 = !DILocation(line: 139, column: 25, scope: !16340, inlinedAt: !16348)
!16356 = !DILocation(line: 1894, column: 4, scope: !16349)
!16357 = !DILocation(line: 1895, column: 10, scope: !16349)
!16358 = !DILocation(line: 1896, column: 4, scope: !16349)
!16359 = !DILocation(line: 1898, column: 3, scope: !16349)
!16360 = !DILocation(line: 0, scope: !14072, inlinedAt: !16361)
!16361 = distinct !DILocation(line: 1887, column: 2, scope: !16335)
!16362 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16361)
!16363 = !DILocation(line: 194, column: 2, scope: !14081, inlinedAt: !16361)
!16364 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16361)
!16365 = !DILocation(line: 0, scope: !14086, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 215, column: 2, scope: !14072, inlinedAt: !16361)
!16367 = !DILocation(line: 95, column: 2, scope: !14086, inlinedAt: !16366)
!16368 = !DILocation(line: 1901, column: 2, scope: !16310)
!16369 = distinct !DISubprogram(name: "z_sched_wait", scope: !2444, file: !2444, line: 1904, type: !16370, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !16373)
!16370 = !DISubroutineType(types: !16371)
!16371 = !{!109, !14041, !14030, !2367, !14924, !16372}
!16372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16373 = !{!16374, !16375, !16376, !16377, !16378, !16379}
!16374 = !DILocalVariable(name: "lock", arg: 1, scope: !16369, file: !2444, line: 1904, type: !14041)
!16375 = !DILocalVariable(name: "key", arg: 2, scope: !16369, file: !2444, line: 1904, type: !14030)
!16376 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16369, file: !2444, line: 1905, type: !2367)
!16377 = !DILocalVariable(name: "timeout", arg: 4, scope: !16369, file: !2444, line: 1905, type: !14924)
!16378 = !DILocalVariable(name: "data", arg: 5, scope: !16369, file: !2444, line: 1905, type: !16372)
!16379 = !DILocalVariable(name: "ret", scope: !16369, file: !2444, line: 1907, type: !109)
!16380 = !DILocation(line: 0, scope: !16369)
!16381 = !DILocation(line: 1907, column: 12, scope: !16369)
!16382 = !DILocation(line: 1909, column: 11, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16369, file: !2444, line: 1909, column: 6)
!16384 = !DILocation(line: 1909, column: 6, scope: !16369)
!16385 = !DILocation(line: 1910, column: 11, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16383, file: !2444, line: 1909, column: 20)
!16387 = !DILocation(line: 1910, column: 26, scope: !16386)
!16388 = !DILocation(line: 1910, column: 9, scope: !16386)
!16389 = !DILocation(line: 1911, column: 2, scope: !16386)
!16390 = !DILocation(line: 1912, column: 2, scope: !16369)
!16391 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2470, file: !2470, line: 16, type: !16392, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16403)
!16392 = !DISubroutineType(types: !16393)
!16393 = !{!109, !16394}
!16394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16395, size: 32)
!16395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16396)
!16396 = !{!16397}
!16397 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16395, file: !118, line: 2829, baseType: !16398, size: 64)
!16398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16399)
!16399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16400)
!16400 = !{!16401}
!16401 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16399, file: !122, line: 232, baseType: !16402, size: 64)
!16402 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2456)
!16403 = !{!16404}
!16404 = !DILocalVariable(name: "condvar", arg: 1, scope: !16391, file: !2470, line: 16, type: !16394)
!16405 = !DILocation(line: 0, scope: !16391)
!16406 = !DILocation(line: 18, column: 25, scope: !16391)
!16407 = !DILocation(line: 18, column: 2, scope: !16391)
!16408 = !DILocation(line: 23, column: 2, scope: !16391)
!16409 = distinct !DISubprogram(name: "z_waitq_init", scope: !13186, file: !13186, line: 47, type: !16410, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16413)
!16410 = !DISubroutineType(types: !16411)
!16411 = !{null, !16412}
!16412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16398, size: 32)
!16413 = !{!16414}
!16414 = !DILocalVariable(name: "w", arg: 1, scope: !16409, file: !13186, line: 47, type: !16412)
!16415 = !DILocation(line: 0, scope: !16409)
!16416 = !DILocation(line: 49, column: 21, scope: !16409)
!16417 = !DILocation(line: 49, column: 2, scope: !16409)
!16418 = !DILocation(line: 50, column: 1, scope: !16409)
!16419 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16420, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16423)
!16420 = !DISubroutineType(types: !16421)
!16421 = !{null, !16422}
!16422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16402, size: 32)
!16423 = !{!16424}
!16424 = !DILocalVariable(name: "list", arg: 1, scope: !16419, file: !127, line: 197, type: !16422)
!16425 = !DILocation(line: 0, scope: !16419)
!16426 = !DILocation(line: 199, column: 8, scope: !16419)
!16427 = !DILocation(line: 199, column: 13, scope: !16419)
!16428 = !DILocation(line: 200, column: 8, scope: !16419)
!16429 = !DILocation(line: 200, column: 13, scope: !16419)
!16430 = !DILocation(line: 201, column: 1, scope: !16419)
!16431 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2470, file: !2470, line: 35, type: !16392, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16432)
!16432 = !{!16433, !16434, !16439}
!16433 = !DILocalVariable(name: "condvar", arg: 1, scope: !16431, file: !2470, line: 35, type: !16394)
!16434 = !DILocalVariable(name: "key", scope: !16431, file: !2470, line: 37, type: !16435)
!16435 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16436)
!16436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16437)
!16437 = !{!16438}
!16438 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16436, file: !253, line: 33, baseType: !109, size: 32)
!16439 = !DILocalVariable(name: "thread", scope: !16431, file: !2470, line: 41, type: !16440)
!16440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16441, size: 32)
!16441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !16442)
!16442 = !{!16443, !16481, !16493, !16494, !16495, !16496, !16497, !16503, !16515}
!16443 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16441, file: !158, line: 247, baseType: !16444, size: 384)
!16444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !16445)
!16445 = !{!16446, !16456, !16457, !16458, !16459, !16468, !16469, !16470}
!16446 = !DIDerivedType(tag: DW_TAG_member, scope: !16444, file: !158, line: 60, baseType: !16447, size: 64)
!16447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16444, file: !158, line: 60, size: 64, elements: !16448)
!16448 = !{!16449, !16450}
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16447, file: !158, line: 61, baseType: !2455, size: 64)
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16447, file: !158, line: 62, baseType: !16451, size: 64)
!16451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !16452)
!16452 = !{!16453}
!16453 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16451, file: !170, line: 50, baseType: !16454, size: 64)
!16454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16455, size: 64, elements: !175)
!16455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16451, size: 32)
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16444, file: !158, line: 68, baseType: !16412, size: 32, offset: 64)
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16444, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16444, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!16459 = !DIDerivedType(tag: DW_TAG_member, scope: !16444, file: !158, line: 90, baseType: !16460, size: 16, offset: 112)
!16460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16444, file: !158, line: 90, size: 16, elements: !16461)
!16461 = !{!16462, !16467}
!16462 = !DIDerivedType(tag: DW_TAG_member, scope: !16460, file: !158, line: 91, baseType: !16463, size: 16)
!16463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16460, file: !158, line: 91, size: 16, elements: !16464)
!16464 = !{!16465, !16466}
!16465 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16463, file: !158, line: 96, baseType: !190, size: 8)
!16466 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16463, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!16467 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16460, file: !158, line: 100, baseType: !194, size: 16)
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16444, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16444, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!16470 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16444, file: !158, line: 131, baseType: !16471, size: 192, offset: 192)
!16471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16472)
!16472 = !{!16473, !16474, !16480}
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16471, file: !122, line: 245, baseType: !2455, size: 64)
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16471, file: !122, line: 246, baseType: !16475, size: 32, offset: 64)
!16475 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16476)
!16476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16477, size: 32)
!16477 = !DISubroutineType(types: !16478)
!16478 = !{null, !16479}
!16479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16471, size: 32)
!16480 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16471, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16481 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16441, file: !158, line: 250, baseType: !16482, size: 288, offset: 384)
!16482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !16483)
!16483 = !{!16484, !16485, !16486, !16487, !16488, !16489, !16490, !16491, !16492}
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16482, file: !211, line: 26, baseType: !110, size: 32)
!16485 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16482, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!16486 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16482, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!16487 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16482, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!16488 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16482, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!16489 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16482, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16482, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16482, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16482, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16441, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16441, file: !158, line: 256, baseType: !16398, size: 64, offset: 704)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16441, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16441, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!16497 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16441, file: !158, line: 300, baseType: !16498, size: 96, offset: 1056)
!16498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !16499)
!16499 = !{!16500, !16501, !16502}
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16498, file: !158, line: 153, baseType: !22, size: 32)
!16501 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16498, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!16502 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16498, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!16503 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16441, file: !158, line: 325, baseType: !16504, size: 32, offset: 1152)
!16504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16505, size: 32)
!16505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16506)
!16506 = !{!16507, !16513, !16514}
!16507 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16505, file: !118, line: 5074, baseType: !16508, size: 96)
!16508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !16509)
!16509 = !{!16510, !16511, !16512}
!16510 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16508, file: !243, line: 57, baseType: !246, size: 32)
!16511 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16508, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!16512 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16508, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16505, file: !118, line: 5075, baseType: !16398, size: 64, offset: 96)
!16514 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16505, file: !118, line: 5076, baseType: !2471, size: 32, offset: 160)
!16515 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16441, file: !158, line: 343, baseType: !16516, size: 64, offset: 1184)
!16516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !16517)
!16517 = !{!16518, !16519}
!16518 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16516, file: !211, line: 63, baseType: !110, size: 32)
!16519 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16516, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!16520 = !DILocation(line: 0, scope: !16431)
!16521 = !DILocalVariable(name: "l", arg: 1, scope: !16522, file: !253, line: 136, type: !16525)
!16522 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16523, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16526)
!16523 = !DISubroutineType(types: !16524)
!16524 = !{!16435, !16525}
!16525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!16526 = !{!16521, !16527}
!16527 = !DILocalVariable(name: "k", scope: !16522, file: !253, line: 139, type: !16435)
!16528 = !DILocation(line: 0, scope: !16522, inlinedAt: !16529)
!16529 = distinct !DILocation(line: 37, column: 25, scope: !16431)
!16530 = !DILocation(line: 55, column: 2, scope: !16531, inlinedAt: !16535)
!16531 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16532)
!16532 = !{!16533, !16534}
!16533 = !DILocalVariable(name: "key", scope: !16531, file: !6096, line: 44, type: !32)
!16534 = !DILocalVariable(name: "tmp", scope: !16531, file: !6096, line: 53, type: !32)
!16535 = distinct !DILocation(line: 145, column: 10, scope: !16522, inlinedAt: !16529)
!16536 = !{i64 2226077}
!16537 = !DILocation(line: 0, scope: !16531, inlinedAt: !16535)
!16538 = !DILocation(line: 148, column: 2, scope: !16539, inlinedAt: !16529)
!16539 = distinct !DILexicalBlock(scope: !16540, file: !253, line: 148, column: 2)
!16540 = distinct !DILexicalBlock(scope: !16522, file: !253, line: 148, column: 2)
!16541 = !DILocation(line: 148, column: 2, scope: !16540, inlinedAt: !16529)
!16542 = !DILocation(line: 148, column: 2, scope: !16543, inlinedAt: !16529)
!16543 = distinct !DILexicalBlock(scope: !16539, file: !253, line: 148, column: 2)
!16544 = !DILocation(line: 160, column: 2, scope: !16522, inlinedAt: !16529)
!16545 = !DILocation(line: 41, column: 60, scope: !16431)
!16546 = !DILocation(line: 41, column: 28, scope: !16431)
!16547 = !DILocation(line: 43, column: 13, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16431, file: !2470, line: 43, column: 6)
!16549 = !DILocation(line: 43, column: 6, scope: !16431)
!16550 = !DILocalVariable(name: "thread", arg: 1, scope: !16551, file: !12845, line: 65, type: !16440)
!16551 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12845, file: !12845, line: 65, type: !16552, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16554)
!16552 = !DISubroutineType(types: !16553)
!16553 = !{null, !16440, !32}
!16554 = !{!16550, !16555}
!16555 = !DILocalVariable(name: "value", arg: 2, scope: !16551, file: !12845, line: 65, type: !32)
!16556 = !DILocation(line: 0, scope: !16551, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 46, column: 3, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16548, file: !2470, line: 43, column: 22)
!16559 = !DILocation(line: 67, column: 15, scope: !16551, inlinedAt: !16557)
!16560 = !DILocation(line: 67, column: 33, scope: !16551, inlinedAt: !16557)
!16561 = !DILocation(line: 47, column: 3, scope: !16558)
!16562 = !DILocation(line: 48, column: 3, scope: !16558)
!16563 = !DILocation(line: 49, column: 2, scope: !16558)
!16564 = !DILocalVariable(name: "key", arg: 2, scope: !16565, file: !253, line: 190, type: !16435)
!16565 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16566, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16568)
!16566 = !DISubroutineType(types: !16567)
!16567 = !{null, !16525, !16435}
!16568 = !{!16569, !16564}
!16569 = !DILocalVariable(name: "l", arg: 1, scope: !16565, file: !253, line: 189, type: !16525)
!16570 = !DILocation(line: 0, scope: !16565, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 50, column: 3, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16548, file: !2470, line: 49, column: 9)
!16573 = !DILocation(line: 194, column: 2, scope: !16574, inlinedAt: !16571)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !253, line: 194, column: 2)
!16575 = distinct !DILexicalBlock(scope: !16565, file: !253, line: 194, column: 2)
!16576 = !DILocation(line: 194, column: 2, scope: !16575, inlinedAt: !16571)
!16577 = !DILocation(line: 194, column: 2, scope: !16578, inlinedAt: !16571)
!16578 = distinct !DILexicalBlock(scope: !16574, file: !253, line: 194, column: 2)
!16579 = !DILocalVariable(name: "key", arg: 1, scope: !16580, file: !6096, line: 84, type: !32)
!16580 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16581)
!16581 = !{!16579}
!16582 = !DILocation(line: 0, scope: !16580, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 215, column: 2, scope: !16565, inlinedAt: !16571)
!16584 = !DILocation(line: 95, column: 2, scope: !16580, inlinedAt: !16583)
!16585 = !{i64 2226894}
!16586 = !DILocation(line: 55, column: 2, scope: !16431)
!16587 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2470, file: !2470, line: 67, type: !16392, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16588)
!16588 = !{!16589, !16590, !16591, !16592}
!16589 = !DILocalVariable(name: "condvar", arg: 1, scope: !16587, file: !2470, line: 67, type: !16394)
!16590 = !DILocalVariable(name: "pending_thread", scope: !16587, file: !2470, line: 69, type: !16440)
!16591 = !DILocalVariable(name: "key", scope: !16587, file: !2470, line: 70, type: !16435)
!16592 = !DILocalVariable(name: "woken", scope: !16587, file: !2470, line: 71, type: !109)
!16593 = !DILocation(line: 0, scope: !16587)
!16594 = !DILocation(line: 0, scope: !16522, inlinedAt: !16595)
!16595 = distinct !DILocation(line: 73, column: 8, scope: !16587)
!16596 = !DILocation(line: 55, column: 2, scope: !16531, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 145, column: 10, scope: !16522, inlinedAt: !16595)
!16598 = !DILocation(line: 0, scope: !16531, inlinedAt: !16597)
!16599 = !DILocation(line: 148, column: 2, scope: !16539, inlinedAt: !16595)
!16600 = !DILocation(line: 148, column: 2, scope: !16540, inlinedAt: !16595)
!16601 = !DILocation(line: 148, column: 2, scope: !16543, inlinedAt: !16595)
!16602 = !DILocation(line: 160, column: 2, scope: !16522, inlinedAt: !16595)
!16603 = !DILocation(line: 78, column: 27, scope: !16587)
!16604 = !DILocation(line: 78, column: 68, scope: !16587)
!16605 = !DILocation(line: 78, column: 2, scope: !16587)
!16606 = !DILocation(line: 80, column: 8, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16587, file: !2470, line: 79, column: 15)
!16608 = !DILocation(line: 0, scope: !16551, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 81, column: 3, scope: !16607)
!16610 = !DILocation(line: 67, column: 15, scope: !16551, inlinedAt: !16609)
!16611 = !DILocation(line: 67, column: 33, scope: !16551, inlinedAt: !16609)
!16612 = !DILocation(line: 82, column: 3, scope: !16607)
!16613 = distinct !{!16613, !16605, !16614}
!16614 = !DILocation(line: 83, column: 2, scope: !16587)
!16615 = !DILocation(line: 87, column: 2, scope: !16587)
!16616 = !DILocation(line: 89, column: 2, scope: !16587)
!16617 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2470, file: !2470, line: 100, type: !16618, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16631)
!16618 = !DISubroutineType(types: !16619)
!16619 = !{!109, !16394, !16620, !16627}
!16620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16621, size: 32)
!16621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16622)
!16622 = !{!16623, !16624, !16625, !16626}
!16623 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16621, file: !118, line: 2722, baseType: !16398, size: 64)
!16624 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16621, file: !118, line: 2724, baseType: !16440, size: 32, offset: 64)
!16625 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16621, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16626 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16621, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16627 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16628)
!16628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16629)
!16629 = !{!16630}
!16630 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16628, file: !104, line: 66, baseType: !103, size: 64)
!16631 = !{!16632, !16633, !16634, !16635, !16636}
!16632 = !DILocalVariable(name: "condvar", arg: 1, scope: !16617, file: !2470, line: 100, type: !16394)
!16633 = !DILocalVariable(name: "mutex", arg: 2, scope: !16617, file: !2470, line: 100, type: !16620)
!16634 = !DILocalVariable(name: "timeout", arg: 3, scope: !16617, file: !2470, line: 101, type: !16627)
!16635 = !DILocalVariable(name: "key", scope: !16617, file: !2470, line: 103, type: !16435)
!16636 = !DILocalVariable(name: "ret", scope: !16617, file: !2470, line: 104, type: !109)
!16637 = !DILocation(line: 0, scope: !16617)
!16638 = !DILocation(line: 0, scope: !16522, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 108, column: 8, scope: !16617)
!16640 = !DILocation(line: 55, column: 2, scope: !16531, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 145, column: 10, scope: !16522, inlinedAt: !16639)
!16642 = !DILocation(line: 0, scope: !16531, inlinedAt: !16641)
!16643 = !DILocation(line: 148, column: 2, scope: !16539, inlinedAt: !16639)
!16644 = !DILocation(line: 148, column: 2, scope: !16540, inlinedAt: !16639)
!16645 = !DILocation(line: 148, column: 2, scope: !16543, inlinedAt: !16639)
!16646 = !DILocation(line: 160, column: 2, scope: !16522, inlinedAt: !16639)
!16647 = !DILocation(line: 109, column: 2, scope: !16617)
!16648 = !DILocation(line: 111, column: 42, scope: !16617)
!16649 = !DILocation(line: 111, column: 8, scope: !16617)
!16650 = !DILocation(line: 112, column: 2, scope: !16617)
!16651 = !DILocation(line: 116, column: 2, scope: !16617)
!16652 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3240, file: !3240, line: 944, type: !16653, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16655)
!16653 = !DISubroutineType(types: !16654)
!16654 = !{!109, !16620}
!16655 = !{!16656}
!16656 = !DILocalVariable(name: "mutex", arg: 1, scope: !16652, file: !3240, line: 944, type: !16620)
!16657 = !DILocation(line: 0, scope: !16652)
!16658 = !DILocation(line: 952, column: 2, scope: !16659)
!16659 = distinct !DILexicalBlock(scope: !16652, file: !3240, line: 952, column: 2)
!16660 = !{i64 2154851460}
!16661 = !DILocation(line: 953, column: 9, scope: !16652)
!16662 = !DILocation(line: 953, column: 2, scope: !16652)
!16663 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3240, file: !3240, line: 927, type: !16664, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16666)
!16664 = !DISubroutineType(types: !16665)
!16665 = !{!109, !16620, !16627}
!16666 = !{!16667, !16668}
!16667 = !DILocalVariable(name: "mutex", arg: 1, scope: !16663, file: !3240, line: 927, type: !16620)
!16668 = !DILocalVariable(name: "timeout", arg: 2, scope: !16663, file: !3240, line: 927, type: !16627)
!16669 = !DILocation(line: 0, scope: !16663)
!16670 = !DILocation(line: 936, column: 2, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16663, file: !3240, line: 936, column: 2)
!16672 = !{i64 2154851392}
!16673 = !DILocation(line: 937, column: 9, scope: !16663)
!16674 = !DILocation(line: 937, column: 2, scope: !16663)
!16675 = distinct !DISubprogram(name: "z_data_copy", scope: !16676, file: !16676, line: 22, type: !3094, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !2034)
!16676 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16677 = !DILocation(line: 24, column: 2, scope: !16675)
!16678 = !DILocation(line: 27, column: 2, scope: !16675)
!16679 = !DILocation(line: 31, column: 2, scope: !16675)
!16680 = !DILocation(line: 71, column: 1, scope: !16675)
!16681 = distinct !DISubprogram(name: "z_add_timeout", scope: !2506, file: !2506, line: 88, type: !16682, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16688)
!16682 = !DISubroutineType(types: !16683)
!16683 = !{null, !2479, !2498, !16684}
!16684 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16685)
!16685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16686)
!16686 = !{!16687}
!16687 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16685, file: !104, line: 66, baseType: !103, size: 64)
!16688 = !{!16689, !16690, !16691, !16692, !16698, !16699, !16702, !16705}
!16689 = !DILocalVariable(name: "to", arg: 1, scope: !16681, file: !2506, line: 88, type: !2479)
!16690 = !DILocalVariable(name: "fn", arg: 2, scope: !16681, file: !2506, line: 88, type: !2498)
!16691 = !DILocalVariable(name: "timeout", arg: 3, scope: !16681, file: !2506, line: 89, type: !16684)
!16692 = !DILocalVariable(name: "__i", scope: !16693, file: !2506, line: 102, type: !16694)
!16693 = distinct !DILexicalBlock(scope: !16681, file: !2506, line: 102, column: 2)
!16694 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16695)
!16695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16696)
!16696 = !{!16697}
!16697 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16695, file: !253, line: 33, baseType: !109, size: 32)
!16698 = !DILocalVariable(name: "__key", scope: !16693, file: !2506, line: 102, type: !16694)
!16699 = !DILocalVariable(name: "t", scope: !16700, file: !2506, line: 103, type: !2479)
!16700 = distinct !DILexicalBlock(scope: !16701, file: !2506, line: 102, column: 24)
!16701 = distinct !DILexicalBlock(scope: !16693, file: !2506, line: 102, column: 2)
!16702 = !DILocalVariable(name: "ticks", scope: !16703, file: !2506, line: 107, type: !103)
!16703 = distinct !DILexicalBlock(scope: !16704, file: !2506, line: 106, column: 39)
!16704 = distinct !DILexicalBlock(scope: !16700, file: !2506, line: 105, column: 7)
!16705 = !DILocalVariable(name: "next_time", scope: !16706, file: !2506, line: 137, type: !766)
!16706 = distinct !DILexicalBlock(scope: !16707, file: !2506, line: 127, column: 22)
!16707 = distinct !DILexicalBlock(scope: !16700, file: !2506, line: 127, column: 7)
!16708 = !DILocation(line: 0, scope: !16681)
!16709 = !DILocation(line: 91, column: 6, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16681, file: !2506, line: 91, column: 6)
!16711 = !DILocation(line: 91, column: 6, scope: !16681)
!16712 = !DILocation(line: 99, column: 2, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16714, file: !2506, line: 99, column: 2)
!16714 = distinct !DILexicalBlock(scope: !16681, file: !2506, line: 99, column: 2)
!16715 = !DILocation(line: 99, column: 2, scope: !16714)
!16716 = !DILocation(line: 99, column: 2, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !2506, line: 99, column: 2)
!16718 = !DILocation(line: 100, column: 6, scope: !16681)
!16719 = !DILocation(line: 100, column: 9, scope: !16681)
!16720 = !DILocation(line: 0, scope: !16693)
!16721 = !DILocalVariable(name: "l", arg: 1, scope: !16722, file: !253, line: 136, type: !16725)
!16722 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16723, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16726)
!16723 = !DISubroutineType(types: !16724)
!16724 = !{!16694, !16725}
!16725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!16726 = !{!16721, !16727}
!16727 = !DILocalVariable(name: "k", scope: !16722, file: !253, line: 139, type: !16694)
!16728 = !DILocation(line: 0, scope: !16722, inlinedAt: !16729)
!16729 = distinct !DILocation(line: 102, column: 2, scope: !16693)
!16730 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !16735)
!16731 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6096, file: !6096, line: 42, type: !6097, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16732)
!16732 = !{!16733, !16734}
!16733 = !DILocalVariable(name: "key", scope: !16731, file: !6096, line: 44, type: !32)
!16734 = !DILocalVariable(name: "tmp", scope: !16731, file: !6096, line: 53, type: !32)
!16735 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !16729)
!16736 = !{i64 2231683}
!16737 = !DILocation(line: 0, scope: !16731, inlinedAt: !16735)
!16738 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !16729)
!16739 = distinct !DILexicalBlock(scope: !16740, file: !253, line: 148, column: 2)
!16740 = distinct !DILexicalBlock(scope: !16722, file: !253, line: 148, column: 2)
!16741 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !16729)
!16742 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !16729)
!16743 = distinct !DILexicalBlock(scope: !16739, file: !253, line: 148, column: 2)
!16744 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !16729)
!16745 = !DILocation(line: 106, column: 33, scope: !16704)
!16746 = !DILocation(line: 105, column: 7, scope: !16700)
!16747 = !DILocation(line: 107, column: 50, scope: !16703)
!16748 = !DILocation(line: 107, column: 48, scope: !16703)
!16749 = !DILocation(line: 0, scope: !16703)
!16750 = !DILocation(line: 109, column: 17, scope: !16703)
!16751 = !DILocation(line: 110, column: 3, scope: !16703)
!16752 = !DILocation(line: 111, column: 31, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16704, file: !2506, line: 110, column: 10)
!16754 = !DILocation(line: 111, column: 37, scope: !16753)
!16755 = !DILocation(line: 111, column: 35, scope: !16753)
!16756 = !DILocation(line: 0, scope: !16704)
!16757 = !DILocation(line: 109, column: 8, scope: !16703)
!16758 = !DILocation(line: 109, column: 15, scope: !16703)
!16759 = !DILocation(line: 114, column: 12, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16700, file: !2506, line: 114, column: 3)
!16761 = !DILocation(line: 0, scope: !16700)
!16762 = !DILocation(line: 114, column: 3, scope: !16760)
!16763 = !DILocation(line: 115, column: 24, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !2506, line: 115, column: 8)
!16765 = distinct !DILexicalBlock(scope: !16766, file: !2506, line: 114, column: 45)
!16766 = distinct !DILexicalBlock(scope: !16760, file: !2506, line: 114, column: 3)
!16767 = !DILocation(line: 115, column: 11, scope: !16764)
!16768 = !DILocation(line: 115, column: 18, scope: !16764)
!16769 = !DILocation(line: 115, column: 8, scope: !16765)
!16770 = !DILocation(line: 116, column: 15, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16764, file: !2506, line: 115, column: 32)
!16772 = !DILocation(line: 117, column: 26, scope: !16771)
!16773 = !DILocation(line: 117, column: 5, scope: !16771)
!16774 = !DILocation(line: 123, column: 7, scope: !16700)
!16775 = !DILocation(line: 120, column: 15, scope: !16765)
!16776 = !DILocation(line: 114, column: 36, scope: !16766)
!16777 = distinct !{!16777, !16762, !16778}
!16778 = !DILocation(line: 121, column: 3, scope: !16760)
!16779 = !DILocation(line: 124, column: 4, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !2506, line: 123, column: 18)
!16781 = distinct !DILexicalBlock(scope: !16700, file: !2506, line: 123, column: 7)
!16782 = !DILocation(line: 125, column: 3, scope: !16780)
!16783 = !DILocation(line: 127, column: 13, scope: !16707)
!16784 = !DILocation(line: 127, column: 10, scope: !16707)
!16785 = !DILocation(line: 127, column: 7, scope: !16700)
!16786 = !DILocation(line: 137, column: 24, scope: !16706)
!16787 = !DILocation(line: 0, scope: !16706)
!16788 = !DILocation(line: 139, column: 18, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16706, file: !2506, line: 139, column: 8)
!16790 = !DILocation(line: 139, column: 23, scope: !16789)
!16791 = !DILocation(line: 141, column: 5, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !16789, file: !2506, line: 140, column: 48)
!16793 = !DILocation(line: 142, column: 4, scope: !16792)
!16794 = !DILocalVariable(name: "key", arg: 2, scope: !16795, file: !253, line: 190, type: !16694)
!16795 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16796, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16798)
!16796 = !DISubroutineType(types: !16797)
!16797 = !{null, !16725, !16694}
!16798 = !{!16799, !16794}
!16799 = !DILocalVariable(name: "l", arg: 1, scope: !16795, file: !253, line: 189, type: !16725)
!16800 = !DILocation(line: 0, scope: !16795, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 102, column: 2, scope: !16701)
!16802 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !16801)
!16803 = distinct !DILexicalBlock(scope: !16804, file: !253, line: 194, column: 2)
!16804 = distinct !DILexicalBlock(scope: !16795, file: !253, line: 194, column: 2)
!16805 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !16801)
!16806 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !16801)
!16807 = distinct !DILexicalBlock(scope: !16803, file: !253, line: 194, column: 2)
!16808 = !DILocalVariable(name: "key", arg: 1, scope: !16809, file: !6096, line: 84, type: !32)
!16809 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6096, file: !6096, line: 84, type: !6107, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16810)
!16810 = !{!16808}
!16811 = !DILocation(line: 0, scope: !16809, inlinedAt: !16812)
!16812 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !16801)
!16813 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !16812)
!16814 = !{i64 2232500}
!16815 = !DILocation(line: 148, column: 1, scope: !16681)
!16816 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16817, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16821)
!16817 = !DISubroutineType(types: !16818)
!16818 = !{!347, !16819}
!16819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16820, size: 32)
!16820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2483)
!16821 = !{!16822}
!16822 = !DILocalVariable(name: "node", arg: 1, scope: !16816, file: !127, line: 225, type: !16819)
!16823 = !DILocation(line: 0, scope: !16816)
!16824 = !DILocation(line: 227, column: 15, scope: !16816)
!16825 = !DILocation(line: 227, column: 20, scope: !16816)
!16826 = !DILocation(line: 227, column: 2, scope: !16816)
!16827 = distinct !DISubprogram(name: "elapsed", scope: !2506, file: !2506, line: 62, type: !16828, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !2034)
!16828 = !DISubroutineType(types: !16829)
!16829 = !{!766}
!16830 = !DILocation(line: 64, column: 9, scope: !16827)
!16831 = !DILocation(line: 64, column: 28, scope: !16827)
!16832 = !DILocation(line: 64, column: 35, scope: !16827)
!16833 = !DILocation(line: 64, column: 2, scope: !16827)
!16834 = distinct !DISubprogram(name: "first", scope: !2506, file: !2506, line: 39, type: !16835, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16837)
!16835 = !DISubroutineType(types: !16836)
!16836 = !{!2479}
!16837 = !{!16838}
!16838 = !DILocalVariable(name: "t", scope: !16834, file: !2506, line: 41, type: !16839)
!16839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!16840 = !DILocation(line: 41, column: 19, scope: !16834)
!16841 = !DILocation(line: 0, scope: !16834)
!16842 = !DILocation(line: 43, column: 9, scope: !16834)
!16843 = !DILocation(line: 43, column: 2, scope: !16834)
!16844 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16845, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16847)
!16845 = !DISubroutineType(types: !16846)
!16846 = !{null, !16839, !16839}
!16847 = !{!16848, !16849, !16850}
!16848 = !DILocalVariable(name: "successor", arg: 1, scope: !16844, file: !127, line: 443, type: !16839)
!16849 = !DILocalVariable(name: "node", arg: 2, scope: !16844, file: !127, line: 443, type: !16839)
!16850 = !DILocalVariable(name: "prev", scope: !16844, file: !127, line: 445, type: !16851)
!16851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16839)
!16852 = !DILocation(line: 0, scope: !16844)
!16853 = !DILocation(line: 445, column: 39, scope: !16844)
!16854 = !DILocation(line: 447, column: 8, scope: !16844)
!16855 = !DILocation(line: 447, column: 13, scope: !16844)
!16856 = !DILocation(line: 448, column: 8, scope: !16844)
!16857 = !DILocation(line: 448, column: 13, scope: !16844)
!16858 = !DILocation(line: 449, column: 8, scope: !16844)
!16859 = !DILocation(line: 449, column: 13, scope: !16844)
!16860 = !DILocation(line: 450, column: 18, scope: !16844)
!16861 = !DILocation(line: 451, column: 1, scope: !16844)
!16862 = distinct !DISubprogram(name: "next", scope: !2506, file: !2506, line: 46, type: !16863, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16865)
!16863 = !DISubroutineType(types: !16864)
!16864 = !{!2479, !2479}
!16865 = !{!16866, !16867}
!16866 = !DILocalVariable(name: "t", arg: 1, scope: !16862, file: !2506, line: 46, type: !2479)
!16867 = !DILocalVariable(name: "n", scope: !16862, file: !2506, line: 48, type: !16839)
!16868 = !DILocation(line: 0, scope: !16862)
!16869 = !DILocation(line: 48, column: 58, scope: !16862)
!16870 = !DILocation(line: 48, column: 19, scope: !16862)
!16871 = !DILocation(line: 50, column: 9, scope: !16862)
!16872 = !DILocation(line: 50, column: 2, scope: !16862)
!16873 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16874, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16877)
!16874 = !DISubroutineType(types: !16875)
!16875 = !{null, !16876, !16839}
!16876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!16877 = !{!16878, !16879, !16880}
!16878 = !DILocalVariable(name: "list", arg: 1, scope: !16873, file: !127, line: 404, type: !16876)
!16879 = !DILocalVariable(name: "node", arg: 2, scope: !16873, file: !127, line: 404, type: !16839)
!16880 = !DILocalVariable(name: "tail", scope: !16873, file: !127, line: 406, type: !16851)
!16881 = !DILocation(line: 0, scope: !16873)
!16882 = !DILocation(line: 406, column: 34, scope: !16873)
!16883 = !DILocation(line: 408, column: 8, scope: !16873)
!16884 = !DILocation(line: 408, column: 13, scope: !16873)
!16885 = !DILocation(line: 409, column: 8, scope: !16873)
!16886 = !DILocation(line: 409, column: 13, scope: !16873)
!16887 = !DILocation(line: 411, column: 8, scope: !16873)
!16888 = !DILocation(line: 411, column: 13, scope: !16873)
!16889 = !DILocation(line: 412, column: 13, scope: !16873)
!16890 = !DILocation(line: 413, column: 1, scope: !16873)
!16891 = distinct !DISubprogram(name: "next_timeout", scope: !2506, file: !2506, line: 67, type: !16828, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16892)
!16892 = !{!16893, !16894, !16895}
!16893 = !DILocalVariable(name: "to", scope: !16891, file: !2506, line: 69, type: !2479)
!16894 = !DILocalVariable(name: "ticks_elapsed", scope: !16891, file: !2506, line: 70, type: !766)
!16895 = !DILocalVariable(name: "ret", scope: !16891, file: !2506, line: 71, type: !766)
!16896 = !DILocation(line: 69, column: 24, scope: !16891)
!16897 = !DILocation(line: 0, scope: !16891)
!16898 = !DILocation(line: 70, column: 26, scope: !16891)
!16899 = !DILocation(line: 73, column: 10, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16891, file: !2506, line: 73, column: 6)
!16901 = !DILocation(line: 73, column: 19, scope: !16900)
!16902 = !DILocation(line: 74, column: 21, scope: !16900)
!16903 = !DILocation(line: 74, column: 30, scope: !16900)
!16904 = !DILocation(line: 74, column: 28, scope: !16900)
!16905 = !DILocation(line: 74, column: 45, scope: !16900)
!16906 = !DILocation(line: 73, column: 6, scope: !16891)
!16907 = !DILocation(line: 77, column: 9, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16900, file: !2506, line: 76, column: 9)
!16909 = !DILocation(line: 0, scope: !16900)
!16910 = !DILocation(line: 81, column: 20, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16891, file: !2506, line: 81, column: 6)
!16912 = !DILocation(line: 81, column: 6, scope: !16911)
!16913 = !DILocation(line: 81, column: 32, scope: !16911)
!16914 = !DILocation(line: 85, column: 2, scope: !16891)
!16915 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16916, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16918)
!16916 = !DISubroutineType(types: !16917)
!16917 = !{!16839, !16876, !16839}
!16918 = !{!16919, !16920}
!16919 = !DILocalVariable(name: "list", arg: 1, scope: !16915, file: !127, line: 341, type: !16876)
!16920 = !DILocalVariable(name: "node", arg: 2, scope: !16915, file: !127, line: 342, type: !16839)
!16921 = !DILocation(line: 0, scope: !16915)
!16922 = !DILocation(line: 344, column: 15, scope: !16915)
!16923 = !DILocation(line: 344, column: 9, scope: !16915)
!16924 = !DILocation(line: 344, column: 26, scope: !16915)
!16925 = !DILocation(line: 344, column: 2, scope: !16915)
!16926 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16916, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16927)
!16927 = !{!16928, !16929}
!16928 = !DILocalVariable(name: "list", arg: 1, scope: !16926, file: !127, line: 325, type: !16876)
!16929 = !DILocalVariable(name: "node", arg: 2, scope: !16926, file: !127, line: 326, type: !16839)
!16930 = !DILocation(line: 0, scope: !16926)
!16931 = !DILocation(line: 328, column: 24, scope: !16926)
!16932 = !DILocation(line: 328, column: 15, scope: !16926)
!16933 = !DILocation(line: 328, column: 9, scope: !16926)
!16934 = !DILocation(line: 328, column: 45, scope: !16926)
!16935 = !DILocation(line: 328, column: 2, scope: !16926)
!16936 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16937, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16939)
!16937 = !DISubroutineType(types: !16938)
!16938 = !{!16839, !16876}
!16939 = !{!16940}
!16940 = !DILocalVariable(name: "list", arg: 1, scope: !16936, file: !127, line: 294, type: !16876)
!16941 = !DILocation(line: 0, scope: !16936)
!16942 = !DILocation(line: 296, column: 9, scope: !16936)
!16943 = !DILocation(line: 296, column: 2, scope: !16936)
!16944 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16945, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16947)
!16945 = !DISubroutineType(types: !16946)
!16946 = !{!347, !16876}
!16947 = !{!16948}
!16948 = !DILocalVariable(name: "list", arg: 1, scope: !16944, file: !127, line: 266, type: !16876)
!16949 = !DILocation(line: 0, scope: !16944)
!16950 = !DILocation(line: 268, column: 15, scope: !16944)
!16951 = !DILocation(line: 268, column: 20, scope: !16944)
!16952 = !DILocation(line: 268, column: 2, scope: !16944)
!16953 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2506, file: !2506, line: 150, type: !16954, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16956)
!16954 = !DISubroutineType(types: !16955)
!16955 = !{!109, !2479}
!16956 = !{!16957, !16958, !16959, !16961}
!16957 = !DILocalVariable(name: "to", arg: 1, scope: !16953, file: !2506, line: 150, type: !2479)
!16958 = !DILocalVariable(name: "ret", scope: !16953, file: !2506, line: 152, type: !109)
!16959 = !DILocalVariable(name: "__i", scope: !16960, file: !2506, line: 154, type: !16694)
!16960 = distinct !DILexicalBlock(scope: !16953, file: !2506, line: 154, column: 2)
!16961 = !DILocalVariable(name: "__key", scope: !16960, file: !2506, line: 154, type: !16694)
!16962 = !DILocation(line: 0, scope: !16953)
!16963 = !DILocation(line: 0, scope: !16960)
!16964 = !DILocation(line: 0, scope: !16722, inlinedAt: !16965)
!16965 = distinct !DILocation(line: 154, column: 2, scope: !16960)
!16966 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !16967)
!16967 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !16965)
!16968 = !DILocation(line: 0, scope: !16731, inlinedAt: !16967)
!16969 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !16965)
!16970 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !16965)
!16971 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !16965)
!16972 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !16965)
!16973 = !DILocation(line: 155, column: 7, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16975, file: !2506, line: 155, column: 7)
!16975 = distinct !DILexicalBlock(scope: !16976, file: !2506, line: 154, column: 24)
!16976 = distinct !DILexicalBlock(scope: !16960, file: !2506, line: 154, column: 2)
!16977 = !DILocation(line: 155, column: 7, scope: !16975)
!16978 = !DILocation(line: 156, column: 4, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16974, file: !2506, line: 155, column: 39)
!16980 = !DILocation(line: 158, column: 3, scope: !16979)
!16981 = !DILocation(line: 0, scope: !16795, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 154, column: 2, scope: !16976)
!16983 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !16982)
!16984 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !16982)
!16985 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !16982)
!16986 = !DILocation(line: 0, scope: !16809, inlinedAt: !16987)
!16987 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !16982)
!16988 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !16987)
!16989 = !DILocation(line: 161, column: 2, scope: !16953)
!16990 = distinct !DISubprogram(name: "remove_timeout", scope: !2506, file: !2506, line: 53, type: !2500, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !16991)
!16991 = !{!16992}
!16992 = !DILocalVariable(name: "t", arg: 1, scope: !16990, file: !2506, line: 53, type: !2479)
!16993 = !DILocation(line: 0, scope: !16990)
!16994 = !DILocation(line: 55, column: 6, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16990, file: !2506, line: 55, column: 6)
!16996 = !DILocation(line: 55, column: 14, scope: !16995)
!16997 = !DILocation(line: 55, column: 6, scope: !16990)
!16998 = !DILocation(line: 56, column: 25, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16995, file: !2506, line: 55, column: 23)
!17000 = !DILocation(line: 56, column: 12, scope: !16999)
!17001 = !DILocation(line: 56, column: 19, scope: !16999)
!17002 = !DILocation(line: 57, column: 2, scope: !16999)
!17003 = !DILocation(line: 59, column: 23, scope: !16990)
!17004 = !DILocation(line: 59, column: 2, scope: !16990)
!17005 = !DILocation(line: 60, column: 1, scope: !16990)
!17006 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17007, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17009)
!17007 = !DISubroutineType(types: !17008)
!17008 = !{null, !16839}
!17009 = !{!17010, !17011, !17012}
!17010 = !DILocalVariable(name: "node", arg: 1, scope: !17006, file: !127, line: 496, type: !16839)
!17011 = !DILocalVariable(name: "prev", scope: !17006, file: !127, line: 498, type: !16851)
!17012 = !DILocalVariable(name: "next", scope: !17006, file: !127, line: 499, type: !16851)
!17013 = !DILocation(line: 0, scope: !17006)
!17014 = !DILocation(line: 498, column: 34, scope: !17006)
!17015 = !DILocation(line: 499, column: 34, scope: !17006)
!17016 = !DILocation(line: 501, column: 8, scope: !17006)
!17017 = !DILocation(line: 501, column: 13, scope: !17006)
!17018 = !DILocation(line: 502, column: 8, scope: !17006)
!17019 = !DILocation(line: 502, column: 13, scope: !17006)
!17020 = !DILocation(line: 503, column: 2, scope: !17006)
!17021 = !DILocation(line: 504, column: 1, scope: !17006)
!17022 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17007, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17023)
!17023 = !{!17024}
!17024 = !DILocalVariable(name: "node", arg: 1, scope: !17022, file: !127, line: 211, type: !16839)
!17025 = !DILocation(line: 0, scope: !17022)
!17026 = !DILocation(line: 213, column: 8, scope: !17022)
!17027 = !DILocation(line: 213, column: 13, scope: !17022)
!17028 = !DILocation(line: 214, column: 8, scope: !17022)
!17029 = !DILocation(line: 214, column: 13, scope: !17022)
!17030 = !DILocation(line: 215, column: 1, scope: !17022)
!17031 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2506, file: !2506, line: 183, type: !17032, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17036)
!17032 = !DISubroutineType(types: !17033)
!17033 = !{!103, !17034}
!17034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17035, size: 32)
!17035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2480)
!17036 = !{!17037, !17038, !17039, !17041}
!17037 = !DILocalVariable(name: "timeout", arg: 1, scope: !17031, file: !2506, line: 183, type: !17034)
!17038 = !DILocalVariable(name: "ticks", scope: !17031, file: !2506, line: 185, type: !103)
!17039 = !DILocalVariable(name: "__i", scope: !17040, file: !2506, line: 187, type: !16694)
!17040 = distinct !DILexicalBlock(scope: !17031, file: !2506, line: 187, column: 2)
!17041 = !DILocalVariable(name: "__key", scope: !17040, file: !2506, line: 187, type: !16694)
!17042 = !DILocation(line: 0, scope: !17031)
!17043 = !DILocation(line: 0, scope: !17040)
!17044 = !DILocation(line: 0, scope: !16722, inlinedAt: !17045)
!17045 = distinct !DILocation(line: 187, column: 2, scope: !17040)
!17046 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17047)
!17047 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17045)
!17048 = !DILocation(line: 0, scope: !16731, inlinedAt: !17047)
!17049 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17045)
!17050 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17045)
!17051 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17045)
!17052 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17045)
!17053 = !DILocation(line: 188, column: 11, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17055, file: !2506, line: 187, column: 24)
!17055 = distinct !DILexicalBlock(scope: !17040, file: !2506, line: 187, column: 2)
!17056 = !DILocation(line: 0, scope: !16795, inlinedAt: !17057)
!17057 = distinct !DILocation(line: 187, column: 2, scope: !17055)
!17058 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17057)
!17059 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17057)
!17060 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17057)
!17061 = !DILocation(line: 0, scope: !16809, inlinedAt: !17062)
!17062 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17057)
!17063 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17062)
!17064 = !DILocation(line: 191, column: 2, scope: !17031)
!17065 = distinct !DISubprogram(name: "timeout_rem", scope: !2506, file: !2506, line: 165, type: !17032, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17066)
!17066 = !{!17067, !17068, !17069}
!17067 = !DILocalVariable(name: "timeout", arg: 1, scope: !17065, file: !2506, line: 165, type: !17034)
!17068 = !DILocalVariable(name: "ticks", scope: !17065, file: !2506, line: 167, type: !103)
!17069 = !DILocalVariable(name: "t", scope: !17070, file: !2506, line: 173, type: !2479)
!17070 = distinct !DILexicalBlock(scope: !17065, file: !2506, line: 173, column: 2)
!17071 = !DILocation(line: 0, scope: !17065)
!17072 = !DILocation(line: 169, column: 6, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17065, file: !2506, line: 169, column: 6)
!17074 = !DILocation(line: 169, column: 6, scope: !17065)
!17075 = !DILocation(line: 173, column: 28, scope: !17070)
!17076 = !DILocation(line: 0, scope: !17070)
!17077 = !DILocation(line: 173, column: 39, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17070, file: !2506, line: 173, column: 2)
!17079 = !DILocation(line: 173, column: 2, scope: !17070)
!17080 = !DILocation(line: 174, column: 15, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17078, file: !2506, line: 173, column: 61)
!17082 = !DILocation(line: 174, column: 9, scope: !17081)
!17083 = !DILocation(line: 175, column: 15, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17081, file: !2506, line: 175, column: 7)
!17085 = !DILocation(line: 175, column: 7, scope: !17081)
!17086 = !DILocation(line: 173, column: 52, scope: !17078)
!17087 = distinct !{!17087, !17079, !17088}
!17088 = !DILocation(line: 178, column: 2, scope: !17070)
!17089 = !DILocation(line: 180, column: 17, scope: !17065)
!17090 = !DILocation(line: 180, column: 15, scope: !17065)
!17091 = !DILocation(line: 180, column: 2, scope: !17065)
!17092 = !DILocation(line: 181, column: 1, scope: !17065)
!17093 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13254, file: !13254, line: 35, type: !17094, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17096)
!17094 = !DISubroutineType(types: !17095)
!17095 = !{!347, !17034}
!17096 = !{!17097}
!17097 = !DILocalVariable(name: "to", arg: 1, scope: !17093, file: !13254, line: 35, type: !17034)
!17098 = !DILocation(line: 0, scope: !17093)
!17099 = !DILocation(line: 37, column: 35, scope: !17093)
!17100 = !DILocation(line: 37, column: 10, scope: !17093)
!17101 = !DILocation(line: 37, column: 9, scope: !17093)
!17102 = !DILocation(line: 37, column: 2, scope: !17093)
!17103 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2506, file: !2506, line: 194, type: !17032, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17104)
!17104 = !{!17105, !17106, !17107, !17109}
!17105 = !DILocalVariable(name: "timeout", arg: 1, scope: !17103, file: !2506, line: 194, type: !17034)
!17106 = !DILocalVariable(name: "ticks", scope: !17103, file: !2506, line: 196, type: !103)
!17107 = !DILocalVariable(name: "__i", scope: !17108, file: !2506, line: 198, type: !16694)
!17108 = distinct !DILexicalBlock(scope: !17103, file: !2506, line: 198, column: 2)
!17109 = !DILocalVariable(name: "__key", scope: !17108, file: !2506, line: 198, type: !16694)
!17110 = !DILocation(line: 0, scope: !17103)
!17111 = !DILocation(line: 0, scope: !17108)
!17112 = !DILocation(line: 0, scope: !16722, inlinedAt: !17113)
!17113 = distinct !DILocation(line: 198, column: 2, scope: !17108)
!17114 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17115)
!17115 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17113)
!17116 = !DILocation(line: 0, scope: !16731, inlinedAt: !17115)
!17117 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17113)
!17118 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17113)
!17119 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17113)
!17120 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17113)
!17121 = !DILocation(line: 199, column: 11, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17123, file: !2506, line: 198, column: 24)
!17123 = distinct !DILexicalBlock(scope: !17108, file: !2506, line: 198, column: 2)
!17124 = !DILocation(line: 199, column: 23, scope: !17122)
!17125 = !DILocation(line: 0, scope: !16795, inlinedAt: !17126)
!17126 = distinct !DILocation(line: 198, column: 2, scope: !17123)
!17127 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17126)
!17128 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17126)
!17129 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17126)
!17130 = !DILocation(line: 0, scope: !16809, inlinedAt: !17131)
!17131 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17126)
!17132 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17131)
!17133 = !DILocation(line: 199, column: 21, scope: !17122)
!17134 = !DILocation(line: 202, column: 2, scope: !17103)
!17135 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2506, file: !2506, line: 205, type: !16828, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17136)
!17136 = !{!17137, !17138, !17140}
!17137 = !DILocalVariable(name: "ret", scope: !17135, file: !2506, line: 207, type: !766)
!17138 = !DILocalVariable(name: "__i", scope: !17139, file: !2506, line: 209, type: !16694)
!17139 = distinct !DILexicalBlock(scope: !17135, file: !2506, line: 209, column: 2)
!17140 = !DILocalVariable(name: "__key", scope: !17139, file: !2506, line: 209, type: !16694)
!17141 = !DILocation(line: 0, scope: !17135)
!17142 = !DILocation(line: 0, scope: !17139)
!17143 = !DILocation(line: 0, scope: !16722, inlinedAt: !17144)
!17144 = distinct !DILocation(line: 209, column: 2, scope: !17139)
!17145 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17144)
!17147 = !DILocation(line: 0, scope: !16731, inlinedAt: !17146)
!17148 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17144)
!17149 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17144)
!17150 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17144)
!17151 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17144)
!17152 = !DILocation(line: 210, column: 9, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17154, file: !2506, line: 209, column: 24)
!17154 = distinct !DILexicalBlock(scope: !17139, file: !2506, line: 209, column: 2)
!17155 = !DILocation(line: 0, scope: !16795, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 209, column: 2, scope: !17154)
!17157 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17156)
!17158 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17156)
!17159 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17156)
!17160 = !DILocation(line: 0, scope: !16809, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17156)
!17162 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17161)
!17163 = !DILocation(line: 212, column: 2, scope: !17135)
!17164 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2506, file: !2506, line: 215, type: !10731, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17165)
!17165 = !{!17166, !17167, !17168, !17170, !17171, !17174, !17175}
!17166 = !DILocalVariable(name: "ticks", arg: 1, scope: !17164, file: !2506, line: 215, type: !766)
!17167 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17164, file: !2506, line: 215, type: !347)
!17168 = !DILocalVariable(name: "__i", scope: !17169, file: !2506, line: 217, type: !16694)
!17169 = distinct !DILexicalBlock(scope: !17164, file: !2506, line: 217, column: 2)
!17170 = !DILocalVariable(name: "__key", scope: !17169, file: !2506, line: 217, type: !16694)
!17171 = !DILocalVariable(name: "next_to", scope: !17172, file: !2506, line: 218, type: !109)
!17172 = distinct !DILexicalBlock(scope: !17173, file: !2506, line: 217, column: 24)
!17173 = distinct !DILexicalBlock(scope: !17169, file: !2506, line: 217, column: 2)
!17174 = !DILocalVariable(name: "sooner", scope: !17172, file: !2506, line: 219, type: !347)
!17175 = !DILocalVariable(name: "imminent", scope: !17172, file: !2506, line: 221, type: !347)
!17176 = !DILocation(line: 0, scope: !17164)
!17177 = !DILocation(line: 0, scope: !17169)
!17178 = !DILocation(line: 0, scope: !16722, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 217, column: 2, scope: !17169)
!17180 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17179)
!17182 = !DILocation(line: 0, scope: !16731, inlinedAt: !17181)
!17183 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17179)
!17184 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17179)
!17185 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17179)
!17186 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17179)
!17187 = !DILocation(line: 218, column: 17, scope: !17172)
!17188 = !DILocation(line: 0, scope: !17172)
!17189 = !DILocation(line: 221, column: 27, scope: !17172)
!17190 = !DILocation(line: 233, column: 17, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17172, file: !2506, line: 233, column: 7)
!17192 = !DILocation(line: 234, column: 26, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17191, file: !2506, line: 233, column: 56)
!17194 = !DILocation(line: 234, column: 4, scope: !17193)
!17195 = !DILocation(line: 235, column: 3, scope: !17193)
!17196 = !DILocation(line: 0, scope: !16795, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 217, column: 2, scope: !17173)
!17198 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17197)
!17199 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17197)
!17200 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17197)
!17201 = !DILocation(line: 0, scope: !16809, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17197)
!17203 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17202)
!17204 = !DILocation(line: 237, column: 1, scope: !17164)
!17205 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2506, file: !2506, line: 239, type: !17206, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17208)
!17206 = !DISubroutineType(types: !17207)
!17207 = !{null, !766}
!17208 = !{!17209, !17210, !17211, !17213}
!17209 = !DILocalVariable(name: "ticks", arg: 1, scope: !17205, file: !2506, line: 239, type: !766)
!17210 = !DILocalVariable(name: "key", scope: !17205, file: !2506, line: 245, type: !16694)
!17211 = !DILocalVariable(name: "t", scope: !17212, file: !2506, line: 262, type: !2479)
!17212 = distinct !DILexicalBlock(scope: !17205, file: !2506, line: 261, column: 67)
!17213 = !DILocalVariable(name: "dt", scope: !17212, file: !2506, line: 263, type: !109)
!17214 = !DILocation(line: 0, scope: !17205)
!17215 = !DILocation(line: 242, column: 2, scope: !17205)
!17216 = !DILocation(line: 0, scope: !16722, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 245, column: 25, scope: !17205)
!17218 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17217)
!17220 = !DILocation(line: 0, scope: !16731, inlinedAt: !17219)
!17221 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17217)
!17222 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17217)
!17223 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17217)
!17224 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17217)
!17225 = !DILocation(line: 261, column: 9, scope: !17205)
!17226 = !DILocation(line: 261, column: 17, scope: !17205)
!17227 = !DILocation(line: 261, column: 25, scope: !17205)
!17228 = !DILocation(line: 261, column: 37, scope: !17205)
!17229 = !DILocation(line: 261, column: 47, scope: !17205)
!17230 = !DILocation(line: 261, column: 44, scope: !17205)
!17231 = !DILocation(line: 261, column: 2, scope: !17205)
!17232 = !DILocation(line: 0, scope: !17212)
!17233 = !DILocation(line: 263, column: 12, scope: !17212)
!17234 = !DILocation(line: 265, column: 16, scope: !17212)
!17235 = !DILocation(line: 265, column: 13, scope: !17212)
!17236 = !DILocation(line: 266, column: 13, scope: !17212)
!17237 = !DILocation(line: 267, column: 3, scope: !17212)
!17238 = !DILocation(line: 0, scope: !16795, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 269, column: 3, scope: !17212)
!17240 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17239)
!17241 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17239)
!17242 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17239)
!17243 = !DILocation(line: 0, scope: !16809, inlinedAt: !17244)
!17244 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17239)
!17245 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17244)
!17246 = !DILocation(line: 270, column: 6, scope: !17212)
!17247 = !DILocation(line: 270, column: 3, scope: !17212)
!17248 = !DILocation(line: 0, scope: !16722, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 271, column: 9, scope: !17212)
!17250 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17249)
!17252 = !DILocation(line: 0, scope: !16731, inlinedAt: !17251)
!17253 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17249)
!17254 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17249)
!17255 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17249)
!17256 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17249)
!17257 = !DILocation(line: 272, column: 22, scope: !17212)
!17258 = distinct !{!17258, !17231, !17259}
!17259 = !DILocation(line: 273, column: 2, scope: !17205)
!17260 = !DILocation(line: 276, column: 19, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17262, file: !2506, line: 275, column: 23)
!17262 = distinct !DILexicalBlock(scope: !17205, file: !2506, line: 275, column: 6)
!17263 = !DILocation(line: 277, column: 2, scope: !17261)
!17264 = !DILocation(line: 279, column: 15, scope: !17205)
!17265 = !DILocation(line: 279, column: 12, scope: !17205)
!17266 = !DILocation(line: 280, column: 21, scope: !17205)
!17267 = !DILocation(line: 282, column: 24, scope: !17205)
!17268 = !DILocation(line: 282, column: 2, scope: !17205)
!17269 = !DILocation(line: 0, scope: !16795, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 284, column: 2, scope: !17205)
!17271 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17270)
!17272 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17270)
!17273 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17270)
!17274 = !DILocation(line: 0, scope: !16809, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17270)
!17276 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17275)
!17277 = !DILocation(line: 285, column: 1, scope: !17205)
!17278 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2506, file: !2506, line: 287, type: !17279, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17281)
!17279 = !DISubroutineType(types: !17280)
!17280 = !{!105}
!17281 = !{!17282, !17283, !17285}
!17282 = !DILocalVariable(name: "t", scope: !17278, file: !2506, line: 289, type: !111)
!17283 = !DILocalVariable(name: "__i", scope: !17284, file: !2506, line: 291, type: !16694)
!17284 = distinct !DILexicalBlock(scope: !17278, file: !2506, line: 291, column: 2)
!17285 = !DILocalVariable(name: "__key", scope: !17284, file: !2506, line: 291, type: !16694)
!17286 = !DILocation(line: 0, scope: !17278)
!17287 = !DILocation(line: 0, scope: !17284)
!17288 = !DILocation(line: 0, scope: !16722, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 291, column: 2, scope: !17284)
!17290 = !DILocation(line: 55, column: 2, scope: !16731, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 145, column: 10, scope: !16722, inlinedAt: !17289)
!17292 = !DILocation(line: 0, scope: !16731, inlinedAt: !17291)
!17293 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17289)
!17294 = !DILocation(line: 148, column: 2, scope: !16740, inlinedAt: !17289)
!17295 = !DILocation(line: 148, column: 2, scope: !16743, inlinedAt: !17289)
!17296 = !DILocation(line: 160, column: 2, scope: !16722, inlinedAt: !17289)
!17297 = !DILocation(line: 292, column: 7, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17299, file: !2506, line: 291, column: 24)
!17299 = distinct !DILexicalBlock(scope: !17284, file: !2506, line: 291, column: 2)
!17300 = !DILocation(line: 292, column: 19, scope: !17298)
!17301 = !DILocation(line: 0, scope: !16795, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 291, column: 2, scope: !17299)
!17303 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17302)
!17304 = !DILocation(line: 194, column: 2, scope: !16804, inlinedAt: !17302)
!17305 = !DILocation(line: 194, column: 2, scope: !16807, inlinedAt: !17302)
!17306 = !DILocation(line: 0, scope: !16809, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 215, column: 2, scope: !16795, inlinedAt: !17302)
!17308 = !DILocation(line: 95, column: 2, scope: !16809, inlinedAt: !17307)
!17309 = !DILocation(line: 292, column: 17, scope: !17298)
!17310 = !DILocation(line: 294, column: 2, scope: !17278)
!17311 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2506, file: !2506, line: 297, type: !6504, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !2034)
!17312 = !DILocation(line: 300, column: 19, scope: !17311)
!17313 = !DILocation(line: 300, column: 9, scope: !17311)
!17314 = !DILocation(line: 300, column: 2, scope: !17311)
!17315 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2506, file: !2506, line: 306, type: !17279, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !2034)
!17316 = !DILocation(line: 308, column: 9, scope: !17315)
!17317 = !DILocation(line: 308, column: 2, scope: !17315)
!17318 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2506, file: !2506, line: 319, type: !6514, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17319)
!17319 = !{!17320, !17321, !17322, !17323}
!17320 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17318, file: !2506, line: 319, type: !110)
!17321 = !DILocalVariable(name: "start_cycles", scope: !17318, file: !2506, line: 328, type: !110)
!17322 = !DILocalVariable(name: "cycles_to_wait", scope: !17318, file: !2506, line: 331, type: !110)
!17323 = !DILocalVariable(name: "current_cycles", scope: !17324, file: !2506, line: 338, type: !110)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !2506, line: 337, column: 11)
!17325 = distinct !DILexicalBlock(scope: !17326, file: !2506, line: 337, column: 2)
!17326 = distinct !DILexicalBlock(scope: !17318, file: !2506, line: 337, column: 2)
!17327 = !DILocation(line: 0, scope: !17318)
!17328 = !DILocation(line: 322, column: 19, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17318, file: !2506, line: 322, column: 6)
!17330 = !DILocation(line: 322, column: 6, scope: !17318)
!17331 = !DILocation(line: 328, column: 26, scope: !17318)
!17332 = !DILocation(line: 333, column: 43, scope: !17318)
!17333 = !DILocation(line: 337, column: 2, scope: !17318)
!17334 = !DILocation(line: 338, column: 29, scope: !17324)
!17335 = !DILocation(line: 0, scope: !17324)
!17336 = !DILocation(line: 341, column: 23, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17324, file: !2506, line: 341, column: 7)
!17338 = !DILocation(line: 341, column: 39, scope: !17337)
!17339 = !DILocation(line: 349, column: 1, scope: !17318)
!17340 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6504, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !2034)
!17341 = !DILocation(line: 1677, column: 9, scope: !17340)
!17342 = !DILocation(line: 1677, column: 2, scope: !17340)
!17343 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17344, file: !17344, line: 24, type: !6504, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !2034)
!17344 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17345 = !DILocation(line: 26, column: 9, scope: !17343)
!17346 = !DILocation(line: 26, column: 2, scope: !17343)
!17347 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2506, file: !2506, line: 364, type: !17348, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !17350)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{!111, !16684}
!17350 = !{!17351, !17352}
!17351 = !DILocalVariable(name: "timeout", arg: 1, scope: !17347, file: !2506, line: 364, type: !16684)
!17352 = !DILocalVariable(name: "dt", scope: !17347, file: !2506, line: 366, type: !103)
!17353 = !DILocation(line: 0, scope: !17347)
!17354 = !DILocation(line: 368, column: 6, scope: !17347)
!17355 = !DILocation(line: 371, column: 10, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17357, file: !2506, line: 370, column: 47)
!17357 = distinct !DILexicalBlock(scope: !17358, file: !2506, line: 370, column: 13)
!17358 = distinct !DILexicalBlock(scope: !17347, file: !2506, line: 368, column: 6)
!17359 = !DILocation(line: 371, column: 3, scope: !17356)
!17360 = !DILocation(line: 376, column: 58, scope: !17361)
!17361 = distinct !DILexicalBlock(scope: !17362, file: !2506, line: 376, column: 7)
!17362 = distinct !DILexicalBlock(scope: !17357, file: !2506, line: 372, column: 9)
!17363 = !DILocation(line: 376, column: 7, scope: !17362)
!17364 = !DILocation(line: 376, column: 43, scope: !17361)
!17365 = !DILocation(line: 377, column: 4, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17361, file: !2506, line: 376, column: 64)
!17367 = !DILocation(line: 379, column: 10, scope: !17362)
!17368 = !DILocation(line: 379, column: 33, scope: !17362)
!17369 = !DILocation(line: 379, column: 31, scope: !17362)
!17370 = !DILocation(line: 379, column: 3, scope: !17362)
!17371 = !DILocation(line: 0, scope: !17358)
!17372 = !DILocation(line: 381, column: 1, scope: !17347)
!17373 = distinct !DISubprogram(name: "boot_banner", scope: !17374, file: !17374, line: 26, type: !3094, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3080, retainedNodes: !2034)
!17374 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17375 = !DILocation(line: 34, column: 2, scope: !17373)
!17376 = !DILocation(line: 36, column: 1, scope: !17373)
